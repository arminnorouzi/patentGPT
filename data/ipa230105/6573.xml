<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006574A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006574</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17810129</doc-number><date>20220630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>02</class><subclass>P</subclass><main-group>6</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>02</class><subclass>P</subclass><main-group>23</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>02</class><subclass>P</subclass><main-group>6</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>02</class><subclass>P</subclass><main-group>23</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SMART MOTOR SYSTEMS AND METHODS USING LOCAL INTELLIGENCE</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217201</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>LEGGETT &#x26; PLATT CANADA CO.</orgname><address><city>HALIFAX</city><country>CA</country></address></addressbook><residence><country>CA</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Braun</last-name><first-name>Thomas</first-name><address><city>Heroldsberg</city><country>DE</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Vicary</last-name><first-name>Caitlin Nicole</first-name><address><city>Sarnia</city><country>CA</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Niec</last-name><first-name>Milosz</first-name><address><city>Tecumseh</city><country>CA</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods for controlling smart motors. One smart motor system includes a control bus, an input device, and a smart motor communicatively coupled to the input device via the control bus. The smart motor includes an electronic processor configured to receive, from the input device, a command frame indicating an action, perform the action, receive, from the input device, a data request frame requesting a status of the smart motor, and transmit, to the input device and in response to receiving the data request frame, a data frame indicating the status of the smart motor.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="79.76mm" wi="158.75mm" file="US20230006574A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="202.52mm" wi="121.50mm" orientation="landscape" file="US20230006574A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="202.52mm" wi="119.21mm" orientation="landscape" file="US20230006574A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="180.42mm" wi="138.09mm" orientation="landscape" file="US20230006574A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="168.91mm" wi="112.18mm" orientation="landscape" file="US20230006574A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="206.25mm" wi="131.66mm" file="US20230006574A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="208.87mm" wi="140.89mm" file="US20230006574A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="213.36mm" wi="145.37mm" orientation="landscape" file="US20230006574A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="142.07mm" wi="96.60mm" file="US20230006574A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="221.83mm" wi="127.17mm" orientation="landscape" file="US20230006574A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="181.36mm" wi="105.92mm" orientation="landscape" file="US20230006574A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="181.44mm" wi="106.00mm" orientation="landscape" file="US20230006574A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="224.28mm" wi="108.80mm" orientation="landscape" file="US20230006574A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="236.22mm" wi="150.11mm" orientation="landscape" file="US20230006574A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="131.83mm" wi="88.31mm" orientation="landscape" file="US20230006574A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="215.90mm" wi="77.13mm" orientation="landscape" file="US20230006574A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="214.38mm" wi="130.13mm" orientation="landscape" file="US20230006574A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="235.12mm" wi="74.17mm" orientation="landscape" file="US20230006574A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="229.79mm" wi="123.02mm" orientation="landscape" file="US20230006574A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="194.31mm" wi="138.09mm" orientation="landscape" file="US20230006574A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Application No. 63/217,201, filed Jun. 30, 2021, the entire contents of which are hereby incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Modern vehicles and other machinery use motors to displace loads and/or additional system components based on received inputs. For example, motors may be used in an automobile to control the position, pitch, and/or supports of a seat. Additionally, some motors may be used in automobiles to open and close doors or trunks. Motors may also be used in automobiles to control the raising or lowering of windows, the pitch/angle placement of mirrors, or the control of locks.</p><p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a known motor system <b>100</b> implemented in a vehicle. The motor system <b>100</b> includes, for example, a controller <b>105</b> (for example, an electronic controller, a programmable microprocessor, a microcontroller, an electronic processor, or other suitable device), an input device <b>110</b>, one or more switches <b>115</b>, and a seat <b>120</b>. The input device <b>110</b> may be, for example, a human-machine interface (HMI), such as a touch screen configured to receive touch inputs. In some instances, the input device <b>110</b> is integrated within the vehicle. The one or more switches <b>115</b> may be, for example, push-buttons, toggle switches, levers, or another type of input device associated with a predetermined command or function. The one or more switches <b>115</b> may be located on the seat <b>120</b>, on a dashboard of the vehicle, implemented within doors of the vehicle, or the like.</p><p id="p-0005" num="0004">The controller <b>105</b> receives control signals from the input device <b>110</b> and/or the one or more switches <b>115</b>. The control signals are provided to the controller <b>105</b> via an electrical harness or similar connection. The controller <b>105</b> controls the motors within the vehicle motor system <b>100</b> based on the control signals. For example, the seat <b>120</b> may include a plurality of motors <b>125</b>, such as a first motor <b>125</b>A, a second motor <b>125</b>B, a third motor <b>125</b>C, a fourth motor <b>125</b>D, and a fifth motor <b>125</b>E. In the example shown, the first motor <b>125</b>A causes movement of a head rest of the seat <b>120</b>. The second motor <b>125</b>B causes movement of an upper back portion of the seat <b>120</b>. The third motor <b>125</b>C causes movement of a middle back portion of the seat <b>120</b>. The fourth motor <b>125</b>D causes movement of a lower back portion of the seat <b>120</b>. The fifth motor <b>125</b>E causes of a sitting portion of the seat <b>120</b>. Based on the control signals from the input device <b>110</b> and/or the one or more switches <b>115</b>, the controller <b>105</b> controls each motor of the plurality of motors <b>125</b> to adjust the position of the seat <b>120</b>. The controller <b>105</b> controls power and position signals to each of the plurality of motors <b>125</b> via independent connections. In this manner, each motor <b>125</b>A-<b>125</b>E receives commands (or command signals) from the controller <b>105</b> that are intended only for the selected motor. For example, should the controller <b>105</b> receive a control signal from the input device <b>110</b> and/or the switches <b>115</b> to adjust the head rest of the seat <b>120</b>, the controller <b>105</b> provides power and/or a command signal to only the first motor <b>125</b>A. As should be apparent, in the motor system <b>100</b>, the control intelligence for the motors <b>125</b> is centralized in the controller <b>105</b> and each motor <b>125</b> is pre-configured to perform a single function (for example, move a head rest).</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">Individual control of each motor within the system limits the number of controllable motors to the size (e.g., number of input/output terminals) of the system controller. Accordingly, multiple controllers may be needed to control a given number of motors. Additionally, data packets transmitted to the motors are large, requiring multiple frames for each motor. Examples described herein provide for a dynamic configuration of smart motors without the need for a centralized controller. The smart motors communicate over a control bus, such as a LIN bus. Data packets transmitted over the LIN bus include a plurality of frames detailing an operation to be performed and an intended recipient.</p><p id="p-0007" num="0006">One example provides a smart motor system comprising an input device and plurality of smart motors communicatively coupled to the input device. Each smart motor of the plurality of smart motors includes an electronic processor and a memory. The electronic processor of each smart motor is configured to receive, from the input device, a control command, determine whether the control command is intended for the respective smart motor, and, in response to determining the control command is intended for the respective smart motor, activate the smart motor based on a function included in the control command.</p><p id="p-0008" num="0007">One example provides a smart motor system comprising a control bus, an input device, and a smart motor. The smart motor is communicatively coupled to the input device via the control bus. The smart motor includes an electronic processor. The electronic processor is configured to receive, from the input device, a command frame indicating an action, perform the action, receive, from the input device, a data frame requesting a status of the smart motor, and transmit, to the input device and in response to receiving the data request frame, a data frame indicating the status of the smart motor.</p><p id="p-0009" num="0008">Another example provides a smart motor system comprising a control bus, and input device, and a plurality of smart motors. The plurality of smart motors is communicatively coupled to the input device via the control bus. Each respective smart motor includes an electronic processor. The electronic processor is configured to receive, from the input device, a command frame indicating an action, determine whether to perform the action, receive, from the input device, a data request frame requesting a status of the respective smart motor of the plurality of smart motors, and transmit, to the input device and in response to receiving the data request frame, a data frame indicating the status of the respective smart motor.</p><p id="p-0010" num="0009">Another example provides a method for communicating on a control bus. The method comprises receiving, from an input device, a command frame indicating an action, performing the action, receiving, from the input device, a data request frame requesting a status of a smart motor, and transmitting, to the input device and in response to receiving the data request frame, a data frame indicating the status of the smart motor.</p><p id="p-0011" num="0010">Other features, aspects, embodiments, and benefits will become apparent by consideration of the detailed description and accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of a known motor system.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram of a smart motor system, according to some examples.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a smart motor of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, according to some examples.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of the architecture of a smart motor of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, according to some examples.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of the hardware layer of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, according to some examples.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of the operating layer of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, according to some examples.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of the application layer of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, according to some examples.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of a method performed by the electronic processor of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, according to some examples.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating a plurality of data frames communicated over the smart motor system of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, according to some examples.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram of a write data command frame, according to some examples.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram of a read data request command frame, according to some examples.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagram of a read data command frame, according to some examples.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a chart of a plurality of data frames communicated over the smart motor system of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, according to some examples.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram of an IDLE command frame, according to some examples.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a diagram of a communication protocol conducted over the smart motor system of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, according to some examples.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a chart of an example write data command frame, according to some examples.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a chart of an example read data command frame.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a plan view of a vehicle implementing a smart motor system, according to some examples.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0030" num="0029">One or more aspects, features, and embodiments are described and illustrated in the following description and accompanying drawings. These aspects, features, and embodiments are not limited to the specific details provided herein and may be modified in various ways. Furthermore, other aspects, features, and embodiments may exist that are not described herein. For example, a device or structure that is &#x201c;configured&#x201d; in a certain way is configured in at least that way but may also be configured in ways that are not listed. Furthermore, some instances described herein may include one or more electronic processors configured to perform the described functionality by executing instructions stored in non-transitory, computer-readable medium. Similarly, examples described herein may be implemented as non-transitory, computer-readable medium storing instructions executable by one or more electronic processors to perform the described functionality. As used in the present application, &#x201c;non-transitory computer-readable medium&#x201d; comprises all computer-readable media but does not include a transitory, propagating signal. Accordingly, non-transitory computer-readable medium may include, for example, a hard disk, a CD-ROM, an optical storage device, a magnetic storage device, ROM (Read Only Memory), RAM (Random Access Memory), register memory, a processor cache, other memory and storage devices, or combinations thereof.</p><p id="p-0031" num="0030">In addition, the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. For example, the use of &#x201c;including,&#x201d; &#x201c;containing,&#x201d; &#x201c;comprising,&#x201d; &#x201c;having,&#x201d; and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional items. The terms &#x201c;connected&#x201d; and &#x201c;coupled&#x201d; are used broadly and encompass both direct and indirect connecting and coupling. Further, &#x201c;connected&#x201d; and &#x201c;coupled&#x201d; are not restricted to physical or mechanical connections or couplings and can include electrical connections or couplings, whether direct or indirect. In addition, electronic communications and notifications may be performed using wired connections, wireless connections, or a combination thereof and may be transmitted directly or through one or more intermediary devices over various types of networks, communication channels, and connections. Moreover, relational terms, for example, first and second, top and bottom, and the like may be used herein solely to distinguish one entity or action from another entity or action without necessarily requiring or implying any actual such relationship or order between such entities or actions.</p><p id="p-0032" num="0031">In some instances, method steps are conducted in an order that is different from the order described.</p><p id="p-0033" num="0032">As noted above, some vehicles such as automobiles may use motors to adjust or move the position of a seat. <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a smart motor system <b>200</b> according to some examples. The smart motor system <b>200</b> includes an input device <b>110</b>, one or more switches <b>115</b>, and a seat <b>120</b>. The seat <b>120</b> includes a plurality of smart motors <b>210</b>, such as a first smart motor <b>210</b>A, a second smart motor <b>210</b>B, a third smart motor <b>210</b>C, a fourth smart motor <b>210</b>D, and a fifth smart motor <b>210</b>E. The first smart motor <b>210</b>A controls and causes movement of a head rest of the seat <b>120</b>. The second smart motor <b>210</b>B controls and causes movement of an upper portion of the seat <b>120</b>. The third smart motor <b>210</b>C controls and causes movement of a middle portion of the seat <b>120</b>. The fourth smart motor <b>210</b>D controls and causes movement of a lower portion of the seat <b>120</b>. The fifth smart motor <b>210</b>E controls and causes movement of a sitting portion of the seat <b>120</b>. The input device <b>110</b>, the one or more switches <b>115</b>, and each of the plurality of smart motors <b>210</b> are communicatively connected via a control bus <b>205</b>. The control bus <b>205</b> may be, for example, a CAN bus, a LIN bus, or another suitable communication bus. In some instances, the control bus <b>205</b> is implemented using a wireless connection.</p><p id="p-0034" num="0033">Inputs (for example, commands, signals, etc.) received by the input device <b>110</b> and the one or more switches <b>115</b> are provided to the plurality of motors <b>210</b> via the control bus <b>205</b>. In this manner, every command from the input device <b>110</b> and the one or more switches <b>115</b> are received by every smart motor <b>210</b> in the smart motor system <b>200</b>. Each smart motor <b>210</b> includes an electronic processor configured to determine whether to act on the received command, as described in more detail below.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an exemplary smart motor <b>210</b>. The smart motor <b>210</b> includes an electronic processor <b>300</b> (for example, an electronic controller, a programmable microprocessor, a microcontroller, or other suitable device), a memory <b>305</b>, an input/output (I/O) interface <b>310</b>, one or more sensors <b>315</b>, a power conditioning circuit <b>320</b>, and a motor <b>330</b>. The components of the smart motor <b>210</b>, such as the motor <b>330</b> and the electronic processor <b>300</b> (using the power conditioning unit <b>320</b>) receive power from a power source <b>335</b>. The smart motor <b>210</b> communicates with other components of the smart motor system <b>200</b>, such as the input device <b>110</b> and the one or more switches <b>115</b>, via the control bus <b>205</b>.</p><p id="p-0036" num="0035">The memory <b>305</b> is a non-transitory computer readable medium that includes, for example, a program storage area and a data storage area. The program storage area and the data storage area can include combinations of different types of memory, such as read-only memory (&#x201c;ROM&#x201d;), random access memory (&#x201c;RAM&#x201d;) (for example, dynamic RAM [&#x201c;DRAM&#x201d;], synchronous DRAM [&#x201c;SDRAM&#x201d;], etc.), electrically erasable programmable read-only memory (&#x201c;EEPROM&#x201d;), flash memory, a hard disk, an SD card, or other suitable magnetic, optical, physical, or electronic memory devices. The electronic processor <b>300</b> is connected to the memory <b>305</b> and executes software instructions that are capable of being stored in a RAM of the memory <b>305</b> (for example, during execution), a ROM of the memory <b>305</b> (for example, on a generally permanent basis), or another non-transitory computer readable medium such as another memory or a disc. Software included in the implementation of the smart motor <b>210</b> can be stored in the memory <b>305</b>. The software includes, for example, firmware, one or more applications, program data, filters, rules, one or more program modules, and other executable instructions. The electronic processor <b>300</b> is configured to retrieve from the memory <b>305</b> and execute, among other things, instructions related to the control processes and methods described herein. In other constructions, the smart motor <b>210</b> includes additional, fewer, or different components.</p><p id="p-0037" num="0036">The I/O interface <b>310</b> is connected to the electronic processor <b>300</b> and may be configured to provide the electronic processor <b>300</b> with control signals or commands received via the control bus <b>205</b>. The I/O interface <b>310</b> may include a digital I/O interface, an analog I/O interface, a communication interface, and/or other suitable interfaces. In some examples, the I/O interface <b>310</b> is connected to the one or more sensors <b>315</b> such that the <b>1</b>/<b>0</b> interface <b>310</b> acts as a bridge between the one or more sensors <b>315</b> and the electronic processor <b>300</b>. In other examples, the one or more sensors <b>315</b> may be connected directly to the electronic processor <b>300</b>.</p><p id="p-0038" num="0037">In some instances, the smart motor <b>210</b> is capable of wireless communication. In such an example, the <b>1</b>/<b>0</b> interface <b>310</b> includes a transceiver wireless communication interface capable of communicating on, for example, a cellular network, a Long Term Evolution (LTE) network, a <b>5</b>G network, a BluetoothTM network, a wireless local area network (for example, Wi-Fi), a wireless accessory Personal Area Network (PAN), or the like. Additionally, the control bus <b>205</b> itself may be a wireless communication medium such that data is sent wirelessly from the input device <b>110</b> and the one or more switches <b>115</b> to the plurality of smart motors <b>210</b>.</p><p id="p-0039" num="0038">The one or more sensors <b>315</b> may include, for example, temperature sensors, Hall effect sensors, battery sensors (for example, battery voltage and battery current sensors), positional sensors, back-emf sensors, motor current sensors, and/or other auxiliary sensors. Temperature sensors may provide temperature signals indicative of a temperature within the smart motor <b>210</b>, a temperature of the motor <b>330</b>, or the like. Hall effect sensors may provide position information related to the smart motor <b>210</b>. For example, the Hall effect sensors may monitor a permanent magnet system implemented within the motor <b>330</b>. A permanent magnet may be coupled to a rotor shaft of the motor <b>330</b>. The Hall effect sensors detect movement of the permanent magnet. The controller <b>300</b> receives the position information and counts motor revolutions, identifies a position of the rotor, and the like. Battery sensors may provide battery signals indicative of a supply-voltage from the power source <b>335</b>. Positional sensors may provide position signals indicative of the current position of the seat <b>120</b>, a position of the motor <b>330</b>, or the like. Back-emf sensors may provide a voltage signal indicative of a speed of the motor <b>330</b>. Motor current sensors may provide current signals indicative of a current flowing through the motor <b>330</b>. However, additional sensors may be implemented to sense various characteristics of the smart motor <b>210</b> and the seat <b>120</b>. While the one or more sensors <b>315</b> are illustrated as being within the smart motor <b>210</b>, the electronic processor <b>300</b> may receive sensor data from additional sensors separate from the smart motor <b>210</b>. Such sensor data may be provided via, for example, the control bus <b>205</b>.</p><p id="p-0040" num="0039">The power conditioning circuit <b>320</b> may be or include, for example, a transformer, a rectifier, a filter, a DC-to-DC converter or other power conditioning components to alter the power received from the power source <b>335</b> so that the power is suitable for use by the electronic processor <b>300</b>. The smart motor <b>210</b> may include other power conditioning circuits, for example, a circuit to condition the power provided to the motor <b>330</b>. The motor <b>330</b> may be, for example, an AC motor, a DC motor, a servomotor, a stepper motor, or the like. In some examples, the smart motor <b>210</b> is different from the examples described and illustrated. In one example, a smart actuator is used in place of a smart motor. A smart actuator may include, in addition to or in place of the motor <b>330</b>, additional types of actuators. For example, the smart actuator may include electro-magnetic actuators (for example, solenoids). In other examples, a comfort feature component is implemented. For example, in some instances, resistive loads (for example, heating elements) are used in place of or in addition to the motor <b>330</b> to provide seat heating to improve passenger comfort. Other components may be used in place of or in addition to the motor <b>330</b> to implement desired features.</p><p id="p-0041" num="0040">Software controlling the operation of the smart motor <b>210</b> is organized or architected in a stack <b>402</b> that includes several layers. <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an operating system <b>400</b> upon which a software stack for the smart motor <b>210</b> is implemented. The operating system <b>400</b> is stored in memory (for example, memory <b>305</b>) and may be executed or run by the electronic processor <b>300</b>. The stack <b>402</b> includes a hardware layer <b>405</b>, an operating layer <b>410</b>, and an application layer <b>415</b>. The hardware layer <b>405</b> serves as an input and output layer of the electronic processor <b>300</b> and other components of the smart motor <b>210</b>. For example, the hardware layer <b>405</b> receives signals from the I/O interface <b>310</b> and/or the one or more sensors <b>315</b>. Additionally, the hardware layer <b>405</b> provides control signals to drive the motor <b>330</b>. The operating layer <b>410</b> acts as an intermediary between the hardware layer <b>405</b> and the application layer <b>415</b>. The application layer <b>415</b> executes functions stored in the memory <b>305</b> to communicate with and control components of the hardware layer <b>405</b>.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a block diagram of the hardware layer <b>405</b> according to some examples. The hardware layer <b>405</b> includes a plurality of blocks indicative of a function, operation, or the like. For example, the exemplary hardware layer <b>405</b> illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> includes a power block <b>500</b>, a motor block <b>505</b>, a sensor block <b>510</b>, a switch block <b>515</b>, a communication block <b>520</b>, and a memory block <b>525</b>. However, in some examples, the hardware layer <b>405</b> may include more or fewer blocks based on the components of the system. Each block represents an input/output operation with respect to the corresponding component of the smart motor <b>210</b>. For example, the power block <b>500</b> represents an input/output operation between the electronic processor <b>300</b> and the power conditioning circuit <b>320</b>. The power block <b>500</b> may include, among other things, operations related to filtering applied to the power received from the power supply <b>335</b>, operations related to the power supply <b>335</b> itself, and the like.</p><p id="p-0043" num="0042">The motor block <b>505</b> represents an input/output operation between the electronic processor <b>300</b> and the motor <b>330</b>. The motor block <b>505</b> may include operations related to control of the motor <b>330</b>. The motor block <b>505</b> represents input and/or output operations for a motor driver. The sensor block <b>510</b> represents an input/output operation between the electronic processor <b>300</b> and the one or more sensors <b>315</b>. For example, the sensor block <b>510</b> may include operations related to interpreting signals received from each of the one or more sensors <b>315</b>. The switches block <b>515</b> represents an input/output operation between the electronic processor <b>300</b> and the one or more switches <b>115</b>. The communication block <b>520</b> represents an input/output operation between the electronic processor <b>300</b> and the I/O interface <b>310</b>. The memory block <b>525</b> represents an input/output operation between the electronic processor <b>300</b> and the memory <b>305</b>, such as for assisting with memory allocation.</p><p id="p-0044" num="0043">The operating layer <b>410</b> acts as an intermediary between the hardware layer <b>405</b> and the application layer <b>415</b>. The operating layer may alter data received by the hardware layer <b>405</b> for analysis by the application layer <b>415</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the operating layer <b>410</b> may include, among other things, an application programming interface (API) I/O interface block <b>600</b> and an API non-volatile memory (NVM) interface <b>605</b>. The API I/O interface block <b>600</b> acts as an intermediary between the physical components of the hardware layer <b>405</b> (such as the power block <b>500</b>, the motor block <b>505</b>, the sensor block <b>510</b>, the switch block <b>515</b>, and the communication block <b>520</b>) and the software and macros of the application layer <b>415</b> (described in more detail below). The API I/O interface block <b>600</b> may include, among other things, a motor interface <b>610</b>, a supply control interface <b>615</b>, a sensor interface <b>620</b>, a switch interface <b>625</b>, and a communication interface <b>630</b>. However, the API I/O interface block <b>600</b> may include additional interfaces as needed to interact with the hardware layer <b>405</b>.</p><p id="p-0045" num="0044">The API NVM interface <b>605</b> acts as an intermediary between the memory <b>305</b> (through the memory block <b>525</b>) and the software and macros of the application layer <b>415</b>. The API NVM interface <b>605</b> includes, among other things, an EEPROM API <b>635</b>, NVM functions <b>640</b>, and an EEPROM config operation(s) <b>645</b>. However, the API NVM interface <b>605</b> may include more or fewer blocks as needed to manage memory allocation of the memory <b>305</b>.</p><p id="p-0046" num="0045">The application layer <b>415</b> includes functions, operations, software, macros, and the like related to operation of the smart motor <b>210</b>. The application layer <b>415</b> includes, among other things, an application control module <b>700</b>, an error handler module <b>705</b>, a drive control module <b>710</b>, an I/O control module <b>715</b>, a communication control module <b>720</b>, a system monitor module <b>725</b>, and a scheduler module <b>730</b>. The application control module <b>700</b> may include a variety of applications used to control the smart motor <b>210</b>, such as a primary application, a combination of sub-applications, and a plurality of application macros. Each application may work in conjunction with each other through an app control config program.</p><p id="p-0047" num="0046">The drive control module <b>710</b> includes functions, operations, software, and the like related to operation of the motor <b>330</b>. In some examples, the drive control module <b>710</b> functions as a motor driver. In one instance, with respect to the first smart motor <b>210</b>A, the switch block <b>515</b> of the hardware layer <b>405</b> receives commands from one of switches <b>115</b> to activate the motor <b>330</b> until the head rest is in a first position. The application control module <b>700</b> receives the commands from the switch block <b>515</b> (through the switch interface <b>625</b>). Additionally, a position sensor of the one or more sensors <b>315</b> provides position information to the sensor block <b>510</b>. The application control module <b>700</b> receives the position information from the sensor block <b>510</b> (through the sensor interface <b>620</b>). The application control module <b>700</b> analyzes the command from the switch block <b>515</b> and the position information from the sensor block <b>510</b> to determine how long to activate the motor <b>330</b> of the smart motor <b>210</b>A to move the head rest from its current position to the first position. The application control module <b>700</b> then provides an output command and/or additional operating parameters to the drive control module <b>710</b>. The drive control module <b>710</b> provides the output command to the motor interface <b>610</b>. The motor interface <b>610</b> provides the output command to the motor block <b>505</b>, which controls the motor driver <b>325</b> accordingly.</p><p id="p-0048" num="0047">The communication control module <b>720</b> receives and processes information received from the communication interface <b>630</b>. In some examples, the communication control module <b>720</b> includes the necessary communication protocols for communicating with components of the smart motor <b>210</b> and the smart motor system <b>200</b>. For example, the communication control module <b>720</b> may include a LIN stack for communicating over the control bus <b>205</b>. The I/O control module <b>715</b> receives and processes information received from the sensor interface <b>620</b>. The I/O control module <b>715</b> may include operations and programs related to sensor data received from the sensor interface <b>620</b>, such as how sensor data is analyzed.</p><p id="p-0049" num="0048">The system monitor module <b>725</b> monitors the states and operation of the application control module <b>700</b>, the error handler module <b>705</b>, the drive control module <b>710</b>, the I/O control module <b>715</b>, the communication control module <b>720</b>, and the scheduler module <b>730</b>. Additionally, the system monitor module <b>725</b> monitors each of the corresponding lower level interfaces (for example, the API I/O interface <b>600</b> and API NVM interface <b>605</b>). The system monitor module <b>725</b> may control system boot-release operations and system runtime states (for example, sleep-modes, fault-shut-down events, and the like).</p><p id="p-0050" num="0049">The scheduler module <b>730</b> is responsible for managing the timing of the other modules within the application layer <b>415</b> and for distributing computation power to the other modules within the application layer <b>415</b>. In some instances, the scheduler module <b>730</b> is used by the operating system <b>400</b> to operate as a real-time operating system (RTOS).</p><p id="p-0051" num="0050">The error handler module <b>705</b> receives and/or stores data from the operating layer <b>410</b> and the other modules of the application layer <b>715</b> that relate to encountered errors or warning codes. The errors and warning codes are provided to the system monitor module <b>725</b> to determine whether to address (or act on) any errors or abnormalities occurring within the smart motor <b>210</b>. The system monitor module <b>725</b> may then instruct an additional module within the application layer <b>415</b> to alter operation of the smart motor <b>210</b> to handle the error. For example, the sensor block <b>510</b> of the hardware layer <b>405</b> may receive a temperature signal from a temperature sensor included in the one or more sensors <b>315</b>. The temperature signal is provided to the sensor interface <b>620</b> in the operation layer <b>405</b>. The sensor interface <b>620</b> may analyze or adjust the temperature signal in some way before providing an adjusted temperature signal to the application layer <b>415</b>. In some instances, the temperature signal is provided to the application layer <b>415</b> with no adjustments. The error handler module <b>705</b> receives the adjusted temperature signal and provides the adjusted temperature signal to the system monitor module <b>725</b>. The system monitor module <b>725</b> determines an overtemperature condition is occurring within the smart motor <b>210</b>. The system monitor module <b>725</b> may provide a control command to the drive control module <b>710</b> to stop operation of the smart motor <b>210</b> (for example, the motor <b>330</b>).</p><p id="p-0052" num="0051">The provided blocks, interfaces, and modules used described the operating system of the smart motor <b>210</b> are merely examples and are not intended to be limiting. The operating system of the smart motor <b>210</b> may include more of less blocks based on components within the smart motor system <b>200</b>. Additionally, while illustrated as separate, the various blocks, interfaces, and modules may be combined or separated to further illustrate different functions of the operating system. Further components (for example, auxiliary components) beyond operation of the motor <b>330</b> may be implemented within the operating system of the smart motor <b>210</b>. For example, a heater may be implemented within the seat <b>120</b>. A command from the input device <b>110</b> and/or the one or more switches <b>115</b> may instruct one of the plurality of smart motors <b>210</b> to turn the heater on. Accordingly, the hardware layer <b>405</b>, the operating layer <b>410</b>, and the application layer <b>415</b> includes the required blocks, interfaces, and modules to receive commands related to the heater, interpret the commands, and provide outputs to control the heater.</p><p id="p-0053" num="0052">Signals and commands sent on the control bus <b>205</b> are received by each of the plurality of smart motors <b>210</b>. <figref idref="DRAWINGS">FIG. <b>8</b></figref> provides a method <b>800</b> performed by the electronic processor <b>300</b> within each of the plurality of smart motors <b>210</b>. At step <b>805</b>, the electronic processor <b>300</b> receives a control signal. For example, the input device <b>110</b> and/or the one or more switches <b>115</b> provide a control signal to the control bus <b>205</b>. Each of the plurality of smart motors <b>210</b> receive the control signal on the control bus <b>205</b>. In some instances, when the smart motor system <b>200</b> is a wireless system, the input device <b>110</b> and/or the one or more switches <b>115</b> broadcast the control signal.</p><p id="p-0054" num="0053">At step <b>810</b>, the electronic processor <b>300</b> determines whether to react to or operate on the received control signal. For example, the control signal includes or embody a command indicative of &#x201c;move the lower back portion of the seat <b>120</b> to the third position.&#x201d; The fourth smart motor <b>210</b>D is associated with the lower back portion of the seat <b>120</b>. Accordingly, at step <b>815</b>, the electronic processor <b>300</b> of the fourth smart motor <b>210</b>D determines to activate the motor <b>330</b> to perform the function included in the received control signal. However, the first smart motor <b>210</b>A, the second smart motor <b>210</b>B, the third smart motor <b>210</b>C, and the fifth smart motor <b>210</b>E also receive the control signal indicative of &#x201c;move the lower back of the seat <b>120</b> to the third position.&#x201d; Since these motors are not associated with the lower back portion of the seat <b>120</b>, their respective electronic processors <b>300</b> disregard the control signal.</p><p id="p-0055" num="0054">In certain aspects, communication over the control bus <b>205</b> occurs using a series of communication frames (e.g., data packets, data frames). In one example, the input device <b>110</b> and/or the one or more switches <b>115</b> broadcast data frames over the control bus <b>205</b> based on received user inputs. Each of the smart motors <b>210</b> receive the data frames and determine whether to perform the action indicated by the data frame. The input device <b>110</b>, the one or more switches <b>115</b>, and the smart motors <b>210</b> communicate on the control bus <b>205</b> by transmitting write data (&#x3c;WR_Data&#x3e;) frames (e.g., a command frame, a control frame), read data request (&#x3c;RD_Data_Req&#x3e;) frames (e.g., a data request frame), and read data (&#x3c;RD_Data&#x3e;) frames (e.g., response frames). The write data frames, the read data request frames, and the read data frames are transmitted as subsequent frames as a set of communication frames. To command a smart motor <b>210</b>, the input device <b>110</b> and/or the one or more switches <b>115</b> transmit the write data frames. To read data from any smart motor <b>210</b>, the input device <b>110</b> and/or the one or more switches <b>115</b> transmit read data request frames. The smart motor <b>210</b> responds to a read data request frame with a read data frame.</p><p id="p-0056" num="0055">Once this set (or cycle) of data frames is transmitted once, subsequent data read functions may be performed using only the read data frame. For example, should the input device <b>110</b> and/or the one or more switches <b>115</b> monitor operation of the respective smart motor <b>210</b> as it performs a previously-commanded function, the input device <b>110</b> and/or the one or more switches <b>115</b> transmit read data request frames and receive read data frames without transmitting a write data frame. This operation may occur at a set predetermined frequency stored in the memory of the input device <b>110</b> and the one or more switches <b>115</b>.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates examples of a write data frame <b>905</b>, a read data request frame <b>910</b>, and a read data frame <b>915</b>. Write frames <b>905</b> are commands indicate an action to be performed by at least one of the smart motors <b>210</b>. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the write frame <b>905</b> includes six bytes of data indicating the action (or command) for the smart motor <b>210</b>. Write frames <b>905</b> may be transmitted for performance by a single smart motor <b>210</b> or a plurality of smart motors <b>210</b>, as indicated by a node-address included in the write frame <b>905</b>.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a write data frame <b>905</b> according to one example. The write data frame <b>905</b> includes an identification block <b>1000</b>, an address block <b>1005</b>, a command block <b>1010</b>, and a data block <b>1015</b>. The identification block <b>1000</b> includes an identification code corresponding to a type of the frame being provided. For example, the identification code <b>0</b>x<b>21</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> indicates that the frame is a write data frame. The address block <b>1005</b> includes an address (e.g., a node-address) indicating which smart motor <b>210</b> should perform the action. The address block <b>1005</b> may indicate a single smart motor <b>210</b>, a group or subset of smart motors <b>210</b>, or every smart motor <b>210</b> connected to the control bus <b>205</b>. In some instances, the address block <b>1005</b> includes one byte of data. In some instances, the value of the address block <b>1005</b> ranges from <b>0</b>x<b>01</b> to <b>0</b>x<b>3</b>F.</p><p id="p-0059" num="0058">The command block <b>1010</b> includes data indicating the command to be performed by the smart motor <b>210</b>. In some instances, the command block <b>1010</b> includes one byte of data. Possible values of the command block <b>1010</b> may range from <b>0</b>x<b>00</b> to OxAF and <b>0</b>xB<b>8</b> to OxFF. The data block <b>1015</b> includes data indicating parameters and options used to perform the command. While the example data block <b>1015</b> illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref> includes four bytes of data, the data block <b>1015</b> may include more or fewer bytes of data.</p><p id="p-0060" num="0059">Returning to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the example read data request frame <b>910</b> includes three bytes of data indicating the action (or command) for the smart motor <b>210</b>. Read data request frames <b>910</b> may be transmitted for receipt by a single smart motor <b>210</b> or a plurality of smart motors <b>210</b>, as indicated by a node-address included in the read data request frame <b>910</b>. <figref idref="DRAWINGS">FIG. <b>11</b></figref> provides a detailed read data request frame <b>910</b> according to one example. The read data request frame <b>910</b> includes an identification block <b>1100</b>, an address block <b>1105</b>, a command block <b>1115</b>, and a sub-selection block <b>1120</b>. The identification block <b>1100</b> includes an identification code corresponding to a type of the frame being provided. For example, the identification code <b>0</b>x<b>22</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref> indicates that the frame is a read data request frame. The address block <b>1105</b> includes an address indicating which smart motor <b>210</b> should perform the action. In some instances, the address block <b>1105</b> includes one byte of data. In some instances, the value of the address block <b>1105</b> ranges from <b>0</b>x<b>01</b> to <b>0</b>x<b>3</b>F.</p><p id="p-0061" num="0060">The command block <b>1110</b> includes data indicating the command to be performed by the smart motor <b>210</b>. In some instances, the command block <b>1110</b> includes one byte of data. Possible values of the command block <b>1110</b> may range from <b>0</b>x<b>00</b> to OxAF and <b>0</b>xB<b>8</b> to OxFF. The sub-selection block <b>1120</b> provides a sub-index for chained data selections. In some instances, the read data request frame also includes data bytes D<b>4</b>-D<b>8</b>. The read data request frame <b>910</b> prepares the input device <b>110</b> and/or the one or more switches <b>115</b> for a subsequent data read command.</p><p id="p-0062" num="0061">Returning to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the example read data frame <b>915</b> includes seven bytes of data. While the write data frame <b>905</b> and the read data request frame <b>910</b> may be addressed to multiple smart motors <b>210</b>, the read data frame <b>915</b> is addressed to a single smart motor <b>210</b>. <figref idref="DRAWINGS">FIG. <b>12</b></figref> provides a detailed read data frame <b>915</b> according to one example. The read data frame <b>915</b> includes an identification block <b>1200</b>, a respond address block <b>1205</b>, a respond command block <b>1210</b>, a data block <b>1215</b>, a return sub-selection block <b>1220</b>, and a status block <b>1225</b>. The identification block <b>1200</b> includes an identification code corresponding to a type of the frame being provided. For example, the identification code <b>0</b>x<b>23</b> shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref> indicates that the frame is a read data request frame. The respond address block <b>1205</b> indicates which smart motor <b>210</b> is transmitting the read data frame <b>915</b> (e.g., the returned node-address), and is implemented by the input device <b>110</b> and/or the one or more switches <b>115</b> to countercheck the location the command is performed. In some implementations, a value of <b>0</b>x<b>40</b> is added to the node-address to create the respond address block when the response is a positive response (e.g., no error has occurred while performing the command indicated by the write data frame <b>905</b>). When the response is a negative response (e.g., an error has occurred while performing the command), the value of <b>0</b>x<b>40</b> is not added. Possible values of the respond address block <b>1205</b> range from <b>0</b>x<b>01</b> to <b>0</b>x<b>3</b>F.</p><p id="p-0063" num="0062">The respond command block <b>1210</b> indicates the action performed by the respective smart motor <b>210</b> (indicated by the respond address block <b>1210</b>). Possible values of the respond command block <b>1210</b> range from <b>0</b>x<b>00</b> to OxAF and <b>0</b>xB<b>8</b> to OxFF. The data block <b>1215</b> includes data indicating parameters and options used while performing the command. While the example data block <b>1215</b> illustrated in <figref idref="DRAWINGS">FIG. <b>12</b></figref> includes four bytes of data, the data block <b>1215</b> may include more or fewer bytes of data. In the example of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the data block <b>1215</b> also includes the return sub-selector block <b>1220</b>, which serves as a sub-index for chained data selections. The status block <b>1225</b> includes data indicating a status of the respective smart motor <b>210</b>, such as an &#x201c;error&#x201d; status, an &#x201c;error in response&#x201d; status, and a &#x201c;successful transfer&#x201d; status, among others.</p><p id="p-0064" num="0063">Additional examples of data frames transmitted over the control bus <b>205</b> are illustrated in chart <b>1300</b> and legend <b>1310</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>. The chart <b>1300</b> includes a header <b>1305</b> illustrating the contents of each byte in a data frame. For example, the write data frame <b>905</b> includes the frame ID <b>0</b>x<b>21</b>, parity bits <b>0</b>x<b>01</b>, and a PID value of <b>0</b>x<b>61</b>. The write data frame <b>905</b> includes six bytes of data, including the node-address and the motor command. As indicated in the &#x201c;Publisher&#x201d; and &#x201c;Subscriber&#x201d; columns, the write data frame <b>905</b> is published (or transmitted) by a master device (e.g., the input device <b>110</b> and/or the one or more switches <b>115</b>) and is subscribed (or received) by a slave device (e.g., one or more smart motors <b>210</b>).</p><p id="p-0065" num="0064">In the chart <b>1300</b>, the read data request frame <b>910</b> includes the frame ID <b>0</b>x<b>22</b>, parity bits <b>0</b>x<b>11</b>, and a PID value of <b>0</b>xE<b>2</b>. The read data request frame <b>910</b> includes three bytes of data, including the node-address and the motor command. As indicated in the &#x201c;Publisher&#x201d; and &#x201c;Subscriber&#x201d; columns, the read data request frame <b>910</b> is published (or transmitted) by a master device (e.g., the input device <b>110</b> and/or the one or more switches <b>115</b>) and is subscribed (or received) by a slave device (e.g., one or more smart motors <b>210</b>).</p><p id="p-0066" num="0065">In the chart <b>1300</b>, the read data frame <b>915</b> includes the frame ID <b>0</b>x<b>23</b>, parity bits <b>0</b>x<b>10</b>, and a PID value of <b>0</b>xA<b>3</b>. The read data request frame <b>915</b> includes seven bytes of data, including the respond node-address, the respond motor command, and the device status. As indicated in the &#x201c;Publisher&#x201d; and &#x201c;Subscriber&#x201d; columns, the write data frame <b>915</b> is published (or transmitted) by a slave device (e.g., a smart motor <b>210</b>) and is subscribed (or received) by a master device (e.g., the input device <b>110</b> and/or the one or more switches <b>115</b>).</p><p id="p-0067" num="0066">Communication may include additional types of commands, such as a sleep command (&#x3c;GoToSleep_Cmd&#x3e;) <b>1320</b>. The sleep command may be broadcast on the control bus <b>205</b> such that each of the plurality of smart motors <b>210</b> receive the sleep command. Communication may also include a controller reset command (&#x3c;ECUReset_Cmd&#x3e;) <b>1330</b> and a control reset response (&#x3c;ECUReset_Response&#x3e;) <b>1340</b> that relates to operations resetting each electronic processor <b>300</b>. Additional operations not provided in the chart <b>1300</b> may also be performed by devices within the smart motor system <b>200</b>. For example, a master device (e.g., the input device <b>110</b>, the one or more switches <b>115</b>) may broadcast commands to cutoff or stop a set of the smart motors <b>210</b>. The master device may broadcast emergency protocols to be performed by the smart motors <b>210</b>.</p><p id="p-0068" num="0067">In some instances, commands for auxiliary output controls may be implemented by the smart motor system <b>200</b>. For example, an auxiliary output control command includes functions controlled by master devices to control a plurality of auxiliary outputs. Such commands include, for example, controlling an output to switch between an on state and an off state, operating a seat heating system, performing diagnostic functions, and other auxiliary outputs. These outputs are described in more detail below with respect to <figref idref="DRAWINGS">FIG. <b>18</b></figref>.</p><p id="p-0069" num="0068">In some instances, the plurality of smart motors <b>210</b> are configured to have local (e.g., on-device) power limiting functions. Each smart motor <b>210</b> may adjust the pulse width modulation (PWM) signal used to control their own current draw. Additionally, each smart motor <b>210</b> may shut itself down should the current draw exceed a current threshold. In some implementations, each smart motor <b>210</b> include the current draw in the status block <b>1225</b>.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>14</b></figref> provides an example idle command <b>1400</b> transmitted over the control bus <b>205</b>. The idle command <b>1400</b> includes a single byte of data and is broadcast to all of the plurality of smart motors <b>210</b> on the control bus <b>205</b>. In some instances, the idle command <b>1400</b> is repeatedly transmitted at a set frequency, such as <b>20</b> milliseconds. The idle command <b>1400</b> minimizes traffic on the control bus <b>205</b> in instances no other control frames are needed. Functions of the idle command vary based on the identification code. For example, the idle command <b>1400</b> may clear some or all functions performed by the designated smart motors <b>210</b>, may instruct the designated smart motors <b>210</b> to stop performing functions, may instruct the smart motors <b>210</b> to enter a low power mode, or the like. As the idle command <b>1400</b> is transmitted to every smart motor <b>210</b> connected on the control bus <b>205</b>, the idle command <b>1400</b> ensures each smart motor <b>210</b> continues to receive some sort of data and do not go to sleep unless instructed.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>15</b></figref> provides an example communication cycle <b>1500</b> performed between a master device <b>1505</b> (e.g., the input device <b>110</b>, one or more switches <b>115</b>) and a slave device <b>1510</b> (e.g., a smart motor <b>210</b>). In the communication cycle <b>1500</b>, the slave device <b>1510</b> is performing a &#x201c;momentary control&#x201d; command in which the smart motor <b>210</b> is instructed to drive the motor <b>330</b>. For example, the motor <b>330</b> is driven for the duration one of the one or more switches <b>115</b> is actuated.</p><p id="p-0072" num="0071">At step <b>15</b>-<b>1</b>, the master device <b>1505</b> transmits a write data frame (such as the write data frame <b>905</b>) to the slave device <b>1510</b>. The write data frame includes a data value of <b>0</b>x<b>01</b>, indicating that the slave device <b>1510</b> is commanded to perform a driving operation (e.g., operating the motor <b>330</b> in clockwise or counter-clockwise). At step <b>15</b>-<b>2</b>, the master device <b>1505</b> transmits a read data request frame (such as the read data request <b>910</b>) to the slave device <b>1510</b>. In response to the read data request frame, at step <b>15</b>-<b>3</b>, the slave device <b>1510</b> transmits a read data frame (such as the read data frame <b>915</b>) to the master device <b>1505</b>. The read data frame indicates that the slave device <b>1510</b> is performing the momentary control command. In some instances, the master device <b>1505</b> and the slave device <b>1510</b> continue to repeat step <b>15</b>-<b>2</b> and <b>15</b>-<b>3</b> for the duration of the momentary control operation.</p><p id="p-0073" num="0072">At step <b>15</b>-<b>4</b>, the master device <b>1505</b> transmits a second write data frame to the slave device <b>1510</b>. The second write data frame includes a data value of <b>0</b>x<b>00</b>, indicating that the slave device <b>1510</b> is commanded to stop performing the driving operation (or otherwise cease driving of the motor <b>330</b>). At step <b>15</b>-<b>5</b>, the master device <b>1505</b> transmits a read data request frame to the slave device <b>1510</b>. In response to the read data request frame, at step <b>15</b>-<b>6</b>, the slave device <b>1510</b> transmits a read data frame to the master device <b>1505</b>. The read data frame indicates that the slave device <b>1510</b> has ceased operation of the motor <b>330</b> (e.g., is no longer performing the momentary control command).</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates an example control frame <b>1600</b> transmitted by the input device <b>110</b> and/or the one or more switches <b>115</b> for the momentary control operation (e.g., an activate input-key function). The control frame <b>1600</b> defines the action to be taken and defines data limits, or parameters, for performing the function. For example, when the control frame <b>1600</b> indicates that key#<b>1</b> is actuated, the motor <b>330</b> is driven in a clockwise direction. When the control frame <b>1600</b> indicates that key#<b>2</b> is actuated, the motor <b>330</b> is driven in a counter-clockwise direction. <figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates an example response frame <b>1700</b> transmitted by the smart motor <b>210</b> performing the momentary control operation. The response frame <b>1700</b> includes data indicative of operational states and stop states of the smart motor <b>210</b>.</p><p id="p-0075" num="0074">In some instances, while performing an operation, the smart motor <b>210</b> detects a failure to receive a read data request frame. Should the smart motor <b>210</b> fail to receive a read data request frame within a predetermined timeout period, the smart motor <b>210</b> may cease performing of the operation.</p><p id="p-0076" num="0075">The messaging protocol described above and local intelligence provided by software in the application layer <b>415</b> provide, among other things, advantages over the system shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, including the ability to use a single smart motor architecture for multiple applications. For example, different programmed versions of same smart motor may be used for different purposes within a seat. For example, one smart motor may be programmed to control a head rest but an architecturally identical or similar motor with different or additional programming may be used to control a lumbar support. Thus, hardware specific motors are not needed for each different application. The same base smart motor may be used, and only software needs to be modified to perform a desired function. In addition, central control is not necessary. Messages may be sent on a bus and each smart motor has sufficient intelligence to interpret message intended for it and ignore messages intended for other smart motors or devices.</p><p id="p-0077" num="0076">While the smart motor system <b>200</b> has been primarily described with relation to the seat <b>120</b>, the smart motor system <b>200</b> may be further expanded to account for additional motor uses. <figref idref="DRAWINGS">FIG. <b>18</b></figref> provides a vehicular smart motor system <b>1800</b> providing a vehicle equipped with a plurality of smart motors. For example, the vehicular smart motor system <b>1800</b> includes a plurality of smart motors <b>1805</b>, including a smart recliner motor configured to adjust the angle of a seat, a smart seat slider motor configured to adjust the position of the seat in a forwards and/or backwards manner, and a smart seat height adjustment motor configured to adjust the seat height. The plurality of smart motors <b>1805</b> includes front and back smart seat height adjustment motors to tilt the front and back portions of a seat, a smart lumbar adjustment motor to adjust a seat lumbar support, a smart headrest adjustment motor to adjust the height and/or tilt of a head rest, and a smart side bolster support motor to adjust the side support of a seat.</p><p id="p-0078" num="0077">In addition to seat smart motors, the vehicular smart motor system <b>1800</b> may include smart motors to control a sunroof, side mirrors, a rearview mirror, and a trunk of the vehicle. In some instances, the smart motors are capable of controlling additional auxiliary components of the vehicular smart motor system <b>1800</b>, such as climate control (for example, heating and cooling of the vehicle). While primarily described with respect to vehicles, the plurality of smart motors <b>210</b> may also be used in other systems and environments in which motors are used, such as, but not limited to, aircraft, buses, and trains.</p><p id="p-0079" num="0078">Accordingly, aspects, feature, and embodiments described herein provide, among other things, smart motors and methods for control thereof. Various features and advantages of some examples are set forth in the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A smart motor system comprising:<claim-text>a control bus;</claim-text><claim-text>an input device; and</claim-text><claim-text>a smart motor communicatively coupled to the input device via the control bus, wherein the smart motor includes an electronic processor, the electronic processor configured to:<claim-text>receive, from the input device, a command frame indicating an action,</claim-text><claim-text>perform the action,</claim-text><claim-text>receive, from the input device, a data request frame requesting a status of the smart motor, and</claim-text><claim-text>transmit, to the input device and in response to receiving the data request frame, a data frame indicating the status of the smart motor.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the command frame includes an address of the smart motor.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the command frame includes a plurality of parameters describing how to perform the action.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data frame includes an address of the smart motor.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the electronic processor is configured to:<claim-text>receive, after transmitting the data frame, a second data request frame requesting a second status of the smart motor, and</claim-text><claim-text>transmit, to the input device, a second data frame indicating the second status of the smart motor.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the electronic processor is configured to:<claim-text>receive, from the input device, a second command frame indicating an idle action,</claim-text><claim-text>stop, in response to the second command frame, performing the action,</claim-text><claim-text>receive, from the input device, a second data request frame requesting a second status of the smart motor, and</claim-text><claim-text>transmit, to the input device and in response to receiving the data request frame, a second data frame indicating that the smart motor is idle.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the smart motor is a first smart motor included in a plurality of smart motors connected to the control bus, and wherein each smart motor included in the plurality of smart motors receives the command frame.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The smart motor system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the plurality of smart motors includes a second smart motor including a second electronic processor, the second electronic processor configured to:<claim-text>receive, from the input device, the command frame indicating the action,</claim-text><claim-text>determine whether the command frame is addressed to the second smart motor, and</claim-text><claim-text>disregard, in response to determining the command frame is not address to the second smart motor, the action.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The smart motor system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the command frame includes an address indicating a subset of the plurality of smart motors.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the input device is configured to periodically transmit the data request frame at a set frequency.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The smart motor system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the status of the smart motor indicates an error.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A smart motor system comprising:<claim-text>a control bus;</claim-text><claim-text>an input device; and</claim-text><claim-text>a plurality of smart motors communicatively coupled to the input device via the control bus, wherein each respective smart motor includes an electronic processor, the electronic processor configured to:<claim-text>receive, from the input device, a command frame indicating an action,</claim-text><claim-text>determine whether to perform the action,</claim-text><claim-text>receive, from the input device, a data request frame requesting a status of the respective smart motor of the plurality of smart motors, and</claim-text><claim-text>transmit, to the input device and in response to receiving the data request frame, a data frame indicating the status of the respective smart motor.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The smart motor system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the command frame includes an address of the respective smart motor, and wherein the electronic processor is configured to determine whether to perform the action based on the address.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The smart motor system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the electronic processor is configured to:<claim-text>receive, after transmitting the data frame, a second data request frame requesting a second status of the respective smart motor, and</claim-text><claim-text>transmit, to the input device, a second data frame indicating the second status of the respective smart motor.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The smart motor system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the electronic processor is configured to:<claim-text>receive, from the input device, a second command frame indicating an idle action,</claim-text><claim-text>stop, in response to the second command frame, performing the action,</claim-text><claim-text>receive, from the input device, a second data request frame requesting a second status of the respective smart motor, and</claim-text><claim-text>transmit, to the input device and in response to receiving the data request frame, a second data frame indicating that the respective smart motor is idle.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A method for communicating on a control bus, the method comprising:<claim-text>receiving, from an input device, a command frame indicating an action,</claim-text><claim-text>performing the action,</claim-text><claim-text>receiving, from the input device, a data request frame requesting a status of a smart motor, and</claim-text><claim-text>transmitting, to the input device and in response to receiving the data request frame, a data frame indicating the status of the smart motor.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:<claim-text>receiving, after transmitting the data frame, a second data request frame requesting a second status of the smart motor, and</claim-text><claim-text>transmitting, to the input device, a second data frame indicating the second status of the smart motor.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:<claim-text>receiving, from the input device, a second command frame indicating an idle action,</claim-text><claim-text>stopping, in response to the second command frame, performing the action,</claim-text><claim-text>receiving, from the input device, a second data request frame requesting a second status of the smart motor, and</claim-text><claim-text>transmitting, to the input device and in response to receiving the data request frame, a second data frame indicating that the smart motor is idle.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising transmitting, with the input device, the data request frame at a set frequency.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the command frame includes an address of the smart motor, and wherein the method further comprises:<claim-text>determining, based on the address, whether to perform the action.</claim-text></claim-text></claim></claims></us-patent-application>