<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007239A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007239</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17867081</doc-number><date>20220718</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="regional"><country>EP</country><doc-number>18305832.0</doc-number><date>20180629</date></priority-claim><priority-claim sequence="02" kind="regional"><country>EP</country><doc-number>18306062.3</doc-number><date>20180803</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>137</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>137</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e79">VIRTUAL TEMPORAL AFFINE CANDIDATES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17253680</doc-number><date>20201218</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11394960</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/US2019/037150</doc-number><date>20190614</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17867081</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>INTERDIGITAL VC HOLDINGS, INC.</orgname><address><city>Wilmington</city><state>DE</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>ROBERT</last-name><first-name>Antoine</first-name><address><city>Mezieres sur Couesnon</city><country>FR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>GALPIN</last-name><first-name>Franck</first-name><address><city>Thorigne-Fouillard</city><country>FR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>POIRIER</last-name><first-name>Tangi</first-name><address><city>Thorigne-Fouillard</city><country>FR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A video encoder or decoder processes portions of video using virtual temporal affine motion candidates. Under the general aspects, virtual temporal affine candidates are created using only the classical temporal motion buffer information, avoiding the storage of additional affine parameters in a temporal motion buffer. A motion field for encoding or decoding a video block is generated based on the virtual temporal affine candidates. In one embodiment, collocated motion candidates are rescaled by adjusting the picture order count of the determined motion field. In another embodiment, resolution adaptation is performed to enable a current motion buffer to correspond to a reference motion buffer.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="77.39mm" wi="107.36mm" file="US20230007239A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="109.39mm" wi="100.67mm" orientation="landscape" file="US20230007239A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="117.43mm" wi="113.45mm" orientation="landscape" file="US20230007239A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="88.73mm" wi="109.14mm" orientation="landscape" file="US20230007239A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="85.17mm" wi="119.89mm" orientation="landscape" file="US20230007239A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="70.19mm" wi="96.44mm" orientation="landscape" file="US20230007239A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="90.93mm" wi="141.99mm" orientation="landscape" file="US20230007239A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="85.85mm" wi="104.06mm" orientation="landscape" file="US20230007239A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="114.98mm" wi="117.09mm" orientation="landscape" file="US20230007239A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="77.05mm" wi="143.76mm" orientation="landscape" file="US20230007239A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="122.60mm" wi="151.89mm" orientation="landscape" file="US20230007239A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="114.30mm" wi="118.45mm" orientation="landscape" file="US20230007239A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="90.76mm" wi="113.28mm" orientation="landscape" file="US20230007239A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="59.52mm" wi="141.39mm" orientation="landscape" file="US20230007239A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="113.88mm" wi="107.87mm" orientation="landscape" file="US20230007239A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="91.69mm" wi="117.01mm" orientation="landscape" file="US20230007239A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="163.83mm" wi="91.95mm" orientation="landscape" file="US20230007239A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="91.02mm" wi="116.59mm" orientation="landscape" file="US20230007239A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="100.25mm" wi="125.05mm" orientation="landscape" file="US20230007239A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="66.97mm" wi="111.76mm" orientation="landscape" file="US20230007239A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="152.48mm" wi="132.25mm" orientation="landscape" file="US20230007239A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="144.27mm" wi="117.18mm" orientation="landscape" file="US20230007239A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="154.69mm" wi="122.17mm" orientation="landscape" file="US20230007239A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="109.47mm" wi="121.07mm" orientation="landscape" file="US20230007239A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="109.47mm" wi="121.07mm" orientation="landscape" file="US20230007239A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="140.04mm" wi="138.85mm" orientation="landscape" file="US20230007239A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">At least one of the present embodiments generally relates to a method or an apparatus for video encoding or decoding, and more particularly, to a method or an apparatus for selecting a predictor candidate from a set of predictor candidates for motion compensation based on a motion model such as, e.g., an affine model, for a video encoder or a video decoder.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">To achieve high compression efficiency, image and video coding schemes usually employ prediction, including motion vector prediction, and transform to leverage spatial and temporal redundancy in the video content. Generally, intra or inter prediction is used to exploit the intra or inter frame correlation, then the differences between the original image and the predicted image, often denoted as prediction errors or prediction residuals, are transformed, quantized, and entropy coded. To reconstruct the video, the compressed data are decoded by inverse processes corresponding to the entropy coding, quantization, transform, and prediction.</p><p id="p-0004" num="0003">A recent addition to high compression technology includes using a motion model based on affine modeling. In particular, affine modeling is used for motion compensation for encoding and decoding of video pictures. In general, affine modeling is a model using at least two parameters such as, e.g., two control point motion vectors (CPMVs) representing the motion at the respective corners of a block of picture, that allows deriving a motion field for the whole block of a picture to simulate, e.g., rotation and homothety (zoom).</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">The drawbacks and disadvantages of the prior art are addressed by the general aspects described herein, which are directed to block shape adaptive intra prediction directions in encoding and decoding.</p><p id="p-0006" num="0005">According to a first aspect, there is provided a method. The method comprises steps for determining, for a video block being encoded in a picture, at least one predictor candidate; determining for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate; determining for the video block being encoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner; determining, based on the one or more corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being encoded; and, encoding the video block based on the corresponding motion field.</p><p id="p-0007" num="0006">According to another aspect, there is provided a second method. The method comprises steps for determining, for a video block being decoded in a picture, at least one predictor candidate; determining for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate; determining for the video block being decoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner; determining, based on the one or more corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being decoded; and, decoding the video block based on the corresponding motion field.</p><p id="p-0008" num="0007">According to another aspect, there is provided an apparatus. The apparatus comprises a processor. The processor can be configured to encode a block of a video or decode a bitstream by executing either of the aforementioned methods.</p><p id="p-0009" num="0008">According to another general aspect of at least one embodiment, there is provided a device comprising an apparatus according to any of the decoding embodiments; and at least one of (i) an antenna configured to receive a signal, the signal including the video block, (ii) a band limiter configured to limit the received signal to a band of frequencies that includes the video block, or (iii) a display configured to display an output representative of the video block.</p><p id="p-0010" num="0009">According to another general aspect of at least one embodiment, there is provided a non-transitory computer readable medium containing data content generated according to any of the described encoding embodiments or variants.</p><p id="p-0011" num="0010">According to another general aspect of at least one embodiment, there is provided a signal comprising video data generated according to any of the described encoding embodiments or variants.</p><p id="p-0012" num="0011">According to another general aspect of at least one embodiment, a bitstream is formatted to include data content generated according to any of the described encoding embodiments or variants.</p><p id="p-0013" num="0012">According to another general aspect of at least one embodiment, there is provided a computer program product comprising instructions which, when the program is executed by a computer, cause the computer to carry out any of the described decoding embodiments or variants.</p><p id="p-0014" num="0013">These and other aspects, features and advantages of the general aspects will become apparent from the following detailed description of exemplary embodiments, which is to be read in connection with the accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a Coding Tree Unit and Coding Tree concepts to represent a compressed HEVC picture.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows division of a Coding Tree Unit into Coding Units, Prediction Units and Transform Units.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a simple affine model used in the Joint Exploration Model.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a 4&#xd7;4 sub-CU based affine motion vector field.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows the Motion vector prediction process for Affine Inter CUs.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows the process for creating new candidates in affine AMVP process.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows the Motion vector prediction candidates in the Affine Merge mode.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows the spatial derivation of affine motion field control points in the case of Affine Merge.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an exemplary process to create new affine candidates.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a standard, generic, video compression scheme.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a standard, generic, video decompression scheme.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a virtual temporal candidate sub-block.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an exemplary process to select a corner sub-block.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows an exemplary affine model computation.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows alternative sub-block candidates.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows an exemplary rescaling stage for collocated motion vectors.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows an exemplary flow diagram for reference POC (Picture Order Count) selection.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>18</b></figref> shows an example of resolution dependent motion vector candidates.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>19</b></figref> shows an offset between the candidate and the affine model vectors.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>20</b></figref> shows another standard, generic video compressor with pre-encoding processing and image partitioning.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows another standard, generic, video decompressor with post-decoding processing.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>22</b></figref> shows a typical processor arrangement in which the described embodiments may be implemented.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>23</b></figref> shows one embodiment of a method for encoding a video block using virtual temporal affine candidates.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>24</b></figref> shows one embodiment of a method for decoding a video block using virtual temporal affine candidates.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>25</b></figref> shows one embodiment of an apparatus for encoding or decoding a video block using virtual temporal affine candidates.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0040" num="0039">The general aspects described here are in the field of video compression. These aspects aim at improving compression efficiency compared to existing video compression systems.</p><p id="p-0041" num="0040">In the HEVC video compression standard (H.265/HEVC High Efficiency Video Coding, ITU-T H.265 Telecommunication Standardization Sector of ITU, &#x201c;Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services&#x2014;Coding of moving video, High efficiency video coding.&#x201d;), motion compensated temporal prediction is employed to exploit the redundancy that exists between successive pictures of a video.</p><p id="p-0042" num="0041">To do so, a motion vector is associated to each prediction unit (PU), which is introduced now. Each CTU (Coding Tree Unit) is represented by a Coding Tree in the compressed domain. This is a quad-tree division of the CTU, where each leaf is called a Coding Unit (CU), see <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0043" num="0042">Each CU is then given some Intra or Inter prediction parameters (Prediction Info). To do so, it is spatially partitioned into one or more Prediction Units (PUs), each PU being assigned some prediction information. The Intra or Inter coding mode is assigned on the CU level, see <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0044" num="0043">Exactly one Motion Vector is assigned to each PU in HEVC. This motion vector is used for motion compensated temporal prediction of the considered PU. Therefore, in HEVC, the motion model that links a predicted block and its reference block simply consists in a translation.</p><p id="p-0045" num="0044">In the Joint Exploration Model (JEM) and later VTM (Versatile Video Coding (VVC) Test Model) developed by the JVET (Joint Video Exploration Team) group, some richer motion models are supported to improve temporal prediction. To do so, a PU can be spatially divided into sub-PU and a richer model can be used to assign each sub-PU a dedicated motion vector.</p><p id="p-0046" num="0045">A CU is no longer divided into PU or TU, and some motion data is directly assigned to each CU. In this new codec design, a CU can be divided into sub-CU and a motion vector can be computed for each sub-CU.</p><p id="p-0047" num="0046">One of the new motion models introduced in the JEM is the affine model, which basically consists in using an affine model to represent the motion vectors in a CU.</p><p id="p-0048" num="0047">The motion model used is illustrated by <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The affine motion field consists in the following motion vector component values for each position (x, y) inside the considered block:</p><p id="p-0049" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>{</mo>     <mrow>      <mtable>       <mtr>        <mtd>         <mrow>          <msub>           <mi>v</mi>           <mi>x</mi>          </msub>          <mo>=</mo>          <mrow>           <mrow>            <mfrac>             <mrow>              <mo>(</mo>              <mrow>               <msub>                <mi>v</mi>                <mrow>                 <mn>1</mn>                 <mo>&#x2062;</mo>                 <mi>x</mi>                </mrow>               </msub>               <mo>-</mo>               <msub>                <mi>v</mi>                <mrow>                 <mn>0</mn>                 <mo>&#x2062;</mo>                 <mi>x</mi>                </mrow>               </msub>              </mrow>              <mo>)</mo>             </mrow>             <mi>w</mi>            </mfrac>            <mo>&#x2062;</mo>            <mi>x</mi>           </mrow>           <mo>-</mo>           <mrow>            <mfrac>             <mrow>              <mo>(</mo>              <mrow>               <msub>                <mi>v</mi>                <mrow>                 <mn>1</mn>                 <mo>&#x2062;</mo>                 <mi>y</mi>                </mrow>               </msub>               <mo>-</mo>               <msub>                <mi>v</mi>                <mrow>                 <mn>0</mn>                 <mo>&#x2062;</mo>                 <mi>y</mi>                </mrow>               </msub>              </mrow>              <mo>)</mo>             </mrow>             <mi>w</mi>            </mfrac>            <mo>&#x2062;</mo>            <mi>y</mi>           </mrow>           <mo>+</mo>           <msub>            <mi>v</mi>            <mrow>             <mn>0</mn>             <mo>&#x2062;</mo>             <mi>x</mi>            </mrow>           </msub>          </mrow>         </mrow>        </mtd>       </mtr>       <mtr>        <mtd>         <mrow>          <msub>           <mi>v</mi>           <mi>y</mi>          </msub>          <mo>=</mo>          <mrow>           <mrow>            <mfrac>             <mrow>              <mo>(</mo>              <mrow>               <msub>                <mi>v</mi>                <mrow>                 <mn>1</mn>                 <mo>&#x2062;</mo>                 <mi>y</mi>                </mrow>               </msub>               <mo>-</mo>               <msub>                <mi>v</mi>                <mrow>                 <mn>0</mn>                 <mo>&#x2062;</mo>                 <mi>y</mi>                </mrow>               </msub>              </mrow>              <mo>)</mo>             </mrow>             <mi>w</mi>            </mfrac>            <mo>&#x2062;</mo>            <mi>x</mi>           </mrow>           <mo>+</mo>           <mrow>            <mfrac>             <mrow>              <mo>(</mo>              <mrow>               <msub>                <mi>v</mi>                <mrow>                 <mn>1</mn>                 <mo>&#x2062;</mo>                 <mi>x</mi>                </mrow>               </msub>               <mo>-</mo>               <msub>                <mi>v</mi>                <mrow>                 <mn>0</mn>                 <mo>&#x2062;</mo>                 <mi>x</mi>                </mrow>               </msub>              </mrow>              <mo>)</mo>             </mrow>             <mi>w</mi>            </mfrac>            <mo>&#x2062;</mo>            <mi>y</mi>           </mrow>           <mo>+</mo>           <msub>            <mi>v</mi>            <mrow>             <mn>0</mn>             <mo>&#x2062;</mo>             <mi>y</mi>            </mrow>           </msub>          </mrow>         </mrow>        </mtd>       </mtr>      </mtable>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>affine</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>model</mi>      <mo>&#x2062;</mo>      <mtext></mtext>      <mi>used</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>to</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>generate</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>the</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>motion</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>field</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>inside</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>a</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>CU</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>to</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>predict</mi>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mi>Equation</mi>     <mo>&#x2062;</mo>     <mtext>   </mtext>     <mn>1</mn>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0050" num="0048">Coordinates (v<sub>0x</sub>, v<sub>0y</sub>) and (v<sub>1x</sub>, v<sub>1y</sub>) are the so-called control point motion vectors used to generate the affine motion field. The point (v<sub>0x</sub>, v<sub>0y</sub>) is the motion vector top-left corner control point and (v<sub>1x</sub>, v<sub>1y</sub>) is the motion vector top-right corner control point.</p><p id="p-0051" num="0049">In practice, to keep complexity reasonable, a motion vector is computed for each 4&#xd7;4 sub-block (sub-CU) of the considered CU, as illustrated on <figref idref="DRAWINGS">FIG. <b>4</b></figref>. An affine motion vector is computed from the control point motion vectors, at the position of the center of each sub-block. The obtained MV is represented at 1/16 pixel accuracy.</p><p id="p-0052" num="0050">As a result, the temporal coding of a coding unit in the affine mode consists in motion compensated predicting each sub-block with its own motion vector.</p><p id="p-0053" num="0051">Note that a model with three control points is also possible.</p><p id="p-0054" num="0052">Affine motion compensation can be used in three ways in the JEM: Affine Inter (AF_INTER), Affine Merge and Affine Template. They are introduced in the following:</p><p id="p-0055" num="0053">Affine Inter (AF_INTER).</p><p id="p-0056" num="0054">A CU in AMVP mode, having size larger than 8&#xd7;8, can be predicted in Affine Inter mode. This is signaled through a flag in the bit-stream. The generation of the Affine Motion Field for that inter CU includes determining control point motion vectors (CPMV), which are obtained by the decoder through the addition of a motion vector difference and a control point motion vector prediction (CPMVP). The CPMVP is a pair of motion vector candidates, respectively taken from the list (A, B, C) and (D, E), as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0057" num="0055">Up to 6 CPMVP may be obtained (3 for {right arrow over (v<sub>0</sub>)} multiplied by 2 for {right arrow over (v<sub>1</sub>)}).</p><p id="p-0058" num="0056">First CPMVP are checked for validity using Equation 2, for a block of height H and Width W:</p><p id="p-0059" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mrow>       <mrow>        <mrow>         <mover>          <mrow>           <mi>&#x394;</mi>           <mo>&#x2062;</mo>           <mi>Hor</mi>          </mrow>          <mo>&#x27f6;</mo>         </mover>         <mo>=</mo>         <mrow>          <mover>           <mrow>            <mi>v</mi>            <mo>&#x2062;</mo>            <mn>1</mn>           </mrow>           <mo>&#x2192;</mo>          </mover>          <mo>-</mo>          <mover>           <mrow>            <mi>v</mi>            <mo>&#x2062;</mo>            <mn>0</mn>           </mrow>           <mo>&#x2192;</mo>          </mover>         </mrow>        </mrow>        <mo>&#x2062;</mo>        <mtext></mtext>        <mrow>         <mi>DiffH</mi>         <mo>=</mo>         <mfrac>          <mi>W</mi>          <mn>2</mn>         </mfrac>        </mrow>        <mo>&#x2062;</mo>        <mtext></mtext>        <mrow>         <mi>DiffV</mi>         <mo>=</mo>         <mfrac>          <mi>H</mi>          <mn>2</mn>         </mfrac>        </mrow>        <mo>&#x2062;</mo>        <mtext></mtext>        <mrow>         <mi>validity</mi>         <mo>=</mo>         <mrow>          <mrow>           <mover>            <mrow>             <mi>&#x394;</mi>             <mo>&#x2062;</mo>             <mi>Hor</mi>            </mrow>            <mo>&#x27f6;</mo>           </mover>           <mo>!=</mo>           <mover>            <mn>0</mn>            <semantics definitionURL="">             <mo>&#x2192;</mo>             <annotation encoding="Mathematica">"\[Rule]"</annotation>            </semantics>           </mover>          </mrow>          <mo>&#x26;&#x26;</mo>          <mrow>           <mrow>            <mi>abs</mi>            <mo>&#x2061;</mo>            <mo>(</mo>            <mrow>             <mover>              <mrow>               <mi>&#x394;</mi>               <mo>&#x2062;</mo>               <mi>Hor</mi>              </mrow>              <mo>&#x27f6;</mo>             </mover>             <mo>.</mo>             <mi>X</mi>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2264;</mo>           <mtext></mtext>           <mi>DiffH</mi>          </mrow>          <mo>&#x26;&#x26;</mo>          <mrow>           <mrow>            <mi>abs</mi>            <mo>&#x2061;</mo>            <mo>(</mo>            <mrow>             <mover>              <mrow>               <mi>&#x394;</mi>               <mo>&#x2062;</mo>               <mi>Hor</mi>              </mrow>              <mo>&#x27f6;</mo>             </mover>             <mo>.</mo>             <mi>Y</mi>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2264;</mo>           <mi>DiffV</mi>          </mrow>          <mo>&#x26;&#x26;</mo>          <mrow>           <mrow>            <mi>abs</mi>            <mo>&#x2061;</mo>            <mo>(</mo>            <mrow>             <mover>              <mrow>               <mi>&#x394;</mi>               <mo>&#x2062;</mo>               <mi>Ver</mi>              </mrow>              <mo>&#x27f6;</mo>             </mover>             <mo>.</mo>             <mi>X</mi>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2264;</mo>           <mtext></mtext>           <mi>DiffH</mi>          </mrow>          <mo>&#x26;&#x26;</mo>          <mrow>           <mrow>            <mi>abs</mi>            <mo>&#x2061;</mo>            <mo>(</mo>            <mrow>             <mover>              <mrow>               <mi>&#x394;</mi>               <mo>&#x2062;</mo>               <mi>Ver</mi>              </mrow>              <mo>&#x27f6;</mo>             </mover>             <mo>.</mo>             <mi>Y</mi>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2264;</mo>           <mi>DiffV</mi>          </mrow>         </mrow>        </mrow>       </mrow>       <mo>)</mo>      </mrow>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>Validity</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>test</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>for</mi>     </mrow>     <mo>&#x2062;</mo>     <mtext></mtext>     <mrow>      <mi>each</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>CPMVP</mi>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mi>Equation</mi>     <mo>&#x2062;</mo>     <mtext>   </mtext>     <mn>2</mn>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0060" num="0057">Valid CPMVP are then sorted depending on the value of a third motion vector {right arrow over (v<sub>2</sub>)}, (taken from position F or G). The closest {right arrow over (v<sub>2</sub>)} is to the vector given by the affine motion model for the 4&#xd7;4 sub-block at the same position as {right arrow over (v<sub>2</sub>)}, the better is the CPMVP.</p><p id="p-0061" num="0058">For a block of Height H and Width W, the cost of each CPMVP is computed with Equation 3. In the following equation X and Y are respectively the horizontal and vertical components of a motion vector.</p><p id="p-0062" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mover>       <mrow>        <mi>&#x394;</mi>        <mo>&#x2062;</mo>        <mi>Hor</mi>       </mrow>       <mo>&#x27f6;</mo>      </mover>      <mo>=</mo>      <mrow>       <mover>        <mrow>         <mi>v</mi>         <mo>&#x2062;</mo>         <mn>1</mn>        </mrow>        <mo>&#x2192;</mo>       </mover>       <mo>-</mo>       <mover>        <mrow>         <mi>v</mi>         <mo>&#x2062;</mo>         <mn>0</mn>        </mrow>        <mo>&#x2192;</mo>       </mover>      </mrow>     </mrow>     <mo>&#x2062;</mo>     <mtext></mtext>     <mrow>      <mover>       <mrow>        <mi>&#x394;</mi>        <mo>&#x2062;</mo>        <mi>Ver</mi>       </mrow>       <mo>&#x27f6;</mo>      </mover>      <mo>=</mo>      <mrow>       <mover>        <mrow>         <mi>v</mi>         <mo>&#x2062;</mo>         <mn>2</mn>        </mrow>        <mo>&#x2192;</mo>       </mover>       <mo>-</mo>       <mover>        <mrow>         <mi>v</mi>         <mo>&#x2062;</mo>         <mn>0</mn>        </mrow>        <mo>&#x2192;</mo>       </mover>      </mrow>     </mrow>     <mo>&#x2062;</mo>     <mtext></mtext>     <mrow>      <mi>cost</mi>      <mo>=</mo>      <mrow>       <mrow>        <mi>abs</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mrow>          <mrow>           <mover>            <mrow>             <mi>&#x394;</mi>             <mo>&#x2062;</mo>             <mi>Hor</mi>            </mrow>            <mo>&#x27f6;</mo>           </mover>           <mo>.</mo>           <mi>X</mi>          </mrow>          <mo>*</mo>          <mi>H</mi>         </mrow>         <mo>-</mo>         <mrow>          <mrow>           <mover>            <mrow>             <mi>&#x394;</mi>             <mo>&#x2062;</mo>             <mi>Ver</mi>            </mrow>            <mo>&#x27f6;</mo>           </mover>           <mo>.</mo>           <mi>Y</mi>          </mrow>          <mo>*</mo>          <mi>W</mi>         </mrow>        </mrow>        <mo>)</mo>       </mrow>       <mo>+</mo>       <mtext></mtext>       <mrow>        <mrow>         <mi>abs</mi>         <mo>&#x2061;</mo>         <mo>(</mo>         <mrow>          <mrow>           <mrow>            <mover>             <mrow>              <mi>&#x394;</mi>              <mo>&#x2062;</mo>              <mi>Hor</mi>             </mrow>             <mo>&#x27f6;</mo>            </mover>            <mo>.</mo>            <mi>Y</mi>           </mrow>           <mo>*</mo>           <mi>H</mi>          </mrow>          <mo>+</mo>          <mrow>           <mrow>            <mover>             <mrow>              <mi>&#x394;</mi>              <mo>&#x2062;</mo>              <mi>Ver</mi>             </mrow>             <mo>&#x27f6;</mo>            </mover>            <mo>.</mo>            <mi>X</mi>           </mrow>           <mo>*</mo>           <mi>W</mi>          </mrow>         </mrow>         <mo>)</mo>        </mrow>        <mo>&#x2062;</mo>        <mtext>   </mtext>        <mi>Cost</mi>        <mo>&#x2062;</mo>        <mtext>   </mtext>        <mi>computed</mi>        <mo>&#x2062;</mo>        <mtext>   </mtext>        <mi>for</mi>       </mrow>      </mrow>     </mrow>     <mo>&#x2062;</mo>     <mtext></mtext>     <mrow>      <mi>each</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>CPMVP</mi>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mi>Equation</mi>     <mo>&#x2062;</mo>     <mtext>   </mtext>     <mn>3</mn>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0063" num="0059">Affine Merge</p><p id="p-0064" num="0060">In Affine Merge mode, a CU-level flag indicates if a merge CU employs affine motion compensation. If so, then the first available neighboring CU that has been coded in an Affine mode is selected among the ordered set of candidate positions (A, B, C, D, E) of <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0065" num="0061">Once the first neighboring CU in Affine mode is obtained, then the 3 motion vectors {right arrow over (v<sub>2</sub>)}, {right arrow over (v<sub>3</sub>)}, and {right arrow over (v<sub>4</sub>)} from the top-left, top-right and bottom-left corners of the neighboring CU are retrieved (see <figref idref="DRAWINGS">FIG. <b>8</b></figref>). Based on these three vectors, the two CPMV of the top-left and top-right corners of current CU are derived as follows:</p><p id="p-0066" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mrow>       <mrow>        <mrow>         <mover>          <msub>           <mi>v</mi>           <mn>0</mn>          </msub>          <mo>&#x2192;</mo>         </mover>         <mo>=</mo>         <mrow>          <mover>           <msub>            <mi>v</mi>            <mn>2</mn>           </msub>           <mo>&#x2192;</mo>          </mover>          <mo>+</mo>          <mrow>           <mrow>            <mo>(</mo>            <mrow>             <mover>              <msub>               <mi>v</mi>               <mn>4</mn>              </msub>              <mo>&#x2192;</mo>             </mover>             <mo>-</mo>             <mover>              <msub>               <mi>v</mi>               <mn>2</mn>              </msub>              <mo>&#x2192;</mo>             </mover>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2062;</mo>           <mrow>            <mo>(</mo>            <mfrac>             <mrow>              <msub>               <mi>Y</mi>               <mi>curr</mi>              </msub>              <mo>-</mo>              <msub>               <mi>Y</mi>               <mi>neighb</mi>              </msub>             </mrow>             <msub>              <mi>H</mi>              <mi>neighb</mi>             </msub>            </mfrac>            <mo>)</mo>           </mrow>          </mrow>          <mo>+</mo>          <mrow>           <mrow>            <mo>(</mo>            <mrow>             <mover>              <msub>               <mi>v</mi>               <mn>3</mn>              </msub>              <mo>&#x2192;</mo>             </mover>             <mo>-</mo>             <mover>              <msub>               <mi>v</mi>               <mn>2</mn>              </msub>              <mo>&#x2192;</mo>             </mover>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2062;</mo>           <mrow>            <mo>(</mo>            <mfrac>             <mrow>              <msub>               <mi>X</mi>               <mi>curr</mi>              </msub>              <mo>-</mo>              <msub>               <mi>X</mi>               <mi>neighb</mi>              </msub>             </mrow>             <msub>              <mi>W</mi>              <mi>neighb</mi>             </msub>            </mfrac>            <mo>)</mo>           </mrow>          </mrow>         </mrow>        </mrow>        <mo>&#x2062;</mo>        <mtext></mtext>        <mrow>         <mover>          <msub>           <mi>v</mi>           <mn>1</mn>          </msub>          <mo>&#x2192;</mo>         </mover>         <mo>=</mo>         <mrow>          <mover>           <msub>            <mi>v</mi>            <mn>0</mn>           </msub>           <mo>&#x2192;</mo>          </mover>          <mo>+</mo>          <mrow>           <mrow>            <mo>(</mo>            <mrow>             <mover>              <msub>               <mi>v</mi>               <mn>3</mn>              </msub>              <mo>&#x2192;</mo>             </mover>             <mo>-</mo>             <mover>              <msub>               <mi>v</mi>               <mn>2</mn>              </msub>              <mo>&#x2192;</mo>             </mover>            </mrow>            <mo>)</mo>           </mrow>           <mo>&#x2062;</mo>           <mrow>            <mo>(</mo>            <mfrac>             <msub>              <mi>W</mi>              <mi>curr</mi>             </msub>             <msub>              <mi>W</mi>              <mi>neighb</mi>             </msub>            </mfrac>            <mo>)</mo>           </mrow>           <mo>&#x2062;</mo>           <mtext>   </mtext>           <mi>derivation</mi>           <mo>&#x2062;</mo>           <mtext>   </mtext>           <mi>of</mi>           <mo>&#x2062;</mo>           <mtext>   </mtext>           <mi>current</mi>          </mrow>         </mrow>        </mrow>        <mo>&#x2062;</mo>        <mtext></mtext>        <mi>CU</mi>       </mrow>       <mo>&#x2019;</mo>      </mrow>      <mo>&#x2062;</mo>      <mi>s</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>CPMV</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>based</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>on</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>the</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>three</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>corner</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>motion</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>vectors</mi>     </mrow>     <mo>&#x2062;</mo>     <mtext></mtext>     <mrow>      <mi>of</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>the</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>neighboring</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>CU</mi>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mi>Equation</mi>     <mo>&#x2062;</mo>     <mtext>   </mtext>     <mn>4</mn>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0067" num="0062">When the control point motion vectors {right arrow over (v<sub>0</sub>)} and {right arrow over (v<sub>1</sub>)} of a current CU are obtained, the motion field inside the current CU is computed on a 4&#xd7;4 sub-CU basis, through the model of Equation 1.</p><p id="p-0068" num="0063">In a prior work, more candidates are added for Affine merge mode, selecting the best candidate among a maximum of 7 candidates and coding the index of the best candidate in the bitstream.</p><p id="p-0069" num="0064">Another type of candidate is called temporal affine:</p><p id="p-0070" num="0065">Similar to TMVP (Temporal Motion Vector Predictor) candidates, affine CU are searched in reference images and added to the candidates list.</p><p id="p-0071" num="0066">In another work, a new process to create &#x201c;virtual&#x201d; candidates is added (see <figref idref="DRAWINGS">FIG. <b>9</b></figref>). The motivation is to create affine candidates when no affine CU are available around the current CU. To do so, an affine model is created by taking the motion of individual sub-blocks at the corner and creating an &#x201c;affine&#x201d; model.</p><p id="p-0072" num="0067">Currently, in order to add temporal affine candidates, it is required to store in the temporal motion buffer (associated with each reference picture) the following information:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0068">The CU (or PU) information: size and position</li>        <li id="ul0002-0002" num="0069">The affine flag: to tell if a particular CU is affine or not</li>        <li id="ul0002-0003" num="0070">The affine model parameters in case it is not stored directly in the motion vector of the sub-block.</li>    </ul>    </li></ul></p><p id="p-0073" num="0071">One issue is that the memory needed to store this information is quite large for a hardware decoder.</p><p id="p-0074" num="0072">One problem solved by the general aspects described herein is to enable the creation of virtual temporal affine candidates, avoiding the storage of additional affine parameters in the temporal motion buffer.</p><p id="p-0075" num="0073">In JEM or VTM, there is no affine temporal. In JVET0021, affine temporal requires the storage of additional parameters.</p><p id="p-0076" num="0074">One basic idea of the proposed aspects described is creating new temporal affine candidates using only the classical temporal motion buffer information.</p><p id="p-0077" num="0075">Compared to the previous process of creating a virtual affine candidate from neighboring motion vectors, the virtual temporal affine candidate method can have some differences. As the temporal motion buffer resolution might differ from the current motion buffer, some adaptations can be needed to select the sub-block motion vectors. Again, because of the motion buffer resolution, the sub-block motion vector might be further away from the corner of the current CU defining the affine model, and a motion model adaptation can be needed. After sub-block motion vector selection, a rescaling depending on the reference index of both the current and reference frame (similar to the TMVP process) can be performed. Moreover, an additional step of reference index consistency can be performed.</p><p id="p-0078" num="0076">The described aspects involve normative modification of the codec: syntax and decoding process.</p><p id="p-0079" num="0077">The impacted codec modules are the motion estimation <b>175</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref> and the motion compensation <b>170</b> of <figref idref="DRAWINGS">FIG. <b>9</b> and <b>275</b></figref> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0080" num="0078"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows the sub-block used to compute the affine model. For each corners A, B and C, the process shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref> is applied: the sub-blocks are examined in order from 0 to 4. Once a valid sub-block is found (i.e. a sub-block with a motion vector), it is used to compute the affine model. Note that contrary to the classical virtual affine, sub-block inside the block can also be selected.</p><p id="p-0081" num="0079">In an alternative embodiment, the order can be different from A<b>0</b>, A<b>1</b>, . . . A<b>4</b> but is fixed between coder and decoder.</p><p id="p-0082" num="0080">In <figref idref="DRAWINGS">FIG. <b>14</b></figref>, we show the process to compute the resulting affine model for a 4-parameter affine model. For a 6-parameter affine model, the 3 corners can be used together. In this embodiment, the A corner is mandatory. In an alternate embodiment, the affine motion model can be computed as long as at least 2 corners are available.</p><p id="p-0083" num="0081">Alternatively, if a corner is missing (i.e. no motion vector), one more corner can be used (such as the D corner in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, for example).</p><p id="p-0084" num="0082">In all cases, when a corner is missing, it can be reconstructed if other corners are available using various methods, such as one described in a prior work. If all vectors to compute the affine model are equal, the temporal affine candidate is discarded from the list of candidates.</p><p id="p-0085" num="0083">The candidate collocated sub-block are taken from the reference pictures of the current picture buffer. For each reference list (list 0 and list 1), each reference picture is examined in order as a potential candidate for collocated block. For the given collocated block, its reference picture is taken, and a search is performed in the reference list of the current picture. If the picture is not found, then the first reference picture is taken for the current CU.</p><p id="p-0086" num="0084"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows the rescaling stage for collocated candidates. The main difference with a classical temporal candidate is that the reference POC (Picture Order Count) of the motion field for the current CU is chosen from the Ai candidate, the top-left motion vector candidate of a video block.</p><p id="p-0087" num="0085">Alternatively, the reference POC can be chosen as the first available candidate between A, B and Cas shown in <figref idref="DRAWINGS">FIG. <b>17</b></figref>.</p><p id="p-0088" num="0086">In case the reference POC is not in the list of the reference images of the current reference picture list, the POC of the first image in the reference picture buffer can be chosen.</p><p id="p-0089" num="0087">As the resolution of the motion buffer of a reference picture can be different from the resolution of the motion buffer of the current frame, some adaptation can be needed.</p><p id="p-0090" num="0088">A typical example is to have a current motion buffer with a resolution of 4&#xd7;4, meaning that a motion vector is available for each 4&#xd7;4 sub-block. For the reference motion buffer, a typical resolution is 8&#xd7;8.</p><p id="p-0091" num="0089">In order to select the 5 possible sub-blocks, depending on the current block position, the candidates are different (see <figref idref="DRAWINGS">FIG. <b>18</b></figref> for an example with Ai).</p><p id="p-0092" num="0090">Compared to a 4&#xd7;4 motion buffer where we take the vector at these coordinates:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0091">A<b>0</b>: (x, y)</li>        <li id="ul0004-0002" num="0092">A<b>1</b>: (x+4, y)</li>        <li id="ul0004-0003" num="0093">A<b>2</b>: (x, y&#x2212;4)</li>        <li id="ul0004-0004" num="0094">A<b>3</b>: (x&#x2212;4, y)</li>        <li id="ul0004-0005" num="0095">A<b>4</b>: (x, y+4)</li>    </ul>    </li></ul></p><p id="p-0093" num="0096">The motion vector candidate coordinate is adapted as:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0097">A<b>0</b>: (x, y)</li>        <li id="ul0006-0002" num="0098">A<b>1</b>: (x+8, y)</li>        <li id="ul0006-0003" num="0099">A<b>2</b>: (x, y&#x2212;8)</li>        <li id="ul0006-0004" num="0100">A<b>3</b>: (x&#x2212;8, y)</li>        <li id="ul0006-0005" num="0101">A<b>4</b>: (x, y+8)</li>    </ul>    </li></ul></p><p id="p-0094" num="0102">In case the current CU size is less than 2&#xd7;s, where s is the temporal motion buffer resolution (for example 8 here), then the affine candidate is discarded from the list of possible candidates.</p><p id="p-0095" num="0103">As shown in <figref idref="DRAWINGS">FIG. <b>19</b></figref>, the offset between the candidate motion vector and the support vector of the affine model can be quite large, especially when the temporal motion buffer resolution increases. In the figure, we show the case were the temporal motion buffer is built by a simple sub-sampling of the original motion buffer (i.e. always taking the top-left motion vector of the 4&#xd7;4 sub-block as the motion vector of the 8&#xd7;8 sub-block).</p><p id="p-0096" num="0104">In order to adapt to this offset, the affine model is computed using the method used for spatial affine model where a model is transferred from one CU to another.</p><p id="p-0097" num="0105">Alternatively, depending on the CU position, the candidate order can be changed. The main idea is to take first the closest candidate. In <figref idref="DRAWINGS">FIG. <b>18</b></figref>, the order to select the candidate would be:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0106">Case a: A<b>0</b>, A<b>2</b>, A<b>3</b>, A<b>1</b>, A<b>4</b> (alternatively A<b>2</b> and A<b>3</b> can be swap, as well as A<b>1</b> and A<b>4</b>)</li>        <li id="ul0008-0002" num="0107">Case b: A<b>0</b>, A<b>1</b>, A<b>4</b>, A<b>2</b>, A<b>3</b> (alternatively A<b>1</b> and A<b>4</b> can be swap, as well as A<b>2</b> and A<b>3</b>)</li>        <li id="ul0008-0003" num="0108">Case c: A<b>0</b>, A<b>1</b>, A<b>2</b>, A<b>3</b>, A<b>4</b> (alternatively A<b>1</b> and A<b>2</b> can be swap, as well as A<b>3</b> and A<b>4</b>)</li>        <li id="ul0008-0004" num="0109">Case d: A<b>0</b>, A<b>3</b>, A<b>4</b>, A<b>1</b>, A<b>2</b> (alternatively A<b>3</b> and A<b>4</b> can be swap, as well as A<b>1</b> and A<b>2</b>)</li>    </ul>    </li></ul></p><p id="p-0098" num="0110">This document describes a variety of aspects, including tools, features, embodiments, models, approaches, etc. Many of these aspects are described with specificity and, at least to show the individual characteristics, are often described in a manner that may sound limiting. However, this is for purposes of clarity in description, and does not limit the application or scope of those aspects. Indeed, all of the different aspects can be combined and interchanged to provide further aspects. Moreover, the aspects can be combined and interchanged with aspects described in earlier filings as well.</p><p id="p-0099" num="0111">The aspects described and contemplated in this document can be implemented in many different forms. <figref idref="DRAWINGS">FIGS. <b>20</b>, <b>21</b>, and <b>22</b></figref> below provide some embodiments, but other embodiments are contemplated and the discussion of <figref idref="DRAWINGS">FIGS. <b>20</b>, <b>21</b>, and <b>22</b></figref> does not limit the breadth of the implementations. At least one of the aspects generally relates to video encoding and decoding, and at least one other aspect generally relates to transmitting a bitstream generated or encoded. These and other aspects can be implemented as a method, an apparatus, a computer readable storage medium having stored thereon instructions for encoding or decoding video data according to any of the methods described, and/or a computer readable storage medium having stored thereon a bitstream generated according to any of the methods described.</p><p id="p-0100" num="0112">In the present application, the terms &#x201c;reconstructed&#x201d; and &#x201c;decoded&#x201d; may be used interchangeably, the terms &#x201c;pixel&#x201d; and &#x201c;sample&#x201d; may be used interchangeably, the terms &#x201c;image,&#x201d; &#x201c;picture&#x201d; and &#x201c;frame&#x201d; may be used interchangeably. Usually, but not necessarily, the term &#x201c;reconstructed&#x201d; is used at the encoder side while &#x201c;decoded&#x201d; is used at the decoder side.</p><p id="p-0101" num="0113">Various methods are described herein, and each of the methods comprises one or more steps or actions for achieving the described method. Unless a specific order of steps or actions is required for proper operation of the method, the order and/or use of specific steps and/or actions may be modified or combined.</p><p id="p-0102" num="0114">Various methods and other aspects described in this document can be used to modify modules, for example, the motion estimation, motion compensation, entropy coding, and/or decoding modules (<b>175</b>, <b>170</b>, <b>360</b>, <b>145</b>, <b>330</b>), of a video encoder <b>100</b> and decoder <b>200</b> as shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref> and <figref idref="DRAWINGS">FIG. <b>21</b></figref>. Moreover, the present aspects are not limited to VVC or HEVC, and can be applied, for example, to other standards and recommendations, whether pre-existing or future-developed, and extensions of any such standards and recommendations (including VVC and HEVC). Unless indicated otherwise, or technically precluded, the aspects described in this document can be used individually or in combination.</p><p id="p-0103" num="0115">Various numeric values are used in the present document. The specific values are for example purposes and the aspects described are not limited to these specific values.</p><p id="p-0104" num="0116"><figref idref="DRAWINGS">FIG. <b>20</b></figref> illustrates an encoder <b>100</b>. Variations of this encoder <b>100</b> are contemplated, but the encoder <b>100</b> is described below for purposes of clarity without describing all expected variations.</p><p id="p-0105" num="0117">Before being encoded, the video sequence may go through pre-encoding processing (<b>101</b>), for example, applying a color transform to the input color picture (e.g., conversion from RGB 4:4:4 to YCbCr 4:2:0), or performing a remapping of the input picture components in order to get a signal distribution more resilient to compression (for instance using a histogram equalization of one of the color components). Metadata can be associated with the pre-processing, and attached to the bitstream.</p><p id="p-0106" num="0118">In the encoder <b>100</b>, a picture is encoded by the encoder elements as described below. The picture to be encoded is partitioned (<b>102</b>) and processed in units of, for example, CUs. Each unit is encoded using, for example, either an intra or inter mode. When a unit is encoded in an intra mode, it performs intra prediction (<b>160</b>). In an inter mode, motion estimation (<b>175</b>) and compensation (<b>170</b>) are performed. The encoder decides (<b>105</b>) which one of the intra mode or inter mode to use for encoding the unit, and indicates the intra/inter decision by, for example, a prediction mode flag. Prediction residuals are calculated, for example, by subtracting (<b>110</b>) the predicted block from the original image block.</p><p id="p-0107" num="0119">The prediction residuals are then transformed (<b>125</b>) and quantized (<b>130</b>). The quantized transform coefficients, as well as motion vectors and other syntax elements, are entropy coded (<b>145</b>) to output a bitstream. The encoder can skip the transform and apply quantization directly to the non-transformed residual signal. The encoder can bypass both transform and quantization, i.e., the residual is coded directly without the application of the transform or quantization processes.</p><p id="p-0108" num="0120">The encoder decodes an encoded block to provide a reference for further predictions. The quantized transform coefficients are de-quantized (<b>140</b>) and inverse transformed (<b>150</b>) to decode prediction residuals. Combining (<b>155</b>) the decoded prediction residuals and the predicted block, an image block is reconstructed. In-loop filters (<b>165</b>) are applied to the reconstructed picture to perform, for example, deblocking/SAO (Sample Adaptive Offset) filtering to reduce encoding artifacts. The filtered image is stored at a reference picture buffer (<b>180</b>).</p><p id="p-0109" num="0121"><figref idref="DRAWINGS">FIG. <b>21</b></figref> illustrates a block diagram of a video decoder <b>200</b>. In the decoder <b>200</b>, a bitstream is decoded by the decoder elements as described below. Video decoder <b>200</b> generally performs a decoding pass reciprocal to the encoding pass as described in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. The encoder <b>100</b> also generally performs video decoding as part of encoding video data.</p><p id="p-0110" num="0122">In particular, the input of the decoder includes a video bitstream, which can be generated by video encoder <b>100</b>. The bitstream is first entropy decoded (<b>230</b>) to obtain transform coefficients, motion vectors, and other coded information. The picture partition information indicates how the picture is partitioned. The decoder may therefore divide (<b>235</b>) the picture according to the decoded picture partitioning information. The transform coefficients are de-quantized (<b>240</b>) and inverse transformed (<b>250</b>) to decode the prediction residuals. Combining (<b>255</b>) the decoded prediction residuals and the predicted block, an image block is reconstructed. The predicted block can be obtained (<b>270</b>) from intra prediction (<b>260</b>) or motion-compensated prediction (i.e., inter prediction) (<b>275</b>). In-loop filters (<b>265</b>) are applied to the reconstructed image. The filtered image is stored at a reference picture buffer (<b>280</b>).</p><p id="p-0111" num="0123">The decoded picture can further go through post-decoding processing (<b>285</b>), for example, an inverse color transform (e.g. conversion from YCbCr 4:2:0 to RGB 4:4:4) or an inverse remapping performing the inverse of the remapping process performed in the pre-encoding processing (<b>101</b>). The post-decoding processing can use metadata derived in the pre-encoding processing and signaled in the bitstream.</p><p id="p-0112" num="0124"><figref idref="DRAWINGS">FIG. <b>22</b></figref> illustrates a block diagram of an example of a system in which various aspects and embodiments are implemented. System <b>1000</b> can be embodied as a device including the various components described below and is configured to perform one or more of the aspects described in this document. Examples of such devices, include, but are not limited to, various electronic devices such as personal computers, laptop computers, smartphones, tablet computers, digital multimedia set top boxes, digital television receivers, personal video recording systems, connected home appliances, and servers. Elements of system <b>1000</b>, singly or in combination, can be embodied in a single integrated circuit, multiple ICs, and/or discrete components. For example, in at least one embodiment, the processing and encoder/decoder elements of system <b>1000</b> are distributed across multiple ICs and/or discrete components. In various embodiments, the system <b>1000</b> is communicatively coupled to other similar systems, or to other electronic devices, via, for example, a communications bus or through dedicated input and/or output ports. In various embodiments, the system <b>1000</b> is configured to implement one or more of the aspects described in this document.</p><p id="p-0113" num="0125">The system <b>1000</b> includes at least one processor <b>1010</b> configured to execute instructions loaded therein for implementing, for example, the various aspects described in this document. Processor <b>1010</b> can include embedded memory, input output interface, and various other circuitries as known in the art. The system <b>1000</b> includes at least one memory <b>1020</b> (e.g., a volatile memory device, and/or a non-volatile memory device). System <b>1000</b> includes a storage device <b>1040</b>, which can include non-volatile memory and/or volatile memory, including, but not limited to, EEPROM, ROM, PROM, RAM, DRAM, SRAM, flash, magnetic disk drive, and/or optical disk drive. The storage device <b>1040</b> can include an internal storage device, an attached storage device, and/or a network accessible storage device, as non-limiting examples.</p><p id="p-0114" num="0126">System <b>1000</b> includes an encoder/decoder module <b>1030</b> configured, for example, to process data to provide an encoded video or decoded video, and the encoder/decoder module <b>1030</b> can include its own processor and memory. The encoder/decoder module <b>1030</b> represents module(s) that can be included in a device to perform the encoding and/or decoding functions. As is known, a device can include one or both of the encoding and decoding modules. Additionally, encoder/decoder module <b>1030</b> can be implemented as a separate element of system <b>1000</b> or can be incorporated within processor <b>1010</b> as a combination of hardware and software as known to those skilled in the art.</p><p id="p-0115" num="0127">Program code to be loaded onto processor <b>1010</b> or encoder/decoder <b>1030</b> to perform the various aspects described in this document can be stored in storage device <b>1040</b> and subsequently loaded onto memory <b>1020</b> for execution by processor <b>1010</b>. In accordance with various embodiments, one or more of processor <b>1010</b>, memory <b>1020</b>, storage device <b>1040</b>, and encoder/decoder module <b>1030</b> can store one or more of various items during the performance of the processes described in this document. Such stored items can include, but are not limited to, the input video, the decoded video or portions of the decoded video, the bitstream, matrices, variables, and intermediate or final results from the processing of equations, formulas, operations, and operational logic.</p><p id="p-0116" num="0128">In several embodiments, memory inside of the processor <b>1010</b> and/or the encoder/decoder module <b>1030</b> is used to store instructions and to provide working memory for processing that is needed during encoding or decoding. In other embodiments, however, a memory external to the processing device (for example, the processing device can be either the processor <b>1010</b> or the encoder/decoder module <b>1030</b>) is used for one or more of these functions. The external memory can be the memory <b>1020</b> and/or the storage device <b>1040</b>, for example, a dynamic volatile memory and/or a non-volatile flash memory. In several embodiments, an external non-volatile flash memory is used to store the operating system of a television. In at least one embodiment, a fast, external dynamic volatile memory such as a RAM is used as working memory for video coding and decoding operations, such as for MPEG-2, HEVC, or VVC (Versatile Video Coding).</p><p id="p-0117" num="0129">The input to the elements of system <b>1000</b> can be provided through various input devices as indicated in block <b>1130</b>. Such input devices include, but are not limited to, (i) an RF portion that receives an RF signal transmitted, for example, over the air by a broadcaster, (ii) a Composite input terminal, (iii) a USB input terminal, and/or (iv) an HDMI input terminal.</p><p id="p-0118" num="0130">In various embodiments, the input devices of block <b>1130</b> have associated respective input processing elements as known in the art. For example, the RF portion can be associated with elements necessary for (i) selecting a desired frequency (also referred to as selecting a signal, or band-limiting a signal to a band of frequencies), (ii) downconverting the selected signal, (iii) band-limiting again to a narrower band of frequencies to select (for example) a signal frequency band which can be referred to as a channel in certain embodiments, (iv) demodulating the downconverted and band-limited signal, (v) performing error correction, and (vi) demultiplexing to select the desired stream of data packets. The RF portion of various embodiments includes one or more elements to perform these functions, for example, frequency selectors, signal selectors, band-limiters, channel selectors, filters, downconverters, demodulators, error correctors, and demultiplexers. The RF portion can include a tuner that performs various of these functions, including, for example, downconverting the received signal to a lower frequency (for example, an intermediate frequency or a near-baseband frequency) or to baseband. In one set-top box embodiment, the RF portion and its associated input processing element receives an RF signal transmitted over a wired (for example, cable) medium, and performs frequency selection by filtering, downconverting, and filtering again to a desired frequency band. Various embodiments rearrange the order of the above-described (and other) elements, remove some of these elements, and/or add other elements performing similar or different functions. Adding elements can include inserting elements in between existing elements, for example, inserting amplifiers and an analog-to-digital converter. In various embodiments, the RF portion includes an antenna.</p><p id="p-0119" num="0131">Additionally, the USB and/or HDMI terminals can include respective interface processors for connecting system <b>1000</b> to other electronic devices across USB and/or HDMI connections. It is to be understood that various aspects of input processing, for example, Reed-Solomon error correction, can be implemented, for example, within a separate input processing IC or within processor <b>1010</b> as necessary. Similarly, aspects of USB or HDMI interface processing can be implemented within separate interface ICs or within processor <b>1010</b> as necessary. The demodulated, error corrected, and demultiplexed stream is provided to various processing elements, including, for example, processor <b>1010</b>, and encoder/decoder <b>1030</b> operating in combination with the memory and storage elements to process the datastream as necessary for presentation on an output device.</p><p id="p-0120" num="0132">Various elements of system <b>1000</b> can be provided within an integrated housing, Within the integrated housing, the various elements can be interconnected and transmit data therebetween using suitable connection arrangement <b>1140</b>, for example, an internal bus as known in the art, including the I2C bus, wiring, and printed circuit boards.</p><p id="p-0121" num="0133">The system <b>1000</b> includes communication interface <b>1050</b> that enables communication with other devices via communication channel <b>1060</b>. The communication interface <b>1050</b> can include, but is not limited to, a transceiver configured to transmit and to receive data over communication channel <b>1060</b>. The communication interface <b>1050</b> can include, but is not limited to, a modem or network card and the communication channel <b>1060</b> can be implemented, for example, within a wired and/or a wireless medium.</p><p id="p-0122" num="0134">Data is streamed to the system <b>1000</b>, in various embodiments, using a Wi-Fi network such as IEEE 802.11. The Wi-Fi signal of these embodiments is received over the communications channel <b>1060</b> and the communications interface <b>1050</b> which are adapted for Wi-Fi communications. The communications channel <b>1060</b> of these embodiments is typically connected to an access point or router that provides access to outside networks including the Internet for allowing streaming applications and other over-the-top communications. Other embodiments provide streamed data to the system <b>1000</b> using a set-top box that delivers the data over the HDMI connection of the input block <b>1130</b>. Still other embodiments provide streamed data to the system <b>1000</b> using the RF connection of the input block <b>1130</b>.</p><p id="p-0123" num="0135">The system <b>1000</b> can provide an output signal to various output devices, including a display <b>1100</b>, speakers <b>1110</b>, and other peripheral devices <b>1120</b>. The other peripheral devices <b>1120</b> include, in various examples of embodiments, one or more of a stand-alone DVR, a disk player, a stereo system, a lighting system, and other devices that provide a function based on the output of the system <b>1000</b>. In various embodiments, control signals are communicated between the system <b>1000</b> and the display <b>1100</b>, speakers <b>1110</b>, or other peripheral devices <b>1120</b> using signaling such as AV.Link, CEC, or other communications protocols that enable device-to-device control with or without user intervention. The output devices can be communicatively coupled to system <b>1000</b> via dedicated connections through respective interfaces <b>1070</b>, <b>1080</b>, and <b>1090</b>. Alternatively, the output devices can be connected to system <b>1000</b> using the communications channel <b>1060</b> via the communications interface <b>1050</b>. The display <b>1100</b> and speakers <b>1110</b> can be integrated in a single unit with the other components of system <b>1000</b> in an electronic device, for example, a television. In various embodiments, the display interface <b>1070</b> includes a display driver, for example, a timing controller (T Con) chip.</p><p id="p-0124" num="0136">The display <b>1100</b> and speaker <b>1110</b> can alternatively be separate from one or more of the other components, for example, if the RF portion of input <b>1130</b> is part of a separate set-top box. In various embodiments in which the display <b>1100</b> and speakers <b>1110</b> are external components, the output signal can be provided via dedicated output connections, including, for example, HDMI ports, USB ports, or COMP outputs.</p><p id="p-0125" num="0137">The embodiments can be carried out by computer software implemented by the processor <b>1010</b> or by hardware, or by a combination of hardware and software. As a non-limiting example, the embodiments can be implemented by one or more integrated circuits. The memory <b>1020</b> can be of any type appropriate to the technical environment and can be implemented using any appropriate data storage technology, such as optical memory devices, magnetic memory devices, semiconductor-based memory devices, fixed memory, and removable memory, as non-limiting examples. The processor <b>1010</b> can be of any type appropriate to the technical environment, and can encompass one or more of microprocessors, general purpose computers, special purpose computers, and processors based on a multi-core architecture, as non-limiting examples.</p><p id="p-0126" num="0138">Various implementations involve decoding. &#x201c;Decoding&#x201d;, as used in this application, can encompass all or part of the processes performed, for example, on a received encoded sequence in order to produce a final output suitable for display. In various embodiments, such processes include one or more of the processes typically performed by a decoder, for example, entropy decoding, inverse quantization, inverse transformation, and differential decoding. In various embodiments, such processes also, or alternatively, include processes performed by a decoder of various implementations described in this application.</p><p id="p-0127" num="0139">As further examples, in one embodiment &#x201c;decoding&#x201d; refers only to entropy decoding, in another embodiment &#x201c;decoding&#x201d; refers only to differential decoding, and in another embodiment &#x201c;decoding&#x201d; refers to a combination of entropy decoding and differential decoding. Whether the phrase &#x201c;decoding process&#x201d; is intended to refer specifically to a subset of operations or generally to the broader decoding process will be clear based on the context of the specific descriptions and is believed to be well understood by those skilled in the art.</p><p id="p-0128" num="0140">Various implementations involve encoding. In an analogous way to the above discussion about &#x201c;decoding&#x201d;, &#x201c;encoding&#x201d; as used in this application can encompass all or part of the processes performed, for example, on an input video sequence in order to produce an encoded bitstream. In various embodiments, such processes include one or more of the processes typically performed by an encoder, for example, partitioning, differential encoding, transformation, quantization, and entropy encoding. In various embodiments, such processes also, or alternatively, include processes performed by an encoder of various implementations described in this application.</p><p id="p-0129" num="0141">As further examples, in one embodiment &#x201c;encoding&#x201d; refers only to entropy encoding, in another embodiment &#x201c;encoding&#x201d; refers only to differential encoding, and in another embodiment &#x201c;encoding&#x201d; refers to a combination of differential encoding and entropy encoding. Whether the phrase &#x201c;encoding process&#x201d; is intended to refer specifically to a subset of operations or generally to the broader encoding process will be clear based on the context of the specific descriptions and is believed to be well understood by those skilled in the art.</p><p id="p-0130" num="0142">Note that the syntax elements as used herein are descriptive terms. As such, they do not preclude the use of other syntax element names.</p><p id="p-0131" num="0143">When a figure is presented as a flow diagram, it should be understood that it also provides a block diagram of a corresponding apparatus. Similarly, when a figure is presented as a block diagram, it should be understood that it also provides a flow diagram of a corresponding method/process.</p><p id="p-0132" num="0144">Various embodiments refer to rate distortion optimization. In particular, during the encoding process, the balance or trade-off between the rate and distortion is usually considered, often given the constraints of computational complexity. The rate distortion optimization is usually formulated as minimizing a rate distortion function, which is a weighted sum of the rate and of the distortion. There are different approaches to solve the rate distortion optimization problem. For example, the approaches may be based on an extensive testing of all encoding options, including all considered modes or coding parameters values, with a complete evaluation of their coding cost and related distortion of the reconstructed signal after coding and decoding. Faster approaches may also be used, to save encoding complexity, in particular with computation of an approximated distortion based on the prediction or the prediction residual signal, not the reconstructed one. Mix of these two approaches can also be used, such as by using an approximated distortion for only some of the possible encoding options, and a complete distortion for other encoding options. Other approaches only evaluate a subset of the possible encoding options. More generally, many approaches employ any of a variety of techniques to perform the optimization, but the optimization is not necessarily a complete evaluation of both the coding cost and related distortion.</p><p id="p-0133" num="0145">The implementations and aspects described herein can be implemented in, for example, a method or a process, an apparatus, a software program, a data stream, or a signal. Even if only discussed in the context of a single form of implementation (for example, discussed only as a method), the implementation of features discussed can also be implemented in other forms (for example, an apparatus or program). An apparatus can be implemented in, for example, appropriate hardware, software, and firmware. The methods can be implemented in, for example, a processor, which refers to processing devices in general, including, for example, a computer, a microprocessor, an integrated circuit, or a programmable logic device. Processors also include communication devices, such as, for example, computers, cell phones, portable/personal digital assistants (&#x201c;PDAs&#x201d;), and other devices that facilitate communication of information between end-users.</p><p id="p-0134" num="0146">Reference to &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; or &#x201c;one implementation&#x201d; or &#x201c;an implementation&#x201d;, as well as other variations thereof, means that a particular feature, structure, characteristic, and so forth described in connection with the embodiment is included in at least one embodiment. Thus, the appearances of the phrase &#x201c;in one embodiment&#x201d; or &#x201c;in an embodiment&#x201d; or &#x201c;in one implementation&#x201d; or &#x201c;in an implementation&#x201d;, as well any other variations, appearing in various places throughout this document are not necessarily all referring to the same embodiment.</p><p id="p-0135" num="0147">Additionally, this document may refer to &#x201c;determining&#x201d; various pieces of information. Determining the information can include one or more of, for example, estimating the information, calculating the information, predicting the information, or retrieving the information from memory.</p><p id="p-0136" num="0148">Further, this document may refer to &#x201c;accessing&#x201d; various pieces of information. Accessing the information can include one or more of, for example, receiving the information, retrieving the information (for example, from memory), storing the information, moving the information, copying the information, calculating the information, determining the information, predicting the information, or estimating the information.</p><p id="p-0137" num="0149">Additionally, this document may refer to &#x201c;receiving&#x201d; various pieces of information. Receiving is, as with &#x201c;accessing&#x201d;, intended to be a broad term. Receiving the information can include one or more of, for example, accessing the information, or retrieving the information (for example, from memory). Further, &#x201c;receiving&#x201d; is typically involved, in one way or another, during operations such as, for example, storing the information, processing the information, transmitting the information, moving the information, copying the information, erasing the information, calculating the information, determining the information, predicting the information, or estimating the information.</p><p id="p-0138" num="0150">It is to be appreciated that the use of any of the following &#x201c;/&#x201d;, &#x201c;and/or&#x201d;, and &#x201c;at least one of&#x201d;, for example, in the cases of &#x201c;A/B&#x201d;, &#x201c;A and/or B&#x201d; and &#x201c;at least one of A and B&#x201d;, is intended to encompass the selection of the first listed option (A) only, or the selection of the second listed option (B) only, or the selection of both options (A and B). As a further example, in the cases of &#x201c;A, B, and/or C&#x201d; and &#x201c;at least one of A, B, and C&#x201d;, such phrasing is intended to encompass the selection of the first listed option (A) only, or the selection of the second listed option (B) only, or the selection of the third listed option (C) only, or the selection of the first and the second listed options (A and B) only, or the selection of the first and third listed options (A and C) only, or the selection of the second and third listed options (B and C) only, or the selection of all three options (A and B and C). This may be extended, as is clear to one of ordinary skill in this and related arts, for as many items as are listed.</p><p id="p-0139" num="0151">Also, as used herein, the word &#x201c;signal&#x201d; refers to, among other things, indicating something to a corresponding decoder. For example, in certain embodiments the encoder signals a particular one of a plurality of parameters. In this way, in an embodiment the same parameter is used at both the encoder side and the decoder side. Thus, for example, an encoder can transmit (explicit signaling) a particular parameter to the decoder so that the decoder can use the same particular parameter. Conversely, if the decoder already has the particular parameter as well as others, then signaling can be used without transmitting (implicit signaling) to simply allow the decoder to know and select the particular parameter. By avoiding transmission of any actual functions, a bit savings is realized in various embodiments. It is to be appreciated that signaling can be accomplished in a variety of ways. For example, one or more syntax elements, flags, and so forth are used to signal information to a corresponding decoder in various embodiments. While the preceding relates to the verb form of the word &#x201c;signal&#x201d;, the word &#x201c;signal&#x201d; can also be used herein as a noun.</p><p id="p-0140" num="0152">As will be evident to one of ordinary skill in the art, implementations can produce a variety of signals formatted to carry information that can be, for example, stored or transmitted. The information can include, for example, instructions for performing a method, or data produced by one of the described implementations. For example, a signal can be formatted to carry the bitstream of a described embodiment. Such a signal can be formatted, for example, as an electromagnetic wave (for example, using a radio frequency portion of spectrum) or as a baseband signal. The formatting can include, for example, encoding a data stream and modulating a carrier with the encoded data stream. The information that the signal carries can be, for example, analog or digital information. The signal can be transmitted over a variety of different wired or wireless links, as is known. The signal can be stored on a processor-readable medium.</p><p id="p-0141" num="0153">Embodiments may include one or more of the following features or entities, alone or in any combination across various different claim categories and types:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0154">Modifying the temporal affine candidate selection process applied in the decoder and/or encoder.</li>        <li id="ul0010-0002" num="0155">Enabling several advanced temporal affine candidate selection methods in the decoder and/or encoder.</li>        <li id="ul0010-0003" num="0156">Inserting in the signaling syntax elements that enable the decoder to identify the temporal affine candidate to use.</li>        <li id="ul0010-0004" num="0157">Selecting, based on these syntax elements, the temporal affine candidate selection method to apply at the decoder.</li>        <li id="ul0010-0005" num="0158">Applying the temporal affine candidate selection method for deriving the temporal affine candidate at the decoder.</li>        <li id="ul0010-0006" num="0159">Adapting residues at an encoder according to any of the embodiments discussed.</li>        <li id="ul0010-0007" num="0160">A bitstream or signal that includes one or more of the described syntax elements, or variations thereof.</li>        <li id="ul0010-0008" num="0161">Inserting in the signaling syntax elements that enable the decoder to adapt residues in a manner corresponding to that used by an encoder.</li>        <li id="ul0010-0009" num="0162">Creating and/or transmitting and/or receiving and/or decoding a bitstream or signal that includes one or more of the described syntax elements, or variations thereof.</li>        <li id="ul0010-0010" num="0163">A TV, set-top box, cell phone, tablet, or other electronic device that performs temporal affine candidate selection according to any of the embodiments described.</li>        <li id="ul0010-0011" num="0164">A TV, set-top box, cell phone, tablet, or other electronic device that performs temporal affine candidate selection according to any of the embodiments described, and that displays (e.g. using a monitor, screen, or other type of display) a resulting image.</li>        <li id="ul0010-0012" num="0165">A TV, set-top box, cell phone, tablet, or other electronic device that tunes (e.g. using a tuner) a channel to receive a signal including an encoded image, and performs temporal affine candidate selection according to any of the embodiments described.</li>        <li id="ul0010-0013" num="0166">A TV, set-top box, cell phone, tablet, or other electronic device that receives (e.g. using an antenna) a signal over the air that includes an encoded image, and performs temporal affine candidate selection according to any of the embodiments described.</li>    </ul>    </li></ul></p><p id="p-0142" num="0167">Various other generalized, as well as particularized, aspects, embodiments and claims are also supported and contemplated throughout this disclosure.</p><p id="p-0143" num="0168">One embodiment of a method <b>2300</b> for coding a video block using virtual temporal affine candidates is shown in <figref idref="DRAWINGS">FIG. <b>23</b></figref>. The method commences at Start block <b>2301</b> and control proceeds to block <b>2310</b> for determining at least one predictor candidate. Control then proceeds from block <b>2310</b> to block <b>2320</b> for determining for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate. Control then proceeds from block <b>2320</b> to block <b>2330</b> for determining for the video block being encoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner. Control then proceeds from block <b>2330</b> to block <b>2340</b> for determining, based on the one or more corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being encoded. Control proceeds from block <b>2340</b> to block <b>2350</b> for encoding the video block based on the corresponding motion field.</p><p id="p-0144" num="0169">One embodiment of a method <b>2400</b> for decoding a video block using virtual temporal affine candidates is shown in <figref idref="DRAWINGS">FIG. <b>24</b></figref>. The method commences at Start block <b>2401</b> and control proceeds to block <b>2410</b> for determining at least one predictor candidate. Control then proceeds from block <b>2410</b> to block <b>2420</b> for determining for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate. Control then proceeds from block <b>2420</b> to block <b>2430</b> for determining for the video block being decoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner. Control then proceeds from block <b>2430</b> to block <b>2440</b> for determining, based on the one or more corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being decoded. Control proceeds from block <b>2440</b> to block <b>2450</b> for decoding the video block based on the corresponding motion field.</p><p id="p-0145" num="0170"><figref idref="DRAWINGS">FIG. <b>25</b></figref> shows one embodiment of an apparatus <b>2500</b> for encoding or decoding a video block using virtual temporal affine candidates. The apparatus comprises Processor <b>2510</b> having one or more input and output ports and can be interconnected through one or more communication ports to a memory <b>2520</b>. Apparatus <b>2500</b> is capable of performing either of the methods of <figref idref="DRAWINGS">FIG. <b>23</b></figref> or <figref idref="DRAWINGS">FIG. <b>24</b></figref> or any variant.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230007239A1-20230105-M00001.NB"><img id="EMI-M00001" he="16.26mm" wi="76.20mm" file="US20230007239A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230007239A1-20230105-M00002.NB"><img id="EMI-M00002" he="40.89mm" wi="76.20mm" file="US20230007239A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230007239A1-20230105-M00003.NB"><img id="EMI-M00003" he="26.08mm" wi="76.20mm" file="US20230007239A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004" nb-file="US20230007239A1-20230105-M00004.NB"><img id="EMI-M00004" he="21.17mm" wi="76.20mm" file="US20230007239A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>determining, for a video block being encoded in a picture, at least one predictor candidate;</claim-text><claim-text>determining for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate;</claim-text><claim-text>determining for the video block being encoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner;</claim-text><claim-text>rescaling the one or more control point motion vectors based on the reference index of both a current and a reference frame;</claim-text><claim-text>determining, based on the one or more rescaled corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being encoded; and,</claim-text><claim-text>encoding the video block based on the corresponding motion field.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. An apparatus for encoding a video block, comprising:<claim-text>a processor, configured to:</claim-text><claim-text>determine, for a video block being encoded in a picture, at least one predictor candidate;</claim-text><claim-text>determine for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate;</claim-text><claim-text>determine for the video block being encoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner;</claim-text><claim-text>rescaling the one or more control point motion vectors based on the reference index of both a current and a reference frame;</claim-text><claim-text>determining, based on the one or more rescaled corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being encoded; and,</claim-text><claim-text>encode the video block based on the corresponding motion field.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. A method, comprising:<claim-text>determining, for a video block being decoded in a picture, at least one predictor candidate;</claim-text><claim-text>determining for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate;</claim-text><claim-text>determining for the video block being decoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner;</claim-text><claim-text>rescaling the one or more control point motion vectors based on the reference index of both a current and a reference frame;</claim-text><claim-text>determining, based on the one or more rescaled corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being decoded; and,</claim-text><claim-text>decoding the video block based on the corresponding motion field.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. An apparatus for decoding a video block, comprising:<claim-text>a processor, configured to:</claim-text><claim-text>determine, for a video block being decoded in a picture, at least one predictor candidate;</claim-text><claim-text>determine for the at least one predictor candidate, one or more corresponding control point motion vectors, based on motion information associated to the at least one predictor candidate;</claim-text><claim-text>determine for the video block being decoded, one or more corresponding control point motion vectors, based on neighboring sub-blocks surrounding corner sub-blocks of the video block, wherein said neighboring sub-blocks surrounding corner sub-blocks are searched in an order to determine a first neighboring sub-block having a motion vector and using that as a predictor candidate for the corresponding corner;</claim-text><claim-text>rescaling the one or more control point motion vectors based on the reference index of both a current and a reference frame;</claim-text><claim-text>determining, based on the one or more rescaled corresponding control point motion vectors determined for the video block, a corresponding motion field, wherein the corresponding motion field identifies motion vectors used for prediction of sub-blocks of the video block being decoded; and,</claim-text><claim-text>decode the video block based on the corresponding motion field.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said order is the corner sub-block of the video block, followed by sub-blocks right, above, left, and below the corner sub-block.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein corners of the video block to find candidate motion vectors to use in determining control point motion vectors are top-left, and either bottom-left or top-right.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein picture order count for said motion field is chosen from the top-left motion vector candidate of the video block.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein picture order count for said motion field is chosen from the top-left motion vector candidate, if available, followed by top-right, if available, and the bottom-left of the video block.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein picture order count of a first image in a reference picture buffer is used if a reference picture order count is not among the reference images in a current reference picture list.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein resolution adaptation is performed on a current motion buffer to correspond to a reference picture buffer by shifting sub-block locations for a candidate motion vector.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A device comprising:<claim-text>an apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>; and</claim-text><claim-text>at least one of (i) an antenna configured to receive a signal, the signal including the video block, (ii) a band limiter configured to limit the received signal to a band of frequencies that includes the video block, and (iii) a display configured to display an output representative of the video block.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A non-transitory computer readable medium containing data content generated according to the method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, for playback using a processor.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A signal comprising video data generated according to the method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, for playback using a processor.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A computer program product comprising instructions which, when the program is executed by a computer, cause the computer to carry out the method of <claim-ref idref="CLM-00003">claim 3</claim-ref>.</claim-text></claim></claims></us-patent-application>