<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004164A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004164</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940664</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>02</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>V</subclass><main-group>20</main-group><subgroup>56</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>0219</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>0214</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>0223</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>6218</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>0088</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>V</subclass><main-group>20</main-group><subgroup>588</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>2201</main-group><subgroup>0213</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">PATH PERCEPTION DIVERSITY AND REDUNDANCY IN AUTONOMOUS MACHINE APPLICATIONS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16781893</doc-number><date>20200204</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17940664</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62801211</doc-number><date>20190205</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NVIDIA Corporation</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Onofrio</last-name><first-name>Davide Marco</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Seo</last-name><first-name>Hae-Jong</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Nister</last-name><first-name>David</first-name><address><city>Bellevue</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Park</last-name><first-name>Minwoo</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Cvijetic</last-name><first-name>Neda</first-name><address><city>East Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In various examples, a path perception ensemble is used to produce a more accurate and reliable understanding of a driving surface and/or a path there through. For example, an analysis of a plurality of path perception inputs provides testability and reliability for accurate and redundant lane mapping and/or path planning in real-time or near real-time. By incorporating a plurality of separate path perception computations, a means of metricizing path perception correctness, quality, and reliability is provided by analyzing whether and how much the individual path perception signals agree or disagree. By implementing this approach&#x2014;where individual path perception inputs fail in almost independent ways&#x2014;a system failure is less statistically likely. In addition, with diversity and redundancy in path perception, comfortable lane keeping on high curvature roads, under severe road conditions, and/or at complex intersections, as well as autonomous negotiation of turns at intersections, may be enabled.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="81.11mm" wi="158.75mm" file="US20230004164A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="254.17mm" wi="168.57mm" orientation="landscape" file="US20230004164A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="149.01mm" wi="139.19mm" orientation="landscape" file="US20230004164A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="251.88mm" wi="157.99mm" orientation="landscape" file="US20230004164A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="248.24mm" wi="157.99mm" orientation="landscape" file="US20230004164A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="251.04mm" wi="157.99mm" orientation="landscape" file="US20230004164A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="239.78mm" wi="119.97mm" file="US20230004164A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="253.32mm" wi="168.57mm" orientation="landscape" file="US20230004164A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="227.41mm" wi="119.80mm" file="US20230004164A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="249.09mm" wi="149.01mm" orientation="landscape" file="US20230004164A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="243.67mm" wi="135.81mm" orientation="landscape" file="US20230004164A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="253.75mm" wi="170.52mm" file="US20230004164A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="219.12mm" wi="167.39mm" orientation="landscape" file="US20230004164A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="232.49mm" wi="130.73mm" file="US20230004164A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a Continuation of U.S. patent application Ser. No. 16/781,893, filed Feb. 4, 2020, which claims the benefit of U.S. Provisional Application No. 62/801,211, filed on Feb. 5, 2019. The contents of each of which are hereby incorporated by reference in its entirety.</p><p id="p-0003" num="0002">This application is related to U.S. Provisional Application No. 62/946,689, filed on Dec. 11, 2019, U.S. Non-Provisional application Ser. No. 16/535,440, filed on Aug. 8, 2019, U.S. Non-Provisional application Ser. No. 16/514,230, filed on Jul. 27, 2019, U.S. Non-Provisional application Ser. No. 16/433,994, filed on Jun. 6, 2019, U.S. Non-Provisional application Ser. No. 16/409,056, filed on May 10, 2019, U.S. Non-Provisional application Ser. No. 16/378,188, filed on Apr. 8, 2019, U.S. Non-Provisional application Ser. No. 16/286,329, filed on Feb. 26, 2019, and U.S. Non-Provisional application Ser. No. 16/241,005, filed on Jan. 7, 2019, each of which is hereby incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The ability to correctly perceive the structure of lanes along a driving surface&#x2014;and/or to perceive a drivable path there through&#x2014;is critical for achieving an acceptable level of safety in autonomous machine applications at all levels of autonomy. For example, an autonomous or semi-autonomous vehicle may perceive: a single path that enables lane-keeping functionality; adjacent paths in support of lane change functionality and/or negotiating driving features such as road forks, turns, cloverleaf interchanges, and merges; and/or an overall lane structure of a current lane of travel and/or one or more adjacent lanes in order to account for potential trajectories of surrounding objects&#x2014;such as vehicles, pedestrians, bicyclists, or the like.</p><p id="p-0005" num="0004">Conventional approaches to path perception and/or lane structure computations have relied on a single data source. For example, some conventional approaches rely on the output of a single deep neural network (DNN) that is trained to detect and compute locations of lane lines&#x2014;which by extension may enable the determination of a drivable path there through. Another example includes the use of a trajectory output signal generated from a high-definition (HD) map. In either example, a single output signal corresponding to a perceived path may be relied upon for controlling an autonomous vehicle. However, obtaining a real-time metric on path perception correctness with a single path perception input signal is not feasible, since measuring and comparing the path perception accuracy of a single signal requires a volume of computing that is impractical to perform in real-time&#x2014;and thus requires offline comparison to ground truth datasets. As such, because it may not be possible to verify the reliability of the path perception signal, the autonomous vehicle system may rely on inaccurate information when the path perception input fails&#x2014;thereby leading to disengagement of autonomous driving functionality in some examples. The risk of failure is even further increased in challenging scenarios such as high curvature roads, poor or severe road conditions, or multi-way intersection negotiation. In addition, even where the path perception signal is not entirely inaccurate, the use of a single path perception signal may cause the system to perform poorly on other autonomous driving metrics, such as metrics for passenger comfort and/or smoothness in executing vehicle maneuvers.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">Embodiments of the present disclosure relate to path perception diversity and redundancy in autonomous machine applications. Systems and methods are disclosed for path perception and lane mapping using a plurality of input signals from deep neural networks (DNNs), high-definition (HD) maps, and/or object traces from one or more objects in the environment. As a result, real-time assessment of path perception quality and reliability may be determined, and a lane mapping and/or path computation may be generated by leveraging a diverse set of path perception input signals.</p><p id="p-0007" num="0006">In contrast to conventional systems, such as those described above, an ensemble of path perception approaches are collectively leveraged to produce a more accurate and reliable understanding of a driving surface and/or a path there through. For example, where a single path perception input may be inaccurate, an analysis of a plurality of path perception inputs provides testability and reliability for accurate and redundant lane mapping and/or path planning in real-time or near real-time. Specifically, through agreement/disagreement analyses of different path perception signal components, reliably metricizing path perception results live in an autonomous or semi-autonomous vehicle becomes possible&#x2014;while also enabling a higher overall quality of path perception results.</p><p id="p-0008" num="0007">As such, incorporating a plurality of separate path perception computations provides a means of metricizing path perception correctness, quality, and reliability by analyzing whether and how much the individual path perception signals agree or disagree. By implementing this approach&#x2014;where individual path perception inputs fail in almost independent ways&#x2014;a system failure is less statistically likely. In addition, with diversity and redundancy in path perception, advanced functionalities&#x2014;such as comfortable lane keeping on high curvature roads or under severe road conditions, and/or at complex intersections&#x2014;as well as autonomous negotiation of turns at intersections may be enabled. Using the approaches described herein, mean autonomous distance (&#x201c;MAD,&#x201d; the average distance driven between autonomy disengagement events) may be increased and a way to estimate confidence of path perception correctness may be achieved&#x2014;which in turn may allow for diversity and redundancy for safety, as well as higher precision and comfort for autonomous or semi-autonomous driving functionality.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">The present systems and methods for path perception diversity and redundancy in autonomous machine applications are described in detail below with reference to the attached drawing figures, wherein:</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a data flow diagram for an example process of generating an aggregate lane representation from a plurality of individually generated lane representations, in accordance with some embodiments of the present disclosure;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an example illustration of computing a difference between two polylines, in accordance with some embodiments of the present disclosure;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is an example visualization of an aggregate lane representation with high confidence, in accordance with some embodiments of the present disclosure;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is another example visualization of an aggregate lane representation with medium confidence, in accordance with some embodiments of the present disclosure;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b>C</figref> is another example visualization of an aggregate lane representation with low confidence, in accordance with some embodiments of the present disclosure;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram showing a method of generating an aggregate lane representation, in accordance with some embodiments of the present invention;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a data flow diagram for an example process of generating an aggregate lane representation from a plurality of individually generated lane representations using a deep neural network (DNN), in accordance with some embodiments of the present disclosure;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram showing an example method of generating an aggregate lane representation using a DNN, in accordance with some embodiments of the present disclosure;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is an illustration of an example autonomous vehicle, in accordance with some embodiments of the present disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> is an example of camera locations and fields of view for the example autonomous vehicle of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, in accordance with some embodiments of the present disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> is a block diagram of an example system architecture for the example autonomous vehicle of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, in accordance with some embodiments of the present disclosure;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> is a system diagram for communication between cloud-based server(s) and the example autonomous vehicle of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, in accordance with some embodiments of the present disclosure; and</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example computing device suitable for use in implementing some embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022">Systems and methods are disclosed related to path perception diversity and redundancy in autonomous machine applications. Although the present disclosure may be described with respect to an example autonomous vehicle <b>700</b> (alternatively referred to herein as &#x201c;vehicle <b>700</b>&#x201d;, &#x201c;ego-vehicle <b>700</b>&#x201d;, or &#x201c;autonomous vehicle <b>700</b>,&#x201d; an example of which is described with respect to <figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>D</figref>, this is not intended to be limiting. For example, the systems and methods described herein may be used by, without limitation, non-autonomous vehicles, semi-autonomous vehicles (e.g., in one or more adaptive driver assistance systems (ADAS)), robots, warehouse vehicles, off-road vehicles, flying vessels, boats, shuttles, emergency response vehicles, motorcycles, electric or motorized bicycles, aircraft, construction vehicles, underwater craft, drones, and/or other vehicle types. In addition, although the present disclosure may be described with respect to autonomous driving, semi-autonomous, or ADAS systems, this is not intended to be limiting. For example, the systems and methods described herein may be used in a simulation environment (e.g., to test accuracy of machine learning models during simulation), in robotics, aerial systems, boating systems, and/or other technology areas, such as for perception, world model management, path planning, obstacle avoidance, and/or other processes.</p><p id="p-0024" num="0023">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a data flow diagram for a process <b>100</b> of generating an aggregate lane representation from a plurality of individual generated lane representations, in accordance with some embodiments of the present disclosure. For example, redundancy and diversity is introduced by combining different underlying path perception signals in a way that enables real-time or near real-time assessment of path perception quality and reliability. For example, the process <b>100</b> leverages ensemble methods, which include techniques that create multiple models&#x2014;e.g., lane graphs or other path or road layout representations&#x2014;and combines them to produce an improved result. As such, because multiple perception sources are used, this ensemble of methods produces more accurate and reliable results than a single perception source would. As a result, not only is the accuracy of the aggregate or ensemble lane representation or lane graph able to be computed&#x2014;e.g., through an agreement/disagreement analysis of the different path perception signal components&#x2014;the reliability of the generated ensemble or aggregate lane representation or lane graph is also increased as compared to conventional approaches, such as those described herein.</p><p id="p-0025" num="0024">The process <b>100</b> may include generating and/or receiving sensor data <b>102</b> from one or more sensors of the vehicle <b>700</b>. In deployment, the sensor data <b>102</b> may be used by the vehicle <b>700</b>, and within the process <b>100</b>, to generate any number of lane graphs <b>112</b> (e.g., lane graphs <b>112</b>A-<b>112</b>N, alternatively referred to herein as a &#x201c;lane representation&#x201d;) that may be analyzed by a lane graph aggregator <b>114</b> to generate an aggregate lane graph <b>124</b> (alternatively referred to herein as an &#x201c;ensemble lane graph&#x201d;, an &#x201c;aggregate lane representation&#x201d;, and an &#x201c;ensemble lane representation&#x201d;). Although referred to as lane graphs herein, the lane graphs <b>112</b> and/or the aggregate lane graph <b>124</b> may include any type of path perception, lane layout, road layout, map element, driving surface structure, and/or other representation corresponding to a driving surface and/or a path of the vehicle <b>700</b>, another vehicle, or another object type. In embodiments where the sensor data <b>102</b> is generated by one or more sensors of another object type&#x2014;such as an aircraft, a water vessel, etc.&#x2014;the lane graphs <b>112</b> and/or the aggregate lane graphs <b>124</b> may include alternate representations corresponding to the particular environment of travel of the respective object type.</p><p id="p-0026" num="0025">The sensor data <b>102</b> may include, without limitation, sensor data <b>102</b> from any of the sensors of the vehicle <b>700</b> (and/or other vehicles or objects, such as robotic devices, VR systems, AR systems, aircraft, watercraft, etc., in some examples). For example, and with reference to <figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>C</figref>, the sensor data <b>102</b> may include the data generated by, without limitation, global navigation satellite systems (GNSS) sensor(s) <b>758</b> (e.g., Global Positioning System sensor(s)), RADAR sensor(s) <b>760</b>, ultrasonic sensor(s) <b>762</b>, LIDAR sensor(s) <b>764</b>, inertial measurement unit (IMU) sensor(s) <b>766</b> (e.g., accelerometer(s), gyroscope(s), magnetic compass(es), magnetometer(s), etc.), microphone(s) <b>796</b>, stereo camera(s) <b>768</b>, wide-view camera(s) <b>770</b> (e.g., fisheye cameras), infrared camera(s) <b>772</b>, surround camera(s) <b>774</b> (e.g., 360 degree cameras), long-range and/or mid-range camera(s) <b>798</b>, speed sensor(s) <b>744</b> (e.g., for measuring the speed of the vehicle <b>700</b>), and/or other sensor types. Although reference is primarily made to the sensor data <b>102</b> generated by the vehicle <b>700</b>, this is not intended to be limiting, and the sensor data <b>102</b> may alternatively or additionally be generated by any of the sensors of the vehicle <b>700</b>, another vehicle or object type, and/or another system (e.g., a virtual vehicle in a simulated environment, a robotic system, etc.).</p><p id="p-0027" num="0026">In some examples, the sensor data <b>102</b> may include the sensor data generated by one or more forward-facing sensors, side-view sensors, and/or rear-view sensors. This sensor data <b>102</b> may be useful for identifying, detecting, classifying, and/or tracking movement of objects around the vehicle <b>700</b> within the environment. In embodiments, any number of sensors may be used to incorporate multiple fields of view (e.g., the fields of view of the long-range cameras <b>798</b>, the forward-facing stereo camera <b>768</b>, and/or the forward facing wide-view camera <b>770</b> of <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>) and/or sensory fields (e.g., of a LIDAR sensor <b>764</b>, a RADAR sensor <b>760</b>, etc.).</p><p id="p-0028" num="0027">The sensor data <b>102</b> may be used by any number of perception sources&#x2014;such as deep neural networks (DNNs) <b>104</b> (e.g., DNNs <b>104</b>A-<b>104</b>N), high-definition (HD) map(s) <b>106</b>, object trace(s) <b>108</b>, and/or other perception sources&#x2014;to generate perception outputs. In some examples, such as where an HD map(s) <b>106</b> is used, the sensor data <b>102</b> may not be used (however the HD map(s) <b>106</b> may still be referred to as a perception source herein, even where the sensor data <b>102</b> is not used). In other non-limiting embodiments, the HD map(s) <b>106</b> may use the sensor data <b>102</b>&#x2014;such as image data&#x2014;for more accurate localization within the HD map(s) <b>106</b>. The perception sources may each generate one or more perception outputs that, in some non-limiting embodiments, may aid the vehicle <b>700</b> in generating an understanding of a layout or structure of the driving surface&#x2014;e.g., lane locations, lane dimensions, lane curvature, etc.&#x2014;and/or to determine a path through the environment along the driving surface. For non-limiting examples, the perception outputs may include&#x2014;without limitation&#x2014;lane graphs, lane representations, driving surface layouts, locations of lane rails (e.g., a center-line of a lane), locations of lane edges (e.g., boundaries of a lane), locations of other portions of lanes (e.g., pixels that belong to a lane, world-space coordinates that belong to a lane, etc.), dimensions of lanes, geometry of lanes, curvature of lanes, computed paths for the vehicle <b>700</b> along the driving surface (e.g., lane-keeping paths, lane change paths, turning paths, forking paths, merging paths, and/or other path types), future trajectories for the vehicle <b>700</b>, classifications for rails, edges, lanes, unmarked driving surfaces, and/or paths, and/or other perception output types. As such, the perception sources may generate outputs that correspond to the environment, and particularly to a driving surface(s) within the environment.</p><p id="p-0029" num="0028">As described herein, the perception sources may include one or more DNNs <b>104</b>. As non-limiting examples, one or more of the DNNs <b>104</b> may be similar to the machine learning models and/or DNNs described in U.S. Non-Provisional application Ser. No. 16/535,440, filed on Aug. 8, 2019, U.S. Non-Provisional application Ser. No. 16/514,230, filed on Jul. 17, 2019, U.S. Non-Provisional application Ser. No. 16/433,994, filed on Jun. 6, 2019, U.S. Non-Provisional application Ser. No. 16/409,056, filed on May 10, 2019, U.S. Non-Provisional application Ser. No. 16/378,188, filed on Apr. 8, 2019, U.S. Non-Provisional application Ser. No. 16/286,329, filed on Feb. 26, 2019, and/or U.S. Non-Provisional application Ser. No. 16/241,005, filed on Jan. 7, 2019, each of which is hereby incorporated by reference in its entirety. The DNNs <b>104</b> described herein may include, for example, and without limitation, any type of machine learning model, such as a machine learning model(s) using linear regression, logistic regression, decision trees, support vector machines (SVM), Na&#xef;ve Bayes, k-nearest neighbor (Knn), K means clustering, random forest, dimensionality reduction algorithms, gradient boosting algorithms, neural networks (e.g., auto-encoders, convolutional, recurrent, perceptrons, Long/Short Term Memory (LSTM), Hopfield, Boltzmann, deep belief, deconvolutional, generative adversarial, liquid state machine, etc.), and/or other types of machine learning models.</p><p id="p-0030" num="0029">The perception sources may include one or more HD maps <b>106</b>. The HD maps may include external and/or internal mapping systems which may be generated using sensor data, map data, and/or other data types collected over time&#x2014;e.g., by one or more vehicles or other objects. The HD maps <b>106</b> may execute independently of sensors of the vehicle <b>700</b>&#x2014;and thus independently of the sensor data <b>102</b>&#x2014;and/or may leverage the sensor data <b>102</b> generated by one or more sensors of the vehicle <b>700</b> for localization and/or positioning with respect to the HD map(s) <b>106</b>.</p><p id="p-0031" num="0030">The perception sources may include one or more object trace(s) <b>108</b>. The object trace(s) <b>108</b> may leverage motion of the vehicle <b>700</b>&#x2014;e.g., via one or more of IMU sensors <b>766</b> and/or GNSS sensors <b>758</b>&#x2014;and/or image data generated by one or more cameras, RADAR data generated by one or more RADAR sensors <b>760</b>, LIDAR data generated by one or more LIDAR sensors <b>764</b>, and/or other sensor types to track and compute a trajectory of one or more other objects (e.g., vehicles) along the driving surface of the vehicle <b>700</b>. For example, the object trace(s) <b>108</b> may correspond to one or more vehicles in front of, or leading, the vehicle <b>700</b>. In a non-limiting example, the object trace(s) <b>108</b> may correspond to a closest leading vehicle in the ego lane (lane of travel) of the vehicle <b>700</b>, and/or the closest leading vehicles in one or more adjacent lanes of travel of the vehicle <b>700</b>. As such, the vehicle trace(s) <b>108</b> may leverage the paths or trajectories of other vehicles along the driving surface to aid in determining a lane graph <b>112</b>N corresponding to the road or driving surface.</p><p id="p-0032" num="0031">In some embodiments, one or more of the perception outputs from the DNNs <b>104</b> may undergo post-processing <b>110</b> (e.g., post-processing <b>110</b>A-<b>110</b>N). For example, post-processing <b>110</b> may include temporal smoothing or other temporal post-processing by which historical computations&#x2014;e.g., perception outputs&#x2014;of each respective DNN(S) <b>104</b> are maintained and fused or leveraged to generate an updated, weighted, and/or longer temporal-based output that may be more stable than individual computations at each iteration. For example, a current computation or prediction of a DNN(S) <b>104</b> may be weighed against one or more past computations or predictions of the DNN(S) <b>104</b> to generate an updated current prediction that relies on the historical information. As a result, the updated current prediction may be smoother, and thus may result in more consistent, accurate, and smooth outputs of the DNN for use in generating the lane graphs <b>112</b>.</p><p id="p-0033" num="0032">The perception outputs from the perception sources&#x2014;e.g., the (post-processed) outputs of the DNNs <b>104</b>, the outputs of the HD map(s) <b>106</b>, and/or the outputs of the object trace(s) <b>108</b>&#x2014; may be used to generate the lane graphs <b>112</b>. An important aspect of the present disclosure is the independence among the different individual lane graphs that are generated and applied as inputs to lane graph aggregator <b>114</b>. This independence enables, at least in part, the diversity and redundancy feature that supports real-time or near real-time metrication of aggregate lane graph <b>124</b> output by the lane graph aggregator <b>114</b> (and/or DNN <b>502</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>), as well as increased quality and robustness of the aggregate lane graph <b>124</b> itself. As an example, for the lane graphs <b>112</b>N-<b>1</b> generated from the HD map(s) <b>106</b> and the lane graphs <b>112</b>N-<b>2</b> generated from the object trace(s) <b>108</b>, these two perception sources of information are completely different and independent as compared to the DNNs <b>104</b>, and thus these lane graphs <b>112</b> will also be independent both with respect to each other and with respect to the lane graphs <b>112</b> generated using the DNNs <b>104</b>. In such an example, the lane graph <b>112</b>N-<b>1</b> may be generated using data from an external offline mapping system while the lane graph <b>112</b>A may be generated via live perception of the DNN(S) <b>104</b>A. Moreover, in the example of the lane graph <b>112</b>N-<b>2</b>, since the sensor data <b>102</b> may be combined across multiple sensors (e.g., RADAR, IMU, GNSS, camera, etc.) rather than just a camera, a large degree of independence may be introduced between the lane graph <b>112</b>N-<b>2</b> and the lane graph <b>112</b>A generated using&#x2014;for example&#x2014;an image data only DNN(S) <b>104</b>A.</p><p id="p-0034" num="0033">In addition, the lane graphs <b>112</b>A-<b>112</b>N generated by the DNNs <b>104</b>A-<b>104</b>N may be largely independent as a result of the underlying training data used to train the DNNs <b>104</b>, the type of sensor data <b>102</b> applied as input to the DNNs <b>104</b>, and/or the type or format of the perception output of the DNNs <b>104</b>. For example, a first output from a first DNN(S) <b>104</b> may include a location and classification of lane edges or rails, while a second output from a second DNN(S) <b>104</b> may include a recommended trajectory along a driving surface&#x2014;which may be independent of any actual lanes on the driving surface. In such an example, to further illustrate the independence even within different outputs of the DNNs <b>104</b>, the first DNN(S) <b>104</b> may be trained using image data having corresponding ground truth annotations generated using LIDAR data, and the second DNN(S) <b>104</b> may be trained using video data of trajectories driven by human drivers through varying environments and along varying driving surfaces.</p><p id="p-0035" num="0034">A corollary of such independence between the varying perception sources used for generating the lane graphs <b>112</b> is that the failure modes of the different perception source are also different and largely independent from one another. For example, whereas one of the DNNs <b>104</b> may fail (e.g., by producing inaccurate inferences or lack thereof) when a front leading vehicle is very close to the vehicle <b>700</b> and/or the overall traffic conditions are quite congested, another DNN(S) <b>104</b> may not have this issue at all&#x2014;e.g., based on the type of training data used and/or the types of output the DNN(S) <b>104</b> is trained to predict. As another example, where one DNN(S) <b>104</b> may not be sufficiently accurate when one or more lane markings on the driving surface are occluded&#x2014;e.g., due to vehicles, objects, weather, etc.&#x2014;another DNN(S) <b>104</b> may be resilient to this failure mode because it does not rely on lane markings to generate an output. As a result, due to the diversity and redundancy created by such independent failure modes, the proposed approach may avoid system failures in each of these situations by selecting and/or relying more heavily on the appropriate perception outputs&#x2014;while disregarding the failed components, in some embodiments.</p><p id="p-0036" num="0035">Each of the (post-processed, in embodiments) perception outputs may be used to generate a lane graph <b>112</b>. For example, the lane graphs <b>112</b>A-<b>112</b>N may each be generated in a same coordinate space&#x2014;such as a top-down view world-space coordinate system in two-dimensions (2D) or three dimensions (3D) with an origin corresponding to the vehicle <b>700</b> (e.g., a front most point of the vehicle <b>700</b>, a center of an axle of the vehicle <b>700</b>, and/or another location on the vehicle <b>700</b> in world-space), a 2D image space coordinate system (e.g., denoted by pixel locations), and/or another coordinate system in world-space and/or image space. However, because each of the perception sources may generate perception outputs in different formats&#x2014;e.g., locations of lane rails, locations of lane edges, classifications of the lane lines, locations of trajectories of leading vehicles, locations of recommended paths, and/or other formats&#x2014;and in different coordinate systems in image space, world-space, 2D, 3D, etc., the conversion between at least some of the perception outputs and the corresponding lane graphs <b>112</b> may be unique.</p><p id="p-0037" num="0036">To generate the lane graphs <b>112</b>, produced perception output may be converted into a set of polylines&#x2014;which may be labeled or classified according to their associated lane and/or lane line type, such as left edge, right edge, lane rail, etc.&#x2014;which may be termed a lane graph. However, as described herein, this is not intended to be limiting, and the lane graphs <b>112</b> may include additional or alternative lane or road representations without departing from the scope of the present disclosure. In order to execute the conversion, the intrinsic and/or extrinsic parameters of the sensors that generated the sensor data <b>102</b> may be taken into account to determine locations of points of the polylines for the respective lane graphs <b>112</b>. For example, where the lane graphs <b>112</b> are generated in 3D world space, for a perception output of a DNN(S) <b>104</b> that uses image data to compute 2D image space pixel coordinates corresponding to locations of lane edges, the intrinsic and/or extrinsic parameters of the camera(s) that generated the image data may be analyzed to determine a conversion from the 2D image space pixel coordinates to 3D world-space coordinates for generating the lane graph <b>112</b>. Points of the polylines may be generated at increments with respect to the origin point of the lane graph and a long a longitudinal direction (e.g., a direction of travel of the vehicle <b>700</b>), such as, without limitation, every twenty-five centimeters, every fifty centimeters, every meter, every foot, every two feet, every three meters, etc. As a result, the combination of the points, when connected in sequence, may form the polylines of the lane graphs <b>112</b>.</p><p id="p-0038" num="0037">In addition to generating the polylines that correspond to the lane graphs <b>112</b>, each polyline of each lane graph <b>112</b>A-<b>112</b>N may have an associated label or line classification assigned thereto. For example, the labels or line classifications may include one or more of: lane keep path (e.g., defined as the center of the lane of travel of the vehicle <b>700</b>); fork left path, fork right path, merge from left path (e.g., defined as the vehicle <b>700</b> entering into a merge from the left); merge right path (e.g., defined as the vehicle <b>700</b> entering in a merge from the right); lane change left path; lane change right path; adjacent left path or rail; adjacent left divider or edge; adjacent right path or rail; and/or adjacent right divider or edge. As such, the labels or classifications may include paths or rails for staying in-lane, changing lanes, merging, taking a fork, etc., and/or paths or rails for adjacent lanes (e.g., immediately adjacent lanes to the vehicle <b>700</b>, lanes that are two or more lanes adjacent the vehicle <b>700</b>, etc.). The labels or classifications may thus belong to various sets, S: S<sub>1</sub>={ego lane, left lane, right lane}; S<sub>2</sub>={center lane or rail, divider or edge}; S<sub>3</sub>={fork left, fork right}; S<sub>4</sub>={lane change left, lane change right}; and so on. In some embodiments, the labels or classifications may include permutations between individual labels belongs to two or more sets, such as sets S<sub>1 </sub>and S<sub>2</sub>, for example.</p><p id="p-0039" num="0038">To determine the labels or classifications for the varying lane graphs <b>112</b> generated from the varying perception sources, any suitable method may be used. As an example, labels or classifications corresponding to the individual perception sources may be used to generate the labels or classifications for the lane graphs <b>112</b>. In such an example, where an output of the HD map(s) <b>106</b> includes locations of lane edges with corresponding labels, for example, these labels may be carried over to the polylines of the corresponding lane graph <b>112</b>N-<b>1</b>. In other non-limiting embodiments, the labels or classifications may be determined after each of the lane graphs <b>112</b> are generated using distances or other geometric calculations between polylines of the varying lane graphs <b>112</b>. For example, each of the polylines within a threshold distance to one another may be grouped together, and the group of polylines may be analyzed in view of a location of the polylines with respect to the vehicle <b>700</b> (or the origin) to determine an appropriate label or classification for the group of polylines. In such an example, this process may be used to assign the labels or classifications to the polylines of each of the lane graphs <b>112</b>. In some examples, a combination of two or more label or classification assignment processes may be executed. For example, where some of the perception sources generate labeled or classified outputs, and other perception sources do not, the distances or geometry relationships between different polylines may be used to attribute classifications from the labeled or classified outputs to the unlabeled or unclassified outputs. In any example, the polylines of each of the lane graphs <b>112</b>A-<b>112</b>N may be assigned labels using one or more methods to aid the lane graph aggregator <b>114</b> (or the DNN <b>502</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>) in generating the aggregate lane graph <b>124</b> (e.g., the labels or classifications may be used to determine relationships between polylines across different lane graphs <b>112</b> in order to determine accuracy, reliability, and/or to generate an aggregate polyline from the combination of the polyline constituents).</p><p id="p-0040" num="0039">The lane graphs <b>112</b>A-<b>112</b>N may be sent or transmitted to the lane graph aggregator <b>114</b> to generate the aggregate lane graph <b>124</b>. The lane graph aggregator <b>114</b> may leverage any number of the lane graphs <b>112</b> to generate the aggregate lane graph <b>124</b> and/or one or more confidence values corresponding to thereto. For example, the confidences may be indicative of the level of agreement between the various lane graphs <b>112</b>A-<b>112</b>N used by the lane graph aggregator <b>114</b> when generating the aggregate lane graph <b>124</b>. The confidence(s) may correspond to the entire aggregate lane graph <b>124</b>, to individual polylines within the aggregate lane graph <b>124</b>, to segments or portions of the individual polylines, and/or to other portions or segments of the aggregate lane graph <b>124</b>.</p><p id="p-0041" num="0040">In some non-limiting embodiments, the lane graph aggregator <b>114</b> may include a label-based grouper <b>116</b>, a clusterer <b>118</b>, a confidence estimator <b>120</b>, and/or a history tracker <b>122</b>. The label-based grouper <b>116</b> may group the polylines from the various lane graphs <b>112</b>A-<b>112</b>N according to their labels or line classifications. For example, each polyline from each of the lane graphs <b>112</b>A-<b>112</b>N that corresponds to a given label (e.g., ego center lane, right adjacent rail, left fork path, etc.) may be retrieved, or selected and grouped together. Once a group of polylines with the same labels is created, or identified, a distance(s) between the polylines inside the group may be computed. As a non-limiting example, distances between each pair of polylines from the group may be computed. The distance computation may take on any of a variety of mathematical forms, without departing from the scope of the present disclosure. In some embodiments, each polyline within the group may be fitted with a cubic polynomial which may then be used to find a common range (CR), as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0042" num="0041">For example, with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, <figref idref="DRAWINGS">FIG. <b>2</b></figref> is an example illustration of computing a difference between two polylines, in accordance with some embodiments of the present disclosure. Polyline P<sub>1 </sub>and polyline P<sub>2 </sub>are example polylines from a same group (e.g., P<sub>1 </sub>may correspond to a polyline corresponding to a rail of the lane of the vehicle <b>700</b> from a first lane graph <b>112</b> and P<sub>2 </sub>may correspond to a polyline corresponding to a rail of the lane of the vehicle <b>700</b> from a second lane graph <b>112</b>). As illustrated in the example of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the CR may be mathematically defined according to the interval of equation (1), below:</p><p id="p-0043" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>CR=[<i>x</i><sub>1</sub><i>,x</i><sub>m</sub>]&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0044" num="0000">where x<sub>1</sub>=min(x<sub>i</sub>), i=1, . . . , m that belongs to both P<sub>1 </sub>and P<sub>2 </sub>and x<sub>m</sub>=max(x<sub>i</sub>), i=1, . . . , m that belongs to both P<sub>1 </sub>and P<sub>2</sub>. As such, to compute the distance between P<sub>1 </sub>and P<sub>2</sub>, the polylines may be resampled to a common sampling rate over the computed common range, and the distance may then be calculated, for each point y<sub>i</sub>, i=1, . . . , m, according to equation (2), below:</p><p id="p-0045" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>y</i><sub>i</sub><i>=|y</i><sub>i,2</sub><i>&#x2212;y</i><sub>i,1</sub>|&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0046" num="0000">where &#x2225; denotes absolute value. The final distance between P<sub>1 </sub>and P<sub>2 </sub>may then be computed as the average of the &#x394;y<sub>i </sub>values, E[&#x394;y<sub>i</sub>], i=1, . . . , m, where E[ ] denotes the expected (e.g., average) value. In some embodiments, where the 3D curvature or profile of the road is known, the road curvature or road profile parameter may be included in the computation of the CR in 3D. As a non-limiting example, the road curvature or profile may be computed as described in U.S. Provisional Application No. 62/946,689, filed on Dec. 11, 2019, which is hereby incorporated by reference in its entirety.</p><p id="p-0047" num="0042">This distance computation may be executed or repeated for each possible pair of polylines in the group of similarly labeled polylines. Once the distance computations is completed for each pair, the clusterer <b>118</b> may apply a numerical threshold to the distance values in order to cluster the polylines based on similarity. For example, based on the thresholding operation, if a set of distance values falls within the same cluster of a given radius, the determination may be that the polylines are in agreement over the CR. As such, as a result of the clustering, there may be single element clusters (e.g., clusters composed of a single polyline) and/or multi-element clusters (e.g., clusters composed of a plurality of polylines). The multi-element clusters may indicate that a plurality of polylines (or segments thereof over the CR) are in agreement (e.g., are within a threshold similarity to one another) for the path denoted by the particular label or classification associated with the group of polylines. The threshold used for determining the cluster distance or radius may be determined empirically, using a DNN (e.g., the DNN <b>502</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>), via another method, or a combination thereof.</p><p id="p-0048" num="0043">After the clustering operation by the clusterer <b>118</b>, the group of polylines with the similar labels or classifications may be divided into clusters. The clusters may then be analyzed to determine the cluster with the highest number of polylines or components&#x2014;e.g., because the higher number of constituents within a cluster may correspond to a higher confidence in the path perception result. In the case of a tie&#x2014;e.g., where two or more clusters have the same number of polylines, a radius of the clusters (e.g., intra-cluster variance) may be measured, and the cluster with the lowest intra-cluster variance may be selected. In some embodiments, such as to account for frame glitches (and/or issues with other sensor data representations) that may cause a clustering tie, a temporal history of aggregate lane graph <b>124</b> results may be maintained and used (e.g., referenced) to break the tie and/or to remove the single frame glitch.</p><p id="p-0049" num="0044">Once the highest-confidence cluster has been selected or determined for a particular label or classification, another cubic fit polynomial operation may be performed using the points from the polyline components within the highest-confidence cluster to generate a final polyline corresponding to the particular label or classification. This process may be repeated, at each iteration, for each label or classification grouping of polylines to generate the final polylines of the aggregate lane graph <b>124</b>. For example, for each iteration of the aggregate lane graph <b>124</b>, any number of label-based groups of polylines may be analyzed by the lane graph aggregator <b>114</b> to generate final polylines corresponding to one or more of the labels or line classifications including, but not limited to: lane keep path; fork left path, fork right path, merge from left path; merge right path; lane change left path; lane change right path; adjacent left path or rail; adjacent left divider or edge; adjacent right path or rail; adjacent right divider or edge; and/or another path type.</p><p id="p-0050" num="0045">For each final polyline, in some embodiments, confidence values may be assigned to subsets of the points of the polyline. For example, each point may include a separate confidence value, two or more points may share a confidence value, or a combination thereof. As such, individual points or segments of the final polylines may be assigned confidence values. To determine the confidence values, a determination of how many sources went into the joint fitting for the particular point or segment of the final polyline may be determined. For example, for a point or segment, if five lane graphs <b>112</b> were used as inputs to the lane graph aggregator <b>114</b>, but the point or segment of a final polyline was generated using only three of the five lane graphs <b>112</b>, then the confidence may be 60% (&#x2157;) for that particular point or segment. This computation may be repeated for each point and/or each segment in order to generate and assign confidence values to the final polylines of the aggregate lane graph <b>124</b>. As a result, the aggregate lane graph <b>124</b> may represent not only the layout of the road surface and/or paths there through, but may also include associated confidences along each path. As a result, where confidences are low (e.g., below a threshold, such as 50%, 40%, etc.), the vehicle <b>700</b> may disengage one or more ADAS and/or autonomous features that rely on the aggregate lane graph <b>124</b>. In an autonomous driving example, the vehicle <b>700</b> may disengage autonomous functionality and hand control back to the driver when the confidence along a desired or recommended path of the vehicle <b>700</b> is below a threshold. However, because the aggregate lane graph <b>124</b> is generated from diverse and redundant perception sources, the likelihood of a disengagement event or other deactivation of ADAS, semi-autonomous, or autonomous functionality may be much less likely than with a single perception source.</p><p id="p-0051" num="0046">In some embodiments, the history tracker <b>122</b> may be executed by the lane graph aggregator <b>114</b>, such as to enforce continuity between iterations of the aggregate lane graph <b>124</b>. For example, at each iteration of the sensor data <b>102</b>, new and independent aggregate lane graphs <b>124</b> may be generated, with the fastest or maximum frequency being set by the fastest sensor. Sometimes in a single iteration of the sensor data <b>102</b>, it may happen that multiple plausible paths are computed that do not fall within the same cluster for a given threshold. In such cases, path discontinuity may arise between successive iterations of the aggregate lane graph <b>124</b> that may result in potential control commands that would be erratic or jumpy, as the vehicle <b>700</b> tries to traverse from one path to another, discontinuous path in a short period of time.</p><p id="p-0052" num="0047">To prevent such an occurrence, continuity between successive iterations of the aggregate lane graph <b>124</b> may be enforced using the data history tracking by the history tracker <b>122</b>. For example, an &#x2018;a priori&#x2019; condition may be added to the aggregate lane graph <b>124</b>. In such an example, based on the resulting aggregate lane graph from a previous iteration of the sensor data <b>102</b>, the confidence of the clusters computed in a current iteration may be weighed in favor of temporal (e.g., historical) continuity. For example, where two or more potentially high-confidence clusters are present in the current iteration, the high-confidence cluster that would result in the most continuous path from the prior iteration to the current iteration may be weighted more heavily. As such, the Bayesian probability, P[E<sub>t</sub>|E<sub>t-1</sub>], may be maximized, where E<sub>t </sub>and E<sub>t-1 </sub>denote the aggregate lane graph <b>124</b> outputs at times t and t&#x2212;1, respectively.</p><p id="p-0053" num="0048">In some embodiments, where an underlying disagreement is present between the various label-based groups of polylines from the lane graphs <b>112</b>, when and where the disagreement took place may be generated, stored, and referenced to improve the system in the future.</p><p id="p-0054" num="0049">The aggregate lane graph <b>124</b> may be applied as input to one or more vehicle components <b>126</b> or modules of the vehicle <b>700</b> (or the underlying autonomous, semi-autonomous, or ADAS functionality thereof) to determine and/or aid in the performance of one or more operations of the vehicle <b>700</b>&#x2014;e.g., path planning, world model management, automatic emergency braking, obstacle and collision avoidance, control decisions, actuation decisions, etc. For example, the vehicle component(s) <b>126</b> may include a behavior planning component and/or an object-in-path analysis component of the vehicle <b>700</b>.</p><p id="p-0055" num="0050">Now with reference to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is an example visualization <b>300</b> of an aggregate lane representation with high confidence, in accordance with some embodiments of the present disclosure. For example, the visualization <b>300</b> may represent predictions corresponding to a structure of and/or paths through lanes <b>302</b>, <b>304</b>, and <b>306</b>. The lane <b>304</b> may represent an ego-lane (e.g., a lane of the vehicle <b>700</b>), the lane <b>302</b> may represent a left adjacent lane, and the lane <b>306</b> may represent a right adjacent lane. As such, the visualization <b>300</b> may represent an iteration of an aggregate lane graph <b>124</b> generated using sensor data <b>102</b> from the vehicle <b>700</b> and/or HD map(s) <b>106</b> as the vehicle <b>700</b> traverses the environment represented by the visualization <b>300</b>. The aggregate lane graph <b>124</b> of the visualization <b>300</b> may include a left adjacent lane left edge <b>308</b>, a left adjacent lane rail <b>310</b>, a left adjacent lane right edge <b>312</b>, an ego-lane left edge <b>314</b>, an ego-lane rail <b>316</b>, an ego-lane right edge <b>318</b>, a right adjacent lane left edge <b>320</b>, a right adjacent lane rail <b>322</b>, and a right adjacent lane right edge <b>324</b>. In addition, the visualization includes bounding shapes <b>326</b>A-<b>326</b>C around vehicles leading the ego vehicle <b>700</b>, which may have been used to determine object trace(s) <b>108</b> for generating the lane graph(s) <b>112</b>N. As described above, the visualization <b>300</b> may represent an aggregate lane graph having generally high confidences along each of the final polylines corresponding to the various lane or path labels.</p><p id="p-0056" num="0051">Referring to chart <b>330</b>, the chart <b>330</b> is representative of accuracy or confidence measures corresponding to the polylines predicted by the lane graph aggregator <b>114</b> and represented in the visualization <b>300</b>. For example, each vertical bar in the chart <b>330</b> represents a single polyline over a distance (e.g., from rear of the vehicle <b>700</b> to forward of the vehicle <b>700</b>) in grayscale with lighter colors indicating more accurate or confident predictions and darker colors indicating less accurate or confident predictions. As indicated by the chart <b>330</b>, the majority of the chart <b>330</b> has a high to mid confidence value, indicating that the percentage of group-based polylines from the lane graphs <b>112</b> used to generate the corresponding final polylines was high (e.g., 75% or above for white, 50%-75% for gray, 50% or below for black). The darker portions near the top and bottom of each bar may indicate portions of the final polylines that are further away (and thus more difficult to predict) or to the rear of the vehicle <b>700</b> (and thus not as accurate due to less sensor data <b>102</b> being available to the rear of the vehicle and/or the perception sources not using sensor data <b>102</b> representative of the environment of the rear of the vehicle <b>700</b>).</p><p id="p-0057" num="0052">Now referring to <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, <figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is another example visualization <b>340</b> of an aggregate lane representation with medium confidence, in accordance with some embodiments of the present disclosure. The visualization <b>340</b> of <figref idref="DRAWINGS">FIG. <b>3</b>B</figref> may include similar lanes <b>302</b>, <b>304</b>, and <b>306</b> as <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, and similar labels or classification, but the lanes <b>304</b> and <b>306</b> may be predicted with a lower confidence (as indicated by the diagonal pattern along the lane rails, as compared to the horizontal pattern along the lane rail of lane <b>302</b>). For example, additional representations of polylines <b>342</b>A and <b>342</b>B are included in the visualization <b>340</b> to illustrate the disparity between the polylines from the lane graphs <b>112</b> and the impact that may have had on the confidence for final polylines corresponding to the lane <b>304</b>. Similarly, additional representations of polylines <b>342</b>C, <b>342</b>D, and <b>342</b>E are included in the visualization <b>340</b> to illustrate the disparity between the polylines from the lane graphs <b>112</b> and the impact they may have had on the confidence for final polylines corresponding to the lane <b>306</b>. Although the polylines from the lane graphs <b>112</b> may not have generated as high a confidence for the lanes <b>304</b> and <b>306</b> as in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, the aggregate lane graph <b>124</b> may still be relied upon for autonomous or ADAS driving functionality, but the lower confidence may be taken into account when navigating the environment.</p><p id="p-0058" num="0053"><figref idref="DRAWINGS">FIG. <b>3</b>C</figref> is another example visualization <b>350</b> of an aggregate lane representation with low confidence, in accordance with some embodiments of the present disclosure. The visualization <b>350</b> of <figref idref="DRAWINGS">FIG. <b>3</b>C</figref> may include similar lanes <b>302</b>, <b>304</b>, and <b>306</b> as <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, but the aggregate lane graph <b>124</b> may only include a prediction of a single lane <b>352</b> that may not actually correspond to one of the lanes <b>302</b>, <b>304</b>, or <b>306</b>. As a result, the single lane <b>352</b> may be predicted with a very low confidence, and thus may cause disengagement of autonomous driving functionality, a fallback to an individual lane or path perception output source (e.g., object trace(s) <b>108</b>, as represented by the object trace <b>354</b>, for example), and/or ignoring or disregarding the aggregate lane graph <b>124</b> for the current iteration. The visualization <b>350</b> includes additional representations of polylines <b>342</b>F, <b>342</b>G, <b>342</b>H, <b>342</b>I, <b>342</b>J, and <b>342</b>K are to illustrate the disparity between the polylines from the lane graphs <b>112</b> that may have contributed to the low confidence output for the current iteration of the aggregate lane graph <b>124</b>.</p><p id="p-0059" num="0054">Now referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, each block of method <b>400</b>, described herein, comprises a computing process that may be performed using any combination of hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory. The method <b>400</b> may also be embodied as computer-usable instructions stored on computer storage media. The method <b>400</b> may be provided by a standalone application, a service or hosted service (standalone or in combination with another hosted service), or a plug-in to another product, to name a few. In addition, method <b>400</b> is described, by way of example, with respect to the process <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the vehicle <b>700</b> of <figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>D</figref>. However, this method may additionally or alternatively be executed within any one process and/or by any one system, or any combination of processes and/or systems, including, but not limited to, those described herein.</p><p id="p-0060" num="0055"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram showing a method of generating an aggregate lane representation, in accordance with some embodiments of the present invention. The method <b>400</b>, at block B<b>402</b>, includes receiving first data representative of a first output from a first source. For example, first data representative of a first output from a perception source&#x2014;such as a DNN(S) <b>104</b>, an HD map(s) <b>106</b>, and/or an object trace <b>108</b>&#x2014;may be generated and/or received.</p><p id="p-0061" num="0056">The method <b>400</b>, at block B<b>404</b>, includes receiving second output representative of a second output from a second source. For example, second data representative of a second output from another perception source&#x2014;such as a DNN(S) <b>104</b>, an HD map(s) <b>106</b>, and/or an object trace <b>108</b>&#x2014;may be generated and/or received.</p><p id="p-0062" num="0057">The method <b>400</b>, at block B<b>406</b>, includes converting the first output to a first lane representation and the second output to a second lane representation. For example, the first (pre-processed, in embodiments) output may be used to generate a first lane graph <b>112</b> and the second output may be used to generate a second lane graph <b>112</b>.</p><p id="p-0063" num="0058">The method <b>400</b>, at block B<b>408</b>, includes generating an aggregate lane representation. For example, at least the first lane graph <b>112</b> and the second lane graph <b>112</b> may be applied to the lane graph aggregator <b>114</b> to generate the aggregate lane graph <b>124</b>.</p><p id="p-0064" num="0059">The method <b>400</b>, at block B<b>410</b>, includes computing one or more confidence values corresponding to the aggregate lane representation. For example, one or more confidence values may be computed&#x2014;by the confidence estimator <b>120</b>&#x2014;and assigned to one or more points and/or segments of the final polylines of the aggregate lane representation.</p><p id="p-0065" num="0060">The method <b>400</b>, at block B<b>412</b>, includes performing one or more operations. For example, the vehicle component(s) <b>126</b> of the vehicle <b>700</b> may perform one or more operations based at least in part on the aggregate lane graph <b>124</b> and/or the confidence value(s) associated therewith.</p><p id="p-0066" num="0061"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a data flow diagram for a process <b>500</b> of generating an aggregate lane representation from a plurality of individually generated lane representations using a deep neural network (DNN), in accordance with some embodiments of the present disclosure. The process <b>500</b> may be similar to that of the process <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, but may use a DNN <b>502</b> to generate an aggregate lane graph <b>124</b> rather than the lane graph aggregator <b>114</b> described herein. The DNN <b>502</b> may include, for example, and without limitation, any type of machine learning model, such as a machine learning model(s) using linear regression, logistic regression, decision trees, support vector machines (SVM), Na&#xef;ve Bayes, k-nearest neighbor (Knn), K means clustering, random forest, dimensionality reduction algorithms, gradient boosting algorithms, neural networks (e.g., auto-encoders, convolutional, recurrent, perceptrons, Long/Short Term Memory (LSTM), Hopfield, Boltzmann, deep belief, deconvolutional, generative adversarial, liquid state machine, etc.), and/or other types of machine learning models.</p><p id="p-0067" num="0062">The DNN <b>502</b>&#x2014;during training, as indicated by the dashed lines&#x2014;may be trained to predict the aggregate lane graph <b>124</b> using ground truth aggregate lane graphs <b>504</b> as ground truth data. In some non-limiting embodiments, the ground truth aggregate lane graphs <b>504</b> may be generated using the lane graph aggregator <b>114</b> as described herein. As such, when the lane graphs <b>112</b>A-<b>112</b>N are applied to the DNN <b>502</b>, the aggregate lane graph <b>124</b> as predicted by the DNN <b>502</b> may be compared against the ground truth aggregate lane graph <b>504</b>&#x2014;using one or more loss functions <b>506</b>&#x2014;and the results of the comparison may be used to update parameters or coefficients (e.g., weights and biases) of the DNN <b>502</b>. This process may be repeated until the predictions of the DNN <b>502</b> converge to acceptable or desirable levels of accuracy&#x2014;e.g., until the loss is minimized.</p><p id="p-0068" num="0063">Once fully trained, the DNN <b>502</b> may be deployed (and alternatively referred to herein as a &#x201c;deployed DNN <b>502</b>&#x201d; or a &#x201c;deployed neural network <b>502</b>&#x201d;). The deployed DNN <b>502</b> may then receive data representative of the lane graphs <b>112</b>A-<b>112</b>N as inputs, and compute the aggregate lane graph <b>124</b>. The computed aggregate lane graph <b>124</b>&#x2014;similar to that of the aggregate lane graph <b>124</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>&#x2014;may include associated confidences for points or segments of the final polylines of the aggregate lane graph <b>124</b>. The aggregate lane graph <b>124</b> may then be used by the vehicle component(s) <b>126</b> to perform one or more operations, such as but not limited to those described herein.</p><p id="p-0069" num="0064">Now referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, each block of method <b>600</b>, described herein, comprises a computing process that may be performed using any combination of hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory. The method <b>600</b> may also be embodied as computer-usable instructions stored on computer storage media. The method <b>600</b> may be provided by a standalone application, a service or hosted service (standalone or in combination with another hosted service), or a plug-in to another product, to name a few. In addition, method <b>400</b> is described, by way of example, with respect to the process <b>500</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref> and the vehicle <b>700</b> of <figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>D</figref>. However, this method <b>600</b> may additionally or alternatively be executed within any one process and/or by any one system, or any combination of processes and/or systems, including, but not limited to, those described herein.</p><p id="p-0070" num="0065"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram showing a method of generating an aggregate lane representation using a DNN, in accordance with some embodiments of the present disclosure. The method <b>600</b>, at block B<b>602</b>, includes processing, via a plurality of perception sources, sensor data to generate first data representative of a plurality of perception outputs. For example, the perception sources&#x2014;e.g., the DNN(s) <b>104</b>, the HD map(s) <b>106</b>, and/or the object trace(s) <b>108</b>&#x2014; may process the sensor data <b>102</b> to generate the perception outputs.</p><p id="p-0071" num="0066">The method <b>600</b>, at block B<b>604</b>, includes generating second data representative of a plurality of lane representations in a same coordinate space. For example, the perception outputs may be used&#x2014;after post-processing, in embodiments&#x2014;to generate the lane graphs <b>112</b>A-<b>112</b>N in a same coordinate space (e.g., top-down world-space coordinate system, 2D or 3D world-space coordinate system, 2D image space coordinates, and/or another coordinate system).</p><p id="p-0072" num="0067">The method <b>600</b>, at block B<b>606</b>, includes applying the second data to a deployed neural network. For example, data representative of the lane graphs <b>112</b>A-<b>112</b>N may be applied to the deployed DNN <b>502</b>.</p><p id="p-0073" num="0068">The method <b>600</b>, at block B<b>608</b>, includes computing, using the deployed neural network, third data representative of an ensemble lane representation. For example, the deployed DNN may compute data representative of the aggregate lane graph <b>124</b> based at least in part on processing the lane graphs <b>112</b>A-<b>112</b>N.</p><p id="p-0074" num="0069">The method <b>600</b>, at block B<b>610</b>, includes performing one or more operations based at least in part on the ensemble lane representation. For example, the vehicle <b>700</b> may perform one or more operations based at least in part on the aggregate lane graph <b>124</b>.</p><p id="p-0075" num="0070">Example Autonomous Vehicle</p><p id="p-0076" num="0071"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is an illustration of an example autonomous vehicle <b>700</b>, in accordance with some embodiments of the present disclosure. The autonomous vehicle <b>700</b> (alternatively referred to herein as the &#x201c;vehicle <b>700</b>&#x201d;) may include, without limitation, a passenger vehicle, such as a car, a truck, a bus, a first responder vehicle, a shuttle, an electric or motorized bicycle, a motorcycle, a fire truck, a police vehicle, an ambulance, a boat, a construction vehicle, an underwater craft, a drone, and/or another type of vehicle (e.g., that is unmanned and/or that accommodates one or more passengers). Autonomous vehicles are generally described in terms of automation levels, defined by the National Highway Traffic Safety Administration (NHTSA), a division of the US Department of Transportation, and the Society of Automotive Engineers (SAE) &#x201c;Taxonomy and Definitions for Terms Related to Driving Automation Systems for On-Road Motor Vehicles&#x201d; (Standard No. J3016-201806, published on Jun. 15, 2018, Standard No. J3016-201609, published on Sep. 30, 2016, and previous and future versions of this standard). The vehicle <b>700</b> may be capable of functionality in accordance with one or more of Level 3-Level 5 of the autonomous driving levels. For example, the vehicle <b>700</b> may be capable of conditional automation (Level 3), high automation (Level 4), and/or full automation (Level 5), depending on the embodiment.</p><p id="p-0077" num="0072">The vehicle <b>700</b> may include components such as a chassis, a vehicle body, wheels (e.g., 2, 4, 6, 8, 18, etc.), tires, axles, and other components of a vehicle. The vehicle <b>700</b> may include a propulsion system <b>750</b>, such as an internal combustion engine, hybrid electric power plant, an all-electric engine, and/or another propulsion system type. The propulsion system <b>750</b> may be connected to a drive train of the vehicle <b>700</b>, which may include a transmission, to enable the propulsion of the vehicle <b>700</b>. The propulsion system <b>750</b> may be controlled in response to receiving signals from the throttle/accelerator <b>752</b>.</p><p id="p-0078" num="0073">A steering system <b>754</b>, which may include a steering wheel, may be used to steer the vehicle <b>700</b> (e.g., along a desired path or route) when the propulsion system <b>750</b> is operating (e.g., when the vehicle is in motion). The steering system <b>754</b> may receive signals from a steering actuator <b>756</b>. The steering wheel may be optional for full automation (Level 5) functionality.</p><p id="p-0079" num="0074">The brake sensor system <b>746</b> may be used to operate the vehicle brakes in response to receiving signals from the brake actuators <b>748</b> and/or brake sensors.</p><p id="p-0080" num="0075">Controller(s) <b>736</b>, which may include one or more system on chips (SoCs) <b>704</b> (<figref idref="DRAWINGS">FIG. <b>7</b>C</figref>) and/or GPU(s), may provide signals (e.g., representative of commands) to one or more components and/or systems of the vehicle <b>700</b>. For example, the controller(s) may send signals to operate the vehicle brakes via one or more brake actuators <b>748</b>, to operate the steering system <b>754</b> via one or more steering actuators <b>756</b>, to operate the propulsion system <b>750</b> via one or more throttle/accelerators <b>752</b>. The controller(s) <b>736</b> may include one or more onboard (e.g., integrated) computing devices (e.g., supercomputers) that process sensor signals, and output operation commands (e.g., signals representing commands) to enable autonomous driving and/or to assist a human driver in driving the vehicle <b>700</b>. The controller(s) <b>736</b> may include a first controller <b>736</b> for autonomous driving functions, a second controller <b>736</b> for functional safety functions, a third controller <b>736</b> for artificial intelligence functionality (e.g., computer vision), a fourth controller <b>736</b> for infotainment functionality, a fifth controller <b>736</b> for redundancy in emergency conditions, and/or other controllers. In some examples, a single controller <b>736</b> may handle two or more of the above functionalities, two or more controllers <b>736</b> may handle a single functionality, and/or any combination thereof.</p><p id="p-0081" num="0076">The controller(s) <b>736</b> may provide the signals for controlling one or more components and/or systems of the vehicle <b>700</b> in response to sensor data received from one or more sensors (e.g., sensor inputs). The sensor data may be received from, for example and without limitation, global navigation satellite systems sensor(s) <b>758</b> (e.g., Global Positioning System sensor(s)), RADAR sensor(s) <b>760</b>, ultrasonic sensor(s) <b>762</b>, LIDAR sensor(s) <b>764</b>, inertial measurement unit (IMU) sensor(s) <b>766</b> (e.g., accelerometer(s), gyroscope(s), magnetic compass(es), magnetometer(s), etc.), microphone(s) <b>796</b>, stereo camera(s) <b>768</b>, wide-view camera(s) <b>770</b> (e.g., fisheye cameras), infrared camera(s) <b>772</b>, surround camera(s) <b>774</b> (e.g., 360 degree cameras), long-range and/or mid-range camera(s) <b>798</b>, speed sensor(s) <b>744</b> (e.g., for measuring the speed of the vehicle <b>700</b>), vibration sensor(s) <b>742</b>, steering sensor(s) <b>740</b>, brake sensor(s) (e.g., as part of the brake sensor system <b>746</b>), and/or other sensor types.</p><p id="p-0082" num="0077">One or more of the controller(s) <b>736</b> may receive inputs (e.g., represented by input data) from an instrument cluster <b>732</b> of the vehicle <b>700</b> and provide outputs (e.g., represented by output data, display data, etc.) via a human-machine interface (HMI) display <b>734</b>, an audible annunciator, a loudspeaker, and/or via other components of the vehicle <b>700</b>. The outputs may include information such as vehicle velocity, speed, time, map data (e.g., the HD map <b>722</b> of <figref idref="DRAWINGS">FIG. <b>7</b>C</figref>), location data (e.g., the vehicle's <b>700</b> location, such as on a map), direction, location of other vehicles (e.g., an occupancy grid), information about objects and status of objects as perceived by the controller(s) <b>736</b>, etc. For example, the HMI display <b>734</b> may display information about the presence of one or more objects (e.g., a street sign, caution sign, traffic light changing, etc.), and/or information about driving maneuvers the vehicle has made, is making, or will make (e.g., changing lanes now, taking exit <b>34</b>B in two miles, etc.).</p><p id="p-0083" num="0078">The vehicle <b>700</b> further includes a network interface <b>724</b> which may use one or more wireless antenna(s) <b>726</b> and/or modem(s) to communicate over one or more networks. For example, the network interface <b>724</b> may be capable of communication over LTE, WCDMA, UMTS, GSM, CDMA2000, etc. The wireless antenna(s) <b>726</b> may also enable communication between objects in the environment (e.g., vehicles, mobile devices, etc.), using local area network(s), such as Bluetooth, Bluetooth LE, Z-Wave, ZigBee, etc., and/or low power wide-area network(s) (LPWANs), such as LoRaWAN, SigFox, etc.</p><p id="p-0084" num="0079"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> is an example of camera locations and fields of view for the example autonomous vehicle <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, in accordance with some embodiments of the present disclosure. The cameras and respective fields of view are one example embodiment and are not intended to be limiting. For example, additional and/or alternative cameras may be included and/or the cameras may be located at different locations on the vehicle <b>700</b>.</p><p id="p-0085" num="0080">The camera types for the cameras may include, but are not limited to, digital cameras that may be adapted for use with the components and/or systems of the vehicle <b>700</b>. The camera(s) may operate at automotive safety integrity level (ASIL) B and/or at another ASIL. The camera types may be capable of any image capture rate, such as 60 frames per second (fps), 720 fps, 240 fps, etc., depending on the embodiment. The cameras may be capable of using rolling shutters, global shutters, another type of shutter, or a combination thereof. In some examples, the color filter array may include a red clear clear clear (RCCC) color filter array, a red clear clear blue (RCCB) color filter array, a red blue green clear (RBGC) color filter array, a Foveon X3 color filter array, a Bayer sensors (RGGB) color filter array, a monochrome sensor color filter array, and/or another type of color filter array. In some embodiments, clear pixel cameras, such as cameras with an RCCC, an RCCB, and/or an RBGC color filter array, may be used in an effort to increase light sensitivity.</p><p id="p-0086" num="0081">In some examples, one or more of the camera(s) may be used to perform advanced driver assistance systems (ADAS) functions (e.g., as part of a redundant or fail-safe design). For example, a Multi-Function Mono Camera may be installed to provide functions including lane departure warning, traffic sign assist and intelligent headlamp control. One or more of the camera(s) (e.g., all of the cameras) may record and provide image data (e.g., video) simultaneously.</p><p id="p-0087" num="0082">One or more of the cameras may be mounted in a mounting assembly, such as a custom designed (3-D printed) assembly, in order to cut out stray light and reflections from within the car (e.g., reflections from the dashboard reflected in the windshield mirrors) which may interfere with the camera's image data capture abilities. With reference to wing-mirror mounting assemblies, the wing-mirror assemblies may be custom 3-D printed so that the camera mounting plate matches the shape of the wing-mirror. In some examples, the camera(s) may be integrated into the wing-mirror. For side-view cameras, the camera(s) may also be integrated within the four pillars at each corner of the cabin.</p><p id="p-0088" num="0083">Cameras with a field of view that include portions of the environment in front of the vehicle <b>700</b> (e.g., front-facing cameras) may be used for surround view, to help identify forward facing paths and obstacles, as well aid in, with the help of one or more controllers <b>736</b> and/or control SoCs, providing information critical to generating an occupancy grid and/or determining the preferred vehicle paths. Front-facing cameras may be used to perform many of the same ADAS functions as LIDAR, including emergency braking, pedestrian detection, and collision avoidance. Front-facing cameras may also be used for ADAS functions and systems including Lane Departure Warnings (&#x201c;LDW&#x201d;), Autonomous Cruise Control (&#x201c;ACC&#x201d;), and/or other functions such as traffic sign recognition.</p><p id="p-0089" num="0084">A variety of cameras may be used in a front-facing configuration, including, for example, a monocular camera platform that includes a CMOS (complementary metal oxide semiconductor) color imager. Another example may be a wide-view camera(s) <b>770</b> that may be used to perceive objects coming into view from the periphery (e.g., pedestrians, crossing traffic or bicycles). Although only one wide-view camera is illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, there may any number of wide-view cameras <b>770</b> on the vehicle <b>700</b>. In addition, long-range camera(s) <b>798</b> (e.g., a long-view stereo camera pair) may be used for depth-based object detection, especially for objects for which a neural network has not yet been trained. The long-range camera(s) <b>798</b> may also be used for object detection and classification, as well as basic object tracking.</p><p id="p-0090" num="0085">One or more stereo cameras <b>768</b> may also be included in a front-facing configuration. The stereo camera(s) <b>768</b> may include an integrated control unit comprising a scalable processing unit, which may provide a programmable logic (FPGA) and a multi-core micro-processor with an integrated CAN or Ethernet interface on a single chip. Such a unit may be used to generate a 3-D map of the vehicle's environment, including a distance estimate for all the points in the image. An alternative stereo camera(s) <b>768</b> may include a compact stereo vision sensor(s) that may include two camera lenses (one each on the left and right) and an image processing chip that may measure the distance from the vehicle to the target object and use the generated information (e.g., metadata) to activate the autonomous emergency braking and lane departure warning functions. Other types of stereo camera(s) <b>768</b> may be used in addition to, or alternatively from, those described herein.</p><p id="p-0091" num="0086">Cameras with a field of view that include portions of the environment to the side of the vehicle <b>700</b> (e.g., side-view cameras) may be used for surround view, providing information used to create and update the occupancy grid, as well as to generate side impact collision warnings. For example, surround camera(s) <b>774</b> (e.g., four surround cameras <b>774</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>) may be positioned to on the vehicle <b>700</b>. The surround camera(s) <b>774</b> may include wide-view camera(s) <b>770</b>, fisheye camera(s), 360 degree camera(s), and/or the like. Four example, four fisheye cameras may be positioned on the vehicle's front, rear, and sides. In an alternative arrangement, the vehicle may use three surround camera(s) <b>774</b> (e.g., left, right, and rear), and may leverage one or more other camera(s) (e.g., a forward-facing camera) as a fourth surround view camera.</p><p id="p-0092" num="0087">Cameras with a field of view that include portions of the environment to the rear of the vehicle <b>700</b> (e.g., rear-view cameras) may be used for park assistance, surround view, rear collision warnings, and creating and updating the occupancy grid. A wide variety of cameras may be used including, but not limited to, cameras that are also suitable as a front-facing camera(s) (e.g., long-range and/or mid-range camera(s) <b>798</b>, stereo camera(s) <b>768</b>), infrared camera(s) <b>772</b>, etc.), as described herein.</p><p id="p-0093" num="0088"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> is a block diagram of an example system architecture for the example autonomous vehicle <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, in accordance with some embodiments of the present disclosure. It should be understood that this and other arrangements described herein are set forth only as examples. Other arrangements and elements (e.g., machines, interfaces, functions, orders, groupings of functions, etc.) may be used in addition to or instead of those shown, and some elements may be omitted altogether. Further, many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location. Various functions described herein as being performed by entities may be carried out by hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory.</p><p id="p-0094" num="0089">Each of the components, features, and systems of the vehicle <b>700</b> in <figref idref="DRAWINGS">FIG. <b>7</b>C</figref> are illustrated as being connected via bus <b>702</b>. The bus <b>702</b> may include a Controller Area Network (CAN) data interface (alternatively referred to herein as a &#x201c;CAN bus&#x201d;). A CAN may be a network inside the vehicle <b>700</b> used to aid in control of various features and functionality of the vehicle <b>700</b>, such as actuation of brakes, acceleration, braking, steering, windshield wipers, etc. A CAN bus may be configured to have dozens or even hundreds of nodes, each with its own unique identifier (e.g., a CAN ID). The CAN bus may be read to find steering wheel angle, ground speed, engine revolutions per minute (RPMs), button positions, and/or other vehicle status indicators. The CAN bus may be ASIL B compliant.</p><p id="p-0095" num="0090">Although the bus <b>702</b> is described herein as being a CAN bus, this is not intended to be limiting. For example, in addition to, or alternatively from, the CAN bus, FlexRay and/or Ethernet may be used. Additionally, although a single line is used to represent the bus <b>702</b>, this is not intended to be limiting. For example, there may be any number of busses <b>702</b>, which may include one or more CAN busses, one or more FlexRay busses, one or more Ethernet busses, and/or one or more other types of busses using a different protocol. In some examples, two or more busses <b>702</b> may be used to perform different functions, and/or may be used for redundancy. For example, a first bus <b>702</b> may be used for collision avoidance functionality and a second bus <b>702</b> may be used for actuation control. In any example, each bus <b>702</b> may communicate with any of the components of the vehicle <b>700</b>, and two or more busses <b>702</b> may communicate with the same components. In some examples, each SoC <b>704</b>, each controller <b>736</b>, and/or each computer within the vehicle may have access to the same input data (e.g., inputs from sensors of the vehicle <b>700</b>), and may be connected to a common bus, such the CAN bus.</p><p id="p-0096" num="0091">The vehicle <b>700</b> may include one or more controller(s) <b>736</b>, such as those described herein with respect to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>. The controller(s) <b>736</b> may be used for a variety of functions. The controller(s) <b>736</b> may be coupled to any of the various other components and systems of the vehicle <b>700</b>, and may be used for control of the vehicle <b>700</b>, artificial intelligence of the vehicle <b>700</b>, infotainment for the vehicle <b>700</b>, and/or the like.</p><p id="p-0097" num="0092">The vehicle <b>700</b> may include a system(s) on a chip (SoC) <b>704</b>. The SoC <b>704</b> may include CPU(s) <b>706</b>, GPU(s) <b>708</b>, processor(s) <b>710</b>, cache(s) <b>712</b>, accelerator(s) <b>714</b>, data store(s) <b>716</b>, and/or other components and features not illustrated. The SoC(s) <b>704</b> may be used to control the vehicle <b>700</b> in a variety of platforms and systems. For example, the SoC(s) <b>704</b> may be combined in a system (e.g., the system of the vehicle <b>700</b>) with an HD map <b>722</b> which may obtain map refreshes and/or updates via a network interface <b>724</b> from one or more servers (e.g., server(s) <b>778</b> of <figref idref="DRAWINGS">FIG. <b>7</b>D</figref>).</p><p id="p-0098" num="0093">The CPU(s) <b>706</b> may include a CPU cluster or CPU complex (alternatively referred to herein as a &#x201c;CCPLEX&#x201d;). The CPU(s) <b>706</b> may include multiple cores and/or L2 caches. For example, in some embodiments, the CPU(s) <b>706</b> may include eight cores in a coherent multi-processor configuration. In some embodiments, the CPU(s) <b>706</b> may include four dual-core clusters where each cluster has a dedicated L2 cache (e.g., a 2 MB L2 cache). The CPU(s) <b>706</b> (e.g., the CCPLEX) may be configured to support simultaneous cluster operation enabling any combination of the clusters of the CPU(s) <b>706</b> to be active at any given time.</p><p id="p-0099" num="0094">The CPU(s) <b>706</b> may implement power management capabilities that include one or more of the following features: individual hardware blocks may be clock-gated automatically when idle to save dynamic power; each core clock may be gated when the core is not actively executing instructions due to execution of WFI/WFE instructions; each core may be independently power-gated; each core cluster may be independently clock-gated when all cores are clock-gated or power-gated; and/or each core cluster may be independently power-gated when all cores are power-gated. The CPU(s) <b>706</b> may further implement an enhanced algorithm for managing power states, where allowed power states and expected wakeup times are specified, and the hardware/microcode determines the best power state to enter for the core, cluster, and CCPLEX. The processing cores may support simplified power state entry sequences in software with the work offloaded to microcode.</p><p id="p-0100" num="0095">The GPU(s) <b>708</b> may include an integrated GPU (alternatively referred to herein as an &#x201c;iGPU&#x201d;). The GPU(s) <b>708</b> may be programmable and may be efficient for parallel workloads. The GPU(s) <b>708</b>, in some examples, may use an enhanced tensor instruction set. The GPU(s) <b>708</b> may include one or more streaming microprocessors, where each streaming microprocessor may include an L1 cache (e.g., an L1 cache with at least 96 KB storage capacity), and two or more of the streaming microprocessors may share an L2 cache (e.g., an L2 cache with a 512 KB storage capacity). In some embodiments, the GPU(s) <b>708</b> may include at least eight streaming microprocessors. The GPU(s) <b>708</b> may use compute application programming interface(s) (API(s)). In addition, the GPU(s) <b>708</b> may use one or more parallel computing platforms and/or programming models (e.g., NVIDIA's CUDA).</p><p id="p-0101" num="0096">The GPU(s) <b>708</b> may be power-optimized for best performance in automotive and embedded use cases. For example, the GPU(s) <b>708</b> may be fabricated on a Fin field-effect transistor (FinFET). However, this is not intended to be limiting and the GPU(s) <b>708</b> may be fabricated using other semiconductor manufacturing processes. Each streaming microprocessor may incorporate a number of mixed-precision processing cores partitioned into multiple blocks. For example, and without limitation, 64 PF32 cores and 32 PF64 cores may be partitioned into four processing blocks. In such an example, each processing block may be allocated 16 FP32 cores, 8 FP64 cores, 16 INT32 cores, two mixed-precision NVIDIA TENSOR COREs for deep learning matrix arithmetic, an L0 instruction cache, a warp scheduler, a dispatch unit, and/or a 64 KB register file. In addition, the streaming microprocessors may include independent parallel integer and floating-point data paths to provide for efficient execution of workloads with a mix of computation and addressing calculations. The streaming microprocessors may include independent thread scheduling capability to enable finer-grain synchronization and cooperation between parallel threads. The streaming microprocessors may include a combined L1 data cache and shared memory unit in order to improve performance while simplifying programming.</p><p id="p-0102" num="0097">The GPU(s) <b>708</b> may include a high bandwidth memory (HBM) and/or a 16 GB HBM2 memory subsystem to provide, in some examples, about 900 GB/second peak memory bandwidth. In some examples, in addition to, or alternatively from, the HBM memory, a synchronous graphics random-access memory (SGRAM) may be used, such as a graphics double data rate type five synchronous random-access memory (GDDR5).</p><p id="p-0103" num="0098">The GPU(s) <b>708</b> may include unified memory technology including access counters to allow for more accurate migration of memory pages to the processor that accesses them most frequently, thereby improving efficiency for memory ranges shared between processors. In some examples, address translation services (ATS) support may be used to allow the GPU(s) <b>708</b> to access the CPU(s) <b>706</b> page tables directly. In such examples, when the GPU(s) <b>708</b> memory management unit (MMU) experiences a miss, an address translation request may be transmitted to the CPU(s) <b>706</b>. In response, the CPU(s) <b>706</b> may look in its page tables for the virtual-to-physical mapping for the address and transmits the translation back to the GPU(s) <b>708</b>. As such, unified memory technology may allow a single unified virtual address space for memory of both the CPU(s) <b>706</b> and the GPU(s) <b>708</b>, thereby simplifying the GPU(s) <b>708</b> programming and porting of applications to the GPU(s) <b>708</b>.</p><p id="p-0104" num="0099">In addition, the GPU(s) <b>708</b> may include an access counter that may keep track of the frequency of access of the GPU(s) <b>708</b> to memory of other processors. The access counter may help ensure that memory pages are moved to the physical memory of the processor that is accessing the pages most frequently.</p><p id="p-0105" num="0100">The SoC(s) <b>704</b> may include any number of cache(s) <b>712</b>, including those described herein. For example, the cache(s) <b>712</b> may include an L3 cache that is available to both the CPU(s) <b>706</b> and the GPU(s) <b>708</b> (e.g., that is connected both the CPU(s) <b>706</b> and the GPU(s) <b>708</b>). The cache(s) <b>712</b> may include a write-back cache that may keep track of states of lines, such as by using a cache coherence protocol (e.g., MEI, MESI, MSI, etc.). The L3 cache may include 4 MB or more, depending on the embodiment, although smaller cache sizes may be used.</p><p id="p-0106" num="0101">The SoC(s) <b>704</b> may include one or more accelerators <b>714</b> (e.g., hardware accelerators, software accelerators, or a combination thereof). For example, the SoC(s) <b>704</b> may include a hardware acceleration cluster that may include optimized hardware accelerators and/or large on-chip memory. The large on-chip memory (e.g., 4 MB of SRAM), may enable the hardware acceleration cluster to accelerate neural networks and other calculations. The hardware acceleration cluster may be used to complement the GPU(s) <b>708</b> and to off-load some of the tasks of the GPU(s) <b>708</b> (e.g., to free up more cycles of the GPU(s) <b>708</b> for performing other tasks). As an example, the accelerator(s) <b>714</b> may be used for targeted workloads (e.g., perception, convolutional neural networks (CNNs), etc.) that are stable enough to be amenable to acceleration. The term &#x201c;CNN,&#x201d; as used herein, may include all types of CNNs, including region-based or regional convolutional neural networks (RCNNs) and Fast RCNNs (e.g., as used for object detection).</p><p id="p-0107" num="0102">The accelerator(s) <b>714</b> (e.g., the hardware acceleration cluster) may include a deep learning accelerator(s) (DLA). The DLA(s) may include one or more Tensor processing units (TPUs) that may be configured to provide an additional ten trillion operations per second for deep learning applications and inferencing. The TPUs may be accelerators configured to, and optimized for, performing image processing functions (e.g., for CNNs, RCNNs, etc.). The DLA(s) may further be optimized for a specific set of neural network types and floating point operations, as well as inferencing. The design of the DLA(s) may provide more performance per millimeter than a general-purpose GPU, and vastly exceeds the performance of a CPU. The TPU(s) may perform several functions, including a single-instance convolution function, supporting, for example, INT8, INT16, and FP16 data types for both features and weights, as well as post-processor functions.</p><p id="p-0108" num="0103">The DLA(s) may quickly and efficiently execute neural networks, especially CNNs, on processed or unprocessed data for any of a variety of functions, including, for example and without limitation: a CNN for object identification and detection using data from camera sensors; a CNN for distance estimation using data from camera sensors; a CNN for emergency vehicle detection and identification and detection using data from microphones; a CNN for facial recognition and vehicle owner identification using data from camera sensors; and/or a CNN for security and/or safety related events.</p><p id="p-0109" num="0104">The DLA(s) may perform any function of the GPU(s) <b>708</b>, and by using an inference accelerator, for example, a designer may target either the DLA(s) or the GPU(s) <b>708</b> for any function. For example, the designer may focus processing of CNNs and floating point operations on the DLA(s) and leave other functions to the GPU(s) <b>708</b> and/or other accelerator(s) <b>714</b>.</p><p id="p-0110" num="0105">The accelerator(s) <b>714</b> (e.g., the hardware acceleration cluster) may include a programmable vision accelerator(s) (PVA), which may alternatively be referred to herein as a computer vision accelerator. The PVA(s) may be designed and configured to accelerate computer vision algorithms for the advanced driver assistance systems (ADAS), autonomous driving, and/or augmented reality (AR) and/or virtual reality (VR) applications. The PVA(s) may provide a balance between performance and flexibility. For example, each PVA(s) may include, for example and without limitation, any number of reduced instruction set computer (RISC) cores, direct memory access (DMA), and/or any number of vector processors.</p><p id="p-0111" num="0106">The RISC cores may interact with image sensors (e.g., the image sensors of any of the cameras described herein), image signal processor(s), and/or the like. Each of the RISC cores may include any amount of memory. The RISC cores may use any of a number of protocols, depending on the embodiment. In some examples, the RISC cores may execute a real-time operating system (RTOS). The RISC cores may be implemented using one or more integrated circuit devices, application specific integrated circuits (ASICs), and/or memory devices. For example, the RISC cores may include an instruction cache and/or a tightly coupled RAM.</p><p id="p-0112" num="0107">The DMA may enable components of the PVA(s) to access the system memory independently of the CPU(s) <b>706</b>. The DMA may support any number of features used to provide optimization to the PVA including, but not limited to, supporting multi-dimensional addressing and/or circular addressing. In some examples, the DMA may support up to six or more dimensions of addressing, which may include block width, block height, block depth, horizontal block stepping, vertical block stepping, and/or depth stepping.</p><p id="p-0113" num="0108">The vector processors may be programmable processors that may be designed to efficiently and flexibly execute programming for computer vision algorithms and provide signal processing capabilities. In some examples, the PVA may include a PVA core and two vector processing subsystem partitions. The PVA core may include a processor subsystem, DMA engine(s) (e.g., two DMA engines), and/or other peripherals. The vector processing subsystem may operate as the primary processing engine of the PVA, and may include a vector processing unit (VPU), an instruction cache, and/or vector memory (e.g., VMEM). A VPU core may include a digital signal processor such as, for example, a single instruction, multiple data (SIMD), very long instruction word (VLIW) digital signal processor. The combination of the SIMD and VLIW may enhance throughput and speed.</p><p id="p-0114" num="0109">Each of the vector processors may include an instruction cache and may be coupled to dedicated memory. As a result, in some examples, each of the vector processors may be configured to execute independently of the other vector processors. In other examples, the vector processors that are included in a particular PVA may be configured to employ data parallelism. For example, in some embodiments, the plurality of vector processors included in a single PVA may execute the same computer vision algorithm, but on different regions of an image. In other examples, the vector processors included in a particular PVA may simultaneously execute different computer vision algorithms, on the same image, or even execute different algorithms on sequential images or portions of an image. Among other things, any number of PVAs may be included in the hardware acceleration cluster and any number of vector processors may be included in each of the PVAs. In addition, the PVA(s) may include additional error correcting code (ECC) memory, to enhance overall system safety.</p><p id="p-0115" num="0110">The accelerator(s) <b>714</b> (e.g., the hardware acceleration cluster) may include a computer vision network on-chip and SRAM, for providing a high-bandwidth, low latency SRAM for the accelerator(s) <b>714</b>. In some examples, the on-chip memory may include at least 4 MB SRAM, consisting of, for example and without limitation, eight field-configurable memory blocks, that may be accessible by both the PVA and the DLA. Each pair of memory blocks may include an advanced peripheral bus (APB) interface, configuration circuitry, a controller, and a multiplexer. Any type of memory may be used. The PVA and DLA may access the memory via a backbone that provides the PVA and DLA with high-speed access to memory. The backbone may include a computer vision network on-chip that interconnects the PVA and the DLA to the memory (e.g., using the APB).</p><p id="p-0116" num="0111">The computer vision network on-chip may include an interface that determines, before transmission of any control signal/address/data, that both the PVA and the DLA provide ready and valid signals. Such an interface may provide for separate phases and separate channels for transmitting control signals/addresses/data, as well as burst-type communications for continuous data transfer. This type of interface may comply with ISO 26262 or IEC 61508 standards, although other standards and protocols may be used.</p><p id="p-0117" num="0112">In some examples, the SoC(s) <b>704</b> may include a real-time ray-tracing hardware accelerator, such as described in U.S. patent application Ser. No. 16/101,232, filed on Aug. 10, 2018. The real-time ray-tracing hardware accelerator may be used to quickly and efficiently determine the positions and extents of objects (e.g., within a world model), to generate real0time visualization simulations, for RADAR signal interpretation, for sound propagation synthesis and/or analysis, for simulation of SONAR systems, for general wave propagation simulation, for comparison to LIDAR data for purposes of localization and/or other functions, and/or for other uses.</p><p id="p-0118" num="0113">The accelerator(s) <b>714</b> (e.g., the hardware accelerator cluster) have a wide array of uses for autonomous driving. The PVA may be a programmable vision accelerator that may be used for key processing stages in ADAS and autonomous vehicles. The PVA's capabilities are a good match for algorithmic domains needing predictable processing, at low power and low latency. In other words, the PVA performs well on semi-dense or dense regular computation, even on small data sets, which need predictable run-times with low latency and low power. Thus, in the context of platforms for autonomous vehicles, the PVAs are designed to run classic computer vision algorithms, as they are efficient at object detection and operating on integer math.</p><p id="p-0119" num="0114">For example, according to one embodiment of the technology, the PVA is used to perform computer stereo vision. A semi-global matching-based algorithm may be used in some examples, although this is not intended to be limiting. Many applications for Level 3-5 autonomous driving require motion estimation/stereo matching on-the-fly (e.g., structure from motion, pedestrian recognition, lane detection, etc.). The PVA may perform computer stereo vision function on inputs from two monocular cameras.</p><p id="p-0120" num="0115">In some examples, the PVA may be used to perform dense optical flow. According to process raw RADAR data (e.g., using a 4D Fast Fourier Transform) to provide Processed RADAR. In other examples, the PVA is used for time of flight depth processing, by processing raw time of flight data to provide processed time of flight data, for example.</p><p id="p-0121" num="0116">The DLA may be used to run any type of network to enhance control and driving safety, including for example, a neural network that outputs a measure of confidence for each object detection. Such a confidence value may be interpreted as a probability, or as providing a relative &#x201c;weight&#x201d; of each detection compared to other detections. This confidence value enables the system to make further decisions regarding which detections should be considered as true positive detections rather than false positive detections. For example, the system may set a threshold value for the confidence and consider only the detections exceeding the threshold value as true positive detections. In an automatic emergency braking (AEB) system, false positive detections would cause the vehicle to automatically perform emergency braking, which is obviously undesirable. Therefore, only the most confident detections should be considered as triggers for AEB. The DLA may run a neural network for regressing the confidence value. The neural network may take as its input at least some subset of parameters, such as bounding box dimensions, ground plane estimate obtained (e.g. from another subsystem), inertial measurement unit (IMU) sensor <b>766</b> output that correlates with the vehicle <b>700</b> orientation, distance, 3D location estimates of the object obtained from the neural network and/or other sensors (e.g., LIDAR sensor(s) <b>764</b> or RADAR sensor(s) <b>760</b>), among others.</p><p id="p-0122" num="0117">The SoC(s) <b>704</b> may include data store(s) <b>716</b> (e.g., memory). The data store(s) <b>716</b> may be on-chip memory of the SoC(s) <b>704</b>, which may store neural networks to be executed on the GPU and/or the DLA. In some examples, the data store(s) <b>716</b> may be large enough in capacity to store multiple instances of neural networks for redundancy and safety. The data store(s) <b>712</b> may comprise L2 or L3 cache(s) <b>712</b>. Reference to the data store(s) <b>716</b> may include reference to the memory associated with the PVA, DLA, and/or other accelerator(s) <b>714</b>, as described herein.</p><p id="p-0123" num="0118">The SoC(s) <b>704</b> may include one or more processor(s) <b>710</b> (e.g., embedded processors). The processor(s) <b>710</b> may include a boot and power management processor that may be a dedicated processor and subsystem to handle boot power and management functions and related security enforcement. The boot and power management processor may be a part of the SoC(s) <b>704</b> boot sequence and may provide runtime power management services. The boot power and management processor may provide clock and voltage programming, assistance in system low power state transitions, management of SoC(s) <b>704</b> thermals and temperature sensors, and/or management of the SoC(s) <b>704</b> power states. Each temperature sensor may be implemented as a ring-oscillator whose output frequency is proportional to temperature, and the SoC(s) <b>704</b> may use the ring-oscillators to detect temperatures of the CPU(s) <b>706</b>, GPU(s) <b>708</b>, and/or accelerator(s) <b>714</b>. If temperatures are determined to exceed a threshold, the boot and power management processor may enter a temperature fault routine and put the SoC(s) <b>704</b> into a lower power state and/or put the vehicle <b>700</b> into a chauffeur to safe stop mode (e.g., bring the vehicle <b>700</b> to a safe stop).</p><p id="p-0124" num="0119">The processor(s) <b>710</b> may further include a set of embedded processors that may serve as an audio processing engine. The audio processing engine may be an audio subsystem that enables full hardware support for multi-channel audio over multiple interfaces, and a broad and flexible range of audio I/O interfaces. In some examples, the audio processing engine is a dedicated processor core with a digital signal processor with dedicated RAM.</p><p id="p-0125" num="0120">The processor(s) <b>710</b> may further include an always on processor engine that may provide necessary hardware features to support low power sensor management and wake use cases. The always on processor engine may include a processor core, a tightly coupled RAM, supporting peripherals (e.g., timers and interrupt controllers), various I/O controller peripherals, and routing logic.</p><p id="p-0126" num="0121">The processor(s) <b>710</b> may further include a safety cluster engine that includes a dedicated processor subsystem to handle safety management for automotive applications. The safety cluster engine may include two or more processor cores, a tightly coupled RAM, support peripherals (e.g., timers, an interrupt controller, etc.), and/or routing logic. In a safety mode, the two or more cores may operate in a lockstep mode and function as a single core with comparison logic to detect any differences between their operations.</p><p id="p-0127" num="0122">The processor(s) <b>710</b> may further include a real-time camera engine that may include a dedicated processor subsystem for handling real-time camera management.</p><p id="p-0128" num="0123">The processor(s) <b>710</b> may further include a high-dynamic range signal processor that may include an image signal processor that is a hardware engine that is part of the camera processing pipeline.</p><p id="p-0129" num="0124">The processor(s) <b>710</b> may include a video image compositor that may be a processing block (e.g., implemented on a microprocessor) that implements video post-processing functions needed by a video playback application to produce the final image for the player window. The video image compositor may perform lens distortion correction on wide-view camera(s) <b>770</b>, surround camera(s) <b>774</b>, and/or on in-cabin monitoring camera sensors. In-cabin monitoring camera sensor is preferably monitored by a neural network running on another instance of the Advanced SoC, configured to identify in cabin events and respond accordingly. An in-cabin system may perform lip reading to activate cellular service and place a phone call, dictate emails, change the vehicle's destination, activate or change the vehicle's infotainment system and settings, or provide voice-activated web surfing. Certain functions are available to the driver only when the vehicle is operating in an autonomous mode, and are disabled otherwise.</p><p id="p-0130" num="0125">The video image compositor may include enhanced temporal noise reduction for both spatial and temporal noise reduction. For example, where motion occurs in a video, the noise reduction weights spatial information appropriately, decreasing the weight of information provided by adjacent frames. Where an image or portion of an image does not include motion, the temporal noise reduction performed by the video image compositor may use information from the previous image to reduce noise in the current image.</p><p id="p-0131" num="0126">The video image compositor may also be configured to perform stereo rectification on input stereo lens frames. The video image compositor may further be used for user interface composition when the operating system desktop is in use, and the GPU(s) <b>708</b> is not required to continuously render new surfaces. Even when the GPU(s) <b>708</b> is powered on and active doing 3D rendering, the video image compositor may be used to offload the GPU(s) <b>708</b> to improve performance and responsiveness.</p><p id="p-0132" num="0127">The SoC(s) <b>704</b> may further include a mobile industry processor interface (MIPI) camera serial interface for receiving video and input from cameras, a high-speed interface, and/or a video input block that may be used for camera and related pixel input functions. The SoC(s) <b>704</b> may further include an input/output controller(s) that may be controlled by software and may be used for receiving I/O signals that are uncommitted to a specific role.</p><p id="p-0133" num="0128">The SoC(s) <b>704</b> may further include a broad range of peripheral interfaces to enable communication with peripherals, audio codecs, power management, and/or other devices. The SoC(s) <b>704</b> may be used to process data from cameras (e.g., connected over Gigabit Multimedia Serial Link and Ethernet), sensors (e.g., LIDAR sensor(s) <b>764</b>, RADAR sensor(s) <b>760</b>, etc. that may be connected over Ethernet), data from bus <b>702</b> (e.g., speed of vehicle <b>700</b>, steering wheel position, etc.), data from GNSS sensor(s) <b>758</b> (e.g., connected over Ethernet or CAN bus). The SoC(s) <b>704</b> may further include dedicated high-performance mass storage controllers that may include their own DMA engines, and that may be used to free the CPU(s) <b>706</b> from routine data management tasks.</p><p id="p-0134" num="0129">The SoC(s) <b>704</b> may be an end-to-end platform with a flexible architecture that spans automation levels 3-5, thereby providing a comprehensive functional safety architecture that leverages and makes efficient use of computer vision and ADAS techniques for diversity and redundancy, provides a platform for a flexible, reliable driving software stack, along with deep learning tools. The SoC(s) <b>704</b> may be faster, more reliable, and even more energy-efficient and space-efficient than conventional systems. For example, the accelerator(s) <b>714</b>, when combined with the CPU(s) <b>706</b>, the GPU(s) <b>708</b>, and the data store(s) <b>716</b>, may provide for a fast, efficient platform for level 3-5 autonomous vehicles.</p><p id="p-0135" num="0130">The technology thus provides capabilities and functionality that cannot be achieved by conventional systems. For example, computer vision algorithms may be executed on CPUs, which may be configured using high-level programming language, such as the C programming language, to execute a wide variety of processing algorithms across a wide variety of visual data. However, CPUs are oftentimes unable to meet the performance requirements of many computer vision applications, such as those related to execution time and power consumption, for example. In particular, many CPUs are unable to execute complex object detection algorithms in real-time, which is a requirement of in-vehicle ADAS applications, and a requirement for practical Level 3-5 autonomous vehicles.</p><p id="p-0136" num="0131">In contrast to conventional systems, by providing a CPU complex, GPU complex, and a hardware acceleration cluster, the technology described herein allows for multiple neural networks to be performed simultaneously and/or sequentially, and for the results to be combined together to enable Level 3-5 autonomous driving functionality. For example, a CNN executing on the DLA or dGPU (e.g., the GPU(s) <b>720</b>) may include a text and word recognition, allowing the supercomputer to read and understand traffic signs, including signs for which the neural network has not been specifically trained. The DLA may further include a neural network that is able to identify, interpret, and provides semantic understanding of the sign, and to pass that semantic understanding to the path planning modules running on the CPU Complex.</p><p id="p-0137" num="0132">As another example, multiple neural networks may be run simultaneously, as is required for Level 3, 4, or 5 driving. For example, a warning sign consisting of &#x201c;Caution: flashing lights indicate icy conditions,&#x201d; along with an electric light, may be independently or collectively interpreted by several neural networks. The sign itself may be identified as a traffic sign by a first deployed neural network (e.g., a neural network that has been trained), the text &#x201c;Flashing lights indicate icy conditions&#x201d; may be interpreted by a second deployed neural network, which informs the vehicle's path planning software (preferably executing on the CPU Complex) that when flashing lights are detected, icy conditions exist. The flashing light may be identified by operating a third deployed neural network over multiple frames, informing the vehicle's path-planning software of the presence (or absence) of flashing lights. All three neural networks may run simultaneously, such as within the DLA and/or on the GPU(s) <b>708</b>.</p><p id="p-0138" num="0133">In some examples, a CNN for facial recognition and vehicle owner identification may use data from camera sensors to identify the presence of an authorized driver and/or owner of the vehicle <b>700</b>. The always on sensor processing engine may be used to unlock the vehicle when the owner approaches the driver door and turn on the lights, and, in security mode, to disable the vehicle when the owner leaves the vehicle. In this way, the SoC(s) <b>704</b> provide for security against theft and/or carjacking.</p><p id="p-0139" num="0134">In another example, a CNN for emergency vehicle detection and identification may use data from microphones <b>796</b> to detect and identify emergency vehicle sirens. In contrast to conventional systems, that use general classifiers to detect sirens and manually extract features, the SoC(s) <b>704</b> use the CNN for classifying environmental and urban sounds, as well as classifying visual data. In a preferred embodiment, the CNN running on the DLA is trained to identify the relative closing speed of the emergency vehicle (e.g., by using the Doppler Effect). The CNN may also be trained to identify emergency vehicles specific to the local area in which the vehicle is operating, as identified by GNSS sensor(s) <b>758</b>. Thus, for example, when operating in Europe the CNN will seek to detect European sirens, and when in the United States the CNN will seek to identify only North American sirens. Once an emergency vehicle is detected, a control program may be used to execute an emergency vehicle safety routine, slowing the vehicle, pulling over to the side of the road, parking the vehicle, and/or idling the vehicle, with the assistance of ultrasonic sensors <b>762</b>, until the emergency vehicle(s) passes.</p><p id="p-0140" num="0135">The vehicle may include a CPU(s) <b>718</b> (e.g., discrete CPU(s), or dCPU(s)), that may be coupled to the SoC(s) <b>704</b> via a high-speed interconnect (e.g., PCIe). The CPU(s) <b>718</b> may include an X86 processor, for example. The CPU(s) <b>718</b> may be used to perform any of a variety of functions, including arbitrating potentially inconsistent results between ADAS sensors and the SoC(s) <b>704</b>, and/or monitoring the status and health of the controller(s) <b>736</b> and/or infotainment SoC <b>730</b>, for example.</p><p id="p-0141" num="0136">The vehicle <b>700</b> may include a GPU(s) <b>720</b> (e.g., discrete GPU(s), or dGPU(s)), that may be coupled to the SoC(s) <b>704</b> via a high-speed interconnect (e.g., NVIDIA's NVLINK). The GPU(s) <b>720</b> may provide additional artificial intelligence functionality, such as by executing redundant and/or different neural networks, and may be used to train and/or update neural networks based on input (e.g., sensor data) from sensors of the vehicle <b>700</b>.</p><p id="p-0142" num="0137">The vehicle <b>700</b> may further include the network interface <b>724</b> which may include one or more wireless antennas <b>726</b> (e.g., one or more wireless antennas for different communication protocols, such as a cellular antenna, a Bluetooth antenna, etc.). The network interface <b>724</b> may be used to enable wireless connectivity over the Internet with the cloud (e.g., with the server(s) <b>778</b> and/or other network devices), with other vehicles, and/or with computing devices (e.g., client devices of passengers). To communicate with other vehicles, a direct link may be established between the two vehicles and/or an indirect link may be established (e.g., across networks and over the Internet). Direct links may be provided using a vehicle-to-vehicle communication link. The vehicle-to-vehicle communication link may provide the vehicle <b>700</b> information about vehicles in proximity to the vehicle <b>700</b> (e.g., vehicles in front of, on the side of, and/or behind the vehicle <b>700</b>). This functionality may be part of a cooperative adaptive cruise control functionality of the vehicle <b>700</b>.</p><p id="p-0143" num="0138">The network interface <b>724</b> may include a SoC that provides modulation and demodulation functionality and enables the controller(s) <b>736</b> to communicate over wireless networks. The network interface <b>724</b> may include a radio frequency front-end for up-conversion from baseband to radio frequency, and down conversion from radio frequency to baseband. The frequency conversions may be performed through well-known processes, and/or may be performed using super-heterodyne processes. In some examples, the radio frequency front end functionality may be provided by a separate chip. The network interface may include wireless functionality for communicating over LTE, WCDMA, UMTS, GSM, CDMA2000, Bluetooth, Bluetooth LE, Wi-Fi, Z-Wave, ZigBee, LoRaWAN, and/or other wireless protocols.</p><p id="p-0144" num="0139">The vehicle <b>700</b> may further include data store(s) <b>728</b> which may include off-chip (e.g., off the SoC(s) <b>704</b>) storage. The data store(s) <b>728</b> may include one or more storage elements including RAM, SRAM, DRAM, VRAM, Flash, hard disks, and/or other components and/or devices that may store at least one bit of data.</p><p id="p-0145" num="0140">The vehicle <b>700</b> may further include GNSS sensor(s) <b>758</b>. The GNSS sensor(s) <b>758</b> (e.g., GPS and/or assisted GPS sensors), to assist in mapping, perception, occupancy grid generation, and/or path planning functions. Any number of GNSS sensor(s) <b>758</b> may be used, including, for example and without limitation, a GPS using a USB connector with an Ethernet to Serial (RS-232) bridge.</p><p id="p-0146" num="0141">The vehicle <b>700</b> may further include RADAR sensor(s) <b>760</b>. The RADAR sensor(s) <b>760</b> may be used by the vehicle <b>700</b> for long-range vehicle detection, even in darkness and/or severe weather conditions. RADAR functional safety levels may be ASIL B. The RADAR sensor(s) <b>760</b> may use the CAN and/or the bus <b>702</b> (e.g., to transmit data generated by the RADAR sensor(s) <b>760</b>) for control and to access object tracking data, with access to Ethernet to access raw data in some examples. A wide variety of RADAR sensor types may be used. For example, and without limitation, the RADAR sensor(s) <b>760</b> may be suitable for front, rear, and side RADAR use. In some example, Pulse Doppler RADAR sensor(s) are used.</p><p id="p-0147" num="0142">The RADAR sensor(s) <b>760</b> may include different configurations, such as long range with narrow field of view, short range with wide field of view, short range side coverage, etc. In some examples, long-range RADAR may be used for adaptive cruise control functionality. The long-range RADAR systems may provide a broad field of view realized by two or more independent scans, such as within a 250 m range. The RADAR sensor(s) <b>760</b> may help in distinguishing between static and moving objects, and may be used by ADAS systems for emergency brake assist and forward collision warning. Long-range RADAR sensors may include monostatic multimodal RADAR with multiple (e.g., six or more) fixed RADAR antennae and a high-speed CAN and FlexRay interface. In an example with six antennae, the central four antennae may create a focused beam pattern, designed to record the vehicle's <b>700</b> surroundings at higher speeds with minimal interference from traffic in adjacent lanes. The other two antennae may expand the field of view, making it possible to quickly detect vehicles entering or leaving the vehicle's <b>700</b> lane.</p><p id="p-0148" num="0143">Mid-range RADAR systems may include, as an example, a range of up to 760 m (front) or 80 m (rear), and a field of view of up to 42 degrees (front) or 750 degrees (rear). Short-range RADAR systems may include, without limitation, RADAR sensors designed to be installed at both ends of the rear bumper. When installed at both ends of the rear bumper, such a RADAR sensor systems may create two beams that constantly monitor the blind spot in the rear and next to the vehicle.</p><p id="p-0149" num="0144">Short-range RADAR systems may be used in an ADAS system for blind spot detection and/or lane change assist.</p><p id="p-0150" num="0145">The vehicle <b>700</b> may further include ultrasonic sensor(s) <b>762</b>. The ultrasonic sensor(s) <b>762</b>, which may be positioned at the front, back, and/or the sides of the vehicle <b>700</b>, may be used for park assist and/or to create and update an occupancy grid. A wide variety of ultrasonic sensor(s) <b>762</b> may be used, and different ultrasonic sensor(s) <b>762</b> may be used for different ranges of detection (e.g., 2.5 m, 4 m). The ultrasonic sensor(s) <b>762</b> may operate at functional safety levels of ASIL B.</p><p id="p-0151" num="0146">The vehicle <b>700</b> may include LIDAR sensor(s) <b>764</b>. The LIDAR sensor(s) <b>764</b> may be used for object and pedestrian detection, emergency braking, collision avoidance, and/or other functions. The LIDAR sensor(s) <b>764</b> may be functional safety level ASIL B. In some examples, the vehicle <b>700</b> may include multiple LIDAR sensors <b>764</b> (e.g., two, four, six, etc.) that may use Ethernet (e.g., to provide data to a Gigabit Ethernet switch).</p><p id="p-0152" num="0147">In some examples, the LIDAR sensor(s) <b>764</b> may be capable of providing a list of objects and their distances for a 360-degree field of view. Commercially available LIDAR sensor(s) <b>764</b> may have an advertised range of approximately 700 m, with an accuracy of 2 cm-3 cm, and with support for a 700 Mbps Ethernet connection, for example. In some examples, one or more non-protruding LIDAR sensors <b>764</b> may be used. In such examples, the LIDAR sensor(s) <b>764</b> may be implemented as a small device that may be embedded into the front, rear, sides, and/or corners of the vehicle <b>700</b>. The LIDAR sensor(s) <b>764</b>, in such examples, may provide up to a 720-degree horizontal and 35-degree vertical field-of-view, with a 200 m range even for low-reflectivity objects. Front-mounted LIDAR sensor(s) <b>764</b> may be configured for a horizontal field of view between 45 degrees and 135 degrees.</p><p id="p-0153" num="0148">In some examples, LIDAR technologies, such as 3D flash LIDAR, may also be used. 3D Flash LIDAR uses a flash of a laser as a transmission source, to illuminate vehicle surroundings up to approximately 200 m. A flash LIDAR unit includes a receptor, which records the laser pulse transit time and the reflected light on each pixel, which in turn corresponds to the range from the vehicle to the objects. Flash LIDAR may allow for highly accurate and distortion-free images of the surroundings to be generated with every laser flash. In some examples, four flash LIDAR sensors may be deployed, one at each side of the vehicle <b>700</b>. Available 3D flash LIDAR systems include a solid-state 3D staring array LIDAR camera with no moving parts other than a fan (e.g., a non-scanning LIDAR device). The flash LIDAR device may use a 5 nanosecond class I (eye-safe) laser pulse per frame and may capture the reflected laser light in the form of 3D range point clouds and co-registered intensity data. By using flash LIDAR, and because flash LIDAR is a solid-state device with no moving parts, the LIDAR sensor(s) <b>764</b> may be less susceptible to motion blur, vibration, and/or shock.</p><p id="p-0154" num="0149">The vehicle may further include IMU sensor(s) <b>766</b>. The IMU sensor(s) <b>766</b> may be located at a center of the rear axle of the vehicle <b>700</b>, in some examples. The IMU sensor(s) <b>766</b> may include, for example and without limitation, an accelerometer(s), a magnetometer(s), a gyroscope(s), a magnetic compass(es), and/or other sensor types. In some examples, such as in six-axis applications, the IMU sensor(s) <b>766</b> may include accelerometers and gyroscopes, while in nine-axis applications, the IMU sensor(s) <b>766</b> may include accelerometers, gyroscopes, and magnetometers.</p><p id="p-0155" num="0150">In some embodiments, the IMU sensor(s) <b>766</b> may be implemented as a miniature, high performance GPS-Aided Inertial Navigation System (GPS/INS) that combines micro-electro-mechanical systems (MEMS) inertial sensors, a high-sensitivity GPS receiver, and advanced Kalman filtering algorithms to provide estimates of position, velocity, and attitude. As such, in some examples, the IMU sensor(s) <b>766</b> may enable the vehicle <b>700</b> to estimate heading without requiring input from a magnetic sensor by directly observing and correlating the changes in velocity from GPS to the IMU sensor(s) <b>766</b>. In some examples, the IMU sensor(s) <b>766</b> and the GNSS sensor(s) <b>758</b> may be combined in a single integrated unit.</p><p id="p-0156" num="0151">The vehicle may include microphone(s) <b>796</b> placed in and/or around the vehicle <b>700</b>. The microphone(s) <b>796</b> may be used for emergency vehicle detection and identification, among other things.</p><p id="p-0157" num="0152">The vehicle may further include any number of camera types, including stereo camera(s) <b>768</b>, wide-view camera(s) <b>770</b>, infrared camera(s) <b>772</b>, surround camera(s) <b>774</b>, long-range and/or mid-range camera(s) <b>798</b>, and/or other camera types. The cameras may be used to capture image data around an entire periphery of the vehicle <b>700</b>. The types of cameras used depends on the embodiments and requirements for the vehicle <b>700</b>, and any combination of camera types may be used to provide the necessary coverage around the vehicle <b>700</b>. In addition, the number of cameras may differ depending on the embodiment. For example, the vehicle may include six cameras, seven cameras, ten cameras, twelve cameras, and/or another number of cameras. The cameras may support, as an example and without limitation, Gigabit Multimedia Serial Link (GMSL) and/or Gigabit Ethernet. Each of the camera(s) is described with more detail herein with respect to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>.</p><p id="p-0158" num="0153">The vehicle <b>700</b> may further include vibration sensor(s) <b>742</b>. The vibration sensor(s) <b>742</b> may measure vibrations of components of the vehicle, such as the axle(s). For example, changes in vibrations may indicate a change in road surfaces. In another example, when two or more vibration sensors <b>742</b> are used, the differences between the vibrations may be used to determine friction or slippage of the road surface (e.g., when the difference in vibration is between a power-driven axle and a freely rotating axle).</p><p id="p-0159" num="0154">The vehicle <b>700</b> may include an ADAS system <b>738</b>. The ADAS system <b>738</b> may include a SoC, in some examples. The ADAS system <b>738</b> may include autonomous/adaptive/automatic cruise control (ACC), cooperative adaptive cruise control (CACC), forward crash warning (FCW), automatic emergency braking (AEB), lane departure warnings (LDW), lane keep assist (LKA), blind spot warning (BSW), rear cross-traffic warning (RCTW), collision warning systems (CWS), lane centering (LC), and/or other features and functionality.</p><p id="p-0160" num="0155">The ACC systems may use RADAR sensor(s) <b>760</b>, LIDAR sensor(s) <b>764</b>, and/or a camera(s). The ACC systems may include longitudinal ACC and/or lateral ACC. Longitudinal ACC monitors and controls the distance to the vehicle immediately ahead of the vehicle <b>700</b> and automatically adjust the vehicle speed to maintain a safe distance from vehicles ahead. Lateral ACC performs distance keeping, and advises the vehicle <b>700</b> to change lanes when necessary. Lateral ACC is related to other ADAS applications such as LCA and CWS.</p><p id="p-0161" num="0156">CACC uses information from other vehicles that may be received via the network interface <b>724</b> and/or the wireless antenna(s) <b>726</b> from other vehicles via a wireless link, or indirectly, over a network connection (e.g., over the Internet). Direct links may be provided by a vehicle-to-vehicle (V2V) communication link, while indirect links may be infrastructure-to-vehicle (I2V) communication link. In general, the V2V communication concept provides information about the immediately preceding vehicles (e.g., vehicles immediately ahead of and in the same lane as the vehicle <b>700</b>), while the I2V communication concept provides information about traffic further ahead. CACC systems may include either or both I2V and V2V information sources. Given the information of the vehicles ahead of the vehicle <b>700</b>, CACC may be more reliable and it has potential to improve traffic flow smoothness and reduce congestion on the road.</p><p id="p-0162" num="0157">FCW systems are designed to alert the driver to a hazard, so that the driver may take corrective action. FCW systems use a front-facing camera and/or RADAR sensor(s) <b>760</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component. FCW systems may provide a warning, such as in the form of a sound, visual warning, vibration and/or a quick brake pulse.</p><p id="p-0163" num="0158">AEB systems detect an impending forward collision with another vehicle or other object, and may automatically apply the brakes if the driver does not take corrective action within a specified time or distance parameter. AEB systems may use front-facing camera(s) and/or RADAR sensor(s) <b>760</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC. When the AEB system detects a hazard, it typically first alerts the driver to take corrective action to avoid the collision and, if the driver does not take corrective action, the AEB system may automatically apply the brakes in an effort to prevent, or at least mitigate, the impact of the predicted collision. AEB systems, may include techniques such as dynamic brake support and/or crash imminent braking.</p><p id="p-0164" num="0159">LDW systems provide visual, audible, and/or tactile warnings, such as steering wheel or seat vibrations, to alert the driver when the vehicle <b>700</b> crosses lane markings. A LDW system does not activate when the driver indicates an intentional lane departure, by activating a turn signal. LDW systems may use front-side facing cameras, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component.</p><p id="p-0165" num="0160">LKA systems are a variation of LDW systems. LKA systems provide steering input or braking to correct the vehicle <b>700</b> if the vehicle <b>700</b> starts to exit the lane.</p><p id="p-0166" num="0161">BSW systems detects and warn the driver of vehicles in an automobile's blind spot. BSW systems may provide a visual, audible, and/or tactile alert to indicate that merging or changing lanes is unsafe. The system may provide an additional warning when the driver uses a turn signal. BSW systems may use rear-side facing camera(s) and/or RADAR sensor(s) <b>760</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component.</p><p id="p-0167" num="0162">RCTW systems may provide visual, audible, and/or tactile notification when an object is detected outside the rear-camera range when the vehicle <b>700</b> is backing up. Some RCTW systems include AEB to ensure that the vehicle brakes are applied to avoid a crash. RCTW systems may use one or more rear-facing RADAR sensor(s) <b>760</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component.</p><p id="p-0168" num="0163">Conventional ADAS systems may be prone to false positive results which may be annoying and distracting to a driver, but typically are not catastrophic, because the ADAS systems alert the driver and allow the driver to decide whether a safety condition truly exists and act accordingly. However, in an autonomous vehicle <b>700</b>, the vehicle <b>700</b> itself must, in the case of conflicting results, decide whether to heed the result from a primary computer or a secondary computer (e.g., a first controller <b>736</b> or a second controller <b>736</b>). For example, in some embodiments, the ADAS system <b>738</b> may be a backup and/or secondary computer for providing perception information to a backup computer rationality module. The backup computer rationality monitor may run a redundant diverse software on hardware components to detect faults in perception and dynamic driving tasks. Outputs from the ADAS system <b>738</b> may be provided to a supervisory MCU. If outputs from the primary computer and the secondary computer conflict, the supervisory MCU must determine how to reconcile the conflict to ensure safe operation.</p><p id="p-0169" num="0164">In some examples, the primary computer may be configured to provide the supervisory MCU with a confidence score, indicating the primary computer's confidence in the chosen result. If the confidence score exceeds a threshold, the supervisory MCU may follow the primary computer's direction, regardless of whether the secondary computer provides a conflicting or inconsistent result. Where the confidence score does not meet the threshold, and where the primary and secondary computer indicate different results (e.g., the conflict), the supervisory MCU may arbitrate between the computers to determine the appropriate outcome.</p><p id="p-0170" num="0165">The supervisory MCU may be configured to run a neural network(s) that is trained and configured to determine, based on outputs from the primary computer and the secondary computer, conditions under which the secondary computer provides false alarms. Thus, the neural network(s) in the supervisory MCU may learn when the secondary computer's output may be trusted, and when it cannot. For example, when the secondary computer is a RADAR-based FCW system, a neural network(s) in the supervisory MCU may learn when the FCW system is identifying metallic objects that are not, in fact, hazards, such as a drainage grate or manhole cover that triggers an alarm. Similarly, when the secondary computer is a camera-based LDW system, a neural network in the supervisory MCU may learn to override the LDW when bicyclists or pedestrians are present and a lane departure is, in fact, the safest maneuver. In embodiments that include a neural network(s) running on the supervisory MCU, the supervisory MCU may include at least one of a DLA or GPU suitable for running the neural network(s) with associated memory. In preferred embodiments, the supervisory MCU may comprise and/or be included as a component of the SoC(s) <b>704</b>.</p><p id="p-0171" num="0166">In other examples, ADAS system <b>738</b> may include a secondary computer that performs ADAS functionality using traditional rules of computer vision. As such, the secondary computer may use classic computer vision rules (if-then), and the presence of a neural network(s) in the supervisory MCU may improve reliability, safety and performance. For example, the diverse implementation and intentional non-identity makes the overall system more fault-tolerant, especially to faults caused by software (or software-hardware interface) functionality. For example, if there is a software bug or error in the software running on the primary computer, and the non-identical software code running on the secondary computer provides the same overall result, the supervisory MCU may have greater confidence that the overall result is correct, and the bug in software or hardware on primary computer is not causing material error.</p><p id="p-0172" num="0167">In some examples, the output of the ADAS system <b>738</b> may be fed into the primary computer's perception block and/or the primary computer's dynamic driving task block. For example, if the ADAS system <b>738</b> indicates a forward crash warning due to an object immediately ahead, the perception block may use this information when identifying objects. In other examples, the secondary computer may have its own neural network which is trained and thus reduces the risk of false positives, as described herein.</p><p id="p-0173" num="0168">The vehicle <b>700</b> may further include the infotainment SoC <b>730</b> (e.g., an in-vehicle infotainment system (IVI)). Although illustrated and described as a SoC, the infotainment system may not be a SoC, and may include two or more discrete components. The infotainment SoC <b>730</b> may include a combination of hardware and software that may be used to provide audio (e.g., music, a personal digital assistant, navigational instructions, news, radio, etc.), video (e.g., TV, movies, streaming, etc.), phone (e.g., hands-free calling), network connectivity (e.g., LTE, Wi-Fi, etc.), and/or information services (e.g., navigation systems, rear-parking assistance, a radio data system, vehicle related information such as fuel level, total distance covered, brake fuel level, oil level, door open/close, air filter information, etc.) to the vehicle <b>700</b>. For example, the infotainment SoC <b>730</b> may radios, disk players, navigation systems, video players, USB and Bluetooth connectivity, carputers, in-car entertainment, Wi-Fi, steering wheel audio controls, hands free voice control, a heads-up display (HUD), an HMI display <b>734</b>, a telematics device, a control panel (e.g., for controlling and/or interacting with various components, features, and/or systems), and/or other components. The infotainment SoC <b>730</b> may further be used to provide information (e.g., visual and/or audible) to a user(s) of the vehicle, such as information from the ADAS system <b>738</b>, autonomous driving information such as planned vehicle maneuvers, trajectories, surrounding environment information (e.g., intersection information, vehicle information, road information, etc.), and/or other information.</p><p id="p-0174" num="0169">The infotainment SoC <b>730</b> may include GPU functionality. The infotainment SoC <b>730</b> may communicate over the bus <b>702</b> (e.g., CAN bus, Ethernet, etc.) with other devices, systems, and/or components of the vehicle <b>700</b>. In some examples, the infotainment SoC <b>730</b> may be coupled to a supervisory MCU such that the GPU of the infotainment system may perform some self-driving functions in the event that the primary controller(s) <b>736</b> (e.g., the primary and/or backup computers of the vehicle <b>700</b>) fail. In such an example, the infotainment SoC <b>730</b> may put the vehicle <b>700</b> into a chauffeur to safe stop mode, as described herein.</p><p id="p-0175" num="0170">The vehicle <b>700</b> may further include an instrument cluster <b>732</b> (e.g., a digital dash, an electronic instrument cluster, a digital instrument panel, etc.). The instrument cluster <b>732</b> may include a controller and/or supercomputer (e.g., a discrete controller or supercomputer). The instrument cluster <b>732</b> may include a set of instrumentation such as a speedometer, fuel level, oil pressure, tachometer, odometer, turn indicators, gearshift position indicator, seat belt warning light(s), parking-brake warning light(s), engine-malfunction light(s), airbag (SRS) system information, lighting controls, safety system controls, navigation information, etc. In some examples, information may be displayed and/or shared among the infotainment SoC <b>730</b> and the instrument cluster <b>732</b>. In other words, the instrument cluster <b>732</b> may be included as part of the infotainment SoC <b>730</b>, or vice versa.</p><p id="p-0176" num="0171"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> is a system diagram for communication between cloud-based server(s) and the example autonomous vehicle <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, in accordance with some embodiments of the present disclosure. The system <b>776</b> may include server(s) <b>778</b>, network(s) <b>790</b>, and vehicles, including the vehicle <b>700</b>. The server(s) <b>778</b> may include a plurality of GPUs <b>784</b>(A)-<b>784</b>(H) (collectively referred to herein as GPUs <b>784</b>), PCIe switches <b>782</b>(A)-<b>782</b>(H) (collectively referred to herein as PCIe switches <b>782</b>), and/or CPUs <b>780</b>(A)-<b>780</b>(B) (collectively referred to herein as CPUs <b>780</b>). The GPUs <b>784</b>, the CPUs <b>780</b>, and the PCIe switches may be interconnected with high-speed interconnects such as, for example and without limitation, NVLink interfaces <b>788</b> developed by NVIDIA and/or PCIe connections <b>786</b>. In some examples, the GPUs <b>784</b> are connected via NVLink and/or NVSwitch SoC and the GPUs <b>784</b> and the PCIe switches <b>782</b> are connected via PCIe interconnects. Although eight GPUs <b>784</b>, two CPUs <b>780</b>, and two PCIe switches are illustrated, this is not intended to be limiting. Depending on the embodiment, each of the server(s) <b>778</b> may include any number of GPUs <b>784</b>, CPUs <b>780</b>, and/or PCIe switches. For example, the server(s) <b>778</b> may each include eight, sixteen, thirty-two, and/or more GPUs <b>784</b>.</p><p id="p-0177" num="0172">The server(s) <b>778</b> may receive, over the network(s) <b>790</b> and from the vehicles, image data representative of images showing unexpected or changed road conditions, such as recently commenced road-work. The server(s) <b>778</b> may transmit, over the network(s) <b>790</b> and to the vehicles, neural networks <b>792</b>, updated neural networks <b>792</b>, and/or map information <b>794</b>, including information regarding traffic and road conditions. The updates to the map information <b>794</b> may include updates for the HD map <b>722</b>, such as information regarding construction sites, potholes, detours, flooding, and/or other obstructions. In some examples, the neural networks <b>792</b>, the updated neural networks <b>792</b>, and/or the map information <b>794</b> may have resulted from new training and/or experiences represented in data received from any number of vehicles in the environment, and/or based on training performed at a datacenter (e.g., using the server(s) <b>778</b> and/or other servers).</p><p id="p-0178" num="0173">The server(s) <b>778</b> may be used to train machine learning models (e.g., neural networks) based on training data. The training data may be generated by the vehicles, and/or may be generated in a simulation (e.g., using a game engine). In some examples, the training data is tagged (e.g., where the neural network benefits from supervised learning) and/or undergoes other pre-processing, while in other examples the training data is not tagged and/or pre-processed (e.g., where the neural network does not require supervised learning). Once the machine learning models are trained, the machine learning models may be used by the vehicles (e.g., transmitted to the vehicles over the network(s) <b>790</b>, and/or the machine learning models may be used by the server(s) <b>778</b> to remotely monitor the vehicles.</p><p id="p-0179" num="0174">In some examples, the server(s) <b>778</b> may receive data from the vehicles and apply the data to up-to-date real-time neural networks for real-time intelligent inferencing. The server(s) <b>778</b> may include deep-learning supercomputers and/or dedicated AI computers powered by GPU(s) <b>784</b>, such as a DGX and DGX Station machines developed by NVIDIA. However, in some examples, the server(s) <b>778</b> may include deep learning infrastructure that use only CPU-powered datacenters.</p><p id="p-0180" num="0175">The deep-learning infrastructure of the server(s) <b>778</b> may be capable of fast, real-time inferencing, and may use that capability to evaluate and verify the health of the processors, software, and/or associated hardware in the vehicle <b>700</b>. For example, the deep-learning infrastructure may receive periodic updates from the vehicle <b>700</b>, such as a sequence of images and/or objects that the vehicle <b>700</b> has located in that sequence of images (e.g., via computer vision and/or other machine learning object classification techniques). The deep-learning infrastructure may run its own neural network to identify the objects and compare them with the objects identified by the vehicle <b>700</b> and, if the results do not match and the infrastructure concludes that the AI in the vehicle <b>700</b> is malfunctioning, the server(s) <b>778</b> may transmit a signal to the vehicle <b>700</b> instructing a fail-safe computer of the vehicle <b>700</b> to assume control, notify the passengers, and complete a safe parking maneuver.</p><p id="p-0181" num="0176">For inferencing, the server(s) <b>778</b> may include the GPU(s) <b>784</b> and one or more programmable inference accelerators (e.g., NVIDIA's TensorRT). The combination of GPU-powered servers and inference acceleration may make real-time responsiveness possible. In other examples, such as where performance is less critical, servers powered by CPUs, FPGAs, and other processors may be used for inferencing.</p><p id="p-0182" num="0177">Example Computing Device</p><p id="p-0183" num="0178"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of an example computing device <b>800</b> suitable for use in implementing some embodiments of the present disclosure. Computing device <b>800</b> may include a bus <b>802</b> that directly or indirectly couples the following devices: memory <b>804</b>, one or more central processing units (CPUs) <b>806</b>, one or more graphics processing units (GPUs) <b>808</b>, a communication interface <b>810</b>, input/output (I/O) ports <b>812</b>, input/output components <b>814</b>, a power supply <b>816</b>, and one or more presentation components <b>818</b> (e.g., display(s)).</p><p id="p-0184" num="0179">Although the various blocks of <figref idref="DRAWINGS">FIG. <b>8</b></figref> are shown as connected via the bus <b>802</b> with lines, this is not intended to be limiting and is for clarity only. For example, in some embodiments, a presentation component <b>818</b>, such as a display device, may be considered an I/O component <b>814</b> (e.g., if the display is a touch screen). As another example, the CPUs <b>806</b> and/or GPUs <b>808</b> may include memory (e.g., the memory <b>804</b> may be representative of a storage device in addition to the memory of the GPUs <b>808</b>, the CPUs <b>806</b>, and/or other components). In other words, the computing device of <figref idref="DRAWINGS">FIG. <b>8</b></figref> is merely illustrative. Distinction is not made between such categories as &#x201c;workstation,&#x201d; &#x201c;server,&#x201d; &#x201c;laptop,&#x201d; &#x201c;desktop,&#x201d; &#x201c;tablet,&#x201d; &#x201c;client device,&#x201d; &#x201c;mobile device,&#x201d; &#x201c;hand-held device,&#x201d; &#x201c;game console,&#x201d; &#x201c;electronic control unit (ECU),&#x201d; &#x201c;virtual reality system,&#x201d; and/or other device or system types, as all are contemplated within the scope of the computing device of <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0185" num="0180">The bus <b>802</b> may represent one or more busses, such as an address bus, a data bus, a control bus, or a combination thereof. The bus <b>802</b> may include one or more bus types, such as an industry standard architecture (ISA) bus, an extended industry standard architecture (EISA) bus, a video electronics standards association (VESA) bus, a peripheral component interconnect (PCI) bus, a peripheral component interconnect express (PCIe) bus, and/or another type of bus.</p><p id="p-0186" num="0181">The memory <b>804</b> may include any of a variety of computer-readable media. The computer-readable media may be any available media that may be accessed by the computing device <b>800</b>. The computer-readable media may include both volatile and nonvolatile media, and removable and non-removable media. By way of example, and not limitation, the computer-readable media may comprise computer-storage media and communication media.</p><p id="p-0187" num="0182">The computer-storage media may include both volatile and nonvolatile media and/or removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, and/or other data types. For example, the memory <b>804</b> may store computer-readable instructions (e.g., that represent a program(s) and/or a program element(s), such as an operating system. Computer-storage media may include, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which may be used to store the desired information and which may be accessed by computing device <b>800</b>. As used herein, computer storage media does not comprise signals per se.</p><p id="p-0188" num="0183">The communication media may embody computer-readable instructions, data structures, program modules, and/or other data types in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; may refer to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, the communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.</p><p id="p-0189" num="0184">The CPU(s) <b>806</b> may be configured to execute the computer-readable instructions to control one or more components of the computing device <b>800</b> to perform one or more of the methods and/or processes described herein. The CPU(s) <b>806</b> may each include one or more cores (e.g., one, two, four, eight, twenty-eight, seventy-two, etc.) that are capable of handling a multitude of software threads simultaneously. The CPU(s) <b>806</b> may include any type of processor, and may include different types of processors depending on the type of computing device <b>800</b> implemented (e.g., processors with fewer cores for mobile devices and processors with more cores for servers). For example, depending on the type of computing device <b>800</b>, the processor may be an ARM processor implemented using Reduced Instruction Set Computing (RISC) or an x86 processor implemented using Complex Instruction Set Computing (CISC). The computing device <b>800</b> may include one or more CPUs <b>806</b> in addition to one or more microprocessors or supplementary co-processors, such as math co-processors.</p><p id="p-0190" num="0185">The GPU(s) <b>808</b> may be used by the computing device <b>800</b> to render graphics (e.g., 3D graphics). The GPU(s) <b>808</b> may include hundreds or thousands of cores that are capable of handling hundreds or thousands of software threads simultaneously. The GPU(s) <b>808</b> may generate pixel data for output images in response to rendering commands (e.g., rendering commands from the CPU(s) <b>806</b> received via a host interface). The GPU(s) <b>808</b> may include graphics memory, such as display memory, for storing pixel data. The display memory may be included as part of the memory <b>804</b>. The GPU(s) <b>708</b> may include two or more GPUs operating in parallel (e.g., via a link). When combined together, each GPU <b>808</b> may generate pixel data for different portions of an output image or for different output images (e.g., a first GPU for a first image and a second GPU for a second image). Each GPU may include its own memory, or may share memory with other GPUs.</p><p id="p-0191" num="0186">In examples where the computing device <b>800</b> does not include the GPU(s) <b>808</b>, the CPU(s) <b>806</b> may be used to render graphics.</p><p id="p-0192" num="0187">The communication interface <b>810</b> may include one or more receivers, transmitters, and/or transceivers that enable the computing device <b>700</b> to communicate with other computing devices via an electronic communication network, included wired and/or wireless communications. The communication interface <b>810</b> may include components and functionality to enable communication over any of a number of different networks, such as wireless networks (e.g., Wi-Fi, Z-Wave, Bluetooth, Bluetooth LE, ZigBee, etc.), wired networks (e.g., communicating over Ethernet), low-power wide-area networks (e.g., LoRaWAN, SigFox, etc.), and/or the Internet.</p><p id="p-0193" num="0188">The I/O ports <b>812</b> may enable the computing device <b>800</b> to be logically coupled to other devices including the I/O components <b>814</b>, the presentation component(s) <b>818</b>, and/or other components, some of which may be built in to (e.g., integrated in) the computing device <b>800</b>. Illustrative I/O components <b>814</b> include a microphone, mouse, keyboard, joystick, game pad, game controller, satellite dish, scanner, printer, wireless device, etc. The I/O components <b>814</b> may provide a natural user interface (NUI) that processes air gestures, voice, or other physiological inputs generated by a user. In some instances, inputs may be transmitted to an appropriate network element for further processing. An NUI may implement any combination of speech recognition, stylus recognition, facial recognition, biometric recognition, gesture recognition both on screen and adjacent to the screen, air gestures, head and eye tracking, and touch recognition (as described in more detail below) associated with a display of the computing device <b>800</b>. The computing device <b>800</b> may be include depth cameras, such as stereoscopic camera systems, infrared camera systems, RGB camera systems, touchscreen technology, and combinations of these, for gesture detection and recognition. Additionally, the computing device <b>800</b> may include accelerometers or gyroscopes (e.g., as part of an inertia measurement unit (IMU)) that enable detection of motion. In some examples, the output of the accelerometers or gyroscopes may be used by the computing device <b>800</b> to render immersive augmented reality or virtual reality.</p><p id="p-0194" num="0189">The power supply <b>816</b> may include a hard-wired power supply, a battery power supply, or a combination thereof. The power supply <b>816</b> may provide power to the computing device <b>800</b> to enable the components of the computing device <b>800</b> to operate.</p><p id="p-0195" num="0190">The presentation component(s) <b>818</b> may include a display (e.g., a monitor, a touch screen, a television screen, a heads-up-display (HUD), other display types, or a combination thereof), speakers, and/or other presentation components. The presentation component(s) <b>818</b> may receive data from other components (e.g., the GPU(s) <b>808</b>, the CPU(s) <b>806</b>, etc.), and output the data (e.g., as an image, video, sound, etc.).</p><p id="p-0196" num="0191">The disclosure may be described in the general context of computer code or machine-useable instructions, including computer-executable instructions such as program modules, being executed by a computer or other machine, such as a personal data assistant or other handheld device. Generally, program modules including routines, programs, objects, components, data structures, etc., refer to code that perform particular tasks or implement particular abstract data types. The disclosure may be practiced in a variety of system configurations, including hand-held devices, consumer electronics, general-purpose computers, more specialty computing devices, etc. The disclosure may also be practiced in distributed computing environments where tasks are performed by remote-processing devices that are linked through a communications network.</p><p id="p-0197" num="0192">As used herein, a recitation of &#x201c;and/or&#x201d; with respect to two or more elements should be interpreted to mean only one element, or a combination of elements. For example, &#x201c;element A, element B, and/or element C&#x201d; may include only element A, only element B, only element C, element A and element B, element A and element C, element B and element C, or elements A, B, and C. In addition, &#x201c;at least one of element A or element B&#x201d; may include at least one of element A, at least one of element B, or at least one of element A and at least one of element B. Further, &#x201c;at least one of element A and element B&#x201d; may include at least one of element A, at least one of element B, or at least one of element A and at least one of element B.</p><p id="p-0198" num="0193">The subject matter of the present disclosure is described with specificity herein to meet statutory requirements. However, the description itself is not intended to limit the scope of this disclosure. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different steps or combinations of steps similar to the ones described in this document, in conjunction with other present or future technologies. Moreover, although the terms &#x201c;step&#x201d; and/or &#x201c;block&#x201d; may be used herein to connote different elements of methods employed, the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>determining, using a first source and based at least on first sensor data, a first line representation;</claim-text><claim-text>determining, using a second source and based at least on second sensor data, a second line representation;</claim-text><claim-text>generating, based at least on the first line representation and the second line representation, a third line representation; and</claim-text><claim-text>performing, based at least on the third line representation and a confidence associated with the third line representation, one or more operations associated with a machine.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining that the first line representation corresponds to the second line representation,</claim-text><claim-text>wherein the generating the third line representation is further based at least on the first line representation corresponding to the second line representation.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the determining that the first line representation corresponds to the second line representation is based at least on one or more of:<claim-text>determining that the first line representation and the second line representation are associated with a same classification; or</claim-text><claim-text>determining that a distance between the first line representation and the second line representation is within a threshold distance.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the generating the third line representation comprises:<claim-text>determining one or more first polylines associated with the first line representation and one or more second polylines associated with the second line representation;</claim-text><claim-text>determining one or more distances between the one or more first polylines and the one or more second polylines;</claim-text><claim-text>clustering, based at least on the one or more distances, the one or more first polylines with the one or more second polylines; and</claim-text><claim-text>generating, based at least on the clustering, the third line representation using the one or more first polylines and the one or more second polylines.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least one of:<claim-text>the determining the first line representation comprises converting a first output of the first source to the first line representation, the first line representation being represented in a coordinate system; or</claim-text><claim-text>the determining the second line representation comprises converting a second output of the second source to the second line representation, the second line representation being represented in the coordinate system.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the first source comprises at least one of a first machine learning model, a first neural network, a first map, or a first object trace; and</claim-text><claim-text>the second source comprises at least one of a second machine learning model, a second neural network, a second map, or a second object trace.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining the confidence associated with the third line representation, wherein the confidence is determined for at least a portion of the third line representation.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system comprising:<claim-text>one or more processing units to:<claim-text>obtain a first lane graph associated with first sensor data;</claim-text><claim-text>obtain a second lane graph associated with second sensor data;</claim-text><claim-text>determine that a first line from the first lane graph corresponds to a second line from the second lane graph;</claim-text><claim-text>determine a third line using the first line and the second line; and</claim-text><claim-text>generate a third lane graph that includes at least the third line.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the determination that the first line from the first lane graph corresponds to the second line from the second lane graph comprises determining that the first line and the second line are associated with a same indicator.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the determination that the first line from the first lane graph corresponds to the second line from the second lane graph comprises:<claim-text>determining a distance between the first line and the second line; and</claim-text><claim-text>determining that the distance is within a threshold distance.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processing units are further to:<claim-text>obtain a fourth lane graph associated with third sensor data;</claim-text><claim-text>determine a first distance between the first line and the second line;</claim-text><claim-text>determine a second distance between the first line and a fourth line from the fourth lane graph; and</claim-text><claim-text>determine that the first distance is less than the second distance,</claim-text><claim-text>wherein the determination that the first line from the first lane graph corresponds to the second line from the second lane graph is based at least on the first distance being less than the second distance.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processing units are further to:<claim-text>determine a distance between the first line from the first lane graph and the second line from the second lane graph; and</claim-text><claim-text>determine, based at least on the distance, a confidence associated with at least one of the third lane graph or the third line.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processing units are further to:<claim-text>determine, using a first source and based at least on the first sensor data, the first lane graph; and</claim-text><claim-text>determine, using a second source and based at least on the second sensor data, the second lane graph.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein:<claim-text>the first source comprises at least one of a first machine learning model, a first neural network, a first map, or a first object trace; and</claim-text><claim-text>the second source comprises at least one of a second machine learning model, a second neural network, a second map, or a second object trace.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more processing units are further to perform, based at least on the third lane graph, one or more operations associated with a machine.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the system is comprised in at least one of:<claim-text>a control system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a perception system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a system for performing simulation operations;</claim-text><claim-text>a system for performing real-time streaming;</claim-text><claim-text>a system for generating or presenting virtual reality (VR) content;</claim-text><claim-text>a system for generating or presenting augmented reality (AR) content;</claim-text><claim-text>a system for performing deep learning operations;</claim-text><claim-text>a system implemented using an edge device;</claim-text><claim-text>a system implemented using a robot;</claim-text><claim-text>a system incorporating one or more virtual machines (VMs);</claim-text><claim-text>a system implemented at least partially in a data center; or</claim-text><claim-text>a system implemented at least partially using cloud computing resources.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A processor comprising:<claim-text>one or more processing units to generate, based at least on one or more first indicators associated with one or more first lines of a first lane graph and one or more second indicators associated with one or more second lines of a second lane graph, a third lane graph.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The processor of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the one or more processing units are further to:<claim-text>determine, based at least on the one or more first indicators and the one or more second indicators, that the one or more first lines of the first lane graph correspond to the one or more second lines of the second lane graph,</claim-text><claim-text>wherein the third lane graph is generated based at least on the one or more first lines of the first lane graph corresponding to the one or more second lines of the second lane graph.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The processor of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the third lane graph is generated, at least, by:<claim-text>determining one or more distances between the one or more first lines and the one or more second lines; and</claim-text><claim-text>generating, based at least on the one or more distances, one or more third lines for the third lane graph.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The processor of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processor is comprised in at least one of:<claim-text>a control system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a perception system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a system for performing simulation operations;</claim-text><claim-text>a system for performing real-time streaming;</claim-text><claim-text>a system for generating or presenting virtual reality (VR) content;</claim-text><claim-text>a system for generating or presenting augmented reality (AR) content;</claim-text><claim-text>a system for performing deep learning operations;</claim-text><claim-text>a system implemented using an edge device;</claim-text><claim-text>a system implemented using a robot;</claim-text><claim-text>a system incorporating one or more virtual machines (VMs);</claim-text><claim-text>a system implemented at least partially in a data center; or</claim-text><claim-text>a system implemented at least partially using cloud computing resources.</claim-text></claim-text></claim></claims></us-patent-application>