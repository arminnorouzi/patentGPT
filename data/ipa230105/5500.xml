<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005501A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005501</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17826017</doc-number><date>20220526</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>B</subclass><main-group>5</main-group><subgroup>55</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>B</subclass><main-group>5</main-group><subgroup>5508</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>B</subclass><main-group>5</main-group><subgroup>5534</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>6256</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DATA TAPE QUALITY ANALYSIS</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217032</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217036</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217040</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><orgname>Oracle International Corporation</orgname><address><city>Redwood Shores</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wyman</last-name><first-name>Robert Olin</first-name><address><city>Berthoud</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Abbott, JR.</last-name><first-name>Frank Patrick</first-name><address><city>Brighton</city><state>CO</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Oracle International Corporation</orgname><role>02</role><address><city>Redwood Shores</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Techniques for determining a data tape read quality value are disclosed. A data tape system generates a value representing a quality of a data tape based on attributes of the data tape. The system calculates the data quality value using an algorithm based on: (a) a particular data tape error correction value, (b) data tape length value representing a length of data tape traversed during data-processing operations, and (c) a scaling factor. The scaling factor is based on a relationship between the particular data tape error correction value and a rate of degradation of the data tape. The scaling factor may be generated by applying a trained machine learning model to attributes of a data tape. The model generates a scaling factor for a particular data tape based on the attributes of the particular data tape.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="183.13mm" wi="158.75mm" file="US20230005501A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="234.95mm" wi="192.02mm" file="US20230005501A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="197.36mm" wi="108.71mm" file="US20230005501A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="177.88mm" wi="135.13mm" file="US20230005501A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="232.33mm" wi="168.40mm" file="US20230005501A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="252.73mm" wi="188.98mm" file="US20230005501A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">BENEFIT CLAIMS; RELATED APPLICATIONS; INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Applications: 63/217,032, filed Jun. 30, 2021; 63/217,036, filed Jun. 30, 2021; and 63/217,040, filed Jun. 30, 2021, each of which are hereby incorporated by reference in their entirety.</p><p id="p-0003" num="0002">The Applicant hereby rescinds any disclaimer of claim scope in the parent application(s) or the prosecution history thereof and advises the USPTO that the claims in this application may be broader than any claim in the parent application(s).</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0004" num="0003">The present disclosure relates to data tape quality analysis. In particular, the present disclosure relates to tuning a data tape quality algorithm based on measured characteristics of the data tape.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0005" num="0004">Magnetic tape storage provides cost and storage density advantages over many other data storage technologies. Data centers often utilize both tape storage and disk storage to complement each other. Tape storage is often used for backup and archival data storage. Disk storage is often used for more frequently accessed data storage.</p><p id="p-0006" num="0005">Magnetic tape data storage (&#x201c;data tape&#x201d;) uses digital recording on magnetic tape to store digital information. Tapes are packed in cartridges or cassettes. A tape drive performs read/write operations from/to the tape. A robotically-accessed tape library houses data tape cartridges to provide large quantities of data storage.</p><p id="p-0007" num="0006">Over time, data tape quality may degrade. Degradation may be a result of physical wear in the data tape or data tape cartridge. Alternatively, the degradation may be a result of media errors, or errors in the data stored on the data tape. Data tape libraries employ monitoring systems to detect errors in read/write operations.</p><p id="p-0008" num="0007">The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">The embodiments are illustrated by way of example and not by way of limitation in the figures of the accompanying drawings. It should be noted that references to &#x201c;an&#x201d; or &#x201c;one&#x201d; embodiment in this disclosure are not necessarily to the same embodiment, and they mean at least one. In the drawings:</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system in accordance with one or more embodiments;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example set of operations for generating a data tape read quality value in accordance with one or more embodiments;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example set of operations for training a machine learning model in accordance with one or more embodiments;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example embodiment of a system for generating a data tape read quality value; and</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram that illustrates a computer system in accordance with one or more embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding. One or more embodiments may be practiced without these specific details. Features described in one embodiment may be combined with features described in a different embodiment. In some examples, well-known structures and devices are described with reference to a block diagram form in order to avoid unnecessarily obscuring the present invention.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0015">1. GENERAL OVERVIEW</li>        <li id="ul0002-0002" num="0016">2. SYSTEM ARCHITECTURE</li>        <li id="ul0002-0003" num="0017">3. GENERATING DATA TAPE READ QUALITY VALUE USING DATA TAPE CHARACTERISTICS</li>        <li id="ul0002-0004" num="0018">4. TRAINING A MACHINE LEARNING MODEL</li>        <li id="ul0002-0005" num="0019">5. EXAMPLE EMBODIMENT</li>        <li id="ul0002-0006" num="0020">6. COMPUTER NETWORKS AND CLOUD NETWORKS</li>        <li id="ul0002-0007" num="0021">7. MISCELLANEOUS; EXTENSIONS</li>        <li id="ul0002-0008" num="0022">8. HARDWARE OVERVIEW</li>    </ul>    </li></ul></p><heading id="h-0006" level="1">1. General Overview</heading><p id="p-0016" num="0023">Data tape libraries monitor operations of the data tapes to identify errors and failures in read/write operations from data tapes/to data tapes in the library. One or more embodiments include a data tape system that generates a value representing a quality of a data tape based on attributes of the data tape. For example, the system may calculate a data quality value using an algorithm based on: (a) a particular data tape error correction value, (b) data tape length value representing a length of data tape traversed during data-processing operations, and (c) a scaling factor. The scaling factor is based on a relationship between the particular data tape error correction value and a rate of degradation of the data tape. The scaling factor may be generated by applying a trained machine learning model to attributes of a data tape. The model generates a scaling factor for a particular data tape based on the attributes of the particular data tape. The scaling factor may be set by either a preproduction process (default scaling factor) or later as a sensitivity adjustment by a user or service provider. The scaling factor may also be set by an expert system via machine learning. The scaling factor may be derived from a set of exchanges between data tapes and media drives. In one embodiment, attributes of data tapes used to define a scaling factor for a particular data tape or set of data tapes is collected at the end of an exchange between a data tape and a media drive.</p><p id="p-0017" num="0024">In one or more embodiments, a machine learning model is used to generate an expert system to identify a particular scaling factor for a data tape having a particular set of attributes. For example, a machine learning engine may be provided with a set of historical data tape attributes, such as data cartridge model, tape material, tape thickness, data recording format, environmental temperature, and environmental humidity. The machine learning engine may further be provided with historical data tape degradation information, including the frequency of a particular read error over time. The machine learning engine may generate data sets including data tape attributes and data tape degradation information. The machine learning engine trains a machine learning model to identify, for the different sets and variations of data tape attributes, a scaling factor corresponding to a rate at which the data tape degrades based on the frequency of the particular read error. The relationship between the sets data tape attributes and the scaling factors may be stored as an expert system in one or more data tables. Alternatively, the relationship between the sets of data tape attributes and the scaling factors may be embodied in a machine learning model by a machine learning algorithm. The machine learning model may be applied to a target set of data tape attributes in real-time to identify a scaling factor for the target set of data tape attributes. The system may identify a scaling factor for a particular data tape used in an exchange operation with a media drive.</p><p id="p-0018" num="0025">In one or more embodiments, the system takes a particular action based on the calculated data tape read quality value. For example, the system may remove the tape from use, generate an alert for a user indicating a status of the tape, or tag the tape for another data tape quality measurement at a later time.</p><p id="p-0019" num="0026">In one or more embodiments, the system calculates the data tape read quality value based on an algorithm that includes a degradation coefficient. The algorithm may raise a product of (a) the data tape error correction value and (b) the value representing the amount data processed to an exponent value equal to the scaling factor. The degradation coefficient may be applied to the product of the data tape error correction value and the value representing the amount of data processed to indicate a weight applied to the product to generate the data tape read quality value. The system may tune the degradation coefficient based on user input. Alternatively, the system may tune the degradation coefficient based on measuring a similarity of the particular data tape with other, previously measured, data tapes.</p><p id="p-0020" num="0027">One or more embodiments described in this Specification and/or recited in the claims may not be included in this General Overview section.</p><heading id="h-0007" level="1">2. System Architecture</heading><p id="p-0021" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system <b>100</b> in accordance with one or more embodiments. As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, system <b>100</b> includes a data tape library <b>110</b>, a data tape control engine <b>120</b>, a user interface <b>130</b>, a data tape analysis and action recommendation engine <b>140</b>, and a data repository <b>160</b>.</p><p id="p-0022" num="0029">The data tape library <b>110</b> includes data tape cartridges <b>111</b> storing data tape <b>112</b>. A library controller <b>114</b> controls physical access to the data tape cartridges <b>111</b>. For example, the library controller <b>114</b> may control robot arms that locate a particular data tape cartridge <b>111</b> and provide the data tape cartridge <b>111</b> to a media drive <b>113</b> to read from/write to the data tape <b>112</b>. The library controller <b>114</b> transmits read/write data to and from the data tape <b>112</b>. In addition, the library controller <b>114</b> transmits metadata, including notifications and alerts, to the data tape control engine <b>120</b>. The data tape control engine <b>120</b> controls read/write operations from/to the data tape library <b>110</b>. The data tape control engine <b>120</b> includes a data tape monitor <b>121</b>. As the data tape control engine <b>120</b> executes read/write operations, the data tape monitor <b>121</b> receives notifications and alerts associated with the success/failure of the read/write operations. Examples of alerts include hard error alerts, advisory alerts, and informational alerts. A hard error alert may be any error that prevents read/write operations, such as a total loss of the data tape, mechanical malfunction, media corruption, or extreme wear of the data tape.</p><p id="p-0023" num="0030">In one embodiment, hard error alerts are generated by an application or program running on the data tape library. The hard error alert may include a recommendation that the data tape should not be used to store data. The hard error alert may also include a notice that the data tape is unusable, and a read/write operation could not be carried out. An advisory alert may indicate that an error occurred during a read/write operation, but that the operation was able to be performed successfully. The advisory alert may also provide a notice that information included in the data tape should be moved to another data tape in the near future. An informational-type alert occurs when a read/write operation occurs without any errors. For example, the library controller <b>114</b> may be configured to generate an informational alert when it determines a particular distance of data tape has been read. For example, if an amount of data written to/read from a data tape corresponds to a full wrap (traversing the tape from one end to the other), the library controller <b>114</b> may generate an informational-type alert. Informational alerts may also indicate a type of data tape cartridge <b>111</b> being read from/written to, that a particular tape has been in use for a particular amount of time, or any other information that does not necessarily include a tape failure or data read/write error.</p><p id="p-0024" num="0031">In addition to generating commands to read from/write to a data tape <b>112</b> in the data tape library <b>110</b>, the data tape control engine <b>120</b> may also control operating modes and monitoring commands of the data tape library <b>110</b>. For example, in a data tape analysis operating mode, the data tape control engine <b>120</b> may issue calibration commands, qualification commands, data tape quality measurement commands, or media quality commands. For example, an operator may access a graphical user interface (GUI) displayed by the user interface <b>130</b> to request a media validation of a particular data tape <b>112</b> in the data tape library <b>110</b>. In the data tape analysis operating mode, the library controller <b>114</b> may return data about the state of the data tape <b>112</b> included in the media validation request without receiving any write data from the data tape control engine <b>120</b> and without transmitting any read data to the data tape control engine <b>120</b>.</p><p id="p-0025" num="0032">The data tape analysis and action recommendation engine <b>140</b> analyzes data generated by the library controller <b>114</b> and the data tape monitor <b>121</b> of the data tape control engine <b>120</b>. The data tape analysis and action recommendation engine <b>140</b> includes a data tape read quality value generator <b>141</b>, a data tape read quality value tuning engine <b>143</b>, a media drive calibration and qualification engine <b>146</b>, and a data tape media validation engine <b>147</b>.</p><p id="p-0026" num="0033">The data tape read quality value generator <b>141</b> generates a data tape read quality value based on a data tape read quality value algorithm <b>142</b>. The data tape read quality value algorithm <b>142</b> includes values representing (a) a particular data tape error correction value, (b) a particular value representing an amount of read data, and (c) a scaling factor. In one embodiment, the particular data tape error correction value is a filtered &#x201c;total corrected read errors&#x201d; value. The &#x201c;total corrected read errors&#x201d; value represents a type of read error requiring physical rewinding of the data tape to re-read a portion of the data tape that was previously read, but which resulted in an error. Filtering the total corrected read errors value includes omitting from the value the re-reads that are not necessarily the result of read errors. For example, if a tape drive is known to re-read portions of the data tape when first beginning a read operation, the re-read operations at the beginning of the read operation may be omitted from the filtered &#x201c;total corrected read errors&#x201d; value. Otherwise, the total corrected read errors value may be artificially inflated. The system may track an amount to data read from the data tape in read operations and/or written to the data tape in write operations to obtain the value representing an amount of data processed. Alternatively, the system may derive the value representing the amount of data processed by tracking a length of tape read from or written to, and deriving, based on a known amount of data per distance, the amount of data read from/written to the data tape.</p><p id="p-0027" num="0034">The scaling factor is a numerical value which represents a relationship between the data tape error correction value, the value representing the amount of data processed in read/write operations of the data tape, and a degradation level of the data tape. The data tape analysis and recommendation engine <b>140</b> includes a data tape read quality value tuning engine <b>143</b>. The data tape read quality value tuning engine <b>143</b> adjusts the scaling factor for a particular data tape or set of data tapes based on data tape attribute data <b>161</b>. Example data tape attribute data <b>161</b> includes: a type of data tape, a brand of data tape, a material making up the data tape, dimensions of the data tape (such as thickness, width, length), media characteristics (such as compression levels, amount of data stored, number of over-writes on the data tape), and environmental attributes (such as humidity, temperature, light levels, and magnetic field strengths of an environment in which the data tape is stored). For example, for a particular brand of data tape, storage at a higher temperature and humidity may cause the data tape to degrade more rapidly when the data tape is frequently accessed for data re-reads and re-writes. In an embodiment in which a machine learning model generates a scaling factor, the data tape read quality value tuning engine <b>143</b> provides feedback to the machine learning model engine during training of the model. Based on the feedback, the machine learning model engine updates a training data set and re-trains the model.</p><p id="p-0028" num="0035">In one embodiment, the data tape read quality value algorithm <b>142</b> may be represented as:</p><p id="p-0029" num="0036">DTQ=90&#x2212;&#x3b1;*(2*TCREF/WR){circumflex over (&#x2003;)}&#x3b2;, where DTQ is the data tape read quality value, &#x3b1; is a degradation co-efficient, TCREF is a filtered total corrected read error value, WR is a &#x201c;wraps read&#x201d; value, corresponding to the value representing the amount of read data tape, and &#x3b2; is the scaling factor.</p><p id="p-0030" num="0037">In the above equation, the value &#x201c;90&#x201d; defines a range of values for the data tape read quality value. However, embodiments encompass any range of values. The range of potential values for a data tape quality may be set by a user, for example. The degradation coefficient is a value less than 90 that defines how much the &#x201c;errors per distance&#x201d; calculations (raised to the scaling factor) will increase/reduce the data tape read quality value. For example, if the degradation coefficient is set to &#x201c;20,&#x201d; then the final data tape read quality value will be calculated as the &#x201c;errors per distance&#x201d; times <b>20</b>. The degradation coefficient may be set by a user, for example, to cause the data tape read quality values to fall along a desired range of values.</p><p id="p-0031" num="0038">While the above embodiment describes a data tape read quality value based on data read from the data tape, one or more embodiments include generate a data tape quality value that incorporates write quality data for a data tape. For example, the system may identify a ratio of an actual density of recorded data to a maximum recordable density in an error-free scenario. Accordingly, one or more embodiments include generating a data tape quality value based on read/write data of a data tape.</p><p id="p-0032" num="0039">In one embodiment, the data tape analysis and recommendation engine <b>140</b> includes a machine learning engine <b>144</b> for training a machine learning model to generate, for a particular set of data tape attributes, a scaling factor value. For example, the machine learning engine <b>144</b> may generate a training data set from the data tape attribute data <b>161</b> to identify sets of data tape attributes and corresponding scaling factor values. The machine learning model may be trained to identify relationships among different data tape attributes and scaling factor values. In an alternative embodiment, the data tape analysis and recommendation engine <b>140</b> maps a particular data tape attribute or set of attributes to a particular scaling factor using a mapping table <b>145</b>. The mapping table <b>145</b> may include, for example, fields representing ranges of values for data tape attributes and scaling factor values associated with the ranges of values.</p><p id="p-0033" num="0040">The media drive calibration and qualification engine <b>146</b> performs a media drive calibration on a designated media drive <b>113</b> in the data tape library <b>110</b>. For example, a data tape library <b>110</b> may include multiple media drives <b>113</b>. One or more of the media drives may be designated as &#x201c;validation&#x201d; drives. These drives may be calibrated, using a data tape cartridge <b>111</b> having known attributes, to ensure the media drive <b>113</b> designated as a validation drive meets a threshold operation status. In addition, the validation drive may be inaccessible to host applications that read from and write to data tapes <b>112</b> in the data tape library <b>110</b>. Instead, the validation drive may be accessible only by the library controller <b>114</b> for carrying out calibration, qualification (ensuring continued calibration of the media drive), and validation operations. Consequently, when a media validation is requested for a particular data tape <b>112</b>, the library controller <b>114</b> selects, from among the multiple media drives <b>113</b>, the media drive that is calibrated and designated as the validation drive. Since the validation drive has been calibrated, the result of the media validation operation is more likely to accurately reflect a state of the media, and not necessarily a state of the validation drive.</p><p id="p-0034" num="0041">The data tape media validation engine <b>147</b> determines an operating state of a particular data tape <b>112</b> in the data tape library <b>110</b>. The validation operation may be initiated by a user, by a pre-defined schedule, or by any triggering event detected by the library controller <b>114</b> or the data tape monitor <b>121</b>. For example, a data tape control engine <b>120</b> may store a set of rules for determining when a validation is performed. The set of rules may include one rule to perform a validation of the data tape <b>112</b> after a predetermined number of uses of a data tape <b>112</b>, another rule to perform a validation of the data tape <b>112</b> after a predetermined period of time has elapsed, and another rule to perform a validation of the data tape <b>112</b> after a predetermined number of read/write errors is detected when reading from or writing to the data tape <b>112</b>.</p><p id="p-0035" num="0042">In one embodiment, the data tape analysis and recommendation engine <b>140</b> includes a recommendation generator and action initiating engine <b>148</b>. The recommendation generator and action initiating engine <b>148</b> makes action recommendations and initiates system actions for a data tape based on (1) data tape attribute data <b>161</b>, (2) data tape read quality values <b>162</b>, and (3) library metadata messages <b>165</b>. When calibration and/or qualification operations have been performed, the action recommendations and system actions may further be generated/initiated based on media drive calibration values <b>163</b> and media drive qualification values <b>164</b>.</p><p id="p-0036" num="0043">In one embodiment, the recommendation generator and action initiating engine <b>148</b> generates a recommendation or initiates an action based on a trained machine learning model. The machine learning engine <b>144</b> may train a machine learning model to generate, for a particular data tape, an action recommendation. For example, the machine learning engine <b>144</b> may generate a training data set from the data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and library metadata messages <b>165</b> to identify action recommendations associated with particular sets of data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and library metadata messages <b>165</b>. The machine learning model may be trained to identify relationships among different data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and metadata messages <b>165</b> and action recommendations. In addition, the machine learning engine <b>144</b> may train the machine learning model based on data indicating whether a prescribed action resulted in a successful correction of an error or not. For example, the training data set may include the data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and metadata messages <b>165</b>, as well as an indication of the historical action recommended for the set of data tape attributes and an indication of whether the historical recommended action resulted in successful resolution of a detected error.</p><p id="p-0037" num="0044">In an alternative embodiment, the data tape analysis and action recommendation engine <b>140</b> maps a particular set of data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and metadata messages <b>165</b> to a particular action recommendation using a mapping table <b>145</b>. The mapping table <b>145</b> may include, for example, fields representing ranges of values for data tape attributes and scaling factor values associated with the ranges of values.</p><p id="p-0038" num="0045">In one embodiment, the data tape analysis and action recommendation engine <b>140</b> includes a library metadata message analysis engine <b>149</b>. The library metadata message analysis engine <b>149</b> may analyze a library metadata message <b>165</b> and determine whether to bypass a machine learning engine <b>144</b>. For example, if the data tape control engine <b>120</b> controls the data tape media validation engine <b>147</b> to initiate a media validation of a particular data tape <b>112</b>, the library controller <b>114</b> may generate a hard error metadata message. The hard error metadata message may indicate that the selected data tape is no longer usable by host applications for read or write operations. Based on the particular type of library metadata message, the library metadata message analysis engine <b>149</b> may transmit the library metadata message directly to the recommendation generator and action initiating engine <b>148</b> without applying a machine learning algorithm to an input data set including the library metadata message.</p><p id="p-0039" num="0046">In one embodiment, the recommendation generator and action initiating engine <b>148</b> stores one or more tables indicating prescribed recommendations and actions for particular sets of data tape attributes data <b>161</b>, data tape read quality values <b>162</b>, and library metadata messages <b>165</b>. The one or more tables may be generated by a machine learning model trained by the machine learning engine <b>144</b> to function as an expert system. The machine learning engine <b>144</b> may train a machine learning model to analyze historical data including the data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and library metadata messages <b>165</b> associated with previously-encountered or analyzed data tapes. The historical data may also be obtained from additional sources, such as online libraries including historical data tape information. The machine learning engine <b>144</b> trains the machine learning model based on the historical data to generate, for different combinations of input data, corresponding action recommendations. The recommendation generator and action initiating engine <b>148</b> stores the action recommendations in the one or more tables. Upon encountering a particular set of data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, and library metadata messages <b>165</b> resulting from a data tape media validation operation, the recommendation generator and action initiating engine <b>148</b> consults the one or more tables to generate a recommendation or to initiate an action.</p><p id="p-0040" num="0047">In one embodiment, one or more of the library metadata messages <b>165</b> may include a default recommendation. For example, the library controller <b>114</b> may generate a library metadata message indicating that a particular read error occurred and recommending cleaning of a media drive. However, the recommendation generator and action initiating engine <b>148</b> may generate a different recommendation by taking into account not only the library metadata message, but also a data tape read quality value, a data tape media validation value, and a calibration value of a media drive. A machine learning model may determine that, for the particular set of input data cleaning the media drive would not necessarily resolve the error. Instead, the machine learning model may recommend cleaning a data tape.</p><p id="p-0041" num="0048">Examples of recommendations generated by the recommendation generator and action initiating engine <b>148</b> include: (1) use a different media drive for the requested operation, (2) migrate data from the data tape to another data tape, (3) an end-of-life metric has been detected: migrate data to another data tape, (4) data tape quality is less than quality required for the stored media&#x2014;replace the data tape with one of a higher quality grade, (5) wrong type of data tape detected for requested operation&#x2014;change data tape, (6) data drive is incompatible with data tape&#x2014;change to another data drive and repeat operation, (7) data tape read failure&#x2014;migrate data to another data tape and do not use data tape, (8) recommendation not possible&#x2014;type of error unknown, (9) clean media drive, (10) clean data tape, (11) re-run requested operation, (12) data encryption error encountered&#x2014;re-run requested operation.</p><p id="p-0042" num="0049">In one or more embodiments, interface <b>130</b> refers to hardware and/or software configured to facilitate communications between a user and the data tape control engine <b>120</b> and data tape analysis and recommendation engine <b>140</b>. Interface <b>130</b> renders user interface elements and receives input via user interface elements. Examples of interfaces include a graphical user interface (GUI), a command line interface (CLI), a haptic interface, and a voice command interface. Examples of user interface elements include checkboxes, radio buttons, dropdown lists, list boxes, buttons, toggles, text fields, date and time selectors, command lines, sliders, pages, and forms.</p><p id="p-0043" num="0050">In an embodiment, different components of interface <b>130</b> are specified in different languages. The behavior of user interface elements is specified in a dynamic programming language, such as JavaScript. The content of user interface elements is specified in a markup language, such as hypertext markup language (HTML) or XML User Interface Language (XUL). The layout of user interface elements is specified in a style sheet language, such as Cascading Style Sheets (CSS). Alternatively, interface <b>130</b> is specified in one or more other languages, such as Java, C, or C++.</p><p id="p-0044" num="0051">In one or more embodiments, a data repository <b>160</b> is any type of storage unit and/or device (e.g., a file system, database, collection of tables, or any other storage mechanism) for storing data. Further, a data repository <b>160</b> may include multiple different storage units and/or devices. The multiple different storage units and/or devices may or may not be of the same type or located at the same physical site. Further, a data repository <b>160</b> may be implemented or may execute on the same computing system as the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and recommendation engine <b>140</b>. Alternatively, or additionally, a data repository <b>160</b> may be implemented or executed on a computing system separate from the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and recommendation engine <b>140</b>. A data repository <b>104</b> may be communicatively coupled to the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and recommendation engine <b>140</b> via a direct connection or via a network.</p><p id="p-0045" num="0052">Information describing the data tape attribute data <b>161</b>, data tape read quality values <b>162</b>, calibration values <b>163</b>, qualification values <b>164</b>, and library metadata messages <b>165</b> may be implemented across any of components within the system <b>100</b>. However, this information is illustrated within the data repository <b>160</b> for purposes of clarity and explanation.</p><p id="p-0046" num="0053">In one or more embodiments, the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and recommendation engine <b>140</b> refers to hardware and/or software configured to perform operations described herein for managing a data tape library <b>110</b> and analyzing data tapes. Examples of operations for analyzing data tapes of a data tape library are described below with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0047" num="0054">In an embodiment, the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and action recommendation engine <b>140</b> are implemented on one or more digital devices. The term &#x201c;digital device&#x201d; generally refers to any hardware device that includes a processor. A digital device may refer to a physical device executing an application or a virtual machine. Examples of digital devices include a computer, a tablet, a laptop, a desktop, a netbook, a server, a web server, a network policy server, a proxy server, a generic machine, a function-specific hardware device, a hardware router, a hardware switch, a hardware firewall, a hardware firewall, a hardware network address translator (NAT), a hardware load balancer, a mainframe, a television, a content receiver, a set-top box, a printer, a mobile handset, a smartphone, a personal digital assistant (&#x201c;PDA&#x201d;), a wireless receiver and/or transmitter, a base station, a communication management device, a router, a switch, a controller, an access point, and/or a client device.</p><p id="p-0048" num="0055">In one or more embodiments, the system <b>100</b> may include more or fewer components than the components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be local to or remote from each other. The components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented in software and/or hardware. Each component may be distributed over multiple applications and/or machines. Multiple components may be combined into one application and/or machine. Operations described with respect to one component may instead be performed by another component.</p><p id="p-0049" num="0056">Additional embodiments and/or examples relating to computer networks are described below in Section <b>6</b>, titled &#x201c;Computer Networks and Cloud Networks.&#x201d;</p><heading id="h-0008" level="1">3. Generating Data Tape Read Quality Value Based on Data Tape Characteristics</heading><p id="p-0050" num="0057">A system monitors usage of data tapes (Operation <b>202</b>). For example, the system may keep track of a frequency with which data tapes in a data tape library are accessed. The system may track a volume of processed data for each data tape. The system may further track a tape distance of tape that is read from, and/or written to, for each data tape.</p><p id="p-0051" num="0058">The system determines if a threshold data tape attribute has been met (Operation <b>204</b>). For example, the system may determine if a minimum tape read/write distance threshold has been met for a particular data tape. The system may determine that, after twenty read or write operations to a data tape, the amount of read/written data corresponds to the wrap distance of the data tape, or a distance from one end of the data tape to the opposite end. The system may track a distance value by keeping track of the revolutions of the data tape. Alternatively, the system may derive the distance value by keeping track of the amount of data read from/written to a data tape, and calculating the distance value based on the amount of data read/written divided by the amount of potential data storage on the data tape. The system may determine whether the threshold data tape attribute has been met by assigning a particular weight to a read operation versus a write operation. For example, since a read operation may result in less wear on a data tape, the system may apply a greater weight to write or erasure operations than to read operations when determining whether a threshold data tape attribute has been met.</p><p id="p-0052" num="0059">If the system determines that the data tape attribute threshold has been met for a particular data tape, the system obtains or generates a scaling factor value for the particular data tape (Operation <b>206</b>). In one embodiment, the system applies a trained machine learning model to the particular attributes of the particular data tape to generate a particular scaling factor value. In another embodiment, the system identifies a scaling factor value associated with the particular data tape by referring to a previously-generated mapping table. For example, a machine learning model may be used to generate a mapping table that maps scaling factors for twenty different classes of data tapes based on historical attribute data associated with the data tapes. The system may determine the scaling factor for a particular data tape by referring to the mapping table.</p><p id="p-0053" num="0060">For example, the table may be divided into categories based on a number of write operations performed. One category associated with a scaling factor of &#x201c;0.4&#x201d; may include 1,000 write operations and a tape traverse distance of at least 40 meters. Another category associated with a scaling factor of &#x201c;0.6&#x201d; may include 1,500 write operations and the tape traverse distance of at least 40 meters. While a simplified table is described above for purposes of clarity, embodiments encompass tables with additional attributes, including: number of write operations, amount of write data, tape distance associated with amount of write data, number of read operations, amount of read data, tape distance associated with amount of read data, number of erasure operations, amount of data erased, tape distance associated with amount of data erased, age of data tape, data tape type, data tape material, data encoding type on data tape, etc.</p><p id="p-0054" num="0061">The system calculates the data tape read quality value for the data tape (Operation <b>208</b>). The system calculates the data tape read quality value for the data tape based on (a) a particular error correction value for the data tape, (b) a data tape length value representing a length of data tape traversed during data processing operations, and (c) the scaling factor for the data tape. In one embodiment, the system refrains from calculating the data tape read quality value for a particular data tape until the data tape has met a minimum tape read/write distance threshold or other data tape attribute threshold.</p><p id="p-0055" num="0062">In one or more embodiments, the data tape read quality value is calculated after an exchange between a data tape and a media drive is completed. In other words, the system may refrain from collecting data tape attribute data, including a read/write distance traversed, while a data tape is mounted in a media drive.</p><p id="p-0056" num="0063">The system generates an action recommendation for the data tape based on the data tape read quality value (Operation <b>210</b>). For example, the system may generate a notification to an operator to inform the operator of a status of the data tape. Alternatively, or in addition, the system may prevent additional write operations to the data tape based on a highly-degraded state of the data tape. The system may also generate a recommendation to migrate data from the data tape to another data tape immediately, or within a certain period of time.</p><heading id="h-0009" level="1">4. Training a Machine Learning Model</heading><p id="p-0057" num="0064">A system obtains historical data tape attribute data (Operation <b>302</b>). The historical data tape attribute data includes data associated with historical exchanges between data tapes and media drives. For each exchange, the system may identify: (a) a brand of data tape being accessed in a media access operation, (b) particular characteristics of the data tape, such as length, width of tape, tape material, tape thickness, and (c) historical quality information about the data tape. The system may further identify environmental conditions in which the tape is stored, such as temperature, humidity, and electromagnetic activity. Data tape attribute data may be obtained from one or more databases, data repositories, or product specifications. In addition, or in the alternative, data tape attribute data may be measured by the system. The system may collect and store additional data tape attribute data after each exchange between a data tape and a media drive in the system. The system may add the newly-obtained attribute data to the historical data tape attribute data. Examples of data tape attribute data include a number of write operations, amount of write data, tape distance associated with amount of write data, number of read operations, amount of read data, tape distance associated with amount of read data, number of erasure operations, amount of data erased, tape distance associated with amount of data erased, age of data tape, data tape type, data tape material, and data encoding type on data tape.</p><p id="p-0058" num="0065">The system generates a training data set (Operation <b>204</b>). The training data set includes a plurality of pairs of (a) historical data tape attribute data for a particular data tape, and (b) a scaling factor associated with the particular historical data tape attribute data. The historical data tape attribute data from which the training data set is generated may include the attribute data of other data tapes in a data tape library, of data tapes in other data tape libraries, and other attribute data from data tapes within the system or in other systems. For example, the system may access a database via a network, such as the Internet, to obtain attribute data for other data tapes. The historical scaling factors may be human-generated or machine-generated by machine learning models associated with the historical data tape systems.</p><p id="p-0059" num="0066">The system trains the machine learning model by applying a machine learning algorithm to identify relationships between different data tape attributes and respective scaling factor values (Operation <b>306</b>). The machine learning algorithm analyzes the training data set to identify data and patterns between sets of data tape attributes and scaling factor values. Examples of types of machine learning models include, but are not limited to, linear regression, logistic regression, linear discriminant analysis, classification and regression trees, na&#xef;ve Bayes, k-nearest neighbors, learning vector quantization, support vector machine, bagging and random forest, boosting, backpropagation, and/or clustering.</p><p id="p-0060" num="0067">In examples of supervised machine learning algorithms, the system may obtain feedback on the scaling factor values for sets of data tape attributes (operation <b>308</b>). The feedback may affirm that a generated scaling factor value corresponds to the set of data tape attributes. In other examples, the feedback may indicate that a generated scaling factor value is not valid for a particular set of data tape attributes. In this latter situation, the scaling factor may be adjusted upwards or downwards, or un-associated entirely. Based on the detected similarities and/or feedback, the machine learning training set may be updated, thereby improving its analytical accuracy (Operation <b>310</b>). Once updated, the ML model may be further training by optionally applying it to additional training materials.</p><p id="p-0061" num="0068">In one or more embodiments, a system includes a data tape read quality value tuning engine to provide feedback to the machine learning engine during training. The data tape read quality value tuning engine may identify a set of predefined data tape read quality values based on known data tape attributes. The data tape read quality value tuning engine may apply a scaling factor generated by the machine learning model during training to a data tape read quality value algorithm to generate a data tape read quality value. The data tape read quality value tuning engine may compare the data tape read quality value generated based on the machine-learning-generated scaling factor with a desired data tape read quality value. The data tape read quality value tuning engine may calculate a difference between a target scaling factor, associated with a target data tape read quality value, and the machine-learning model generated scaling factor. The data tape read quality value tuning engine may provide data associated with the target scaling factor&#x2014;such as providing the target scaling factor, itself, or providing difference data&#x2014;to the machine learning model engine. Based on the data associated with the target scaling factor, the machine learning model updates the training data set and re-trains the machine learning model.</p><p id="p-0062" num="0069">As an example, the historical data tape attribute data may include a range of different data tape read quality values and different scaling factors for data sets that include (a) a particular write error, and (b) a particular amount of write data written to a data tape. The data tape read quality value tuning engine may identify a particular data tape read quality value to be applied to each data set that includes (a) the particular write error and (b) the particular amount of write data written to the data tape. When the machine learning model generates a scaling factor for a set of historical data that includes (a) the particular write error and (b) the particular amount of write data written to the data tape, the data tape read quality value tuning engine provides feedback data to the machine learning model engine to adjust the scaling factor in the training data set such that a resulting data tape read quality value matches a target data tape read quality value for the set of historical data.</p><p id="p-0063" num="0070">Upon completion of the training, the system applies the trained machine learning model to particular sets of attribute data associated with a particular data tapes to generate scaling factor values for the particular data tapes. The scaling factor values represent the historically-observed relationship between the frequency of a particular read/write error, or set of read/write errors, and a degradation of the data tape.</p><heading id="h-0010" level="1">5. Example Embodiment</heading><p id="p-0064" num="0071">A detailed example is described below for purposes of clarity. Components and/or operations described below should be understood as one specific example which may not be applicable to certain embodiments. Accordingly, components and/or operations described below should not be construed as limiting the scope of any of the claims.</p><p id="p-0065" num="0072"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a system that generates a data tape recommendation based on a machine-learning-generated scaling factor, according to an example embodiment.</p><p id="p-0066" num="0073">The data tape drive host <b>420</b> provides commands to the library controller <b>414</b> to perform a read or write operation on the data tape <b>412</b> of the data tape cartridge <b>411</b>. The library controller <b>414</b> controls a robot arm of the data tape library <b>410</b> to access the data tape cartridge <b>411</b> and insert the data tape cartridge <b>411</b> into a media drive <b>413</b> to perform the read or write operation. Once the data tape cartridge <b>411</b> is loaded into the media drive <b>413</b>, the data tape drive host <b>420</b> communicates with the media drive <b>413</b> to perform the read/write operations. Upon completion of the read/write operation, the library controller <b>414</b> de-mounts the data tape cartridge <b>411</b> from the media drive <b>413</b>. The library controller <b>414</b> detects performance information, such as whether read/write operations were successful, error data, and other performance notifications. A data tape monitor <b>421</b> receives from the library controller <b>414</b> the performance information associated with the read or write operation. If the operation results in a hard error, such as an inability of the media drive <b>413</b> to write to or read from the data tape <b>412</b>, the data tape monitor <b>421</b> receives an alert from the library controller <b>414</b>. The alert may include a recommended action.</p><p id="p-0067" num="0074">In the embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the data tape library <b>410</b> generates a notification of a successful write operation with an error code indicating a portion of the write operation had to be re-tried multiple times before the write was successful. The notification may include a recommendation to replace the data tape cartridge <b>411</b> by copying the data contained on the data tape <b>412</b> onto a new data tape. According to the embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the system performs an additional analysis of the data tape <b>412</b> to provide a separate recommendation for the data tape <b>412</b>. The recommendation is based not only on a result of an immediate read/write/erase operation, but on additional data tape attribute data <b>461</b>.</p><p id="p-0068" num="0075">Upon completion of the write operation, the data tape monitor <b>421</b> determines that the data tape <b>412</b> met a read/write threshold value <b>422</b>. For example, the data tape monitor <b>421</b> may access data tape attribute data <b>461</b> in the data repository <b>460</b>. The data tape attribute data <b>461</b> may include an amount of data written to the data tape <b>412</b> over the course of twenty write operations performed over a time period of three years. The data tape monitor <b>421</b> may update the data tape attribute data <b>461</b> upon completion of a read, write, or erasure operation to include the results of the present write operation.</p><p id="p-0069" num="0076">Based on determining that the data tape cartridge <b>411</b> has met a data read or write threshold value <b>422</b>, the data tape monitor <b>421</b> provides the read/write data, such as the total amount of data written to the data tape <b>412</b>, to the machine learning model <b>424</b>. The system provides additional data tape attribute data <b>461</b> to the machine learning model. The additional data tape attribute data <b>461</b> includes, for example, a type of data tape, a brand of data tape, a material making up the data tape, dimensions of the data tape (such as thickness, width, length), media characteristics (such as compression levels, amount of data stored, number of over-writes on the data tape), and environmental attributes (such as humidity, temperature, light levels, and magnetic field strengths of an environment in which the data tape is stored). For example, for a particular brand of data tape, storage at a higher temperature and humidity may cause the data tape to degrade more rapidly when the data tape is frequently accessed for data re-reads and re-writes.</p><p id="p-0070" num="0077">Based on the set of input data, the machine learning model <b>424</b> generates a scaling factor <b>425</b> for the data tape <b>412</b>. The scaling factor <b>425</b> is a numerical value which represents a relationship between the data tape error correction value, the value representing the amount of data processed in read/write operations of the data tape, and a degradation level of the data tape.</p><p id="p-0071" num="0078">The system calculates a data tape read quality value for the data tape <b>412</b> based on an algorithm <b>426</b> that includes the scaling factor <b>425</b>. The algorithm includes a degradation coefficient. The algorithm raises a product of (a) the data tape error correction value and (b) the value representing the amount data processed, to an exponent value equal to the scaling factor. The degradation coefficient is applied to the product of the data tape error correction value and the value representing the amount of data processed to indicate a weight applied to the product to generate the data tape read quality value.</p><p id="p-0072" num="0079">In the example embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the data tape quality algorithm <b>426</b> is represented as:</p><p id="p-0073" num="0080">DTQ=90&#x2212;&#x3b1;*(2*TCREF/WR){circumflex over (&#x2003;)}&#x3b2;, where DTQ is the data tape read quality value, a is a degradation co-efficient, TCREF is a filtered total corrected read error value, WR is a &#x201c;wraps read&#x201d; value, corresponding to the value representing the amount of read data tape, and &#x3b2; is the scaling factor. In the above equation, the value &#x201c;90&#x201d; defines a range of values for the data tape read quality value. However, embodiments encompass any range of values. The range of potential values for a data tape quality may be set by a user, for example. The degradation coefficient is a value less than 90 that defines how much the &#x201c;errors per distance&#x201d; calculations (raised to the scaling factor) will increase/reduce the data tape read quality value. For example, if the degradation coefficient is set to &#x201c;20,&#x201d; then the final data tape read quality value will be calculated as the &#x201c;errors per distance&#x201d; times <b>20</b>. The degradation coefficient may be set by a user, for example, to cause the data tape read quality values to fall along a desired range of values.</p><p id="p-0074" num="0081">The system provides the data tape read quality value to a recommendation and/or action engine <b>427</b>. In the example embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the recommendation and/or action engine <b>427</b> recommends that the data tape cartridge <b>411</b> remain in use. In other words, while a default recommendation generated by a data tape library <b>410</b> based on an error code or notification code may recommend replacing a data tape <b>412</b> based on occurrence of a particular error, the recommendation <b>428</b> based on the scaling factor <b>425</b> generated by the machine learning model <b>424</b> takes into account more data tape attribute data <b>461</b> than just the data that led to a particular error. Accordingly, the recommendation <b>428</b> may differ from the default recommendation generated by the data tape library <b>410</b>.</p><heading id="h-0011" level="1">6. Computer Networks and Cloud Networks</heading><p id="p-0075" num="0082">In one or more embodiments, a computer network provides connectivity among a set of nodes. The nodes may be local to and/or remote from each other. The nodes are connected by a set of links. Examples of links include a coaxial cable, an unshielded twisted cable, a copper cable, an optical fiber, and a virtual link.</p><p id="p-0076" num="0083">A subset of nodes implements the computer network. Examples of such nodes include a switch, a router, a firewall, and a network address translator (NAT). Another subset of nodes uses the computer network. Such nodes (also referred to as &#x201c;hosts&#x201d;) may execute a client process and/or a server process. A client process makes a request for a computing service (such as, execution of a particular application, and/or storage of a particular amount of data). A server process responds by executing the requested service and/or returning corresponding data.</p><p id="p-0077" num="0084">A computer network may be a physical network, including physical nodes connected by physical links. A physical node is any digital device. A physical node may be a function-specific hardware device, such as a hardware switch, a hardware router, a hardware firewall, and a hardware NAT. Additionally or alternatively, a physical node may be a generic machine that is configured to execute various virtual machines and/or applications performing respective functions. A physical link is a physical medium connecting two or more physical nodes. Examples of links include a coaxial cable, an unshielded twisted cable, a copper cable, and an optical fiber.</p><p id="p-0078" num="0085">A computer network may be an overlay network. An overlay network is a logical network implemented on top of another network (such as, a physical network). Each node in an overlay network corresponds to a respective node in the underlying network. Hence, each node in an overlay network is associated with both an overlay address (to address to the overlay node) and an underlay address (to address the underlay node that implements the overlay node). An overlay node may be a digital device and/or a software process (such as, a virtual machine, an application instance, or a thread) A link that connects overlay nodes is implemented as a tunnel through the underlying network. The overlay nodes at either end of the tunnel treat the underlying multi-hop path between them as a single logical link. Tunneling is performed through encapsulation and decapsulation.</p><p id="p-0079" num="0086">In an embodiment, a client may be local to and/or remote from a computer network. The client may access the computer network over other computer networks, such as a private network or the Internet. The client may communicate requests to the computer network using a communications protocol, such as Hypertext Transfer Protocol (HTTP). The requests are communicated through an interface, such as a client interface (such as a web browser), a program interface, or an application programming interface (API).</p><p id="p-0080" num="0087">In an embodiment, a computer network provides connectivity between clients and network resources. Network resources include hardware and/or software configured to execute server processes. Examples of network resources include a processor, a data storage, a virtual machine, a container, and/or a software application. Network resources are shared amongst multiple clients. Clients request computing services from a computer network independently of each other. Network resources are dynamically assigned to the requests and/or clients on an on-demand basis. Network resources assigned to each request and/or client may be scaled up or down based on, for example, (a) the computing services requested by a particular client, (b) the aggregated computing services requested by a particular tenant, and/or (c) the aggregated computing services requested of the computer network. Such a computer network may be referred to as a &#x201c;cloud network.&#x201d;</p><p id="p-0081" num="0088">In an embodiment, a service provider provides a cloud network to one or more end users. Various service models may be implemented by the cloud network, including but not limited to Software-as-a-Service (SaaS), Platform-as-a-Service (PaaS), and Infrastructure-as-a-Service (IaaS). In SaaS, a service provider provides end users the capability to use the service provider's applications, which are executing on the network resources. In PaaS, the service provider provides end users the capability to deploy custom applications onto the network resources. The custom applications may be created using programming languages, libraries, services, and tools supported by the service provider. In IaaS, the service provider provides end users the capability to provision processing, storage, networks, and other fundamental computing resources provided by the network resources. Any arbitrary applications, including an operating system, may be deployed on the network resources.</p><p id="p-0082" num="0089">In an embodiment, various deployment models may be implemented by a computer network, including but not limited to a private cloud, a public cloud, and a hybrid cloud. In a private cloud, network resources are provisioned for exclusive use by a particular group of one or more entities (the term &#x201c;entity&#x201d; as used herein refers to a corporation, organization, person, or other entity). The network resources may be local to and/or remote from the premises of the particular group of entities. In a public cloud, cloud resources are provisioned for multiple entities that are independent from each other (also referred to as &#x201c;tenants&#x201d; or &#x201c;customers&#x201d;). The computer network and the network resources thereof are accessed by clients corresponding to different tenants. Such a computer network may be referred to as a &#x201c;multi-tenant computer network.&#x201d; Several tenants may use a same particular network resource at different times and/or at the same time. The network resources may be local to and/or remote from the premises of the tenants. In a hybrid cloud, a computer network comprises a private cloud and a public cloud. An interface between the private cloud and the public cloud allows for data and application portability. Data stored at the private cloud and data stored at the public cloud may be exchanged through the interface. Applications implemented at the private cloud and applications implemented at the public cloud may have dependencies on each other. A call from an application at the private cloud to an application at the public cloud (and vice versa) may be executed through the interface.</p><p id="p-0083" num="0090">In an embodiment, tenants of a multi-tenant computer network are independent of each other. For example, a business or operation of one tenant may be separate from a business or operation of another tenant. Different tenants may demand different network requirements for the computer network. Examples of network requirements include processing speed, amount of data storage, security requirements, performance requirements, throughput requirements, latency requirements, resiliency requirements, Quality of Service (QoS) requirements, tenant isolation, and/or consistency. The same computer network may need to implement different network requirements demanded by different tenants.</p><p id="p-0084" num="0091">In one or more embodiments, in a multi-tenant computer network, tenant isolation is implemented to ensure that the applications and/or data of different tenants are not shared with each other. Various tenant isolation approaches may be used.</p><p id="p-0085" num="0092">In an embodiment, each tenant is associated with a tenant ID. Each network resource of the multi-tenant computer network is tagged with a tenant ID. A tenant is permitted access to a particular network resource only if the tenant and the particular network resources are associated with a same tenant ID.</p><p id="p-0086" num="0093">In an embodiment, each tenant is associated with a tenant ID. Each application, implemented by the computer network, is tagged with a tenant ID. Additionally or alternatively, each data structure and/or dataset, stored by the computer network, is tagged with a tenant ID. A tenant is permitted access to a particular application, data structure, and/or dataset only if the tenant and the particular application, data structure, and/or dataset are associated with a same tenant ID.</p><p id="p-0087" num="0094">As an example, each database implemented by a multi-tenant computer network may be tagged with a tenant ID. Only a tenant associated with the corresponding tenant ID may access data of a particular database. As another example, each entry in a database implemented by a multi-tenant computer network may be tagged with a tenant ID. Only a tenant associated with the corresponding tenant ID may access data of a particular entry. However, the database may be shared by multiple tenants.</p><p id="p-0088" num="0095">In an embodiment, a subscription list indicates which tenants have authorization to access which applications. For each application, a list of tenant IDs of tenants authorized to access the application is stored. A tenant is permitted access to a particular application only if the tenant ID of the tenant is included in the subscription list corresponding to the particular application.</p><p id="p-0089" num="0096">In an embodiment, network resources (such as digital devices, virtual machines, application instances, and threads) corresponding to different tenants are isolated to tenant-specific overlay networks maintained by the multi-tenant computer network. As an example, packets from any source device in a tenant overlay network may only be transmitted to other devices within the same tenant overlay network. Encapsulation tunnels are used to prohibit any transmissions from a source device on a tenant overlay network to devices in other tenant overlay networks. Specifically, the packets, received from the source device, are encapsulated within an outer packet. The outer packet is transmitted from a first encapsulation tunnel endpoint (in communication with the source device in the tenant overlay network) to a second encapsulation tunnel endpoint (in communication with the destination device in the tenant overlay network). The second encapsulation tunnel endpoint decapsulates the outer packet to obtain the original packet transmitted by the source device. The original packet is transmitted from the second encapsulation tunnel endpoint to the destination device in the same particular overlay network.</p><heading id="h-0012" level="1">7. Miscellaneous; Extensions</heading><p id="p-0090" num="0097">Embodiments are directed to a system with one or more devices that include a hardware processor and that are configured to perform any of the operations described herein and/or recited in any of the claims below.</p><p id="p-0091" num="0098">In an embodiment, a non-transitory computer readable storage medium comprises instructions which, when executed by one or more hardware processors, causes performance of any of the operations described herein and/or recited in any of the claims.</p><p id="p-0092" num="0099">Any combination of the features and functionalities described herein may be used in accordance with one or more embodiments. In the foregoing specification, embodiments have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction.</p><heading id="h-0013" level="1">8. Hardware Overview</heading><p id="p-0093" num="0100">According to one embodiment, the techniques described herein are implemented by one or more special-purpose computing devices. The special-purpose computing devices may be hard-wired to perform the techniques, or may include digital electronic devices such as one or more application-specific integrated circuits (ASICs), field programmable gate arrays (FPGAs), or network processing units (NPUs) that are persistently programmed to perform the techniques, or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware, memory, other storage, or a combination. Such special-purpose computing devices may also combine custom hard-wired logic, ASICs, FPGAs, or NPUs with custom programming to accomplish the techniques. The special-purpose computing devices may be desktop computer systems, portable computer systems, handheld devices, networking devices or any other device that incorporates hard-wired and/or program logic to implement the techniques.</p><p id="p-0094" num="0101">For example, <figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram that illustrates a computer system <b>500</b> upon which an embodiment of the invention may be implemented. Computer system <b>500</b> includes a bus <b>502</b> or other communication mechanism for communicating information, and a hardware processor <b>504</b> coupled with bus <b>502</b> for processing information. Hardware processor <b>504</b> may be, for example, a general purpose microprocessor.</p><p id="p-0095" num="0102">Computer system <b>500</b> also includes a main memory <b>506</b>, such as a random access memory (RAM) or other dynamic storage device, coupled to bus <b>502</b> for storing information and instructions to be executed by processor <b>504</b>. Main memory <b>506</b> also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor <b>504</b>. Such instructions, when stored in non-transitory storage media accessible to processor <b>504</b>, render computer system <b>500</b> into a special-purpose machine that is customized to perform the operations specified in the instructions.</p><p id="p-0096" num="0103">Computer system <b>500</b> further includes a read only memory (ROM) <b>508</b> or other static storage device coupled to bus <b>502</b> for storing static information and instructions for processor <b>504</b>. A storage device <b>510</b>, such as a magnetic disk or optical disk, is provided and coupled to bus <b>502</b> for storing information and instructions.</p><p id="p-0097" num="0104">Computer system <b>500</b> may be coupled via bus <b>502</b> to a display <b>512</b>, such as a cathode ray tube (CRT), for displaying information to a computer user. An input device <b>514</b>, including alphanumeric and other keys, is coupled to bus <b>502</b> for communicating information and command selections to processor <b>504</b>. Another type of user input device is cursor control <b>516</b>, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor <b>504</b> and for controlling cursor movement on display <b>512</b>. This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.</p><p id="p-0098" num="0105">Computer system <b>500</b> may implement the techniques described herein using customized hard-wired logic, one or more ASICs or FPGAs, firmware and/or program logic which in combination with the computer system causes or programs computer system <b>500</b> to be a special-purpose machine. According to one embodiment, the techniques herein are performed by computer system <b>500</b> in response to processor <b>504</b> executing one or more sequences of one or more instructions contained in main memory <b>506</b>. Such instructions may be read into main memory <b>506</b> from another storage medium, such as storage device <b>510</b>. Execution of the sequences of instructions contained in main memory <b>506</b> causes processor <b>504</b> to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions.</p><p id="p-0099" num="0106">The term &#x201c;storage media&#x201d; as used herein refers to any non-transitory media that store data and/or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non-volatile media and/or volatile media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device <b>510</b>. Volatile media includes dynamic memory, such as main memory <b>506</b>. Common forms of storage media include, for example, a floppy disk, a flexible disk, hard disk, solid state drive, magnetic tape, or any other magnetic data storage medium, a CD-ROM, any other optical data storage medium, any physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, NVRAM, any other memory chip or cartridge, content-addressable memory (CAM), and ternary content-addressable memory (TCAM).</p><p id="p-0100" num="0107">Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example, transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus <b>502</b>. Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.</p><p id="p-0101" num="0108">Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor <b>504</b> for execution. For example, the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system <b>500</b> can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus <b>502</b>. Bus <b>502</b> carries the data to main memory <b>506</b>, from which processor <b>504</b> retrieves and executes the instructions. The instructions received by main memory <b>506</b> may optionally be stored on storage device <b>510</b> either before or after execution by processor <b>504</b>.</p><p id="p-0102" num="0109">Computer system <b>500</b> also includes a communication interface <b>518</b> coupled to bus <b>502</b>. Communication interface <b>518</b> provides a two-way data communication coupling to a network link <b>520</b> that is connected to a local network <b>522</b>. For example, communication interface <b>518</b> may be an integrated services digital network (ISDN) card, cable modem, satellite modem, or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface <b>518</b> may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface <b>518</b> sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.</p><p id="p-0103" num="0110">Network link <b>520</b> typically provides data communication through one or more networks to other data devices. For example, network link <b>520</b> may provide a connection through local network <b>522</b> to a host computer <b>524</b> or to data equipment operated by an Internet Service Provider (ISP) <b>526</b>. ISP <b>526</b> in turn provides data communication services through the world wide packet data communication network now commonly referred to as the &#x201c;Internet&#x201d; <b>528</b>. Local network <b>522</b> and Internet <b>528</b> both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link <b>520</b> and through communication interface <b>518</b>, which carry the digital data to and from computer system <b>500</b>, are example forms of transmission media.</p><p id="p-0104" num="0111">Computer system <b>500</b> can send messages and receive data, including program code, through the network(s), network link <b>520</b> and communication interface <b>518</b>. In the Internet example, a server <b>530</b> might transmit a requested code for an application program through Internet <b>528</b>, ISP <b>526</b>, local network <b>522</b> and communication interface <b>518</b>.</p><p id="p-0105" num="0112">The received code may be executed by processor <b>504</b> as it is received, and/or stored in storage device <b>510</b>, or other non-volatile storage for later execution.</p><p id="p-0106" num="0113">In the foregoing specification, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A non-transitory computer readable medium comprising instructions which, when executed by one or more hardware processors, causes performance of operations comprising:<claim-text>generating a data tape error correction value based on a frequency of a data tape experiencing a particular data tape error;</claim-text><claim-text>generating a data tape read quality value based on: (a) the data tape error correction value, (b) a data tape length value representing a length of the particular data tape traversed during data-processing operations, and (c) a scaling factor value based on a relationship between the particular data tape error, the data tape length value, and a degradation rate of the data tape;<claim-text>wherein generating the scaling factor value comprises:<claim-text>obtaining data tape attribute data for the data tape, the data tape attribute data corresponding to at least one of: (a) characteristics of the data tape, and (b) characteristics of an environment in which the data tape is located; and</claim-text></claim-text></claim-text><claim-text>applying a trained machine learning model to the data tape attribute data to generate the scaling factor value based on the data tape attribute data.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>monitoring data tape processing operations of a data tape library to determine whether data processing characteristics of data tapes meet a threshold;</claim-text><claim-text>subsequent to a data processing operation, determining that a data processing characteristic of a data tape associated with the data processing operation meets the threshold; and</claim-text><claim-text>responsive to determining that the data processing characteristic of the data tape meets the threshold, generating the data tape error correction value and the data tape read quality value.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>based on determining the data tape read quality value is less than a threshold, performing at least one of:<claim-text>preventing a write operation from being performed on the data tape; and</claim-text><claim-text>generating an alert including a degradation state of the data tape.</claim-text></claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data tape read quality value is based on an algorithm including a first portion in which a quotient of the data tape error correction value and the data tape length value is raised to an exponent equal to the scaling factor.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the algorithm further includes a degradation coefficient,<claim-text>wherein generating the data tape read quality value includes multiplying the first portion by the degradation coefficient.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>obtaining historical data tape data for a plurality of data tapes;</claim-text><claim-text>generating a training data set comprising:<claim-text>a plurality of data points associated with a plurality of sets of data tape attributes, and</claim-text><claim-text>for each data point of the plurality of data points, a respective historical scaling factor value; and</claim-text></claim-text></claim-text><claim-text>training the machine learning model based on the training data set to recommend a particular scaling factor value for a particular set of data tape attributes.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein training the machine learning model comprises:<claim-text>generating a first scaling factor value for a first data point associated with a first set of data tape attributes;</claim-text><claim-text>generating a first data tape read quality value using the first scaling factor value and the first set of data tape attributes;</claim-text><claim-text>comparing the first data tape read quality value to a predefined data tape read quality value for the first set of data tape attributes; and</claim-text><claim-text>based on detecting a difference between the first data tape read quality value and the predefined data tape read quality value:<claim-text>calculating a difference between a predefined scaling factor value, associated with the predefined data tape read quality value, and the first scaling factor value;</claim-text><claim-text>updating the training data set based on the difference between the predefined scaling factor value and the first scaling factor value; and</claim-text><claim-text>retraining the machine learning model based on updating the training data set.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method comprising:<claim-text>generating a data tape error correction value based on a frequency of a data tape experiencing a particular data tape error;</claim-text><claim-text>generating a data tape read quality value based on: (a) the data tape error correction value, (b) a data tape length value representing a length of the particular data tape traversed during data-processing operations, and (c) a scaling factor value based on a relationship between the particular data tape error, the data tape length value, and a degradation rate of the data tape;<claim-text>wherein generating the scaling factor value comprises:<claim-text>obtaining data tape attribute data for the data tape, the data tape attribute data corresponding to at least one of: (a) characteristics of the data tape, and (b) characteristics of an environment in which the data tape is located; and</claim-text></claim-text></claim-text><claim-text>applying a trained machine learning model to the data tape attribute data to generate the scaling factor value based on the data tape attribute data.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>monitoring data tape processing operations of a data tape library to determine whether data processing characteristics of data tapes meet a threshold;</claim-text><claim-text>subsequent to a data processing operation, determining that a data processing characteristic of a data tape associated with the data processing operation meets the threshold; and</claim-text><claim-text>responsive to determining that the data processing characteristic of the data tape meets the threshold, generating the data tape error correction value and the data tape read quality value.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>based on determining the data tape read quality value is less than a threshold, performing at least one of:<claim-text>preventing a write operation from being performed on the data tape; and</claim-text><claim-text>generating an alert including a degradation state of the data tape.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the data tape read quality value is based on an algorithm including a first portion in which a quotient of the data tape error correction value and the data tape length value is raised to an exponent equal to the scaling factor.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the algorithm further includes a degradation coefficient, wherein generating the data tape read quality value includes multiplying the first portion by the degradation coefficient.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the operations further comprise:<claim-text>obtaining historical data tape data for a plurality of data tapes;</claim-text><claim-text>generating a training data set comprising:<claim-text>a plurality of data points associated with a plurality of sets of data tape attributes, and</claim-text><claim-text>for each data point of the plurality of data points, a respective historical scaling factor value; and</claim-text></claim-text></claim-text><claim-text>training the machine learning model based on the training data set to recommend a particular scaling factor value for a particular set of data tape attributes.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein training the machine learning model comprises:<claim-text>generating a first scaling factor value for a first data point associated with a first set of data tape attributes;</claim-text><claim-text>generating a first data tape read quality value using the first scaling factor value and the first set of data tape attributes;</claim-text><claim-text>comparing the first data tape read quality value to a predefined data tape read quality value for the first set of data tape attributes; and</claim-text><claim-text>based on detecting a difference between the first data tape read quality value and the predefined data tape read quality value:<claim-text>calculating a difference between a predefined scaling factor value, associated with the predefined data tape read quality value, and the first scaling factor value;</claim-text><claim-text>updating the training data set based on the difference between the predefined scaling factor value and the first scaling factor value; and</claim-text></claim-text><claim-text>retraining the machine learning model based on updating the training data set.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A system comprising:<claim-text>one or more processors; and</claim-text><claim-text>memory storing instructions that, when executed by the one or more processors, cause the system to perform operations comprising:</claim-text><claim-text>generating a data tape error correction value based on a frequency of a data tape experiencing a particular data tape error;</claim-text><claim-text>generating a data tape read quality value based on: (a) the data tape error correction value, (b) a data tape length value representing a length of the particular data tape traversed during data-processing operations, and (c) a scaling factor value based on a relationship between the particular data tape error, the data tape length value, and a degradation rate of the data tape;<claim-text>wherein generating the scaling factor value comprises:<claim-text>obtaining data tape attribute data for the data tape, the data tape attribute data corresponding to at least one of: (a) characteristics of the data tape, and (b) characteristics of an environment in which the data tape is located; and</claim-text></claim-text></claim-text><claim-text>applying a trained machine learning model to the data tape attribute data to generate the scaling factor value based on the data tape attribute data.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the operations further comprise:<claim-text>monitoring data tape processing operations of a data tape library to determine whether data processing characteristics of data tapes meet a threshold;</claim-text><claim-text>subsequent to a data processing operation, determining that a data processing characteristic of a data tape associated with the data processing operation meets the threshold; and</claim-text><claim-text>responsive to determining that the data processing characteristic of the data tape meets the threshold, generating the data tape error correction value and the data tape read quality value.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the operations further comprise:<claim-text>based on determining the data tape read quality value is less than a threshold, performing at least one of:<claim-text>preventing a write operation from being performed on the data tape; and</claim-text><claim-text>generating an alert including a degradation state of the data tape.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the data tape read quality value is based on an algorithm including a first portion in which a quotient of the data tape error correction value and the data tape length value is raised to an exponent equal to the scaling factor.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the algorithm further includes a degradation coefficient, wherein generating the data tape read quality value includes multiplying the first portion by the degradation coefficient.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the operations further comprise:<claim-text>obtaining historical data tape data for a plurality of data tapes;</claim-text><claim-text>generating a training data set comprising:<claim-text>a plurality of data points associated with a plurality of sets of data tape attributes, and</claim-text><claim-text>for each data point of the plurality of data points, a respective historical scaling factor value; and</claim-text><claim-text>training the machine learning model based on the training data set to recommend a particular scaling factor value for a particular set of data tape attributes.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>