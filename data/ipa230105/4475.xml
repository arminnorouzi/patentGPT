<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004476A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004476</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17852541</doc-number><date>20220629</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>IN</country><doc-number>202141029602</doc-number><date>20210701</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>36</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>366</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e61">APPLICATION FAILURE TRACKING FEATURES</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Hewlett-Packard Development Company, L.P.</orgname><address><city>Spring</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>AVERY</last-name><first-name>Marcus</first-name><address><city>Spring</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NAG</last-name><first-name>Satyadip</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>NARGUNDE</last-name><first-name>Manjiri Abhijit</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>DAHAT</last-name><first-name>Priyanka</first-name><address><city>Pune</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Examples described herein relate to systems and methods consistent with the disclosure. For instance, the system can comprise a processing resource, and a non-transitory machine-readable medium storing instructions executable by the processing resource determine when an application on the system is activated, monitor the application to determine an application failure using a tracking feature, take a snapshot of computing information related to the determined application failure, determine a coding language of the determined application failure, store the determined application failure, snapshot of computing information, and the coding language of the determined application to a memory device, and send the stored determined application failure, snapshot of computing information, and the coding language of the determined application to a server.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="139.70mm" wi="78.23mm" file="US20230004476A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="158.75mm" wi="80.26mm" file="US20230004476A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="216.07mm" wi="176.87mm" file="US20230004476A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="206.25mm" wi="152.15mm" file="US20230004476A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="224.20mm" wi="155.11mm" file="US20230004476A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="132.76mm" wi="161.12mm" file="US20230004476A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Computing devices can include applications to perform tasks and functions on the system. For instance, a system can include a plurality of applications that allow a user to get online, draft documents, etc.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0003" num="0002"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a system including a tracking feature.</p><p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of an apparatus suitable with a system including a tracking feature.</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a method for a system including a tracking feature.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a flow diagram including a system including a tracking feature.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example diagram of a non-transitory machine-readable medium suitable with a system including a tracking feature.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0003" level="1">DETAILED DESCRIPTION</heading><p id="p-0008" num="0007">Systems can be computer related devices that include applications thereon. Applications on a system can malfunction causing applications on the system to fail and/or not run as intended on the system. When an application malfunctions on a system it can be difficult to determine the cause of the malfunction. As such, it can be difficult to repair the damaged application so that the malfunction does not occur again. A user having to determine the cause of a malfunction before repairing the application can increase the time used to repair the application. In addition, a user not having access to previous malfunction data can increase the time used to repair the application.</p><p id="p-0009" num="0008">Repairing an application on a system after a malfunction occurs can take time when the cause of the malfunction is unknown. That is, it can take time to gather information about the malfunction to determine the cause of the malfunction which can increase the time used to repair the malfunction of the application, as compared to being provided information about the malfunction.</p><p id="p-0010" num="0009">As such, systems, as described herein, can provide a method, process, and/or apparatus that can provide information describing an application malfunction and reduce the time used to repair an application using a tracking feature, as compared to systems without a tracking feature. For example, a system can comprise a processing resource to determine when an application on the system is activated. In addition, the processing resource can monitor the application to determine an application failure using a tracking feature and take a snapshot of computing information related to the determined application failure. Moreover, the processing resource can determine a coding language of the determined application failure. After a processing resource have collected the data related to the application failure, the processing resource can store the determined application failure, snapshot of computing information, and the coding language of the determined application to a memory device and/or send the stored determined application failure, snapshot of computing information, and the coding language of the determined application to a server. Notably, such systems, including a tracking feature, can reduce the time used to fix an application, as compared to systems that do not include such tracking features. In addition, the tracking feature can assist in reducing the time to obtain information related to the malfunction and monitor the events that lead to the malfunction, thereby identify the actions that caused the malfunction.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a system <b>100</b> including a tracking feature <b>102</b>. The system <b>100</b> can be a variety of computing related devices, such as desktop computers, portable computers, tablets, etc. In some examples, the system <b>100</b> can be a desktop or portable computing device. The system <b>100</b> can include an application (i.e., application <b>408</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) thereon to assist in performing specific tasks. As used herein, an &#x201c;application&#x201d; refers to a collection of instructions and data that tell a computing related device how to execute specific tasks. In addition, the system <b>100</b> can include a tracking feature <b>102</b> to monitor an application on the system <b>100</b>. In some examples, the tracking feature <b>102</b> can activate without user prompt when an application on the system <b>100</b> is activated. That is, the tracking feature <b>102</b> can run in the background until an application on the system <b>100</b> is activated. The tracking feature <b>102</b> can be used to gather computing information related to an application failure. The tracking feature <b>102</b> can gather computing information related to an application failure when the application is activated.</p><p id="p-0012" num="0011">That is, the tracking feature <b>102</b> can monitor the application on the system <b>100</b> for application failures. In some examples, if an application on the system <b>100</b> has an application failure, the tracking feature <b>102</b> can identify the malfunction and determine that an application failure has occurred. In some examples, monitoring an application and gathering computing information related to an application failure can make it easier to identify issues with the application, as compared to a system that does not include a tracking feature <b>102</b>. That is, the system <b>100</b> can use the computing information to identify issues with an application and inform a user and/or third-party what should be fixed on the application to prevent further application failures. As used herein, &#x201c;application failure&#x201d; refers to the act of an application not functioning as intended. As used herein, &#x201c;computing information&#x201d; refers to information that describes an application failure, events surrounding an application failure including event related to the hardware and/or software of the application.</p><p id="p-0013" num="0012">In some examples, the tracking feature <b>102</b> can gather and store the computing information related to the application failure on the system <b>100</b> and provide easy access to the computing information. In some examples, the system <b>100</b> can include a processing resource <b>121</b> and a non-transitory machine-readable medium <b>150</b> to monitor an application of the system <b>100</b> using a tracking feature <b>102</b>. The processing resource <b>121</b> can execute the instructions stored on the non-transitory machine-readable medium <b>150</b> to enable the tracking feature <b>102</b> on the system <b>100</b> to activate responsive to the activation of an application on the system <b>100</b>. In some examples, the tracking feature <b>102</b> can activate to monitor an application and determine if the application is malfunctioning. In addition, the non-transitory machine-readable medium <b>150</b> can store instructions that can allow the processing resource <b>121</b> to determine computing information of an application of the system using the tracking feature <b>102</b>. For instance, if the tracking feature <b>102</b> determines that an application failure has occurred on the application, the tracking feature <b>102</b> can determine what caused the application failure and gather the information to create computing information. The computing information can be information that can explain what caused the application failure to a user and/or third party. In some examples, the tracking feature <b>102</b> can generate an information request for additional computing information. For instance, once the tracking feature <b>102</b> determined the computing information, the tracking feature <b>102</b> can ask a user and/or third party to provide additional computing information related to the application failure. The additional computing information can be information related to the cause of the application failure provided by the user and/or third-party.</p><p id="p-0014" num="0013">In some examples, the tracking feature <b>102</b> can also take a snapshot related to the application failure. That is, the tracking feature <b>102</b> can locate what caused the application failure and take a snapshot of what caused the application to malfunction. The snapshot can provide the user and/or a third-party information that can assist with remedying the application. In some examples, the snapshots can be attachments added to the computing information in the form of a recording, a still image, etc. In some examples, the tracking feature <b>102</b> can generate an information request for additional snapshots. For instance, once the tracking feature <b>102</b> takes a snapshot related to the application failure, the tracking feature <b>102</b> can ask a user and/or third party to provide additional snapshot related to the application failure. The additional snapshot can be a still image or recording related to the cause of the application failure that is provided by the user and/or third party. As used herein, &#x201c;snapshot&#x201d; refers to recordings, still images, etc. related to an application. For example, the snapshot related to an application failure can be a visual copy of the coding language for the same application failure, a still image of what is on display screen around the time (e.g., immediately before, during, immediately after) the application failure occurs, etc. That is, the information related to the application failure can also provide information related how the failure is experienced.</p><p id="p-0015" num="0014">In some examples, the tracking feature <b>102</b> can notify the user and/or third-party of an application failure and provide the user and/or third-party with computing information and snapshots related to the application failure. In various examples, the processing resource can cause the tracking feature <b>102</b> to prompt a user and/or third-party for identification before to notifying the user of the determined failure. In addition, the non-transitory machine-readable medium <b>150</b> can include instructions executable by a processing resource <b>121</b> to generate information request for an additional snapshot and computing information related to the application failure. In some examples, the non-transitory machine-readable medium <b>150</b> can include instructions executable by a processing resource <b>121</b> to generate information request for feedback related to the determined failure, responsive to notifying the user of the determined failure. That is, the processing resource <b>121</b> can cause the tracking feature <b>102</b> to request additional snapshot and additional computing information from a user and/or third-party.</p><p id="p-0016" num="0015">In some examples, the processing resource <b>121</b> can cause the tracking feature <b>102</b> to store the computing information and the snapshot on the memory device. The computing information and snapshot can be stored on the memory device to provide a user and/or a third-party access to information related to the application failure. The information stored on the memory device can be used to allow a user and/or third-party to fix the application quickly, as compared to fixing the application without using the computing information and snapshot stored in the memory device. In addition, the additional computing information and additional snapshot can be stored on the memory device to provide access to the information.</p><p id="p-0017" num="0016">In some examples, the processing resource <b>121</b> can cause the tracking feature <b>102</b> to send the computing information and the snapshot to a server. The computing information and snapshot can be stored on the server to provide access to the computing information and snapshot to a third-party and/or a user. The information sent to the server can be used to fix the application and allow the information related to a current application failure be compared to information related to an earlier application failure. In some examples, comparing earlier computing information and snapshots to a current computing information and snapshot can allow a user and/or third-party to understand the current issue with an application and reduce the time to fix the application, as compared not being able to compare previous computing information and snapshots to a current computing information and snapshot. As used herein, a &#x201c;server&#x201d; refers to a computer device and/or computer program that manages access to a resource and/or service in a network.</p><p id="p-0018" num="0017">In some examples, including a tracking feature <b>102</b> on the system <b>100</b> can reduce the time taken to fix an application on the system <b>100</b> due to the sharing of the information related to the application failure. That is, if a system <b>100</b> did not include a tracking feature <b>102</b> that monitored the application and provided a user and/or third-party with information related to the application failure, the time taken to fix the application failure could increase. In addition, the computing information and snapshot can provide a user and/or third-party with the specific actions performed that cause the application failure. In some examples, knowing the specific actions that caused the application failure can reduce the time it takes to fix the application, as compared to not having the specific actions performed that caused the application failure.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of an apparatus <b>220</b> suitable with a system including a tracking feature. As illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the apparatus <b>220</b> includes a processing resource <b>221</b> and a memory resource <b>260</b>. The processing resource <b>221</b> is a hardware processing device such as a microprocessor, application specific instruction set processor, coprocessor, network processor, or similar hardware circuitry that causes machine-readable instructions to be executed. In some examples, the processing resource <b>221</b> can be a plurality of hardware processing devices that can cause machine-readable instructions to be executed. The processing resource <b>221</b> can include central processing devices (CPUs) among other types of processing devices. The processing resource <b>221</b> can also include dedicated circuits and/or state machines, such as in an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Array (FPGA) or similar design-specific hardware. The memory resource <b>260</b> can be any type of volatile or non-volatile non-transitory memory, such as random-access memory (RAM), flash memory, read-only memory (ROM), storage volumes, a hard disk, or a combination thereof.</p><p id="p-0020" num="0019">The memory resource <b>260</b> can store instructions thereon, such as instructions <b>222</b>, <b>223</b>, <b>224</b>, <b>225</b>, <b>226</b>, <b>227</b>, <b>228</b> and <b>229</b>. When executed by the processing resource <b>221</b>, the instructions can cause the apparatus <b>220</b> to perform specific tasks and/or functions. For example, the memory resource <b>260</b> can store instructions <b>222</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to monitor a system for an activation of an application. A system (e.g., system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) can include a processing resource <b>221</b> and a memory resource <b>260</b>. The processing resource <b>221</b> can allow the tracking feature to monitor the activity of other applications on the system. In some examples, the tracking feature can watch other applications on the system to determine when other applications on the system are activated. Determining when other applications of the system are activated can allow the tracking feature to activate when other applications are activated, allowing the tracking feature to monitor the other applications for failures. The tracking feature activating when other applications activate can reduce amount of energy (e.g., processing power) used by the system, compared to a tracking feature that is constantly activated while the system is on. That is, in some examples, the tracking feature can activate when the tracking device determines that an application of the system has activated.</p><p id="p-0021" num="0020">The memory resource <b>260</b> can store instructions <b>223</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to activate a tracking feature responsive to the activation of the application. In some examples, a system can include many applications. Some applications can malfunction when being used by the system. As such, the processing resource <b>221</b> can cause a tracking feature to activate when an application is activated. That is, the processing resource <b>221</b> can cause the tracking feature to monitor the applications on the system for an application activation. Further, when the tracking features identifies that an application is in use, the tracking feature will activate substantially simultaneously with the application that was activated.</p><p id="p-0022" num="0021">In some examples, the tracking feature can monitor a plurality of applications for activations. For example, the tracking feature can monitor a first application for an activation and the tracking feature can activate responsive to the first application activating. While the tracking feature is activated and monitoring the first application, the tracking feature can be monitoring other applications on the system to determine when a second application of the system is activated. If a second application of the system is activated the tracking device can monitor both the first application and the second application substantially simultaneously. The tracking feature when activated can monitor an activated application and/or a plurality of activated applications to determine when a malfunction occurs on the activated application(s). That is, the processing resource <b>221</b> can cause the tracking feature to activate for a plurality of applications responsive to activating the corresponding plurality of applications.</p><p id="p-0023" num="0022">The memory resource <b>260</b> can store instructions <b>224</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to determine when a failure of an application occurs subsequent to activation of the application. When an application is activated on a system, issues can occur. It can be difficult for a user to identify the different issues that occur while using the application. As such, a tracking feature can be used to determine what application failures exist on the application. This can help quickly identify and remedy the issues, as compared to systems that do not have a tracking feature that can associate with applications on the system. In some examples, the processing resource <b>221</b> can cause the tracking feature to monitor a plurality of applications on the system. In addition, the tracking feature can determine application failures for the plurality of applications substantially simultaneously.</p><p id="p-0024" num="0023">In some examples, the tracking feature can gather computing information related to an application failure which can allow the tracking feature to determine specific issues associated with the application and identify specific application failures. The tracking feature can monitor all applications of a system without information on how the application runs on the system. That is, the tracking feature can determine when the application is activated, monitor the application for failures without particular information on the applications coding language. In some examples, the tracking feature can analyze the computing information it receives from the application when it determines the application failure.</p><p id="p-0025" num="0024">The memory resource <b>260</b> can store instructions <b>225</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to analyze computing information related to the determined failure. In some examples, the tracking feature can analyze the application failure to provide computing information to a user and/or third-party. For example, the tracking feature can determine the coding language of a particular application failure. In some examples, the non-transitory machine-readable medium storing instructions executable by a processing resource to cause the tracking feature to determine the coding language of the application failure. In various examples, the coding language of the application failure can allow the user and/or third-party to determine what remedies may be needed to fix the application failure. That is, the processing resource <b>221</b> can cause the tracking feature to determine and analyze the failures of the application while monitoring the application. In some examples, the processing resource <b>221</b> can cause the tracking feature to analyze a plurality of application failures from different applications. For instance, the tracking feature can analyze computing information from multiple applications and determine the coding language for a plurality of application failures from different applications.</p><p id="p-0026" num="0025">The memory resource <b>260</b> can store instructions <b>226</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to take a snapshot related to the determined application failure. In some examples, the processing resource <b>221</b> can cause the tracking feature to capture a snapshot related to the application failure. The snapshot can be additional information related to the application failure. That is, the snapshot can provide additional visual information to explain what caused the application failure.</p><p id="p-0027" num="0026">The memory resource <b>260</b> can store instructions <b>227</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to store the analyzed computing information and the snapshot on a memory device. In some examples, the processing resource <b>221</b> can cause the tracking feature to store the computing information and the snapshot. For example, the computing information and the snapshot can be stored on a memory device. Storing the computing information and snapshot can provide readily available information related to application failure for current and future use. In addition, the processing resource <b>221</b> can cause the tracking feature to store coding language of the application failure on the memory device.</p><p id="p-0028" num="0027">The memory resource <b>260</b> can store instructions <b>228</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to notify a user and/or third-party of the determined failure. In some examples, the processing resource <b>221</b> can cause the tracking feature to notify the user of the application failure. That is, the tracking feature can inform the user that an application failure has occurred by providing the user and/or third-party with computing information and the snapshot related to the application failure. Specifically, the processing resource <b>221</b> can cause the tracking feature to notify the user and/or third-party of the computing information, snapshot and the coding language related to the application failure. Notifying the user and/or third-party to the application failure can allow the user and/or third-party to understand why the application is malfunctioning and allow the user and/or third-party to provide additional information as to the application failure. In some examples, the tracking feature can notify the user and/or third party by sending an email including computing information, snapshots, and coding language to the user and/or third-party.</p><p id="p-0029" num="0028">The memory resource <b>260</b> can store instructions <b>229</b>, that when executed by the processing resource <b>221</b>, cause the processing resource <b>221</b> to send the stored analyzed computing information and snapshot to a server. In addition to storing the computing information and the snapshot on the system, the computing information and snapshot can be sent to a server for storage as well. In some examples, the computing information is sent to the server for a user and/or third-party to have access to the information and assess the issues with the application. In addition, the tracking feature can send the coding language to the server for storage.</p><p id="p-0030" num="0029">In some examples, the server can create an application failure identification for each application failure received. The server can send the application failure identification back to the system. In some examples, the processing resource <b>221</b> can cause the tracking feature to receive the application failure identification and allow access to the application failure through the application failure identification.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a method <b>330</b> for a system including a tracking feature. Method <b>330</b> can be performed, for example, by a processor resource (e.g., processor resource <b>221</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) of apparatus (e.g., apparatus <b>220</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The method <b>330</b> can be performed with more or less elements.</p><p id="p-0032" num="0031">At <b>331</b>, the method <b>330</b> can include determining when an application on a system (e.g., system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) is running. A system can include a tracking feature used to determine application failures. For example, the tracking feature can run in the background of the system. That is, the tracking feature can run using minimal system resources and perform tasks which require little to no input from the user until an event occurs or a condition is met. For example, the tracking feature can run in the background of the system monitoring the applications on the system to determine if an application is activated. In some examples, when it is determined that an application is running (e.g., activated), the tracking feature can activate and begin to use the necessary system resource to monitor the application for an application failure.</p><p id="p-0033" num="0032">At <b>332</b>, the method <b>330</b> can include activating a tracking feature responsive to the determination that the application is running. The tracking feature can run in the background until an application is activated. Once the tracking feature determines that an application is activated the tracking feature can run at full capacity and monitor the application for application failures. In some examples, the tracking feature can activate substantially simultaneously with the application that was recently activated. The tracking feature can activate to monitor the recently activated application. In some examples, if the tracking feature is activated by a first application, the tracking feature can begin to monitor a second subsequently activated application simultaneously. That is, once the tracking feature is activated it can monitor multiple activated applications.</p><p id="p-0034" num="0033">At <b>333</b>, the method <b>330</b> can include monitoring the application to determine an application failure. In some examples, determining when an application has a failure can reduce the time for fixing the issue with the application, as compared to systems that do not include a feature to track application failures. In addition, the tracking feature monitoring the application for application failures can gather computing information related to the application failure. The computing information can reduce the communication time when fixing the issues with the application. That is, the computing information can provide a user and/or third-party with information about the events on the application that lead to the application failure. Providing information about the events leading up to the application failure can reduce the time it takes to fix the application, as compared to not providing information about the events leading up to the application failure. The tracking feature can provide all of the computing information related to the application failure to a user and/or third-party and the user and/or third-party can use the computing information to fix the application.</p><p id="p-0035" num="0034">At <b>334</b>, the method <b>330</b> can include taking a snapshot of information related to the determined application failure. The tracking feature can take snapshots of the application failure to assist in identifying the issue with the application. In some examples, snapshot can be a recording of events leading to the application failure to provide a user with a better understanding of the failure. In various examples, the snapshot can be a still image of events leading to the application failure that can provide a user with a better understanding of the application failure. That is, the snapshot can be an additional attachment to the computing information that can assist in remedying the application when an application failure has occurred.</p><p id="p-0036" num="0035">At <b>335</b>, the method <b>330</b> can include storing information related to the determined application failure and the snapshot to a server. In some examples, the computing information and snapshot can be sent to a server so that it can be accessed by a user and/or a third-party that can use the information to fix the application. In various examples, the server can analyze the computing information and snapshot related to an application failure and provide it with an identification code so that the particular computing information and the particular snapshot is linked to the proper application failure. The server can then send the computing information including the snapshot back to the system with the identification code.</p><p id="p-0037" num="0036">At <b>336</b>, the method <b>330</b> can include allowing access to the stored information and the stored snapshot responsive to identification with identification credentials authorized to access the server. The user and/or a third-party can use the computing information and the snapshot to fix the application failure. However, in some examples, the user and/or third-party can provide credentials that show a user and/or third-party is allowed to access the information. That is, once authorization is proven the tracking feature can provide the requester information related to the application failure.</p><p id="p-0038" num="0037">In various examples, the processing resource can cause a tracking feature to determine when an application on the system is running and activate responsive to the determination that the application is running. In addition, the processing resource can cause a tracking feature to monitoring the application to determine an application failure and take a snapshot of information related to the determined application failure. In some examples, the processing resource can cause a tracking feature to gather computing information related to the application failure. Providing computing information and snapshot to a user and/or third-party can reduce the amount of time used to repair the application, as compared to not being provided computing information and a snapshot related to the application failure.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a flow diagram <b>440</b> including a system <b>400</b> including a tracking feature <b>402</b>. For example, <figref idref="DRAWINGS">FIG. <b>4</b></figref> can include a system <b>400</b>, a processing resource <b>421</b>, a medium <b>150</b>, and a tracking feature <b>502</b>.</p><p id="p-0040" num="0039">In some examples, a system <b>400</b> can include a processing resource <b>421</b>, a medium <b>450</b>, and a tracking feature <b>402</b>. The system <b>400</b> can allow a tracking feature <b>402</b> to determine when an application failure <b>408</b> occurs. In some examples, an application <b>406</b> can malfunction when being used on the system <b>400</b>. It can be difficult to determine the issue with the application <b>406</b>. A tracking feature <b>402</b> can be used to identify application failures <b>408</b> and assess the issue with the application <b>406</b>. That is, the tracking feature <b>402</b> can provide computing information <b>412</b> and snapshots <b>410</b> related to the application failure <b>408</b>.</p><p id="p-0041" num="0040">In some examples, the tracking feature <b>402</b> can determine computing information <b>412</b> to describe the application failure <b>408</b> and/or the cause of the application failure <b>408</b>. That is, the computing information <b>412</b> can include analysis of the application failure. For instance, the tracking feature <b>402</b> can determine whether the application failure <b>408</b> is related to the software, hardware, coding, etc. and provide the analysis as computing information <b>412</b>.</p><p id="p-0042" num="0041">In some examples, the tracking feature <b>402</b> can create snapshot <b>410</b> related to the application failure <b>408</b>. The snapshot <b>410</b> can provide a visual image of the application failure <b>408</b>. The tracking feature <b>402</b> can use the snapshot <b>410</b> to provide a better understanding on what cause the application failure <b>408</b>. That is, the snapshot <b>410</b> can be a still image of the application failure <b>408</b>, a recording of events leading up to the application failure <b>408</b> and/or a recording of events after the application failure <b>408</b>, an image of the coding language, etc. For instance, the tracking feature <b>402</b> can take a plurality of snapshots <b>410</b> when an application failure <b>408</b> occurs to provide an understanding of the application failure <b>408</b>.</p><p id="p-0043" num="0042">The tracking feature <b>402</b> can send the computing information <b>412</b> and the snapshot <b>410</b> to a memory device <b>404</b> of the system <b>400</b> through channel <b>416</b>. The memory device <b>404</b> can be used to store computing information <b>412</b> and snapshot <b>410</b> related to an application failure <b>408</b>. A user can access the computing information <b>412</b> and the snapshot <b>410</b> related to an application failure <b>408</b> to understand the issue with the application <b>406</b>. Using the computing information <b>412</b> and the snapshot <b>410</b> related to an application failure <b>408</b> to fix the application <b>406</b>. In some examples, the application <b>406</b> can be fixed faster using the computing information <b>412</b> and the snapshot <b>410</b> related to an application failure <b>408</b>, as compared to not using the computing information <b>412</b> and the snapshot <b>410</b>. That is, the tracking feature <b>402</b> provides information that allows an application to be quickly fixed.</p><p id="p-0044" num="0043">In some examples, the tracking feature <b>402</b> can send the computing information <b>412</b> and the snapshot <b>410</b> related to an application failure <b>408</b> to a server <b>414</b>, through channel <b>418</b>. That is, the server <b>414</b> can be used to store the computing information <b>412</b> and the snapshot <b>410</b> related to an application failure <b>408</b> and allow an authorized third party to access the information on the server <b>414</b>. In some examples, the server <b>414</b> can provide identification code to each computing information <b>412</b> and snapshot <b>410</b> so that each computing information <b>412</b> and snapshot <b>410</b> is connected with the proper application failure <b>408</b>.</p><p id="p-0045" num="0044">In some examples, the tracking feature <b>402</b> of the system <b>400</b> can be used to reduce the time to fix an application <b>406</b> on the system <b>400</b> by determining that an application failure <b>408</b> has occurred and creating computing information <b>412</b> and snapshots <b>410</b> relating to the application failure <b>408</b> and providing that information to a user. For instance, the non-transitory machine-readable medium <b>450</b> can store instructions executable the processing resource <b>421</b> to determine when an application <b>406</b> on the system <b>400</b> is activated, monitor the application <b>406</b> to determine an application failure <b>408</b> using a tracking feature <b>402</b>, take a snapshot <b>410</b> of computing information <b>412</b> related to the determined application failure <b>408</b>, determine a coding language of the determined application failure <b>408</b>, store the determined application failure <b>408</b>, snapshot <b>410</b> of computing information <b>412</b>, and the coding language of the determined application <b>406</b> to a memory device <b>404</b>, and send the stored determined application failure <b>408</b>, snapshot <b>410</b> of computing information <b>412</b>, and the coding language of the determined application <b>406</b> to a server <b>414</b>. In some examples, the processing resource <b>421</b> can cause the tracking feature <b>402</b> to generate an information request for additional snapshot <b>410</b> and/or computing information <b>412</b> responsive to the determining an application failure <b>408</b> occurred. For instance, the tracking device <b>402</b> can ask the user to provide computing information <b>412</b> and/or snapshots <b>410</b> related to the application failure <b>408</b>.</p><p id="p-0046" num="0045">In some examples, the tracking feature <b>402</b> can notify the user of the application failure <b>408</b> when a user is verified as an authorized user. For example, the processing resource <b>421</b> can cause the tracking feature <b>402</b> to generate an information request for identification of a user, and notify the user of the determined application failure <b>408</b> responsive to receiving the information request.</p><p id="p-0047" num="0046">In some examples, the application <b>406</b> can be a website or a system application that communicates with the tracking feature <b>402</b>. In some examples, the tracking feature <b>402</b> can communicate with the application <b>406</b> through an Application Programming Interface. The Application Programming Interface can allow the tracking feature <b>402</b> to monitor a computing device for an activation of an application <b>406</b>, activate the tracking feature <b>402</b> responsive to the activation of the application <b>406</b>, determine when an application <b>408</b> failure of the application <b>406</b> occurs subsequent to activation of the application <b>406</b>, analyze computing information <b>412</b> related to the determined application failure <b>408</b>, take a snapshot <b>410</b> of computing information <b>412</b> related to the determined application failure <b>408</b>, notify a user and/or third-party of the determined application failure <b>408</b>, store the analyzed computing information <b>412</b> and the snapshot <b>410</b> on a memory device <b>404</b>, via channel <b>416</b>, and send, via channel <b>418</b>, the stored analyzed computing information <b>412</b> and snapshot <b>410</b> to a server <b>414</b>.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example diagram of a non-transitory machine-readable medium <b>550</b> suitable with a system including a tracking feature. The non-transitory machine-readable medium <b>550</b> can be any type of volatile or non-volatile non-transitory memory, such as random-access memory (RAM), flash memory, read-only memory (ROM), storage volumes, a hard disk, or a combination thereof.</p><p id="p-0049" num="0048">The medium <b>550</b> stores instruction <b>551</b> executable by a processing resource to monitor an application for an activation and activate a tracking feature responsive to the activation of the application. In various examples, the processing resource can execute observe instructions <b>551</b> to monitor the system and the applications of the system. The processing resource can cause the tracking feature to determine if an application is activated. In addition, if it is determined that the application is activated, then the tracking feature can become fully activated. That is, the tracking feature can run in the background of the system and monitor the applications on the system for activity. Once an application is activated the tracking feature can completely activate and monitor the application for failures that can occur. Hence, the tracking feature can monitor the system for application activations and monitor the activated applications for application failures.</p><p id="p-0050" num="0049">In some examples, the tracking feature can activate when it is determined that an application of the system is activated. In some examples, the tracking feature can activate and use an Application Programming Interface to interact with the application. That is, the tracking feature can determine when a failure in the application occurs and document the type of failure and information related to the application failure as computing information. For instance, the tracking feature can analyze the application failure and determine information related to the application failure. For instance, the tracking feature can determine what caused the application failure, which aspect of the application malfunctioned, the time the malfunction occurred, the events leading up to the malfunction, the events that occurred after the malfunction, etc. In some examples, the information obtained by the tracking feature can assist in diagnosing the issue with the application. In addition, the computing information obtained by the tracking feature can make the recovery of the application faster, as compared to fixing the application without computing information obtained by the tracking feature.</p><p id="p-0051" num="0050">The medium <b>550</b> stores instruction <b>552</b> executable by a processing resource to determine an application failure and the coding language of the application failure. In some examples, the processing resource can execute determine instructions <b>552</b> to monitor the system and the applications of the system. In various examples, the tracking feature can analyze the application failure to determine the coding language associated with the application failure. The determining the coding language associated with the application failure can provide the user with information to remedy the application failure before a thorough assessment is made. For instance, if an application malfunctions because of erroneous coding language, the user and/or third-party will be notified and can quickly fix the application with the provided information. In addition, the coding language of the application failure can be used to assess the issue with the application. For instance, the coding language can provide understanding of the issue with the application and allow a user or other person to fix the application failure promptly.</p><p id="p-0052" num="0051">The medium <b>550</b> stores instruction <b>553</b> executable by a processing resource to take a snapshot related to an application failure. In various examples, the processing resource can execute capture instructions <b>553</b> to capture screenshots related to the application failure. The snapshot taken by the tracking feature can provide a better understanding of the application failure. For instance, the snapshots related to the application failure can be used to identify specific issue in the application. In some examples, the snapshots can be attachments added to the computing information in the form of recordings, a still image of the screen when the application failed, a still image of the coding language, etc.</p><p id="p-0053" num="0052">The medium <b>550</b> stores instruction <b>554</b> executable by a processing resource to send the snapshot, coding language, and determined application failure to a server. In various examples, the processing resource can execute transfer instructions <b>554</b> to transfer the snapshot, coding language, and determined application failure to a server. In some examples, the processing resource can cause the tracking feature to store computing information including the snapshot and the coding language on the server. The server can provide identification information that connects the computing information to a particular application failure. In some examples, the computing information can be stored based on the application failure. For instance, each application failure has its own computing information and each computing information related to an application failure is stored in a separate location from other computing information related to another application failure.</p><p id="p-0054" num="0053">The figures herein follow a numbering convention in which the first digit corresponds to the drawing figure number and the remaining digits identify an element or component in the drawing. Similar elements or components between different figures can be identified by the use of similar digits. For example, 102 can reference element &#x201c;02&#x201d; in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and a similar element can be referenced as <b>402</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0055" num="0054">Elements shown in the various figures herein can be capable of being added, exchanged, and/or eliminated so as to provide a number of additional examples of the disclosure. In addition, the proportion and the relative scale of the elements provided in the figures are intended to illustrate the examples of the disclosure and should not be taken in a limiting sense.</p><p id="p-0056" num="0055">The above specification and examples provide a description of the method and applications and use of the system and method of the present disclosure. Since many examples can be made without departing from the scope of the system and method, this specification merely sets forth some of the many possible example configurations and implementations.</p><p id="p-0057" num="0056">It should be understood that the descriptions of various examples may not be drawn to scale and thus, the descriptions can have a different size and/or configuration other than as shown therein.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system comprising:<claim-text>a processing resource; and</claim-text><claim-text>a non-transitory machine-readable medium storing instructions executable the processing resource to:<claim-text>determine when an application on the system is activated;</claim-text><claim-text>monitor the application to determine an application failure using a tracking feature;</claim-text><claim-text>take a snapshot of computing information related to the determined application failure;</claim-text><claim-text>determine a coding language of the determined application failure;</claim-text><claim-text>store the determined application failure, snapshot of computing information, and the coding language of the determined application to a memory device; and</claim-text><claim-text>send the stored determined application failure, snapshot of computing information, and the coding language of the determined application to a server.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising instructions to generate an information request for an additional snapshot of computing information responsive to the determined application failure.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the tracking feature is controlled on the application responsive to the activation of the application.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising instructions to:<claim-text>generate an information request for identification; and</claim-text><claim-text>notify a user of the determined failure responsive to receiving the information request.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the application is a website or a computing device application that communicates with the tracking feature.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A non-transitory machine-readable medium storing instructions executable by a processing resource to:<claim-text>monitor a computing device for an activation of an application;</claim-text><claim-text>activate a tracking feature responsive to the activation of the application;</claim-text><claim-text>determine when a failure of the application occurs subsequent to activation of the application;</claim-text><claim-text>analyze computing information related to the determined failure;</claim-text><claim-text>take a snapshot related to the determined failure;</claim-text><claim-text>notify a user of the determined failure;</claim-text><claim-text>store the analyzed computing information and the snapshot on a memory device; and</claim-text><claim-text>send the stored analyzed computing information and snapshot to a server.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further including instructions to generate information request for an additional snapshot of computing information related to the determined failure.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further including instructions to:<claim-text>determine the coding language of the determined failure; and</claim-text><claim-text>notify the user of the coding language of the determined failure.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further including instructions to:<claim-text>store the coding language on the memory device; and</claim-text><claim-text>send the stored coding language to the server.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further including instructions to generate information request for feedback related to the determined failure, responsive to notifying the user of the determined failure.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further including instructions to prompt the user for identification before to notifying the user of the determined failure.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A method comprising:<claim-text>determining when an application on the system is running;</claim-text><claim-text>activating a tracking feature responsive to the determination that the application is running;</claim-text><claim-text>monitoring the application to determine an application failure;</claim-text><claim-text>taking a snapshot of information related to the determined application failure;</claim-text><claim-text>storing information related to the determined application failure and the snapshot to a server; and</claim-text><claim-text>allowing access to the stored information and the stored snapshot responsive to identification with identification credentials authorized to access the server.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>activating the tracking feature for a plurality of applications responsive to activating the corresponding plurality of applications;</claim-text><claim-text>determining application failures for the plurality of applications substantially simultaneously;</claim-text><claim-text>analyzing information related to the determined application failures; and</claim-text><claim-text>sending the information to the server.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising storing the information related to the determined application failure for each application of the plurality of application separately.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>analyzing the coding language of the determined application failure; and</claim-text><claim-text>providing the analyzed coding language to a user.</claim-text></claim-text></claim></claims></us-patent-application>