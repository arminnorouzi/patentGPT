<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004401A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004401</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363606</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>445</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0484</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>245</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>451</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>44505</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0484</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>245</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>451</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND COMPUTER IMPLEMENTED METHODS FOR INTEGRATING SOFTWARE PLATFORMS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Atlassian Pty Ltd.</orgname><address><city>Sydney</city><country>AU</country></address></addressbook><residence><country>AU</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Atlassian Inc.</orgname><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Owen</last-name><first-name>Christopher</first-name><address><city>Sydney</city><country>AU</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Vernon</last-name><first-name>Andrew</first-name><address><city>Sydney</city><country>AU</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Ruflin</last-name><first-name>Michael Johannes</first-name><address><city>Sydney</city><country>AU</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Barrett</last-name><first-name>Jeremey</first-name><address><city>Sydney</city><country>AU</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Okumus</last-name><first-name>Halit</first-name><address><city>Ankara</city><country>TR</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Takak</last-name><first-name>Metin</first-name><address><city>Ankara</city><country>TR</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Ulusoy</last-name><first-name>&#xdc;mit</first-name><address><city>Ankara</city><country>TR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Described herein is a computer implemented method for confirming the completion of an onboarding setup item of an IT Service Management (ITSM) system. The system comprises a first software platform, a second software platform and an intermediary onboarding platform operatively associated with a database for storing a state of the setup item, the setup item being associated with at least one of the first and second software platforms. The method comprises receiving input data associated with at least one of the first and second software platforms; querying the received input data against completion criteria that is dependent on a predetermined item type; updating a state of the setup item; and displaying a visual indication of confirmation of the completion of the setup item.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="190.58mm" wi="151.55mm" file="US20230004401A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="220.90mm" wi="153.59mm" file="US20230004401A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="145.03mm" wi="152.82mm" file="US20230004401A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="221.83mm" wi="145.37mm" file="US20230004401A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="223.10mm" wi="148.17mm" file="US20230004401A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="218.86mm" wi="141.48mm" file="US20230004401A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="213.87mm" wi="140.29mm" file="US20230004401A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">Aspects of the present disclosure are directed to integration of software platforms, and in particular to integration of the onboarding processes associated with the integration of software platforms.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Background information described in this specification is background information known to the inventors. Reference to this information as background information is not an acknowledgment or suggestion that this background information is prior art or is common general knowledge to a person of ordinary skill in the art.</p><p id="p-0004" num="0003">Software development is a complex process which can involve the use of multiple different tools and systems. Pieces of software may be developed from scratch, that is, a programmer can write brand new software code. Such development, whilst potentially being very time consuming and laborious, also has the potential benefit of avoiding any technical or functional constraints of an existing system. The addition of new features to software platforms may also be achieved by integrating one existing software product into another existing software product, that is, a programmer can take two or more individually complete pieces of existing software and write additional code or amend the code of the existing software so that the functionality of each existing software product are included in a new integrated product.</p><p id="p-0005" num="0004">Regarding the latter, the software products that are to be integrated are often developed by different parties, totally independently and without any regard or thought to the possible future desire to integrate with another foreign product. Therefore, the process of integrating two existing software products often involves solving numerous technical compatibility issues in order for the existing products to function together in a relatively cohesive fashion.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">Disclosed herein is a computer implemented method for confirming the completion of an onboarding setup item of an IT Service Management (ITSM) system, the system comprising a first software platform, a second software platform, and an intermediary onboarding platform operatively associated with a database for storing a state of the setup item, the setup item being associated with at least one of the first and second software platforms, the method comprising: receiving, via a user interface, input data associated with at least one of the first and second software platforms; querying the received input data against completion criteria from the at least one of the first and second software platforms, wherein the setup item has a predetermined item type, the predetermined item type being one of a critical setup item type, and a non-critical setup item type, whereby the completion criteria is dependent on the predetermined item type such that: if the setup item is the critical setup item type, the completion criteria comprises reconciling the state of the setup item with corresponding data from at least one of the first and second software platforms which ascertains if one or more tasks associated with the setup item have been completed; and if the setup item is the non-critical setup item type, the completion criteria comprises comparing, by the user interface, the received input data against one or more predetermined user interface actions to be completed, wherein the one or more actions being determined as completed infers the setup item is confirmed as completed; updating the state of the setup item in the associated database to a state indicative of the setup item being completed; and displaying, by the user interface, a visual indication of confirmation of the completion of the setup item.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006">In the drawings:</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an IT service management (ITSM) framework system according to aspects of the present disclosure/in which various features of the present disclosure may be implemented.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a computing system with which various embodiments of the present disclosure may be implemented/configurable to perform various features of the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> provides a flowchart indicating operations performed by the systems of <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> to update an indicative completion state of an integrated onboarding setup item of a critical setup item type.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b></figref> provides a flowchart indicating operations performed by the systems of <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> to update an indicative completion state of an integrated onboarding setup item of a non-critical setup item type.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIGS. <b>5</b>A and <b>5</b>B</figref> provide examples of wireframes of a user interface application of the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0013" num="0012">While the description is amenable to various modifications and alternative forms, specific embodiments are shown by way of example in the drawings and are described in detail. It should be understood, however, that the drawings and detailed description are not intended to limit the invention to the particular form disclosed. The intention is to cover all modifications, equivalents, and alternatives falling within the scope of the present invention as defined by the appended claims.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0014" num="0013">In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It will be apparent, however, that the embodiments described herein may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessary obscuring.</p><p id="p-0015" num="0014">As described above, existing independent software products can be integrated into a single integrated software product. Such existing independent software products include, amongst other systems, issue tracking systems and incident management systems, for example.</p><p id="p-0016" num="0015">Very generally speaking, an issue tracking system such as Atlassian's Jira allows users to perform various actions with respect to the creation and management of issues. This includes, for example, defining issue types, issue workflows, creating projects, creating issues, associating issues with projects and/or other issues, transitioning issues between workflow states, editing information associated with issues, assigning issues to specific people/teams. An issue tracking system such as Jira also allow for certain operations to be automated. For example automation rules may be created which if triggered, cause certain operations to be performed. For example, an automation rule may be defined that causes a particular user (or user group) to be notified if an issue transitions from one particular state to another.</p><p id="p-0017" num="0016">Use of an issue tracking system may involve creating a project corresponding to a software product (for example, project A corresponds to software product A). Various aspects of the software development process for that product can then be tracked: for example a person who comes up with an idea for a new feature for software product A may create a &#x2018;new feature&#x2019; issue (or set of related issues) for the feature and associate the issue with project A. As development of feature A progresses (for example, planned, developed, built, tested, released), the feature A issue transitions through various workflow states with information being added to the issue by the relevant stakeholders.</p><p id="p-0018" num="0017">Also generally speaking, an incident management system such as Atlassian's Opsgenie monitors one or more software platforms, and tracks and alerts users to incidents (that is, an unplanned interruption, or potential interruption, to an IT service and/or quality reduction of an IT service) or major incidents (that is, an incident or incidents that result in significant disruption to a service overall) in order to have those incidents or major incidents resolved efficiently with the aim of minimising downtime. Further, the incident management system provides a corresponding level of alert and notification (through various avenues including email, voice calls, SMS, and/or specific push notifications, amongst others) and directs the alerts and notifications to the relevant personnel in order to correct the incident within an acceptable time frame, within the context of the overall system. This includes, for example, defining incident types, issue correction workflows based on the incident, generally reformat monitoring data into more meaningful information including providing reference documentation that may assist in rectifying an incident, and assigning incidents to specific users/teams.</p><p id="p-0019" num="0018">As noted above, an incident management system such as Opsgenie may be integrated into (or with) an existing software system, such as an IT Service Management framework, in order to track incidents that arise during use of the IT Service Management framework. Such use commonly involves planning and actions in relation to the use of an IT Service Management workspace, and the development of software projects both from the early developmental stages prior to prototype and/or minimum viable product (MVP) completion to ongoing development of additional features of fully operational software. It will be appreciated that incident management systems can also be integrated into other software such as other software as a service (SaaS) platforms or licensed software products, and provide incident management for the ongoing service.</p><p id="p-0020" num="0019">In view of the integration of an issue tracking system with an incident management system into the one integrated system, or at least the integration of the entire functionality of each of these two systems into the one integrated system, the present disclosure relates to providing systems and methodologies for integrating the respective onboarding processes of an issue tracking system and an incident management system into a single seamless integrated onboarding process for the two collectively integrated systems that enables the integrated system to be initialised, from an external perspective, by way of a single onboarding process.</p><p id="p-0021" num="0020">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, there is illustrated an IT service management (ITSM) framework system <b>100</b> which exists in a networked environment in which embodiments and features of the present disclosure are implemented. System <b>100</b> includes: a first software platform in the form of an Issue Tracking System (ITS) <b>110</b>; a second software platform in the form of an Incident Management System (IMS) <b>120</b>; and an intermediary onboarding platform <b>130</b>, all of which are interconnected by a communications network <b>102</b>. It is noted that, for ease of reference: the acronyms in parentheses will be used herein in place of each of the full form names of the systems. In some embodiments, platform <b>130</b> is a microservice platform, but in other embodiments, may be a platform other than a microservice. Platform <b>130</b> is operatively associated with a database <b>140</b> (which, in the present embodiments, is a NoSQL database such as Amazon's DynamoDB) and is configured to communicate directly with each of ITS <b>110</b> and IMS <b>120</b> via network <b>102</b> in order to coordinate integrated onboarding of ITS <b>110</b> and IMS <b>120</b>. Further, ITSM system <b>100</b> also includes a user interface which, in the present embodiments, includes a number of components one of which is a user interface application <b>150</b> for enabling interaction with each of: ITS <b>110</b>, IMS <b>120</b> and platform <b>130</b> via network <b>102</b>. User interface application <b>150</b> is configured to operate on a user device <b>160</b> and display content sourced from both ITS <b>110</b> and IMS <b>120</b>.</p><p id="p-0022" num="0021">User device <b>160</b> is a computer processing system with user interface application <b>150</b> operable thereon essentially operating as both ITS and IMS client applications integrated into a single user interface application. When executed by user device <b>160</b> (for example, by a processing unit such as <b>202</b> described below), user interface application <b>150</b> configures user device <b>160</b> to provide client-side ITS and IMS functionality. This involves communicating (using a communication interface such as <b>216</b> described below) with ITS <b>110</b> and IMS <b>120</b> (and, in particular, ITS server application <b>112</b> and IMS server application <b>122</b>). User interface application <b>150</b> is accessed via a web browser (such as Chrome, Safari, Internet Explorer, Firefox, or an alternative we browser) which communicates with the web server of ITS server application <b>122</b> and IMS server application <b>122</b> using http/https protocols. It will be appreciated that in other embodiments, the user interface application <b>150</b> is other than browser-based, such as a dedicated client-side application specific programmed to access the other components of system <b>100</b> using defined application programming interface (API) calls, but generally in a similar fashion to the browser-based user interface application <b>150</b> (as will be described in more detail below).</p><p id="p-0023" num="0022">It will be appreciated that user device <b>160</b> will also have other applications installed/running thereon, for example an operating system.</p><p id="p-0024" num="0023">Furthermore, it will be appreciated that in reality, multiple individual user devices will run user interface application <b>150</b>, with each user device configured to interact with ITS <b>110</b> and IMS <b>120</b>. User device <b>160</b> may be any form of computing device as will be discussed in more detail below with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0025" num="0024">ITS <b>110</b> hosts ITS server application <b>112</b>. ITS server application <b>112</b> is executed by ITS <b>110</b> to configure it to provide ITS server-side functionality to application(s) of platform <b>130</b> (as will be discussed further below) and/or to one or more corresponding client applications (for example, user interface application <b>150</b> as discussed above). In other words, ITS server application <b>112</b> provides ITS server-side functionality referred to as &#x201c;back-end&#x201d; functionality and interactions with user interface application <b>150</b> referred to as &#x201c;front-end&#x201d; functionality. It will be appreciated that back-end and front-end functionality may comprise additional functionality and interactions to those set out above. ITS server application <b>112</b> comprises one or more application programs, libraries, APIs or other software elements that implement the features and functions that are described herein. ITS server application <b>112</b> takes the form of a web server such as Apache, IIS, nginx, GWS, or an alternative web server, or a combination of web servers of various types for interacting, directly or indirectly, with user interface application <b>150</b> and for interacting with application(s) of platform <b>130</b> over network <b>102</b>. In embodiments where user interface application <b>150</b> is a dedicated application, ITS server application <b>112</b> will be an application server configured specifically to interact with the dedicated version of user interface application <b>150</b>.</p><p id="p-0026" num="0025">In other embodiments, ITS <b>110</b> is provided with both web server and application server modules.</p><p id="p-0027" num="0026">Further, the back-end functionality of ITS server application <b>112</b> includes accessing one or more ITS databases of ITS <b>110</b> (collectively denoted by reference <b>114</b>) which store data relevant to the services being offered by ITS <b>110</b>. Such data includes data indicative of the completion of onboarding setup items from an ITS onboarding setup item checklist. Other such data includes, for example, user account data, user permissions data, data in respect of issues maintained by the ITS, and/or other data relevant to the operations of the ITS.</p><p id="p-0028" num="0027">One example of an ITS <b>110</b> that can be configured to provide the functionality described herein is Jira.</p><p id="p-0029" num="0028">IMS <b>120</b> hosts IMS server application <b>122</b>. IMS server application <b>122</b> is executed by IMS <b>120</b> to configure it to provide IMS server-side functionality to application(s) of platform <b>130</b> and/or to one or more corresponding client applications (for example, user interface application <b>150</b>). In other words, IMS server application <b>122</b> provides IMS server-side functionality referred to as &#x201c;back-end&#x201d; functionality and interactions with user interface application <b>150</b> referred to as &#x201c;front-end&#x201d; functionality. It will be appreciated that &#x201c;back-end&#x201d; and &#x201c;front-end&#x201d; functionality may comprise additional functionality and interactions to that set out above. IMS server application <b>122</b> comprises one or more application programs, libraries, APIs or other software elements that implement the features and functions that are described herein. IMS server application <b>122</b> takes the form of a web server such as Apache, IIS, nginx, GWS, or an alternative web server, or a combination of web servers of various types for interacting, directly or indirectly, with user interface application <b>150</b> and for interacting with application(s) of platform <b>130</b> over network <b>102</b>. In embodiments where user interface application <b>150</b> is a dedicated application, IMS server application <b>122</b> will be an application server configured specifically to interact with the dedicated version of user interface application <b>150</b>.</p><p id="p-0030" num="0029">In other embodiments, IMS <b>120</b> is provided with both web server and application server modules.</p><p id="p-0031" num="0030">Further, the back-end functionality of IMS server application <b>122</b> includes accessing one or more IMS databases of IMS <b>120</b> (collectively denoted by reference <b>124</b>) which store data relevant to the services being offered by IMS <b>122</b>. Such data includes data indicative of the completion of onboarding setup items from an IMS onboarding setup item checklist. Other such data includes, for example, user account data, user permissions data, data in respect of issues maintained by the IMS, and/or other data relevant to the operations of the IMS.</p><p id="p-0032" num="0031">One example of an IMS <b>120</b> that can be configured to provide the functionality described herein is Opsgenie.</p><p id="p-0033" num="0032">Platform <b>130</b> hosts an intermediary onboarding application <b>132</b>. Onboarding application <b>132</b> is executed by platform <b>130</b> to configure it to provide server-side functionality, in particular storing, maintaining and updating item states for an integrated onboarding setup item checklist. In other embodiments, onboarding application <b>132</b> is executed by platform <b>130</b> to configure it to provide integrated ITS and IMS server-side functionality to one or more corresponding client applications (for example, user interface application <b>150</b>). Onboarding application <b>132</b> comprises one or more application programs, libraries, APIs or other software elements that implement the features and functions that are described herein. Onboarding application <b>132</b> also takes the form of a web server (as described above) for interacting, directly or indirectly, with user interface application <b>150</b> and for interacting directly with each of ITS server application <b>112</b> and IMS server application <b>122</b>. In other embodiments, onboarding application <b>132</b> may interact indirectly with each of ITS server application <b>112</b> and IMS server application <b>122</b> (for example, making an API call to an alternative endpoint and that endpoint receiving and passing the request to ITS server application <b>112</b> and/or IMS server application <b>122</b>). In embodiments where user interface application <b>150</b> is a dedicated application, onboarding application <b>132</b> will be an application server configured specifically to interact with the dedicated version of user interface application <b>150</b>, along with each of ITS server application <b>112</b> and IMS server application <b>122</b>.</p><p id="p-0034" num="0033">Platform <b>130</b> is specifically developed for the purpose of integrating the onboarding processes and aggregating state records of onboarding setup items for ITS <b>110</b> and IMS <b>120</b>, and in particular to storing, maintaining and updating item states for an integrated onboarding setup item checklist. The system is such that user interface application <b>150</b> will display to the user a single integrated onboarding process based on a single an integrated onboarding setup item checklist.</p><p id="p-0035" num="0034">Further, onboarding application <b>132</b> provides access to database <b>140</b> which stores data relevant to the functionality being offered by platform <b>130</b>, that functionality primarily being, very generally speaking, to maintain the integrated onboarding setup item checklist of integrated onboarding setup items, update the checklist item states when the relevant completion criteria is met and, in some embodiments, provide this information for display to the user on user device <b>160</b> via user interface application <b>150</b>. Such data stored in database <b>140</b> includes state data indicative of completion of integrated onboarding setup items from an integrated onboarding setup item checklist, which will be explained in more detail below. As noted above, database <b>140</b> is a NoSQL database. However, in other embodiments, database <b>140</b> is of a type other than NoSQL. Further, it will be appreciated that database <b>140</b>, in various embodiments, may be a single database or multiple networked databases depending on the requirements of system <b>100</b>.</p><p id="p-0036" num="0035">ITS <b>110</b> and IMS <b>120</b> are configured to broadcast (e.g. via a publication/subscription type service) events in response to certain changes, including state changes. Platform <b>130</b> subscribes to the event service of ITS <b>110</b> and IMS <b>120</b> such that it is configured to respond to certain events broadcast by ITS <b>110</b> and IMS <b>120</b>.</p><p id="p-0037" num="0036">In other embodiments, onboarding application <b>132</b> is provided with both web server and application server modules.</p><p id="p-0038" num="0037">Communications network <b>102</b> may be a local area network, public network (for example, the Internet), or a combination of both.</p><p id="p-0039" num="0038">Integrated onboarding setup item checklists can be created based on: a specific ITSM project; a specific customised ITSM workspace for creating projects; a specific known user of system <b>100</b>; and an aggregate of the three prior bases. Broadly speaking, when, for example, a new project is created or a new user is added to a project or workspace, ITS <b>110</b> and/or IMS <b>120</b> will direct platform <b>130</b> to create a storage entity within database <b>140</b> to store a new integrated onboarding setup item checklist based on the project created or user added, such factors determining which integrated onboarding setup item checklist template is used as a starting point (the checklist can be amended to vary from the template depending on specific requirements of the project or user). Each integrated onboarding setup item checklist includes a number of general setup parameters also stored in database <b>140</b> including: the type of workspace, which identifies the tenant across ITS <b>110</b> and IMS <b>120</b>; an ID of the workspace (that is, an identifier of the workspace); the type of container (for example, project or Opsgenie team); ID of the container (that is, an identifier of the container); ID of the checklist itself (that is, an identifier of the checklist which is validated against the workspace type); and account ID (that is, an identifier of the user). For example, in relation to specific user-based integrated onboarding setup item checklists, the parameters associated with the checklist include (with variable name in parentheses) amongst others: the ID of the user (accountld); the ID of the container (containerld); the type of checklist (listKey); the type of workspace, which identifies the tenant across ITS <b>110</b> and IMS <b>120</b> (workspaceTypeKey); the ID of the workspace (workspaceld); the version of the checklist, if a checklist in relation to a user has been updated or altered over time (listVersion) could be additions to checklist, the time a checklist was created (createdTimeStamp); and the setup items of the checklist that have been completed (completedltems).</p><p id="p-0040" num="0039">While ITS <b>110</b>, IMS <b>120</b> and platform <b>130</b> are each depicted and described as a single server machine, alternative architectures are possible. For example, in certain cases a clustered server architecture may be used where multiple server computing instances (or nodes) are instantiated on one or more computer processing systems to meet system demand. Conversely, in the case of small enterprises with relatively simple requirements ITS <b>110</b>, IMS <b>120</b> and platform <b>130</b> may be from a stand-alone implementation (i.e. a single computer directly accessed/used by end users) or each hosted at the same locale whereby external access (for example, by user interface application <b>150</b>) is facilitated by network <b>102</b>. Each of ITS <b>110</b>, IMS <b>120</b> and platform <b>130</b> have been illustrated as single systems. However, each of ITS <b>110</b>, IMS <b>120</b> and platform <b>130</b> can be a scalable server system comprising multiple nodes which can be commissioned/decommissioned based on processing requirements.</p><p id="p-0041" num="0040">While system <b>100</b> has been provided as an illustrated example networked environment, alternative system environments/architectures are possible.</p><p id="p-0042" num="0041">It is noted that ITS <b>110</b> and IMS <b>120</b> are existing independent software products that are not readily compatible. Insofar as ITS <b>110</b> and IMS <b>120</b> are integrated into a single software platform, these back-end server systems essentially function individually as standalone platforms that do not communicate directly with each other. Whilst the onboarding functionality is driven by the user interface along with ITS <b>110</b> and IMS <b>120</b>, the integrated onboarding setup item checklist and the respective item states are maintained by platform <b>130</b> in database <b>140</b>. This arrangement negates the need for ITS <b>110</b> and IMS <b>120</b> to communicate directly with each other in respect of the integrated onboarding. In alternate embodiments, the onboarding functionality is driven by platform <b>130</b>.</p><p id="p-0043" num="0042">While the onboarding application <b>132</b> (and associated database <b>140</b>) are depicted as being deployed on a separate platform (that being platform <b>130</b>) they could be deployed on either ITS <b>110</b> or IMS <b>120</b>.</p><p id="p-0044" num="0043">User interface application <b>150</b> is generally able to directly communicate with ITS <b>110</b>, IMS <b>120</b> and platform <b>130</b>. Generally speaking, however, user interface <b>150</b> will respond to ITS <b>110</b> and IMS <b>120</b> in regards to the content displayed sourced from ITS <b>110</b> and IMS <b>120</b> respectively. One exception is for content related specifically to the onboarding of ITS <b>110</b>, where user interface application <b>150</b> continually polls platform <b>130</b> for state changes and will update itself based on any relevant changes at platform <b>130</b>.</p><p id="p-0045" num="0044">It will be appreciated that in some embodiments, platform <b>130</b> is able to communicate with ITS server application <b>112</b> specifically for directly driving front-end functionality (i.e. not via the back-end functionality of ITS server application <b>112</b>) such as providing direct communicating instructions to user interface application <b>150</b> for data related to ITS <b>110</b> (this includes content that is displayed in relation to ITS <b>110</b> by user interface application <b>150</b>). However, for data related to IMS <b>120</b> (such as content that is displayed in relation to IMS <b>120</b> by user interface application <b>150</b>), platform <b>130</b> firstly communicates to IMS server application <b>122</b> that in turn drives the front-end functionality (i.e. via the back-end functionality of IMS server application <b>122</b>) such as communicating instructions to user interface application <b>150</b> for data related to IMS <b>120</b>. In alternate embodiments, platform <b>130</b> is able to communicate with IMS server application <b>122</b> specifically for directly driving front-end functionality (i.e. not via the back-end functionality of IMS server application <b>122</b>) such as providing direct communicating instructions to user interface application <b>150</b> for data related to IMS <b>120</b> (such as content that is displayed in relation to IMS <b>120</b> by user interface application <b>150</b>). In yet other embodiments, for data related to ITS <b>110</b> (such as content that is displayed in relation to ITS <b>110</b> by user interface application <b>150</b>), platform <b>130</b> firstly communicates to ITS server application <b>112</b> that in turn drives front-end functionality (i.e. via the back-end functionality of ITS server application <b>112</b>) such as communicating instructions to user interface application <b>150</b> for data related to ITS <b>110</b>. In yet other embodiments, user interface application <b>150</b> is also able to directly communicate with platform <b>130</b>.</p><p id="p-0046" num="0045">Various embodiments and features of the present disclosure are implemented using one or more computer processing systems.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>2</b></figref> provides a block diagram of a computer processing system <b>200</b> configurable to implement embodiments and/or features described herein. System <b>200</b> is a general-purpose computer processing system. It will be appreciated that <figref idref="DRAWINGS">FIG. <b>2</b></figref> does not illustrate all functional or physical components of a computer processing system. For example, no power supply or power supply interface has been depicted. However, system <b>200</b> will either carry a power supply or be configured for connection to a power supply (or both). It will also be appreciated that the particular type of computer processing system will determine the appropriate hardware and architecture, and alternative computer processing systems suitable for implementing features of the present disclosure may have additional, alternative, or fewer components than those depicted.</p><p id="p-0048" num="0047">Computer processing system <b>200</b> includes at least one processing unit <b>202</b>&#x2014;for example a general or central processing unit, a graphics processing unit, or an alternative computational device). In other embodiments, computer processing system <b>200</b> may include a plurality of computer processing units. In some instances, where a computer processing system <b>200</b> is described as performing an operation or function all processing required to perform that operation or function will be performed by processing unit <b>202</b>. In other instances, processing required to perform that operation or function may also be performed by remote processing devices accessible to and useable by (either in a shared or dedicated manner) system <b>200</b>.</p><p id="p-0049" num="0048">Through a communications bus <b>204</b>, processing unit <b>202</b> is in data communication with a one or more computer readable storage devices which store instructions and/or data for controlling operation of the processing system <b>200</b>. In this example system <b>200</b> includes a system memory <b>206</b> (for example, BRSS), volatile memory <b>208</b> (for example, random access memory such as one or more DRAM modules), and non-volatile (or non-transitory) memory <b>210</b> (for example, one or more hard disk or solid state drives). Such memory devices may also be referred to as computer readable storage media.</p><p id="p-0050" num="0049">System <b>200</b> also includes one or more interfaces, indicated generally by <b>212</b>, via which system <b>200</b> interfaces with various devices and/or networks. Generally speaking, other devices may be integral with system <b>200</b>, or may be separate. Where a device is separate from system <b>200</b>, connection between the device and system <b>200</b> may be via wired or wireless hardware and communication protocols, and may be a direct or an indirect (e.g. networked) connection.</p><p id="p-0051" num="0050">Wired connection with other devices/networks may be by any appropriate standard or proprietary hardware and connectivity protocols, for example Universal Serial Bus (USB), FireWire, eSATA, Thunderbolt, Ethernet, SS/2, Parallel, Serial, HDMI, DVI, VGA, SCSI, AudioPort, and/or any other possible wired connection hardware/connectivity protocol.</p><p id="p-0052" num="0051">Wireless connection with other devices/networks may similarly be by any appropriate standard or proprietary hardware and communications protocols, for example infrared, Bluetooth, WiFi; near field communications (NFC); Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), long term evolution (LTE), code division multiple access (CDMA&#x2014;and/or variants thereof such as wideband CDMA), and/or any other possible wireless hardware/connectivity protocol.</p><p id="p-0053" num="0052">Generally speaking, and depending on the particular system in question, devices to which system <b>200</b> connects&#x2014;whether by wired or wireless means&#x2014;include one or more input/output devices (indicated generally by input/output device interface <b>214</b>). Input devices are used to input data into system <b>200</b> for processing by the processing unit <b>202</b>. Such input devices may include keyboards, mice, trackpads, microphones, accelerometers, proximity sensors, GPS devices and the like. Output devices allow data to be output by system <b>200</b>. Such output devices may include devices such as a CRT displays, LCD displays, LED displays, plasma displays, touch screen displays, speakers, vibration modules, LEDs/other lights, and such like. System <b>200</b> may also include or connect to devices which may act as both input and output devices, for example memory devices (hard drives, solid state drives, disk drives, compact flash cards, SD cards and the like) which system <b>200</b> can read data from and/or write data to, and touch screen displays which can both display (output) data and receive touch signals (input). It will be appreciated that not all computer processing systems will include all input/output mentioned devices, and that additional and alternative devices to those mentioned may well be used.</p><p id="p-0054" num="0053">System <b>200</b> also includes one or more communications interfaces <b>216</b> for communication with a network, such as network <b>102</b> of system <b>100</b> (and/or a local network, for example, within ITS <b>110</b>). Via a communications interface(s) <b>216</b>, system <b>200</b> can communicate data to and receive data from networked devices, which may themselves be other computer processing systems.</p><p id="p-0055" num="0054">System <b>200</b> may be any suitable computer processing system, for example, a server computer system, a desktop computer, a laptop computer, a netbook computer, a tablet computing device, a mobile/smart phone, a personal digital assistant, or an alternative computer processing system.</p><p id="p-0056" num="0055">System <b>200</b> stores or has access to computer applications (also referred to as software or programs)&#x2014;i.e. computer readable instructions and data which, when executed by the processing unit <b>202</b>, configure system <b>200</b> to receive, process, and output data. Instructions and data can be stored on non-transitory computer readable medium accessible to system <b>200</b>. For example, instructions and data may be stored on non-transient memory <b>210</b>. Instructions and data may be transmitted to/received by system <b>200</b> via a data signal in a transmission channel enabled (for example) by a wired or wireless network connection over interface such as <b>212</b>.</p><p id="p-0057" num="0056">Applications accessible to system <b>200</b> will typically include an operating system application such as Microsoft Windows&#xae;, Apple macOS, Apple iOS, Android, Unix, or Linux.</p><p id="p-0058" num="0057">System <b>200</b> also stores or has access to applications which, when executed by the processing unit <b>202</b>, configure system <b>200</b> to perform various computer-implemented processing operations described herein. For example, and referring to the networked environment of system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> above: user device <b>160</b> runs user interface application <b>150</b> which configures the user device to perform various operations described herein.</p><p id="p-0059" num="0058">In some cases part or all of a given computer-implemented method will be performed by system <b>200</b> itself, while in other cases processing may be performed by other devices in data communication with system <b>200</b>.</p><p id="p-0060" num="0059">As will be appreciated, each of ITS <b>110</b> and IMS <b>120</b> have respective onboarding requirements in the form of onboarding setup items to be completed for each of ITS <b>110</b> and IMS <b>120</b> to be initialised for &#x201c;normal&#x201d; use. System <b>100</b> prompts the user to complete these items through an initialisation process facilitated by a displayed integrated onboarding user interface of the user interface presented to the user via user interface application <b>150</b>. The displayed integrated onboarding user interface includes a high level graphical version of an integrated onboarding setup item checklist, which will be described in more detail further below with reference to <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>. In that regard, as noted above, each of ITS <b>110</b> and IMS <b>120</b> include their own respective checklist of onboarding setup items to be completed.</p><p id="p-0061" num="0060">For example, when a new project is commenced within system <b>100</b>, such as a new Jira ITSM project, ITS application <b>112</b> and IMS application <b>122</b> initiate a checklist setup event that, as noted above, includes instructing onboarding application <b>132</b> to create a new storage entity within database <b>140</b> for storing a new integrated onboarding setup item checklist containing a plurality of integrated onboarding setup items based on a new integrated onboarding setup item checklist template. Each of the integrated onboarding setup items from a checklist includes an item state indicative of completion or non-completion. As indicated above, the item states are stored within database <b>140</b>. For completeness, the integrated onboarding setup item checklist may include only a single integrated onboarding setup item, but in practice this would be an extremely rare scenario.</p><p id="p-0062" num="0061">The plurality of integrated onboarding setup items is based on the respective onboarding setup items for each of ITS <b>110</b> and IMS <b>120</b>, such that completion of the integrated onboarding setup items is indicative of completion of onboarding setup items for each of ITS <b>110</b> and IMS <b>120</b>. In other embodiments, the integrated onboarding setup item checklist is manually curated in that the integrated onboarding setup items are manually chosen and inputted into system <b>100</b> to form the checklist.</p><p id="p-0063" num="0062">An integrated onboarding setup item refers to is what is presented to the user by the user interface application <b>150</b> during an onboarding process. Each integrated onboarding setup item includes its own specific unique completion criteria that will be predefined by ITS <b>110</b> and/or IMS <b>120</b>, this predefinition including one or more predefined actions or tasks to be completed. The user is prompted by user interface application <b>150</b> to complete the one or more predefined actions or tasks such that, once they are completed, the completion criteria is met. Once the completion criteria is confirmed as met, the state associated with the integrated onboarding setup item that is stored in database <b>140</b> will be updated from a state indicative of the setup item not being completed to a state indicative of the setup item being completed. User interface application <b>150</b> will prompt the to complete one or more predefined actions or tasks in order to meet the completion criteria for each and every integrated onboarding setup item on the checklist so that the onboarding process is completed and normal use of system <b>100</b> can commence.</p><p id="p-0064" num="0063">For a newly created integrated onboarding setup item checklist, generally speaking, the setup item states default to a state indicative of the integrated onboarding setup items not having been completed, referred to here as &#x201c;not completed&#x201d;, as would be the case for a new project where the onboarding process has yet to commence. The states of the setup items will only update or transition to a state indicative of the integrated onboarding setup items being &#x201c;completed&#x201d; once certain requisite completion criteria in the form of one or more predefined actions or tasks have been undertaken. One exception is if one setup item of the integrated onboarding setup item checklist is to actually create the integrated onboarding setup item checklist, in which case that setup item would be allotted a &#x201c;completed&#x201d; indicative state on the newly created integrated onboarding setup item checklist. It will be appreciated that in other embodiments, there will exist other setup item states in addition to &#x201c;not completed&#x201d; and &#x201c;completed&#x201d;, for example, transitional states such as &#x201c;partially completed&#x201d; which indicates some but not all of the requisite completion criteria is met.</p><p id="p-0065" num="0064">Each integrated onboarding setup item has a predetermined item type, the predetermined item type being one of: a critical setup item type; and a non-critical setup item type. Completion criteria is dependent on the predetermined item type, as well as the specific requirements on the individual integrated onboarding setup item. It will be appreciated that the plurality of integrated onboarding setup items of the integrated onboarding setup item checklist will be a combination of item types, i.e. at least one of the integrated onboarding setup items being of the critical setup item type and at least one of the integrated onboarding setup items being of the non-critical setup item type. In some scenarios, all items on the integrated onboarding setup item checklist will be of the same item type, i.e. all of the critical setup item type or all of the non-critical setup item type.</p><p id="p-0066" num="0065">An integrated onboarding setup items of the critical setup item type is such that the indicative state of that integrated onboarding setup item can only be updated to &#x201c;completed&#x201d; once ITS <b>110</b> and/or IMS <b>120</b> reconciles data from ITS database <b>114</b> and/or IMS database <b>124</b> related to one or more tasks associated with the integrated onboarding setup item, or related to a corresponding setup item for ITS <b>110</b> and/or IMS <b>120</b>, with platform <b>130</b>. This reconciling determines with certainty that the requisite completion criteria has been met, and completed correctly. Therefore, the indicative state of that integrated onboarding setup item is updated to &#x201c;completed&#x201d; with absolute certainty that is required for a critical item type if the reconciling results in the ITS database <b>114</b> and/or IMS database <b>124</b> confirming that the requisite completion criteria has been met, and completed correctly. As such, the state indicating the integrated onboarding setup item is &#x201c;completed&#x201d; for critical items in the database <b>140</b> will mirror the completed status of any one or more corresponding onboarding setup item for ITS <b>110</b> and/or IMS <b>120</b>.</p><p id="p-0067" num="0066">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, there is illustrated the process undertaken by a computer processing system of system <b>100</b> for updating the state of an integrated onboarding setup item that is a critical item type, the process denoted by reference <b>300</b>.</p><p id="p-0068" num="0067">At <b>302</b>, user interface application <b>150</b> presents the displayed integrated onboarding user interface to the user in order facilitate the user entering in input data in response to the graphical version of an integrated onboarding setup item checklist. The input data comprises information entered by the user that will be in relation to a specific integrated onboarding setup item, the input data including but not limited to:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0068">The selection and/or accessing of a Uniform Resource Locator (URL), that is, clicking a particular link thereby signifying and/or confirming a particular webpage has been visited by the user;</li>        <li id="ul0002-0002" num="0069">Uploading a file in a one or more acceptable file formats;</li>        <li id="ul0002-0003" num="0070">The selection of one or more of a plurality of discrete options, for example, selecting one or more predefined checkbox/check button options or a dropdown list option;</li>        <li id="ul0002-0004" num="0071">The manual input of data into a predetermined data field, for example, manually inputting text into a text field; and</li>        <li id="ul0002-0005" num="0072">A combination of two or more of the above actions.</li>    </ul>    </li></ul></p><p id="p-0069" num="0073">At <b>304</b>, the input data is transmitted to ITS <b>110</b> and/or IMS <b>120</b> so that those systems (that is, each of ITS database <b>112</b> and IMS database <b>122</b>) are appropriately updated based on the input data of the user.</p><p id="p-0070" num="0074">In some embodiments, at <b>306</b>, database <b>140</b> is queried to ascertain whether the state is indicative of the related integrated onboarding setup item being &#x201c;completed&#x201d;. If it is the case where the state is indicative of the related integrated onboarding setup item being already &#x201c;completed&#x201d;, then the indicative state of that related integrated onboarding setup item will not be changed, denoted by reference <b>314</b>. It will be appreciated that <b>306</b> is an optional step that may not be present in all embodiments.</p><p id="p-0071" num="0075">Following the receipt of the input data by ITS <b>110</b> and/or IMS <b>120</b> at <b>304</b> (or for the embodiment including step <b>306</b>, if it is the case where the state is indicative of the related integrated onboarding setup item being &#x201c;not completed&#x201d;), at <b>308</b>, ITS application <b>112</b> and/or IMS application <b>122</b> reconciles data from ITS database <b>114</b> and/or IMS database <b>124</b> respectively that is related to one or more actions or tasks associated with the integrated onboarding setup item completion criteria managed by platform <b>130</b> and/or an ITS and/or IMS setup item (which itself may involve one or more actions or tasks) associated with the integrated onboarding setup item managed by platform <b>130</b>. More specifically, ITS database <b>114</b> and/or IMS database <b>124</b> will be updated such that the data related to the one or more actions or tasks (and/or the data related to the ITS and/or IMS setup item corresponding to the integrated onboarding setup item) will be indicated as being completed in ITS database <b>114</b> and/or IMS database <b>124</b> which will cause a broadcast event subscribed to by platform <b>130</b>.</p><p id="p-0072" num="0076">The one or more actions or tasks including those in respect of the ITS and/or IMS setup item include, but are not limited to:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0077">The accessing of one or more specific predetermined URLs, that is, clicking one or more particular links and accessing one or more particular webpages by the user;</li>        <li id="ul0004-0002" num="0078">The accessing of one or more specific predetermined URLs and accessing one or more particular webpages by the user with the user staying on the one or more webpages for a predetermined amount of time, for example, two minutes (thereby signifying the user absorbing the contents of the web page);</li>        <li id="ul0004-0003" num="0079">The accessing of a plurality of specific predetermined URLs in a predefined order;</li>        <li id="ul0004-0004" num="0080">Uploading a specific file in a specific file format that includes acceptable information therein;</li>        <li id="ul0004-0005" num="0081">The selection of one or more of a plurality of discrete predetermined options, for example, selecting one or more predefined checkbox/check button options or a dropdown list option;</li>        <li id="ul0004-0006" num="0082">The manual input of specific data into a predetermined data field, for example, manually inputting text into a text field; and</li>        <li id="ul0004-0007" num="0083">A combination of two or more of the above actions or tasks.</li>    </ul>    </li></ul></p><p id="p-0073" num="0084">At <b>310</b>, if the reconciling of ITS database <b>114</b> and/or IMS database <b>124</b> with platform <b>130</b> ascertains that the actions or tasks associated with the integrated onboarding setup item (and/or the ITS and/or IMS item associated with the integrated onboarding setup item) is not completed and thus the associated completion criteria of the integrated onboarding setup item is not met, then the indicative state of the related integrated onboarding setup item will not be updated as no event will be broadcast, denoted by reference <b>314</b>, and remain as &#x201c;not completed&#x201d;.</p><p id="p-0074" num="0085">If, at <b>310</b>, the associated completion criteria of the integrated onboarding setup item is met, at <b>312</b>, broadcast event will occur that will trigger onboarding application <b>132</b> to update the state of the related integrated onboarding setup item in database <b>140</b> to a state indicative of being &#x201c;completed&#x201d;.</p><p id="p-0075" num="0086">Alternatively, the input data received by ITS <b>110</b> and/or IMS <b>120</b> will be recognised by ITS application <b>112</b> and/or IMS application <b>122</b> as relating to an integrated onboarding setup item that is a critical item type, and in response to this recognition, ITS <b>110</b> and/or IMS <b>120</b> will send a direct instruction to platform <b>130</b> once the one or more actions or tasks (and/or the data related to the ITS and/or IMS setup item corresponding to the integrated onboarding setup item) are indicated as being completed in ITS database <b>114</b> and/or IMS database <b>124</b>.</p><p id="p-0076" num="0087">At <b>316</b>, after or when onboarding application <b>132</b> is instructed to update the item state, ITS application <b>112</b> and/or IMS application <b>122</b> instructs user interface application <b>150</b> to display a visual indication of confirmation of the completion of the related integrated onboarding setup item. This will be described in more detail further below with reference to <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>. In other embodiments, onboarding application <b>132</b> relays to user interface application <b>150</b> to display a visual indication of confirmation of the completion of the related integrated onboarding setup item.</p><p id="p-0077" num="0088">An integrated onboarding setup items of the non-critical setup item type is such that the indicative state of that integrated onboarding setup item can be updated to &#x201c;completed&#x201d; if requisite completion criteria in the form of one or more user interface actions to be completed is completed by user interface application <b>150</b>. In other words, for a non-critical item type, the indicative state of that integrated onboarding setup item is updated to &#x201c;completed&#x201d; based on completion criteria, in the form of the one or more user interface actions, that only shows an adequate indication likelihood of certain ITS and/or IMS actions or tasks being completed correctly, rather than this being confirmed with certainty (as would occur for a critical item type). As ITS database <b>114</b> and/or IMS database <b>124</b> are not reconciled with platform <b>130</b>, the state indicating the integrated onboarding setup item is &#x201c;completed&#x201d; for non-critical items in the database <b>140</b> will not necessarily be in conformity with, for example, the state of a corresponding onboarding setup items for ITS <b>110</b> and/or IMS <b>120</b>. In other words, non-critical item types have their completion state updated based on the probability that the required ITS and/or IMS actions or tasks have been undertaken correctly, as opposed to the critical item type described above where a specific reconciling of ITS database <b>114</b> and/or IMS database <b>124</b> with platform <b>130</b> would confirm with certainty that the required ITS and/or IMS actions or tasks have been undertaken correctly. Whilst this does sacrifice complete accuracy, this use of non-critical item type has the advantage of avoiding the processing burden on system <b>100</b> in relation to setup items of this type as platform <b>130</b> will not have to be reconciled with ITS database <b>114</b> and/or IMS database <b>124</b> (in some cases reconciled multiple times) for each and every integrated onboarding setup item and in particular for integrated onboarding setup items where an incorrect item completion will not cause critical workflow issues to arise.</p><p id="p-0078" num="0089">In other embodiments the completion criteria in the form of one or more user interface actions to be completed is confirmed by ITS <b>110</b> and/or IMS <b>120</b> to have been undertaken and completed.</p><p id="p-0079" num="0090">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, there is illustrated the process undertaken by a computer processing system of system <b>100</b> for updating the state of an integrated onboarding setup item that is a non-critical item type, the process denoted by reference <b>400</b>.</p><p id="p-0080" num="0091">At <b>402</b> (similar to <b>302</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>), user interface application <b>150</b> presents the displayed integrated onboarding user interface to the user in order facilitate the user entering input data in response to the graphical version of an integrated onboarding setup item checklist. As above in relation to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the input data comprises information entered by the user that will be in relation to a specific integrated onboarding setup item, the input data including but not limited to:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0092">The selection and/or accessing of one or more URLs, that is, clicking a particular URL link thereby signifying/confirming that a particular webpage has been visited by the user;</li>        <li id="ul0006-0002" num="0093">Uploading a file in a one or more acceptable file formats;</li>        <li id="ul0006-0003" num="0094">The selection of one or more of a plurality of discrete options, for example, selecting one or more predefined checkbox/check button options or a dropdown list option;</li>        <li id="ul0006-0004" num="0095">The manual input of data into a predetermined data field, for example, manually inputting text into a text field; and</li>        <li id="ul0006-0005" num="0096">A combination of two or more of the above actions.</li>    </ul>    </li></ul></p><p id="p-0081" num="0097">At <b>404</b> (similar to <b>304</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>), the input data is transmitted to ITS <b>110</b> and/or IMS <b>120</b> so that those systems (that is, each of ITS database <b>112</b> and IMS database <b>122</b>) are appropriately updated based on the input data of the user. It will be noted that step <b>404</b> does not affect the updating of the state of an integrated onboarding setup item that is a non-critical item type, but has been included for completeness as a destination of the input data.</p><p id="p-0082" num="0098">In some embodiments, at <b>406</b> (similar to <b>306</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>), database <b>140</b> is queried to ascertain whether the state is indicative of the related integrated onboarding setup item being &#x201c;completed&#x201d;. If it is the case where the state is indicative of the related integrated onboarding setup item being already &#x201c;completed&#x201d;, then the indicative state of that related integrated onboarding setup item will not be changed, denoted by reference <b>414</b>. It will be appreciated that <b>406</b> is an optional step that may not be present in all embodiments.</p><p id="p-0083" num="0099">Following the entering of input data at <b>402</b> and receipt of the input data by ITS <b>110</b> and/or IMS <b>120</b> at <b>404</b> or in some cases prior to or during the undertaking of step <b>404</b> (or for the embodiment including step <b>406</b>, if it is the case where the state is indicative of the related integrated onboarding setup item being &#x201c;not completed&#x201d;), user interface application <b>150</b> will directly relay to platform <b>130</b> that the input data has been entered and, thus one or more user interface actions has been carried out. Therefore, the associated completion criteria of that integrated onboarding setup item of a non-critical item type would not require any interaction with ITS <b>110</b> or IMS <b>120</b> (including reconciling ITS database <b>114</b> and/or IMS database <b>124</b> with platform <b>130</b>.</p><p id="p-0084" num="0100">In alternate embodiments, following steps <b>402</b> and <b>404</b>, ITS application <b>112</b> and/or IMS application <b>122</b> (in particular the front-end functionality of those applications) will recognise that the input data received by ITS <b>110</b> and/or IMS <b>120</b> relates to an integrated onboarding setup item that is a non-critical item type. In this case, the completion criteria will comprise, at <b>408</b>, ITS application <b>112</b> and/or IMS application <b>122</b> recognising the received input data as one or more predetermined user interface actions to be completed that is associated with that integrated onboarding setup item of a non-critical item type.</p><p id="p-0085" num="0101">If, at <b>410</b>, the one or more user interface actions that has been carried out corresponds with one or more predetermined user interface actions that is associated with the integrated onboarding setup item to be completed, the completion criteria for the non-critical item is met and, the related integrated onboarding setup item has been completed. The predetermined user interface actions to be completed include, but are not limited to:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0102">The indication that one or more specific predetermined URLs are accessed which includes, for example, selecting or clicking one or more particular URL links thereby signifying particular webpages have been visited by the user;</li>        <li id="ul0008-0002" num="0103">The indication that a plurality of specific predetermined URLs is accessed in a predefined order;</li>        <li id="ul0008-0003" num="0104">The selection and accessing of one or more specific predetermined URLs;</li>        <li id="ul0008-0004" num="0105">The selection and accessing of a plurality of specific predetermined URLs in a predefined order;</li>        <li id="ul0008-0005" num="0106">Uploading a file in a specific file format;</li>        <li id="ul0008-0006" num="0107">The selection of one or more of a plurality of discrete predetermined options, for example, selecting one or more predefined checkbox/check button options or a dropdown list option;</li>        <li id="ul0008-0007" num="0108">The manual input of data into a predetermined data field, for example, manually inputting text into a text field; and</li>        <li id="ul0008-0008" num="0109">A combination of two or more of the above actions.</li>    </ul>    </li></ul></p><p id="p-0086" num="0110">Unlike for the corresponding step in <b>310</b> in relation to critical item types, step <b>410</b> in relation to non-critical item types, as noted above, does not require any interaction with ITS <b>110</b> or IMS <b>120</b> and therefore does not require reconciling ITS database <b>114</b> and/or IMS database <b>124</b> with platform <b>130</b>. As such, step <b>410</b> will generally not require scrutinising actions in as much detail as step <b>310</b> for critical items. For example, in relation to selecting or accessing a specific predetermined URL, step <b>410</b> may only require an indication by user interface application <b>150</b> the specific URL is visited by the user such as a link being clicked in order to meet the completion criteria, without needing to confirm that a website associated with the link had been visited let alone the content of that website absorbed by the user. On the other hand, step <b>310</b> may include the user actually clicking the link and accessing the webpage and even staying on that webpage for a minimum amount of time in order to meet the completion criteria. A yet further example, in relation to uploading a file, step <b>410</b> may only check that any file has been uploaded without assessing file content, whereas step <b>310</b> may include a specific file in a specific file format that includes acceptable information contained therein being uploaded in order to meet the completion criteria. A yet further example, in relation to manual input of text data, step <b>410</b> may only check that any text is inputted without assessing the content of the text, whereas step <b>310</b> may include specific acceptable text data being confirmed as entered in order to meet the completion criteria. As such, the related integrated onboarding setup item may be determined as completed based on an inference or adequate probability of completion rather than certain confirmation of completion.</p><p id="p-0087" num="0111">In embodiments, the completion criteria comprises primary criteria and secondary criteria whereby in order for the completion criteria to be met, all primary criteria must be met but only a predefined subset of secondary criteria must be met. For example, predetermined user interface actions to be completed for the primary criteria could include uploading a file in a specific file format and the predetermined user interface actions to be completed for the primary criteria could include indications that five specific predetermined URLs are accessed by the user. In this example, to meet the completion criteria, a file must be uploaded in a specific file format to meet the primary criteria and any four of the five specific predetermined URLs must be indicated as being accessed.</p><p id="p-0088" num="0112">If the one or more predetermined user interface actions to be completed by user interface application <b>150</b> have not been completed, i.e. it is ascertained that the completion criteria for the non-critical item is not met, then the indicative state of the related integrated onboarding setup item will not be changed, denoted by reference <b>414</b> and remain as &#x201c;not completed&#x201d;.</p><p id="p-0089" num="0113">At <b>412</b>, the completion of the one or more user interface actions to be completed (i.e. the completion criteria for the non-critical item being met) will immediately trigger onboarding application <b>132</b> to update database <b>140</b> so that the state of the related integrated onboarding setup item in database <b>140</b> to a state indicative of being &#x201c;completed&#x201d;. In this case, user interface application <b>150</b> directs onboarding application <b>132</b> to update database <b>140</b>.</p><p id="p-0090" num="0114">At <b>416</b>, the updating of the indicative state to &#x201c;completed&#x201d; in database <b>140</b> will immediately or simultaneously trigger user interface application <b>150</b> to display a visual indication of confirmation of the completion of the related integrated onboarding setup item. In embodiments, onboarding application <b>132</b> relays to user interface application <b>150</b> to display a visual indication of confirmation of the completion of the related integrated onboarding setup item. In other embodiments, the updating of the indicative state to &#x201c;completed&#x201d; in database <b>140</b> will immediately or simultaneously trigger ITS application <b>112</b> and/or IMS application <b>122</b> to relay to user interface application <b>150</b> to display a visual indication of confirmation of the completion of the related integrated onboarding setup item.</p><p id="p-0091" num="0115">It will be appreciated that for the embodiments described above, the processes undertaken by a computer processing system of system <b>100</b> for updating the state of an integrated onboarding setup item are essentially the same whether the item is associated with ITS <b>110</b> or IMS <b>120</b>, or both, except for steps <b>316</b> and <b>416</b>. However, in other embodiments, the processes undertaken by a computer processing system of system <b>100</b> for updating the state of an integrated onboarding setup item involves one or more different steps or additional steps depending on whether the item is associated with ITS <b>110</b> or IMS <b>120</b>, or both. For example, and as noted above, in some embodiments, platform <b>130</b> is able to directly communicate with user interface application <b>150</b> in relation to the onboarding process data related to ITS <b>110</b>. However, for data related to IMS <b>120</b> (such as content that is displayed in relation to IMS <b>120</b> by user interface application <b>150</b>), platform <b>130</b> does not directly drive front-end functionality such as communicating instructions to user interface application <b>150</b> for data related to IMS <b>120</b>, as this is driven by IMS server application <b>122</b>. Therefore, the data flow of both of steps <b>316</b> and <b>416</b> would be different depending on if the related integrated onboarding setup item is associated with ITS <b>110</b> or IMS <b>120</b>.</p><p id="p-0092" num="0116">It will be appreciated that in embodiments where onboarding application <b>132</b> is executed by platform <b>130</b> to configure it to provide integrated ITS and IMS server-side functionality to one or more corresponding client applications (for example, user interface application <b>150</b>), platform <b>130</b> drives and directly initiates all the state changes of the integrated onboarding setup items. For example, for an integrated onboarding setup item of the critical item type, intermediary onboarding application <b>132</b> initiates a check of ITS database <b>114</b> and/or IMS database <b>124</b> to ascertain whether the relevant completion criteria is met (as opposed to the above where ITS database <b>114</b> and/or IMS database <b>124</b> are updated from the input data and ITS <b>110</b> and/or IMS <b>120</b> drive the state changes based on the received data).</p><p id="p-0093" num="0117">Referring to <figref idref="DRAWINGS">FIGS. <b>5</b>A and <b>5</b>B</figref>, there is illustrated example wireframes of user interface application <b>150</b>, specifically showing the integrated onboarding user interface denoted by reference <b>500</b> for a new integrated project onboarding setup item checklist. Referring specifically to <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, integrated onboarding user interface <b>500</b> includes three sub-groups of items shown in expanded view: basic new project setup items (&#x201c;Basics&#x201d; denoted by reference <b>502</b>); items related to incidents and the management of incidents in relation to the project, in this case which are related to major incidents (&#x201c;Incidents&#x201d; denoted by reference <b>504</b>); and items related to change management processes for the project (&#x201c;Changes&#x201d; denoted by reference <b>506</b>). The three sub-groups separate items based on aligning work practices (which in practice may separate items according to their associated server-side system, for example, &#x201c;Basics&#x201d; relating to ITS <b>110</b>, &#x201c;Incidents&#x201d; relating to IMS <b>120</b> etc.) In other embodiments, the sub-groups separate items based on their associated server-side system. In embodiments, each of <b>502</b>, <b>504</b> and <b>506</b> can be expanded further to display the setup items within each sub-group. Integrated onboarding user interface <b>500</b> also includes a text description of the integrated onboarding setup item checklist at <b>508</b>. Integrated onboarding user interface <b>500</b> further includes a plurality of integrated onboarding setup items cards from the checklist at <b>510</b> and <b>512</b>, noting that card <b>510</b> shows an expanded form whilst cards <b>512</b> are both in minimised form. Expanded card <b>510</b> present a summary text description of the associated setup item task(s) along with a more detailed text description of those associated setup item task(s). Minimised cards <b>512</b> only present the summary text description of the associated setup item task(s). Cards <b>510</b> and <b>512</b> can be toggled between expanded form of <b>510</b> and minimised form of <b>512</b>.</p><p id="p-0094" num="0118">Integrated onboarding user interface <b>500</b> presents the user with visual indication of the progress of completion of setup items of the checklist. As seen in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, each of <b>502</b>, <b>504</b> and <b>506</b> indicate that &#x201c;0 of&#x201d; the total number of items has been completed. Further, each of cards <b>510</b> and <b>512</b> are indicated as not being completed (by a white tick symbol <b>514</b>). As such, this provides an example of visual indicator to the user for a new integrated onboarding setup item checklist of a new project where all the setup item states default to the &#x201c;not completed&#x201d; state.</p><p id="p-0095" num="0119">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, integrated onboarding user interface <b>500</b> is in a minimised view showing only &#x201c;Basics&#x201d; <b>502</b>. Also shown is a plurality of integrated onboarding setup items cards from the checklist with expanded card <b>510</b> and two minimised cards <b>512</b>. It will be seen here that <b>502</b> now shows the progress of setup item completion as &#x201c;2 of 8 completed&#x201d;, indicating 2 of the 8 total setup items in the &#x201c;Basics&#x201d; <b>502</b> have been completed. Further, cards <b>512</b> of <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> are indicated as being completed (by a greyed tick symbol <b>516</b>) whereas card <b>510</b> is indicated as not being completed (by white tick symbol <b>514</b>).</p><p id="p-0096" num="0120"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates a partially completed checklist. It will be appreciated that a fully completed checklist would show, for example based on <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, &#x201c;5 of 5 completed&#x201d; for &#x201c;Basics&#x201d; <b>502</b>, &#x201c;4 of 4 completed&#x201d; for &#x201c;Incidents&#x201d; <b>504</b>, and &#x201c;3 of 3 completed&#x201d; for &#x201c;Changes&#x201d; <b>506</b>.</p><p id="p-0097" num="0121">It will be appreciated that whilst embodiments described above are towards issue tracking systems and incident management systems, the first and second software platforms may be other than issue tracking systems and incident management systems that would also integrate their onboarding functionality as described above in respect of issue tracking systems and incident management systems.</p><p id="p-0098" num="0122">The flowcharts illustrated in the figures and described above define operations in particular orders to explain various features. In some cases, the operations described and illustrated may be able to be performed in a different order to that shown/described, one or more operations may be combined into a single operation, a single operation may be divided into multiple separate operations, and/or the function(s) achieved by one or more of the described/illustrated operations may be achieved by one or more alternative operations. Still further, the functionality/processing of a given flowchart operation could potentially be performed by different systems or applications.</p><p id="p-0099" num="0123">Unless otherwise stated, the terms &#x201c;include&#x201d; and &#x201c;comprise&#x201d; (and variations thereof such as &#x201c;including&#x201d;, &#x201c;includes&#x201d;, &#x201c;comprising&#x201d;, &#x201c;comprises&#x201d;, &#x201c;comprised&#x201d; and the like) are used inclusively and do not exclude further features, components, integers, steps, or elements.</p><p id="p-0100" num="0124">Although the present disclosure uses terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; etc. to describe various elements, these terms are used only to distinguish elements from one another and not in an ordinal sense.</p><p id="p-0101" num="0125">It will be understood that the embodiments disclosed and defined in this specification extend to alternative combinations of two or more of the individual features mentioned in or evident from the text or drawings. All of these different combinations constitute alternative embodiments of the present disclosure.</p><p id="p-0102" num="0126">The present specification describes various embodiments with reference to numerous specific details that may vary from implementation to implementation. No limitation, element, property, feature, advantage, or attribute that is not expressly recited in a claim should be considered as a required or essential feature. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer implemented method for confirming a completion of an onboarding setup item of an IT Service Management (ITSM) system the method comprising:<claim-text>receiving, via a user interface, input data associated with at least one of a first software platform or a second software platform of the ITSM system, the ITSM system further comprising an intermediary onboarding platform operatively associated with a database for storing a state of the setup item associated with at least one of the first or second software platforms;</claim-text><claim-text>querying the received input data against completion criteria from the at least one of the first or second software platforms, wherein the setup item has a predetermined item type, the predetermined item type being at least one of (i) a critical setup item type associated with a requirement for a determination of verified accuracy for completion of the setup item, and (ii) a non-critical setup item type associated with a requirement for a determination of an adequate indication of accuracy for completion of the setup item, such that:<claim-text>in accordance with the setup item having the critical setup item type, the completion criteria comprises reconciling the state of the setup item with corresponding data from at least one of the first or second software platforms which ascertains if the one or more tasks associated with the setup item have been completed; and</claim-text><claim-text>in accordance with the setup item having the non-critical setup item type, the completion criteria comprises comparing, by the user interface, the received input data against one or more predetermined user interface actions to be completed, wherein the one or more actions being determined as completed infers the setup item is confirmed as completed;</claim-text><claim-text>updating the state of the setup item in the associated database to a state indicative of the setup item being completed; and</claim-text><claim-text>displaying, by the user interface, a visual indication of confirmation of the completion of the setup item.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first software platform comprises an issue tracking system (ITS).</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second software platform comprises an incident management system (IMS).</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user interface is configured to directly interact with both the first and second software platforms and at least indirectly interact via both the first and second software platforms with the intermediary onboarding platform.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the input data comprises at least one or more of: selection of a predetermined URL; selection of one of a plurality of discrete predetermined options; or data manually inputted into a predetermined data field.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user interface comprises a browser-based interface.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the associated database for storing the state of the setup item comprises a NoSQL database.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, if the setup item is the non-critical setup item type, the one or more predetermined user interface actions to be completed includes an action, by the user interface, indicative of accessing at least one predetermined URL.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A computer implemented method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, if the setup item is the non-critical setup item type, the one or more predetermined user interface actions to be completed includes an action, by the user interface, indicative of accessing a plurality of predetermined URLs.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A computer implemented method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the action, by the user interface, indicative of accessing at least one predetermined URL includes selecting at least one predetermined URL to access.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computer implemented method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the action, by the user interface, indicative of accessing the at least one predetermined URL includes selecting and accessing the at least one predetermined URL.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the ITSM system comprises a plurality of setup items to be completed, the plurality of setup items forming an onboarding checklist of setup items that is stored in the database.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A computer implemented method according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein at least one of the plurality of setup items is of the critical setup item type and at least one of the plurality of setup items is of the non-critical setup item type.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A computer implemented method according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein at least one of the plurality of setup items is associated with the first software platform and at least one of the plurality of setup items is associated with the second software platform.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, if the setup item is the critical setup item type, the corresponding data from at least one of the first or second software platforms includes corresponding state data from at least one of the first or second software platforms.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A computer processing system for confirming a completion of a setup item associated with at least one of a first software platform or a second software platform, the system comprising:<claim-text>one or more processing units;</claim-text><claim-text>a communication interface; and</claim-text><claim-text>a non-transitory computer-readable storage medium storing instructions, which when executed by the processing unit/one or more processing units, cause the one or more processing units to:<claim-text>receive from the communication interface, input data associated with at least one of the first or second software platforms;</claim-text><claim-text>query the received input data against completion criteria from at least one of the first or second software platforms, wherein the setup item has a predetermined item type, the predetermined item type being at least one of (i) a critical setup item type associated with a requirement for a determination of verified accuracy for completion of the setup item, and (ii) a non-critical setup item type associated with a requirement for a determination of an adequate indication of accuracy for completion of the setup item, such that:<claim-text>in accordance with the setup item having the critical setup item type, the completion criteria comprises reconciling the state of the setup item with corresponding data from at least one of the first or second software platforms which ascertains if the one or more tasks associated with the setup item have been completed; and</claim-text><claim-text>in accordance with the setup item having the non-critical setup item type, the completion criteria comprises comparing the received input data against one or more predetermined user interface actions to be completed, wherein the one or more actions being determined as completed infers the setup item is confirmed as completed;</claim-text><claim-text>update a state of the setup item stored in a database operatively associated with an intermediary onboarding platform to a state indicative of the setup item being completed; and</claim-text><claim-text>display by the communication interface, a visual indication of confirmation of the completion of the setup item.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory storage medium storing instructions executable by processing unit to cause the processing unit to:<claim-text>receive from a communication interface, input data associated with at least one of a first software platform or a second software platform;</claim-text><claim-text>query the received input data against completion criteria of a setup item from at least one of the first or second software platforms, the setup item being associated with at least one of the first or second software platforms, wherein the setup item has a predetermined item type, the predetermined item type being at least one of (i) a critical setup item type associated with a requirement for a determination for verified accuracy for completion of the setup item, and (ii) a non-critical setup item type associated with a requirement for a determination of an adequate indication of accuracy for completion of the setup item, such that:<claim-text>in accordance with the setup item having the critical setup item type, the completion criteria comprises reconciling the state of the setup item with corresponding data from at least one of the first or second software platforms which ascertains if the one or more tasks associated with the setup item have been completed; and</claim-text><claim-text>in accordance with the setup item having the non-critical setup item type, the completion criteria comprises comparing the received input data against one or more predetermined user interface actions to be completed, wherein the one or more actions being determined as completed infers the setup item is confirmed as completed;</claim-text><claim-text>update a state of the setup item stored in a database operatively associated with an intermediary onboarding platform to a state indicative of the setup item being completed; and</claim-text></claim-text></claim-text><claim-text>display by the communication interface, a visual indication of confirmation of the completion of the setup item.</claim-text></claim></claims></us-patent-application>