<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004510A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004510</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17757215</doc-number><date>20201204</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2019-227916</doc-number><date>20191218</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>28</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>287</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e61">INFORMATION PROCESSING SYSTEM, INFORMATION PROCESSING METHOD, AND INFORMATION PROCESSING DEVICE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SONY GROUP CORPORATION</orgname><address><city>TOKYO</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SAITO</last-name><first-name>MASATAKA</first-name><address><city>TOKYO</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/JP2020/045170</doc-number><date>20201204</date></document-id><us-371c12-date><date>20220610</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present technology relates to an information processing system, information processing method, and information processing device capable of reducing load on an information processing unit in a case where data is shared among a plurality of information processing devices. There are included a first information processing device that controls DMA on the basis of a transfer parameter used for controlling transfer of data, and a second information processing device that communicates with the first information processing device, and controls DMA on the basis of the transfer parameter, in which the first information processing device generates the transfer parameter used for controlling reception of transfer data, and transmits the transfer parameter to the second information processing device, and the second information processing device controls reception of the transfer data from the first information processing device on the basis of the transfer parameter received from the first information processing device. The present technology can be applied to, for example, an apparatus including a multiprocessor system.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="92.46mm" wi="158.75mm" file="US20230004510A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="208.28mm" wi="132.08mm" orientation="landscape" file="US20230004510A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="204.64mm" wi="147.83mm" orientation="landscape" file="US20230004510A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="172.38mm" wi="157.23mm" file="US20230004510A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="234.10mm" wi="135.38mm" orientation="landscape" file="US20230004510A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="164.85mm" wi="117.86mm" orientation="landscape" file="US20230004510A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="223.27mm" wi="141.05mm" orientation="landscape" file="US20230004510A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="223.27mm" wi="140.89mm" orientation="landscape" file="US20230004510A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="213.11mm" wi="126.07mm" file="US20230004510A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="230.38mm" wi="141.48mm" file="US20230004510A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="232.07mm" wi="149.61mm" orientation="landscape" file="US20230004510A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="207.18mm" wi="156.13mm" orientation="landscape" file="US20230004510A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="230.55mm" wi="158.16mm" orientation="landscape" file="US20230004510A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present technology relates to an information processing system, an information processing method, and an information processing device, and more particularly, to an information processing system, information processing method, and information processing device suitable for use in a case where data is shared among a plurality of information processing devices.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">In general, in a case where data is shared between processors in a multiprocessor system, a method for providing a shared memory shared between the processors or a method for sharing an address space of a memory in each of the processors is used (Refer to Patent Document 1, for example).</p><heading id="h-0003" level="1">CITATION LIST</heading><heading id="h-0004" level="1">Patent Document</heading><p id="p-0004" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0003">Patent Document 1: Japanese Patent Application Laid-Open No. H8-63442</li></ul></p><heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading><heading id="h-0006" level="1">Problems to be Solved by the Invention</heading><p id="p-0005" num="0004">However, the former method requires a shared memory that increases costs for hardware, and therefore, the former method is not very suitable for an embedded system, for example.</p><p id="p-0006" num="0005">Furthermore, in the latter method, it is necessary to transfer data between the processors at all times so that the same data is stored in a region sharing the address space of the memory of each of the processors. Therefore, for example, load on a central processing unit (CPU) built in the processor increases.</p><p id="p-0007" num="0006">The present technology has been made in view of such circumstances, and is to reduce load on an information processing unit such as a CPU in a case where data is shared between a plurality of information processing devices such as processors.</p><heading id="h-0007" level="1">Solutions to Problems</heading><p id="p-0008" num="0007">An information processing system according to a first aspect of the present technology includes a first information processing device, and a second information processing device, in which the first information processing device includes a first information processing unit that generates a transfer parameter used for controlling transfer of data, a first direct memory access (DMA) control unit that controls DMA on the basis of the transfer parameter, and a first communication unit, the second information processing device includes a second information processing unit that generates the transfer parameter, a second DMA control unit that controls DMA on the basis of the transfer parameter, and a second communication unit that communicates with the first communication unit, the first information processing unit generates a first transfer parameter used for controlling reception of first transfer data, the first DMA control unit controls transmission of the first transfer parameter to the second information processing device, and the second DMA control unit controls reception of the first transfer data from the first information processing device on the basis of the first transfer parameter.</p><p id="p-0009" num="0008">An information processing method according to a second aspect of the present technology includes a first information processing device that controls direct memory access (DMA) on the basis of a transfer parameter used for controlling transfer of data, and a second information processing device that communicates with the first information processing device, and controls DMA on the basis of the transfer parameter, in which the first information processing device generates the transfer parameter used for controlling reception of transfer data, and transmits the transfer parameter to the second information processing device, and the second information processing device controls reception of the transfer data from the first information processing device on the basis of the transfer parameter received from the first information processing device.</p><p id="p-0010" num="0009">An information processing device according to a third aspect of the present technology includes an information processing unit that generates a transfer parameter used for controlling transfer of data, a direct memory access (DMA) control unit that controls DMA on the basis of the transfer parameter, and a communication unit that communicates with another information processing device, in which the information processing unit generates the transfer parameter used for controlling reception of transfer data, and the DMA control unit controls transmission of the transfer parameter to the another information processing device, the transfer parameter being used for controlling reception of the transfer data.</p><p id="p-0011" num="0010">An information processing device according to a fourth aspect of the present technology includes a direct memory access (DMA) control unit that controls DMA on the basis of a transfer parameter used for controlling transfer of data, and a communication unit that communicates with another information processing device, in which the communication unit receives, from another information processing device, the transfer parameter used for controlling reception of transfer data, and the DMA control unit controls reception of the transfer data from the another information processing device on the basis of the transfer parameter received from the another information processing device.</p><p id="p-0012" num="0011">In the first aspect or second aspect of the present technology, a first information processing device generates a transfer parameter used for controlling reception of transfer data, and controls transmission of the transfer parameter to the second information processing device, and the second information processing device controls reception of the transfer data from the first information processing device on the basis of the transfer parameter.</p><p id="p-0013" num="0012">In the third aspect of the present technology, a transfer parameter used for reception control of transfer data is generated, and transmission of the transfer parameter used for controlling reception of the transfer data to the another information processing device is controlled.</p><p id="p-0014" num="0013">In the fourth aspect of the present technology, reception of transfer data from the another information processing device is controlled on the basis of the transfer parameter received from the another information processing device.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0008" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating a configuration example of an information processing system to which the present technology is applied.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating a configuration example of a CPU and RAM of the information processing system to which the present technology is applied.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart for describing processing of a CPU of a transmission side processor.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating a configuration example of an LLI.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram for describing processing of transmitting state data.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram for describing processing of transmitting BBS data.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram for describing processing of transmitting a message.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart for describing processing of a DMAC of the transmission side processor.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart for describing initial processing of a CPU of a reception side processor.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a flowchart for describing processing of a DMAC of the reception side processor.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flowchart for describing transfer data reception processing by the CPU of the reception side processor.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a sequence diagram illustrating a specific example of data transfer processing.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram illustrating a configuration example of a camera system.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram illustrating a configuration example of software of an interchangeable lens unit.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0009" level="1">MODE FOR CARRYING OUT THE INVENTION</heading><p id="p-0029" num="0028">Hereinafter, an embodiment for carrying out the present technology will be described. The description will be made in the following order.</p><p id="p-0030" num="0029">1. Embodiment</p><p id="p-0031" num="0030">2. Application example</p><p id="p-0032" num="0031">3. Modifications</p><p id="p-0033" num="0032">4. Others</p><heading id="h-0010" level="1">1. Embodiment</heading><p id="p-0034" num="0033">An embodiment of the present technology will be described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>12</b></figref>.</p><p id="p-0035" num="0034">&#x3c;Configuration Example of Information Processing System <b>100</b>&#x3e;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an embodiment of an information processing system <b>100</b> to which the present technology is applied.</p><p id="p-0037" num="0036">The information processing system <b>100</b> is a multiprocessor system including a plurality of processors, and, for example, is incorporated in various apparatuses and performs predetermined processing.</p><p id="p-0038" num="0037">The information processing system <b>100</b> includes a processor <b>101</b><i>a </i>and a processor <b>101</b><i>b </i>that are information processing devices including similar configurations. Note that a reference sign of each unit of the processor <b>101</b><i>a </i>is appended with a letter &#x201c;a&#x201d;, and a reference sign of each unit of the processor <b>101</b><i>b </i>is appended with a letter &#x201c;b&#x201d;.</p><p id="p-0039" num="0038">The processor <b>101</b><i>a </i>and the processor <b>101</b><i>b </i>can independently perform predetermined processing. Furthermore, the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b </i>support full-duplex serial communication, and can simultaneously perform asynchronous bidirectional communication. That is, transfer of data from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>and transfer of data from the processor <b>101</b><i>b </i>to the processor <b>101</b><i>a </i>can be performed asynchronously and in parallel. Moreover, the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b </i>share a part of data.</p><p id="p-0040" num="0039">Hereinafter, a configuration of the processor <b>101</b><i>a </i>will be described. As described above, the processor <b>101</b><i>b </i>has a similar configuration to the processor <b>101</b><i>a</i>, and description thereof will be omitted.</p><p id="p-0041" num="0040">The processor <b>101</b><i>a </i>includes a CPU <b>111</b><i>a</i>, a direct memory access controller (DMAC) <b>112</b><i>a</i>, a flash ROM <b>113</b><i>a</i>, a RAM <b>114</b><i>a</i>, a serial peripheral interface (SPI) <b>115</b><i>a</i>, and a system bus <b>116</b><i>a</i>. The CPU <b>111</b><i>a</i>, the DMAC <b>112</b><i>a</i>, the flash ROM <b>113</b><i>a</i>, the RAM <b>114</b><i>a</i>, and the SPI <b>115</b><i>a </i>are connected to one another via the system bus <b>116</b><i>a. </i></p><p id="p-0042" num="0041">The CPU <b>111</b><i>a </i>is an information processing unit that performs various processing and controls each unit of the processor <b>101</b><i>a</i>. Furthermore, the CPU <b>111</b><i>a </i>generates a transfer parameter used for controlling transfer of data by direct memory access (DMA) and stores the transfer parameter in a linked list item (LLI) region <b>151</b><i>a </i>of the RAM <b>114</b><i>a</i>, thereby setting the transfer parameter.</p><p id="p-0043" num="0042">Note that a transfer parameter is stored in the LLI region <b>151</b><i>a </i>in a form of LLI. Each LLI includes a set of transfer parameters. Furthermore, an LLI is data having a linked list structure, and each LLI can be connected to another LLI in a linked manner.</p><p id="p-0044" num="0043">Each LLI includes, for example, a transfer source address, a transfer destination address, a transfer attribute, and a link address.</p><p id="p-0045" num="0044">The transfer source address indicates a transfer source of data to be transferred. Specifically, the transfer source address indicates an address (position) of a region in which data to be transferred is stored before transfer, the region being in an address space of the processor <b>101</b><i>a </i>or the processor <b>101</b><i>b. </i></p><p id="p-0046" num="0045">The transfer destination address indicates a transfer destination of data to be transferred. Specifically, the transfer destination address indicates an address (position) of a region in which data to be transferred is stored after the transfer, the region being in an address space of the processor <b>101</b><i>a </i>or the processor <b>101</b><i>b. </i></p><p id="p-0047" num="0046">The transfer attribute includes, for example, an attribute related to data transfer such as a size of data, addressing, or presence or absence of interrupt notification at a time of transfer completion, and control information.</p><p id="p-0048" num="0047">The link address indicates an address (position) of a region in which an LLI of a link destination, that is, the LLI to be referred to next, is stored, the region being in an address space of the processor <b>101</b><i>a </i>or the processor <b>101</b><i>b</i>. The link address can be dynamically rewritten, and the LLI to be referred to next is changed by rewriting the link address.</p><p id="p-0049" num="0048">The DMAC <b>112</b><i>a </i>controls a DMA. For example, the DMAC <b>112</b><i>a </i>sets a transfer parameter by reading the transfer parameter from the LLI region <b>151</b><i>a </i>of the RAM <b>114</b><i>a </i>and storing the transfer parameter in a built-in internal register. Then, for example, on the basis of the set transfer parameter, the DMAC <b>112</b><i>a </i>transfers data stored in the RAM <b>114</b><i>a </i>to the SPI <b>115</b><i>a </i>via the system bus <b>116</b><i>a</i>, thereby controlling transmission of the data to the processor <b>101</b><i>b</i>. Furthermore, for example, on the basis of the set transfer parameter, the DMAC <b>112</b><i>a </i>stores data, which is received by the SPI <b>115</b><i>a</i>, in the RAM <b>114</b><i>a </i>or the like via the system bus <b>116</b><i>a</i>, thereby controlling reception of the data from the processor <b>101</b><i>b. </i></p><p id="p-0050" num="0049">The flash ROM <b>113</b><i>a </i>stores a program or data necessary for processing by the processor <b>101</b><i>a. </i></p><p id="p-0051" num="0050">The RAM <b>114</b><i>a </i>temporarily stores a program or data necessary for processing by the processor <b>101</b><i>a</i>. Furthermore, as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the RAM <b>114</b><i>a </i>is provided with the above-described shared memory region <b>161</b><i>a. </i></p><p id="p-0052" num="0051">The shared memory region <b>161</b><i>a </i>is a region sharing an address space with a shared memory region <b>161</b><i>b </i>of the processor <b>101</b><i>b </i>and is used to share data. That is, the shared memory region <b>161</b><i>a </i>and the shared memory region <b>161</b><i>b </i>are regions having the same address configuration, and are controlled by the DMAC <b>112</b><i>a </i>and the DMAC <b>112</b><i>b </i>so that the same data is stored in regions corresponding to each other. Note that, although regions in the shared memory region <b>161</b><i>a </i>and in the shared memory region <b>161</b><i>b </i>that store the same data are regions basically having the same address, the regions may not have the same address as long as a correspondence is established.</p><p id="p-0053" num="0052">Furthermore, the shared memory region <b>161</b><i>a </i>is provided with a state data region <b>171</b><i>a</i>, a Bulletin Board System (BBS) region <b>172</b><i>a</i>, and a message region <b>173</b><i>a. </i></p><p id="p-0054" num="0053">The state data region <b>171</b><i>a </i>is a region for storing state data. The state data is data including state values indicating various states of the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b</i>. By sharing the state data in real time, the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b </i>can grasp states of each other in real time.</p><p id="p-0055" num="0054">Although not illustrated, the state data region <b>171</b><i>a </i>is provided with an originating side region and a reference side region. In the originating side region, state data indicating a state of the processor <b>101</b><i>a </i>is stored. As will be described later, the state data stored in the originating side region is transmitted to the processor <b>101</b><i>b </i>and shared with the processor <b>101</b><i>b</i>. In the reference side region, state data received from the processor <b>101</b><i>b </i>and indicating a state of the processor <b>101</b><i>b </i>is stored. For example, the originating side region of the state data region <b>171</b><i>a </i>of the processor <b>101</b><i>a </i>and a reference side region of a state data region <b>171</b><i>b </i>of the processor <b>101</b><i>b </i>are provided in regions having the same address. Furthermore, the reference side region of the state data region <b>171</b><i>a </i>of the processor <b>101</b><i>a </i>and an originating side region of the state data region <b>171</b><i>b </i>of the processor <b>101</b><i>b </i>are provided in regions having the same address.</p><p id="p-0056" num="0055">The BBS region <b>172</b><i>a </i>is a region for storing BBS data. The BBS data is data shared in a BBS function, and includes information (for example, a processing result or the like) output from each task executed in the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b</i>. The BBS function is a function of disclosing the BBS data so that the BBS data can be referred to from another task.</p><p id="p-0057" num="0056">Although not illustrated, the BBS region <b>172</b><i>a </i>is provided with an originating side region and a reference side region. In the originating side region, BBS data disclosed by a task of the processor <b>101</b><i>a </i>is stored. As will be described later, the BBS data stored in the originating side region is transmitted to the processor <b>101</b><i>b </i>and shared with the processor <b>101</b><i>b</i>. In the reference side region, the BBS data disclosed by the task of the processor <b>101</b><i>b </i>and received from the processor <b>101</b><i>b </i>is stored. For example, the originating side region of the BBS region <b>172</b><i>a </i>of the processor <b>101</b><i>a </i>and a reference side region of a BBS region <b>172</b><i>b </i>of the processor <b>101</b><i>b </i>are provided in regions having the same address. Furthermore, the reference side region of the BBS region <b>172</b><i>a </i>of the processor <b>101</b><i>a </i>and an originating side region of the BBS region <b>172</b><i>b </i>of the processor <b>101</b><i>b </i>are provided in regions having the same address.</p><p id="p-0058" num="0057">The message region <b>173</b><i>a </i>is a region for storing a message. The message is data transmitted and received by designating a destination between each task executed in the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b</i>. For example, there are a message requesting processing to a task of a transmission destination, a message responding to a received message, and the like.</p><p id="p-0059" num="0058">Although not illustrated, the message region <b>173</b><i>a </i>is provided with a transmission side region and a reception side region. In the transmission side region, a message transmitted by the task of the processor <b>101</b><i>a </i>is stored. As will be described later, the message stored in the transmission side region is transmitted to the processor <b>101</b><i>b </i>and shared with the processor <b>101</b><i>b</i>. In the reception side region, the message received from the task of the processor <b>101</b><i>b </i>is stored. For example, the transmission side region of the message region <b>173</b><i>a </i>of the processor <b>101</b><i>a </i>and a reception side region of a message region <b>173</b><i>b </i>of the processor <b>101</b><i>b </i>are provided in regions having the same address. Furthermore, the reception side region of the message region <b>173</b><i>a </i>of the processor <b>101</b><i>a </i>and a transmission side region of the message region <b>173</b><i>b </i>of the processor <b>101</b><i>b </i>are provided in regions having the same address.</p><p id="p-0060" num="0059">The SPI <b>115</b><i>a </i>can simultaneously perform bidirectional serial communication with the SPI <b>115</b><i>b </i>of the processor <b>101</b><i>b </i>by full-duplex communication. For example, the SPI <b>115</b><i>a </i>transmits data transferred from the RAM <b>114</b><i>a </i>by the DMAC <b>112</b><i>a </i>to the SPI <b>115</b><i>b</i>, and receives data transmitted from the SPI <b>115</b><i>b. </i></p><p id="p-0061" num="0060">Note that, hereinafter, description of the system bus <b>116</b><i>a </i>will be omitted in processing by the processor <b>101</b><i>a</i>. For example, in a case where the DMAC <b>112</b><i>a </i>transfers data, which is stored in the RAM <b>114</b><i>a</i>, to the SPI <b>115</b><i>a </i>via the system bus <b>116</b><i>a</i>, it is described that the DMAC <b>112</b><i>a </i>transfers data stored in the RAM <b>114</b><i>a </i>to the SPI <b>115</b><i>a. </i></p><p id="p-0062" num="0061">Similarly, hereinafter, description of a system bus <b>116</b><i>b </i>will be omitted in processing by the processor <b>101</b><i>b. </i></p><p id="p-0063" num="0062">&#x3c;Data Transfer Processing&#x3e;</p><p id="p-0064" num="0063">Next, an example of data transfer processing executed by the information processing system <b>100</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> to <b>11</b></figref>.</p><p id="p-0065" num="0064">Note that, hereinafter, there will be described an example of a case where data is transferred from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b</i>, provided that the processor <b>101</b><i>a </i>is regarded as a transmission side, the processor <b>101</b><i>b </i>is regarded as a reception side.</p><p id="p-0066" num="0065">Furthermore, there will be described an example of a case where the processor <b>101</b><i>a</i>, while repeatedly transmitting state data to the processor <b>101</b><i>b</i>, transmits BBS data and a message to the processor <b>101</b><i>b </i>as necessary.</p><p id="p-0067" num="0066">&#x3c;Processing by Processor <b>101</b><i>a </i>on Transmission Side&#x3e;</p><p id="p-0068" num="0067">First, processing by the processor <b>101</b><i>a </i>on the transmission side will be described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> to <b>8</b></figref>.</p><p id="p-0069" num="0068">&#x3c;Processing by CPU <b>111</b><i>a&#x3e;</i></p><p id="p-0070" num="0069">First, processing by the CPU <b>111</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side will be described with reference to the flowchart in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0071" num="0070">This processing starts when power of an apparatus in which the information processing system <b>100</b> is incorporated is turned on, and ends when the power is turned off, for example.</p><p id="p-0072" num="0071">In step S<b>1</b>, the CPU <b>111</b><i>a </i>sets a transfer parameter for transmission of the state data.</p><p id="p-0073" num="0072">Specifically, the CPU <b>111</b><i>a </i>generates state data including a state value of the processor <b>101</b><i>a</i>, and stores the state data in the originating side region of the state data region <b>171</b><i>a. </i></p><p id="p-0074" num="0073">Furthermore, as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the CPU <b>111</b><i>a </i>generates an LLI-SA1 to an LLI-SC1 and stores the LLI-SA1 to LLI-SC1 in LLI regions <b>151</b><i>a</i>-<b>1</b> to <b>151</b><i>a</i>-<b>3</b>, respectively.</p><p id="p-0075" num="0074">Note that 1 at an end of the LLI-SA1 is a serial number for distinguishing the same type of the LLI-SA by an order of generation or the like. Hereinafter, in a case where it is not particularly necessary to distinguish the same type of the LLI-SA, the number at the end is omitted and simply referred to as the LLI-SA. A similar applies to an LLI-SB and an LLI-SC.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a configuration example of the LLI-SA1 to LLI-SC1.</p><p id="p-0077" num="0076">The LLI-SA1 includes a transfer parameter used for controlling transmission of the LLI-SB1. An address of an LLI region <b>151</b><i>a</i>-<b>2</b> in which the LLI-SB1 is stored is set as the transfer source address. An address of a transmission channel TX, which is a region in the SPI <b>115</b><i>a </i>and is for storing data to be transmitted, is set as the transfer destination address. An address of the LLI region <b>151</b><i>a</i>-<b>3</b> in which the LLI-SC1 is stored is set as the link address. That is, the LLI-SC1 is set as a link destination of the LLI-SA1.</p><p id="p-0078" num="0077">The LLI-SB1 includes a transfer parameter used by the processor <b>101</b><i>b </i>on the reception side for controlling reception of the state data. An address of a reception channel RX, which is a region in the SPI <b>115</b><i>b </i>of the processor <b>101</b><i>b </i>and is for storing received data, is set as the transfer source address. An address of the reference side region of the state data region <b>171</b><i>b </i>of the processor <b>101</b><i>b </i>on the reception side is set as the transfer destination address, the reference side region corresponding to the originating side region of the state data region <b>171</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side. An address of the LLI region <b>151</b><i>b</i>-<b>1</b> in which an LLI-R1 of the processor <b>101</b><i>b </i>is stored is set as the link address. That is, the LLI-R1 is set as a link destination of the LLI-SB1.</p><p id="p-0079" num="0078">Note that 1 at an end of the LLI-R1 is a serial number for distinguishing the same type of the LLI-R by an order of generation or the like. Hereinafter, in a case where it is not particularly necessary to distinguish the same type of the LLI-R, the number at the end is omitted and simply referred to as the LLI-R.</p><p id="p-0080" num="0079">The LLI-SC1 includes a transfer parameter used for controlling transmission of the state data. An address of the originating side region of the state data region <b>171</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side is set as the transfer source address. The address of the transmission channel TX of the SPI <b>115</b><i>a </i>is set as the transfer destination address. An address of the LLI region <b>151</b><i>a</i>-<b>1</b> in which the LLI-SA1 is stored is set as the link address. That is, the LLI-SA1 is set as a link destination of the LLI-SC1. Therefore, the LLI-SA1 and the LLI-SC1 are linked to each other.</p><p id="p-0081" num="0080">In step S<b>2</b>, the CPU <b>111</b><i>a </i>determines whether or not to update the state data. For example, in a case where the state of the processor <b>101</b><i>a </i>is updated, the CPU <b>111</b><i>a </i>determines to update the state data, and the processing proceeds to step S<b>3</b>.</p><p id="p-0082" num="0081">In step S<b>3</b>, the CPU <b>111</b><i>a </i>updates the state data. Specifically, the CPU <b>111</b><i>a </i>generates state data including an updated state value of the processor <b>101</b><i>a</i>, and stores the state data in the originating side region of the state data region <b>171</b><i>a. </i></p><p id="p-0083" num="0082">Thereafter, the processing proceeds to step S<b>4</b>.</p><p id="p-0084" num="0083">Meanwhile, in step S<b>2</b>, in a case where the state of the processor <b>101</b><i>a </i>is not updated, the CPU <b>111</b><i>a </i>determines not to update the state data, the processing in step S<b>3</b> is skipped, and the processing proceeds to step S<b>4</b>.</p><p id="p-0085" num="0084">In step S<b>4</b>, the CPU <b>111</b><i>a </i>determines whether or not to share the BBS data. In a case where it is determined not to share the BBS data, the processing proceeds to step S<b>5</b>.</p><p id="p-0086" num="0085">In step S<b>5</b>, the CPU <b>111</b><i>a </i>determines whether or not to transmit a message. In a case where it is determined not to transmit the message, the processing returns to step S<b>2</b>.</p><p id="p-0087" num="0086">Thereafter, the processing returns to step <b>2</b>, and the processing in steps S<b>2</b> to S<b>5</b> is repeatedly executed until it is determined in step S<b>4</b> that the BBS data is shared or it is determined in step S<b>5</b> that the message is transmitted.</p><p id="p-0088" num="0087">With this arrangement, on the basis of the LLI-SA1 to LLI-SC1 set as the LLI region <b>151</b><i>a</i>, control of transmission of the LLI-SB1 from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>and control of transmission of the state data from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>are alternately repeated. Then, as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the state data (Status) is repeatedly transmitted from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b. </i></p><p id="p-0089" num="0088">Meanwhile, in step S<b>4</b>, for example, as illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, in a case where the CPU <b>111</b><i>a </i>determines that a task <b>201</b><i>a </i>under execution shares the BBS data, the processing proceeds to step S<b>6</b>.</p><p id="p-0090" num="0089">In step S<b>6</b>, the CPU <b>111</b><i>a </i>sets a transfer parameter for transmission of the BBS data.</p><p id="p-0091" num="0090">For example, the CPU <b>111</b><i>a </i>stores the shared BBS data in the originating side region of the BBS region <b>172</b><i>a. </i></p><p id="p-0092" num="0091">Furthermore, as illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the CPU <b>111</b><i>a </i>executes a communication control task <b>202</b><i>a </i>called from the task <b>201</b><i>a </i>to generate an LLI-BA1 to an LLI-BC1, and stores the LLI-BA1 to LLI-BC1 in LLI regions <b>151</b><i>a</i>-<b>4</b> to <b>151</b><i>a</i>-<b>6</b>.</p><p id="p-0093" num="0092">Note that 1 at an end of the LLI-BA1 is a serial number for distinguishing the same type of the LLI-BA by an order of generation or the like. Hereinafter, in a case where it is not particularly necessary to distinguish the same type of the LLI-BA, the number at the end is omitted and simply referred to as the LLI-BA. A similar applies to an LLI-BB and an LLI-BC.</p><p id="p-0094" num="0093">The LLI-BA1 includes a transfer parameter used for controlling transmission of the LLI-BB1. An address of the LLI region <b>151</b><i>a</i>-<b>5</b> in which the LLI-BB1 is stored is set as the transfer source address. The address of the transmission channel TX of the SPI <b>115</b><i>a </i>is set as the transfer destination address. An address of the LLI region <b>151</b><i>a</i>-<b>6</b> in which the LLI-BC1 is stored is set as the link address. That is, the LLI-BC1 is set as a link destination of the LLI-BA1.</p><p id="p-0095" num="0094">The LLI-BB1 includes a transfer parameter used by the processor <b>101</b><i>b </i>on the reception side for controlling reception of the BBS data. Specifically, the address of the reception channel RX of the SPI <b>115</b><i>b </i>of the processor <b>101</b><i>b </i>is set as the transfer source address. The address of the reference side region of the BBS region <b>172</b><i>b </i>of the processor <b>101</b><i>b </i>on the reception side is set as the transfer destination address. An address of the LLI region <b>151</b><i>b</i>-<b>1</b> in which an LLI-R1 of the processor <b>101</b><i>b </i>is stored is set as the link address. That is, the LLI-R1 is set as a link destination of the LLI-BB1.</p><p id="p-0096" num="0095">The LLI-BC1 includes a transfer parameter used for controlling transmission of the BBS data. Specifically, an address of the originating side region of the BBS region <b>172</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side is set as the transfer source address. The address of the transmission channel TX of the SPI <b>115</b><i>a </i>is set as the transfer destination address. An address of an LLI region <b>151</b><i>a</i>-<b>7</b> next to the LLI region <b>151</b><i>a</i>-<b>6</b> in which the LLI-BC1 is stored is set as the link address.</p><p id="p-0097" num="0096">In step S<b>7</b>, the CPU <b>111</b><i>a </i>sets a transfer parameter for transmission of the state data. That is, the CPU <b>111</b><i>a </i>sets a transfer parameter for transmission of the state data after transmission of the BBS data. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the CPU <b>111</b><i>a </i>generates an LLI-SA2 to an LLI-SC2 similar to the LLI-SA1 to LLI-SC1, and stores the LLI-SA2 to LLI-SC2 in LLI regions <b>151</b><i>a</i>-<b>7</b> to <b>151</b><i>a</i>-<b>9</b>, respectively.</p><p id="p-0098" num="0097">In step S<b>8</b>, the CPU <b>111</b><i>a </i>changes a link destination of the transfer parameter to the BBS data. Specifically, the CPU <b>111</b><i>a </i>rewrites a link address of the LLI-SC1 stored in the LLI region <b>151</b><i>a</i>-<b>3</b> from the address of the LLI region <b>151</b><i>a</i>-<b>1</b> to the address of the LLI region <b>151</b><i>a</i>-<b>4</b>. With this arrangement, the link destination of the LLI-SC1 is changed from the LLI-SA1 to the LLI-BA1.</p><p id="p-0099" num="0098">Thereafter, the processing returns to step S<b>2</b>, and processing in and after step S<b>2</b> is executed. With this arrangement, after the transmission of the BBS data is set, the update of the state data resumes.</p><p id="p-0100" num="0099">Meanwhile, in step S<b>5</b>, for example, as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, in a case where the CPU <b>111</b><i>a </i>determines that the task <b>201</b><i>a </i>under execution is to transmit a message to another task under execution in the processor <b>101</b><i>b</i>, the processing proceeds to step S<b>9</b>.</p><p id="p-0101" num="0100">In step S<b>9</b>, the CPU <b>111</b><i>a </i>sets a transfer parameter for transmission of the message.</p><p id="p-0102" num="0101">For example, in a transmission side region of the message region <b>173</b><i>a</i>, the CPU <b>111</b><i>a </i>stores a message to be transmitted.</p><p id="p-0103" num="0102">Furthermore, for example, as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the CPU <b>111</b><i>a </i>executes the communication control task <b>202</b><i>a </i>called from the task <b>201</b><i>a </i>to generate an LLI-MA1 to LLI-MC1, and stores the LLI-MA1 to LLI-MC1 in the LLI regions <b>151</b><i>a</i>-<b>4</b> to <b>151</b><i>a</i>-<b>6</b>.</p><p id="p-0104" num="0103">Note that 1 at an end of the LLI-MA1 is a serial number for distinguishing the same type of the LLI-MA by an order of generation or the like. Hereinafter, in a case where it is not particularly necessary to distinguish the same type of the LLI-MA, the number at the end is omitted and simply referred to as the LLI-MA. A similar applies to an LLI-MB and an LLI-MC.</p><p id="p-0105" num="0104">The LLI-MA1 includes a transfer parameter used for controlling transmission of the LLI-MB1. An address of the LLI region <b>151</b><i>a</i>-<b>5</b> in which the LLI-MB1 is stored is set as the transfer source address. The address of the transmission channel TX of the SPI <b>115</b><i>a </i>is set as the transfer destination address. The address of the LLI region <b>151</b><i>a</i>-<b>6</b> in which the LLI-MC1 is stored is set as the link address. That is, the LLI-MC1 is set as a link destination of the LLI-MA1.</p><p id="p-0106" num="0105">The LLI-MB1 includes a transfer parameter used by the processor <b>101</b><i>b </i>on the reception side for controlling reception of a message. The address of the reception channel RX of the SPI <b>115</b><i>b </i>of the processor <b>101</b><i>b </i>is set as the transfer source address. The address of the reception side region of the message region <b>173</b><i>b </i>of the processor <b>101</b><i>b </i>on the reception side is set as the transfer destination address. An address of the LLI region <b>151</b><i>b</i>-<b>1</b> in which an LLI-R1 of the processor <b>101</b><i>b </i>is stored is set as the link address. That is, the LLI-R1 is set as a link destination of the LLI-MB1. Transfer completion notification control information for making an interrupt notification at a time of completion of transfer of data (message) based on the LLI-MB1 is set as the attribute.</p><p id="p-0107" num="0106">The LLI-MC1 includes a transfer parameter used for controlling transmission of the message. An address of the transmission side region of the message region <b>173</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side is set as the transfer source address. The address of the transmission channel TX of the SPI <b>115</b><i>a </i>is set as the transfer destination address. The address of the LLI region <b>151</b><i>a</i>-<b>7</b> next to the LLI region <b>151</b><i>a</i>-<b>6</b> in which the LLI-MC1 is stored is set as the link address.</p><p id="p-0108" num="0107">In step S<b>10</b>, a transfer parameter for transmission of the state data is set similarly to the processing in step S<b>7</b>. That is, a transfer parameter for transmission of the state data after transmission of the message is set. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the CPU <b>111</b><i>a </i>generates an LLI-SA2 to an LLI-SC2 similar to the LLI-SA1 to LLI-SC1, and stores the LLI-SA2 to LLI-SC2 in the LLI regions <b>151</b><i>a</i>-<b>7</b> to <b>151</b><i>a</i>-<b>9</b>, respectively.</p><p id="p-0109" num="0108">In step S<b>11</b>, the CPU <b>111</b><i>a </i>changes a link destination of the transfer parameter to the message. Specifically, the CPU <b>111</b><i>a </i>rewrites a link address of the LLI-SC1 stored in the LLI region <b>151</b><i>a</i>-<b>3</b> from the address of the LLI region <b>151</b><i>a</i>-<b>1</b> to the address of the LLI region <b>151</b><i>a</i>-<b>4</b>. With this arrangement, the link destination of the LLI-SC1 is changed from the LLI-SA1 to the LLI-MA1.</p><p id="p-0110" num="0109">Thereafter, the processing returns to step S<b>2</b>, and processing in and after step S<b>2</b> is executed. With this arrangement, for example, after the transmission of the message is set, the update of the state data resumes.</p><p id="p-0111" num="0110">&#x3c;Processing by DMAC <b>112</b><i>a&#x3e;</i></p><p id="p-0112" num="0111">Next, processing by the DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side will be described with reference to the flowchart in <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0113" num="0112">This processing starts when power of an apparatus in which the information processing system <b>100</b> is incorporated is turned on, and ends when the power is turned off, for example.</p><p id="p-0114" num="0113">In step S<b>31</b>, the DMAC <b>112</b><i>a </i>reads a transfer parameter for transmission of the transfer parameter.</p><p id="p-0115" num="0114">For example, in the processing in a first step S<b>31</b>, the DMAC <b>112</b><i>a </i>reads the LLI-SA1 from the LLI region <b>151</b><i>a</i>-<b>1</b> and stores the LLI-SA1 in the built-in register.</p><p id="p-0116" num="0115">In step S<b>32</b>, the DMAC <b>112</b><i>a </i>transmits a transfer parameter for reception of the transfer parameter.</p><p id="p-0117" num="0116">For example, in the processing in a first step S<b>32</b>, the DMAC <b>112</b><i>a </i>reads the LLI-SB1 from the LLI region <b>151</b><i>a</i>-<b>1</b> on the basis of the LLI-SA1, and stores the LLI-SB1 in the transmission channel TX of the SPI <b>115</b><i>a. </i></p><p id="p-0118" num="0117">The SPI <b>115</b><i>a </i>transmits the LLI-SB1 stored in the transmission channel TX to the processor <b>101</b><i>b. </i></p><p id="p-0119" num="0118">In contrast, the processor <b>101</b><i>b </i>on the reception side receives the LLI-SB1 in step S<b>121</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> described later.</p><p id="p-0120" num="0119">In step S<b>33</b>, the DMAC <b>112</b><i>a </i>reads a transfer parameter for transmission of the transfer data.</p><p id="p-0121" num="0120">For example, in the processing in a first step S<b>33</b>, the DMAC <b>112</b><i>a </i>reads the LLI-SC1 from the LLI region <b>151</b><i>a</i>-<b>3</b> on the basis of a link address of the LLI-SA1, and stores the LLI-SC1 in the built-in register.</p><p id="p-0122" num="0121">In step S<b>34</b>, the DMAC <b>112</b><i>a </i>transmits the transfer data.</p><p id="p-0123" num="0122">For example, in the processing in a first step S<b>34</b>, the DMAC <b>112</b><i>a </i>reads the state data from the originating side region of the state data region <b>171</b><i>a </i>on the basis of the LLI-SC1, and stores the state data in the transmission channel TX of the SPI <b>115</b><i>a. </i></p><p id="p-0124" num="0123">The SPI <b>115</b><i>a </i>transmits the state data stored in the transmission channel TX to the processor <b>101</b><i>b. </i></p><p id="p-0125" num="0124">In contrast, the processor <b>101</b><i>b </i>on the reception side receives the state data in step S<b>123</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> described later.</p><p id="p-0126" num="0125">Thereafter, the processing returns to step S<b>31</b>, and the processing in steps S<b>31</b> to S<b>34</b> is repeatedly executed. With this arrangement, for example, in a case where the link destination of the transfer parameter is not changed in step S<b>8</b> or step S<b>11</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref> described above, the state data (Status) is repeatedly transmitted from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>by the above-described processing as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0127" num="0126">Meanwhile, in a case where the link destination of the transfer parameter is changed to the BBS data in step S<b>8</b> described above, the BBS data is transmitted.</p><p id="p-0128" num="0127">Specifically, in step S<b>31</b>, the DMAC <b>112</b><i>a </i>reads the LLI-BA1 from the LLI region <b>151</b><i>a</i>-<b>4</b> on the basis of the link address of the LLI-SC1, and stores the LLI-BA1 in the built-in register.</p><p id="p-0129" num="0128">In step S<b>32</b>, the DMAC <b>112</b><i>a </i>reads the LLI-BB1 from the LLI region <b>151</b><i>a</i>-<b>5</b> on the basis of the LLI-BA1, and stores the LLI-BB1 in the transmission channel TX of the SPI <b>115</b><i>a. </i></p><p id="p-0130" num="0129">The SPI <b>115</b><i>a </i>transmits the LLI-BB1 stored in the transmission channel TX to the processor <b>101</b><i>b. </i></p><p id="p-0131" num="0130">In contrast, the processor <b>101</b><i>b </i>on the reception side receives the LLI-BB1 in step S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> described later.</p><p id="p-0132" num="0131">In step S<b>33</b>, the DMAC <b>112</b><i>a </i>reads the LLI-BC1 from the LLI region <b>151</b><i>a</i>-<b>6</b> on the basis of a link address of the LLI-BA1, and stores the LLI-BC1 in the built-in register.</p><p id="p-0133" num="0132">In step S<b>34</b>, the DMAC <b>112</b><i>a </i>reads the BBS data from the originating side region of the BBS region <b>172</b><i>a </i>on the basis of the LLI-BC1, and stores the BBS data in the transmission channel TX of the SPI <b>115</b><i>a. </i></p><p id="p-0134" num="0133">The SPI <b>115</b><i>a </i>transmits the BBS data stored in the transmission channel TX to the processor <b>101</b><i>b. </i></p><p id="p-0135" num="0134">With this arrangement, as illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the transmission of the state data (Status) from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>is interrupted, and the BBS data is transmitted.</p><p id="p-0136" num="0135">In contrast, the processor <b>101</b><i>b </i>on the reception side receives the BBS data in step S<b>123</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> described later.</p><p id="p-0137" num="0136">Thereafter, the processing returns to step S<b>31</b>, the processing in and after step S<b>31</b> is executed, and the transmission of the state data resumes on the basis of the LLI-SA2 to LLI-SC2.</p><p id="p-0138" num="0137">Meanwhile, in a case where the link destination of the transfer parameter is changed to the message in step S<b>11</b> described above, the message is transmitted.</p><p id="p-0139" num="0138">Specifically, in step S<b>31</b>, the DMAC <b>112</b><i>a </i>reads the LLI-MA1 from the LLI region <b>151</b><i>a</i>-<b>4</b> on the basis of the link address of the LLI-SC1, and stores the LLI-MA1 in the built-in register.</p><p id="p-0140" num="0139">In step S<b>32</b>, the DMAC <b>112</b><i>a </i>reads the LLI-MB1 from the LLI region <b>151</b><i>a</i>-<b>4</b> on the basis of the LLI-MA1, and stores the LLI-MB1 in the transmission channel TX of the SPI <b>115</b><i>a. </i></p><p id="p-0141" num="0140">The SPI <b>115</b><i>a </i>transmits the LLI-MB1 stored in the transmission channel TX to the processor <b>101</b><i>b. </i></p><p id="p-0142" num="0141">In contrast, the processor <b>101</b><i>b </i>on the reception side receives the LLI-MB1 in step S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> described later.</p><p id="p-0143" num="0142">In step S<b>33</b>, the DMAC <b>112</b><i>a </i>reads the LLI-MC1 from the LLI region <b>151</b><i>a</i>-<b>6</b> on the basis of a link address of the LLI-MA1, and stores the LLI-MC1 in the built-in register.</p><p id="p-0144" num="0143">In step S<b>34</b>, the DMAC <b>112</b><i>a </i>reads the message from the transmission side region of the message region <b>173</b><i>a </i>on the basis of the LLI-MC1, and stores the message in the transmission channel TX of the SPI <b>115</b><i>a. </i></p><p id="p-0145" num="0144">The SPI <b>115</b><i>a </i>transmits the message stored in the transmission channel TX to the processor <b>101</b><i>b. </i></p><p id="p-0146" num="0145">With this arrangement, as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the transmission of the state data (Status) from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>is interrupted, and the message is transmitted.</p><p id="p-0147" num="0146">In contrast, the processor <b>101</b><i>b </i>on the reception side receives the message in step S<b>123</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> described later.</p><p id="p-0148" num="0147">Thereafter, the processing returns to step S<b>31</b>, the processing in and after step S<b>31</b> is executed, and the transmission of the state data resumes on the basis of the LLI-SA2 to LLI-SC2.</p><p id="p-0149" num="0148">&#x3c;Processing by Processor <b>101</b><i>b </i>on Reception Side&#x3e;</p><p id="p-0150" num="0149">Next, processing executed by the processor <b>101</b><i>b </i>on the reception side, corresponding to the processing by the processor <b>101</b><i>a </i>on the transmission side in <figref idref="DRAWINGS">FIGS. <b>3</b> to <b>8</b></figref>, will be described with reference to <figref idref="DRAWINGS">FIGS. <b>9</b> to <b>11</b></figref>.</p><p id="p-0151" num="0150">&#x3c;Initial Processing by CPU <b>111</b><i>b&#x3e;</i></p><p id="p-0152" num="0151">First, initial processing executed by a CPU <b>111</b><i>b </i>of the processor <b>101</b><i>b </i>on the reception side will be described with reference to the flowchart in <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0153" num="0152">This processing starts, for example, when power of an apparatus in which the information processing system <b>100</b> is incorporated is turned on.</p><p id="p-0154" num="0153">In step S<b>101</b>, the processor <b>101</b><i>b </i>sets a transfer parameter for reception of the transfer parameter. Specifically, as illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the CPU <b>111</b><i>b </i>generates the LLI-R1 and stores the LLI-R1 in the LLI region <b>151</b><i>b</i>-<b>1</b>.</p><p id="p-0155" num="0154">The LLI-R1 includes a transfer parameter used for controlling reception of the transfer parameter. Specifically, as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the address of the reception channel RX of the SPI <b>115</b><i>b </i>is set as the transfer source address. An address of an LLI region <b>151</b><i>b</i>-<b>2</b> next to the LLI region <b>151</b><i>b</i>-<b>1</b> in which the LLI-R1 is stored is set as the transfer destination address. The address of the LLI region <b>151</b><i>b</i>-<b>2</b> is set as the link address. That is, the LLI to be stored in the LLI region <b>151</b><i>b</i>-<b>2</b> is set as a link destination of the LLI-R1.</p><p id="p-0156" num="0155">Thereafter, the processing ends.</p><p id="p-0157" num="0156">&#x3c;Processing by DMAC <b>112</b><i>b&#x3e;</i></p><p id="p-0158" num="0157">Next, processing executed by the DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>on the reception side will be described with reference to the flowchart in <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0159" num="0158">This processing starts when power of an apparatus in which the information processing system <b>100</b> is incorporated is turned on, and ends when the power is turned off, for example.</p><p id="p-0160" num="0159">In step S<b>121</b>, the DMAC <b>112</b><i>b </i>receives a transfer parameter for reception of the transfer data.</p><p id="p-0161" num="0160">The DMAC <b>112</b><i>b </i>reads the LLI-R1 from the LLI region <b>151</b><i>b</i>-<b>1</b>, and sets LLI-R1 in the internal register. With this arrangement, the DMAC <b>112</b><i>b </i>enters a reception waiting state. That is, the DMAC <b>112</b><i>b </i>waits for transmission of the LLI-SB1, LLI-BB1, or LLI-MB1 to the reception channel RX of the SPI <b>115</b><i>b. </i></p><p id="p-0162" num="0161">The SPI <b>115</b><i>b </i>receives the LLI-SB1, LLI-BB1, or LLI-MB1 transmitted in the processing in step S<b>32</b> in <figref idref="DRAWINGS">FIG. <b>8</b></figref> from the processor <b>101</b><i>a </i>and stores the LLI-SB1, LLI-BB1, or LLI-MB1 in the reception channel RX.</p><p id="p-0163" num="0162">In step S<b>122</b>, the processor <b>101</b><i>b </i>sets a transfer parameter for reception of the transfer data.</p><p id="p-0164" num="0163">Specifically, the DMAC <b>112</b><i>b </i>reads the LLI-SB1, LLI-BB1, or LLI-MB1 from the reception channel RX of the SPI <b>115</b><i>b </i>on the basis of the LLI-R1, and stores the LLI-SB1, LLI-BB1, or LLI-MB1 in the LLI region <b>151</b><i>b</i>-<b>2</b>.</p><p id="p-0165" num="0164">Note that <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>4</b></figref> illustrate an example in which the LLI-SB1 is stored in the LLI region <b>151</b><i>b</i>-<b>2</b>.</p><p id="p-0166" num="0165">As described above, the address of the LLI region <b>151</b><i>b</i>-<b>2</b> is set as the link address of the LLI-R1. Furthermore, as described above, the address of the LLI region <b>151</b><i>b</i>-<b>1</b> is set in the link addresses of the LLI-SB1, LLI-BB1, and LLI-MB1. Therefore, the LLI-R1 and the LLI-SB1, LLI-BB1, or LLI-MB1 are linked to each other.</p><p id="p-0167" num="0166">In step S<b>123</b>, the processor <b>101</b><i>b </i>receives the transfer data.</p><p id="p-0168" num="0167">Specifically, the DMAC <b>112</b><i>b </i>reads the LLI-SB1, LLI-BB1, or LLI-MB1 from the LLI region <b>151</b><i>b</i>-<b>2</b>, and stores the LLI-SB1, LLI-BB1, or LLI-MB1 in the internal register. With this arrangement, the DMAC <b>112</b><i>b </i>enters a reception waiting state. That is, the DMAC <b>112</b><i>b </i>waits for the state data, BBS data, or message to be transmitted to the reception channel RX of the SPI <b>115</b><i>b. </i></p><p id="p-0169" num="0168">The SPI <b>115</b><i>b </i>receives, from the processor <b>101</b><i>a</i>, the state data, BBS data, or message transmitted in the processing in step S<b>34</b> in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, and stores the state data, BBS data, or message in the reception channel RX.</p><p id="p-0170" num="0169">The transfer data stored in the reception channel RX is transferred to the shared memory region <b>161</b><i>b </i>by the DMAC <b>112</b><i>b. </i></p><p id="p-0171" num="0170">For example, in a case where the state data is received, the DMAC <b>112</b><i>b </i>reads the transfer data from the reception channel RX of the SPI <b>115</b><i>b </i>on the basis of the LLI-SB1, and stores the transfer data in the reference side region of the state data region <b>171</b><i>b </i>of the shared memory region <b>161</b><i>b. </i></p><p id="p-0172" num="0171">In a case where the BBS data is received, the DMAC <b>112</b><i>b </i>reads the BBS data from the reception channel RX of the SPI <b>115</b><i>b </i>on the basis of the LLI-BB1, and stores the BBS data in the reference side region of the BBS region <b>172</b><i>b </i>of the shared memory region <b>161</b><i>b. </i></p><p id="p-0173" num="0172">In a case where the message is received, the DMAC <b>112</b><i>b </i>reads the message from the reception channel RX of the SPI <b>115</b><i>b </i>on the basis of the LLI-MB1, and stores the message in the reception side region of the message region <b>173</b><i>b </i>of the shared memory region <b>161</b><i>b. </i></p><p id="p-0174" num="0173">In step S<b>124</b>, the DMAC <b>112</b><i>b </i>determines whether or not to make a transfer completion notification. In a case where the DMAC <b>112</b><i>b </i>transfers the message from the SPI <b>115</b><i>b </i>to the message region <b>173</b><i>b </i>on the basis of the LLI-MB1, the DMAC <b>112</b><i>b </i>determines, on the basis of the transfer completion notification control information set for the attribute of the LLI-MB1, to make a transfer completion notification, and the processing proceeds to step S<b>125</b>.</p><p id="p-0175" num="0174">In step S<b>125</b>, the DAMC <b>112</b><i>b </i>makes a transfer completion notification. Specifically, the DAMC <b>112</b><i>b </i>makes an interrupt notification of message transfer completion to the CPU <b>111</b><i>b. </i></p><p id="p-0176" num="0175">Thereafter, the processing returns to step S<b>121</b>, and the processing in steps S<b>121</b> to S<b>125</b> is repeatedly executed. That is, processing of receiving a transfer parameter for reception of any one of the state data, the BBS data, or the message from the processor <b>101</b><i>a </i>on a transmission side, receiving the state data, the BBS data, or the message by using the received transfer parameter, and storing the state data, the BBS data, or the message in a predetermined region of the shared memory region <b>161</b><i>b </i>is repeatedly executed.</p><p id="p-0177" num="0176">Meanwhile, in a case where transfer of the state data from the SPI <b>115</b><i>b </i>to the state data region <b>171</b><i>a </i>on the basis of the LLI-SB1, the transfer completion notification control information is not set for the attribute of the LLI-SB1, and therefore, the DMAC <b>112</b><i>b </i>determines not to make the transfer completion notification in step S<b>124</b>, and the processing returns to step S<b>121</b>. Similarly, in a case where transfer of the BBS data from the SPI <b>115</b><i>b </i>to the BBS region <b>172</b><i>b </i>on the basis of the LLI-BB1, the transfer completion notification control information is not set for the attribute of the LLI-BB1, and therefore, the DMAC <b>112</b><i>b </i>determines not to make the transfer completion notification, and the processing returns to step S<b>121</b>.</p><p id="p-0178" num="0177">Thereafter, the processing in steps S<b>121</b> to S<b>125</b> is repeatedly executed.</p><p id="p-0179" num="0178">&#x3c;Interrupt Processing&#x3e;</p><p id="p-0180" num="0179">Next, transfer data reception processing executed by the CPU <b>111</b><i>b</i>, corresponding to the processing by the DMAC <b>112</b><i>b </i>in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, will be described with reference to the flowchart in <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0181" num="0180">This processing is started in step S<b>125</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref> when the DAMC <b>112</b><i>b </i>makes an interrupt notification of message transfer completion to the CPU <b>111</b><i>b. </i></p><p id="p-0182" num="0181">In step S<b>141</b>, the CPU <b>111</b><i>b </i>analyzes the transfer data. Specifically, the CPU <b>111</b><i>b </i>analyzes the message, which is transfer data stored in the reception side region of the message region <b>173</b><i>b</i>, thereby designating a destination task of the message and generating a task message to be transmitted to the destination task.</p><p id="p-0183" num="0182">In step S<b>142</b>, the CPU <b>111</b><i>b </i>transmits a task message to the destination task.</p><p id="p-0184" num="0183">Thereafter, the transfer data reception processing ends.</p><p id="p-0185" num="0184">As described above, state data, BBS data, and a message can be transferred from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b. </i></p><p id="p-0186" num="0185">Furthermore, sharing of the address space between the shared memory region <b>161</b><i>a </i>of the processor <b>101</b><i>a </i>and the shared memory region <b>161</b><i>b </i>of the processor <b>101</b><i>b </i>is achieved by a communication control algorithm. Therefore, load on the transmission side and on the reception side is reduced as compared with a case of using a mechanism of data transmission and reception by protocol communication.</p><p id="p-0187" num="0186">For example, the CPU <b>111</b><i>a </i>of the processor <b>101</b><i>a </i>on the transmission side is only required to set the LLI and rewrite the link address of the LLI, and does not need to perform device control for transfer start, transfer end, or the like, on the DMAC <b>112</b><i>a </i>and the SPI <b>115</b><i>a</i>. Therefore, the processing by the CPU <b>111</b><i>a </i>is reduced.</p><p id="p-0188" num="0187">For example, the CPU <b>111</b><i>b </i>of the processor <b>101</b><i>b </i>on the reception side is only required to set the LLI-R1 in the LLI region <b>151</b><i>b</i>, and does not need to perform any other LLI setting. Furthermore, the CPU <b>111</b><i>b </i>does not need to perform device control for transfer start, transfer end, or the like, on the DMAC <b>112</b><i>b </i>and the SPI <b>115</b><i>b</i>. Therefore, the processing by the CPU <b>111</b><i>b </i>is reduced.</p><p id="p-0189" num="0188">Moreover, because a transfer parameter is achieved by the linked list structure, for example, state data stored in the state data region <b>171</b><i>a </i>can be repeatedly transferred even if the CPU <b>111</b><i>a </i>is not interposed. Furthermore, it is possible to continuously transfer two or more types of data among the state data, BBS data, and message stored in the shared memory region <b>161</b><i>a</i>. Furthermore, content of the data to be transferred can be changed only by the CPU <b>111</b><i>a </i>changing a link destination of the LLI.</p><p id="p-0190" num="0189">Note that, although the processing of data transfer from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>has been described above, data transfer from the processor <b>101</b><i>b </i>to the processor <b>101</b><i>a </i>can also be achieved by similar processing.</p><p id="p-0191" num="0190">Furthermore, because the SPI <b>115</b><i>a </i>and the SPI <b>115</b><i>b </i>can perform full-duplex communication, data transfer from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>and data transfer from the processor <b>101</b><i>b </i>to the processor <b>101</b><i>a </i>can be executed asynchronously and in parallel.</p><p id="p-0192" num="0191">&#x3c;Specific Example of Data Transfer Processing&#x3e;</p><p id="p-0193" num="0192">Next, a specific example of the above-described data transfer processing will be described with reference to the sequence diagram in <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0194" num="0193"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a sequence diagram of a case where a processing request message is transmitted from the task <b>201</b><i>a </i>of the processor <b>101</b><i>a </i>to a task <b>201</b><i>b </i>of the processor <b>101</b><i>b</i>, a processing result of the task <b>201</b><i>b </i>is shared by the BBS, and a processing response message is returned from the task <b>201</b><i>b </i>to the task <b>201</b><i>a. </i></p><p id="p-0195" num="0194">Note that it is assumed that, by the above-described processing, state data is transmitted from the processor <b>101</b><i>a </i>to the processor <b>101</b><i>b </i>at all times, and state data is transmitted from the processor <b>101</b><i>b </i>to the processor <b>101</b><i>a </i>at all times.</p><p id="p-0196" num="0195">The task <b>201</b><i>a </i>of the processor <b>101</b><i>a </i>generates a processing request message to the task <b>201</b><i>b </i>and stores the processing request message in the transmission side region of the message region <b>173</b><i>a </i>of the shared memory region <b>161</b><i>a</i>. The task <b>201</b><i>a </i>calls the communication control task <b>202</b><i>a </i>and requests transmission of the processing request message.</p><p id="p-0197" num="0196">The communication control task <b>202</b><i>a </i>generates LLI-MA to LLI-MC used for transmitting the processing request message and stores the LLI-MA to LLI-MC in the LLI region <b>151</b><i>a. </i></p><p id="p-0198" num="0197">The DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>reads the LLI<b>1</b>-MA from the LLI region <b>151</b><i>a </i>and stores the LLI<b>1</b>-MA in the internal register. The DMAC <b>112</b><i>a </i>transmits the LLI-MB via the SPI <b>115</b><i>a </i>on the basis of the LLI-MA.</p><p id="p-0199" num="0198">Meanwhile, the DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>reads the LLI-R from the LLI region <b>151</b><i>b</i>, and stores the LLI-R in the internal register. The DMAC <b>112</b><i>b </i>receives the LLI-MB via the SPI <b>115</b><i>b </i>on the basis of the LLI-R, and stores the LLI-MB in the LLI region <b>151</b><i>b. </i></p><p id="p-0200" num="0199">The DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>reads the LLI-MC from the LLI region <b>151</b><i>a </i>and stores the LLI-MC in the internal register. On the basis of the LLI-MC, the DMAC <b>112</b><i>a </i>transmits, via the SPI <b>115</b><i>a</i>, a processing request message stored in the transmission side region of the message region <b>173</b><i>a </i>of the shared memory region <b>161</b><i>a. </i></p><p id="p-0201" num="0200">The DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>reads the LLI-MB from the LLI region <b>151</b><i>b</i>, and stores the LLI-MB in the internal register. The DMAC <b>112</b><i>b </i>receives the processing request message via the SPI <b>115</b><i>b </i>on the basis of the LLI-MB, and stores the processing request message in the reception side region of the message region <b>173</b><i>b </i>of the shared memory region <b>161</b><i>b</i>. Furthermore, the DMAC <b>112</b><i>b </i>transmits the interrupt notification to a communication control task <b>202</b><i>b </i>on the basis of the transfer completion notification control information set for the attribute of the LLI-MB.</p><p id="p-0202" num="0201">The communication control task <b>202</b><i>b </i>reads the processing request message from the message region <b>173</b><i>b </i>of the shared memory region <b>161</b><i>b</i>, and transmits the processing request message to the task <b>201</b><i>b </i>as a task message. With this arrangement, the task <b>201</b><i>b </i>wakes up.</p><p id="p-0203" num="0202">The task <b>201</b><i>b </i>performs predetermined processing according to the processing request message, and stores the BBS data indicating a processing result in the originating side region of the BBS region <b>172</b><i>b </i>of the shared memory region <b>161</b><i>b</i>. The task <b>201</b><i>b </i>calls the communication control task <b>202</b><i>b </i>and requests transmission of the BBS data.</p><p id="p-0204" num="0203">The communication control task <b>202</b><i>b </i>generates LLI-BA to LLI-BC for transmitting the BBS data, and stores the LLI-BA to LLI-BC in the LLI region <b>151</b><i>b. </i></p><p id="p-0205" num="0204">The DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>reads the LLI-BA from the LLI region <b>151</b><i>b</i>, and stores the LLI-BA in the internal register. The DMAC <b>112</b><i>b </i>transmits the LLI-BB via the SPI <b>115</b><i>b </i>on the basis of the LLI-BA.</p><p id="p-0206" num="0205">The DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>reads the LLI-R from the LLI region <b>151</b><i>a </i>and stores the LLI-R in the internal register. The DMAC <b>112</b><i>a </i>receives the LLI-BB via the SPI <b>115</b><i>a </i>on the basis of the LLI-R, and stores the LLI-BB in the LLI region <b>151</b><i>a. </i></p><p id="p-0207" num="0206">The DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>reads the LLI-BC from the LLI region <b>151</b><i>b</i>, and stores the LLI-BC in the internal register. On the basis of the LLI-BC, the DMAC <b>112</b><i>b </i>transmits the BBS data stored in the BBS region <b>172</b><i>b </i>of the shared memory region <b>161</b><i>b </i>via the SPI <b>115</b><i>b. </i></p><p id="p-0208" num="0207">The DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>reads the LLI-BB from the LLI region <b>151</b><i>a </i>and stores the LLI-BB in the internal register. The DMAC <b>112</b><i>a </i>receives the BBS data via the SPI <b>115</b><i>a </i>on the basis of the LLI-BB, and stores the BBS data in the reference side region of the BBS region <b>172</b><i>a </i>of the shared memory region <b>161</b><i>a</i>. With this arrangement, the BBS data is shared.</p><p id="p-0209" num="0208">Furthermore, the task <b>201</b><i>b </i>of the processor <b>101</b><i>b </i>generates a processing response message to the task <b>201</b><i>a </i>and stores the processing response message in the transmission side region of the message region <b>173</b><i>b </i>of the shared memory region <b>161</b><i>b</i>. The task <b>201</b><i>b </i>calls the communication control task <b>202</b><i>b </i>and requests transmission of the processing response message.</p><p id="p-0210" num="0209">The communication control task <b>202</b><i>b </i>generates the LLI-MA to LLI-MC for transmitting the processing response message, and stores the LLI-MA to LLI-MC in the LLI region <b>151</b><i>b. </i></p><p id="p-0211" num="0210">The DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>reads the LLI-MA from the LLI region <b>151</b><i>b</i>, and stores the LLI-MA in the internal register. The DMAC <b>112</b><i>b </i>transmits the LLI-MB via the SPI <b>115</b><i>b </i>on the basis of the LLI-MA.</p><p id="p-0212" num="0211">The DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>reads the LLI-R from the LLI region <b>151</b><i>a </i>and stores the LLI-R in the internal register. The DMAC <b>112</b><i>a </i>receives the LLI-MB via the SPI <b>115</b><i>a </i>on the basis of the LLI-R, and stores the LLI-MB in the LLI region <b>151</b><i>a. </i></p><p id="p-0213" num="0212">The DMAC <b>112</b><i>b </i>of the processor <b>101</b><i>b </i>reads the LLI-MC from the LLI region <b>151</b><i>b</i>, and stores the LLI-MC in the internal register. On the basis of the LLI-MC, the DMAC <b>112</b><i>b </i>transmits the message stored in the message region <b>173</b><i>b </i>of the shared memory region <b>161</b><i>b </i>via the SPI <b>115</b><i>b. </i></p><p id="p-0214" num="0213">The DMAC <b>112</b><i>a </i>of the processor <b>101</b><i>a </i>reads the LLI-MB from the LLI region <b>151</b><i>a </i>and stores the LLI-MB in the internal register. The DMAC <b>112</b><i>a </i>receives the processing response message via the SPI <b>115</b><i>a </i>on the basis of the LLI-MB, and stores the processing response message in the reception side region of the message region <b>173</b><i>a </i>of the shared memory region <b>161</b><i>a</i>. Furthermore, the DMAC <b>112</b><i>a </i>transmits the interrupt notification to the communication control task <b>202</b><i>a </i>on the basis of the transfer completion notification control information set for the attribute of the LLI-MB.</p><p id="p-0215" num="0214">The communication control task <b>202</b><i>a </i>reads the processing response message from the message region <b>173</b><i>a </i>of the shared memory region <b>161</b><i>a</i>, and transmits the processing response message to the task <b>201</b><i>a </i>as a task message. With this arrangement, the task <b>201</b><i>a </i>wakes up and checks the processing response message.</p><p id="p-0216" num="0215">As described above, the BBS data and the message can be transferred between the processor <b>101</b><i>a </i>and the processor <b>101</b><i>b </i>with the state data being shared.</p><heading id="h-0011" level="1">2. Application Example</heading><p id="p-0217" num="0216">Next, a specific application example of the present technology will be described with reference to <figref idref="DRAWINGS">FIGS. <b>13</b> and <b>14</b></figref>. Specifically, an example in which the present technology is applied to a camera system <b>400</b> will be described.</p><p id="p-0218" num="0217"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram schematically illustrating a configuration example of the camera system <b>400</b>.</p><p id="p-0219" num="0218">The camera system <b>400</b> includes a camera body <b>401</b> and an interchangeable lens unit <b>402</b>. The interchangeable lens unit <b>402</b> is detachable from the camera body <b>401</b>.</p><p id="p-0220" num="0219">For example, the information processing system <b>100</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is applied to a lens control system of the interchangeable lens unit <b>402</b>. The lens control system is a system that drives a diaphragm <b>423</b> and a focus lens <b>425</b> in accordance with an instruction from the camera body <b>401</b>.</p><p id="p-0221" num="0220">The lens control system includes a processor <b>421</b><i>a</i>, a processor <b>421</b><i>b</i>, a drive unit <b>422</b>, the diaphragm <b>423</b>, a drive unit <b>424</b>, and the focus lens <b>425</b>. The processor <b>421</b><i>a </i>and the processor <b>421</b><i>b </i>correspond to the processor <b>101</b><i>a </i>and processor <b>101</b><i>b </i>of the information processing system <b>100</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0222" num="0221">The processor <b>421</b><i>a </i>includes an inter-processor communication unit <b>441</b><i>a</i>, a driver <b>442</b><i>a</i>, and a camera-lens communication unit <b>443</b>.</p><p id="p-0223" num="0222">The processor <b>421</b><i>b </i>includes an inter-processor communication unit <b>441</b><i>b </i>and a driver <b>442</b><i>b. </i></p><p id="p-0224" num="0223">The driver <b>442</b><i>a </i>of the processor <b>421</b><i>a </i>controls the drive unit <b>422</b> including an actuator or the like to control aperture of the diaphragm <b>423</b>.</p><p id="p-0225" num="0224">The driver <b>442</b><i>b </i>of the processor <b>421</b><i>b </i>controls the drive unit <b>424</b> including an actuator or the like to control a position and the like of the focus lens <b>425</b>.</p><p id="p-0226" num="0225">Furthermore, the processor <b>421</b><i>a </i>receives an instruction from the camera body <b>401</b> via the camera-lens communication unit <b>443</b>. The processor <b>421</b><i>a </i>transmits an instruction from the camera body <b>401</b> to the processor <b>421</b><i>b </i>via the inter-processor communication unit <b>441</b><i>a </i>as necessary.</p><p id="p-0227" num="0226">Moreover, the processor <b>421</b><i>a </i>and the processor <b>421</b><i>b </i>transmit and receive a transfer parameter, state data, BBS data, a message, or the like via the inter-processor communication unit <b>441</b><i>a </i>and the inter-processor communication unit <b>441</b><i>b</i>. With this arrangement, the processor <b>421</b><i>a </i>and the processor <b>421</b><i>b </i>share information with each other and exchange various instructions.</p><p id="p-0228" num="0227"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram illustrating a configuration example of software of the processor <b>421</b><i>a. </i></p><p id="p-0229" num="0228">Note that a configuration example of software of the processor <b>421</b><i>b </i>is basically similar to the configuration example of the processor <b>421</b><i>a</i>, and description thereof will be appropriately omitted. Furthermore, a reference sign of each unit of the processor <b>421</b><i>a </i>is appended with a letter &#x201c;a&#x201d;, and a reference sign of each unit of the processor <b>421</b><i>b </i>is appended with a letter &#x201c;b&#x201d;.</p><p id="p-0230" num="0229">The processor <b>421</b><i>a </i>includes the driver <b>442</b><i>a</i>, a communication control task <b>501</b><i>a</i>, a drive control task <b>502</b><i>a</i>, a communication control module <b>503</b><i>a</i>, a DMAC <b>504</b><i>a</i>, and an SPI <b>505</b><i>a</i>. The DMAC <b>504</b><i>a </i>and the SPI <b>505</b><i>a </i>correspond to the DMAC <b>112</b><i>a </i>and the SPI <b>115</b><i>a </i>of the processor <b>101</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and constitute the inter-processor communication unit <b>441</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0231" num="0230">The drive control task <b>502</b><i>a </i>includes a BBS module <b>521</b><i>a </i>and a message module <b>522</b><i>a. </i></p><p id="p-0232" num="0231">The communication control module <b>503</b><i>a </i>includes a state data sharing control unit <b>541</b><i>a</i>, a BBS control unit <b>542</b><i>a</i>, a message control unit <b>543</b><i>a</i>, a communication control unit <b>544</b><i>a</i>, and a shared memory region <b>545</b><i>a</i>. The shared memory region <b>545</b><i>a </i>corresponds to the shared memory region <b>161</b><i>a </i>of the processor <b>101</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0233" num="0232">The shared memory region <b>545</b><i>a </i>is provided with a state data region <b>561</b><i>a</i>, a BBS region <b>562</b><i>a</i>, and a message region <b>563</b><i>a</i>. The state data region <b>561</b><i>a</i>, the BBS region <b>562</b><i>a</i>, and the message region <b>563</b><i>a </i>correspond to the state data region <b>171</b><i>a</i>, BBS region <b>172</b><i>a</i>, and message region <b>173</b><i>a </i>of the processor <b>101</b><i>a </i>in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The state data region <b>561</b><i>a </i>is provided with an originating side region and a reference side region. The BBS region <b>562</b><i>a </i>is provided with an originating side region and a reference side region. The message region <b>563</b><i>a </i>is provided with a transmission side region and a reception side region.</p><p id="p-0234" num="0233">The communication control task <b>501</b><i>a </i>gives an instruction to the state data sharing control unit <b>541</b><i>a </i>and controls sharing of the state data with the processor <b>421</b><i>b. </i></p><p id="p-0235" num="0234">The drive control task <b>502</b><i>a </i>gives a drive instruction to the driver <b>442</b><i>a </i>and controls the drive unit <b>422</b> via the driver <b>442</b><i>a </i>to control aperture of the diaphragm <b>423</b> or the like.</p><p id="p-0236" num="0235">The BBS module <b>521</b><i>a </i>generates BBS data to be shared with another task and supplies the BBS data to the BBS control unit <b>542</b><i>a. </i></p><p id="p-0237" num="0236">The message module <b>522</b><i>a </i>generates a message to be transmitted to another task, and supplies the message to the message control unit <b>543</b>.</p><p id="p-0238" num="0237">The communication control module <b>503</b><i>a </i>is a module that controls communication with the processor <b>421</b><i>b</i>. For example, the communication control module <b>503</b><i>a </i>controls transmission and reception of state data, BBS data, and a message with the processor <b>421</b><i>b. </i></p><p id="p-0239" num="0238">The state data sharing control unit <b>541</b><i>a </i>stores the state data shared with the processor <b>421</b><i>b </i>in the originating side region of the state data region <b>561</b><i>a </i>of the shared memory region <b>545</b><i>a</i>, and instructs the communication control unit <b>544</b><i>a </i>to transmit the state data.</p><p id="p-0240" num="0239">The BBS control unit <b>542</b><i>a </i>stores the BBS data shared with the processor <b>421</b><i>b </i>in the originating side region of the BBS region <b>562</b><i>a </i>of the shared memory region <b>545</b><i>a</i>, and instructs the communication control unit <b>544</b><i>a </i>to transmit the BBS data.</p><p id="p-0241" num="0240">In a case of transmitting a message to a task of the processor <b>421</b><i>b</i>, the message control unit <b>543</b><i>a </i>stores the message to be transmitted in the transmission side region of the message region <b>563</b><i>a </i>of the shared memory region <b>545</b><i>a</i>, and instructs the communication control unit <b>544</b><i>a </i>to transmit the message.</p><p id="p-0242" num="0241">In a case where an instruction to transmit the state data, the BBS data, or the message is given, the communication control unit <b>544</b><i>a </i>generates a transfer control LLI and stores the transfer control LLI in an LLI region of an unillustrated RAM. The transfer control LLI includes, for example, the LLI-SA to LLI-SC, LLI-BA to LLI-BC, or LLI-MA to LLI-MC described above.</p><p id="p-0243" num="0242">The state data region <b>561</b><i>a </i>of the shared memory region <b>545</b><i>a </i>stores state data shared with the processor <b>421</b><i>b</i>. In the originating side region, state data originated by the processor <b>421</b><i>a </i>is stored. In the reference side region, state data originated by the processor <b>421</b><i>b </i>and received from the processor <b>421</b><i>b </i>is stored.</p><p id="p-0244" num="0243">By processing of transferring the above-described state data being performed, the state data stored in the originating side region of the state data region <b>561</b><i>a </i>of the processor <b>421</b><i>a </i>is transferred to the reference side region of a state data region <b>561</b><i>b </i>of the processor <b>421</b><i>b </i>in substantially real time, and data having the same content is stored in both. Furthermore, the state data stored in the originating side region of the state data region <b>561</b><i>b </i>of the processor <b>421</b><i>b </i>is transferred to a reference side region of the state data region <b>561</b><i>a </i>of the processor <b>421</b><i>a </i>in substantially real time, and data having the same content is stored in both.</p><p id="p-0245" num="0244">The BBS region <b>562</b><i>a </i>of the shared memory region <b>545</b><i>a </i>stores BBS data shared with the processor <b>421</b><i>b</i>. In the originating side region, BBS data originated by the processor <b>421</b><i>a </i>is stored. In the reference side region, BBS data originated by the processor <b>421</b><i>b </i>and received from the processor <b>421</b><i>b </i>is stored.</p><p id="p-0246" num="0245">By processing of transferring the above-described BBS data being performed, the BBS data stored in the originating side region of the BBS region <b>562</b><i>a </i>of the processor <b>421</b><i>a </i>is transferred to the reference side region of a BBS region <b>562</b><i>b </i>of the processor <b>421</b><i>b </i>in substantially real time, and data having the same content is stored in both. Furthermore, the BBS data stored in the originating side region of the BBS region <b>562</b><i>b </i>of the processor <b>421</b><i>b </i>is transferred to the reference side region of the BBS region <b>562</b><i>a </i>of the processor <b>421</b><i>a </i>in substantially real time, and data having the same content is stored in both.</p><p id="p-0247" num="0246">For example, in a case where each task shares a processing result or the like with another task, the BBS is used. For example, the drive control task <b>502</b><i>a </i>can share the processing result with other tasks in the processor <b>421</b><i>a </i>and processor <b>421</b><i>b </i>by generating BBS data indicating the processing result and storing the BBS data in the originating side region of the BBS region <b>562</b><i>a</i>. Furthermore, for example, the drive control task <b>502</b><i>a </i>refers to the BBS data stored in the originating side region and reference side region of the BBS region <b>562</b><i>a</i>, thereby being able to know processing results or the like of the other tasks. For example, by referring to the BBS data, the drive control task <b>502</b><i>a </i>can collect information regarding drive states of the diaphragm <b>423</b> and focus lens <b>425</b> in order to analyze the drive instruction from the camera body <b>401</b>.</p><p id="p-0248" num="0247">The message region <b>563</b><i>a </i>of the shared memory region <b>545</b><i>a </i>stores a message transmitted to and received from the processor <b>421</b><i>b</i>. In the transmission side region, the message to be transmitted to the processor <b>421</b><i>b </i>is stored. In the reception side region, the message received from the processor <b>421</b><i>b </i>is stored.</p><p id="p-0249" num="0248">By processing of transferring the above-described message being performed, the message stored in the transmission side region of the message region <b>563</b><i>a </i>of the processor <b>421</b><i>a </i>is transferred to a reception side region of a message region <b>563</b><i>b </i>of the processor <b>421</b><i>b </i>in substantially real time, and data having the same content is stored in both. Furthermore, the message stored in the transmission side region of the message region <b>563</b><i>b </i>of the processor <b>421</b><i>b </i>is transferred to a reception side region of the message region <b>563</b><i>a </i>of the processor <b>421</b><i>a </i>in substantially real time, and data having the same content is stored in both.</p><p id="p-0250" num="0249">For example, a message is used to exchange an instruction between tasks of the processor <b>421</b><i>a </i>and processor <b>421</b><i>b</i>. For example, in a case where the drive control task <b>502</b><i>a </i>gives an instruction to the driver <b>442</b><i>a </i>or the like in the processor <b>421</b><i>a</i>, an internal message is used. Meanwhile, for example, the drive control task <b>502</b><i>a </i>generates a message indicating a drive instruction and stores the message in the transmission side region of the message region <b>563</b><i>a</i>, thereby giving the task in the processor <b>421</b><i>b </i>an instruction to drive the focus lens <b>425</b> or the like. Furthermore, for example, the drive control task <b>502</b><i>a </i>can receive an instruction to drive the diaphragm <b>423</b> or the like from a task in the processor <b>421</b><i>b </i>by reading a message stored in the reception side region of the message region <b>563</b><i>a. </i></p><p id="p-0251" num="0250">The DMAC <b>504</b><i>a </i>controls DMA in the processor <b>421</b><i>a</i>. For example, the DMAC <b>504</b><i>a </i>acquires the transfer control LLI from an LLI region of an unillustrated RAM, and transfers the LLI for data reception to the SPI <b>505</b><i>a </i>on the basis of the transfer control LLI, or reads state data, BBS data, and a message from the shared memory region <b>545</b><i>a </i>and transfers the state data, BBS data, and message to the SPI <b>505</b><i>a. </i></p><p id="p-0252" num="0251">Furthermore, the DMAC <b>504</b><i>a </i>stores, in the shared memory region <b>545</b><i>a</i>, the state data, the BBS data, and message received by the SPI <b>505</b><i>a </i>from the processor <b>421</b><i>b</i>. Moreover, the DMAC <b>504</b><i>a </i>stores, in the LLI region of the RAM, the transfer control LLI received by the SPI <b>505</b><i>a </i>from the processor <b>421</b><i>b. </i></p><p id="p-0253" num="0252">The SPI <b>505</b><i>a </i>performs full-duplex serial communication with an SPI <b>505</b><i>b </i>of the processor <b>421</b><i>b. </i></p><p id="p-0254" num="0253">As described above, the processor <b>421</b><i>a </i>and the processor <b>421</b><i>b </i>can execute control of the diaphragm <b>423</b> and the focus lens <b>425</b> independently of each other while seamlessly and closely sharing various types of information with a small load.</p><heading id="h-0012" level="1">3. Modifications</heading><p id="p-0255" num="0254">Hereinafter, modifications of the above-described embodiment of the present technology will be described.</p><p id="p-0256" num="0255">For example, a communication device other than an SPI can be used. For example, a communication device such as a universal asynchronous receiver/transmitter (UART), a serial input/output (SIO), an inter-integrated circuit (I2C), a universal serial bus (USB), or Ethernet can be used. Furthermore, for example, a communication device that performs parallel communication can be used.</p><p id="p-0257" num="0256">Furthermore, for example, the present technology can also be applied to a case where communication between processors is half-duplex communication or simplex communication.</p><p id="p-0258" num="0257">Moreover, for example, instead of the DMAC, a device such as a digital signal processor (DSP) or programmable logic device (PLD) having a DMA control function can be used.</p><p id="p-0259" num="0258">Furthermore, each processor does not necessarily need to incorporate a memory that shares an address space, and an external memory may be provided outside each processor.</p><p id="p-0260" num="0259">Moreover, as an information processing unit incorporated in each processor, a device such as a graphics processing unit (GPU) or a PLD can be used instead of the CPU.</p><p id="p-0261" num="0260">Furthermore, the present technology can also be applied to a case where data is shared among information processing devices such as three or more processors.</p><p id="p-0262" num="0261">Moreover, the present technology can be applied to a multiprocessor system other than a camera system.</p><heading id="h-0013" level="1">4. Others</heading><p id="p-0263" num="0262">The above-described series of processing can be executed by hardware or can be executed by software. In a case where a series of processing is executed by software, a program included in the software is installed on a computer. Here, the computer includes, a computer incorporated in dedicated hardware, a general-purpose personal computer for example, which is capable of executing various kinds of functions by installing various programs, or the like.</p><p id="p-0264" num="0263">A program executed by the computer can be provided by being recorded on a removable medium as a package medium, or the like, for example. Furthermore, the program can be provided via a wired or wireless transmission medium such as a local area network, the Internet, or digital satellite broadcasting.</p><p id="p-0265" num="0264">Note that, the program executed by the computer may be a program that is processed in time series in an order described in this specification, or a program that is processed in parallel or at a necessary timing such as when a call is made.</p><p id="p-0266" num="0265">Furthermore, in the present specification, the system means a set of a plurality of components (devices, modules (parts), or the like) without regard to whether or not all the components are in the same housing. Therefore, a plurality of devices housed in separate housings and connected via a network, and one device housing a plurality of modules in one housing are both systems.</p><p id="p-0267" num="0266">Note that embodiments of the present technology are not limited to the above-described embodiments, and various changes can be made without departing from the scope of the present technology.</p><p id="p-0268" num="0267">For example, the present technology can have a configuration of cloud computing in which one function is shared and processed jointly by a plurality of devices via a network.</p><p id="p-0269" num="0268">Furthermore, each step described in the above-described flowcharts can be executed by one device, or can be executed by being shared by a plurality of devices.</p><p id="p-0270" num="0269">Moreover, in a case where a plurality of pieces of processing is included in one step, the plurality of pieces of processing included in the one step can be executed by being shared by a plurality of devices, in addition to being executed by one device.</p><p id="p-0271" num="0270">&#x3c;Examples of Configuration Combination&#x3e;</p><p id="p-0272" num="0271">The present technology can have the following configurations.</p><p id="p-0273" num="0272">(1)</p><p id="p-0274" num="0273">An information processing system including</p><p id="p-0275" num="0274">a first information processing device, and</p><p id="p-0276" num="0275">a second information processing device,</p><p id="p-0277" num="0276">in which the first information processing device includes</p><p id="p-0278" num="0277">a first information processing unit that generates a transfer parameter used for controlling transfer of data,</p><p id="p-0279" num="0278">a first direct memory access (DMA) control unit that controls DMA on the basis of the transfer parameter, and</p><p id="p-0280" num="0279">a first communication unit,</p><p id="p-0281" num="0280">the second information processing device includes</p><p id="p-0282" num="0281">a second information processing unit that generates the transfer parameter,</p><p id="p-0283" num="0282">a second DMA control unit that controls DMA on the basis of the transfer parameter, and</p><p id="p-0284" num="0283">a second communication unit that communicates with the first communication unit,</p><p id="p-0285" num="0284">the first information processing unit generates a first transfer parameter used for controlling reception of first transfer data,</p><p id="p-0286" num="0285">the first DMA control unit controls transmission of the first transfer parameter to the second information processing device, and</p><p id="p-0287" num="0286">the second DMA control unit controls reception of the first transfer data from the first information processing device on the basis of the first transfer parameter.</p><p id="p-0288" num="0287">(2)</p><p id="p-0289" num="0288">The information processing system according to (1),</p><p id="p-0290" num="0289">in which the first information processing unit generates a second transfer parameter used for controlling transmission of the first transfer parameter, and a third transfer parameter used for controlling transmission of the first transfer data, and</p><p id="p-0291" num="0290">the first DMA control unit controls transmission of the first transfer parameter to the second information processing device on the basis of the second transfer parameter, and controls transmission of the first transfer data to the second information processing device on the basis of the third transfer parameter.</p><p id="p-0292" num="0291">(3)</p><p id="p-0293" num="0292">The information processing system according to (2),</p><p id="p-0294" num="0293">in which the transfer parameter has a linked list structure, and</p><p id="p-0295" num="0294">the first information processing unit sets the third transfer parameter for a link destination of the second transfer parameter, and sets the second transfer parameter for a link destination of the third transfer parameter.</p><p id="p-0296" num="0295">(4)</p><p id="p-0297" num="0296">The information processing system according to (3),</p><p id="p-0298" num="0297">in which, on the basis of the second transfer parameter and the third transfer parameter, the first DMA control unit alternately repeats control of transmission of the first transfer parameter to the second information processing device, and control of transmission of the first transfer data to the second information processing device.</p><p id="p-0299" num="0298">(5)</p><p id="p-0300" num="0299">The information processing system according to (4),</p><p id="p-0301" num="0300">in which the first transfer data includes state data indicating a state of the first information processing device.</p><p id="p-0302" num="0301">(6)</p><p id="p-0303" num="0302">The information processing system according to any one of (2) to (5),</p><p id="p-0304" num="0303">in which, in a case of transmitting second transfer data stored in a position different from a position of the first transfer data of a first storage unit to the second information processing device, the first information processing unit generates a fourth transfer parameter used for controlling reception of the second transfer data,</p><p id="p-0305" num="0304">the first DMA control unit controls transmission of the fourth transfer parameter to the second information processing device, and</p><p id="p-0306" num="0305">the second DMA control unit controls reception of the second transfer data from the first information processing device on the basis of the fourth transfer parameter.</p><p id="p-0307" num="0306">(7)</p><p id="p-0308" num="0307">The information processing system according to (6),</p><p id="p-0309" num="0308">in which the first information processing unit sets a fifth transfer parameter used for controlling transmission of the second transfer parameter, and a sixth transfer parameter used for controlling transmission of the second transfer data, and</p><p id="p-0310" num="0309">the first DMA control unit controls transmission of the second transfer parameter to the second information processing device on the basis of the fifth transfer parameter, and controls transmission of the second transfer data to the second information processing device on the basis of the sixth transfer parameter.</p><p id="p-0311" num="0310">(8)</p><p id="p-0312" num="0311">The information processing system according to (7),</p><p id="p-0313" num="0312">in which the transfer parameter has a linked list structure, and</p><p id="p-0314" num="0313">the first information processing unit sets a link destination of the second transfer parameter to the third transfer parameter, sets a link destination of the third transfer parameter to the second transfer parameter, and, in a case of transmitting the second transfer data to the second information processing device, changes the link destination of the third transfer parameter to the fifth transfer parameter.</p><p id="p-0315" num="0314">(9)</p><p id="p-0316" num="0315">The information processing system according to any one of (1) to (8),</p><p id="p-0317" num="0316">in which, in a case where the first transfer data includes a message between tasks, the first information processing unit sets, for the first transfer parameter, control information that causes an interrupt notification of transfer completion of the first transfer data to be generated.</p><p id="p-0318" num="0317">(10)</p><p id="p-0319" num="0318">The information processing system according to (9),</p><p id="p-0320" num="0319">in which, in a case where the control information is set for the first transfer parameter, the second DMA control unit makes an interrupt notification to the second information processing unit after controlling reception of the first transfer data.</p><p id="p-0321" num="0320">(11)</p><p id="p-0322" num="0321">The information processing system according to any one of (1) to (10),</p><p id="p-0323" num="0322">in which, in the first transfer parameter, the first information processing unit sets, for a transfer destination of the first transfer data, a position of a second storage unit corresponding to a position, in the first storage unit, where the first transfer data is stored, and</p><p id="p-0324" num="0323">the second DMA control unit stores the first transfer data in a position of the second storage unit set, in the first transfer parameter, as a transfer destination.</p><p id="p-0325" num="0324">(12)</p><p id="p-0326" num="0325">The information processing system according to (11),</p><p id="p-0327" num="0326">in which at least a part of a region of the first storage unit and at least a part of a region of the second storage unit share an address space.</p><p id="p-0328" num="0327">(13)</p><p id="p-0329" num="0328">The information processing system according to any one of (1) to (12),</p><p id="p-0330" num="0329">in which the second information processing unit generates a seventh transfer parameter used for controlling reception of the first transfer parameter, and</p><p id="p-0331" num="0330">the second DMA control unit controls reception of the first transfer parameter on the basis of the seventh transfer parameter.</p><p id="p-0332" num="0331">(14)</p><p id="p-0333" num="0332">The information processing system according to (13),</p><p id="p-0334" num="0333">in which the transfer parameter has a linked list structure,</p><p id="p-0335" num="0334">the first information processing unit sets the seventh transfer parameter for a link destination of the first transfer parameter, and</p><p id="p-0336" num="0335">the second information processing unit sets the first transfer parameter for a link destination of the seventh transfer parameter.</p><p id="p-0337" num="0336">(15)</p><p id="p-0338" num="0337">The information processing system according to any one of (1) to (14),</p><p id="p-0339" num="0338">in which the first transfer data includes state data indicating a state of the first information processing device, data for sharing information output from a task of the first information processing device, or a message from a task of the first information processing device to a task of the second information processing device.</p><p id="p-0340" num="0339">(16)</p><p id="p-0341" num="0340">The information processing system according to any one of (1) to (15),</p><p id="p-0342" num="0341">in which the first communication unit and the second communication unit perform full-duplex communication.</p><p id="p-0343" num="0342">(17)</p><p id="p-0344" num="0343">The information processing system according to any one of (1) to (16),</p><p id="p-0345" num="0344">in which the transfer parameter has a linked list structure, and includes a transfer source and transfer destination of data, and a link destination.</p><p id="p-0346" num="0345">(18)</p><p id="p-0347" num="0346">An information processing method including</p><p id="p-0348" num="0347">a first information processing device that controls direct memory access (DMA) on the basis of a transfer parameter used for controlling transfer of data, and</p><p id="p-0349" num="0348">a second information processing device that communicates with the first information processing device, and controls DMA on the basis of the transfer parameter,</p><p id="p-0350" num="0349">in which the first information processing device generates the transfer parameter used for controlling reception of transfer data, and transmits the transfer parameter to the second information processing device, and</p><p id="p-0351" num="0350">the second information processing device controls reception of the transfer data from the first information processing device on the basis of the transfer parameter received from the first information processing device.</p><p id="p-0352" num="0351">(19)</p><p id="p-0353" num="0352">An information processing device including</p><p id="p-0354" num="0353">an information processing unit that generates a transfer parameter used for controlling transfer of data,</p><p id="p-0355" num="0354">a direct memory access (DMA) control unit that controls DMA on the basis of the transfer parameter, and</p><p id="p-0356" num="0355">a communication unit that communicates with another information processing device,</p><p id="p-0357" num="0356">in which the information processing unit generates the transfer parameter used for controlling reception of transfer data, and</p><p id="p-0358" num="0357">the DMA control unit controls transmission of the transfer parameter to the another information processing device, the transfer parameter being used for controlling reception of the transfer data.</p><p id="p-0359" num="0358">(20)</p><p id="p-0360" num="0359">An information processing device including</p><p id="p-0361" num="0360">a direct memory access (DMA) control unit that controls DMA on the basis of a transfer parameter used for controlling transfer of data, and</p><p id="p-0362" num="0361">a communication unit that communicates with another information processing device,</p><p id="p-0363" num="0362">in which the communication unit receives, from another information processing device, the transfer parameter used for controlling reception of transfer data, and</p><p id="p-0364" num="0363">the DMA control unit controls reception of the transfer data from the another information processing device on the basis of the transfer parameter received from the another information processing device.</p><p id="p-0365" num="0364">Note that the effects described herein are only examples, and the effects of the present technology are not limited to these effects. Additional effects may also be obtained.</p><heading id="h-0014" level="1">REFERENCE SIGNS LIST</heading><p id="p-0366" num="0000"><ul id="ul0002" list-style="none">    <li id="ul0002-0001" num="0365"><b>100</b> Information processing system</li>    <li id="ul0002-0002" num="0366"><b>101</b><i>a</i>, <b>101</b><i>b </i>Processor</li>    <li id="ul0002-0003" num="0367"><b>111</b><i>a</i>, <b>111</b><i>b </i>CPU</li>    <li id="ul0002-0004" num="0368"><b>112</b><i>a</i>, <b>112</b><i>b </i>DMAC</li>    <li id="ul0002-0005" num="0369"><b>115</b><i>a</i>, <b>115</b><i>b </i>SPI</li>    <li id="ul0002-0006" num="0370"><b>151</b><i>a</i>, <b>151</b><i>b </i>LLI region</li>    <li id="ul0002-0007" num="0371"><b>161</b><i>a</i>, <b>161</b><i>b </i>Shared memory region</li>    <li id="ul0002-0008" num="0372"><b>171</b><i>a</i>, <b>171</b><i>b </i>State data region</li>    <li id="ul0002-0009" num="0373"><b>172</b><i>a</i>, <b>172</b><i>b </i>BBS region</li>    <li id="ul0002-0010" num="0374"><b>173</b><i>a</i>, <b>173</b><i>b </i>Message region</li>    <li id="ul0002-0011" num="0375"><b>400</b> Camera system</li>    <li id="ul0002-0012" num="0376"><b>401</b> Camera body</li>    <li id="ul0002-0013" num="0377"><b>402</b> Interchangeable lens unit</li>    <li id="ul0002-0014" num="0378"><b>421</b><i>a</i>, <b>421</b><i>b </i>Processor</li>    <li id="ul0002-0015" num="0379"><b>441</b><i>a</i>, <b>441</b><i>b </i>Inter-processor communication unit</li>    <li id="ul0002-0016" num="0380"><b>442</b><i>a</i>, <b>442</b><i>b </i>Driver</li>    <li id="ul0002-0017" num="0381"><b>501</b><i>a </i>Communication control task</li>    <li id="ul0002-0018" num="0382"><b>502</b><i>a </i>Drive control task</li>    <li id="ul0002-0019" num="0383"><b>503</b><i>a </i>Communication control module</li>    <li id="ul0002-0020" num="0384"><b>504</b><i>a</i>, <b>504</b><i>b </i>DMAC</li>    <li id="ul0002-0021" num="0385"><b>505</b><i>a</i>, <b>505</b><i>b </i>SPI</li>    <li id="ul0002-0022" num="0386"><b>541</b><i>a </i>State data sharing control unit</li>    <li id="ul0002-0023" num="0387"><b>542</b><i>a </i>BBS control unit</li>    <li id="ul0002-0024" num="0388"><b>543</b><i>a </i>Message control unit</li>    <li id="ul0002-0025" num="0389"><b>544</b><i>a </i>Communication control unit</li>    <li id="ul0002-0026" num="0390"><b>545</b><i>a </i>Shared memory region</li>    <li id="ul0002-0027" num="0391"><b>561</b><i>a </i>State data region</li>    <li id="ul0002-0028" num="0392"><b>562</b><i>a </i>BBS region</li>    <li id="ul0002-0029" num="0393"><b>563</b><i>a </i>Message region</li></ul></p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An information processing system comprising:<claim-text>a first information processing device; and</claim-text><claim-text>a second information processing device,</claim-text><claim-text>wherein the first information processing device includes</claim-text><claim-text>a first information processing unit that generates a transfer parameter used for controlling transfer of data,</claim-text><claim-text>a first direct memory access (DMA) control unit that controls DMA on a basis of the transfer parameter, and</claim-text><claim-text>a first communication unit,</claim-text><claim-text>the second information processing device includes</claim-text><claim-text>a second information processing unit that generates the transfer parameter,</claim-text><claim-text>a second DMA control unit that controls DMA on a basis of the transfer parameter, and</claim-text><claim-text>a second communication unit that communicates with the first communication unit,</claim-text><claim-text>the first information processing unit generates a first transfer parameter used for controlling reception of first transfer data,</claim-text><claim-text>the first DMA control unit controls transmission of the first transfer parameter to the second information processing device, and</claim-text><claim-text>the second DMA control unit controls reception of the first transfer data from the first information processing device on a basis of the first transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the first information processing unit generates a second transfer parameter used for controlling transmission of the first transfer parameter, and a third transfer parameter used for controlling transmission of the first transfer data, and</claim-text><claim-text>the first DMA control unit controls transmission of the first transfer parameter to the second information processing device on a basis of the second transfer parameter, and controls transmission of the first transfer data to the second information processing device on a basis of the third transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The information processing system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the transfer parameter has a linked list structure, and</claim-text><claim-text>the first information processing unit sets the third transfer parameter for a link destination of the second transfer parameter, and sets the second transfer parameter for a link destination of the third transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The information processing system according to <claim-ref idref="CLM-00003">claim 3</claim-ref>,<claim-text>wherein, on a basis of the second transfer parameter and the third transfer parameter, the first DMA control unit alternately repeats control of transmission of the first transfer parameter to the second information processing device, and control of transmission of the first transfer data to the second information processing device.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The information processing system according to <claim-ref idref="CLM-00004">claim 4</claim-ref>,<claim-text>wherein the first transfer data includes state data indicating a state of the first information processing device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The information processing system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein, in a case of transmitting second transfer data stored in a position different from a position of the first transfer data of a first storage unit to the second information processing device, the first information processing unit generates a fourth transfer parameter used for controlling reception of the second transfer data,</claim-text><claim-text>the first DMA control unit controls transmission of the fourth transfer parameter to the second information processing device, and</claim-text><claim-text>the second DMA control unit controls reception of the second transfer data from the first information processing device on a basis of the fourth transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The information processing system according to <claim-ref idref="CLM-00006">claim 6</claim-ref>,<claim-text>wherein the first information processing unit sets a fifth transfer parameter used for controlling transmission of the second transfer parameter, and a sixth transfer parameter used for controlling transmission of the second transfer data, and</claim-text><claim-text>the first DMA control unit controls transmission of the second transfer parameter to the second information processing device on a basis of the fifth transfer parameter, and controls transmission of the second transfer data to the second information processing device on a basis of the sixth transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The information processing system according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,<claim-text>wherein the transfer parameter has a linked list structure, and</claim-text><claim-text>the first information processing unit sets a link destination of the second transfer parameter to the third transfer parameter, sets a link destination of the third transfer parameter to the second transfer parameter, and, in a case of transmitting the second transfer data to the second information processing device, changes the link destination of the third transfer parameter to the fifth transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein, in a case where the first transfer data includes a message between tasks, the first information processing unit sets, for the first transfer parameter, control information that causes an interrupt notification of transfer completion of the first transfer data to be generated.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The information processing system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>,<claim-text>wherein, in a case where the control information is set for the first transfer parameter, the second DMA control unit makes an interrupt notification to the second information processing unit after controlling reception of the first transfer data.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein, in the first transfer parameter, the first information processing unit sets, for a transfer destination of the first transfer data, a position of a second storage unit corresponding to a position, in the first storage unit, where the first transfer data is stored, and</claim-text><claim-text>the second DMA control unit stores the first transfer data in a position of the second storage unit set, in the first transfer parameter, as a transfer destination.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The information processing system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>,<claim-text>wherein at least a part of a region of the first storage unit and at least a part of a region of the second storage unit share an address space.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the second information processing unit generates a second transfer parameter used for controlling reception of the first transfer parameter, and</claim-text><claim-text>the second DMA control unit controls reception of the first transfer parameter on a basis of the second transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The information processing system according to <claim-ref idref="CLM-00013">claim 13</claim-ref>,<claim-text>wherein the transfer parameter has a linked list structure,</claim-text><claim-text>the first information processing unit sets the second transfer parameter for a link destination of the first transfer parameter, and</claim-text><claim-text>the second information processing unit sets the first transfer parameter for a link destination of the second transfer parameter.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the first transfer data includes state data indicating a state of the first information processing device, data for sharing information output from a task of the first information processing device, or a message from a task of the first information processing device to a task of the second information processing device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the first communication unit and the second communication unit perform full-duplex communication.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The information processing system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the transfer parameter has a linked list structure, and includes a transfer source and transfer destination of data, and a link destination.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. An information processing method comprising:<claim-text>a first information processing device that controls direct memory access (DMA) on a basis of a transfer parameter used for controlling transfer of data; and</claim-text><claim-text>a second information processing device that communicates with the first information processing device, and controls DMA on a basis of the transfer parameter,</claim-text><claim-text>wherein the first information processing device generates the transfer parameter used for controlling reception of transfer data, and transmits the transfer parameter to the second information processing device, and</claim-text><claim-text>the second information processing device controls reception of the transfer data from the first information processing device on a basis of the transfer parameter received from the first information processing device.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. An information processing device comprising:<claim-text>an information processing unit that generates a transfer parameter used for controlling transfer of data;</claim-text><claim-text>a direct memory access (DMA) control unit that controls DMA on a basis of the transfer parameter; and</claim-text><claim-text>a communication unit that communicates with another information processing device,</claim-text><claim-text>wherein the information processing unit generates the transfer parameter used for controlling reception of transfer data, and</claim-text><claim-text>the DMA control unit controls transmission of the transfer parameter to the another information processing device, the transfer parameter being used for controlling reception of the transfer data.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. An information processing device comprising:<claim-text>a direct memory access (DMA) control unit that controls DMA on a basis of a transfer parameter used for controlling transfer of data; and</claim-text><claim-text>a communication unit that communicates with another information processing device,</claim-text><claim-text>wherein the communication unit receives, from another information processing device, the transfer parameter used for controlling reception of transfer data, and</claim-text><claim-text>the DMA control unit controls reception of the transfer data from the another information processing device on a basis of the transfer parameter received from the another information processing device.</claim-text></claim-text></claim></claims></us-patent-application>