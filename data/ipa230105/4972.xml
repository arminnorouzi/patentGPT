<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004973A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004973</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17365642</doc-number><date>20210701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>4014</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>3224</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>6223</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Authenticating Based on Behavioral Transactional Patterns</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Capital One Services, LLC</orgname><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Edwards</last-name><first-name>Joshua</first-name><address><city>Philadelphia</city><state>PA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Septimus</last-name><first-name>David</first-name><address><city>New York</city><state>NY</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Rapowitz</last-name><first-name>Samuel</first-name><address><city>Roswell</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Melendez</last-name><first-name>Jenny</first-name><address><city>Falls Church</city><state>VA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Maiman</last-name><first-name>Tyler</first-name><address><city>Melville</city><state>NY</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Chaudhary</last-name><first-name>Viraj</first-name><address><city>Katy</city><state>TX</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects described herein may allow for authenticating a user by generating a customized set of authentication questions based on patterns that are automatically detected and extracted from user data. The user data may include transaction data collected over a period of time. By automatically detecting user patterns that correspond to user behavior over a period of time, an authentication system may be able to generate information that is recognizable to an authentic user but difficult to guess or circumvent for any other user.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="217.85mm" wi="156.97mm" file="US20230004973A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="214.46mm" wi="119.89mm" file="US20230004973A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="216.83mm" wi="165.10mm" file="US20230004973A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="198.71mm" wi="173.82mm" file="US20230004973A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="233.85mm" wi="168.91mm" file="US20230004973A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD OF USE</heading><p id="p-0002" num="0001">Aspects of the disclosure relate generally to authentication of users and more specifically to systems that generate questions for authenticating user access to a user account.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Providing secure access to private user accounts and data is a constant problem. Malicious attackers frequently attempt to gain access to user accounts. Account providers need to be able to distinguish authentic users from malicious attackers. Account providers often attempt to authenticate a user by asking the user something that the account owner or other authentic user would know and that a malicious attacker would not. A common solution is a username and password, but this solution is not always sufficient, and cannot be used in every situation. Many solutions can make authentication too difficult for an authentic user or too easy to circumvent by a malicious attacker. There is a need for additional methods of distinguishing between authentic users, who should be granted access without excessive difficulty, and any other user, who should be denied access.</p><p id="p-0004" num="0003">Aspects described herein may address these and other problems, and generally improve the quality, efficiency, and speed of user authentication methods.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">The following presents a simplified summary of various aspects described herein. This summary is not an extensive overview, and is not intended to identify key or critical elements or to delineate the scope of the claims. The following summary merely presents some concepts in a simplified form as an introductory prelude to the more detailed description provided below. Corresponding apparatus, systems, and computer-readable media are also within the scope of the disclosure.</p><p id="p-0006" num="0005">Aspects described herein may allow for authenticating a user by generating a customized set of authentication questions based on patterns that are automatically detected and extracted from user data. The user data may include transaction data collected over a period of time. By automatically detecting user patterns that correspond to user behavior over a period of time, an authentication system may be able to generate information that is recognizable to an authentic user but difficult to guess or circumvent for any other user.</p><p id="p-0007" num="0006">More particularly, some aspects described herein may provide a computer-implemented method for receiving, from a user device, a request for access to an account associated with a user. The method may comprise retrieving transaction data for the account, wherein the transaction data indicates a plurality of transactions. A computing device may then generate, based on the transaction data, for each transaction of the plurality of transactions, machine learning inputs, provide the machine learning inputs to a machine learning algorithm to yield one or more machine learning outputs, and generate, based on the one or more machine learning outputs, a spending pattern associated with the user. The method may comprise generating, based on the spending pattern, a question to authenticate the user and a correct answer to the question, and generating, based on the correct answer, one or more incorrect answers to the question. The computing device may then receive, from the user device, a response to the authentication question, and provide, to the user device and based on the response to the authentication question, access to the account.</p><p id="p-0008" num="0007">In some embodiments, the generating of the machine learning inputs may comprise generating, for each transaction of the plurality of transactions, machine learning inputs comprising one or more of a time of the transaction, a location of the transaction, a day of the transaction, a merchant associated with the transaction, or a type of the merchant associated with the transaction. The machine learning algorithm may be a clustering algorithm, the one or more machine learning outputs may be clusters of transactions, and the spending pattern may indicate at least one typical user behavior corresponding to at least one of the one or more clusters of transactions.</p><p id="p-0009" num="0008">Additionally and/or alternatively, the spending pattern may indicate one or more of a time period during which a user typically transacts with a particular merchant, a time period during which a user typically transacts with a particular type of merchant, a time period during which a user typically does not transact with any merchant, or a time period during which a user typically begins or ends an activity.</p><p id="p-0010" num="0009">In some embodiments, the question may indicate a merchant or a type of merchant, and the correct answer may indicate a first time period during which the user typically transacts with the merchant or the type of merchant. The incorrect answers may indicate other time periods that do not overlap with the first time period.</p><p id="p-0011" num="0010">Additionally and/or alternatively, the question may indicate a time period, and the correct answer may indicate a first merchant that the user typically transacts with during the time period. The incorrect answers may indicate other merchants of the same type as the first merchant.</p><p id="p-0012" num="0011">In some embodiments, the method further comprises generating, for the user, a fake spending pattern that does not overlap with the spending pattern for the user. The method may then comprise generating a second question and one or more incorrect answers to the second question based on the fake spending pattern, and generating a correct answer to the second question, wherein the providing of access to the account is further based on a user response to the second question.</p><p id="p-0013" num="0012">Additionally and/or alternatively, the method further comprises measuring a deviation of the spending pattern from a spending pattern for an average user, wherein the generating of the question is based on the deviation.</p><p id="p-0014" num="0013">These features, along with many others, are discussed in greater detail below.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014">The present disclosure is described by way of example and not limited in the accompanying figures in which like reference numerals indicate similar elements and in which:</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of a authentication system in which one or more aspects described herein may be implemented;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows example transaction data which may be analyzed to detect user spending patterns and other patterns as described herein;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows and example of clustering user transaction data as described herein;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example neural network architecture <b>400</b>, which may be used to implement a trained machine learning model for generating spending pattern data as described herein; and</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a flow chart of a process for detecting user spending patterns and generating questions to authenticate a user as described herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0021" num="0020">In the following description of the various embodiments, reference is made to the accompanying drawings, which form a part hereof, and in which is shown by way of illustration various embodiments in which aspects of the disclosure may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope of the present disclosure. Aspects of the disclosure are capable of other embodiments and of being practiced or being carried out in various ways. In addition, it is to be understood that the phraseology and terminology used herein are for the purpose of description and should not be regarded as limiting. Rather, the phrases and terms used herein are to be given their broadest interpretation and meaning.</p><p id="p-0022" num="0021">By way of introduction, aspects discussed herein may relate to methods and techniques for authenticating user access to user accounts. Account providers (e.g., financial institutions) commonly authenticate users using several methods, which may be easy to use but may suffer technological drawbacks. For example, account providers may ask users to provide answers to a few security questions (e.g., what city did you grow up in?). However, these types of questions may be easily guessable for malicious users that have basic information about an authentic user, and/or may be vulnerable to keylogging and other strategies because the same questions tend to be reused over and over. Another approach is displaying data about a recent transaction and asking the user whether they recognize it. However, this approach may be difficult for authentic users, who may not remember a particular transaction of the many transactions they make in a day, week, or month. Additionally, this approach may be vulnerable to circumvention by anyone who obtains basic information about one or more recent user purchases, for example by obtaining a recent user bill (e.g., in the mail or the trash) or tracking the behavior of the authentic user for a short amount of time (e.g., via in-person, online, or some other tracking method), etc.</p><p id="p-0023" num="0022">Among other features, the methods and systems described below improve on this situation by providing an authentication method that does not rely on recycled authentication questions, and is not easily vulnerable to circumvention by malicious users that have a small amount of data about a user. By analyzing a potentially large volume of user transactions to automatically detect user spending patterns and other user patterns, and generate questions about the patterns that only an authentic user would likely know, an authentication server may provide a secure and robust authentication method.</p><p id="p-0024" num="0023">An authentication server implementing the techniques described herein thus will be able to provide a secure authentication method that has several technological benefits. First, the generation of authentication information based on large data sets reduces the likelihood of circumvention by malicious users who are able to capture some data about an authentic user. Without obtaining a very large amount of data about an authentic user, a malicious user is unlikely to be able to correctly answer several questions generated based on different patterns that are observed from a large data set.</p><p id="p-0025" num="0024">Second, the use of automated machine learning techniques to automatically identify clusters or other patterns from multi-dimensional data enables the generation of authentication information that may be completely impractical or even impossible for a human to generate. Users commonly make several transactions a day, and user transactions histories may include months or years of data. Each transaction may be associated with a large number of data fields characterizing a particular transaction, a time of the transaction, a type of the transaction, a merchant involved in the transaction, information about the merchant involved in the transaction, an amount spent in the transaction, an item purchased in the transaction, etc. It may be impractical or impossible for a human to analyze such detailed data in large quantities and recognize multi-dimensional patterns that may be used for authentication purposes. Thus, even if a malicious user did have a large volume of information about an authentic user, the malicious user may be unable to use the data to correctly respond to authentication questions generated by the authentication server.</p><p id="p-0026" num="0025">Finally, by automatically analyzing the transaction data using machine learning methods, detecting patterns from the machine learning outputs, and generating questions from the spending patterns, and by automatically providing the questions to a user, the authentication server may provide a robust authentication process that does not require a customer service operator or some other human at all. Thus, social engineering and other types of confidence techniques may be unavailable to a malicious user seeking to gain access to an account.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a system <b>100</b>. The system <b>100</b> may include a plurality of devices including an authentication system <b>101</b>, a plurality of user devices (e.g., mobile device <b>107</b>, computing device <b>109</b>), and/or account data server <b>105</b> in communication via a network <b>103</b>. It will be appreciated that the network connections shown are illustrative and any means of establishing a communications link between the devices may be used. The existence of any of various network protocols such as TCP/IP, Ethernet, FTP, HTTP and the like, and of various wireless communication technologies such as GSM, CDMA, WiFi, and LTE, is presumed, and the various computing devices described herein may be configured to communicate using any of these network protocols or technologies.</p><p id="p-0028" num="0027">User devices (e.g., mobile device <b>107</b>, computing device <b>109</b>) may send authentication requests to the authentication system <b>101</b> in order to obtain access to a user account as described herein. The account data server <b>105</b> may include databases of account information that may be accessed by the authentication system <b>101</b> as described herein. Databases may include, but are not limited to relational databases, hierarchical databases, distributed databases, in-memory databases, flat file databases, XML databases, NoSQL databases, graph databases, and/or a combination thereof. The authentication system <b>101</b> may receive authentication requests, obtain account information for accounts, generate customized authentication questions in order to verify users' identities, and authorize access to the accounts as described herein. The network <b>103</b> may include a local area network (LAN), a wide area network (WAN), a wireless telecommunications network, and/or any other communication network or combination thereof.</p><p id="p-0029" num="0028">The data transferred to and from various computing devices in a system <b>100</b> may include secure and sensitive data, such as confidential documents, customer personally identifiable information, and account data. Therefore, it may be desirable to protect transmissions of such data using secure network protocols and encryption, and/or to protect the integrity of the data when stored on the various computing devices. For example, a file-based integration scheme or a service-based integration scheme may be utilized for transmitting data between the various computing devices. Data may be transmitted using various network communication protocols. Secure data transmission protocols and/or encryption may be used in file transfers to protect the integrity of the data, for example, File Transfer Protocol (FTP), Secure File Transfer Protocol (SFTP), and/or Pretty Good Privacy (PGP) encryption. In many embodiments, one or more web services may be implemented within the various computing devices. Web services may be accessed by authorized external devices and users to support input, extraction, and manipulation of data between the various computing devices in the system <b>100</b>. Web services built to support a personalized display system may be cross-domain and/or cross-platform, and may be built for enterprise use. Data may be transmitted using the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to provide secure connections between the computing devices. Web services may be implemented using the WS-Security standard, providing for secure SOAP messages using XML encryption. Specialized hardware may be used to provide secure web services. For example, secure network appliances may include built-in features such as hardware-accelerated SSL and HTTPS, WS-Security, and/or firewalls. Such specialized hardware may be installed and configured in the system <b>100</b> in front of one or more computing devices such that any external devices may communicate directly with the specialized hardware.</p><p id="p-0030" num="0029">The authentication system <b>101</b> may be used to implement one or more of the techniques described herein. The authentication system <b>101</b> may include one or more processor(s) <b>111</b> for controlling overall operation of the authentication system <b>101</b> and its associated components, including RAM <b>113</b>, ROM <b>115</b>, input/output device <b>119</b>, network interface <b>117</b>, and/or memory <b>121</b>. A data bus may interconnect processor(s) <b>111</b>, RAM <b>113</b>, ROM <b>115</b>, memory <b>121</b>, I/O device <b>119</b>, and/or network interface <b>117</b>. In some embodiments, the authentication system <b>101</b> may represent, be incorporated in, and/or include various devices such as a desktop computer, a computer server, a mobile device, such as a laptop computer, a tablet computer, a smart phone, any other types of mobile computing devices, and the like, and/or any other type of data processing device.</p><p id="p-0031" num="0030">Software may be stored within memory <b>121</b> to provide instructions to processor(s) <b>111</b> to allow the search system <b>101</b> to perform various actions. For example, memory <b>121</b> may store software used by the search system <b>101</b>, such as an operating system <b>123</b>, software such as authentication software <b>125</b> and/or a machine learning software <b>127</b>, and an associated internal database <b>131</b>. The various hardware memory units in memory <b>121</b> may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, or other data. Memory <b>121</b> may include one or more physical persistent memory devices and/or one or more non-persistent memory devices. Memory <b>121</b> may include, but is not limited to, random access memory (RAM) <b>113</b>, read only memory (ROM) <b>114</b>, electronically erasable programmable read only memory (EEPROM), flash memory or other memory technology, optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium that may be used to store the desired information and that may be accessed by processor(s) <b>111</b>.</p><p id="p-0032" num="0031">Network interface <b>117</b> may include one or more transceivers, digital signal processors, and/or additional circuitry and software for communicating via any network, wired or wireless, using any protocol as described herein.</p><p id="p-0033" num="0032">The processor(s) <b>111</b> may include a single central processing unit (CPU), which may be a single-core or multi-core processor, or may include multiple CPUs. The processor(s) <b>111</b> and associated components may allow the authentication system <b>101</b> to execute a series of computer-readable instructions to perform some or all of the processes described herein. Although not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, various elements within memory <b>121</b> or other components in search system <b>101</b> may include one or more caches, for example, CPU caches used by the processor(s) <b>111</b>, page caches used by the operating system <b>123</b>, disk caches of a hard drive, and/or database caches used to cache content from database <b>131</b>. For embodiments including a CPU cache, the CPU cache may be used by one or more processors <b>111</b> to reduce memory latency and access time. A processor <b>111</b> may retrieve data from or write data to the CPU cache rather than reading/writing to memory <b>121</b>, which may improve the speed of these operations. In some examples, a database cache may be created in which certain data from a database <b>131</b> is cached in a separate smaller database in a memory separate from the database, such as in RAM <b>113</b> or on a separate computing device. For instance, in a multi-tiered application, a database cache on an application server may reduce data retrieval and data manipulation time by not needing to communicate over a network with a back-end database server. These types of caches and others may be included in various embodiments, and may provide potential advantages in certain implementations of devices, systems, and methods described herein, such as faster response times and less dependence on network conditions when transmitting and receiving data.</p><p id="p-0034" num="0033">Although various components of the authentication system <b>101</b> are described separately, functionality of the various components may be combined and/or performed by a single component and/or multiple computing devices in communication without departing from the invention.</p><p id="p-0035" num="0034">The user devices (e.g., mobile device <b>107</b>, computing device <b>109</b>), the account data server <b>105</b>, and/or other devices (not shown) may have similar or different architecture as described with respect to authentication system <b>101</b>. Those of skill in the art will appreciate that the functionality of authentication system <b>101</b> (or the mobile device <b>107</b>, computing device <b>109</b>, and/or account data server <b>105</b>) as described herein may be spread across multiple data processing devices, for example, to distribute processing load across multiple computers, to segregate transactions based on geographic location, user access level, quality of service (QoS), etc. For example, the authentication system <b>101</b>, the account data server <b>105</b>, the mobile device <b>107</b>, the computing device <b>109</b>, and/or other devices (not shown) may operate in concert to provide parallel computing features in support of the operation of authentication software <b>125</b> and/or machine learning software <b>127</b>.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of transaction data <b>200</b> that may be stored by the account data server <b>105</b> and/or the authentication system <b>101</b>, and that may be used as training data and/or input data for machine learning processes as described below.</p><p id="p-0037" num="0036">The example transaction data <b>200</b> includes several example transactions that illustrate principles described below, although a real word data set may be far larger. The transactions may be associated with a particular user account (e.g., a credit card, debit card, or the like) and/or a plurality of accounts (e.g., one particular transaction may have been made via a credit card and another transaction may have been made via a debit card or a different credit card). The authentication system <b>101</b> and/or the account data server <b>105</b> may maintain a large number of transactions over a long period of time. Thus, although the example transactions include a few transactions over a short period, in practice the authentication system <b>101</b> and/or the account data server <b>105</b> may store user transaction data for months or years, which may yield a large volume of transactions that may be used to detect persistent spending patterns that take place over long periods and/or patterns that change over time.</p><p id="p-0038" num="0037">The authentication server <b>101</b> may analyze the transactions to detect spending patterns, as described in detail below, and ask the user questions that are generated based on the spending patterns in order to authenticate the user. For example, the authentication server <b>101</b> may be able to detect and generate spending patterns indicating a merchant the user frequently shops at, a type of merchant the user frequently shops at, an amount (or range of amounts) the user usually spends, a time (or period of time) the user usually shops, and the like. Asking the user questions that are generated based on these spending patterns provides an authentication mechanism that may be easy to use for legitimate users (who are familiar with their own spending patterns) and difficult for malicious users (who may not know the habits and patterns of the user at issue) to compromise.</p><p id="p-0039" num="0038">For example, the authentication server <b>101</b> may analyze the example transactions <b>200</b> using machine learning techniques as described in detail below and thereby determine that the user regularly transacts with a particular coffee shop in the morning, and usually spends a particular sum. The authentication server <b>101</b> may generate a data structure representing this particular spending pattern. For example, the authentication server <b>101</b> may use machine learning techniques to generate a vector indicating &#x3c;9-9:45 AM, weekday, Caf&#xe9; Viraj, coffee, $3.15&#x3e;, which indicates that the user frequently spends $3.15 at a coffee shop called &#x201c;Caf&#xe9; Viraj&#x201d; on weekdays between 9 AM and 9:45 AM. Similarly, the authentication server <b>101</b> may analyze the example transactions using machine learning techniques to generate a spending pattern vector indicating &#x3c;7:15-8:15 PM, Friday, restaurant, $100+&#x3e;, which may indicate that the user typically transacts with restaurants on Friday night between 7:15-8:15 and usually spends over $100. As a third example, the authentication server <b>101</b> may analyze the transaction data <b>200</b> and generate a spending pattern vector indicating &#x3c;weekend, gym, $1.25&#x3e;, which may indicate that a user regularly spends $1.25 at a gym on the weekends.</p><p id="p-0040" num="0039">In addition to spending patterns, the authentication server <b>101</b> may also detect, from the transaction data <b>200</b>, &#x201c;negative patterns&#x201d; indicating contexts in which the user typically does not perform transactions. For example, the authentication server <b>101</b> may use machine learning techniques, as described in detail below, to generate a first vector indicating &#x3c;9:45 AM-12:15 PM, weekday, none&#x3e;, and a second vector indicating &#x3c;1-6 PM, weekday, none&#x3e;, which may indicate that the user typically does not perform any transactions from 9:45 AM to 12:15 PM and from 1 PM to 6 PM during the week.</p><p id="p-0041" num="0040">Additionally and/or alternatively, the authentication server <b>101</b> may use machine learning techniques to detect activities based on the transaction data, as described in detail below. For example, based on the transaction data <b>200</b> indicating transactions at the gym on weekends, the authentication server <b>101</b> may determine that a user regularly works out on the weekends. Similarly, based on the lack of transactions from 9:45 AM to 12:15 PM and from 1 PM to 6 PM during the week, the authentication server may determine that the user is likely at work between 9:45 AM and 6 PM. The authentication server <b>101</b> may also ask the user authentication questions about these activity patterns.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of clustering transaction data to identify patterns. <figref idref="DRAWINGS">FIG. <b>3</b></figref> presents a simplified example that only uses two dimensions and a few data points <b>301</b> (illustrated as circles) in clusters <b>302</b> (illustrated as ellipses in dashed lines). On the vertical (y) axis, the data points are arranged according to merchant, with merchants of the same type being adjacent to each other. On the horizontal (x) axis, the data points are arranged according to time of day. Thus, a first cluster <b>302</b>A may include data points indicating transactions that take place early in the day at different merchants of a particular type (e.g., three different coffee shops). Similarly, a second cluster <b>302</b>B may include data points indicating transactions that take place around mid-day at a particular merchant (e.g., a particular lunch place). Similarly, a third cluster <b>302</b>C may include data points indicating transactions that take place in the evening at various merchants of another type (e.g. restaurants). Although this simplified example only shows clusters in two dimensions, in practice, transaction data may have many more dimensions such that spending patterns like the ones described for <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be generated by clustering. Techniques for generating these spending patterns using machine learning processes are described in detail below.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example neural network architecture <b>400</b>, which may be used to implement a trained machine learning model for generating spending pattern data as described herein. An artificial neural network, such as the neural network architecture <b>400</b>, may be a collection of connected nodes, with the nodes and connections each having assigned weights used to generate predictions. Each node in the artificial neural network may receive input and generate an output signal. The output of a node in the artificial neural network may be a function of its inputs and the weights associated with the edges. Ultimately, the trained model may be provided with input beyond the training data set <b>129</b> and used to generate predictions regarding the likely results.</p><p id="p-0044" num="0043">An artificial neural network may have an input layer <b>410</b>, one or more hidden layers <b>420</b>, and an output layer <b>430</b>. A neural network may have more than one hidden layer. Illustrated network architecture <b>400</b> is depicted with three hidden layers. The number of hidden layers employed in the neural network <b>400</b> may vary based on the particular application and/or problem domain. Similarly, the number of input and/or output nodes may vary based on the application. Many types of neural networks are used in practice, such as convolutional neural networks, recurrent neural networks, feed forward neural networks, combinations thereof, and others.</p><p id="p-0045" num="0044">During the machine learning model training process, machine learning software <b>127</b> may adjust the weights of each connection and/or node in a learning process as the machine learning model adapts to generate more accurate predictions on a training data set <b>129</b>. The weights assigned to each connection and/or node may be referred to as the machine learning model parameters. The model may be initialized with a random or white noise set of initial model parameters. The model parameters may then be iteratively adjusted using, for example, stochastic gradient descent algorithms that seek to minimize errors in the machine learning model. As described below with respect to step <b>505</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the trained model may be used to implement a model that generates spending patterns based on transaction data.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a method for authenticating a user based on authentication questions about user spending patterns, which may be generated based on transaction data using machine learning techniques.</p><p id="p-0047" num="0046">At step <b>501</b>, the authentication server <b>101</b> may receive a request to authenticate a user from a user device associated with a user, a device operated by a customer service representative (e.g., a phone operator) who needs to authenticate a user, or some other device. In some cases, the user device may access a website associated with the user account (e.g., a banking website) and attempt to obtain access to the account. Additionally and/or alternatively, the user may call in to a customer service call center, and a customer service agent may use a computing device to submit a request to authenticate the user on behalf of the user. Additionally and/or alternatively, the request to access the account may be part of a request to access and/or change sensitive data associated with an account (e.g., when a user requests financial data associated with an account after logging in, when a user requests to change an address or other contact information, etc.), may be part of a request to perform a transaction or the like.</p><p id="p-0048" num="0047">At decision <b>502</b>, the authentication server <b>101</b> may decide whether the user needs to be authenticated using authentication questions before the authentication server <b>101</b> provides access to the account. For example, the authentication server may determine that the user needs to be authenticated if the user is registering for access to a website for the first time, if the user has not logged onto the website from a particular user device before, if the account was recently locked due to a suspicious transaction, if there was a recent fraud report associated with the account, etc. Additionally and/or alternatively, the user may need to be authenticated using authentication questions when the user requests to access or edit certain data associated with an account (e.g., if a user requests access to financial data after logging in to an account, if a user requests to change contact information, etc.), the user may need to be authenticated to perform a transaction for the account, etc. Additionally and/or alternatively, the authentication questions may be used by customer service agents to authenticate the user whenever a user calls into a call center, engages with the customer service representative in a chat session, or the like. If the authentication server <b>101</b> decides to authenticate the user using authentication questions, the process may proceed to step <b>503</b>. If the authentication server <b>101</b> decides the user does not need to answer authentication questions (e.g., if the user provided a correct password from a recognized device), the method may proceed to step <b>514</b> and provide access to the account.</p><p id="p-0049" num="0048">At step <b>503</b>, the authentication server <b>101</b> may identify the user account associated with the user and retrieve transaction data for the user account. The authentication server <b>101</b> may store the transaction data in a database (e.g., internal database <b>131</b>) and/or may retrieve the transaction data from the account server <b>105</b> (e.g., by supplying a user identification number in a lookup request to the account server <b>105</b>, which may obtain the corresponding transaction data and reply to the authentication server <b>101</b>).</p><p id="p-0050" num="0049">As shown for the example transaction data <b>200</b>, the user transaction data may include a plurality of data fields for each transaction, including one or more of a transaction date, transaction day of the week, transaction time, an indicator of whether the transaction was on a weekday or not, a merchant name and/or merchant identifier, a type of merchant, an amount for the transaction, etc. The transaction data <b>200</b> may include other fields beyond the data fields shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>; for example, each transaction entry could have a data field indicating a location of the merchant or any other data about the merchant.</p><p id="p-0051" num="0050">At step <b>504</b>, the authentication server <b>101</b> may preprocess the transaction data in order to generate machine learning inputs. Some of the data shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> could be generated in the preprocessing step. For example, the transaction data could merely store a timestamp (e.g., in UNIX format) for each transaction, and the authentication server <b>101</b> at step <b>504</b> could then generate, from the timestamp, a data field indicating the day of week, a data field indicating the time of day, a data field indicating whether the transaction was on the weekend or not, or any other time-related data field that could be used as input for the machine learning algorithms.</p><p id="p-0052" num="0051">Additionally and/or alternatively, the authentication server <b>101</b> may generate other fields based on known information associated with the transaction. For example, the authentication server <b>101</b> may look up a location of each merchant, and generate location data (e.g., GPS coordinates) for a location data field that indicates the location of each merchant. Additionally and/or alternatively, the authentication server <b>101</b> may perform a menu lookup to determine what item the user actually or likely purchased based on the transaction amount for each transaction. For example, the authentication server may access a coffee shop's menu to determine that a $3.15 purchase price for a transaction at the coffee shop indicates that a user purchased a cappuccino, and may add an indication of the specific item that was purchased to a field of the transaction data.</p><p id="p-0053" num="0052">The authentication server <b>101</b> may also pre-process the transaction data by standardizing, normalizing, or otherwise performing feature scaling on numerical data fields in order to condition the data for the machine learning algorithms. Additionally and/or alternatively, the authentication server <b>101</b> may perform one-hot encoding on categorical data fields, or perform other such preprocessing techniques to prepare the transaction data for the machine learning algorithms.</p><p id="p-0054" num="0053">At step <b>505</b>, the authentication server <b>101</b> may use one or more machine learning algorithms on the machine learning inputs to generate machine learning outputs that may indicate spending patterns. The authentication server <b>101</b> may use clustering algorithms to generate clusters of transactions, which may then be further analyzed to generate spending patterns at step <b>506</b>.</p><p id="p-0055" num="0054">The authentication server <b>101</b> may use a hierarchical clustering algorithm on the transaction data <b>200</b> to generate a hierarchy of transaction clusters that represent different ways of dividing the transactions into clusters. For example, for a user that has a very different transaction pattern during weekdays than on the weekend, the highest level of clustering generated by a hierarchical clustering algorithm may be two clusters&#x2014;one containing weekday transactions and one containing weekend transactions. Conversely, for a user that follows one schedule on Monday-Wednesday-Friday, a different schedule on Tuesday-Thursday, and a third schedule on the weekend (e.g., a university student), the highest level of classification may divide all of the transactions into three clusters corresponding to the three high-level transaction patterns. Further down the hierarchy (e.g., at a second level, third level, etc.), transactions may be clusters according to more specific patterns, such as one cluster of transactions corresponding to a specific merchant type (e.g., coffee shops) that a user typically transacts at during the week, another cluster of transactions that typically take place on a specific day of the week, or any other pattern that the hierarchical clustering algorithm generates based on the transaction data <b>200</b>. Thus, the hierarchical clustering algorithm may generate a hierarchical tree specifying different clusters of varying specificity, which may be further analyzed in order to generate a spending pattern (as described at step <b>506</b>).</p><p id="p-0056" num="0055">Additionally and/or alternatively, the authentication server <b>101</b> may use a non-hierarchical clustering algorithm to cluster the transactions of the transaction data <b>200</b>, such as k-means, k-mode, DBSCAN, a Gaussian mixture model, or any other clustering method. The authentication server <b>101</b> may select default parameters, such as a size of a cluster and the minimum number of points to form a cluster for a DBSCAN algorithm, a number k of clusters to form for a k-means or k-mode algorithm, or the like. The authentication server <b>101</b> may then execute the clustering algorithm to generate clusters of transactions, as shown using example data in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Each cluster of transactions may be defined by a data structure (e.g., a vector) listing a plurality of transaction identifiers for the transactions assigned to a cluster. In some cases, a single data structure may be used to hold data for each of the clusters (e.g., a vector of vectors). In some cases, the machine learning algorithm may not assign a transaction to any cluster (e.g., because it is an outlier).</p><p id="p-0057" num="0056">Additionally and/or alternatively, the authentication server <b>101</b> may use a trained machine learning model, such as a neural network (e.g., according to the neural network architecture of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) support-vector machine, naive Bayes classifier, or some other machine learning model generated using supervised learning processes to perform the clustering and/or pattern detection. Trained machine learning models may have the benefit of being able to more accurately generate clusters and/or directly generate labeled spending patterns because the models are trained using detailed training data correlated with labeled outputs. The authentication server <b>101</b> may train a model (e.g., a neural network) as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> and as described below. The authentication server <b>101</b> may execute the training process to train the neural network of <figref idref="DRAWINGS">FIG. <b>4</b></figref> prior to the process of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, so that a trained model is pre-prepared for use at step <b>505</b>. Additionally and/or alternatively, the authentication server <b>101</b> may train the model as part of the process of <figref idref="DRAWINGS">FIG. <b>5</b></figref> (e.g., as a substep of step <b>505</b>) and/or in parallel to the execution of the process of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0058" num="0057">The authentication server <b>101</b> may provide the inputs generated at step <b>504</b> to the trained machine learning model, which may be trained to output clusters of transactions and/or data that describes patterns observed from the transactions. When the machine learning model is trained to output data indicating transaction clusters, it may generate data very similar to the data generated by the clustering algorithms described above. For example, the trained model may generate outputs indicating a list of transactions that are assigned to a first cluster, a list of transactions that are assigned to a second cluster, etc.</p><p id="p-0059" num="0058">Additionally and/or alternatively, the trained machine learning model may directly output one or more data structure(s) indicating patterns derived from the transaction data, such as one or more vectors describing one or more spending patterns. For example, a trained machine learning model, after processing the transaction data <b>200</b> as machine learning inputs, may output a vector indicating &#x3c;9-9:45 AM, weekday, Caf&#xe9; Viraj, coffee, $3.15&#x3e;, which indicates that the user frequently spends $3.15 at a coffee shop called &#x201c;Caf&#xe9; Viraj&#x201d; on weekdays between 9 AM and 9:45 AM. Similarly, the trained model may output a vector indicating &#x3c;7:15-8:15 PM, Friday, restaurant, $100+&#x3e;, which may indicate that the user typically transacts with restaurants on Friday night between 7:15-8:15 and usually spends over $100. Similarly, the trained model may output a vector indicating &#x3c;weekend, gym, S 1.25&#x3e;, which may indicate that a user regularly spends $1.25 at a gym on the weekend. Such a neural network may have been trained using training data that correlates to transaction data (e.g., data similar to transaction data <b>200</b> but for different users) to one or more outputs indicating patterns for the corresponding user. Accordingly, the neural network may have been trained to output one or more data structures indicating one or more spending pattern(s) based on inputs indicating a collection of transaction data.</p><p id="p-0060" num="0059">The trained machine learning model may also output negative pattern data structure(s) describing contexts in which a user did not perform transactions. For example, the trained machine learning model may output a first vector indicating &#x3c;9:45 AM-12:15 PM, weekday, none&#x3e;, and a second vector indicating &#x3c;1-6 PM, weekday, none&#x3e;, which may indicate that the user typically does not perform any transactions from 9:45 AM to 12:15 PM and from 1 PM to 6 PM during the week. Additionally and/or alternatively, the trained machine learning model may generate data structure(s) indicating activity patterns of the user. For example, the trained machine learning model may generate an output indicating that a user regularly works out on the weekends (e.g., based on transaction data indicating the user is frequently at a gym on weekends). Similarly, the trained machine learning model may generate an output indicating that the user is likely at work between 9:45 AM and 6 PM (e.g., based on a lack of transactions during that time period).</p><p id="p-0061" num="0060">At step <b>506</b>, the authentication server <b>101</b> may generate one or more spending pattern data structure(s) based on the machine learning outputs that were generated at step <b>505</b>. If the machine learning outputs generated at step <b>505</b> include clusters of transactions, the authentication server <b>101</b> may automatically analyze the clusters to generate spending pattern data structure(s).</p><p id="p-0062" num="0061">The authentication server <b>101</b> may thus analyze a cluster of transactions to determine common characteristics of the cluster, and store such common characteristics in a spending pattern data structure (e.g., a vector). For example, if a cluster of transactions includes a large number of transactions that each have timestamps between 9:05 AM and 9:27 AM, the authentication server <b>101</b> may generate a field for a spending pattern data structure (e.g., a vector) that indicates the spending pattern is for 9:05-9:27 AM. In some cases, the authentication server <b>101</b> may round time periods in order to standardize the time periods (which may help in generating authentication questions). For example, the beginning time of a time period may be rounded down (e.g., to the nearest half hour) and the ending time of a time period may be rounded up (e.g., to the nearest half hour) so that a time period of 9:05-9:27 AM is rounded to 9-9:30 AM. In some cases, the authentication server <b>101</b> may ignore outliers that may be included in a cluster. For example, if a cluster includes twenty transactions with a coffee shop that occur between 9 and 9 AM, and one transaction with the coffee shop that occurs at 4:30 PM, then the one transaction may be ignored for purposes of generating some or all of the spending pattern data fields.</p><p id="p-0063" num="0062">The authentication server <b>101</b> may also determine that a cluster is not associated with a particular variable, such as time of day. For example, if the authentication server <b>101</b> detects that the transactions of a cluster are randomly scattered throughout the day, then a time period field may not be generated for a spending data structure, and/or a default value (e.g., a null value) may be assigned to a time period field of a spending pattern data structure. The authentication server <b>101</b> may detect, for example, that less than a certain percentage (e.g., &#x3c;70%) of all transactions in a cluster take place in any given time window, and may thus determine that the pattern does not correlate with time of day.</p><p id="p-0064" num="0063">The authentication server <b>101</b> may determine that a cluster of transactions commonly take place on certain days or groups of days. For example, some or all transactions of a cluster may take on weekdays, on a Friday, on weekends, on Monday-Wednesday-Friday, etc. If the cluster has such a common characteristic, then the authentication server may generate a data field (e.g., a bit vector with a bit for each day of the week) for a spending pattern data structure. As above, outliers may be ignored, and if a certain threshold of transactions do not fit the pattern (e.g., &#x3c;70%), then the authentication server <b>101</b> may generate a default value (e.g., a null value) for a data field indicating a day of the week for a spending pattern data structure.</p><p id="p-0065" num="0064">Additionally and/or alternatively, the authentication server <b>101</b> may determine that a cluster of transactions are commonly associated with a particular merchant and/or merchant type. Some or all transactions of a cluster may be associated with a particular merchant (e.g., a particular coffee shop that a user regularly visits) and/or a particular merchant type. Some clusters may be associated with several merchants of the same type. For example, if the user regularly visits a restaurant on Friday night, but switches between different restaurants, then a cluster of transactions may each be associated with the same merchant type (restaurant) even though they are not associated with the same merchant. Accordingly, the authentication server may generate a data field value indication of a common merchant type and/or a common merchant for a particular spending pattern, and store such as value in a spending pattern data structure. Again, outliers may be ignored, and if a certain threshold of transactions do not fit the pattern (e.g., &#x3c;70%), then the authentication server <b>101</b> may generate a default value (e.g., a null value) for a data field indicating a merchant and/or a merchant type for a spending pattern data structure.</p><p id="p-0066" num="0065">The authentication server <b>101</b> may use any common property of a cluster to generate a data field for a spending pattern data structure using the techniques described above. For example, the authentication server may generate field(s) indicating a common amount spent for transactions in a particular cluster, a range of spending amounts for a cluster, a common item purchased for transactions of a cluster, and other such common properties of a cluster.</p><p id="p-0067" num="0066">The authentication server <b>101</b> may combine the data fields for various properties associated with a cluster into a data structure defining one or more spending patterns. For example, as described above, a cluster may be associated with common properties for a time period, a particular set of days, a merchant, a merchant type, and a purchase price, and therefore a vector specifying each of these data fields may be generated (e.g., a vector indicating &#x3c;9-9:45 AM, weekday, Caf&#xe9; Viraj, coffee, $3.15&#x3e;). Other example spending pattern data structures (e.g., vectors) may also be generated with more and/or fewer data fields specified, based on the properties that are common to a particular cluster. In some cases, the authentication server <b>101</b> may generate a data structure specifying a plurality of different spending patterns (e.g., a vector of spending pattern vectors) by combining multiple spending pattern data structures into a larger data structure.</p><p id="p-0068" num="0067">When a neural network or other trained machine learning model was used at step <b>505</b> to directly generate spending pattern data, then at step <b>506</b> the authentication server <b>101</b> may only need to perform minimal or no further processing to generate a spending pattern data structure. For example, if a trained machine learning model used at step <b>505</b> outputted a vector specifying a spending pattern of &#x3c;9:05-9:42 AM, weekday, Caf&#xe9; Viraj, coffee, $3.15&#x3e;, then the authentication server <b>101</b> may perform some further processing on the vector output, such as rounding the time period to the nearest 15 minutes to yield a vector of &#x3c;9-9:45 AM, weekday, Caf&#xe9; Viraj, coffee, $3.15&#x3e;, which may be stored as a spending pattern data structure. In other cases, the output of a trained machine leaning model may be used directly as a spending pattern data structure. Thus, the particular machine learning techniques used at step <b>505</b> may affect how much and what type of processing needs to be done on the machine learning output(s) at step <b>506</b>.</p><p id="p-0069" num="0068">The authentication server <b>101</b> may further analyze the transaction data <b>200</b> and/or the generated spending pattern(s) to determine one or more negative patterns. For example, the authentication server <b>101</b> may generate a negative pattern indicating time periods when no transactions typically occur based on the transaction data <b>200</b> itself, and/or by analyzing the spending patterns to select time periods that are not specified by any particular spending pattern. In some cases, a separate machine learning model (e.g., a neural network) may be trained to output the negative patterns based on inputs comprising the transaction data <b>200</b> and/or the generated spending patterns.</p><p id="p-0070" num="0069">At step <b>507</b>, the authentication server <b>101</b> may select one or more of the spending patterns generated at step <b>506</b> to be used to generate one or more authentication questions. The authentication questions may ask users about their patterns of transactions in order to provide questions that are difficult for malicious users to guess.</p><p id="p-0071" num="0070">The authentication server <b>101</b> may initially determine how many authentication questions about spending patterns need to be generated in order to authenticate a user. In some cases, the authentication server <b>101</b> may only need to generate a small number (e.g., one or two) of authentication questions about spending patterns, and may generate other authentication questions using other strategies. In some cases, the number of authentication questions required may vary based on other contextual information. For example, the authentication server <b>101</b> may generate a larger number of authentication questions if there was a recent report of fraud associated with a particular user account.</p><p id="p-0072" num="0071">The authentication server <b>101</b> may then determine whether the required number of spending pattern questions can be generated. The authentication server <b>101</b> may determine that one or more spending pattern questions can be generated for each spending pattern generated at step <b>506</b>. For example, for a spending pattern vector indicating &#x3c;9-9:45 AM, weekday, Caf&#xe9; Viraj, coffee, $3.15&#x3e;, the authentication server <b>101</b> can ask the user what time the user usually buys coffee, what days the user usually buys coffee, what merchant the user usually buys coffee at, what the user usually buys from 9-9:45 AM, how much the user usually spends on coffee at Caf&#xe9; Viraj, or any other query based on a combination of two or more data fields indicated by a particular spending pattern. Thus, the authentication server <b>101</b> may calculate a number of data field combinations that may be used to generate authentication questions based on the number of spending patterns and the number of common variables specified in each spending pattern.</p><p id="p-0073" num="0072">Certain spending patterns may be excluded from the calculation of how many questions can be generated. For example, the authentication server <b>101</b> may maintain a log of previous authentication requests, and which spending patterns and/or data field combinations were used to generate previous authentication questions. The authentication server <b>101</b> may then avoid selection of certain spending patterns and/or of certain data field combinations that were previously used, either by excluding the previously-used spending patterns and/or data field combinations from any consideration or by preferring other spending patterns and/or data field combinations if available. The authentication server <b>101</b> may maintain such records for a particular period (e.g., the last two weeks) in order to avoid frequent reuse of similar questions on the same spending patterns and/or data field combinations.</p><p id="p-0074" num="0073">In some cases (e.g., for new accounts with only a small number of transactions recorded, for accounts that are shared among different users, and/or for users that have highly variable behavior patterns), the authentication server <b>101</b> may determine that no spending patterns were generated and/or that no authentication questions about spending patterns should be generated, and may thus rely on other strategies to generate authentication questions. In such a case, the authentication server <b>101</b> may terminate the process of <figref idref="DRAWINGS">FIG. <b>5</b></figref> and use another process to generate authentication questions.</p><p id="p-0075" num="0074">The authentication server <b>101</b> may then select one or more spending patterns to generate the necessary number of authentication question(s). The authentication server <b>101</b> may simply randomly select patterns that were generated at step <b>506</b>. For example, if the authentication server <b>101</b> needs to generate four authentication questions, it may simply randomly select four spending patterns that were generated at step <b>506</b>, each of which may be used to generate a single question. Additionally and/or alternatively, the authentication server <b>101</b> may select a single spending pattern to generate multiple questions.</p><p id="p-0076" num="0075">Instead of a random selection, the authentication server <b>101</b> may prefer certain patterns over others to generate questions, and thus may more preferentially select certain spending patterns. As one example, the authentication server <b>101</b> may rank the spending patterns based on the number of transactions that were assigned to a cluster used to generate the particular spending pattern. Users may find more frequent spending patterns (as indicated by the number of transactions) to be more memorable. As another example, the authentication server <b>101</b> may rank the spending patterns based on a number of data fields, such that more specific spending patterns are ranked above less specific spending patterns. As a third example, the authentication server <b>101</b> may rank the spending patterns based on the length of a time period, with shorter time periods ranked higher. Users may find spending patterns that take place at specific times (e.g., 9-9:30) more memorable than spending patterns that take place over longer time periods (e.g., 6-8 PM). The authentication server <b>101</b> may thus preferentially select higher-ranked spending patterns for use in generating authentication questions (e.g., unless they were recently used for a previous authentication attempt, as discussed above).</p><p id="p-0077" num="0076">Additionally and/or alternatively, the authentication server <b>101</b> may rank the spending patterns for selection based on an overlap with and/or deviation from a common user spending pattern. For example, if many other users have a pattern of purchasing coffee between 9 AM and 9:30 AM, then the authentication server <b>101</b> may reduce the rank of a corresponding spending pattern for the user because it may be easily guessable. However, if a particular user typically buys coffee between 4 PM and 4:30 PM, then the authentication server <b>101</b> may determine that this spending pattern has low overlap with other users' spending patterns, and/or has a high deviation from a common user spending pattern, and thus may rank this spending pattern more highly for selection to generate an authentication question. The authentication server <b>101</b> may determine an overlap by comparing the user's spending patterns to other spending patterns for other users, and/or to a common spending pattern characterizing the behavior of many other users. It may also determine a deviation by comparing the distance between a user's spending pattern and a common user spending pattern, either in one dimension or in multiple dimensions.</p><p id="p-0078" num="0077">Additionally and/or alternatively, the authentication server <b>101</b> may select one or more fake patterns to generate authentication questions. The authentication server <b>101</b> may thus ask the user about spending patterns that the user does not have. For example, if a user's transaction history has no coffee shop transactions on the account, the authentication server <b>101</b> may ask when the user typically buys coffee, and the correct option may be a default answer such as &#x201c;none of the above&#x201d; or the like. Fake spending patterns may be selected in order to trap malicious users attempting to gain unauthorized access to an account. Thus, they may be selected based on common spending patterns that the particular user in question does not have.</p><p id="p-0079" num="0078">In order to select a fake spending pattern to generate an authentication question, the authentication server <b>101</b> may compare a common user spending pattern (e.g., a spending pattern characterizing common behavior of other users) to the user's spending patterns and/or transaction history <b>200</b>. If the common spending pattern does not partially or fully overlap with any user spending patterns or transactions, it may be selected to generate an authentication question. For example, if a common or otherwise average user (e.g., based on one or more average user profiles generated by averaging or otherwise compositing behavior from other users in general, other users with similar characteristics to the particular user being authenticated, etc.) commonly buys lunch between noon and 1 PM, but the particular user for which authentication questions are being generated never, or rarely, conducts lunchtime transactions, then the lunch spending pattern may be used as a fake spending pattern, and questions may be generated about what time the user typically transacts with a lunch shop, where the user typically shops between noon and 1 PM, etc. A user who typically avoids lunch transactions will be able to correctly identify the pattern as fake and select an appropriate answer (e.g., &#x201c;n/a&#x201d;, &#x201c;incorrect,&#x201d; &#x201c;other,&#x201d; or the like).</p><p id="p-0080" num="0079">At step <b>508</b>, the authentication server <b>101</b> may generate the questions and correct answers based on the spending patterns (potentially including negative patterns and/or fake patterns) that were selected at step <b>507</b>.</p><p id="p-0081" num="0080">The authentication server <b>101</b> may generate a question and a corresponding correct answer using data fields specified by a spending pattern. For example, for a spending pattern specifying &#x3c;7:15-8:15 PM, Friday, restaurant, $100+&#x3e;, the authentication server <b>101</b> may select the first two data fields to generate the question and the third data field to generate the answer (e.g., example question: &#x201c;what type of transaction do you typically make between 7:15 PM-8:15 PM on Friday?,&#x201d; example answer: &#x201c;a restaurant transaction&#x201d;). As another example, the authentication server <b>101</b> may select the first two data fields to generate a question, and the last data field to generate the correct answer (e.g., question: &#x201c;how much do you typically spend on transactions on Friday between 7:15-8:15 PM?,&#x201d; answer: &#x201c;more than $100&#x201d;).</p><p id="p-0082" num="0081">The authentication server <b>101</b> may generate the question and answer using templates that match certain types of data fields. For example, if the data fields for generating a question are &#x201c;time period&#x201d; and &#x201c;day&#x201d; data fields and the answer is a &#x201c;merchant type&#x201d; data fields, then the authentication server <b>101</b> may retrieve a matching template for this combination of data field types. The example template may provide a question template (e.g., &#x201c;What type of transaction do you typically make between [time period] on [day]?&#x201d;), which can be populated with the data field values taken from the spending pattern data structure. The example template may further provide an answer template for the corresponding data type (e.g., &#x201c;a [merchant type] transaction&#x201d;), which can similarly be populated with the data field value.</p><p id="p-0083" num="0082">Thus, to generate a question, the authentication server <b>101</b> may first select one or more templates that match a spending pattern data structure, and then populate the template to generate the question and correct answer. For example, the authentication server <b>101</b> may select a template for generating a question using first and second data types (e.g., [time period] and [day] values), and generating an answer using a third data type (e.g., a [merchant type] value), because that template matches a particular spending pattern that specifies each of the first, second, and third data types.</p><p id="p-0084" num="0083">The authentication server <b>101</b> may randomly select from among the templates that match a particular spending pattern. For example, if four pattern templates match a particular spending pattern, then the authentication server <b>101</b> may randomly select one of the four and generate a question using the selected pattern. Additionally and/or alternatively, the authentication server <b>101</b> may maintain a ranking of preferred templates, and generally pick the first template from the ranking. However, the authentication server <b>101</b> may avoid picking a particular ranked template (e.g., it may skip the first ranked template and use the second ranked template) if the particular ranked template was previously selected (e.g., to generate an authentication question for a recent authentication request, as discussed above) and/or if the same template was used to generate another question.</p><p id="p-0085" num="0084">Additionally and/or alternatively, the authentication server <b>101</b> may select a particular template in order to minimize guessability of the correct answer. The authentication server <b>101</b> may determine which pattern will yield the least guessable answers based on an overlap with other users' patterns and/or a deviation from a common user pattern that is specific to one or more data fields of the pattern. For example, if a user typically purchases coffee between 8 AM and 8:30 AM (which may be a common pattern for many users), but the user typically spends an unusual amount of money on the coffee purchase (e.g., $20-$25), then the authentication server <b>101</b> may select a pattern that uses the unusual spending amount as the correct answer. This may provide a less guessable question than a question about more common data values (e.g., a question about what time the user typically buys coffee, which may be more guessable for a particular user). Thus, the authentication server <b>101</b> may select a pattern based on the guessability of the generated question, which may be determined by analyzing the deviation from a common user value and/or the overlap with other users' values of each data field of a particular spending pattern. The authentication server <b>101</b> may then select the least guessable data value as the answer, and select a matching pattern based on the selected answer.</p><p id="p-0086" num="0085">Different templates may be used for spending patterns, negative spending patterns, activity patterns, and/or fake spending patterns. For example, for a fake spending pattern, the correct answer may be a default answer such as &#x201c;incorrect,&#x201d; &#x201c;other,&#x201d; &#x201c;none of the above,&#x201d; or the like. For a negative spending pattern, the template may use different language for a template (e.g., &#x201c;when do you typically avoid making any transactions?&#x201d;) matching particular data types. Similarly, the template language may differ for activity patterns.</p><p id="p-0087" num="0086">At step <b>509</b>, the authentication server <b>101</b> may generate one or more incorrect answers that are different from the correct answer. The authentication server <b>101</b> may generate incorrect answers that are somewhat similar to the correct answer in order to avoid making a correct answer obvious. Additionally and/or alternatively, the authentication server <b>101</b> may generate incorrect answers that are different enough from the correct answers that they do not confuse the user that is associated with the account. The authentication server <b>101</b> may thus balance between minimizing guessability for the incorrect answers (e.g., in order to avoid making the question too easy for a malicious attacker) versus minimizing the likelihood of causing confusion (e.g., in order to avoid making the question too hard for a legitimate user). The authentication server <b>101</b> may use several techniques to balance these factors, as explained in detail below.</p><p id="p-0088" num="0087">If the answer is a time period (e.g., question: &#x201c;what time do you typically buy coffee?,&#x201d; answer: &#x201c;9-9:30 AM&#x201d;) or some other range of values, then the authentication server <b>101</b> incorrect answers may be selected so that they do not overlap with the time period and/or range for the correct answer. Additionally and/or alternatively, the authentication server <b>101</b> may choose incorrect answers that are popular answers for a particular question in order to minimize guessability. For example, if most users buy a certain item during certain time periods (e.g., if most users buy coffee between 6:30 AM and 9:30 AM), then the incorrect answers may be selected from the common time periods, if they do not overlap with the correct answer (e.g., question: &#x201c;what time do you typically buy coffee?,&#x201d; correct answer: &#x201c;9-9:30 AM&#x201d;, incorrect answers: &#x201c;6-6:30 AM, 7-7:30 AM, 8-8:30 AM&#x201d;). Additionally and/or alternatively, the authentication server <b>101</b> may avoid generating an incorrect answer that is too close to the time period or range of values (e.g., the authentication server <b>101</b> may avoid generating an incorrect answer of &#x201c;8:30-9 AM&#x201d; because it is too close to the correct answer of &#x201c;9-9:30 AM&#x201d;).</p><p id="p-0089" num="0088">When a correct answer is a particular merchant, merchant type, or some other categorical value, the authentication server <b>101</b> may generate incorrect answers of the same or similar type to the correct answer. For example, if the correct answer is a particular merchant (e.g., a particular coffee shop), the authentication server <b>101</b> may generate incorrect answers that indicate different merchants of the same type (e.g., different coffee shops). If the correct answer is a particular merchant type (e.g., question: &#x201c;what type of merchant do you usually transact with on weekend mornings?,&#x201d; answer: &#x201c;a gym&#x201d;), then the incorrect answers may be similar merchant types (e.g., the incorrect answers may indicate a yoga studio, a tennis club, etc.). This approach may be generalized to any categorical data, such as day of week (e.g., incorrect answers may be different days of the week) and the like.</p><p id="p-0090" num="0089">When a correct answer is a particular numeric value, the authentication server <b>101</b> may select incorrect answers that are similar to but sufficiently different from the correct value in order to minimize guessability without tricking a legitimate user. For example, the authentication server <b>101</b> may select incorrect answers that differ by more than ten percent but less than forty percent from the correct answer. Additionally and/or alternatively, the incorrect answers may be selected such that they are evenly distributed with respect to the correct answer, such that they cluster around a particular most common answer, and/or using any other strategy.</p><p id="p-0091" num="0090">At step <b>510</b>, the authentication server <b>101</b> may provide the generated questions and answers to the user requesting authentication and/or to a customer service representative that is requesting authentication on behalf of the user. The authentication server <b>101</b> may provide the authentication questions as part of a webpage to the mobile device <b>107</b> and/or other computing device <b>109</b>. Then, at step <b>511</b>, the authentication server <b>101</b> may receive the user's response(s) to each of the questions as input by the user and/or a customer service representative on behalf of a user.</p><p id="p-0092" num="0091">At step <b>512</b>, the authentication server <b>101</b> may score the user responses. The authentication server <b>101</b> may provide a certain number of points for each correct answer to a question (e.g., twenty points for a correct answer), and/or deduct a certain number of points for each incorrect answer to a question (e.g., minus forty points for an incorrect answer), in order to yield an authentication score.</p><p id="p-0093" num="0092">In some cases, the authentication score may also be adjusted based on answers to other authentication questions generating using other strategies. For example, if the authentication server <b>101</b> was only able to generate three authentication questions about transaction patterns using the method of <figref idref="DRAWINGS">FIG. <b>5</b></figref> (e.g., because a user account has insufficient transaction data, because a user does not have regular purchasing behavior, because the user's patterns are common and thus easily guessable, or the like), then the authentication server <b>101</b> may generate other authentication questions using other strategies in order to provide a sufficient number of questions for the user to score above a certain threshold.</p><p id="p-0094" num="0093">In some cases, the authentication server <b>101</b> may weight the scores for correct and/or incorrect answers based on various factors. For example, if a user gets a difficult question right, the score for answering the question correctly may be increased; whereas if a user gets a difficult question wrong, the score for answering the question incorrectly may be reduced, and vice versa for easy questions. The difficulty of a question may be determined based on other user's rates of correct and incorrect answers. For example, if users frequently forget where they shop for gas and therefore tend to incorrectly answer questions about where they purchased gas, then the weighting for an incorrect answer may be reduced by the authentication server <b>101</b>. The authentication server <b>101</b> may assign difficulty ratings to certain merchant types, to certain question patterns, or based on any other question variable. The difficulty ratings may be generated based on historical user data. For example, if 99% of users correctly answer a question created using a first pattern, that pattern may be assigned a relatively low difficulty factor (or conversely, a high easiness factor). However, if &#x3c;90% of users correctly answer a question created using a second pattern, that pattern may be assigned a relatively higher difficulty factor.</p><p id="p-0095" num="0094">At decision <b>513</b>, the authentication server <b>101</b> may determine whether the score generated at step <b>512</b> is sufficient to provide access to the account. For example, the authentication server <b>101</b> may provide access to the user if the authentication score is above a certain threshold number (e.g., eighty points).</p><p id="p-0096" num="0095">At step <b>514</b>, the authentication server <b>101</b> may provide access to the account if the user is authenticated. As discussed above, the authentication server <b>101</b> may determine to authenticate the user if a total authentication score is above a certain threshold. Additionally and/or alternatively, the authentication server <b>101</b> may require the user to correctly answer every question before authentication the user and providing access to the account. At step <b>515</b>, if the authentication score is insufficient, the user requesting access may be denied.</p><p id="p-0097" num="0096">The authentication server <b>101</b> may thus provides access to an account based on patterns derived from the transaction history of the account. By asking question about the spending patterns indicated by account transactions, the authentication server <b>101</b> may generate questions that are easier for a legitimate user to correctly answer, but more difficult for a malicious user to correctly answer.</p><p id="p-0098" num="0097">One or more aspects discussed herein may be embodied in computer-usable or readable data and/or computer-executable instructions, such as in one or more program modules, executed by one or more computers or other devices as described herein. Generally, program modules include routines, programs, objects, components, data structures, and the like. that perform particular tasks or implement particular abstract data types when executed by a processor in a computer or other device. The modules may be written in a source code programming language that is subsequently compiled for execution, or may be written in a scripting language such as (but not limited to) HTML or XML. The computer executable instructions may be stored on a computer readable medium such as a hard disk, optical disk, removable storage media, solid-state memory, RAM, and the like. As will be appreciated by one of skill in the art, the functionality of the program modules may be combined or distributed as desired in various embodiments. In addition, the functionality may be embodied in whole or in part in firmware or hardware equivalents such as integrated circuits, field programmable gate arrays (FPGA), and the like. Particular data structures may be used to more effectively implement one or more aspects discussed herein, and such data structures are contemplated within the scope of computer executable instructions and computer-usable data described herein. Various aspects discussed herein may be embodied as a method, a computing device, a system, and/or a computer program product.</p><p id="p-0099" num="0098">Although the present invention has been described in certain specific aspects, many additional modifications and variations would be apparent to those skilled in the art. In particular, any of the various processes described above may be performed in alternative sequences and/or in parallel (on different computing devices) in order to achieve similar results in a manner that is more appropriate to the requirements of a specific application. It is therefore to be understood that the present invention may be practiced otherwise than specifically described without departing from the scope and spirit of the present invention. Thus, embodiments of the present invention should be considered in all respects as illustrative and not restrictive. Accordingly, the scope of the invention should be determined not by the embodiments illustrated, but by the appended claims and their equivalents.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>receiving, from a user device, a request for access to an account associated with a user;</claim-text><claim-text>retrieving transaction data for the account, wherein the transaction data indicates a plurality of transactions;</claim-text><claim-text>generating, based on the transaction data, for each transaction of the plurality of transactions, machine learning inputs;</claim-text><claim-text>providing the machine learning inputs to a machine learning algorithm to yield one or more machine learning outputs;</claim-text><claim-text>generating, based on the one or more machine learning outputs, a spending pattern associated with the user;</claim-text><claim-text>generating, based on the spending pattern, a question to authenticate the user;</claim-text><claim-text>generating, based on the spending pattern, a correct answer to the question;</claim-text><claim-text>generating, based on the correct answer, one or more incorrect answers to the question;</claim-text><claim-text>receiving, from the user device, a response to the authentication question; and</claim-text><claim-text>providing, to the user device and based on the response to the authentication question, access to the account.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the generated machine learning inputs comprise one or more of:<claim-text>a time of the transaction;</claim-text><claim-text>a location of the transaction;</claim-text><claim-text>a day of the transaction;</claim-text><claim-text>an amount of the transaction;</claim-text><claim-text>a merchant associated with the transaction; or</claim-text><claim-text>a type of the merchant associated with the transaction.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the machine learning algorithm is a clustering algorithm, wherein the one or more machine learning outputs are clusters of transactions, wherein the spending pattern indicates at least one typical user behavior corresponding to at least one of the one or more clusters of transactions.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the spending pattern indicates one or more of:<claim-text>a time period during which a user typically makes a particular type of transaction;</claim-text><claim-text>a particular merchant that a user typically transacts with;</claim-text><claim-text>a particular type of merchant that a user typically transacts with;</claim-text><claim-text>a time period during which a user typically does not transact with any merchant; or</claim-text><claim-text>a time at which a user typically begins or ends an activity.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the question indicates a merchant or a type of merchant, and wherein the correct answer indicates a first time period during which the user typically transacts with the merchant or the type of merchant.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the one or more incorrect answers indicate other time periods that do not overlap with the first time period.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the question indicates a time period, wherein the correct answer indicates a first merchant that the user typically transacts with during the time period.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the one or more incorrect answers indicate other merchants of the same type as the first merchant.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>generating, for the user, a fake spending pattern that does not overlap with the spending pattern for the user;</claim-text><claim-text>generating a second question and one or more incorrect answers to the second question based on the fake spending pattern; and</claim-text><claim-text>generating a correct answer to the second question,</claim-text><claim-text>wherein the providing of access to the account is further based on a user response to the second question.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>measuring a deviation of the spending pattern from a spending pattern for an average user, wherein the generating of the question is based on the deviation.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computing device comprising:<claim-text>one or more processors; and</claim-text><claim-text>memory storing instructions that, when executed by the one or more processors, cause the computing device to:<claim-text>receive, from a user device, a request for access to an account associated with a user;</claim-text><claim-text>retrieve transaction data for the account, wherein the transaction data indicates a plurality of transactions;</claim-text><claim-text>generate, based on the transaction data, for each transaction of the plurality of transactions, machine learning inputs;</claim-text><claim-text>provide the machine learning inputs to a machine learning algorithm to yield one or more machine learning outputs;</claim-text><claim-text>generate, based on the one or more machine learning outputs, a spending pattern associated with the user;</claim-text><claim-text>generate, based on the spending pattern, a question to authenticate the user;</claim-text><claim-text>generate, based on the spending pattern, a correct answer to the question;</claim-text><claim-text>generate, based on the correct answer, one or more incorrect answers to the question;</claim-text><claim-text>receive, from the user device, a response to the authentication question; and</claim-text><claim-text>provide, to the user device and based on the response to the authentication question, access to the account.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the generated machine learning inputs comprise one or more of:<claim-text>a time of the transaction;</claim-text><claim-text>a location of the transaction;</claim-text><claim-text>a day of the transaction;</claim-text><claim-text>an amount of the transaction;</claim-text><claim-text>a merchant associated with the transaction; or</claim-text><claim-text>a type of the merchant associated with the transaction.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the spending pattern indicates one or more of:<claim-text>a time period during which a user typically makes a particular type of transaction;</claim-text><claim-text>a particular merchant that a user typically transacts with;</claim-text><claim-text>a particular type of merchant that a user typically transacts with;</claim-text><claim-text>a time period during which a user typically does not transact with any merchant; or</claim-text><claim-text>a time at which a user typically begins or ends an activity.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the question indicates a merchant or a type of merchant, and wherein the correct answer indicates a first time period during which the user typically transacts with the merchant or the type of merchant.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the question indicates a time period, wherein the correct answer indicates a first merchant that the user typically transacts with during the time period.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. One or more non-transitory computer-readable media storing instructions that, when executed by one or more processors, cause a computing device to:<claim-text>receive, from a user device, a request for access to an account associated with a user;</claim-text><claim-text>retrieve transaction data for the account, wherein the transaction data indicates a plurality of transactions;</claim-text><claim-text>generate, based on the transaction data, for each transaction of the plurality of transactions, machine learning inputs;</claim-text><claim-text>provide the machine learning inputs to a machine learning algorithm to yield one or more machine learning outputs;</claim-text><claim-text>generate, based on the one or more machine learning outputs, a spending pattern associated with the user;</claim-text><claim-text>generate, based on the spending pattern, a question to authenticate the user;</claim-text><claim-text>generate, based on the spending pattern, a correct answer to the question;</claim-text><claim-text>generate, based on the correct answer, one or more incorrect answers to the question;</claim-text><claim-text>receive, from the user device, a response to the authentication question; and</claim-text><claim-text>provide, to the user device and based on the response to the authentication question, access to the account.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The one or more non-transitory computer-readable media of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the generated machine learning inputs comprise one or more of:<claim-text>a time of the transaction;</claim-text><claim-text>a location of the transaction;</claim-text><claim-text>a day of the transaction;</claim-text><claim-text>an amount of the transaction;</claim-text><claim-text>a merchant associated with the transaction; or</claim-text><claim-text>a type of the merchant associated with the transaction.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The one or more non-transitory computer-readable media of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the spending pattern indicates one or more of:<claim-text>a time period during which a user typically makes a particular type of transaction;</claim-text><claim-text>a particular merchant that a user typically transacts with;</claim-text><claim-text>a particular type of merchant that a user typically transacts with;</claim-text><claim-text>a time period during which a user typically does not transact with any merchant; or</claim-text><claim-text>a time at which a user typically begins or ends an activity.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The one or more non-transitory computer-readable media of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the question indicates a merchant or a type of merchant, and wherein the correct answer indicates a first time period during which the user typically transacts with the merchant or the type of merchant.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The one or more non-transitory computer-readable media of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the question indicates a time period, wherein the correct answer indicates a first merchant that the user typically transacts with during the time period.</claim-text></claim></claims></us-patent-application>