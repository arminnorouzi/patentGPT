<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007305A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007305</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17850608</doc-number><date>20220627</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>44</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>119</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>44</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>119</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SUBPICTURE PARTITIONING AND SCALING WINDOW INFORMATION</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63215937</doc-number><date>20210628</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Tencent America LLC</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Byeongdoo</first-name><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>WENGER</last-name><first-name>Stephan</first-name><address><city>Hillsborough</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Xiang</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>LIU</last-name><first-name>Shan</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Tencent America LLC</orgname><role>02</role><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects of the disclosure provide a method, an apparatus, and non-transitory computer-readable storage medium for video decoding. The apparatus includes processing circuitry configured to decode at least one of a first flag or a second flag in a syntax structure for a first picture in a coded video sequence (CVS). The first flag can indicate whether first subpicture partitioning information of the first picture is signaled in the syntax structure. The second flag can indicate whether first subpicture scaling window information for a first subpicture included in the first picture is signaled in the syntax structure. The processing circuitry reconstructs the first subpicture based on the at least one of the first flag indicating that the first subpicture partitioning information of the first picture is signaled in the syntax structure or the second flag indicating that the first subpicture scaling window information for the first subpicture is signaled in the syntax structure.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="214.88mm" wi="158.75mm" file="US20230007305A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="235.03mm" wi="162.98mm" orientation="landscape" file="US20230007305A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="220.05mm" wi="177.80mm" orientation="landscape" file="US20230007305A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="81.79mm" wi="140.80mm" orientation="landscape" file="US20230007305A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="211.92mm" wi="163.83mm" orientation="landscape" file="US20230007305A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="202.44mm" wi="165.44mm" orientation="landscape" file="US20230007305A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="220.47mm" wi="177.80mm" orientation="landscape" file="US20230007305A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="242.74mm" wi="178.65mm" orientation="landscape" file="US20230007305A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="244.52mm" wi="179.24mm" orientation="landscape" file="US20230007305A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="239.18mm" wi="178.65mm" orientation="landscape" file="US20230007305A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="194.56mm" wi="89.75mm" orientation="landscape" file="US20230007305A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="160.87mm" wi="137.16mm" orientation="landscape" file="US20230007305A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="222.76mm" wi="159.43mm" orientation="landscape" file="US20230007305A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="170.77mm" wi="162.39mm" orientation="landscape" file="US20230007305A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="220.64mm" wi="115.65mm" orientation="landscape" file="US20230007305A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="221.15mm" wi="125.22mm" orientation="landscape" file="US20230007305A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="221.15mm" wi="125.22mm" orientation="landscape" file="US20230007305A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="146.98mm" wi="101.68mm" orientation="landscape" file="US20230007305A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="221.66mm" wi="164.25mm" file="US20230007305A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="218.69mm" wi="165.95mm" file="US20230007305A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="231.65mm" wi="179.24mm" orientation="landscape" file="US20230007305A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This present disclosure claims the benefit of priority to U.S. Provisional Application No. 63/215,937, &#x201c;Techniques for subpicture-wise reference picture resampling and scalability for video streaming&#x201d; filed on Jun. 28, 2021, which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure describes embodiments generally related to video coding.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent the work is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.</p><p id="p-0005" num="0004">Image and/or video coding and decoding can be performed using inter-picture prediction with motion compensation. Uncompressed digital image and/or video can include a series of pictures, each picture having a spatial dimension of, for example, 1920&#xd7;1080 luminance samples and associated chrominance samples. The series of pictures can have a fixed or variable picture rate (informally also known as frame rate), of, for example 60 pictures per second or 60 Hz. Uncompressed image and/or video has specific bitrate requirements. For example, 1080p60 4:2:0 video at 8 bit per sample (1920&#xd7;1080 luminance sample resolution at 60 Hz frame rate) requires close to 1.5 Gbit/s bandwidth. An hour of such video requires more than 600 GBytes of storage space.</p><p id="p-0006" num="0005">One purpose of image and/or video coding and decoding can be the reduction of redundancy in the input image and/or video signal, through compression. Compression can help reduce the aforementioned bandwidth and/or storage space requirements, in some cases by two orders of magnitude or more. Although the descriptions herein use video encoding/decoding as illustrative examples, the same techniques can be applied to image encoding/decoding in similar fashion without departing from the spirit of the present disclosure. Both lossless compression and lossy compression, as well as a combination thereof can be employed. Lossless compression refers to techniques where an exact copy of the original signal can be reconstructed from the compressed original signal. When using lossy compression, the reconstructed signal may not be identical to the original signal, but the distortion between original and reconstructed signals is small enough to make the reconstructed signal useful for the intended application. In the case of video, lossy compression is widely employed. The amount of distortion tolerated depends on the application; for example, users of certain consumer streaming applications may tolerate higher distortion than users of television distribution applications. The compression ratio achievable can reflect that: higher allowable/tolerable distortion can yield higher compression ratios.</p><p id="p-0007" num="0006">A video encoder and decoder can utilize techniques from several broad categories, including, for example, motion compensation, transform, quantization, and entropy coding.</p><p id="p-0008" num="0007">Video codec technologies can include techniques known as intra coding. In intra coding, sample values are represented without reference to samples or other data from previously reconstructed reference pictures. In some video codecs, the picture is spatially subdivided into blocks of samples. When all blocks of samples are coded in intra mode, that picture can be an intra picture. Intra pictures and their derivations such as independent decoder refresh pictures, can be used to reset the decoder state and can, therefore, be used as the first picture in a coded video bitstream and a video session, or as a still image. The samples of an intra block can be exposed to a transform, and the transform coefficients can be quantized before entropy coding. Intra prediction can be a technique that minimizes sample values in the pre-transform domain. In some cases, the smaller the DC value after a transform is, and the smaller the AC coefficients are, the fewer the bits that are required at a given quantization step size to represent the block after entropy coding.</p><p id="p-0009" num="0008">Traditional intra coding such as known from, for example MPEG-2 generation coding technologies, does not use intra prediction. However, some newer video compression technologies include techniques that attempt, from, for example, surrounding sample data and/or metadata obtained during the encoding and/or decoding of spatially neighboring, and preceding in decoding order, blocks of data. Such techniques are henceforth called &#x201c;intra prediction&#x201d; techniques. Note that in at least some cases, intra prediction is using reference data only from the current picture under reconstruction and not from reference pictures.</p><p id="p-0010" num="0009">There can be many different forms of intra prediction. When more than one of such techniques can be used in a given video coding technology, the technique in use can be coded in an intra prediction mode. In certain cases, modes can have submodes and/or parameters, and those can be coded individually or included in the mode codeword. Which codeword to use for a given mode, submode, and/or parameter combination can have an impact in the coding efficiency gain through intra prediction, and so can the entropy coding technology used to translate the codewords into a bitstream.</p><p id="p-0011" num="0010">A certain mode of intra prediction was introduced with H.264, refined in H.265, and further refined in newer coding technologies such as joint exploration model (JEM), versatile video coding (VVC), and benchmark set (BMS). A predictor block can be formed using neighboring sample values belonging to already available samples. Sample values of neighboring samples are copied into the predictor block according to a direction. A reference to the direction in use can be coded in the bitstream or may itself be predicted.</p><p id="p-0012" num="0011">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, depicted in the lower right is a subset of nine predictor directions known from H.265's 33 possible predictor directions (corresponding to the 33 angular modes of the 35 intra modes). The point where the arrows converge (<b>101</b>) represents the sample being predicted. The arrows represent the direction from which the sample is being predicted. For example, arrow (<b>102</b>) indicates that sample (<b>101</b>) is predicted from a sample or samples to the upper right, at a 45 degree angle from the horizontal. Similarly, arrow (<b>103</b>) indicates that sample (<b>101</b>) is predicted from a sample or samples to the lower left of sample (<b>101</b>), in a 22.5 degree angle from the horizontal.</p><p id="p-0013" num="0012">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, on the top left there is depicted a square block (<b>104</b>) of 4&#xd7;4 samples (indicated by a dashed, boldface line). The square block (<b>104</b>) includes 16 samples, each labelled with an &#x201c;S&#x201d;, its position in the Y dimension (e.g., row index) and its position in the X dimension (e.g., column index). For example, sample S21 is the second sample in the Y dimension (from the top) and the first (from the left) sample in the X dimension. Similarly, sample S44 is the fourth sample in block (<b>104</b>) in both the Y and X dimensions. As the block is 4&#xd7;4 samples in size, S44 is at the bottom right. Further shown are reference samples that follow a similar numbering scheme. A reference sample is labelled with an R, its Y position (e.g., row index) and X position (column index) relative to block (<b>104</b>). In both H.264 and H.265, prediction samples neighbor the block under reconstruction; therefore no negative values need to be used.</p><p id="p-0014" num="0013">Intra picture prediction can work by copying reference sample values from the neighboring samples as appropriated by the signaled prediction direction. For example, assume the coded video bitstream includes signaling that, for this block, indicates a prediction direction consistent with arrow (<b>102</b>)&#x2014;that is, samples are predicted from a prediction sample or samples to the upper right, at a 45 degree angle from the horizontal. In that case, samples S41, S32, S23, and S14 are predicted from the same reference sample R05. Sample S44 is then predicted from reference sample R08.</p><p id="p-0015" num="0014">In certain cases, the values of multiple reference samples may be combined, for example through interpolation, in order to calculate a reference sample; especially when the directions are not evenly divisible by 45 degrees.</p><p id="p-0016" num="0015">The number of possible directions has increased as video coding technology has developed. In H.264 (year 2003), nine different direction could be represented. That increased to 33 in H.265 (year 2013), and JEM/VVC/BMS, at the time of disclosure, can support up to 65 directions. Experiments have been conducted to identify the most likely directions, and certain techniques in the entropy coding are used to represent those likely directions in a small number of bits, accepting a certain penalty for less likely directions. Further, the directions themselves can sometimes be predicted from neighboring directions used in neighboring, already decoded, blocks.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows a schematic (<b>110</b>) that depicts 65 intra prediction directions according to JEM to illustrate the increasing number of prediction directions over time.</p><p id="p-0018" num="0017">The mapping of intra prediction directions bits in the coded video bitstream that represent the direction can be different from video coding technology to video coding technology; and can range, for example, from simple direct mappings of prediction direction to intra prediction mode, to codewords, to complex adaptive schemes involving most probable modes, and similar techniques. In all cases, however, there can be certain directions that are statistically less likely to occur in video content than certain other directions. As the goal of video compression is the reduction of redundancy, those less likely directions will, in a well working video coding technology, be represented by a larger number of bits than more likely directions.</p><p id="p-0019" num="0018">Motion compensation can be a lossy compression technique and can relate to techniques where a block of sample data from a previously reconstructed picture or part thereof (reference picture), after being spatially shifted in a direction indicated by a motion vector (MV henceforth), is used for the prediction of a newly reconstructed picture or picture part. In some cases, the reference picture can be the same as the picture currently under reconstruction. MVs can have two dimensions X and Y, or three dimensions, the third being an indication of the reference picture in use (the latter, indirectly, can be a time dimension).</p><p id="p-0020" num="0019">In some video compression techniques, an MV applicable to a certain area of sample data can be predicted from other MVs, for example from those related to another area of sample data spatially adjacent to the area under reconstruction, and preceding that MV in decoding order. Doing so can substantially reduce the amount of data required for coding the MV, thereby removing redundancy and increasing compression. MV prediction can work effectively, for example, because when coding an input video signal derived from a camera (known as natural video) there is a statistical likelihood that areas larger than the area to which a single MV is applicable move in a similar direction and, therefore, can in some cases be predicted using a similar motion vector derived from MVs of neighboring area. That results in the MV found for a given area to be similar or the same as the MV predicted from the surrounding MVs, and that in turn can be represented, after entropy coding, in a smaller number of bits than what would be used if coding the MV directly. In some cases, MV prediction can be an example of lossless compression of a signal (namely: the MVs) derived from the original signal (namely: the sample stream). In other cases, MV prediction itself can be lossy, for example because of rounding errors when calculating a predictor from several surrounding MVs.</p><p id="p-0021" num="0020">Various MV prediction mechanisms are described in H.265/HEVC (ITU-T Rec. H.265, &#x201c;High Efficiency Video Coding&#x201d;, December 2016). Out of the many MV prediction mechanisms that H.265 offers, described here is a technique henceforth referred to as &#x201c;spatial merge&#x201d;.</p><p id="p-0022" num="0021">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a current block (<b>201</b>) comprises samples that have been found by the encoder during the motion search process to be predictable from a previous block of the same size that has been spatially shifted. Instead of coding that MV directly, the MV can be derived from metadata associated with one or more reference pictures, for example from the most recent (in decoding order) reference picture, using the MV associated with either one of five surrounding samples, denoted A0, A1, and B0, B1, B2 (<b>202</b> through <b>206</b>, respectively). In H.265, the MV prediction can use predictors from the same reference picture that the neighboring block is using.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0023" num="0022">Aspects of the disclosure provide methods and apparatuses for video encoding and decoding. In some examples, an apparatus for video decoding includes processing circuitry. The processing circuitry is configured to decode at least one of a first flag or a second flag in a syntax structure for a first picture in a coded video sequence (CVS). The first picture includes a first subpicture. The first flag can indicate whether first subpicture partitioning information of the first picture is signaled in the syntax structure. The second flag can indicate whether first subpicture scaling window information for the first subpicture is signaled in the syntax structure. The processing circuitry can reconstruct the first subpicture based on the at least one of the first flag indicating that the first subpicture partitioning information of the first picture is signaled in the syntax structure or the second flag indicating that the first subpicture scaling window information for the first subpicture is signaled in the syntax structure.</p><p id="p-0024" num="0023">In an embodiment, the syntax structure is a first picture parameter set (PPS) syntax structure.</p><p id="p-0025" num="0024">In an embodiment, the at least one of the first flag and the second flag includes the first flag. The first flag indicates that the first subpicture partitioning information for the first picture is signaled in the syntax structure.</p><p id="p-0026" num="0025">In an embodiment, the first picture includes a plurality of subpictures, the plurality of subpictures including the first subpicture. The processing circuitry can determine, based on the first subpicture partitioning information, a first subpicture layout of the plurality of subpictures in the first picture including a size and a position of each of the plurality of subpictures in the first picture.</p><p id="p-0027" num="0026">In an embodiment, a subpicture identifier (ID) of each subpicture in the first picture can be determined based on the first subpicture partitioning information in the syntax structure.</p><p id="p-0028" num="0027">In an embodiment, the syntax structure is a first picture parameter set (PPS) syntax structure. The processing circuitry can decode second subpicture partitioning information signaled in a second PPS syntax structure for a second picture in the CVS. The processing circuitry can reconstruct second subpictures in the second picture based on the second subpicture partitioning information. A second subpicture layout of the second picture can be different from the first subpicture layout of the first picture.</p><p id="p-0029" num="0028">In an embodiment, the first picture is in a first layer in the CVS. The processing circuitry can decode second subpicture partitioning information signaled in another syntax structure for a second picture in a second layer in the CVS. The second subpicture partitioning information can be different from the first subpicture partitioning information. The processing circuitry can reconstruct second subpictures in the second picture based on the second subpicture partitioning information.</p><p id="p-0030" num="0029">In an embodiment, the at least one of the first flag and the second flag includes the second flag, and the second flag indicates that the first subpicture scaling window information of the first subpicture is signaled in the syntax structure.</p><p id="p-0031" num="0030">In an embodiment, the processing circuitry decodes the first subpicture scaling window information of the first subpicture based on the syntax structure. The processing circuitry can reconstruct the first subpicture using subpicture-wise reference picture resampling that is based on the first subpicture scaling window information of the first subpicture.</p><p id="p-0032" num="0031">In an embodiment, the at least one of the first flag and the second flag further includes the first flag. The first flag indicates that the first subpicture partitioning information is signaled in the syntax structure. The processing circuitry can decode the first subpicture scaling window information of the first subpicture based on the syntax structure. The processing circuitry can determine dimension information and position information of the first subpicture based on the first subpicture partitioning information. The processing circuitry can reconstruct the first subpicture based on the first subpicture scaling window information of the first subpicture, the dimension information of the first subpicture, and the position information of the first subpicture.</p><p id="p-0033" num="0032">Aspects of the disclosure also provide a non-transitory computer-readable storage medium storing a program executable by at least one processor to perform the methods for video decoding.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0034" num="0033">Further features, the nature, and various advantages of the disclosed subject matter will be more apparent from the following detailed description and the accompanying drawings in which:</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a schematic illustration of an exemplary subset of intra prediction modes.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is an illustration of exemplary intra prediction directions.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a current block (<b>201</b>) and surrounding samples in accordance with an embodiment.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic illustration of a simplified block diagram of a communication system (<b>300</b>) in accordance with an embodiment.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic illustration of a simplified block diagram of a communication system (<b>400</b>) in accordance with an embodiment.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic illustration of a simplified block diagram of a decoder in accordance with an embodiment.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic illustration of a simplified block diagram of an encoder in accordance with an embodiment.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a block diagram of an encoder in accordance with another embodiment.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a block diagram of a decoder in accordance with another embodiment.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an example of a slice header including a reference to a picture parameter set (PPS), a sequence parameter set (SPS), and a video parameter set (VPS) according to an embodiment of the disclosure.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an exemplary image including multiple picture-in-pictures according to an embodiment of the disclosure.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows an example of an enhanced display of a local region according to an embodiment of the disclosure.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows an exemplary systematic design with subpictures and multi-layers according to an embodiment of the disclosure.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an example of a reference subpicture scaling window in a reference picture and a subpicture scaling window in a subpicture according to an embodiment of the disclosure.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> shows an exemplary subpicture layout update process within a coded video sequence (CVS) according to an embodiment of the disclosure.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>14</b>B</figref> shows an exemplary subpicture layout update process within a CVS according to an embodiment of the disclosure.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows exemplary subpicture layouts in different layers in a CVS according to an embodiment of the disclosure.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows a flow chart outlining an encoding process according to an embodiment of the disclosure.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows a flow chart outlining a decoding process according to an embodiment of the disclosure.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a schematic illustration of a computer system in accordance with an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a simplified block diagram of a communication system (<b>300</b>) according to an embodiment of the present disclosure. The communication system (<b>300</b>) includes a plurality of terminal devices that can communicate with each other, via, for example, a network (<b>350</b>). For example, the communication system (<b>300</b>) includes a first pair of terminal devices (<b>310</b>) and (<b>320</b>) interconnected via the network (<b>350</b>). In the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example, the first pair of terminal devices (<b>310</b>) and (<b>320</b>) performs unidirectional transmission of data. For example, the terminal device (<b>310</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device (<b>310</b>)) for transmission to the other terminal device (<b>320</b>) via the network (<b>350</b>). The encoded video data can be transmitted in the form of one or more coded video bitstreams. The terminal device (<b>320</b>) may receive the coded video data from the network (<b>350</b>), decode the coded video data to recover the video pictures and display video pictures according to the recovered video data. Unidirectional data transmission may be common in media serving applications and the like.</p><p id="p-0056" num="0055">In another example, the communication system (<b>300</b>) includes a second pair of terminal devices (<b>330</b>) and (<b>340</b>) that performs bidirectional transmission of coded video data that may occur, for example, during videoconferencing. For bidirectional transmission of data, in an example, each terminal device of the terminal devices (<b>330</b>) and (<b>340</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device) for transmission to the other terminal device of the terminal devices (<b>330</b>) and (<b>340</b>) via the network (<b>350</b>). Each terminal device of the terminal devices (<b>330</b>) and (<b>340</b>) also may receive the coded video data transmitted by the other terminal device of the terminal devices (<b>330</b>) and (<b>340</b>), and may decode the coded video data to recover the video pictures and may display video pictures at an accessible display device according to the recovered video data.</p><p id="p-0057" num="0056">In the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example, the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>) may be illustrated as servers, personal computers and smart phones but the principles of the present disclosure may be not so limited. Embodiments of the present disclosure find application with laptop computers, tablet computers, media players and/or dedicated video conferencing equipment. The network (<b>350</b>) represents any number of networks that convey coded video data among the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>), including for example wireline (wired) and/or wireless communication networks. The communication network (<b>350</b>) may exchange data in circuit-switched and/or packet-switched channels. Representative networks include telecommunications networks, local area networks, wide area networks and/or the Internet. For the purposes of the present discussion, the architecture and topology of the network (<b>350</b>) may be immaterial to the operation of the present disclosure unless explained herein below.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates, as an example for an application for the disclosed subject matter, the placement of a video encoder and a video decoder in a streaming environment. The disclosed subject matter can be equally applicable to other video enabled applications, including, for example, video conferencing, digital TV, storing of compressed video on digital media including CD, DVD, memory stick and the like, and so on.</p><p id="p-0059" num="0058">A streaming system may include a capture subsystem (<b>413</b>), that can include a video source (<b>401</b>), for example a digital camera, creating for example a stream of video pictures (<b>402</b>) that are uncompressed. In an example, the stream of video pictures (<b>402</b>) includes samples that are taken by the digital camera. The stream of video pictures (<b>402</b>), depicted as a bold line to emphasize a high data volume when compared to encoded video data (<b>404</b>) (or coded video bitstreams), can be processed by an electronic device (<b>420</b>) that includes a video encoder (<b>403</b>) coupled to the video source (<b>401</b>). The video encoder (<b>403</b>) can include hardware, software, or a combination thereof to enable or implement aspects of the disclosed subject matter as described in more detail below. The encoded video data (<b>404</b>) (or encoded video bitstream), depicted as a thin line to emphasize the lower data volume when compared to the stream of video pictures (<b>402</b>), can be stored on a streaming server (<b>405</b>) for future use. One or more streaming client subsystems, such as client subsystems (<b>406</b>) and (<b>408</b>) in <figref idref="DRAWINGS">FIG. <b>4</b></figref> can access the streaming server (<b>405</b>) to retrieve copies (<b>407</b>) and (<b>409</b>) of the encoded video data (<b>404</b>). A client subsystem (<b>406</b>) can include a video decoder (<b>410</b>), for example, in an electronic device (<b>430</b>). The video decoder (<b>410</b>) decodes the incoming copy (<b>407</b>) of the encoded video data and creates an outgoing stream of video pictures (<b>411</b>) that can be rendered on a display (<b>412</b>) (e.g., display screen) or other rendering device (not depicted). In some streaming systems, the encoded video data (<b>404</b>), (<b>407</b>), and (<b>409</b>) (e.g., video bitstreams) can be encoded according to certain video coding/compression standards. Examples of those standards include ITU-T Recommendation H.265. In an example, a video coding standard under development is informally known as Versatile Video Coding (VVC). The disclosed subject matter may be used in the context of VVC.</p><p id="p-0060" num="0059">It is noted that the electronic devices (<b>420</b>) and (<b>430</b>) can include other components (not shown). For example, the electronic device (<b>420</b>) can include a video decoder (not shown) and the electronic device (<b>430</b>) can include a video encoder (not shown) as well.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of a video decoder (<b>510</b>) according to an embodiment of the present disclosure. The video decoder (<b>510</b>) can be included in an electronic device (<b>530</b>). The electronic device (<b>530</b>) can include a receiver (<b>531</b>) (e.g., receiving circuitry). The video decoder (<b>510</b>) can be used in the place of the video decoder (<b>410</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0062" num="0061">The receiver (<b>531</b>) may receive one or more coded video sequences to be decoded by the video decoder (<b>510</b>); in the same or another embodiment, one coded video sequence at a time, where the decoding of each coded video sequence is independent from other coded video sequences. The coded video sequence may be received from a channel (<b>501</b>), which may be a hardware/software link to a storage device which stores the encoded video data. The receiver (<b>531</b>) may receive the encoded video data with other data, for example, coded audio data and/or ancillary data streams, that may be forwarded to their respective using entities (not depicted). The receiver (<b>531</b>) may separate the coded video sequence from the other data. To combat network jitter, a buffer memory (<b>515</b>) may be coupled in between the receiver (<b>531</b>) and an entropy decoder/parser (<b>520</b>) (&#x201c;parser (<b>520</b>)&#x201d; henceforth). In certain applications, the buffer memory (<b>515</b>) is part of the video decoder (<b>510</b>). In others, it can be outside of the video decoder (<b>510</b>) (not depicted). In still others, there can be a buffer memory (not depicted) outside of the video decoder (<b>510</b>), for example to combat network jitter, and in addition another buffer memory (<b>515</b>) inside the video decoder (<b>510</b>), for example to handle playout timing. When the receiver (<b>531</b>) is receiving data from a store/forward device of sufficient bandwidth and controllability, or from an isosynchronous network, the buffer memory (<b>515</b>) may not be needed, or can be small. For use on best effort packet networks such as the Internet, the buffer memory (<b>515</b>) may be required, can be comparatively large and can be advantageously of adaptive size, and may at least partially be implemented in an operating system or similar elements (not depicted) outside of the video decoder (<b>510</b>).</p><p id="p-0063" num="0062">The video decoder (<b>510</b>) may include the parser (<b>520</b>) to reconstruct symbols (<b>521</b>) from the coded video sequence. Categories of those symbols include information used to manage operation of the video decoder (<b>510</b>), and potentially information to control a rendering device such as a render device (<b>512</b>) (e.g., a display screen) that is not an integral part of the electronic device (<b>530</b>) but can be coupled to the electronic device (<b>530</b>), as was shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. The control information for the rendering device(s) may be in the form of Supplemental Enhancement Information (SEI messages) or Video Usability Information (VUI) parameter set fragments (not depicted). The parser (<b>520</b>) may parse/entropy-decode the coded video sequence that is received. The coding of the coded video sequence can be in accordance with a video coding technology or standard, and can follow various principles, including variable length coding, Huffman coding, arithmetic coding with or without context sensitivity, and so forth. The parser (<b>520</b>) may extract from the coded video sequence, a set of subgroup parameters for at least one of the subgroups of pixels in the video decoder, based upon at least one parameter corresponding to the group. Subgroups can include Groups of Pictures (GOPs), pictures, tiles, slices, macroblocks, Coding Units (CUs), blocks, Transform Units (TUs), Prediction Units (PUs) and so forth. The parser (<b>520</b>) may also extract from the coded video sequence information such as transform coefficients, quantizer parameter values, motion vectors, and so forth.</p><p id="p-0064" num="0063">The parser (<b>520</b>) may perform an entropy decoding/parsing operation on the video sequence received from the buffer memory (<b>515</b>), so as to create symbols (<b>521</b>).</p><p id="p-0065" num="0064">Reconstruction of the symbols (<b>521</b>) can involve multiple different units depending on the type of the coded video picture or parts thereof (such as: inter and intra picture, inter and intra block), and other factors. Which units are involved, and how, can be controlled by the subgroup control information that was parsed from the coded video sequence by the parser (<b>520</b>). The flow of such subgroup control information between the parser (<b>520</b>) and the multiple units below is not depicted for clarity.</p><p id="p-0066" num="0065">Beyond the functional blocks already mentioned, the video decoder (<b>510</b>) can be conceptually subdivided into a number of functional units as described below. In a practical implementation operating under commercial constraints, many of these units interact closely with each other and can, at least partly, be integrated into each other. However, for the purpose of describing the disclosed subject matter, the conceptual subdivision into the functional units below is appropriate.</p><p id="p-0067" num="0066">A first unit is the scaler/inverse transform unit (<b>551</b>). The scaler/inverse transform unit (<b>551</b>) receives a quantized transform coefficient as well as control information, including which transform to use, block size, quantization factor, quantization scaling matrices, etc. as symbol(s) (<b>521</b>) from the parser (<b>520</b>). The scaler/inverse transform unit (<b>551</b>) can output blocks comprising sample values, that can be input into aggregator (<b>555</b>).</p><p id="p-0068" num="0067">In some cases, the output samples of the scaler/inverse transform unit (<b>551</b>) can pertain to an intra coded block; that is: a block that is not using predictive information from previously reconstructed pictures, but can use predictive information from previously reconstructed parts of the current picture. Such predictive information can be provided by an intra picture prediction unit (<b>552</b>). In some cases, the intra picture prediction unit (<b>552</b>) generates a block of the same size and shape of the block under reconstruction, using surrounding already reconstructed information fetched from the current picture buffer (<b>558</b>). The current picture buffer (<b>558</b>) buffers, for example, partly reconstructed current picture and/or fully reconstructed current picture. The aggregator (<b>555</b>), in some cases, adds, on a per sample basis, the prediction information the intra prediction unit (<b>552</b>) has generated to the output sample information as provided by the scaler/inverse transform unit (<b>551</b>).</p><p id="p-0069" num="0068">In other cases, the output samples of the scaler/inverse transform unit (<b>551</b>) can pertain to an inter coded, and potentially motion compensated block. In such a case, a motion compensation prediction unit (<b>553</b>) can access reference picture memory (<b>557</b>) to fetch samples used for prediction. After motion compensating the fetched samples in accordance with the symbols (<b>521</b>) pertaining to the block, these samples can be added by the aggregator (<b>555</b>) to the output of the scaler/inverse transform unit (<b>551</b>) (in this case called the residual samples or residual signal) so as to generate output sample information. The addresses within the reference picture memory (<b>557</b>) from where the motion compensation prediction unit (<b>553</b>) fetches prediction samples can be controlled by motion vectors, available to the motion compensation prediction unit (<b>553</b>) in the form of symbols (<b>521</b>) that can have, for example X, Y, and reference picture components. Motion compensation also can include interpolation of sample values as fetched from the reference picture memory (<b>557</b>) when sub-sample exact motion vectors are in use, motion vector prediction mechanisms, and so forth.</p><p id="p-0070" num="0069">The output samples of the aggregator (<b>555</b>) can be subject to various loop filtering techniques in the loop filter unit (<b>556</b>). Video compression technologies can include in-loop filter technologies that are controlled by parameters included in the coded video sequence (also referred to as coded video bitstream) and made available to the loop filter unit (<b>556</b>) as symbols (<b>521</b>) from the parser (<b>520</b>), but can also be responsive to meta-information obtained during the decoding of previous (in decoding order) parts of the coded picture or coded video sequence, as well as responsive to previously reconstructed and loop-filtered sample values.</p><p id="p-0071" num="0070">The output of the loop filter unit (<b>556</b>) can be a sample stream that can be output to the render device (<b>512</b>) as well as stored in the reference picture memory (<b>557</b>) for use in future inter-picture prediction.</p><p id="p-0072" num="0071">Certain coded pictures, once fully reconstructed, can be used as reference pictures for future prediction. For example, once a coded picture corresponding to a current picture is fully reconstructed and the coded picture has been identified as a reference picture (by, for example, the parser (<b>520</b>)), the current picture buffer (<b>558</b>) can become a part of the reference picture memory (<b>557</b>), and a fresh current picture buffer can be reallocated before commencing the reconstruction of the following coded picture.</p><p id="p-0073" num="0072">The video decoder (<b>510</b>) may perform decoding operations according to a predetermined video compression technology in a standard, such as ITU-T Rec. H.265. The coded video sequence may conform to a syntax specified by the video compression technology or standard being used, in the sense that the coded video sequence adheres to both the syntax of the video compression technology or standard and the profiles as documented in the video compression technology or standard. Specifically, a profile can select certain tools as the only tools available for use under that profile from all the tools available in the video compression technology or standard. Also necessary for compliance can be that the complexity of the coded video sequence is within bounds as defined by the level of the video compression technology or standard. In some cases, levels restrict the maximum picture size, maximum frame rate, maximum reconstruction sample rate (measured in, for example megasamples per second), maximum reference picture size, and so on. Limits set by levels can, in some cases, be further restricted through Hypothetical Reference Decoder (HRD) specifications and metadata for HRD buffer management signaled in the coded video sequence.</p><p id="p-0074" num="0073">In an embodiment, the receiver (<b>531</b>) may receive additional (redundant) data with the encoded video. The additional data may be included as part of the coded video sequence(s). The additional data may be used by the video decoder (<b>510</b>) to properly decode the data and/or to more accurately reconstruct the original video data. Additional data can be in the form of, for example, temporal, spatial, or signal noise ratio (SNR) enhancement layers, redundant slices, redundant pictures, forward error correction codes, and so on.</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a block diagram of a video encoder (<b>603</b>) according to an embodiment of the present disclosure. The video encoder (<b>603</b>) is included in an electronic device (<b>620</b>). The electronic device (<b>620</b>) includes a transmitter (<b>640</b>) (e.g., transmitting circuitry). The video encoder (<b>603</b>) can be used in the place of the video encoder (<b>403</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0076" num="0075">The video encoder (<b>603</b>) may receive video samples from a video source (<b>601</b>) (that is not part of the electronic device (<b>620</b>) in the <figref idref="DRAWINGS">FIG. <b>6</b></figref> example) that may capture video image(s) to be coded by the video encoder (<b>603</b>). In another example, the video source (<b>601</b>) is a part of the electronic device (<b>620</b>).</p><p id="p-0077" num="0076">The video source (<b>601</b>) may provide the source video sequence to be coded by the video encoder (<b>603</b>) in the form of a digital video sample stream that can be of any suitable bit depth (for example: 8 bit, 10 bit, 12 bit, . . . ), any colorspace (for example, BT.601 Y CrCB, RGB, . . . ), and any suitable sampling structure (for example Y CrCb 4:2:0, Y CrCb 4:4:4). In a media serving system, the video source (<b>601</b>) may be a storage device storing previously prepared video. In a videoconferencing system, the video source (<b>601</b>) may be a camera that captures local image information as a video sequence. Video data may be provided as a plurality of individual pictures that impart motion when viewed in sequence. The pictures themselves may be organized as a spatial array of pixels, wherein each pixel can comprise one or more samples depending on the sampling structure, color space, etc. in use. A person skilled in the art can readily understand the relationship between pixels and samples. The description below focuses on samples.</p><p id="p-0078" num="0077">According to an embodiment, the video encoder (<b>603</b>) may code and compress the pictures of the source video sequence into a coded video sequence (<b>643</b>) in real time or under any other time constraints as required by the application. Enforcing appropriate coding speed is one function of a controller (<b>650</b>). In some embodiments, the controller (<b>650</b>) controls other functional units as described below and is functionally coupled to the other functional units. The coupling is not depicted for clarity. Parameters set by the controller (<b>650</b>) can include rate control related parameters (picture skip, quantizer, lambda value of rate-distortion optimization techniques, . . . ), picture size, group of pictures (GOP) layout, maximum motion vector search range, and so forth. The controller (<b>650</b>) can be configured to have other suitable functions that pertain to the video encoder (<b>603</b>) optimized for a certain system design.</p><p id="p-0079" num="0078">In some embodiments, the video encoder (<b>603</b>) is configured to operate in a coding loop. As an oversimplified description, in an example, the coding loop can include a source coder (<b>630</b>) (e.g., responsible for creating symbols, such as a symbol stream, based on an input picture to be coded, and a reference picture(s)), and a (local) decoder (<b>633</b>) embedded in the video encoder (<b>603</b>). The decoder (<b>633</b>) reconstructs the symbols to create the sample data in a similar manner as a (remote) decoder also would create (as any compression between symbols and coded video bitstream is lossless in the video compression technologies considered in the disclosed subject matter). The reconstructed sample stream (sample data) is input to the reference picture memory (<b>634</b>). As the decoding of a symbol stream leads to bit-exact results independent of decoder location (local or remote), the content in the reference picture memory (<b>634</b>) is also bit exact between the local encoder and remote encoder. In other words, the prediction part of an encoder &#x201c;sees&#x201d; as reference picture samples exactly the same sample values as a decoder would &#x201c;see&#x201d; when using prediction during decoding. This fundamental principle of reference picture synchronicity (and resulting drift, if synchronicity cannot be maintained, for example because of channel errors) is used in some related arts as well.</p><p id="p-0080" num="0079">The operation of the &#x201c;local&#x201d; decoder (<b>633</b>) can be the same as of a &#x201c;remote&#x201d; decoder, such as the video decoder (<b>510</b>), which has already been described in detail above in conjunction with <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Briefly referring also to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, however, as symbols are available and encoding/decoding of symbols to a coded video sequence by an entropy coder (<b>645</b>) and the parser (<b>520</b>) can be lossless, the entropy decoding parts of the video decoder (<b>510</b>), including the buffer memory (<b>515</b>), and parser (<b>520</b>) may not be fully implemented in the local decoder (<b>633</b>).</p><p id="p-0081" num="0080">In an embodiment, a decoder technology except the parsing/entropy decoding that is present in a decoder is present, in an identical or a substantially identical functional form, in a corresponding encoder. Accordingly, the disclosed subject matter focuses on decoder operation. The description of encoder technologies can be abbreviated as they are the inverse of the comprehensively described decoder technologies. In certain areas a more detail description is provided below.</p><p id="p-0082" num="0081">During operation, in some examples, the source coder (<b>630</b>) may perform motion compensated predictive coding, which codes an input picture predictively with reference to one or more previously coded picture from the video sequence that were designated as &#x201c;reference pictures.&#x201d; In this manner, the coding engine (<b>632</b>) codes differences between pixel blocks of an input picture and pixel blocks of reference picture(s) that may be selected as prediction reference(s) to the input picture.</p><p id="p-0083" num="0082">The local video decoder (<b>633</b>) may decode coded video data of pictures that may be designated as reference pictures, based on symbols created by the source coder (<b>630</b>). Operations of the coding engine (<b>632</b>) may advantageously be lossy processes. When the coded video data may be decoded at a video decoder (not shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>), the reconstructed video sequence typically may be a replica of the source video sequence with some errors. The local video decoder (<b>633</b>) replicates decoding processes that may be performed by the video decoder on reference pictures and may cause reconstructed reference pictures to be stored in the reference picture memory (<b>634</b>). In this manner, the video encoder (<b>603</b>) may store copies of reconstructed reference pictures locally that have common content as the reconstructed reference pictures that will be obtained by a far-end video decoder (absent transmission errors).</p><p id="p-0084" num="0083">The predictor (<b>635</b>) may perform prediction searches for the coding engine (<b>632</b>). That is, for a new picture to be coded, the predictor (<b>635</b>) may search the reference picture memory (<b>634</b>) for sample data (as candidate reference pixel blocks) or certain metadata such as reference picture motion vectors, block shapes, and so on, that may serve as an appropriate prediction reference for the new pictures. The predictor (<b>635</b>) may operate on a sample block-by-pixel block basis to find appropriate prediction references. In some cases, as determined by search results obtained by the predictor (<b>635</b>), an input picture may have prediction references drawn from multiple reference pictures stored in the reference picture memory (<b>634</b>).</p><p id="p-0085" num="0084">The controller (<b>650</b>) may manage coding operations of the source coder (<b>630</b>), including, for example, setting of parameters and subgroup parameters used for encoding the video data.</p><p id="p-0086" num="0085">Output of all aforementioned functional units may be subjected to entropy coding in the entropy coder (<b>645</b>). The entropy coder (<b>645</b>) translates the symbols as generated by the various functional units into a coded video sequence, by lossless compressing the symbols according to technologies such as Huffman coding, variable length coding, arithmetic coding, and so forth.</p><p id="p-0087" num="0086">The transmitter (<b>640</b>) may buffer the coded video sequence(s) as created by the entropy coder (<b>645</b>) to prepare for transmission via a communication channel (<b>660</b>), which may be a hardware/software link to a storage device which would store the encoded video data. The transmitter (<b>640</b>) may merge coded video data from the video encoder (<b>603</b>) with other data to be transmitted, for example, coded audio data and/or ancillary data streams (sources not shown).</p><p id="p-0088" num="0087">The controller (<b>650</b>) may manage operation of the video encoder (<b>603</b>). During coding, the controller (<b>650</b>) may assign to each coded picture a certain coded picture type, which may affect the coding techniques that may be applied to the respective picture. For example, pictures often may be assigned as one of the following picture types:</p><p id="p-0089" num="0088">An Intra Picture (I picture) may be one that may be coded and decoded without using any other picture in the sequence as a source of prediction. Some video codecs allow for different types of intra pictures, including, for example Independent Decoder Refresh (&#x201c;IDR&#x201d;) Pictures. A person skilled in the art is aware of those variants of I pictures and their respective applications and features.</p><p id="p-0090" num="0089">A predictive picture (P picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most one motion vector and reference index to predict the sample values of each block.</p><p id="p-0091" num="0090">A bi-directionally predictive picture (B Picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most two motion vectors and reference indices to predict the sample values of each block. Similarly, multiple-predictive pictures can use more than two reference pictures and associated metadata for the reconstruction of a single block.</p><p id="p-0092" num="0091">Source pictures commonly may be subdivided spatially into a plurality of sample blocks (for example, blocks of 4&#xd7;4, 8&#xd7;8, 4&#xd7;8, or 16&#xd7;16 samples each) and coded on a block-by-block basis. Blocks may be coded predictively with reference to other (already coded) blocks as determined by the coding assignment applied to the blocks' respective pictures. For example, blocks of I pictures may be coded non-predictively or they may be coded predictively with reference to already coded blocks of the same picture (spatial prediction or intra prediction). Pixel blocks of P pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one previously coded reference picture. Blocks of B pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one or two previously coded reference pictures.</p><p id="p-0093" num="0092">The video encoder (<b>603</b>) may perform coding operations according to a predetermined video coding technology or standard, such as ITU-T Rec. H.265. In its operation, the video encoder (<b>603</b>) may perform various compression operations, including predictive coding operations that exploit temporal and spatial redundancies in the input video sequence. The coded video data, therefore, may conform to a syntax specified by the video coding technology or standard being used.</p><p id="p-0094" num="0093">In an embodiment, the transmitter (<b>640</b>) may transmit additional data with the encoded video. The source coder (<b>630</b>) may include such data as part of the coded video sequence. Additional data may comprise temporal/spatial/SNR enhancement layers, other forms of redundant data such as redundant pictures and slices, SEI messages, VUI parameter set fragments, and so on.</p><p id="p-0095" num="0094">A video may be captured as a plurality of source pictures (video pictures) in a temporal sequence. Intra-picture prediction (often abbreviated to intra prediction) makes use of spatial correlation in a given picture, and inter-picture prediction makes uses of the (temporal or other) correlation between the pictures. In an example, a specific picture under encoding/decoding, which is referred to as a current picture, is partitioned into blocks. When a block in the current picture is similar to a reference block in a previously coded and still buffered reference picture in the video, the block in the current picture can be coded by a vector that is referred to as a motion vector. The motion vector points to the reference block in the reference picture, and can have a third dimension identifying the reference picture, in case multiple reference pictures are in use.</p><p id="p-0096" num="0095">In some embodiments, a bi-prediction technique can be used in the inter-picture prediction. According to the bi-prediction technique, two reference pictures, such as a first reference picture and a second reference picture that are both prior in decoding order to the current picture in the video (but may be in the past and future, respectively, in display order) are used. A block in the current picture can be coded by a first motion vector that points to a first reference block in the first reference picture, and a second motion vector that points to a second reference block in the second reference picture. The block can be predicted by a combination of the first reference block and the second reference block.</p><p id="p-0097" num="0096">Further, a merge mode technique can be used in the inter-picture prediction to improve coding efficiency.</p><p id="p-0098" num="0097">According to some embodiments of the disclosure, predictions, such as inter-picture predictions and intra-picture predictions are performed in the unit of blocks. For example, according to the HEVC standard, a picture in a sequence of video pictures is partitioned into coding tree units (CTU) for compression, the CTUs in a picture have the same size, such as 64&#xd7;64 pixels, 32&#xd7;32 pixels, or 16&#xd7;16 pixels. In general, a CTU includes three coding tree blocks (CTBs), which are one luma CTB and two chroma CTBs. Each CTU can be recursively quadtree split into one or multiple coding units (CUs). For example, a CTU of 64&#xd7;64 pixels can be split into one CU of 64&#xd7;64 pixels, or 4 CUs of 32&#xd7;32 pixels, or 16 CUs of 16&#xd7;16 pixels. In an example, each CU is analyzed to determine a prediction type for the CU, such as an inter prediction type or an intra prediction type. The CU is split into one or more prediction units (PUs) depending on the temporal and/or spatial predictability. Generally, each PU includes a luma prediction block (PB), and two chroma PBs. In an embodiment, a prediction operation in coding (encoding/decoding) is performed in the unit of a prediction block. Using a luma prediction block as an example of a prediction block, the prediction block includes a matrix of values (e.g., luma values) for pixels, such as 8&#xd7;8 pixels, 16&#xd7;16 pixels, 8&#xd7;16 pixels, 16&#xd7;8 pixels, and the like.</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagram of a video encoder (<b>703</b>) according to another embodiment of the disclosure. The video encoder (<b>703</b>) is configured to receive a processing block (e.g., a prediction block) of sample values within a current video picture in a sequence of video pictures, and encode the processing block into a coded picture that is part of a coded video sequence. In an example, the video encoder (<b>703</b>) is used in the place of the video encoder (<b>403</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0100" num="0099">In an HEVC example, the video encoder (<b>703</b>) receives a matrix of sample values for a processing block, such as a prediction block of 8&#xd7;8 samples, and the like. The video encoder (<b>703</b>) determines whether the processing block is best coded using intra mode, inter mode, or bi-prediction mode using, for example, rate-distortion optimization. When the processing block is to be coded in intra mode, the video encoder (<b>703</b>) may use an intra prediction technique to encode the processing block into the coded picture; and when the processing block is to be coded in inter mode or bi-prediction mode, the video encoder (<b>703</b>) may use an inter prediction or bi-prediction technique, respectively, to encode the processing block into the coded picture. In certain video coding technologies, merge mode can be an inter picture prediction submode where the motion vector is derived from one or more motion vector predictors without the benefit of a coded motion vector component outside the predictors. In certain other video coding technologies, a motion vector component applicable to the subject block may be present. In an example, the video encoder (<b>703</b>) includes other components, such as a mode decision module (not shown) to determine the mode of the processing blocks.</p><p id="p-0101" num="0100">In the <figref idref="DRAWINGS">FIG. <b>7</b></figref> example, the video encoder (<b>703</b>) includes the inter encoder (<b>730</b>), an intra encoder (<b>722</b>), a residue calculator (<b>723</b>), a switch (<b>726</b>), a residue encoder (<b>724</b>), a general controller (<b>721</b>), and an entropy encoder (<b>725</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0102" num="0101">The inter encoder (<b>730</b>) is configured to receive the samples of the current block (e.g., a processing block), compare the block to one or more reference blocks in reference pictures (e.g., blocks in previous pictures and later pictures), generate inter prediction information (e.g., description of redundant information according to inter encoding technique, motion vectors, merge mode information), and calculate inter prediction results (e.g., predicted block) based on the inter prediction information using any suitable technique. In some examples, the reference pictures are decoded reference pictures that are decoded based on the encoded video information.</p><p id="p-0103" num="0102">The intra encoder (<b>722</b>) is configured to receive the samples of the current block (e.g., a processing block), in some cases compare the block to blocks already coded in the same picture, generate quantized coefficients after transform, and in some cases also intra prediction information (e.g., an intra prediction direction information according to one or more intra encoding techniques). In an example, the intra encoder (<b>722</b>) also calculates intra prediction results (e.g., predicted block) based on the intra prediction information and reference blocks in the same picture.</p><p id="p-0104" num="0103">The general controller (<b>721</b>) is configured to determine general control data and control other components of the video encoder (<b>703</b>) based on the general control data. In an example, the general controller (<b>721</b>) determines the mode of the block, and provides a control signal to the switch (<b>726</b>) based on the mode. For example, when the mode is the intra mode, the general controller (<b>721</b>) controls the switch (<b>726</b>) to select the intra mode result for use by the residue calculator (<b>723</b>), and controls the entropy encoder (<b>725</b>) to select the intra prediction information and include the intra prediction information in the bitstream; and when the mode is the inter mode, the general controller (<b>721</b>) controls the switch (<b>726</b>) to select the inter prediction result for use by the residue calculator (<b>723</b>), and controls the entropy encoder (<b>725</b>) to select the inter prediction information and include the inter prediction information in the bitstream.</p><p id="p-0105" num="0104">The residue calculator (<b>723</b>) is configured to calculate a difference (residue data) between the received block and prediction results selected from the intra encoder (<b>722</b>) or the inter encoder (<b>730</b>). The residue encoder (<b>724</b>) is configured to operate based on the residue data to encode the residue data to generate the transform coefficients. In an example, the residue encoder (<b>724</b>) is configured to convert the residue data from a spatial domain to a frequency domain, and generate the transform coefficients. The transform coefficients are then subject to quantization processing to obtain quantized transform coefficients. In various embodiments, the video encoder (<b>703</b>) also includes a residue decoder (<b>728</b>). The residue decoder (<b>728</b>) is configured to perform inverse-transform, and generate the decoded residue data. The decoded residue data can be suitably used by the intra encoder (<b>722</b>) and the inter encoder (<b>730</b>). For example, the inter encoder (<b>730</b>) can generate decoded blocks based on the decoded residue data and inter prediction information, and the intra encoder (<b>722</b>) can generate decoded blocks based on the decoded residue data and the intra prediction information. The decoded blocks are suitably processed to generate decoded pictures and the decoded pictures can be buffered in a memory circuit (not shown) and used as reference pictures in some examples.</p><p id="p-0106" num="0105">The entropy encoder (<b>725</b>) is configured to format the bitstream to include the encoded block. The entropy encoder (<b>725</b>) is configured to include various information according to a suitable standard, such as the HEVC standard. In an example, the entropy encoder (<b>725</b>) is configured to include the general control data, the selected prediction information (e.g., intra prediction information or inter prediction information), the residue information, and other suitable information in the bitstream. Note that, according to the disclosed subject matter, when coding a block in the merge submode of either inter mode or bi-prediction mode, there is no residue information.</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a diagram of a video decoder (<b>810</b>) according to another embodiment of the disclosure. The video decoder (<b>810</b>) is configured to receive coded pictures that are part of a coded video sequence, and decode the coded pictures to generate reconstructed pictures. In an example, the video decoder (<b>810</b>) is used in the place of the video decoder (<b>410</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0108" num="0107">In the <figref idref="DRAWINGS">FIG. <b>8</b></figref> example, the video decoder (<b>810</b>) includes an entropy decoder (<b>871</b>), an inter decoder (<b>880</b>), a residue decoder (<b>873</b>), a reconstruction module (<b>874</b>), and an intra decoder (<b>872</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0109" num="0108">The entropy decoder (<b>871</b>) can be configured to reconstruct, from the coded picture, certain symbols that represent the syntax elements of which the coded picture is made up. Such symbols can include, for example, the mode in which a block is coded (such as, for example, intra mode, inter mode, bi-predicted mode, the latter two in merge submode or another submode), prediction information (such as, for example, intra prediction information or inter prediction information) that can identify certain sample or metadata that is used for prediction by the intra decoder (<b>872</b>) or the inter decoder (<b>880</b>), respectively, residual information in the form of, for example, quantized transform coefficients, and the like. In an example, when the prediction mode is inter or bi-predicted mode, the inter prediction information is provided to the inter decoder (<b>880</b>); and when the prediction type is the intra prediction type, the intra prediction information is provided to the intra decoder (<b>872</b>). The residual information can be subject to inverse quantization and is provided to the residue decoder (<b>873</b>).</p><p id="p-0110" num="0109">The inter decoder (<b>880</b>) is configured to receive the inter prediction information, and generate inter prediction results based on the inter prediction information.</p><p id="p-0111" num="0110">The intra decoder (<b>872</b>) is configured to receive the intra prediction information, and generate prediction results based on the intra prediction information.</p><p id="p-0112" num="0111">The residue decoder (<b>873</b>) is configured to perform inverse quantization to extract de-quantized transform coefficients, and process the de-quantized transform coefficients to convert the residual from the frequency domain to the spatial domain. The residue decoder (<b>873</b>) may also require certain control information (to include the Quantizer Parameter (QP)), and that information may be provided by the entropy decoder (<b>871</b>) (data path not depicted as this may be low volume control information only).</p><p id="p-0113" num="0112">The reconstruction module (<b>874</b>) is configured to combine, in the spatial domain, the residual as output by the residue decoder (<b>873</b>) and the prediction results (as output by the inter or intra prediction modules as the case may be) to form a reconstructed block, that may be part of the reconstructed picture, which in turn may be part of the reconstructed video. It is noted that other suitable operations, such as a deblocking operation and the like, can be performed to improve the visual quality.</p><p id="p-0114" num="0113">It is noted that the video encoders (<b>403</b>), (<b>603</b>), and (<b>703</b>), and the video decoders (<b>410</b>), (<b>510</b>), and (<b>810</b>) can be implemented using any suitable technique. In an embodiment, the video encoders (<b>403</b>), (<b>603</b>), and (<b>703</b>), and the video decoders (<b>410</b>), (<b>510</b>), and (<b>810</b>) can be implemented using one or more integrated circuits. In another embodiment, the video encoders (<b>403</b>), (<b>603</b>), and (<b>603</b>), and the video decoders (<b>410</b>), (<b>510</b>), and (<b>810</b>) can be implemented using one or more processors that execute software instructions.</p><p id="p-0115" num="0114">According to an embodiment of the disclosure, a bitstream can include one or more coded video sequences (CVSs). A CVS can be independently coded from other CVSs. Each CVS can include one or more layers, and each layer can be a representation of a video with a specific quality (e.g., a spatial resolution), or a representation of a certain component interpretation property, e.g., as a depth map, a transparency map, or a perspective view. In a temporal dimension, each CVS can include one or more access units (AUs). Each AU can include one or more pictures of different layers that correspond to a same time instance. A coded layer video sequence (CLVS) is a layer-wise CVS that can include a sequence of picture units in the same layer. If a bitstream has multiple layers, a CVS in the bitstream can have one or more CLVSs for each layer.</p><p id="p-0116" num="0115">In an embodiment, a CVS includes a sequence of AUs where the sequence of AUs includes, in a decoding order, an intra random access point (IRAP) AU, followed by zero or more AUs that are not IRAP AUs. In an example, the zero or more AUs includes all subsequent AUs up to but not including any subsequent AU that is an IRAP AU. In an example, a CLVS includes a sequence of pictures and the associated non-video coding layer (VCL) network abstraction layer (NAL) units of a base layer of a CVS.</p><p id="p-0117" num="0116">Parameter sets can be part of a video bitstream or can be received by a decoder through other means (including out-of-band transmission using a reliable channel, hard coding in encoder and decoder, and the like). Parameter sets can include but are not limited to a video parameter set (VPS), a sequence parameter set (SPS), a picture parameter set (PPS), and the like.</p><p id="p-0118" num="0117">A high-level syntax structure can include a VPS, a SPS, a PPS, a supplemental enhancement information (SEI) message, a slice header, a picture header, a tile group header, and the like.</p><p id="p-0119" num="0118">A VPS can include information that is applicable to multiple layers as well as sub-layers. In an example, each layer of a video sequence refers to a same VPS.</p><p id="p-0120" num="0119">A SPS can include information that applies to slices of a coded video sequence. A SPS can include one or more of: 1) a self-reference or an identifier (ID); 2) decoder operation point related information (e.g., profile, level, a picture size, number of sub-layers); 3) enabling flags for certain tools within a profile, and associated coding tool parameters if the tool is enabled; 4) information restricting the flexibility of structures and transform coefficient coding; 5) temporal scalability control; and 6) visual usability information (VUI).</p><p id="p-0121" num="0120">A PPS can include syntax elements that apply to zero or more entire coded pictures, for example, as determined by a syntax element found in a slice header. A PPS can include information that may change from picture to picture. A PPS can include one or more of: 1) a self-reference or ID; 2) initial picture control information such as initial quantization parameter (QP), a number of flags indicating the use of, or presence of, certain tools or control information in a slice header; and 3) tiling information.</p><p id="p-0122" num="0121">A slice header can include information that can change from slice to slice, as well as such picture related information that is relatively small or relevant only for certain slices or picture types.</p><p id="p-0123" num="0122"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows an example of a slice header including a reference to a PPS, an SPS, and a VPS according to an embodiment of the disclosure. The slice header refers to the PPS (e.g., pps_id:4). The PPS (e.g., pps_id:4) can include a reference to the SPS (e.g., sps_id:1). The SPS (e.g., sps_id:1) can include a reference to the VPS (e.g., vps_id:0).</p><p id="p-0124" num="0123">Each type of parameter set can include an extension mechanism, which allows extending the parameter set in future versions of video coding technologies or standards.</p><p id="p-0125" num="0124">A subpicture in a picture may refer to a rectangular arrangement of samples, blocks, macroblocks, CUs, or similar entities that are semantically grouped, and that may be independently coded in changed resolution. One or more subpictures may form a picture. One or more coded subpictures may form a coded picture. One or more subpictures may be assembled into a picture, and one or more subpictures may be extracted from a picture. In certain environments, one or more coded subpictures may be assembled in the compressed domain without transcoding to the sample level into a coded picture. In an embodiment, one or more coded subpictures may be extracted from a coded picture in the compressed domain.</p><p id="p-0126" num="0125">In an embodiment, a picture includes one or more subpictures. Each subpicture may cover a local region or the entire region of the picture. A region supported by a subpicture may or may not overlap with another region supported by another subpicture. A region covered by one or more subpictures may or may not cover the entire region of a picture. If a picture includes a subpicture, the region supported by the subpicture may be identical to the region supported by the picture.</p><p id="p-0127" num="0126">A subpicture may be coded by a coding method similar to a coding method used for the coded picture, such as described in the disclosure. A subpicture may be independently coded or may be coded dependent on another subpicture or a coded picture. A subpicture may or may not have any parsing dependency from another subpicture or a coded picture.</p><p id="p-0128" num="0127">A coded subpicture may be contained in one or more layers. A coded subpicture in a layer may have a different spatial resolution. The original subpicture may be spatially resampled (e.g., up-sampled or down-sampled), coded with different spatial resolution parameters, and contained in a bitstream corresponding to a layer.</p><p id="p-0129" num="0128">A subpicture with (W, H), where W indicates the width of the subpicture and H indicates the height of the subpicture, respectively, may be coded and contained in the coded bitstream corresponding to layer 0. The up-sampled (or down-sampled) subpicture from the subpicture with the original spatial resolution may be coded and contained in the coded bitstream corresponding to layer k. The up-sampled (or down-sampled) subpicture has a width of W&#xd7; S<sub>w,k </sub>and a height of H&#xd7; S<sub>h,k</sub>. Parameters S<sub>w,k </sub>and S<sub>h,k </sub>indicate a horizontal resampling ratio and a vertical resampling ratio, respectively.</p><p id="p-0130" num="0129">A coded subpicture in a layer may have a different visual quality from that of the coded subpicture in another layer in the same subpicture or a different subpicture.</p><p id="p-0131" num="0130">A coded subpicture in a layer may be independently decodable, without any parsing or decoding dependency from a coded subpicture in another layer of the same local region. The subpicture layer, which can be independently decodable without referencing another subpicture layer of the same local region, may be the independent subpicture layer. A coded subpicture in the independent subpicture layer may or may not have a decoding or parsing dependency from a previously coded subpicture in the same subpicture layer, but the coded subpicture may not have any dependency from a coded picture in another subpicture layer.</p><p id="p-0132" num="0131">A coded subpicture in a layer may be dependently decodable, with parsing or decoding dependency from a coded subpicture in another layer of the same local region. The subpicture layer, which can be dependently decodable with referencing another subpicture layer of the same local region, may be the dependent subpicture layer. A coded subpicture in the dependent subpicture may reference a coded subpicture in the same subpicture, a previously coded subpicture in the same subpicture layer, or both reference subpictures.</p><p id="p-0133" num="0132">A coded subpicture may include one or more independent subpicture layers and one or more dependent subpicture layers. At least one independent subpicture layer may be present for a coded subpicture. A value of the layer identifier (e.g., layer_id), which may be present in a NAL unit header or another high-level syntax structure, of the independent subpicture layer may be equal to 0. The subpicture layer with the layer_id equal to 0 may be a base subpicture layer.</p><p id="p-0134" num="0133">A picture may include one or more foreground subpictures and one background subpicture. The region supported by a background subpicture may be equal to the region of the picture. The region supported by a foreground subpicture may overlap with the region supported by a background subpicture. The background subpicture may be a base subpicture layer, and the foreground subpicture may be a non-base (e.g., enhancement) subpicture layer. One or more non-base subpicture layers may reference the same base layer for decoding. Each non-base subpicture layer with a first layer_id may reference a non-base subpicture layer with a second layer_id, where the first layer_id is greater than the second layer_id.</p><p id="p-0135" num="0134">A picture may include one or more foreground subpictures with or without a background subpicture. Each subpicture may have its own base subpicture layer and one or more non-base (e.g., enhancement) layers. Each base subpicture layer may be referenced by one or more non-base subpicture layers.</p><p id="p-0136" num="0135">Each coded subpicture in a base or non-base subpicture layer may be referenced by one or more non-base layer subpictures belonging to the same subpicture and one or more non-base layer subpictures, which are not in the same subpicture.</p><p id="p-0137" num="0136">A CVS may include a group of coded pictures. The CVS may include one or more coded subpicture sequences (CSPS) where the CSPS may include a group of coded subpictures covering the same local region of the picture. A CSPS may have the same or a different temporal resolution than that of the CVS.</p><p id="p-0138" num="0137">A CSPS may be coded and contained in one or more layers. A CSPS may include one or more CSPS layers. Decoding one or more CSPS layers corresponding to a CSPS may reconstruct a sequence of subpictures corresponding to the same local region.</p><p id="p-0139" num="0138">The disclosure includes techniques for subpicture-wise reference picture resampling and scalability for video streaming.</p><p id="p-0140" num="0139">Image/video coding technologies, such as VVC, has been developed for various applications including ultra-high definition (UHD) video streaming, immersive media solution (e.g., 360-degree video, point cloud, 6 degrees-of-freedom), game and/or e-sport. E-Sport can be used for live broadcast and/or real-time streaming events. In an example, E-Sport as an online application includes competitive video gaming with multiple players battling against each other, for example, in teams. Matches can be streamed live to fans. With a cloud-based game streaming solution (e.g. Tencent's Start), E-Sport allows professional gamers to remotely play a match simultaneously. The game play with commenter's video and audio can be broadcasted to audiences in real-time.</p><p id="p-0141" num="0140">Computer-generated (CG) test sequences have been studied, including mobile game content, such as a multiplayer online battle arena (MOBA) game developed for mobile (e.g., Arena of Valor). CG content may have unique characteristics that are distinguished from the natural images captured by a camera. Certain coding tools (e.g. IBC), specialized for game content sequences, have been developed and adopted. Useful functionalities and system-interfaces, with designs of high-level syntax have been developed.</p><p id="p-0142" num="0141">According to an embodiment of the disclosure, local enhancement of visual quality or resolution can be employed.</p><p id="p-0143" num="0142">Certain live videos in E-Sport matches, such as images of commentators, players, a scoreboard, a screen of a game, can be displayed and viewed by audiences. To display multi-images on a screen of a player at a same time, multiple windows for picture-in-picture (PIP) can be advantageous for E-Sport broadcasting. <figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an exemplary image (or picture) (<b>1000</b>) including multiple PIPs in E-Sport broadcasting according to an embodiment of the disclosure.</p><p id="p-0144" num="0143">An E-Sport broadcasting system can mix and/or switch multiple video inputs. The multiple video inputs can include video inputs associated with team-players, commentators, and a game video. A main broadcasting video (or a main video) that mixes a subset (e.g., the most interesting input videos) or an entire set of the multiple video inputs to a video sequence can be encoded as a main bitstream and can be streamed to remote audiences (e.g., all remote audiences). The main bitstream can include popular input videos. The visual quality of each input video may be relatively low depending on a respective picture resolution or a bitrate.</p><p id="p-0145" num="0144">An individual input video can be additionally encoded with a higher quality and/or a higher resolution and optionally transmitted to audiences as a separated bitstream. An individual video can be dependently encoded by referencing the main video where the main video can include the individual video as a PIP. In an example, the individual video can be encoded as an enhancement layer of a local region of the main video (e.g., a base layer), by referencing the decoded picture(s) in the main video. In an example, the enhancement layer may be independently encoded without any decoding dependency on the main video and is transmitted as a simulcast.</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows an example of an enhanced display of a local region according to an embodiment of the disclosure. In terms of user experience, when a client or audience (user or viewer) receives a main video (<b>1101</b>) and one or more enhanced videos of local regions, the audience can select one of the main video and the one or more enhanced videos of the local regions. Referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the local regions can include a region 0 covered by a PIP 0, a region 1 covered by a PIP 1, a region 2 covered by a PIP 2, and a region 3 covered by a PIP 3. The one or more enhanced videos of the local regions can include an enhanced video of the PIP 0 of the region 0 in an enhancement layer 1 (or an enhancement layer 1 of PIP 0), an enhanced video of the PIP 1 of the region 1 in the enhancement layer 1 (or an enhancement layer 1 of PIP 1), an enhanced video of the PIP 1 of the region 1 in an enhancement layer 2 (or an enhancement layer 2 of PIP 1), an enhanced video of the PIP 2 of the region 2 in the enhancement layer 1 (or an enhancement layer 1 of PIP 2), an enhanced video of the PIP 2 of the region 2 in the enhancement layer 2 (or an enhancement layer 2 of PIP 2), an enhanced video of the PIP 3 of the region 3 in the enhancement layer 1 (or an enhancement layer 1 of PIP 3), an enhanced video of the PIP 3 of the region 3 in the enhancement layer 2 (or an enhancement layer 2 of PIP 3), and an enhanced video of the PIP 3 of the region 3 in the enhancement layer 3 (or an enhancement layer 3 of PIP 3).</p><p id="p-0147" num="0146">If the audience chooses the main video (<b>1101</b>), the PIPs (e.g., all PIPs), such as the PIPs 0-3, within a background picture can be displayed. If the audience chooses a specific PIP (e.g., one of the one or more enhanced videos, such as the enhancement layer 3 of PIP 3), the PIP (e.g., the PIP 3) can be enlarged and displayed with an enhanced visual quality as compared to the decoded corresponding region of the main video (<b>1101</b>). In an example, the enhancement layer 3 of PIP 3 is selected by an audience to be displayed at a spatial resolution that is higher than a spatial resolution of the PIP 3 in the main video, a spatial resolution of the enhancement layer 1 of PIP 3, and a spatial resolution of the enhancement layer 2 of PIP 3.</p><p id="p-0148" num="0147">The above descriptions regarding PIPs in <figref idref="DRAWINGS">FIG. <b>11</b></figref> can be adapted if the PIPs in <figref idref="DRAWINGS">FIG. <b>11</b></figref> are replaced by respective subpictures. For example, a local region can be covered by a respective subpicture. The main video can include subpictures in the base layer. One or more enhanced videos of local regions can be included in the bitstream. An example of an enhanced video of a local region is an enhanced video of a subpicture of the region 0 in an enhancement layer 1.</p><p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows an exemplary systematic design with subpictures and multi-layers according to an embodiment of the disclosure. Multiple input videos (e.g., input videos 0-3) can be mixed or combined by a video composer (<b>1210</b>) into a main video (<b>1200</b>). A region (e.g., a rectangular region) of the main video (<b>1200</b>) corresponding to an input video (e.g., the input video 0) may be encoded as a subpicture (e.g., a VVC subpicture coded based on VVC), such as a subpicture 0. Referring to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, subpictures 0-3 correspond to the input videos 0-3, respectively.</p><p id="p-0150" num="0149">A coded bitstream of the main video (<b>1200</b>) can include multiple subpictures (e.g., the subpictures 0-3). The coded bitstream of the main video (<b>1200</b>) can include multiple sub-bitstreams corresponding to the subpictures (e.g., the subpictures 0-3). For example, the sub-bitstreams 0-3 correspond to the subpictures 0-3, respectively. A sub-bitstream corresponding to a subpicture can be extractible from the main bitstream and can be independently decodable. Each sub-bitstream may include one or more layers with different qualities (e.g., different spatial resolutions or visual qualities). A sub-bitstream may be referenced by another sub-bitstream including a subpicture layer with a higher resolution. Referring to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the sub-bitstream 3 corresponding to the sub-picture 3 (<b>1222</b>) may be referenced by an enhanced sub-bitstream 3 corresponding to the sub-picture 3 (<b>1220</b>) with an enhanced resolution (e.g., higher resolution). For example, the subpicture 3 (<b>1220</b>) in a higher layer (e.g., layer 1) is predicted based on the subpicture 3 (<b>1222</b>) in a base layer using an inter-layer prediction.</p><p id="p-0151" num="0150">When spatial resolutions of subpictures change within a CVS, a subpicture can be decoded by performing subpicture-wise reference picture resampling. <figref idref="DRAWINGS">FIG. <b>13</b></figref> shows an example of a reference subpicture scaling window (<b>1302</b>) in a reference subpicture (<b>1301</b>) and a subpicture scaling window (<b>1312</b>) in a subpicture (<b>1311</b>) according to an embodiment of the disclosure. The subpicture (<b>1311</b>) can be one of subpictures in a picture, such as described in <figref idref="DRAWINGS">FIGS. <b>11</b>-<b>12</b></figref>. In an example, a subpicture (e.g., the subpicture (<b>1311</b>)) to be decoded has a different spatial resolution or a different size from a reference subpicture (e.g., the reference subpicture (<b>1301</b>)). The subpicture-wise reference picture resampling can be performed to match the spatial resolutions or the sizes of the subpicture and the reference subpicture. The reference subpicture can be resampled based on the sizes of the subpicture and the reference subpicture.</p><p id="p-0152" num="0151">In an example, the reference subpicture is resampled based on the sizes of the subpicture and the reference subpicture as well as subpicture scaling window information of the subpicture and/or reference subpicture scaling window information of the reference subpicture. Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the subpicture scaling window information of the subpicture (<b>1311</b>) can indicate dimension information and/or position information of the subpicture scaling window (<b>1312</b>). In an example, the subpicture scaling window information of the subpicture (<b>1311</b>) includes first offsets including a left offset O<sub>L</sub>, a right offset O<sub>R</sub>, a top offset O<sub>T</sub>, and a bottom offset OB of the subpicture scaling window (<b>1312</b>) with respect to the subpicture (<b>1311</b>). The dimension and the position of the subpicture scaling window (<b>1312</b>) can be determined based on the first offsets.</p><p id="p-0153" num="0152">Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the reference subpicture scaling window information of the reference subpicture (<b>1301</b>) can indicate dimension information and/or position information of the reference subpicture scaling window (<b>1302</b>). In an example, the reference subpicture scaling window information of the reference subpicture (<b>1301</b>) includes second offsets including a reference left offset O<sub>REF,L</sub>, a reference right offset O<sub>REF,R</sub>, a reference top offset O<sub>REF,T</sub>, and a reference bottom offset O<sub>REF,B </sub>of the reference subpicture scaling window (<b>1302</b>) with respect to the reference subpicture (<b>1301</b>). The dimension and the position of the reference subpicture scaling window (<b>1302</b>) can be determined based on the second offsets.</p><p id="p-0154" num="0153">According to an embodiment of the disclosure, subpicture scaling window information of a subpicture scaling window of a subpicture can be signaled when more than one subpicture is present, for example, in a picture. The subpicture scaling window information can be signaled. The subpicture scaling window information can be signaled in a syntax structure (e.g., a high-level syntax structure), such as a high-level syntax structure (e.g., a PPS) within the CVS. In an example, subpicture scaling window information of a subpicture scaling window of each subpicture can be signaled. For subpicture-wise reference picture resampling in a layer or across layers, subpicture scaling window information for each subpicture that has a different scaling ratio with a respective reference subpicture can be signaled, for example, in a high-level syntax structure (e.g., a PPS).</p><p id="p-0155" num="0154">A layout of a video can be customized. A number of players can play simultaneously in a collaborative and interactive game. At the same time, multiple audiences can follow the game in a real-time. An observer may watch a combination of views from favorable players, observer views, and/or physical camera views, for example, according to certain selection criteria. In some examples, a server may generate and transmit multiple layouts of multiple input videos depending on director's cuts. The layout information can be represented by subpicture partitioning information, such as in an SPS, or additionally delivered as metadata in file format. When each audience member chooses one of the layouts by a preference, or additionally customizes the layout due to the preference, a local region (e.g., each local region) of the decoded picture can be relocated in the displayed picture depending to the selected layout information. After decoding and reorganizing the main video and one or more enhanced videos, the customized video can be created, for example, in the cloud. Such a reorganization process for the customization of video may be processed in a cloud server, for example, with network-based media processing (NBMP). The combined video can be streamed to a client. The layout information can be generated by a user or a client. The layout information can be shared with other users to enjoy the same experience.</p><p id="p-0156" num="0155">In some examples, each local region can be mapped to a respective subpicture. A subpicture layout can be signaled in an SPS. In certain video coding standards (e.g., VVC version 1), the subpicture layout can be updated only at the start of a CVS. In some embodiments, the same subpicture layout is applied to the entire CVS. For example, the subpicture layout is not updated within the CVS. Flexible layout representation for game and E-sports content composition may be limited in some applications as the same subpicture layout is used within the same CVS.</p><p id="p-0157" num="0156">To enable more flexible composition of output images or pictures within a CVS, an instant update of a subpicture layout can be desirable. According to an embodiment of the disclosure, subpicture layout information (or subpicture partition information) indicating a subpicture layout (or a subpicture partitioning layout) in a picture can be updated within a CVS. Updating subpicture partition information can be applied in various applications, such as gaming, E-Sport, immersive media, and/or the like.</p><p id="p-0158" num="0157">A subpicture layout (or a subpicture partitioning layout) can be signaled. For example, the subpicture layout can be indicated by subpicture partitioning information in a high-level syntax structure that applies to picture(s) within a CVS. The subpicture partitioning information or the subpicture layout can indicate position(s), spatial resolution(s), and/or subpictures ID(s) of subpicture(s) in the picture(s) within the CVS. The subpicture layout can be updated (e.g., changed) within the CVS. For example, a first subset of pictures in the CVS covered by a first syntax structure (e.g., a first high-level syntax structure) has a first subpicture layout. The first subpicture layout is specified by first subpicture partitioning information in the first high-level syntax structure. A second subset of pictures in the CVS covered by a second syntax structure (e.g., a second high-level syntax structure) has a second subpicture layout. The second subpicture layout is specified by second subpicture partitioning information in the second high-level syntax structure.</p><p id="p-0159" num="0158">In an example, the first subpicture layout is different from the second subpicture layout. A first number of subpictures in the first subpicture layout can be different from a second number of subpictures in the second subpicture layout. In an example, a subpicture in the first subpicture layout is not included in the second subpicture layout. Two subpictures having a same subpicture ID in the first subpicture layout and the second subpicture layout can have different spatial resolutions and/or positions.</p><p id="p-0160" num="0159">In an example, the first subpicture layout is identical to the second subpicture layout.</p><p id="p-0161" num="0160"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> shows an exemplary subpicture layout update process (<b>1400</b>A) within a CVS according to an embodiment of the disclosure.</p><p id="p-0162" num="0161">A subpicture layout (<b>1401</b>) can be indicated (e.g., specified) by first subpicture partitioning information in a first PPS (e.g., an PPS ID being 0). The first subpicture partitioning information or the subpicture layout (<b>1401</b>) can indicate position(s), spatial resolution(s), and/or subpictures ID(s) of subpicture(s) in one or more pictures in the first PPS. The subpicture IDs of subpictures in the subpicture layout (<b>1401</b>) are 0-3, respectively, and the subpictures are referred to as the subpictures 0-3.</p><p id="p-0163" num="0162">The subpicture layer (<b>1401</b>) can be updated to a subpicture layout (<b>1402</b>) by a second PPS. The subpicture layout (<b>1402</b>) can be indicated (e.g., specified) by second subpicture partitioning information in the second PPS (e.g., an PPS ID being 1). The second subpicture partitioning information or the subpicture layout (<b>1402</b>) can indicate position(s), spatial resolution(s), and/or subpictures ID(s) of subpicture(s) in one or more pictures in the second PPS. The subpicture IDs of subpictures in the subpicture layout (<b>1402</b>) are the subpictures 0-3. The subpicture layout (<b>1402</b>) is different from the subpicture layout (<b>1401</b>). For example, the spatial resolutions of the subpictures 0-3 in the subpicture layout (<b>1402</b>) are different from the respective spatial resolutions of the subpictures 0-3 in the subpicture layout (<b>1401</b>). The spatial resolution of the subpictures 0 (<b>1421</b>) in the subpicture layout (<b>1402</b>) is higher than the spatial resolution of the subpictures 0 (<b>1411</b>) in the subpicture layout (<b>1401</b>).</p><p id="p-0164" num="0163">The subpicture layer (<b>1402</b>) can be updated to a subpicture layout (<b>1403</b>) by a third PPS, similar as described above. The subpicture IDs of subpictures in the subpicture layout (<b>1403</b>) are the subpictures 0-3. The third PPS can be different from the second PPS and/or the first PPS. In an example, the subpicture layout (<b>1403</b>) is different from the subpicture layout (<b>1402</b>). In an example, the subpicture layout (<b>1403</b>) is identical to a previous subpicture layout used in the CVS, such as the subpicture layout (<b>1401</b>). In an example, the PPS ID of the third PPS is 2. In an example, the PPS ID of the third PPS is 0.</p><p id="p-0165" num="0164">The subpicture layout update process (<b>1400</b>A) can be performed within a CVS. A subpicture layout (e.g., indicated by a first syntax structure, such as a first PPS)) of a picture in the CVS can be updated to generate a different subpicture layout (e.g., indicated by a second syntax structure, such as a second PPS) of another picture in the CVS.</p><p id="p-0166" num="0165">The subpicture layout update process (<b>1400</b>A) performed within a CVS can enable a composition layout change without delay or coding gain loss. By signaling a subpicture layout and/or subpicture ID mapping information, such as within a CVS (e.g., in a PPS), the subpicture layout can be updated in at a picture-level. To minimize coding efficiency loss when the subpicture layout is updated or changed, motion compensated prediction can be enabled within the same subpicture, for example, with a subpicture-specific scaling window, such as described in <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0167" num="0166">In an embodiment, updated subpicture partitioning information can be signaled in a PPS. To enable a picture-level update of subpicture partitioning information, the subpicture partitioning information can be signaled in a PPS, optionally. When the subpicture partitioning information is updated, one or more subpictures with respective subpicture IDs may appear or disappear. <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> shows an exemplary subpicture layout update process (<b>1400</b>B) within a CVS according to an embodiment of the disclosure. The subpicture layout (<b>1401</b>) indicated by the first PPS and the subpictures 0-3 in <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> are described in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref>.</p><p id="p-0168" num="0167">In the subpicture layout update process (<b>1400</b>B), the subpicture layer (<b>1401</b>) is updated by a fourth PPS into a subpicture layout (<b>1404</b>). The subpicture layout (<b>1404</b>) can be indicated (e.g., specified) by fourth subpicture partitioning information in the fourth PPS (e.g., an PPS ID being 3). The fourth subpicture partitioning information or the subpicture layout (<b>1404</b>) can indicate position(s), spatial resolution(s), and/or subpictures ID(s) of subpicture(s) in one or more pictures in the fourth PPS. The subpicture IDs of subpictures in the subpicture layout (<b>1404</b>) are the subpictures 0-2. The subpicture layout (<b>1404</b>) is different from the subpicture layout (<b>1401</b>). For example, the spatial resolutions of the subpictures 0-2 in the subpicture layout (<b>1404</b>) are different from the respective spatial resolutions of the subpictures 0-2 in the subpicture layout (<b>1401</b>). Further, a number of the subpictures in the subpicture layout (<b>1404</b>) is 3, which is different from a number (e.g., 4) of the subpictures in the subpicture layout (<b>1401</b>). The subpicture 3 in the subpicture layout (<b>1401</b>) is not in the subpicture layout (<b>1404</b>). The subpicture 3 in the subpicture layout (<b>1401</b>) disappears from the subpicture layout (<b>1404</b>).</p><p id="p-0169" num="0168">The subpicture layer (<b>1404</b>) is updated by a fifth PPS (e.g., an PPS ID being 4) into a subpicture layout (<b>1405</b>). In an example, the subpicture layout (<b>1405</b>) is identical to the subpicture layout (<b>1401</b>). The subpicture layout (<b>1405</b>) is different from the subpicture layout (<b>1404</b>). For example, the subpicture 3 that is not in the subpicture layout (<b>1404</b>) appears in the subpicture layout (<b>1405</b>).</p><p id="p-0170" num="0169">When the subpicture partitioning information is updated, dimension information (e.g., spatial resolution(s)) and/or position information (e.g., vertical offset values, and/or horizontal offset values) of each subpicture may be changed.</p><p id="p-0171" num="0170">In some examples of certain video coding technologies (e.g., VVC version 1), all layers belonging to a same dependency tree can have a same subpicture partitioning layout. According to an embodiment of the disclosure, the above constraint can be relaxed to support applications where different subpicture layouts can be applied across different layers. In an embodiment, a first subpicture layout of a first layer can be different from a second subpicture layout of a second layer. In an example, each layer has a different subpicture layout.</p><p id="p-0172" num="0171"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows exemplary subpicture layouts (<b>1501</b>) and (<b>1502</b>) in different layers in a CVS according to an embodiment of the disclosure. The subpicture layout (<b>1501</b>) and the subpictures 0-3 in the subpicture layout (<b>1501</b>) can be identical to the subpicture layout (<b>1401</b>) and the subpictures 0-3 described in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref>, respectively. The subpicture layout (<b>1501</b>) can apply to picture(s) in a layer 0 in the CVS. The subpicture layout (<b>1502</b>) can apply to picture(s) in a layer 1 in the CVS. The subpicture layout (<b>1502</b>) corresponding to the layer 1 is different from the subpicture layout (<b>1501</b>) corresponding to the layer 0. For example, the subpictures 1 and 3 disappear from the subpicture layout (<b>1502</b>). The subpictures 0 and 2 in the subpicture layout (<b>1502</b>) have different spatial resolutions from the subpictures 0 and 2 in the subpicture layout (<b>1501</b>), respectively.</p><p id="p-0173" num="0172">In some examples of certain video coding technologies (e.g., VVC version 1), a combination of subpicture partitioning and reference picture resampling is not supported. According to an embodiment of the disclosure, the above constraint can be relaxed to support region-wise quality and resolution enhancement. In an embodiment, subpicture partitioning and subpicture-wise reference picture resampling can be combined. In an example, updating subpicture partitioning information within a CVS is combined with the subpicture-wise reference picture resampling. For example, subpicture partitioning information and subpicture scaling window information of a subpicture scaling window of a subpicture are signaled, for example in a high-level syntax structure, such as a PPS.</p><p id="p-0174" num="0173">According to an embodiment of the disclosure, a syntax structure (e.g., a high-level syntax structure), such as a parameter set can include an extension, such as a subpicture reference picture resampling (RPR) extension to indicate (i) subpicture partitioning information and/or (ii) subpicture scaling window information of a subpicture scaling window of a subpicture. In an embodiment, the parameter set is a PPS, and the extension is referred to as a PPS subpicture RPR extension as shown below in Tables 1-2.</p><p id="p-0175" num="0174">Table 1 shows a portion of an exemplary syntax structure of a PPS according to an embodiment of the disclosure.</p><p id="p-0176" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1 </entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>A portion of a syntax structure PPS</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="161pt" align="left"/><colspec colname="1" colwidth="56pt" align="left"/><tbody valign="top"><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="147pt" align="left"/><colspec colname="2" colwidth="56pt" align="left"/><tbody valign="top"><row><entry/><entry>pic_parameter_set_rbsp( ) {</entry><entry/></row><row><entry/><entry>&#x2003;...</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;pps_extension_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;if( pps_extension_flag )</entry></row><row><entry/><entry>&#x2003;&#x2003;pps_subpic_rpr_extension_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;&#x2003;pps_extension_7bits</entry><entry>u(7)</entry></row><row><entry/><entry>&#x2003;}</entry></row><row><entry/><entry>&#x2003;if( pps_subpic_rpr_extension_flag )</entry></row><row><entry/><entry>&#x2003;&#x2003;pps_ subpic_rpr_extension( )</entry></row><row><entry/><entry>&#x2003;if( pps_extension_7bits )</entry></row><row><entry/><entry>&#x2003;&#x2003;while( more_rbsp_data( ) )</entry></row><row><entry/><entry>&#x2003;&#x2003;&#x2003;pps_extension_data_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;rbsp_trailing_bits( )</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0177" num="0175">Table 2 shows an exemplary syntax structure extension of a PPS according to an embodiment of the disclosure.</p><p id="p-0178" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="259pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>An example of a picture parameter set subpicture</entry></row><row><entry>and reference picture resampling syntax</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="224pt" align="left"/><colspec colname="1" colwidth="35pt" align="left"/><tbody valign="top"><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="224pt" align="left"/><colspec colname="2" colwidth="35pt" align="left"/><tbody valign="top"><row><entry>pps_subpic_rpr_extension( ){</entry><entry/></row><row><entry>&#x2003;pps_subpic_update_info_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;pps_subpic_scaling_win_info_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( pps_subpic_update_info_present_flag ||</entry></row><row><entry>&#x2003;pps_subpic_scaling_win_info_present_flag )</entry></row><row><entry>&#x2003;&#x2003;pps_updated_num_subpics_minus1</entry><entry>ue(v)</entry></row><row><entry>&#x2003;if( pps_subpic_update_info_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;if( pps_updated_num_subpics_minus1 &#x3e; 0 ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_independent_subpics_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_subpic_same_size_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; pps_updated_num_subpics_minus1 &#x3e; 0 &#x26;&#x26; i &#x3c;= pps<sub>&#x2014;</sub></entry></row><row><entry>&#x2003;&#x2003;updated_num_subpics_minus1; i++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( !pps_subpic_same_size_flag | | i = = 0 ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( i &#x3e; 0 &#x26;&#x26; pps_pic_width_in_luma_samples &#x3e; CtbSizeY )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pps_subpic_ctu_top_left_x[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( i &#x3e; 0 &#x26;&#x26; pps_pic_height_in_luma_samples &#x3e; CtbSizeY )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pps_subpic_ctu_top_left_y[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( i &#x3c; pps_updated_num_subpics_minus1 &#x26;&#x26;</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pps_pic_width_in_luma_samples &#x3e; CtbSizeY )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pps_subpic_width_minus1[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;if( i &#x3c; pps_updated_num_subpics_minus1 &#x26;&#x26;</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pps_pic_height_in_luma_samples &#x3e; CtbSizeY )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pps_subpic_height_minus1[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( !pps_independent_subpics_flag) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pps_subpic_treated_as_pic_flag[ i ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;pps_loop_filter_across_subpic_enabled_flag[ i ]</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;pps_updated_subpic_id_len_minus1</entry><entry>ue(v)</entry></row><row><entry>&#x2003;&#x2003;pps_updated_subpic_id_mapping_explicitly_signalled_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;if( pps_updated_subpic_id_mapping_explicitly_signalled_flag ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_updated_subpic_id_mapping_present_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;if( pps_updated_subpic_id_mapping_present_flag )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c;= pps_updated_num_subpics_minus1; i++ )</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;pps_updated_subpic_id[ i ]</entry><entry>u(v)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>&#x2003;if( pps_subpic_scaling_win_info_present_flag ) {</entry></row><row><entry>&#x2003;&#x2003;for( i = 0; i &#x3c;= pps_updated_num_subpics_minus1; i++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_subpic_scaling_win_left_offset[ i ]</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_subpic_scaling_win_right_offset[ i ]</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_subpic_scaling_win_top_offset[ i ]</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;pps_subpic_scaling_win_bottom_offset[ i ]</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0179" num="0176">A syntax element, such as a flag (e.g., pps_subpic_rpr_extension_flag) can indicate whether a PPS subpicture RPR extension (e.g., pps_subpic_rpr_extension( ) syntax structure in Table 2) is present in a PPS RBSP syntax structure. The syntax element (e.g., pps_subpic_rpr_extension_flag) equal to 1 can specify that the pps_subpic_rpr_extension( ) syntax structure is present in the PPS RBSP syntax structure. The syntax element (e.g., pps_subpic_rpr_extension_flag) equal to 0 can specify that the pps_subpic_rpr_extension( ) syntax structure is not present. When not present, the value of the syntax element (e.g., pps_subpic_rpr_extension_flag) can be inferred to be equal to 0.</p><p id="p-0180" num="0177">When the syntax element (e.g., pps_subpic_rpr_extension_flag) is equal to 1, the pps_subpic_rpr_extension( ) syntax structure is present in the PPS RBSP syntax structure.</p><p id="p-0181" num="0178">Table 2 shows an exemplary PPS RBSP syntax structure. Referring to Table 2, a first syntax element, such as a first flag pps_subpic_update_info_present_flag, can indicate whether subpicture partitioning information (or subpicture partitioning layout information) is present in the PPS. The first syntax element (e.g., pps_subpic_update_info_present_flag) equal to 1 can specify that the subpicture partitioning layout information is present (e.g., is signaled) in the PPS. The first syntax element (e.g., pps_subpic_update_info_present_flag) equal to 0 can specify that the subpicture partitioning layout information is not present in the PPS.</p><p id="p-0182" num="0179">A second syntax element, such as a second flag pps_subpic_scaling_win_info_present_flag can indicate whether subpicture-wise scaling window information is present (e.g., is signaled) in the PPS. The second syntax element (e.g., pps_subpic_scaling_win_info_present_flag) equal to 1 can specify that the subpicture-wise scaling window information is present in the PPS. The second syntax element (e.g., pps_subpic_scaling_win_info_present_flag) equal to 0 can specify that the subpicture-wise scaling window information is not present in the PPS.</p><p id="p-0183" num="0180">A syntax element pps_updated_num_subpics_minus1 plus 1 can specify the number of subpictures of each picture that refers to the PPS. The value of pps_updated_num_subpics_minus1 can be in the range of 0 to MaxSlicesPerAu&#x2212;1, inclusive. In an example, MaxSlicesPerAu indicates a maximum number of slices per AU. When not present, the value of pps_updated_num_subpics_minus1 is inferred to be equal to sps_num_subpics_minus1.</p><p id="p-0184" num="0181">A syntax element pps_independent_subpics_flag equal to 1 can specify that all subpicture boundaries of each picture that refers to the PPS are treated as picture boundaries and there is no loop filtering across the subpicture boundaries. The syntax element pps_independent_subpics_flag equal to 0 does not impose such a constraint. When not present, the value of pps_independent_subpics_flag is inferred to be equal to 1.</p><p id="p-0185" num="0182">A syntax element pps_subpic_same_size_flag equal to 1 can specify that all subpictures of each picture that refers to the PPS have the same width specified by pps_subpic_width_minus1[0] and the same height specified by pps_subpic_height_minus1[0]. The syntax element pps_subpic_same_size_flag equal to 0 does not impose such a constraint. When not present, the value of pps_subpic_same_size_flag is inferred to be equal to 0.</p><p id="p-0186" num="0183">In an example, the variable tmpWidthVal is equal to (pps_pic_width_in_luma_samples+CtbSizeY&#x2212;1)/CtbSizeY, and the variable tmpHeightVal is equal to (pps_pic_height_in_luma_samples+CtbSizeY&#x2212;1)/CtbSizeY.</p><p id="p-0187" num="0184">A syntax element pps_subpic_ctu_top_left_x[i] can specify a horizontal position of a top-left CTU of i-th subpicture in unit of CtbSizeY. The length of the syntax element is Ceil(Log 2(tmpWidthVal)) bits.</p><p id="p-0188" num="0185">When not present, the value of pps_subpic_ctu_top_left_x[i] can be inferred as follows:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0186">If pps_subpic_same_size_flag is equal to 0 or i is equal to 0, the value of pps_subpic_ctu_top_left_x[i] is inferred to be equal to 0.&#x2014;</li>        <li id="ul0002-0002" num="0187">Otherwise, the value of pps_subpic_ctu_top_left_x[i] is inferred to be equal to (i % numSubpicCols)*(pps_subpic_width_minus1[0]+1).</li>    </ul>    </li></ul></p><p id="p-0189" num="0188">When pps_subpic_same_size_flag is equal to 1, the variable numSubpicCols, specifying the number of subpicture columns in each picture in the CLVS, is derived as follows: numSubpicCols=tmpWidthVal/(pps_subpic_width_minus1[0]+1).</p><p id="p-0190" num="0189">When pps_subpic_same_size_flag is equal to 1, the value of numSubpicCols*tmpHeightVal/(pps_subpic_height_minus1[0]+1)&#x2212;1 can be equal to pps_updated_num_subpics_minus1.</p><p id="p-0191" num="0190">A syntax element pps_subpic_ctu_top_left_y[i] can specify a vertical position of the top-left CTU of the i-th subpicture in unit of CtbSizeY. The length of the syntax element is Ceil(Log 2(tmpHeightVal)) bits.</p><p id="p-0192" num="0191">When not present, the value of pps_subpic_ctu_top_left_y[i] can be inferred as follows:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0192">If pps_subpic_same_size_flag is equal to 0 or i is equal to 0, the value of pps_subpic_ctu_top_left_y[i] is inferred to be equal to 0.&#x2014;</li>        <li id="ul0004-0002" num="0193">Otherwise, the value of pps_subpic_ctu_top_left_y[i] is inferred to be equal to (i/numSubpicCols)*(pps_subpic_height_minus1[0]+1).</li>    </ul>    </li></ul></p><p id="p-0193" num="0194">A syntax element pps_subpic_width_minus1 [i] plus 1 can specify the width of the i-th subpicture in units of CtbSizeY. The length of the syntax element is Ceil(Log 2(tmpWidthVal)) bits.</p><p id="p-0194" num="0195">When not present, the value of pps_subpic_width_minus1[i] is inferred as follows:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0196">If pps_subpic_same_size_flag is equal to 0 or i is equal to 0, the value of pps_subpic_width_minus1[i] is inferred to be equal to tmpWidthVal&#x2212;pps_subpic_ctu_top_left_x[i]&#x2212;1.</li>        <li id="ul0006-0002" num="0197">Otherwise, the value of pps_subpic_width_minus1 [i] is inferred to be equal to pps_subpic_width_minus1[0].</li>    </ul>    </li></ul></p><p id="p-0195" num="0198">When pps_subpic_same_size_flag is equal to 1, the value of tmpWidthVal % (pps_subpic_width_minus1[0]+1) can be equal to 0.</p><p id="p-0196" num="0199">A syntax element pps_subpic_height_minus1 [i] plus 1 can specify the height of the i-th subpicture in units of CtbSizeY. The length of the syntax element is Ceil(Log 2(tmpHeightVal)) bits.</p><p id="p-0197" num="0200">When not present, the value of pps_subpic_height_minus1[i] can be inferred as follows:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0201">If pps_subpic_same_size_flag is equal to 0 or i is equal to 0, the value of pps_subpic_height_minus1 [i] is inferred to be equal to tmpHeightVal&#x2212;pps_subpic_ctu_top_left_y[i]&#x2212;1.</li>        <li id="ul0008-0002" num="0202">Otherwise, the value of pps_subpic_height_minus1 [i] is inferred to be equal to pps_subpic_height_minus1[0].</li>    </ul>    </li></ul></p><p id="p-0198" num="0203">When pps_subpic_same_size_flag is equal to 1, the value of tmpHeightVal % (pps_subpic_height_minus1[0]+1) shall be equal to 0.</p><p id="p-0199" num="0204">In an example, it is a requirement of bitstream conformance that the shapes of the subpictures can be such that each subpicture, when decoded, can have its entire left boundary and entire top boundary including picture boundaries or including boundaries of previously decoded subpictures.</p><p id="p-0200" num="0205">In an example, for each subpicture with subpicture index i in the range of 0 to pps_num_subpics_minus1, inclusive, it is a requirement of bitstream conformance that all of the following conditions are true:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0206">The value of (pps_subpic_ctu_top_left_x[i]*CtbSizeY) shall be less than (pps_pic_width_in_luma_samples&#x2212;pps_conf_win_right_offset*SubWidthC).</li>        <li id="ul0010-0002" num="0207">The value of ((pps_subpic_ctu_top_left_x[i]+pps_subpic_width_minus1 [i]+1)*CtbSizeY) shall be greater than (pps_conf_win_left_offset*SubWidthC).</li>        <li id="ul0010-0003" num="0208">The value of (pps_subpic_ctu_top_left_y[i]*CtbSizeY) shall be less than (pps_pic_height_in_luma_samples&#x2014;pps_conf_win_bottom_offset*SubHeightC).</li>        <li id="ul0010-0004" num="0209">The value of ((pps_subpic_ctu_top_left_y[i]+pps_subpic_height_minus1 [i]+1)*CtbSizeY) shall be greater than (pps_conf_win_top_offset*SubHeightC).</li>    </ul>    </li></ul></p><p id="p-0201" num="0210">A syntax element pps_subpic_treated_aspic_flag[i] equal to 1 can specify that the i-th subpicture of each coded picture that refers to the PPS is treated as a picture in the decoding process excluding in-loop filtering operations. pps_subpic_treated_aspic_flag[i] equal to 0 can specify that the i-th subpicture of each coded picture in the CLVS is not treated as a picture in the decoding process excluding in-loop filtering operations. When not present, the value of pps_subpic_treated_aspic_flag[i] is inferred to be equal to 1.</p><p id="p-0202" num="0211">A syntax element pps_loop_filter_across_subpic_enabled_flag[i] equal to 1 can specify that in-loop filtering operations across subpicture boundaries is enabled and may be performed across the boundaries of the i-th subpicture in each coded picture in the CLVS. pps_loop_filter_across_subpic_enabled_flag[i] equal to 0 can specify that in-loop filtering operations across subpicture boundaries is disabled and are not performed across the boundaries of the i-th subpicture in each coded picture in the CLVS. When not present, the value of pps_loop_filter_across_subpic_enabled_pic_flag[i] is inferred to be equal to 0.</p><p id="p-0203" num="0212">A syntax element pps_updated_subpic_id_len_minus1 plus 1 can specify the number of bits used to represent the syntax element pps_updated_subpic_id[i], when present, and optionally the syntax element sh_subpic_id, when present. The value of pps_updated_subpic_id_len_minus1 can be in the range of 0 to 15, inclusive. The value of 1&#x3c;&#x3c;(pps_updated_subpic_id_len_minus1+1) can be greater than or equal to pps_updated_num_subpics_minus1+1.</p><p id="p-0204" num="0213">A syntax element pps_updated_subpic_id mapping explicitly signalled flag equal to 1 can specify that the subpicture ID mapping is explicitly signaled, in the PPSs referred to by coded pictures of the CLVS. pps_updated_subpic_id mapping explicitly signalled flag equal to 0 can specify that the subpicture ID mapping is not explicitly signaled for the CLVS. When not present, the value of pps_updated_subpic_id mapping explicitly signalled flag is inferred to be equal to 0.</p><p id="p-0205" num="0214">A syntax element pps_updated_subpic_id_mapping_present_flag equal to 1 can specify that the subpicture ID mapping is signaled in the PPS when pps_updated_subpic_id mapping explicitly signalled flag is equal to 1. pps_updated_subpic_id_mapping_present_flag equal to 0 can specify that subpicture ID mapping is signaled in the PPSs referred to by coded pictures of the CLVS when pps_subpic_id_mapping_explicitly_signalled_flag is equal to 1.</p><p id="p-0206" num="0215">A syntax element pps_updated_subpic_id[i] can specify the subpicture ID of the i-th subpicture. The length of the pps_updated_subpic_id[i] syntax element is pps_updated_subpic_id_len_minus1+1 bits.</p><p id="p-0207" num="0216">Syntax elements pps_subpic_scaling_win_left_offset[i], pps_subpic_scaling_win_right_offset[i], pps_subpic_scaling_win_top_offset[i], and pps_subpic_scaling_win_bottom_offset[i] can specify the offsets that are applied to the subpicture size of the i-th subpicture for scaling ratio calculation. Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the syntax elements pps_subpic_scaling_win_left_offset[i], pps_subpic_scaling_win_right_offset[i], pps_subpic_scaling_win_top_offset[i], and pps_subpic_scaling_win_bottom_offset[i] can specify the left offset O<sub>L</sub>, the right offset O<sub>R</sub>, the top offset O<sub>T</sub>, and the bottom offset OB of the subpicture scaling window (<b>1312</b>) with respect to the subpicture (<b>1311</b>), respectively.</p><p id="p-0208" num="0217">When not present, the values of pps_subpic_scaling_win_left_offset[i], pps_subpic_scaling_win_right_offset[i], pps_subpic_scaling_win_top_offset[i], and pps_subpic_scaling_win_bottom_offset[i] are inferred to be equal to pps_scaling_win_left_offset, pps_scaling_win_right_offset, pps_scaling_win_top_offset, and pps_scaling_win_bottom_offset, respectively.</p><p id="p-0209" num="0218">Depending on the values of the first syntax element (or the first flag) and the second syntax element (or the second flag) in the syntax structure (e.g., the high-level syntax structure), such as the PPS in Table 2, various operations can be performed.</p><p id="p-0210" num="0219">In an embodiment, the first flag indicates that the subpicture partitioning layout information for a picture is signaled. For example, the first flag indicates the subpicture partitioning layout information is signaled in the PPS, for example, when the first flag (e.g., pps_subpic_update_info_present_flag) is equal to 1. In an example, the picture includes a plurality of subpictures. Based on the subpicture partitioning information (e.g., the syntax elements pps_subpic_ctu_top_left_x[i], pps_subpic_ctu_top_left_y[i], pps_subpic_width_minus1 [i], and pps_subpic_height_minus1 [i]), a subpicture layout of the plurality of subpictures in the picture including a size (e.g., a width W of a subpicture indicated by the syntax element pps_subpic_width_minus1[i] and a height H of a subpicture indicated by pps_subpic_height_minus1 [i]) and a position (e.g., indicated by the syntax elements pps_subpic_ctu_top_left_x[i] and pps_subpic_ctu_top_left_y[i]) of each of the plurality of subpictures in the picture can be determined. In an example, a subpicture identifier (ID) of each subpicture in the picture is determined based on the subpicture partitioning information (e.g., the syntax element pps_updated_subpic_id[i]) in the PPS. A first subpicture in the plurality of subpictures can be reconstructed based on the subpicture partitioning information, such as the size and the position of the first subpicture. The subpicture partitioning layout information can be updated within the CVS, for example, from a picture that refers to a first PPS to another picture that refers to a second PPS.</p><p id="p-0211" num="0220">In an example, first subpicture partitioning information is signaled in a first PPS, and second subpicture partitioning information is signaled in a second PPS. A second subpicture layout indicated by the second subpicture partitioning information is different from a first subpicture layout indicated by the first subpicture partitioning information.</p><p id="p-0212" num="0221">In an embodiment, the second flag indicates that the subpicture scaling window information for a subpicture is signaled. For example, the second flag indicates that the subpicture scaling window information is signaled in the PPS, for example, when the second syntax element (e.g., pps_subpic_scaling_win_info_present_flag) is equal to 1. A reference subpicture of the subpicture can have a different spatial resolution (or a different size) from a spatial resolution of the subpicture.</p><p id="p-0213" num="0222">In an example, the subpicture scaling window information of the subpicture (e.g., the syntax elements pps_subpic_scaling_win_left_offset[i], pps_subpic_scaling_win_right_offset[i], pps_subpic_scaling_win_top_offset[i], and pps_subpic_scaling_win_bottom_offset[i] in Table 2) is decoded from the PPS. The subpicture can be reconstructed using subpicture-wise reference picture resampling that is based on the subpicture scaling window information of the subpicture.</p><p id="p-0214" num="0223">For example, the syntax elements pps_subpic_scaling_win_left_offset[i], pps_subpic_scaling_win_right_offset[i], pps_subpic_scaling_win_top_offset[i], and pps_subpic_scaling_win_bottom_offset[i] indicate the first offsets, such as the left offset O<sub>L</sub>, the right offset O<sub>R</sub>, the top offset O<sub>T</sub>, and the bottom offset OB of the subpicture scaling window (<b>1312</b>). In an example, a width W<sub>S </sub>of the subpicture scaling window (<b>1312</b>) is determined as W<sub>S</sub>=W&#x2212;(O<sub>L</sub>+O<sub>R</sub>) where W is a width of the subpicture. In an example, a height Hs of the subpicture scaling window (<b>1312</b>) is determined as H<sub>S</sub>=H&#x2212;(O<sub>T</sub>+O<sub>B</sub>) where H is a height of the subpicture.</p><p id="p-0215" num="0224">A scaling ratio associated with the reference subpicture (<b>1301</b>) and the subpicture (<b>1311</b>) can be determined based on dimension information of a scaling window (e.g., <b>1312</b>) of the subpicture (<b>1311</b>). Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the scaling ratio between the reference subpicture (<b>1301</b>) and the subpicture (<b>1311</b>) can be determined based on the width Ws of the subpicture scaling window (<b>1312</b>) and the height Hs of the subpicture scaling window (<b>1312</b>). The subpicture-wise reference picture resampling can be performed based on the determined scaling ratio associated with the reference subpicture (<b>1301</b>) and the subpicture (<b>1311</b>). In an example, a scaled reference subpicture that matches the spatial resolution (or a size) of the subpicture is generated using the subpicture-wise reference picture resampling. The subpicture can be decoded with the scaled reference subpicture.</p><p id="p-0216" num="0225">According to an embodiment, syntax elements indicating the subpicture partitioning information and the subpicture scaling window information can be combined in a syntax structure (e.g., a high-level syntax structure), such as a PPS.</p><p id="p-0217" num="0226">In an embodiment, the first flag indicates that the subpicture partitioning information is signaled in the PPS. The second flag indicates that the subpicture scaling window information for the subpicture is signaled in the PPS. The subpicture partitioning information can be decoded based on the PPS. The subpicture scaling window information of the subpicture can be decoded based on the PPS. The dimension information (e.g., the width W indicated by pps_subpic_width_minus1 [i] and the height H indicated by pps_subpic_height_minus1[i]) and position information (e.g., indicated by pps_subpic_ctu_top_left_x[i] and pps_subpic_ctu_top_left_y[i]) of the subpicture can be determined based on the subpicture partitioning information, as described above. The subpicture can be reconstructed based on the subpicture scaling window information (e.g., indicated by pps_subpic_scaling_win_left_offset[i], pps_subpic_scaling_win_right_offset[i], pps_subpic_scaling_win_top_offset[i], and pps_subpic_scaling_win_bottom_offset[i]) of the subpicture, the dimension information of the subpicture, and the position information of the subpicture, as described above with reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0218" num="0227"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows a flow chart outlining an encoding process (<b>1600</b>) according to an embodiment of the disclosure. In various embodiments, the process (<b>1600</b>) is executed by processing circuitry, such as the processing circuitry in the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>), processing circuitry that performs functions of a video encoder (e.g., (<b>403</b>), (<b>603</b>), (<b>703</b>)), or the like. In some embodiments, the process (<b>1600</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>1600</b>). The process starts at (S<b>1601</b>), and proceeds to (S<b>1610</b>).</p><p id="p-0219" num="0228">At (S<b>1610</b>), at least one of a first flag or a second flag in a syntax structure (e.g., a high-level syntax structure) for a first picture in a coded video sequence can be determined. The first flag can indicate whether first subpicture partitioning information of the first picture is signaled in the syntax structure. The second flag can indicate whether first subpicture scaling window information for a first subpicture in the first picture is signaled in the syntax structure. In an example, the syntax structure is a PPS, such as shown in Table 2. The first flag can be the first syntax element (e.g., pps_subpic_update_info_present_flag). The second flag can be the second syntax element (e.g., pps_subpic_scaling_win_info_present_flag).</p><p id="p-0220" num="0229">At (S<b>1620</b>), syntax elements indicating the first subpicture partitioning information can be generated based on the first flag indicating that the first subpicture partitioning information is signaled in the syntax structure. In an example, the first flag indicates that the first subpicture partitioning information is signaled in the syntax structure, for example, a value of the pps_subpic_update_info_present_flag being 1. The syntax elements indicating the first subpicture partitioning information, such as syntax elements indicating size(s), position(s), subpicture ID(s) of subpictures in the first picture can be generated.</p><p id="p-0221" num="0230">At (S<b>1630</b>), syntax elements indicating the first subpicture scaling window information can be generated based on the second flag indicating that the first subpicture scaling window information is signaled in the syntax structure. In an example, the second flag indicates that the first subpicture scaling window information is signaled in the syntax structure, for example, a value of the pps_subpic_scaling_win_info_present_flag being 1. The syntax elements indicating the first subpicture scaling window information, such as syntax elements indicating offsets of subpictures in the first picture can be generated.</p><p id="p-0222" num="0231">At (S<b>1640</b>), the first subpicture can be encoded based on the first flag and the second flag. If the first flag indicates that the first subpicture partitioning information is signaled in the syntax structure, the first subpicture can be encoded based on the first subpicture partitioning information.</p><p id="p-0223" num="0232">If the second flag indicates that the first subpicture scaling window information is signaled in the syntax structure, the first subpicture can be encoded based on the first subpicture scaling window information.</p><p id="p-0224" num="0233">If the first flag indicates that the first subpicture partitioning information is signaled in the syntax structure and the second flag indicates that the first subpicture scaling window information is signaled in the syntax structure, the first subpicture can be encoded based on the first subpicture partitioning information and the first subpicture scaling window information.</p><p id="p-0225" num="0234">The process (<b>1600</b>) can be suitably adapted to various scenarios and steps in the process (<b>1600</b>) can be adjusted accordingly. One or more of the steps in the process (<b>1600</b>) can be adapted, omitted, repeated, and/or combined. Any suitable order can be used to implement the process (<b>1600</b>). Additional step(s) can be added.</p><p id="p-0226" num="0235"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows a flow chart outlining a decoding process (<b>1700</b>) according to an embodiment of the disclosure. In various embodiments, the process (<b>1700</b>) is executed by processing circuitry, such as the processing circuitry in the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>), the processing circuitry that performs functions of the video encoder (<b>403</b>), the processing circuitry that performs functions of the video decoder (<b>410</b>), the processing circuitry that performs functions of the video decoder (<b>510</b>), the processing circuitry that performs functions of the video encoder (<b>603</b>), and the like. In some embodiments, the process (<b>1700</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>1700</b>). The process starts at (S<b>1701</b>), and proceeds to (S<b>1710</b>).</p><p id="p-0227" num="0236">At (S<b>1710</b>), at least one of a first flag (e.g., pps_subpic_update_info_present_flag) or a second flag (e.g., pps_subpic_scaling_win_info_present_flag) in a syntax structure (e.g., a high-level syntax structure) for a first picture in a coded video sequence (CVS) can be decoded. The first picture can include a first subpicture. The first flag can indicate whether first subpicture partitioning information of the first picture is signaled in the syntax structure. The second flag can indicate whether first subpicture scaling window information for the first subpicture is signaled in the syntax structure. In an embodiment, the syntax element is the high-level syntax structure.</p><p id="p-0228" num="0237">In an example, the syntax structure is a first picture parameter set (PPS) syntax structure.</p><p id="p-0229" num="0238">At (S<b>1720</b>), the first subpicture can be reconstructed based on (i) the first flag indicating that the first subpicture partitioning information is signaled in the syntax structure or (ii) the second flag indicating that the first subpicture scaling window information for the first subpicture is signaled in the syntax structure.</p><p id="p-0230" num="0239">In an example, the at least one of the first flag and the second flag includes the first flag. The first flag indicates that the first subpicture partitioning information for the first picture is signaled in the syntax structure.</p><p id="p-0231" num="0240">The first picture includes a plurality of subpictures where the plurality of subpictures includes the first subpicture. Based on the first subpicture partitioning information, a first subpicture layout of the plurality of subpictures in the first picture can be determined. The first subpicture layout can indicate (e.g., include) a size and a position of each of the plurality of subpictures in the first picture, such as described with reference to Table 2.</p><p id="p-0232" num="0241">A subpicture identifier (ID) of each subpicture in the first picture can be determined based on the first subpicture partitioning information in the syntax structure.</p><p id="p-0233" num="0242">In an example, the syntax structure that includes the first subpicture partitioning information is a first PPS. Second subpicture partitioning information signaled in a second PPS syntax structure for a second picture in the CVS can be decoded. Second subpictures in the second picture can be reconstructed based on the second subpicture partitioning information. A second subpicture layout of the second picture can be different from the first subpicture layout of the first picture.</p><p id="p-0234" num="0243">The at least one of the first flag and the second flag can include the second flag. The second flag can indicate that the first subpicture scaling window information of the first subpicture is signaled in the syntax structure. The first subpicture scaling window information of the first subpicture can be decoded based on the syntax structure. The first subpicture can be reconstructed using subpicture-wise reference picture resampling that is based on the first subpicture scaling window information of the first subpicture.</p><p id="p-0235" num="0244">The process (<b>1700</b>) proceeds to (S<b>1799</b>), and terminates.</p><p id="p-0236" num="0245">The process (<b>1700</b>) can be suitably adapted to various scenarios and steps in the process (<b>1700</b>) can be adjusted accordingly. One or more of the steps in the process (<b>1700</b>) can be adapted, omitted, repeated, and/or combined. Any suitable order can be used to implement the process (<b>1700</b>). Additional step(s) can be added.</p><p id="p-0237" num="0246">In an example, the first picture is in a first layer in the CVS. Second subpicture partitioning information signaled in another syntax structure for a second picture in a second layer in the CVS can be decoded. The second subpicture partitioning information can be different from the first subpicture partitioning information. Second subpictures in the second picture can be reconstructed based on the second subpicture partitioning information.</p><p id="p-0238" num="0247">In an embodiment, the at least one of the first flag and the second flag includes the first flag and the second flag. The first flag indicates that the first subpicture partitioning information is signaled in the syntax structure. The second flag can indicate that the first subpicture scaling window information of the first subpicture is signaled in the syntax structure. The first subpicture scaling window information of the first subpicture can be decoded from the syntax structure. Dimension information and position information of the first subpicture can be determined based on the first subpicture partitioning information. The first subpicture can be reconstructed based on the first subpicture scaling window information of the first subpicture, the dimension information of the first subpicture, and the position information of the first subpicture.</p><p id="p-0239" num="0248">Embodiments in the disclosure may be used separately or combined in any order. Further, each of the methods (or embodiments), an encoder, and a decoder may be implemented by processing circuitry (e.g., one or more processors or one or more integrated circuits). In one example, the one or more processors execute a program that is stored in a non-transitory computer-readable medium.</p><p id="p-0240" num="0249">The techniques described above, can be implemented as computer software using computer-readable instructions and physically stored in one or more computer-readable media. For example, <figref idref="DRAWINGS">FIG. <b>18</b></figref> shows a computer system (<b>1800</b>) suitable for implementing certain embodiments of the disclosed subject matter.</p><p id="p-0241" num="0250">The computer software can be coded using any suitable machine code or computer language, that may be subject to assembly, compilation, linking, or like mechanisms to create code comprising instructions that can be executed directly, or through interpretation, micro-code execution, and the like, by one or more computer central processing units (CPUs), Graphics Processing Units (GPUs), and the like.</p><p id="p-0242" num="0251">The instructions can be executed on various types of computers or components thereof, including, for example, personal computers, tablet computers, servers, smartphones, gaming devices, internet of things devices, and the like.</p><p id="p-0243" num="0252">The components shown in <figref idref="DRAWINGS">FIG. <b>18</b></figref> for computer system (<b>1800</b>) are exemplary in nature and are not intended to suggest any limitation as to the scope of use or functionality of the computer software implementing embodiments of the present disclosure. Neither should the configuration of components be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary embodiment of a computer system (<b>1800</b>).</p><p id="p-0244" num="0253">Computer system (<b>1800</b>) may include certain human interface input devices. Such a human interface input device may be responsive to input by one or more human users through, for example, tactile input (such as: keystrokes, swipes, data glove movements), audio input (such as: voice, clapping), visual input (such as: gestures), olfactory input (not depicted). The human interface devices can also be used to capture certain media not necessarily directly related to conscious input by a human, such as audio (such as: speech, music, ambient sound), images (such as: scanned images, photographic images obtain from a still image camera), video (such as two-dimensional video, three-dimensional video including stereoscopic video).</p><p id="p-0245" num="0254">Input human interface devices may include one or more of (only one of each depicted): keyboard (<b>1801</b>), mouse (<b>1802</b>), trackpad (<b>1803</b>), touch screen (<b>1810</b>), data-glove (not shown), joystick (<b>1805</b>), microphone (<b>1806</b>), scanner (<b>1807</b>), camera (<b>1808</b>).</p><p id="p-0246" num="0255">Computer system (<b>1800</b>) may also include certain human interface output devices. Such human interface output devices may be stimulating the senses of one or more human users through, for example, tactile output, sound, light, and smell/taste. Such human interface output devices may include tactile output devices (for example tactile feedback by the touch-screen (<b>1810</b>), data-glove (not shown), or joystick (<b>1805</b>), but there can also be tactile feedback devices that do not serve as input devices), audio output devices (such as: speakers (<b>1809</b>), headphones (not depicted)), visual output devices (such as screens (<b>1810</b>) to include CRT screens, LCD screens, plasma screens, OLED screens, each with or without touch-screen input capability, each with or without tactile feedback capability&#x2014;some of which may be capable to output two dimensional visual output or more than three dimensional output through means such as stereographic output; virtual-reality glasses (not depicted), holographic displays and smoke tanks (not depicted)), and printers (not depicted).</p><p id="p-0247" num="0256">Computer system (<b>1800</b>) can also include human accessible storage devices and their associated media such as optical media including CD/DVD ROM/RW (<b>1820</b>) with CD/DVD or the like media (<b>1821</b>), thumb-drive (<b>1822</b>), removable hard drive or solid state drive (<b>1823</b>), legacy magnetic media such as tape and floppy disc (not depicted), specialized ROM/ASIC/PLD based devices such as security dongles (not depicted), and the like.</p><p id="p-0248" num="0257">Those skilled in the art should also understand that term &#x201c;computer readable media&#x201d; as used in connection with the presently disclosed subject matter does not encompass transmission media, carrier waves, or other transitory signals.</p><p id="p-0249" num="0258">Computer system (<b>1800</b>) can also include an interface (<b>1854</b>) to one or more communication networks (<b>1855</b>). Networks can for example be wireless, wireline, optical. Networks can further be local, wide-area, metropolitan, vehicular and industrial, real-time, delay-tolerant, and so on. Examples of networks include local area networks such as Ethernet, wireless LANs, cellular networks to include GSM, 3G, 4G, 5G, LTE and the like, TV wireline or wireless wide area digital networks to include cable TV, satellite TV, and terrestrial broadcast TV, vehicular and industrial to include CANBus, and so forth. Certain networks commonly require external network interface adapters that attached to certain general purpose data ports or peripheral buses (<b>1849</b>) (such as, for example USB ports of the computer system (<b>1800</b>)); others are commonly integrated into the core of the computer system (<b>1800</b>) by attachment to a system bus as described below (for example Ethernet interface into a PC computer system or cellular network interface into a smartphone computer system). Using any of these networks, computer system (<b>1800</b>) can communicate with other entities. Such communication can be uni-directional, receive only (for example, broadcast TV), uni-directional send-only (for example CANbus to certain CANbus devices), or bi-directional, for example to other computer systems using local or wide area digital networks. Certain protocols and protocol stacks can be used on each of those networks and network interfaces as described above.</p><p id="p-0250" num="0259">Aforementioned human interface devices, human-accessible storage devices, and network interfaces can be attached to a core (<b>1840</b>) of the computer system (<b>1800</b>).</p><p id="p-0251" num="0260">The core (<b>1840</b>) can include one or more Central Processing Units (CPU) (<b>1841</b>), Graphics Processing Units (GPU) (<b>1842</b>), specialized programmable processing units in the form of Field Programmable Gate Areas (FPGA) (<b>1843</b>), hardware accelerators for certain tasks (<b>1844</b>), graphics adapters (<b>1850</b>), and so forth. These devices, along with Read-only memory (ROM) (<b>1845</b>), Random-access memory (<b>1846</b>), internal mass storage such as internal non-user accessible hard drives, SSDs, and the like (<b>1847</b>), may be connected through a system bus (<b>1848</b>). In some computer systems, the system bus (<b>1848</b>) can be accessible in the form of one or more physical plugs to enable extensions by additional CPUs, GPU, and the like. The peripheral devices can be attached either directly to the core's system bus (<b>1848</b>), or through a peripheral bus (<b>1849</b>). In an example, the screen (<b>1810</b>) can be connected to the graphics adapter (<b>1850</b>). Architectures for a peripheral bus include PCI, USB, and the like.</p><p id="p-0252" num="0261">CPUs (<b>1841</b>), GPUs (<b>1842</b>), FPGAs (<b>1843</b>), and accelerators (<b>1844</b>) can execute certain instructions that, in combination, can make up the aforementioned computer code. That computer code can be stored in ROM (<b>1845</b>) or RAM (<b>1846</b>). Transitional data can be also be stored in RAM (<b>1846</b>), whereas permanent data can be stored for example, in the internal mass storage (<b>1847</b>). Fast storage and retrieve to any of the memory devices can be enabled through the use of cache memory, that can be closely associated with one or more CPU (<b>1841</b>), GPU (<b>1842</b>), mass storage (<b>1847</b>), ROM (<b>1845</b>), RAM (<b>1846</b>), and the like.</p><p id="p-0253" num="0262">The computer readable media can have computer code thereon for performing various computer-implemented operations. The media and computer code can be those specially designed and constructed for the purposes of the present disclosure, or they can be of the kind well known and available to those having skill in the computer software arts.</p><p id="p-0254" num="0263">As an example and not by way of limitation, the computer system having architecture (<b>1800</b>), and specifically the core (<b>1840</b>) can provide functionality as a result of processor(s) (including CPUs, GPUs, FPGA, accelerators, and the like) executing software embodied in one or more tangible, computer-readable media. Such computer-readable media can be media associated with user-accessible mass storage as introduced above, as well as certain storage of the core (<b>1840</b>) that are of non-transitory nature, such as core-internal mass storage (<b>1847</b>) or ROM (<b>1845</b>). The software implementing various embodiments of the present disclosure can be stored in such devices and executed by core (<b>1840</b>). A computer-readable medium can include one or more memory devices or chips, according to particular needs. The software can cause the core (<b>1840</b>) and specifically the processors therein (including CPU, GPU, FPGA, and the like) to execute particular processes or particular parts of particular processes described herein, including defining data structures stored in RAM (<b>1846</b>) and modifying such data structures according to the processes defined by the software. In addition or as an alternative, the computer system can provide functionality as a result of logic hardwired or otherwise embodied in a circuit (for example: accelerator (<b>1844</b>)), which can operate in place of or together with software to execute particular processes or particular parts of particular processes described herein. Reference to software can encompass logic, and vice versa, where appropriate. Reference to a computer-readable media can encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware and software.</p><heading id="h-0007" level="1">APPENDIX A: ACRONYMS</heading><p id="p-0255" num="0264">JEM: joint exploration model<br/>VVC: versatile video coding<br/>BMS: benchmark set</p><heading id="h-0008" level="2">MV: Motion Vector</heading><heading id="h-0009" level="2">HEVC: High Efficiency Video Coding</heading><heading id="h-0010" level="2">SEI: Supplementary Enhancement Information</heading><heading id="h-0011" level="2">VUI: Video Usability Information</heading><heading id="h-0012" level="2">GOPs: Groups of Pictures</heading><heading id="h-0013" level="2">TUs: Transform Units,</heading><heading id="h-0014" level="2">PUs: Prediction Units</heading><heading id="h-0015" level="2">CTUs: Coding Tree Units</heading><heading id="h-0016" level="2">CTBs: Coding Tree Blocks</heading><heading id="h-0017" level="2">PBs: Prediction Blocks</heading><heading id="h-0018" level="2">HRD: Hypothetical Reference Decoder</heading><heading id="h-0019" level="2">SNR: Signal Noise Ratio</heading><heading id="h-0020" level="2">CPUs: Central Processing Units</heading><heading id="h-0021" level="2">GPUs: Graphics Processing Units</heading><heading id="h-0022" level="2">CRT: Cathode Ray Tube</heading><heading id="h-0023" level="2">LCD: Liquid-Crystal Display</heading><heading id="h-0024" level="2">OLED: Organic Light-Emitting Diode</heading><heading id="h-0025" level="2">CD: Compact Disc</heading><heading id="h-0026" level="2">DVD: Digital Video Disc</heading><heading id="h-0027" level="2">ROM: Read-Only Memory</heading><heading id="h-0028" level="2">RAM: Random Access Memory</heading><heading id="h-0029" level="2">ASIC: Application-Specific Integrated Circuit</heading><heading id="h-0030" level="2">PLD: Programmable Logic Device</heading><heading id="h-0031" level="2">LAN: Local Area Network</heading><p id="p-0256" num="0265">GSM: Global System for Mobile communications</p><heading id="h-0032" level="2">LTE: Long-Term Evolution</heading><heading id="h-0033" level="2">CANBus: Controller Area Network Bus</heading><heading id="h-0034" level="2">USB: Universal Serial Bus</heading><heading id="h-0035" level="2">PCI: Peripheral Component Interconnect</heading><heading id="h-0036" level="2">FPGA: Field Programmable Gate Areas</heading><p id="p-0257" num="0266">SSD: solid-state drive</p><heading id="h-0037" level="2">IC: Integrated Circuit</heading><heading id="h-0038" level="2">CU: Coding Unit</heading><heading id="h-0039" level="2">NIC: Neural Image Compression</heading><heading id="h-0040" level="2">R-D: Rate-Distortion</heading><heading id="h-0041" level="2">E2E: End to End</heading><heading id="h-0042" level="2">ANN: Artificial Neural Network</heading><heading id="h-0043" level="2">DNN: Deep Neural Network</heading><heading id="h-0044" level="2">CNN: Convolution Neural Network</heading><p id="p-0258" num="0267">While this disclosure has described several exemplary embodiments, there are alterations, permutations, and various substitute equivalents, which fall within the scope of the disclosure. It will thus be appreciated that those skilled in the art will be able to devise numerous systems and methods which, although not explicitly shown or described herein, embody the principles of the disclosure and are thus within the spirit and scope thereof.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for video decoding in a video decoder, comprising:<claim-text>decoding at least one of a first flag or a second flag in a syntax structure for a first picture in a coded video sequence (CVS), the first picture including a first subpicture, the first flag indicating whether first subpicture partitioning information of the first picture is signaled in the syntax structure, the second flag indicating whether first subpicture scaling window information for the first subpicture is signaled in the syntax structure; and</claim-text><claim-text>reconstructing the first subpicture based on the at least one of the first flag indicating that the first subpicture partitioning information of the first picture is signaled in the syntax structure or the second flag indicating that the first subpicture scaling window information for the first subpicture is signaled in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the syntax structure is a first picture parameter set (PPS) syntax structure.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the at least one of the first flag and the second flag includes the first flag, and</claim-text><claim-text>the first flag indicates that the first subpicture partitioning information for the first picture is signaled in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein<claim-text>the first picture includes a plurality of subpictures, the plurality of subpictures including the first subpicture, and</claim-text><claim-text>the method further includes determining, based on the first subpicture partitioning information, a first subpicture layout of the plurality of subpictures in the first picture including a size and a position of each of the plurality of subpictures in the first picture.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>determining a subpicture identifier (ID) of each subpicture in the first picture based on the first subpicture partitioning information in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein<claim-text>the syntax structure is a first picture parameter set (PPS) syntax structure, and</claim-text><claim-text>the method further includes:<claim-text>decoding second subpicture partitioning information signaled in a second PPS syntax structure for a second picture in the CVS; and</claim-text><claim-text>reconstructing second subpictures in the second picture based on the second subpicture partitioning information, a second subpicture layout of the second picture being different from the first subpicture layout of the first picture.</claim-text></claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the first picture is in a first layer in the CVS, and</claim-text><claim-text>the method further includes:<claim-text>decoding second subpicture partitioning information signaled in another syntax structure for a second picture in a second layer in the CVS, the second subpicture partitioning information being different from the first subpicture partitioning information; and</claim-text><claim-text>reconstructing second subpictures in the second picture based on the second subpicture partitioning information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the at least one of the first flag and the second flag includes the second flag, and</claim-text><claim-text>the second flag indicates that the first subpicture scaling window information of the first subpicture is signaled in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein<claim-text>the method further includes decoding the first subpicture scaling window information of the first subpicture based on the syntax structure; and</claim-text><claim-text>the reconstructing the first subpicture includes reconstructing the first subpicture using subpicture-wise reference picture resampling that is based on the first subpicture scaling window information of the first subpicture.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein<claim-text>the at least one of the first flag and the second flag further includes the first flag;</claim-text><claim-text>the first flag indicates that the first subpicture partitioning information is signaled in the syntax structure;</claim-text><claim-text>the method further includes:<claim-text>decoding the first subpicture scaling window information of the first subpicture based on the syntax structure; and</claim-text><claim-text>determining dimension information and position information of the first subpicture based on the first subpicture partitioning information; and</claim-text></claim-text><claim-text>the reconstructing the first subpicture includes reconstructing the first subpicture based on the first subpicture scaling window information of the first subpicture, the dimension information of the first subpicture, and the position information of the first subpicture.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. An apparatus for video decoding, comprising:<claim-text>processing circuitry configured to:<claim-text>decode at least one of a first flag or a second flag in a syntax structure for a first picture in a coded video sequence (CVS), the first picture including a first subpicture, the first flag indicating whether first subpicture partitioning information of the first picture is signaled in the syntax structure, the second flag indicating whether first subpicture scaling window information for the first subpicture is signaled in the syntax structure; and</claim-text><claim-text>reconstruct the first subpicture based on the at least one of the first flag indicating that the first subpicture partitioning information of the first picture is signaled in the syntax structure or the second flag indicating that the first subpicture scaling window information for the first subpicture is signaled in the syntax structure.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the syntax structure is a first picture parameter set (PPS) syntax structure.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>the at least one of the first flag and the second flag includes the first flag, and</claim-text><claim-text>the first flag indicates that the first subpicture partitioning information for the first picture is signaled in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein<claim-text>the first picture includes a plurality of subpictures, the plurality of subpictures including the first subpicture, and</claim-text><claim-text>the processing circuitry is configured to determine, based on the first subpicture partitioning information, a first subpicture layout of the plurality of subpictures in the first picture including a size and a position of each of the plurality of subpictures in the first picture.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processing circuitry is configured to:<claim-text>determine a subpicture identifier (ID) of each subpicture in the first picture based on the first subpicture partitioning information in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein<claim-text>the syntax structure is a first picture parameter set (PPS) syntax structure, and</claim-text><claim-text>the processing circuitry is configured to:<claim-text>decode second subpicture partitioning information signaled in a second PPS syntax structure for a second picture in the CVS; and</claim-text><claim-text>reconstruct second subpictures in the second picture based on the second subpicture partitioning information, a second subpicture layout of the second picture being different from the first subpicture layout of the first picture.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>the first picture is in a first layer in the CVS, and</claim-text><claim-text>the processing circuitry is configured to:<claim-text>decode second subpicture partitioning information signaled in another syntax structure for a second picture in a second layer in the CVS, the second subpicture partitioning information being different from the first subpicture partitioning information; and</claim-text><claim-text>reconstruct second subpictures in the second picture based on the second subpicture partitioning information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>the at least one of the first flag and the second flag includes the second flag, and</claim-text><claim-text>the second flag indicates that the first subpicture scaling window information of the first subpicture is signaled in the syntax structure.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein<claim-text>the at least one of the first flag and the second flag further includes the first flag;</claim-text><claim-text>the first flag indicates that the first subpicture partitioning information is signaled in the syntax structure; and</claim-text><claim-text>the processing circuitry is configured to:<claim-text>decode the first subpicture scaling window information of the first subpicture based on the syntax structure;</claim-text><claim-text>determine dimension information and position information of the first subpicture based on the first subpicture partitioning information; and</claim-text><claim-text>reconstruct the first subpicture based on the first subpicture scaling window information of the first subpicture, the dimension information of the first subpicture, and the position information of the first subpicture.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer-readable storage medium storing a program executable by at least one processor to perform:<claim-text>decoding at least one of a first flag or a second flag in a syntax structure for a first picture in a coded video sequence (CVS), the first picture including a first subpicture, the first flag indicating whether first subpicture partitioning information of the first picture is signaled in the syntax structure, the second flag indicating whether first subpicture scaling window information for the first subpicture is signaled in the syntax structure; and</claim-text><claim-text>reconstructing the first subpicture based on the at least one of the first flag indicating that the first subpicture partitioning information of the first picture is signaled in the syntax structure or the second flag indicating that the first subpicture scaling window information for the first subpicture is signaled in the syntax structure.</claim-text></claim-text></claim></claims></us-patent-application>