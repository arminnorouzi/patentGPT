<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004499A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004499</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17737174</doc-number><date>20220505</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>KR</country><doc-number>10-2021-0086011</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0873</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0868</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0873</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0868</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">APPARATUS AND METHOD FOR EXTRACTING MEMORY MAP INFORMATION FROM FIRMWARE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>ELECTRONICS AND TELECOMMUNICATIONS RESEARCH INSTITUTE</orgname><address><city>Daejeon</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Yong-Je</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Dae-Won</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LEE</last-name><first-name>Sang-Su</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Byeong-Cheol</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>KANG</last-name><first-name>Dong-Wook</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Yang-Seo</first-name><address><city>Daejeon</city><country>KR</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>ELECTRONICS AND TELECOMMUNICATIONS RESEARCH INSTITUTE</orgname><role>03</role><address><city>Daejeon</city><country>KR</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed herein are an apparatus and method for extracting memory map information from firmware. The apparatus includes one or more processors and executable memory for storing at least one program executed by the one or more processors. The at least one program retrieves memory-related data from firmware, sets a data structure by analyzing binary code based on the memory-related data, and retrieves a memory map structure from the firmware using the data structure.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="154.09mm" wi="155.96mm" file="US20230004499A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="102.95mm" wi="86.70mm" file="US20230004499A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="167.30mm" wi="157.99mm" file="US20230004499A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="103.12mm" wi="92.54mm" file="US20230004499A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="97.37mm" wi="58.08mm" file="US20230004499A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="76.88mm" wi="152.74mm" file="US20230004499A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="141.65mm" wi="138.01mm" file="US20230004499A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="115.99mm" wi="157.99mm" file="US20230004499A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="155.19mm" wi="150.62mm" file="US20230004499A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims the benefit of Korean Patent Application No. 10-2021-0086011, filed Jun. 30, 2021, which is hereby incorporated by reference in its entirety into this application.</p><heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading><heading id="h-0003" level="1">1. Technical Field</heading><p id="p-0003" num="0002">The present invention relates generally to firmware reverse-engineering analysis technology, and more particularly to technology for extracting memory map information from firmware.</p><heading id="h-0004" level="1">2. Description of the Related Art</heading><p id="p-0004" num="0003">The use of embedded boards specialized for performing specific functions in a system requiring control is becoming increasingly popular. An embedded board includes firmware mounted therein in order to drive the board. Generally, such firmware may be vulnerable to security issues because it typically does not include a complex operating system (OS) therein. Further, because source code of a board is not provided in many cases, security vulnerabilities must be analyzed through binary code analysis. Memory-map-related information in firmware is essential data at the outset of such analysis, but this kind of information is not usually provided. In this case, extraction of memory-map-related information has to be performed through binary code analysis. Also, because most kinds of firmware are implemented in individual manners, when a target system is changed, an additional analysis process has to be performed therefor.</p><p id="p-0005" num="0004">Meanwhile, Korean Patent No. 10-1995176, titled &#x201c;Method and system for reverse engineering using big data based on program execution context&#x201d;, discloses a method and system for reverse engineering using big data based on a program execution context, which store all program execution contexts and efficiently analyze the stored contexts.</p><heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0006" num="0005">An object of the present invention is to enable memory-map-related information to be easily extracted from firmware.</p><p id="p-0007" num="0006">Another object of the present invention is to provide analysis of security vulnerabilities in firmware.</p><p id="p-0008" num="0007">In order to accomplish the above objects, an apparatus for extracting memory map information from firmware according to an embodiment of the present invention includes one or more processors and executable memory for storing at least one program executed by the one or more processors. The at least one program may retrieve memory-related data from firmware, set a data structure by analyzing binary code based on the memory-related data, and retrieve a memory map structure from the firmware using the data structure.</p><p id="p-0009" num="0008">Here, the at least one program may output a name of data and an address offset thereof, which are retrieved using a predefined memory-related search term, as a memory-related data search result.</p><p id="p-0010" num="0009">Here, the at least one program may further output a reference address value that refers to the address offset as the memory-related data search result.</p><p id="p-0011" num="0010">Here, the at least one program may define a data structure to be used for retrieval of a memory map structure using a structure analyzed based on the memory-related data search result.</p><p id="p-0012" num="0011">Here, the at least one program may retrieve the memory map structure using binary data between a start address and an end address based on which the data structure is defined.</p><p id="p-0013" num="0012">Here, the at least one program may output addresses present around a name address in unstructured data retrieved based on the name of the data.</p><p id="p-0014" num="0013">Also, in order to accomplish the above objects, a method for extracting memory map information from firmware, performed by an apparatus for extracting memory map information from firmware, according to an embodiment of the present invention includes retrieving memory-related data from firmware, defining a data structure by analyzing binary code based on the memory-related data, and retrieving a memory map structure from the firmware using the data structure.</p><p id="p-0015" num="0014">Here, retrieving the memory-related data may comprise outputting a name of data and an address offset thereof, which are retrieved using a predefined memory-related search term, as a memory-related data search result.</p><p id="p-0016" num="0015">Here, retrieving the memory-related data may comprise further outputting a reference address value that refers to the address offset as the memory-related data search result.</p><p id="p-0017" num="0016">Here, defining the data structure may comprise defining a data structure to be used for retrieval of a memory map structure using a structure analyzed based on the memory-related data search result.</p><p id="p-0018" num="0017">Here, retrieving the memory map structure may comprise retrieving the memory map structure using binary data between a start address and an end address based on which the data structure is defined.</p><p id="p-0019" num="0018">Here, retrieving the memory-related data may comprise outputting addresses present around a name address in unstructured data retrieved based on the name of the data.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0020" num="0019">The above and other objects, features, and advantages of the present invention will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings, in which:</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>1</b></figref> and <figref idref="DRAWINGS">FIG. <b>2</b></figref> are flowcharts illustrating a method for extracting memory map information from firmware according to an embodiment of the present invention;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart illustrating in detail an example of the step of retrieving memory-related data, illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a view illustrating memory-map-related search terms predefined in a search term DB according to an embodiment of the present invention;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a view illustrating a result of retrieval of memory-related data according to an embodiment of the present invention;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a view illustrating an analyzed structure and a data structure according to an embodiment of the present invention;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart illustrating a process for retrieving unstructured memory map data according to an embodiment of the present invention; and</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a view illustrating a computer system according to an embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading><p id="p-0028" num="0027">The present invention will be described in detail below with reference to the accompanying drawings. Repeated descriptions and descriptions of known functions and configurations which have been deemed to unnecessarily obscure the gist of the present invention will be omitted below. The embodiments of the present invention are intended to fully describe the present invention to a person having ordinary knowledge in the art to which the present invention pertains. Accordingly, the shapes, sizes, etc. of components in the drawings may be exaggerated in order to make the description clearer.</p><p id="p-0029" num="0028">Throughout this specification, the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising&#x201d; and &#x201c;includes&#x201d; and/or &#x201c;including&#x201d; specify the presence of stated elements but do not preclude the presence or addition of one or more other elements unless otherwise specified.</p><p id="p-0030" num="0029">Hereinafter, a preferred embodiment of the present invention will be described in detail with reference to the accompanying drawings.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>1</b></figref> and <figref idref="DRAWINGS">FIG. <b>2</b></figref> are flowcharts illustrating a method for extracting memory map information from firmware according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart illustrating in detail an example of the step of retrieving memory-related data, illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a view illustrating memory-map-related search terms predefined in a search term DB according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. <b>5</b></figref> is a view illustrating a result of retrieval of memory-related data according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is a view illustrating an analyzed structure and a data structure according to an embodiment of the present invention.</p><p id="p-0032" num="0031">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in the method for extracting memory map information from firmware according to an embodiment of the present invention, first, initial data may be retrieved at step S<b>110</b>.</p><p id="p-0033" num="0032">Also, in the method for extracting memory map information from firmware according to an embodiment of the present invention, structured and unstructured memory map data may be retrieved at step S<b>120</b>.</p><p id="p-0034" num="0033">Here, at step S<b>120</b>, memory map information having a structured form is extracted using the initial data retrieved at step S<b>110</b>, and information that does not correspond thereto may be extracted as unstructured memory map data.</p><p id="p-0035" num="0034">Also, in the method for extracting memory map information from firmware according to an embodiment of the present invention, the result of retrieval of memory map data may be output at step S<b>130</b>.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates in detail the method for extracting memory map information from firmware according to an embodiment of the present invention, illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0037" num="0036">In the method for extracting memory map information from firmware according to an embodiment of the present invention, memory-related data may be retrieved from firmware at step S<b>210</b>.</p><p id="p-0038" num="0037">That is, at step S<b>210</b>, the name of data and the address offset thereof, which are retrieved using predefined memory-related search terms, may be output as a memory-related data search result.</p><p id="p-0039" num="0038">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, at step S<b>210</b>, first, a predefined search term database may be accessed at step S<b>310</b>.</p><p id="p-0040" num="0039">Also, at step S<b>210</b>, the name of data and the address offset thereof may be retrieved using predefined memory-related search terms at step S<b>320</b>.</p><p id="p-0041" num="0040">Here, at step S<b>210</b>, a reference address value that refers to the address offset may additionally be retrieved as the memory-related data search result.</p><p id="p-0042" num="0041">Specific search terms may be used to retrieve all data including a given search term by attaching &#x201c;*&#x201d; thereto.</p><p id="p-0043" num="0042">Also, at step S<b>210</b>, the retrieved data may be output at step S<b>330</b>.</p><p id="p-0044" num="0043">That is, at step S<b>330</b>, the name, the address offset, and the reference address value referring to the address offset may be output as a search result.</p><p id="p-0045" num="0044">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, it can be seen that an example of memory-map-related search terms predefined in a search term database is illustrated.</p><p id="p-0046" num="0045">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, it can be seen that an example in which a retrieved name, a retrieved address offset, and a reference address value referring to the address offset are output as a search result is illustrated.</p><p id="p-0047" num="0046">The search term database is a collection of memory-map-related search terms that are already well known, and a user may add search terms thereto. Here, relevant data that is newly found as a structure search result may also be added to the search term database.</p><p id="p-0048" num="0047">Also, in the method for extracting memory map information from firmware according to an embodiment of the present invention, code and data may be analyzed at step S<b>220</b>.</p><p id="p-0049" num="0048">That is, at step S<b>220</b>, binary code may be analyzed based on the retrieved memory-related data.</p><p id="p-0050" num="0049">Here, at step S<b>220</b>, the form of a structure may be checked by analyzing the address value of the memory-related data using a binary analysis tool, such as Interactive DisAssembler (IDA).</p><p id="p-0051" num="0050">In most firmware, memory map information, which is memory-related data having a structured form, is present in a data region, and memory-related data in an unstructured form may be present in a code region of firmware.</p><p id="p-0052" num="0051">Also, in the method for extracting memory map information from firmware according to an embodiment of the present invention, whether the memory-related data is data in a structured form may be checked as the result of analysis thereof at step S<b>230</b>.</p><p id="p-0053" num="0052">That is, at step S<b>230</b>, when the memory-related data is in a structured form, a data structure may be defined at step S<b>240</b>, whereas when the memory-related data is not in a structured form, search term data may be reconfigured at step S<b>260</b>.</p><p id="p-0054" num="0053">That is, at step S<b>240</b>, a data structure may be defined based on the analysis result.</p><p id="p-0055" num="0054">Here, at step S<b>240</b>, a data structure to be used to retrieve a memory map structure may be defined using a structure analyzed based on the memory-related data search result.</p><p id="p-0056" num="0055">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, it can be seen that an example of the analyzed structure <b>10</b> and a data structure <b>20</b> defined based thereon is illustrated.</p><p id="p-0057" num="0056">The analyzed structure <b>10</b> may include an ID, a name (or name address), memory address region information (a low address, a high address), a flag, and the like. When analysis is performed, a number of pieces of unclear data (unknown) may be present, and when structures are discontinuous or when the name has a variable length, the address of a subsequent structure may be present.</p><p id="p-0058" num="0057">The data structure <b>20</b> is a data structure to be used for retrieval, which is defined based on the analyzed structure <b>10</b>.</p><p id="p-0059" num="0058">In the data structure <b>20</b>, a start address and an end address respectively indicate a start address and an end address to be retrieved, and structures defined for binary data between the start address and the end address are illustrated.</p><p id="p-0060" num="0059">That is, at step S<b>250</b>, a memory map structure may be retrieved from the firmware using the data structure.</p><p id="p-0061" num="0060">Here, at step S<b>250</b>, the memory map structure may be retrieved using the binary data between the start address and the end address based on which the data structure is defined.</p><p id="p-0062" num="0061">Here, at step S<b>250</b>, a number of different forms of structures in a single chunk of binary data may be applied depending on the defined data structure, in which case retrieval may be performed at step S<b>260</b> after a separate data structure is defined again.</p><p id="p-0063" num="0062">Here, at step S<b>250</b>, the search term database used for the initial memory-related data search may be updated with a name included in the memory map structure search result.</p><p id="p-0064" num="0063">At step S<b>260</b>, memory-related data may be retrieved again using the reconfigured search term data at step S<b>270</b>.</p><p id="p-0065" num="0064">Also, in the method for extracting memory map information from firmware according to an embodiment of the present invention, the search result may be output at step S<b>280</b>.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart illustrating a process for retrieving unstructured memory map data according to an embodiment of the present invention.</p><p id="p-0067" num="0066">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, it can be seen that a process for retrieving unstructured memory map data according to an embodiment of the present invention is illustrated in detail as an example of the unstructured data retrieval process at step S<b>120</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0068" num="0067">First, at step S<b>410</b>, unstructured data may be retrieved from firmware.</p><p id="p-0069" num="0068">That is, step S<b>410</b> is performed based on a name included in the initial search result, in which case retrieval may be performed after removing a name that is present in the structured memory map data search result.</p><p id="p-0070" num="0069">Here, at step S<b>410</b>, an address that refers to the name in the initial search result may not be retrieved, and this may be checked only through dynamic debugging.</p><p id="p-0071" num="0070">That is, at step S<b>420</b>, when a reference address is present, the reference address may be output at step S<b>430</b>, whereas when a reference address is not present, addresses present around the name address may be retrieved and output.</p><p id="p-0072" num="0071">These addresses may be the addresses of functions related to the retrieved data when a board actually operates.</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a view illustrating a computer system according to an embodiment of the present invention.</p><p id="p-0074" num="0073">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the apparatus for extracting memory map information from firmware according to an embodiment of the present invention may be implemented in a computer system <b>1100</b> including a computer-readable recording medium. As illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the computer system <b>1100</b> may include one or more processors <b>1110</b>, memory <b>1130</b>, a user-interface input device <b>1140</b>, a user-interface output device <b>1150</b>, and storage <b>1160</b>, which communicate with each other via a bus <b>1120</b>. Also, the computer system <b>1100</b> may further include a network interface <b>1170</b> connected to a network <b>1180</b>. The processor <b>1110</b> may be a central processing unit or a semiconductor device for executing processing instructions stored in the memory <b>1130</b> or the storage <b>1160</b>. The memory <b>1130</b> and the storage <b>1160</b> may be any of various types of volatile or nonvolatile storage media. For example, the memory may include ROM <b>1131</b> or RAM <b>1132</b>.</p><p id="p-0075" num="0074">The apparatus for extracting memory map information from firmware according to an embodiment of the present invention may include one or more processors <b>1110</b> and executable memory <b>1130</b> for storing at least one program executed by the one or more processors <b>1110</b>. The at least one program may retrieve memory-related data from firmware, set a data structure by analyzing binary code based on the memory-related data, and retrieve a memory map structure from the firmware using the data structure.</p><p id="p-0076" num="0075">Here, the at least one program may output the name of data and the address offset thereof, which are retrieved using predefined memory-related search terms, as a memory-related data search result.</p><p id="p-0077" num="0076">Here, the at least one program may further output a reference address value that refers to the address offset as the memory-related data search result.</p><p id="p-0078" num="0077">Here, the at least one program may define a data structure to be used for retrieval of a memory map structure using a structure analyzed based on the memory-related data search result.</p><p id="p-0079" num="0078">Here, the at least one program may retrieve the memory map structure using binary data between a start address and an end address based on which the data structure is defined.</p><p id="p-0080" num="0079">Here, the at least one program may output addresses present around a name address in unstructured data retrieved based on the name of the data.</p><p id="p-0081" num="0080">The present invention may enable memory-map-related information to be easily extracted from firmware.</p><p id="p-0082" num="0081">Also, the present invention may provide analysis of security vulnerabilities in firmware.</p><p id="p-0083" num="0082">As described above, the apparatus and method for extracting memory map information from firmware according to the present invention are not limitedly applied to the configurations and operations of the above-described embodiments, but all or some of the embodiments may be selectively combined and configured, so that the embodiments may be modified in various ways.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus for extracting memory map information from firmware, comprising:<claim-text>one or more processors; and</claim-text><claim-text>executable memory for storing at least one program executed by the one or more processors,</claim-text><claim-text>wherein the at least one program</claim-text><claim-text>retrieves memory-related data from firmware,</claim-text><claim-text>sets a data structure by analyzing binary code based on the memory-related data, and</claim-text><claim-text>retrieves a memory map structure from the firmware using the data structure.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the at least one program outputs a name of data and an address offset thereof, which are retrieved using a predefined memory-related search term, as a memory-related data search result.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein:<claim-text>the at least one program further outputs a reference address value that refers to the address offset as the memory-related data search result.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein:<claim-text>the at least one program defines a data structure to be used for retrieval of a memory map structure using a structure analyzed based on the memory-related data search result.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein:<claim-text>the at least one program retrieves the memory map structure using binary data between a start address and an end address based on which the data structure is defined.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein:<claim-text>the at least one program outputs addresses present around a name address in unstructured data retrieved based on the name of the data.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A method for extracting memory map information from firmware, performed by an apparatus for extracting memory map information from firmware, comprising:<claim-text>retrieving memory-related data from firmware;</claim-text><claim-text>defining a data structure by analyzing binary code based on the memory-related data; and</claim-text><claim-text>retrieving a memory map structure from the firmware using the data structure.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein:<claim-text>retrieving the memory-related data comprises outputting a name of data and an address offset thereof, which are retrieved using a predefined memory-related search term, as a memory-related data search result.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:<claim-text>retrieving the memory-related data comprises further outputting a reference address value that refers to the address offset as the memory-related data search result.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:<claim-text>defining the data structure comprises defining a data structure to be used for retrieval of a memory map structure using a structure analyzed based on the memory-related data search result.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:<claim-text>retrieving the memory map structure comprises retrieving the memory map structure using binary data between a start address and an end address based on which the data structure is defined.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:<claim-text>retrieving the memory-related data comprises outputting addresses present around a name address in unstructured data retrieved based on the name of the data.</claim-text></claim-text></claim></claims></us-patent-application>