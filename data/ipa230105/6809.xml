<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006810A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006810</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942128</doc-number><date>20220910</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>65</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>54</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>568</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>065</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>65</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>547</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0819</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>568</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CACHING AND DELIVERING MEDIA CONTENT FROM MULTIPLE STREAMING PROVIDERS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17029001</doc-number><date>20200922</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11444750</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942128</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Charter Communications Operating, LLC</orgname><address><city>St. Louis</city><state>MO</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Ghessassi</last-name><first-name>Karim</first-name><address><city>PARKER</city><state>CO</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In a system and method for distribution of media content, a cable provider gateway cooperates with a broker API, one or more streaming provider gateways, and one or more streaming applications to locally cache and display media content from the streaming provider gateways even when the streaming applications do not have connectivity to their gateways.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="219.54mm" wi="150.03mm" file="US20230006810A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="223.01mm" wi="152.06mm" file="US20230006810A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="140.38mm" wi="98.64mm" file="US20230006810A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="232.66mm" wi="145.29mm" orientation="landscape" file="US20230006810A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="219.46mm" wi="146.47mm" orientation="landscape" file="US20230006810A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="203.88mm" wi="130.39mm" orientation="landscape" file="US20230006810A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="172.30mm" wi="114.98mm" orientation="landscape" file="US20230006810A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="107.10mm" wi="91.52mm" file="US20230006810A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="233.34mm" wi="101.01mm" orientation="landscape" file="US20230006810A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="231.82mm" wi="163.75mm" file="US20230006810A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="249.34mm" wi="153.84mm" orientation="landscape" file="US20230006810A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="232.58mm" wi="183.73mm" file="US20230006810A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="186.01mm" wi="173.74mm" file="US20230006810A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="168.15mm" wi="106.68mm" file="US20230006810A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="244.60mm" wi="176.19mm" file="US20230006810A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is a continuation, under 37 CFR 1.53(b), of co-assigned U.S. patent application Ser. No. 17/029,001 of first named inventor Karim Ghessassi, and claims the benefit thereof, said application Ser. No. 17/029,001 having been filed on 09-22-2020, and entitled &#x201c;CACHING AND DELIVERING MEDIA CONTENT FROM MULTIPLE STREAMING PROVIDERS.&#x201d; The complete disclosure of the aforesaid application Ser. No. 17/029,001 is expressly incorporated herein by reference in its entirety for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The present invention relates generally to media content delivery, and more particularly relates to continuous delivery of streaming video when a customer has limited internet connectivity.</p><heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0004" num="0003">Historically, the cable network was predominantly a vehicle for delivering entertainment. With the advent of the Internet and the rise in demand for broadband two-way access, the cable industry began to seek new ways of utilizing its existing plant. Pure coaxial (&#x201c;coax&#x201d;) cable networks were replaced with hybrid fiber/coax networks (HFCs) using optical fiber from the head end to the demarcation with the subscriber coax (usually at a fiber node). Currently, a content-based network, a non-limiting example of which is a cable television network, may afford access to a variety of services besides television, for example, broadband Internet access, telephone service, and the like. There are also fiber networks for fiber to the home (FTTH) deployments (also known as fiber to the premises or FTTP, or as fiber to the curb or FTTC), where the consumer premises equipment (CPE) is a Service ONU (S-ONU; ONU=optical network unit).</p><p id="p-0005" num="0004">One significant issue for a cable operator desiring to provide digital service is the configuration of its network. Designed for one-way delivery of broadcast signals, the existing cable network topology was optimized for downstream only (i.e., towards the subscriber) service. New equipment had to be added to the network to provide two-way communication. To reduce the cost of this equipment and to simplify the upgrade of the broadcast cable for two-way digital traffic, standards were developed for a variety of new cable-based services. The first of these standards, the Data Over Cable System Interface Standard (DOCSIS&#xae; standard), was released in 1998. DOCSIS&#xae; establishes standards for cable modems and supporting equipment. DOCSIS&#xae; (Data Over Cable Service Interface Specification) is a registered mark of Cable Television Laboratories, Inc., 400 Centennial Parkway Louisville Colo. 80027, USA, and may be referred to at some points herein in capital letters, without the &#xae; symbol, for convenience.</p><p id="p-0006" num="0005">There are many types of IP networks besides cable networks. Other wired IP networks include, for example, digital subscriber line (DSL), fiber to the home, fiber to the curb, and so on. Wireless IP networks include Wi-Fi, wireless ISP (Internet Service Provider), WiMAX, satellite internet, and mobile broadband.</p><p id="p-0007" num="0006">There is a strong trend of shift in how users prefer to consume video content. The trend is referred to as &#x2018;cable cutting&#x2019; or &#x2018;cord cutting&#x2019; and it mainly involves discontinuing service from traditional providers (cable, satellite, etc.). The alternative options for streaming services include Netflix&#xae; (registered trademark of Netflix, Inc. of Los Gatos, Calif.), Hulu&#xae; and Disney+&#x2122; (trademarks of Disney, Inc. of Burbank, Calif.), etc. These streaming services deliver video content via Internet (TCP/IP) and mainly play back the delivered video via non-proprietary devices running custom applications provided by each streaming service. While the term &#x2018;cable cutting&#x2019; might imply discontinuing all services from the cable company, in fact, the term is not completely accurate. When a cable operator is providing Internet service to a customer, even when video service is not included, using any streaming service still typically involves the cable operator providing broadband data services for Internet connectivity. The shift to streaming services increases loads on the multi-system operator's (MSO's) Internet infrastructure. Principles of &#x2018;net neutrality&#x2019; restrain the MSO from rationing service to the Streaming Providers. Accordingly, some operators impose total monthly data limits on the customer's usage (example: 1 TB per month). Additional fees are assessed if the user exceeds the monthly caps. The customer, in this case, is faced with a new limitation for how much content can be streamed, especially in an era where &#x2018;binge watching&#x2019; is increasingly popular. The streaming applications tend to not have on-site caching (digital video recorder or DVR) capabilities, which limit their usage, especially when Internet connectivity is down.</p><p id="p-0008" num="0007">Due to the nature of content streaming and content serving over the Internet, there is typically a capacity issue. Usage is increased dramatically within a relatively small window (for example, 6:00 PM-10:00 PM). This typically means that the content provider must allocate substantial resources for a short window, since the system users typically expect the quality of video to be high at all times.</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0009" num="0008">Techniques are provided for caching and delivering media content from multiple streaming providers.</p><p id="p-0010" num="0009">In one aspect, a broker Application Programming Interface (API) is implemented at a consumer premises equipment that includes a memory and a processor, connected in communication with a cable provider gateway, a first streaming provider gateway, a second streaming provider gateway, and a Local Area Network (LAN). The broker API receives, from a first streaming application implemented in the LAN, an encrypted request for first media content. The broker API retrieves, from the storage device, a first encrypted manifest of locally stored content. The broker API compares the encrypted request to the first encrypted manifest (the request and the first manifest both are encrypted by a first streaming key, which is known by the first streaming provider gateway and the first streaming application implemented in the LAN, but not known by the broker API, the second streaming provider gateway, the cable provider gateway, and a second streaming application). In response to a match between the encrypted request and the first encrypted manifest, the broker API retrieves, from the storage device, the first media content that is encrypted by the first streaming key. The broker API delivers the encrypted first media content to the first streaming application.</p><p id="p-0011" num="0010">In another aspect, a streaming application implements a method for caching and delivering media content from multiple streaming providers. The streaming application receives a consumer selection of first content from a user via a first streaming application User Interface (UI), generates a first encrypted content selection by encrypting the consumer selection of first content using a first streaming key, and transmits the first encrypted content selection to a broker Application Programming Interface (API) that is implemented in a Local Area Network (LAN) in communication with the first streaming application; the broker API does not know the first streaming key. The streaming application receives, from the broker API, encrypted first content corresponding to the first encrypted content selection, and generates first content by decrypting the encrypted first content using the first streaming key. The first streaming application displays the first content to the user via the first streaming application UI.</p><p id="p-0012" num="0011">According to another aspect, a streaming provider gateway implements a method for proactively delivering media content to a subscriber streaming application. The streaming provider gateway receives from the subscriber streaming application an encrypted selection of first media content to be consumed. The selection is encrypted by a first streaming key, which the streaming provider gateway and the subscriber streaming application know. The streaming provider gateway encrypts the first media content by the first streaming key. The streaming provider gateway pushes the encrypted first media content to a cable provider gateway (&#x201c;back end&#x201d;) that does not know the first streaming key. The streaming provider gateway uses a recommendation engine to identify second media content corresponding to the first media content, and encrypts the second media content by the first streaming key. The streaming provider gateway pushes the encrypted second media content from the streaming provider gateway to the cable provider gateway before the subscriber streaming application requests it.</p><p id="p-0013" num="0012">According to another aspect, a cable provider gateway and a broker API implement methods for locally storing and delivering encrypted content. The cable provider gateway receives a first diff file that is pushed from a first streaming provider gateway. The first diff file includes first content and an updated manifest that are encrypted by a first streaming key. The first streaming provider gateway and a first streaming application know the first streaming key but the cable provider gateway does not know the first streaming key. The cable provider gateway pushes the first diff file through a consumer premises equipment to local storage. The broker API receives an encrypted selection of media content from the first streaming application. The encrypted selection of media content is encrypted by the first streaming key, which the broker API does not know. The broker API matches the encrypted selection to the updated encrypted manifest in the local storage. The broker API retrieves the encrypted first content from the local storage in response to the encrypted selection. Then the broker API delivers the encrypted first content to the first streaming application via the LAN.</p><p id="p-0014" num="0013">According to another aspect, a broker API and a streaming application implement methods for locally caching and displaying media content. The methods include implementing a broker Application Programming Interface (API) at a consumer premises equipment that includes a memory and a processor, connected in communication with a cable provider gateway, a first streaming provider gateway, a second streaming provider gateway, and a Local Area Network (LAN), and implementing a streaming application in the LAN. The broker API retrieves from the storage device a first encrypted manifest of locally stored content, which is encrypted using a first streaming key. The first streaming application receives a consumer selection of first content from a user via a first streaming application User Interface (UI), generates a first encrypted request by encrypting the consumer selection of first content using the first streaming key, and transmits the first encrypted request to the broker API. The broker API does not know the first streaming key. The broker API receives the first encrypted request. The broker API compares the first encrypted request to the first encrypted manifest. In response to a match between the first encrypted request and the first encrypted manifest, the broker API retrieves from the storage device the first media content that is encrypted by the first streaming key. The broker API delivers the encrypted first media content to the first streaming application. The first streaming application receives the encrypted first media content and generates first content by decrypting the encrypted first media content using the first streaming key. The first streaming application then displays the first content to the user via the first streaming application UI.</p><p id="p-0015" num="0014">According to another aspect, a system for caching and delivering media content from multiple streaming providers includes a storage device that implements a broker Application Programming Interface (API) and a display device that implements a streaming application. The broker API is configured to: receive from the streaming application an encrypted request for first media content; retrieve from the storage device, a first encrypted manifest of locally stored content; compare the encrypted request to the first encrypted manifest, wherein the request and the first manifest both are encrypted by a first streaming key, which is known by the streaming application, but not known by the broker API; in response to a match between the encrypted request and the first encrypted manifest, retrieve from the storage device the first media content that is encrypted by the first streaming key; and deliver the encrypted first media content by the broker API to the first streaming application. The streaming application is configured to: receive a consumer selection of first content via a streaming application User Interface (UI); generate the encrypted request by encrypting the consumer selection of first content using the first streaming key; transmit the encrypted request to the broker API; receive, from the broker API, encrypted first media content that corresponds to the encrypted request; generate first content by decrypting the encrypted first media content using the first streaming key; and display the first content to the user via the streaming application UI.</p><p id="p-0016" num="0015">As used herein, &#x201c;facilitating&#x201d; an action includes performing the action, making the action easier, helping to carry the action out, or causing the action to be performed. Thus, by way of example and not limitation, instructions executing on one processor might facilitate an action carried out by instructions executing on a remote processor, by sending appropriate data or commands to cause or aid the action to be performed. For the avoidance of doubt, where an actor facilitates an action by other than performing the action, the action is nevertheless performed by some entity or combination of entities.</p><p id="p-0017" num="0016">One or more embodiments of the invention or elements thereof can be implemented in the form of an article of manufacture including a machine readable medium that contains one or more programs which when executed implement one or more method steps set forth herein; that is to say, a computer program product including a tangible computer readable recordable storage medium (or multiple such media) with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention or elements thereof can be implemented in the form of an apparatus (e.g., a storage device on a local area network (LAN) in a premises; exemplary devices include a cable modem, Network Attached Storage (NAS), a Wi-Fi hot spot device, an optical network unit (e.g. S-ONU), and the like&#x2014;in each case with suitable processing capability, and typically an MSO-provided device in a home LAN) including a memory and at least one processor that is coupled to the memory and operative to perform, or facilitate performance of, exemplary method steps. Yet further, in another aspect, one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein; the means can include (i) specialized hardware module(s), (ii) software and/or firmware module(s) stored in a tangible computer-readable recordable storage medium (or multiple such media) and implemented on a hardware processor, or (iii) a combination of (i) and (ii); any of (i)-(iii) implement the specific techniques set forth herein. The means do not include a transmission medium per se or a disembodied signal per se.</p><p id="p-0018" num="0017">Techniques of the present invention can provide substantial beneficial technical effects. For example, one or more embodiments provide one or more of:</p><p id="p-0019" num="0018">For the Cable Provider: Less bandwidth is required for customers using streaming services from a multitude of providers. The reduction results in savings in capacity build up, maintenance, labor, etc. Ability to offer capacity as an add-on to streaming providers as a (paid) service.</p><p id="p-0020" num="0019">For the Streaming Provider: Better experience with potentially fewer buffering messages for the user as some (or most) or the content comes from local storage (internal to the cable modem, or connected in communication with the cable modem, e.g., smart TV, home file server, etc.). Ability to share content from nearby users eliminating the need for additional network upgrades.</p><p id="p-0021" num="0020">For the User: Enhanced experience with the potential of reduction of bandwidth used against imposed cap on the Internet bandwidth usage. Furthermore, the user is able to use participating streaming applications even in offline mode.</p><p id="p-0022" num="0021">These and other features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an exemplary embodiment of a system, within which one or more aspects of the invention can be implemented.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a functional block diagram illustrating an exemplary hybrid fiber-coaxial (HFC) divisional network configuration, useful within the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram illustrating one exemplary HFC cable network head-end configuration, useful within the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a functional block diagram illustrating one exemplary local service node configuration useful within the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a functional block diagram of a premises network, including an exemplary centralized customer premises equipment (CPE) unit, interfacing with a head end such as that of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of one exemplary embodiment of the CPE of <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of a computer system useful in connection with one or more aspects of the invention;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a functional block diagram illustrating an exemplary FTTH system, which is one exemplary system within which one or more embodiments could be employed;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a functional block diagram of an exemplary centralized S-ONU CPE unit interfacing with the system of <figref idref="DRAWINGS">FIG. <b>8</b></figref>;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a schematic of consumer premises equipment (CPE) including a cable modem that implements a broker API for interfacing with a local storage unit, connected in communication with a cable operator gateway (head end) and a plurality of streaming provider gateways;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flowchart of a method implemented by a streaming application using the broker API of <figref idref="DRAWINGS">FIG. <b>10</b></figref>;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a flowchart of a method implemented by the streaming application, a streaming provider gateway, and cable provider gateway using the broker API of <figref idref="DRAWINGS">FIG. <b>10</b></figref>;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a flowchart of a method implemented using a streaming provider's recommendation engine;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a flowchart of a file handling method implemented by a cable provider gateway according to an exemplary embodiment; and</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart of a method implemented by the broker API according to an exemplary embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading><p id="p-0038" num="0037">As noted, IP-based data services may be provided over a variety of networks. Purely by way of example and not limitation, some embodiments will be shown in the context of a cable multi-service operator (MSO) providing data services as well as entertainment services. <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an exemplary system <b>1000</b>, according to an aspect of the invention. System <b>1000</b> includes a regional data center (RDC) <b>1048</b> coupled to several Market Center Head Ends (MCHEs) <b>1096</b>; each MCHE <b>1096</b> is in turn coupled to one or more divisions, represented by division head ends <b>150</b>. In a non-limiting example, the MCHEs are coupled to the RDC <b>1048</b> via a network of switches and routers. One suitable example of network <b>1046</b> is a dense wavelength division multiplex (DWDM) network. The MCHEs can be employed, for example, for large metropolitan area. In addition, the MCHE is connected to localized HEs <b>150</b> via high-speed routers <b>1091</b> (&#x201c;HER&#x201d;=head end router) and a suitable network, which could, for example, also utilize DWDM technology. Elements <b>1048</b>, <b>1096</b> on network <b>1046</b> may be operated, for example, by or on behalf of a cable MSO, and may be interconnected with a global system of interconnected computer networks that use the standardized Internet Protocol Suite (TCP/IP)(transfer control protocol/Internet protocol), commonly called the Internet <b>1002</b>; for example, via router <b>1008</b>. In one or more non-limiting exemplary embodiments, router <b>1008</b> is a point-of-presence (&#x201c;POP&#x201d;) router; for example, of the kind available from Juniper Networks, Inc., Sunnyvale, Calif., USA.</p><p id="p-0039" num="0038">Head end routers <b>1091</b> are omitted from figures below to avoid clutter, and not all switches, routers, etc. associated with network <b>1046</b> are shown, also to avoid clutter.</p><p id="p-0040" num="0039">RDC <b>1048</b> may include one or more provisioning servers (PS) <b>1050</b>, one or more Video Servers (VS) <b>1052</b>, one or more content servers (CS) <b>1054</b>, and one or more e-mail servers (ES) <b>1056</b>. The same may be interconnected to one or more RDC routers (RR) <b>1060</b> by one or more multi-layer switches (MLS) <b>1058</b>. RDC routers <b>1060</b> interconnect with network <b>1046</b>.</p><p id="p-0041" num="0040">A national data center (NDC) <b>1098</b> is provided in some instances; for example, between router <b>1008</b> and Internet <b>1002</b>. In one or more embodiments, such an NDC may consolidate at least some functionality from head ends (local and/or market center) and/or regional data centers. For example, such an NDC might include one or more VOD servers; switched digital video (SDV) functionality; gateways to obtain content (e.g., program content) from various sources including cable feeds and/or satellite; and so on.</p><p id="p-0042" num="0041">In some cases, there may be more than one national data center <b>1098</b> (e.g., two) to provide redundancy. There can be multiple regional data centers <b>1048</b>. In some cases, MCHEs could be omitted and the local head ends <b>150</b> coupled directly to the RDC <b>1048</b>.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a functional block diagram illustrating an exemplary content-based (e.g., hybrid fiber-coaxial (HFC)) divisional network configuration, useful within the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. See, for example, US Patent Publication 2006/0130107 of Gonder et al., entitled &#x201c;Method and apparatus for high bandwidth data transmission in content-based networks,&#x201d; the complete disclosure of which is expressly incorporated by reference herein in its entirety for all purposes. The various components of the network <b>100</b> include (i) one or more data and application origination points <b>102</b>; (ii) one or more application distribution servers <b>104</b>; (iii) one or more video-on-demand (VOD) servers <b>105</b>, and (v) consumer premises equipment or customer premises equipment (CPE) <b>106</b>. The distribution server(s) <b>104</b>, VOD servers <b>105</b> and CPE(s) <b>106</b> are connected via a bearer (e.g., HFC) network <b>101</b>. Servers <b>104</b>, <b>105</b> can be located in head end <b>150</b>. A simple architecture is shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> for illustrative brevity, although it will be recognized that comparable architectures with multiple origination points, distribution servers, VOD servers, and/or CPE devices (as well as different network topologies) may be utilized consistent with embodiments of the invention. For example, the head-end architecture of <figref idref="DRAWINGS">FIG. <b>3</b></figref> (described in greater detail below) may be used.</p><p id="p-0044" num="0043">The data/application origination point <b>102</b> comprises any medium that allows data and/or applications (such as a VOD-based or &#x201c;Watch TV&#x201d; application) to be transferred to a distribution server <b>104</b>, for example, over network <b>1102</b>. This can include for example a third-party data source, application vendor website, compact disk read-only memory (CD-ROM), external network interface, mass storage device (e.g., Redundant Arrays of Inexpensive Disks (RAID) system), etc. Such transference may be automatic, initiated upon the occurrence of one or more specified events (such as the receipt of a request packet or acknowledgement (ACK)), performed manually, or accomplished in any number of other modes readily recognized by those of ordinary skill, given the teachings herein. For example, in one or more embodiments, network <b>1102</b> may correspond to network <b>1046</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and the data and application origination point may be, for example, within NDC <b>1098</b>, RDC <b>1048</b>, or on the Internet <b>1002</b>. Head end <b>150</b>, HFC network <b>101</b>, and CPEs <b>106</b> thus represent the divisions which were represented by division head ends <b>150</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0045" num="0044">The application distribution server <b>104</b> comprises a computer system where such applications can enter the network system. Distribution servers per se are well known in the networking arts, and accordingly not described further herein.</p><p id="p-0046" num="0045">The VOD server <b>105</b> comprises a computer system where on-demand content can be received from one or more of the aforementioned data sources <b>102</b> and enter the network system. These servers may generate the content locally, or alternatively act as a gateway or intermediary from a distant source.</p><p id="p-0047" num="0046">The CPE <b>106</b> includes any equipment in the &#x201c;customers' premises&#x201d; (or other appropriate locations) that can be accessed by a distribution server <b>104</b> or a cable modem termination system <b>156</b> (discussed below with regard to <figref idref="DRAWINGS">FIG. <b>3</b></figref>). Non-limiting examples of CPE are set-top boxes and high-speed cable modems for providing high bandwidth Internet access in premises such as homes and businesses.</p><p id="p-0048" num="0047">Also included (for example, in head end <b>150</b>) is a dynamic bandwidth allocation device (DBWAD) <b>1001</b> such as a global session resource manager, which is itself a non-limiting example of a session resource manager.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram illustrating one exemplary HFC cable network head-end configuration, useful within the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the head-end architecture <b>150</b> comprises typical head-end components and services including billing module <b>152</b>, subscriber management system (SMS) and CPE configuration management module <b>3308</b>, cable-modem termination system (CMTS) and out-of-band (<b>00</b>B) system <b>156</b>, as well as LAN(s) <b>158</b>, <b>160</b> placing the various components in data communication with one another. In one or more embodiments, there are multiple CMTSs. Each may be coupled to an HER <b>1091</b>, for example. See, e.g., <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> of co-assigned U.S. Pat. No. 7,792,963 of inventors Gould and Danforth, entitled METHOD TO BLOCK UNAUTHORIZED NETWORK TRAFFIC IN A CABLE DATA NETWORK, the complete disclosure of which is expressly incorporated herein by reference in its entirety for all purposes.</p><p id="p-0050" num="0049">It will be appreciated that while a bar or bus LAN topology is illustrated, any number of other arrangements (e.g., ring, star, etc.) may be used consistent with the invention. It will also be appreciated that the head-end configuration depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is high-level, conceptual architecture and that each multi-service operator (MSO) may have multiple head-ends deployed using custom architectures.</p><p id="p-0051" num="0050">The architecture <b>150</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref> further includes a multiplexer/encrypter/modulator (MEM) <b>162</b> coupled to the HFC network <b>101</b> adapted to &#x201c;condition&#x201d; content for transmission over the network. The distribution servers <b>104</b> are coupled to the LAN <b>160</b>, which provides access to the MEM <b>162</b> and network <b>101</b> via one or more file servers <b>170</b>. The VOD servers <b>105</b> are coupled to the LAN <b>158</b>, although other architectures may be employed (such as for example where the VOD servers are associated with a core switching device such as an 802.3z Gigabit Ethernet device; or the VOD servers could be coupled to LAN <b>160</b>). Since information is typically carried across multiple channels, the head-end should be adapted to acquire the information for the carried channels from various sources. Typically, the channels being delivered from the head-end <b>150</b> to the CPE <b>106</b> (&#x201c;downstream&#x201d;) are multiplexed together in the head-end and sent to neighborhood hubs (refer to description of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) via a variety of interposed network components.</p><p id="p-0052" num="0051">Content (e.g., traditional audio, traditional (as distinguished from IPTV) video, etc.) is provided in each downstream (in-band) channel associated with the relevant service group. (Note that in the context of data communications, internet data is passed both downstream and upstream.) To communicate with the head-end or intermediary node (e.g., hub server), the CPE <b>106</b> may use the out-of-band (<b>00</b>B) or DOCSIS&#xae; (Data Over Cable Service Interface Specification) channels (registered mark of Cable Television Laboratories, Inc., 400 Centennial Parkway Louisville Colo. 80027, USA) and associated protocols (e.g., DOCSIS 1.x, 2.0. or 3.0). The OpenCable&#x2122; Application Platform (OCAP) 1.0, 2.0, 3.0 (and subsequent) specification (Cable Television laboratories Inc.) provides for exemplary networking protocols both downstream and upstream, although the invention is in no way limited to these approaches. All versions of the DOCSIS and OCAP specifications are expressly incorporated herein by reference in their entireties for all purposes.</p><p id="p-0053" num="0052">Furthermore in this regard, DOCSIS is an international telecommunications standard that permits the addition of high-speed data transfer to an existing cable TV (CATV) system. It is employed by many cable television operators to provide Internet access (cable Internet) over their existing hybrid fiber-coaxial (HFC) infrastructure. Use of DOCSIS to transmit data (including IPTV) on an HFC system is one non-limiting exemplary context associated with one or more embodiments. However, one or more embodiments are generally applicable to IPTV, regardless of what kind of functionality is employed.</p><p id="p-0054" num="0053">It will also be recognized that multiple servers (broadcast, VOD, or otherwise) can be used, and disposed at two or more different locations if desired, such as being part of different server &#x201c;farms&#x201d;. These multiple servers can be used to feed one service group, or alternatively different service groups. In a simple architecture, a single server is used to feed one or more service groups. In another variant, multiple servers located at the same location are used to feed one or more service groups. In yet another variant, multiple servers disposed at different location are used to feed one or more service groups.</p><p id="p-0055" num="0054">In some instances, material may also be obtained from a satellite feed <b>1108</b>; such material is demodulated and decrypted in block <b>1106</b> and fed to block <b>162</b>. Conditional access system <b>157</b> may be provided for access control purposes. Network management system <b>1110</b> may provide appropriate management functions. Note also that signals from MEM <b>162</b> and upstream signals from network <b>101</b> that have been demodulated and split in block <b>1112</b> are fed to CMTS and <b>00</b>B system <b>156</b>.</p><p id="p-0056" num="0055">Also included in <figref idref="DRAWINGS">FIG. <b>3</b></figref> are a global session resource manager (GSRM) <b>3302</b>, a Mystro Application Server <b>104</b>A, and a business management system <b>154</b>, all of which are coupled to LAN <b>158</b>. GSRM <b>3302</b> is one specific form of a DBWAD <b>1001</b> and is a non-limiting example of a session resource manager.</p><p id="p-0057" num="0056">An ISP DNS server could be located in the head-end as shown at <b>3303</b>, but it can also be located in a variety of other places. One or more DHCP server(s) <b>3304</b> can also be located where shown or in different locations.</p><p id="p-0058" num="0057">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the network <b>101</b> of <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref> comprises a fiber/coax arrangement wherein the output of the MEM <b>162</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref> is transferred to the optical domain (such as via an optical transceiver <b>177</b> at the head-end <b>150</b> or further downstream). The optical domain signals are then distributed over a fiber network to a fiber node <b>178</b>, which further distributes the signals over a distribution network <b>180</b> (typically coax) to a plurality of local servicing nodes <b>182</b>. This provides an effective 1-to-N expansion of the network at the local service end. Each node <b>182</b> services a number of CPEs <b>106</b>. Further reference may be had to US Patent Publication 2007/0217436 of Markley et al., entitled &#x201c;Methods and apparatus for centralized content and data delivery,&#x201d; the complete disclosure of which is expressly incorporated herein by reference in its entirety for all purposes. In one or more embodiments, the CPE <b>106</b> includes a cable modem, such as a DOCSIS-compliant cable modem (DCCM). Please note that the number of CPE <b>106</b> per node <b>182</b> may be different than the number of nodes <b>182</b>.</p><p id="p-0059" num="0058">US Patent Publication 2010-0313236 of Albert Straub, entitled &#x201c;TECHNIQUES FOR UPGRADING SOFTWARE IN A VIDEO CONTENT NETWORK,&#x201d; the complete disclosure of which is expressly incorporated herein by reference for all purposes, provides additional details on the aforementioned dynamic bandwidth allocation device 1001.</p><p id="p-0060" num="0059">US Patent Publication 2009-0248794 of William L. Helms, entitled &#x201c;SYSTEM AND METHOD FOR CONTENT SHARING,&#x201d; the complete disclosure of which is expressly incorporated herein by reference for all purposes, provides additional details on CPE in the form of a converged premises gateway device. Related aspects are also disclosed in US Patent Publication 2007-0217436 of Markley et al, entitled &#x201c;METHODS AND APPARATUS FOR CENTRALIZED CONTENT AND DATA DELIVERY,&#x201d; the complete disclosure of which is expressly incorporated herein by reference for all purposes.</p><p id="p-0061" num="0060">Reference should now be had to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, which presents a block diagram of a premises network interfacing with a head end of an MSO or the like, providing Internet access. An exemplary advanced wireless gateway comprising CPE <b>106</b> is depicted as well. It is to be emphasized that the specific form of CPE <b>106</b> shown in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref> is exemplary and non-limiting, and shows a number of optional features. Many other types of CPE can be employed in one or more embodiments; for example, a cable modem, DSL modem, and the like.</p><p id="p-0062" num="0061">CPE <b>106</b> includes an advanced wireless gateway which connects to a head end <b>150</b> or other hub of a network, such as a video content network of an MSO or the like. The head end is coupled also to an internet (e.g., the Internet) <b>208</b> which is located external to the head end <b>150</b>, such as via an Internet (IP) backbone or gateway (not shown).</p><p id="p-0063" num="0062">The head end is in the illustrated embodiment coupled to multiple households or other premises, including the exemplary illustrated household <b>240</b>. In particular, the head end (for example, a cable modem termination system <b>156</b> thereof) is coupled via the aforementioned HFC network and local coaxial cable or fiber drop to the premises, including the consumer premises equipment (CPE) <b>106</b>. The exemplary CPE <b>106</b> is in signal communication with any number of different devices including, e.g., a wired telephony unit <b>222</b>, a Wi-Fi or other wireless-enabled phone <b>224</b>, a Wi-Fi or other wireless-enabled laptop <b>226</b>, a session initiation protocol (SIP) phone, an H.323 terminal or gateway, etc. Additionally, the CPE <b>106</b> is also coupled to a digital video recorder (DVR) <b>228</b> (e.g., over coax), in turn coupled to television <b>234</b> via a wired or wireless interface (e.g., cabling, PAN or 802.15 UWB micro-net, etc.). CPE <b>106</b> is also in communication with a network (here, an Ethernet network compliant with IEEE Std. 802.3, although any number of other network protocols and topologies could be used) on which is a personal computer (PC) <b>232</b>.</p><p id="p-0064" num="0063">Other non-limiting exemplary devices that CPE <b>106</b> may communicate with include a printer <b>294</b>; for example, over a universal plug and play (UPnP) interface, and/or a game console <b>292</b>; for example, over a multimedia over coax alliance (MoCA) interface. Game console <b>292</b> is one example of a game console that could be used to watch IPTV in accordance with aspects of the invention. However, game consoles on which one or more embodiments are to be practiced can be connected to the Internet in many ways; an HFC network providing high-speed IP data in addition to traditional video content is merely one non-limiting exemplary embodiment. Game console <b>292</b> could be connected to CPE <b>106</b> by, for example, Ethernet, Wi-Fi, or MoCA (e.g. via a MoCA-to-Ethernet bridge). All types of game consoles may not necessarily be capable of connection via all of Ethernet, Wi-Fi, and MoCA. Some embodiments employ a Microsoft Xbox console as game console <b>292</b>. Furthermore, as noted, other embodiments employ alternative platforms such as the Roku box or other media streamers; the same can be connected to CPE <b>106</b> instead of or in addition to gaming console <b>292</b>.</p><p id="p-0065" num="0064">In some instances, CPE <b>106</b> is also in signal communication with one or more roaming devices, generally represented by block <b>290</b>.</p><p id="p-0066" num="0065">A &#x201c;home LAN&#x201d; (HLAN) is created in the exemplary embodiment, which may include for example the network formed over the installed coaxial cabling in the premises, the Wi-Fi network, and so forth.</p><p id="p-0067" num="0066">During operation, the CPE <b>106</b> exchanges signals with the head end over the interposed coax (and/or other, e.g., fiber) bearer medium. The signals include e.g., IPTV or other Internet traffic (IPv4 or IPv6), digital programming and other digital signaling or content such as digital (packet-based; e.g., VoIP) telephone service. The CPE <b>106</b> then exchanges this digital information after demodulation and any decryption (and any demultiplexing) to the particular system(s) to which it is directed or addressed. For example, in one embodiment, a MAC address or IP address can be used as the basis of directing traffic within the client-side environment <b>240</b>.</p><p id="p-0068" num="0067">Any number of different data flows may occur within the network depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. For example, the CPE <b>106</b> may exchange digital telephone signals from the head end which are further exchanged with the telephone unit <b>222</b>, the Wi-Fi phone <b>224</b>, or one or more roaming devices <b>290</b>. The digital telephone signals may be IP-based such as Voice-over-IP (VoIP), or may utilize another protocol or transport mechanism. The well-known session initiation protocol (SIP) may be used, for example, in the context of a &#x201c;SIP phone&#x201d; for making multi-media calls. The network may also interface with a cellular or other wireless system, such as for example a 3G IMS (IP multimedia subsystem) system, in order to provide multimedia calls between a user or consumer in the household domain <b>240</b> (e.g., using a SIP phone or H.323 terminal) and a mobile <b>3</b>G telephone or personal media device (PMD) user via that user's radio access network (RAN).</p><p id="p-0069" num="0068">The CPE <b>106</b> may also exchange Internet traffic (e.g., TCP/IP and other packets) with the head end <b>150</b> which is further exchanged with the Wi-Fi laptop <b>226</b>, the PC <b>232</b>, one or more roaming devices <b>290</b>, the gaming console <b>292</b>, or other device (e.g., media streamer). CPE <b>106</b> may also receive digital programming that is forwarded to the DVR <b>228</b> or to the television <b>234</b>. Programming requests and other control information may be received by the CPE <b>106</b> and forwarded to the head end as well for appropriate handling.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of one exemplary embodiment of the CPE <b>106</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>. The exemplary CPE <b>106</b> includes an RF front end <b>301</b>, Wi-Fi interface <b>302</b>, video interface <b>316</b>, &#x201c;Plug n&#x2032; Play&#x201d; (PnP) interface <b>318</b> (for example, a UPnP interface) and Ethernet interface <b>304</b>, each directly or indirectly coupled to a bus <b>312</b>. In some cases, Wi-Fi interface <b>302</b> comprises a single wireless access point (WAP) running multiple (&#x201c;m&#x201d;) service set identifiers (SSIDs). In some cases, multiple SSIDs, which could represent different applications, are served from a common WAP. For example, SSID <b>1</b> is for the home user, while SSID <b>2</b> may be for a managed security service, SSID <b>3</b> may be a managed home networking service, SSID <b>4</b> may be a hot spot, and so on. Each of these is on a separate IP subnetwork for security, accounting, and policy reasons. The microprocessor <b>306</b>, storage unit <b>308</b>, plain old telephone service (POTS)/public switched telephone network (PSTN) interface <b>314</b>, and memory unit <b>310</b> are also coupled to the exemplary bus <b>312</b>, as is a suitable MoCA interface <b>391</b>. The memory unit <b>310</b> typically comprises a random-access memory (RAM) and storage unit <b>308</b> typically comprises a hard disk drive, an optical drive (e.g., CD-ROM or DVD), NAND flash memory, RAID (redundant array of inexpensive disks) configuration, or some combination thereof</p><p id="p-0071" num="0070">The illustrated CPE <b>106</b> can assume literally any discrete form factor, including those adapted for desktop, floor-standing, or wall-mounted use, or alternatively may be integrated in whole or part (e.g., on a common functional basis) with other devices if desired.</p><p id="p-0072" num="0071">Again, it is to be emphasized that every embodiment need not necessarily have all the elements shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>&#x2014;as noted, the specific form of CPE <b>106</b> shown in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref> is exemplary and non-limiting, and shows a number of optional features. Yet again, many other types of CPE can be employed in one or more embodiments; for example, a cable modem, DSL modem, and the like.</p><p id="p-0073" num="0072">It will be recognized that while a linear or centralized bus architecture is shown as the basis of the exemplary embodiment of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, other bus architectures and topologies may be used. For example, a distributed or multi-stage bus architecture may be employed. Similarly, a &#x201c;fabric&#x201d; or other mechanism (e.g., crossbar switch, RAPIDIO interface, non-blocking matrix, TDMA or multiplexed system, etc.) may be used as the basis of at least some of the internal bus communications within the device. Furthermore, many if not all of the foregoing functions may be integrated into one or more integrated circuit (IC) devices in the form of an ASIC or &#x201c;system-on-a-chip&#x201d; (SoC). Myriad other architectures well known to those in the data processing and computer arts may accordingly be employed.</p><p id="p-0074" num="0073">Yet again, it will also be recognized that the CPE configuration shown is essentially for illustrative purposes, and various other configurations of the CPE <b>106</b> are consistent with other embodiments of the invention. For example, the CPE <b>106</b> in <figref idref="DRAWINGS">FIG. <b>6</b></figref> may not include all of the elements shown, and/or may include additional elements and interfaces such as for example an interface for the HomePlug A/V standard which transmits digital data over power lines, a PAN (e.g., 802.15), Bluetooth, or other short-range wireless interface for localized data communication, etc.</p><p id="p-0075" num="0074">A suitable number of standard 10/100/1000 Base T Ethernet ports for the purpose of a Home LAN connection are provided in the exemplary device of <figref idref="DRAWINGS">FIG. <b>6</b></figref>; however, it will be appreciated that other rates (e.g., Gigabit Ethernet or 10-Gig-E) and local networking protocols (e.g., MoCA, USB, etc.) may be used. These interfaces may be serviced via a WLAN interface, wired RJ-45 ports, or otherwise. The CPE <b>106</b> can also include a plurality of RJ-11 ports for telephony interface, as well as a plurality of USB (e.g., USB 2.0) ports, and IEEE-1394 (Firewire) ports. S-video and other signal interfaces may also be provided if desired.</p><p id="p-0076" num="0075">During operation of the CPE <b>106</b>, software located in the storage unit <b>308</b> is run on the microprocessor <b>306</b> using the memory unit <b>310</b> (e.g., a program memory within or external to the microprocessor). The software controls the operation of the other components of the system, and provides various other functions within the CPE. Other system software/firmware may also be externally reprogrammed, such as using a download and reprogramming of the contents of the flash memory, replacement of files on the storage device or within other non-volatile storage, etc. This allows for remote reprogramming or reconfiguration of the CPE <b>106</b> by the MSO or other network agent.</p><p id="p-0077" num="0076">The RF front end <b>301</b> of the exemplary embodiment comprises a cable modem of the type known in the art. In some cases, the CPE just includes the cable modem and omits the optional features. Content or data normally streamed over the cable modem can be received and distributed by the CPE <b>106</b>, such as for example packetized video (e.g., IPTV). The digital data exchanged using RF front end <b>301</b> includes IP or other packetized protocol traffic that provides access to interne service. As is well known in cable modem technology, such data may be streamed over one or more dedicated QAMs resident on the HFC bearer medium, or even multiplexed or otherwise combined with QAMs allocated for content delivery, etc. The packetized (e.g., IP) traffic received by the CPE <b>106</b> may then be exchanged with other digital systems in the local environment <b>240</b> (or outside this environment by way of a gateway or portal) via, e.g. the Wi-Fi interface <b>302</b>, Ethernet interface <b>304</b>, MoCA interface <b>391</b>, or plug-and-play (PnP) interface <b>318</b>.</p><p id="p-0078" num="0077">Additionally, the RF front end <b>301</b> modulates, encrypts/multiplexes as required, and transmits digital information for receipt by upstream entities such as the CMTS or a network server. This includes upstream commands from Xbox or other game console <b>292</b>. In one or more embodiments, the Xbox or other game console does not communicate directly with the RF Front End <b>301</b>; rather, it communicates with the RF Front End <b>301</b> over Ethernet <b>304</b> or Wi-Fi <b>302</b>. Upstream commands from the Xbox or other game console <b>292</b> are sent to the RF Front End over Ethernet <b>304</b> or Wi-Fi <b>302</b> and then upstream into the network, from the RF Front End <b>301</b>, via DOCSIS or the like. Digital data transmitted via the RF front end <b>301</b> may include, for example, MPEG-2 encoded programming data that is forwarded to a television monitor via the video interface <b>316</b>. Programming data may also be stored on the CPE storage unit <b>308</b> for later distribution by way of the video interface <b>316</b>, or using the Wi-Fi interface <b>302</b>, Ethernet interface <b>304</b>, Firewire (IEEE Std. 1394), USB/USB2, or any number of other such options.</p><p id="p-0079" num="0078">Other devices such as portable music players (e.g., MP3 audio players) may be coupled to the CPE <b>106</b> via any number of different interfaces, and music and other media files downloaded for portable use and viewing.</p><p id="p-0080" num="0079">In some instances, the CPE <b>106</b> includes a DOCSIS cable modem for delivery of traditional broadband Internet services. This connection can be shared by all Internet devices in the premises <b>240</b>; e.g. Internet protocol television (IPTV) devices, PCs, laptops, etc., as well as by roaming devices <b>290</b>. In addition, the CPE <b>106</b> can be remotely managed (such as from the head end <b>150</b>, or another remote network agent) to support appropriate IP services.</p><p id="p-0081" num="0080">In some instances, the CPE <b>106</b> also creates a home Local Area Network (LAN) utilizing the existing coaxial cable in the home. For example, an Ethernet-over-coax based technology allows services to be delivered to other devices in the home utilizing a frequency outside (e.g., above) the traditional cable service delivery frequencies. For example, frequencies on the order of 1150 MHz could be used to deliver data and applications to other devices in the home such as PCs, PMDs, media extenders and set-top boxes. The coaxial network is merely the bearer; devices on the network utilize Ethernet or other comparable networking protocols over this bearer.</p><p id="p-0082" num="0081">The exemplary CPE <b>106</b> shown in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref> acts as a Wi-Fi access point (AP), thereby allowing Wi-Fi enabled devices to connect to the home network and access Internet, media, and other resources on the network. This functionality can be omitted in one or more embodiments.</p><p id="p-0083" num="0082">In one embodiment, Wi-Fi interface <b>302</b> comprises a single wireless access point (WAP) running multiple (&#x201c;m&#x201d;) service set identifiers (SSIDs). One or more SSIDs can be set aside for the home network while one or more SSIDs can be set aside for roaming devices <b>290</b>.</p><p id="p-0084" num="0083">A premises gateway software management package (application) is also provided to control, configure, monitor and provision the CPE <b>106</b> from the cable head-end <b>150</b> or other remote network node via the cable modem (DOCSIS) interface. This control allows a remote user to configure and monitor the CPE <b>106</b> and home network.</p><p id="p-0085" num="0084">The MoCA interface <b>391</b> can be configured, for example, in accordance with the MoCA 1.0, 1.1, or 2.0 specifications.</p><p id="p-0086" num="0085">As discussed above, the optional Wi-Fi wireless interface <b>302</b> is, in some instances, also configured to provide a plurality of unique service set identifiers (SSIDs) simultaneously. These SSIDs are configurable (locally or remotely), such as via a web page.</p><p id="p-0087" num="0086">In addition to traditional &#x201c;broadcast&#x201d; content (e.g., video programming), the systems of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b></figref> also deliver Internet data services (including IPTV) using the Internet protocol (IP), although other protocols and transport mechanisms of the type well known in the digital communication art may be substituted. The IP packets are typically transmitted on RF channels that are different that the RF channels used for the broadcast traditional video and audio programming, although this is not a requirement. The CPE <b>106</b> are each configured to monitor the particular assigned RF channel (such as via a port or socket ID/address, or other such mechanism) for IP packets intended for the subscriber premises/address that they serve.</p><p id="p-0088" num="0087">As noted, there are also fiber networks for fiber to the home (FTTH) deployments (also known as fiber to the premises or FTTP), where the CPE is a Service ONU (S-ONU; ONU=optical network unit). Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, L3 network <b>802</b> generally represents the elements in <figref idref="DRAWINGS">FIG. <b>1</b></figref> upstream of the head ends <b>150</b>, while head end <b>804</b>, including access router <b>806</b>, is an alternative form of head end that can be used in lieu of or in addition to head ends <b>150</b> in one or more embodiments. Head end <b>804</b> is suitable for FTTH implementations. Access router <b>806</b> of head end <b>804</b> is coupled to optical line terminal <b>812</b> in primary distribution cabinet <b>810</b> via dense wavelength division multiplexing (DWDM) network <b>808</b>. Single fiber coupling <b>814</b> is then provided to a 1:64 splitter <b>818</b> in secondary distribution cabinet <b>816</b> which provides a 64:1 expansion to sixty-four S-ONUs <b>822</b>-<b>1</b> through <b>822</b>-<b>64</b> (in multiple premises) via sixty-four single fibers <b>820</b>-<b>1</b>, <b>820</b>-<b>2</b> through <b>820</b>-<b>64</b>, it being understood that a different ratio splitter could be used in other embodiments and/or that not all of the <b>64</b> (or other number of) outlet ports are necessarily connected to an S-ONU.</p><p id="p-0089" num="0088">Giving attention now to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, wherein elements similar to those in <figref idref="DRAWINGS">FIG. <b>8</b></figref> have been given the same reference number, access router <b>806</b> is provided with multiple ten-Gigabit Ethernet ports <b>999</b> and is coupled to OLT <b>812</b> via L3 (layer 3) link aggregation group (LAG) <b>997</b>. OLT <b>812</b> can include an L<b>3</b> IP block for data and video, and another L3 IP block for voice, for example. In a non-limiting example, S-ONU <b>822</b> includes a 10 Gbps bi-directional optical subassembly (BOSA) on-board transceiver <b>993</b> with a 10G connection to system-on-chip (SoC) <b>991</b>. SoC <b>991</b> is coupled to a 10 Gigabit Ethernet RJ45 port <b>979</b>, to which a high-speed data gateway <b>977</b> with Wi-Fi capability is connected via category <b>5</b>E cable. Gateway <b>977</b> is coupled to one or more set-top boxes <b>975</b> via category 5e, and effectively serves as a wide area network (WAN) to local area network (LAN) gateway. Wireless and/or wired connections can be provided to devices such as laptops <b>971</b>, televisions <b>973</b>, and the like, in a known manner. Appropriate telephonic capability can be provided. In a non-limiting example, residential customers are provided with an internal integrated voice gateway (I-ATA or internal analog telephone adapter) <b>983</b> coupled to SoC <b>991</b>, with two RJ11 voice ports <b>981</b> to which up to two analog telephones <b>969</b> can be connected. Furthermore, in a non-limiting example, business customers are further provided with a 1 Gigabit Ethernet RJ45 port <b>989</b> coupled to SoC <b>991</b>, to which switch <b>987</b> is coupled via Category 5e cable. Switch <b>987</b> provides connectivity for a desired number n (typically more than two) of analog telephones <b>967</b>-<b>1</b> through <b>967</b>-<i>n, </i>suitable for the needs of the business, via external analog telephone adapters (ATAs) <b>985</b>-<b>1</b> through <b>985</b>-<i>n. </i>The parameter &#x201c;n&#x201d; in <figref idref="DRAWINGS">FIG. <b>9</b></figref> is not necessarily the same as the parameter &#x201c;n&#x201d; in other figures, but rather generally represents a desired number of units. Connection <b>995</b> can be, for example, via SMF (single-mode optical fiber).</p><p id="p-0090" num="0089">In addition to &#x201c;broadcast&#x201d; content (e.g., video programming), the systems of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b>, <b>8</b>, and <b>9</b></figref> also deliver Internet data services using the Internet protocol (IP), although other protocols and transport mechanisms of the type well known in the digital communication art may be substituted. In the systems of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b></figref>, the IP packets are typically transmitted on RF channels that are different that the RF channels used for the broadcast video and audio programming, although this is not a requirement. The CPE <b>106</b> are each configured to monitor the particular assigned RF channel (such as via a port or socket ID/address, or other such mechanism) for IP packets intended for the subscriber premises/address that they serve.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a first streaming application <b>1800</b> and a second streaming application <b>1801</b> running in one or more display devices connected to a Local Area Network (LAN) <b>1802</b> that uses a consumer premises equipment (e.g., RF front end <b>301</b>) for Internet connectivity. The display devices can include, by way of non-limiting examples, a smart phone <b>1807</b>, some other portable device <b>1809</b>, and a television <b>1811</b>. By way of non-limiting examples, the consumer premises equipment <b>301</b> can be conventional coaxial cable (i.e. DOCSIS-compliant) or it can be an optical network unit. The consumer premises equipment <b>301</b> connects the LAN <b>1802</b> in communication with Cable Provider's gateway <b>1813</b>, Streaming Provider One's gateway <b>1803</b>, and Streaming Provider Two's gateway <b>1805</b>. Cable Provider's equipment also includes the consumer premises equipment <b>301</b>, which is configured to implement a broker Application Programming Interface (API) <b>1804</b> that interacts with the streaming application <b>1800</b>. The broker API is, for example, shared with the Streaming Providers (via a proprietary software developers kit or SDK) but, for example, is not disclosed to the general public. Optionally, the broker API <b>1804</b> is installed in the consumer premises equipment <b>301</b> by Cable Provider and is not directly accessible, downloadable, or modifiable by a consumer. Cable Provider's gateway <b>1813</b> tracks account entitlements <b>1820</b> as well as streaming entitlements <b>1821</b>, and is configured to implement a back-end API <b>1830</b> for communication with the streaming provider gateways <b>1803</b>, <b>1805</b>. The back-end API <b>1830</b> acts as a proxy between the streaming provider gateways <b>1803</b>, <b>1805</b> and the cable provider gateway <b>1813</b>. In one or more embodiments, it provides a way for the streaming provider gateways to push commands and diff files through the cable provider gateway directly to local storage <b>1806</b> that is controlled by the cable provider, not by the streaming providers. In other embodiments, Cable Provider pushes the commands and diff files through the broker API <b>1804</b> to the local storage <b>1806</b>. In addition to the gateway <b>1803</b>, Streaming Provider One maintains a recommendation engine <b>2001</b>, which draws from viewing data <b>1822</b> to inform the gateway <b>1803</b> what to retrieve from asset storage <b>1823</b>. Streaming Provider Two similarly maintains a recommendation engine <b>2021</b>, which draws from viewing data <b>1824</b> to inform the gateway <b>1805</b> what to retrieve from asset storage <b>1825</b>. Note that viewing data <b>1822</b> and asset storage <b>1823</b> are encrypted by a first key that is known by Streaming Provider One but is not known by Cable Provider or by Streaming Provider Two. Similarly, viewing data <b>1824</b> and asset storage <b>1825</b> are encrypted by a second key that is known by Streaming Provider Two but is not known by Cable Provider or by Streaming Provider One. In this set-up, the streaming application <b>1800</b> can automatically determine the IP address of the consumer premises equipment <b>301</b> as well as the broker API <b>1804</b>. At least a portion of the functionality of the API could be implemented via REST (acronym for REpresentational State Transfer).</p><p id="p-0092" num="0091">The broker API <b>1804</b> communicates with a storage device <b>1806</b>, which houses a plurality of files, some of which are designated files for the streaming application <b>1800</b>. By way of non-limiting examples, the storage device <b>1806</b> could be in the consumer premises equipment, or in a Wi-Fi extender, and could be about 10 Terabytes (TB) in size. It should be noted that the files in question do not necessarily need to be movie data files (e.g. MPEG-2/4, etc.). Instead, in one or more embodiments, they are proprietary files that only the appropriate service provider can decode. In one or more embodiments, the streaming application <b>1800</b> encrypts the designated files with a key based on a user login. For efficiency reasons, the streaming application <b>1800</b> can query the Broker API <b>1804</b> through a secure (encrypted) channel so that only the application <b>1800</b> can access its designated files. Thus, the application <b>1800</b> can use the broker to serve data files, which advantageously eliminates or reduces direct requests through the Internet. In one or more embodiments, the broker API <b>1804</b> accesses a manifest which contains a listing of resource files stored locally in the storage device <b>1806</b>. The manifest also can be encrypted by the streaming application <b>1800</b>. The broker <b>1804</b> manages storage through the preset API. As stated above, the API includes commands (requests and responses) that are supported by both client and server. They can be referred to as &#x2018;preset&#x2019; in the context that only supported commands are to be used. This is similar to the widely-popular HTTP protocol which has preset verbs (GET, PUT, POST, DELETE, etc.) which are supported by both the client (browser) and server (web server).</p><p id="p-0093" num="0092">If the streaming application <b>1800</b> requires a specific data file (or a segment of such a file), the broker API <b>1804</b> tries to locate the specific file in storage within the consumer premises equipment <b>301</b>, TV DVR or external storage (NAS) <b>1806</b> on the same LAN as the broker API <b>1804</b>. If the data is not found on the LAN, the broker makes a request to the local service node <b>182</b> of the back-end network (shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>).</p><p id="p-0094" num="0093">Some streaming providers do not publish viewership data, do not want other streaming providers or media providers to have their viewership data, and as such, would not be open to any system which allows any third-party to infer the actual content viewed by their users. In this context, the cable operator acts like a hosting provider akin to Amazon Web Services (AWS&#xae;&#x2014;registered trademark of Amazon, Inc. of Seattle, Washington) that provides transparent access to encrypted storage without being able to decrypt the stored data itself. Therefore, the request is encrypted by the user login so that it is not apparent to the cable operator what file the broker API wants to access. This affords the service provider strong intellectual property protection. The data in question would not even be readable by the host (cable operator).</p><p id="p-0095" num="0094">One or more embodiments allow some content that is expected to be consumed at a later date to be pushed in a staggered fashion or when there is less pressure on the infrastructure. For instance, if a user views season <b>1</b>, episode <b>3</b>, then recommendation engine <b>2001</b> determines episode <b>4</b> would need to be made available immediately. However, episodes <b>5</b>-<b>9</b> or season <b>2</b> might be scheduled for download during off-peak hours (e.g. 3 AM). For a large data package, it might be beneficial to calculate a staggered time schedule for content to download to optimize available bandwidth for the streaming provider. Therefore, the recommendation engine <b>2001</b> instructs the streaming provider gateway <b>1803</b> to push the encrypted content to the cable provider gateway <b>1813</b>, via the back-end API <b>1830</b>, for later download push to local storage <b>1806</b>; that is, in one or more embodiments, the streaming provider does not directly access the broker <b>1804</b> or storage <b>1806</b>.</p><p id="p-0096" num="0095">In one or more embodiments, this system acts like a storage device used to contain streamed content from one or more providers. This means that in some instances, storing data using MPEG or other standard options might not be possible. Each streaming provider may desire to maintain all data about what the user watches as a trade secret. As such, the storage can be managed by the streaming provider along guidelines and under specific contractual obligation(s) between the cable provider (which owns or controls the consumer premises equipment and storage system) and the streaming provider.</p><p id="p-0097" num="0096">In one or more embodiments, the system provides anonymous storage for the streaming providers used by the cable customer. For instance, Streaming Provider One has an agreement with the cable provider to access a specific capacity (e.g., 300 MB) in the storage device <b>1806</b>. In one or more embodiments, the data to be stored could be encrypted so that it would not be accessible to the cable provider (even if the cable provider owned the consumer premises equipment <b>301</b>). Streaming Provider One, in this scenario, could &#x201c;push,&#x201d; to the broker API <b>1804</b>, content that it predicts the user would consume in the near future (e.g., within the next two days).</p><p id="p-0098" num="0097">In one or more embodiments, the cable company also provides an API, which presents &#x2018;nearby&#x2019; cable modems with specified storage capacity to reduce the odds of storing the same content more than once. For instance, Show A Season <b>2</b> Episode <b>3</b> is stored in the storage device <b>1806</b> associated with the consumer premises equipment <b>301</b> of the LAN <b>1802</b>. The local storage device <b>1806</b> may be integrated into the consumer premises equipment <b>301</b> or may be connected in communication with therewith via the LAN <b>1802</b>. Examples of suitable storage devices include magnetic hard drives, writable optical drives, &#x201c;flash&#x201d; SSD drives, etc. Notably, the local storage device <b>1806</b> is &#x201c;partitioned&#x201d; so that each partition is accessible using a different password (a &#x201c;streaming key&#x201d;); each streaming application has a different streaming key that is not known by any of the other streaming applications. The same applies to all streaming providers after prior agreement with the cable operator, where allocated storage capacity is agreed upon for each subscriber. Any participating streaming provider can, for example, manage predictive analytics on usage or run any proprietary algorithms on its own viewing data to determine which content would be needed ahead of time and ensure that it is available. The cable company does not need to be made aware of data flowing on the back-end of this system except, that it complies with agreed upon terms (of course, if agreed and appropriate, in some embodiments the cable company could be made aware). In one or more embodiments, this ultimately allows both the cable operator and the streaming companies to work on shared hardware and software without exposing or providing access to internal infrastructure or proprietary data (such as usage statistics, etc.).</p><p id="p-0099" num="0098">Any participating streaming operator can be provided with a check-option within its application (loaded on the phone, Roku&#xae; device, Apple TV&#xae; device, etc.). &#x201c;Roku&#x201d; is a registered trademark of Roku, Inc. of San Jose, Calif. &#x201c;Apple TV&#x201d; is a registered trademark of Apple, Inc. of Cupertino, Calif. Such an option includes checking the local manifest for any available asset before attempting to download from the Internet. Not only does this reduce the download time and offer a more reliable option, but in some instances, it mitigates any cost associated with exceeding a usage cap as might be assigned by some MSOs. Any content pushed to the storage system can be exempted from the cap in one or more embodiments, as it is considered a back-end PUSH.</p><p id="p-0100" num="0099">One or more embodiments allow for storage to be segregated across all hardware being used. A custom API ensures that each streaming provider can only access its own data files. In this context (virtual disk), the cable provider is managing access to a virtual distributed system for one or more streaming providers. The latter are responsible for storage, as well as deletion, for any data file based on internal logic. This allows different streaming providers to implement different algorithms, which might be proprietary, without having to share logic. The cable operator will typically need to track the storage usage for all users in order to not exceed available (or agreed upon) capacity. In one or more embodiments, the broker API <b>1804</b> is available to streaming providers and allows them to manage their &#x2018;virtual disks&#x2019; by sending commands through the backend API <b>1830</b> to the cable provider gateway, which then delivers files to the local storage <b>1806</b>. The API commands can include, for example:</p><p id="p-0101" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="left"/><thead><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>PUT &#x3c;file-name&#x3e; &#x3c;payload&#x3e; Send a specific file to local storage</entry></row><row><entry>GET &#x3c;file-name&#x3e;: Retrieve content of a file</entry></row><row><entry>DEL &#x3c;file-name&#x3e;: Remove a file</entry></row><row><entry>LIST: Return a list of stored files</entry></row><row><entry>CLEAR: Clear stored content on disk</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0102" num="0100">In current streaming applications, when there is no Internet connection, the application (regardless of the platform) typically displays an error message and the application is not usable until Internet connectivity is restored.</p><p id="p-0103" num="0101">Advantageously, according to one or more embodiments, a process <b>1900</b> (shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>) is followed instead. At <b>1902</b>, initialize the application (system). At decision block <b>1904</b> (shown as a rectangle for illustrative brevity), check whether the broker feature is enabled. If not (NO branch), then at <b>1905</b> select a direct connection to a Streaming Provider gateway via the internet. If enabled (YES branch), at <b>1906</b>, detect the broker. At decision block <b>1908</b> (shown as a rectangle for illustrative brevity), query the broker for a manifest. If a manifest is not found (NOT FOUND branch), then at <b>1905</b> select the direct connection to the gateway. Otherwise (FOUND branch), at <b>1910</b>, decrypt the manifest. At <b>1911</b>, determine a list of local content to display (i.e. by the recommendation engine cooperating with the broker API). At <b>1912</b>, display to the user the list of local content available for reduced operation (resume watching, new recommendations, etc.). At decision block <b>1914</b> (shown as a rectangle for illustrative brevity), receive a user selection of content and request, from the broker, a file listed in the manifest. At <b>1905</b> (NOT FOUND branch), if the file is not found, then select the direct connection to the gateway. Otherwise (FOUND branch), at <b>1916</b> process the file and at <b>1918</b> conduct streaming application internal processes (playback, browsing, etc.) including real-time decryption of the local file. At <b>1920</b>, when the content has been consumed, notify the Streaming Provider gateway <b>1803</b> or <b>1805</b> to delete the content from the storage device <b>1806</b> via the broker API <b>1804</b>.</p><p id="p-0104" num="0102">Once the available files are returned, the streaming application displays all content that is available off-line. This allows the user to stream the off-line content, with a much better user experience than what is currently available.</p><p id="p-0105" num="0103">For optimum operation, the streaming provider is responsible for tracking viewing statistics and generating predictive analytics for a cache-ahead process <b>2000</b> (shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>). The process <b>2000</b> makes use of a recommendation engine or recommender <b>2001</b> (proprietary to each streaming provider as known to the skilled artisan), and includes, for example, the following steps. At <b>2001</b>, the streaming application <b>1800</b> sends to the streaming provider gateway <b>1803</b> an encrypted selection of first media content to be consumed by a user. At <b>2002</b>, the recommendation engine <b>2001</b> receives the encrypted selection of first media content and tracks shows being watched by the user. At <b>2004</b>, the recommendation engine <b>2001</b> analyzes user data to identify second media content (shows to be watched) related to the first media content. At <b>2006</b>, the streaming application <b>1800</b> sends to the streaming provider gateway <b>1803</b> a listing of data stored in the user's local storage. At <b>2008</b>, the streaming provider gateway <b>1803</b> generates a diff file that instructs the cable provider gateway how to change the files on the local storage, and encrypts content for the shows to be watched, not already found in local storage. At <b>2009</b>, the streaming provider gateway submits a request for storage to the cable operator network along with the updated manifest. At <b>2010</b>, queue up encrypted content at the streaming provider gateway and then push the diff commands and files through a back-end API <b>1830</b> to the cable provider network gateway. At <b>2012</b>, the cable provider gateway <b>1813</b> then pushes the content through the consumer premises equipment <b>301</b> to the local storage system <b>1806</b>. A similar process is used to clear any content file that needs to be purged (e.g., the user already has watched an episode of a show).</p><p id="p-0106" num="0104">In one or more embodiments the recommendation engine <b>2001</b> also determines content consumed on a periodic basis, e.g., content that airs once per week and cannot be &#x2018;binged.&#x2019; For this content, a process <b>2100</b> (shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>) is used. At <b>2102</b>, use the recommendation engine <b>2001</b> to determine which shows are likely to be watched on a periodic basis. At <b>2104</b>, use the recommendation engine to determine a preferred time to download the content. At <b>2106</b>, when a show airs, update the manifest file in the broker API <b>1804</b> and automatically encrypts and push the content to the local storage <b>1806</b> via the cable network operator <b>1813</b>. Thus, the content enters local storage <b>1806</b> and can be made available offline (or online) when requested by the user. In one or more embodiments, the streaming provider and the cable provider interact via a back-end batch process during low-demand hours when ample bandwidth is available for pushing the content to the local storage.</p><p id="p-0107" num="0105">The skilled artisan will thus appreciate that in one or more embodiments, offline content is automatically cached and any streaming device in the household has access to offline capability via the broker API <b>1804</b>. Streaming application(s) on streaming device(s) can then retrieve files from local storage <b>1806</b> as appropriate. Suitable streaming devices can include, as non-limiting examples, a smart TV <b>1811</b> (e.g., a Roku&#xae; TV or Apple&#xae; TV), a mobile phone <b>1807</b>, or a portable device <b>1809</b> such as a tablet computer or laptop computer. In order for a streaming application to interact with the broker API <b>1804</b>, certain modifications to one or more algorithms of the streaming application will be implemented as will be appreciated by the ordinary skilled worker in light of the present disclosure, e.g., <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0108" num="0106">In view of the foregoing discussion and the accompanying figures, the ordinary skilled worker will appreciate that, according to an exemplary embodiment as shown in <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>14</b></figref>, a broker Application Programming Interface (API) <b>1804</b> (which can be owned, for example, by an MSO) is implemented at a consumer premises equipment <b>301</b> that includes a memory and a processor, connected in communication with a cable provider gateway <b>1813</b>, a first streaming provider gateway <b>1803</b>, a second streaming provider gateway <b>1805</b>, and a Local Area Network (LAN) <b>1802</b>. The broker API <b>1804</b> implements a method <b>2200</b>, as shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. At <b>2202</b> the broker API <b>1804</b> receives, from a first streaming application <b>1800</b> implemented in the LAN, an encrypted request for first media content; at <b>2204</b> the broker API retrieves, from the storage device, a first encrypted manifest of locally stored content; at <b>2206</b> the broker API compares the encrypted request to the first encrypted manifest (the request and the first manifest both are encrypted by a first streaming key, which is known by the first streaming provider gateway and the first streaming application implemented in the LAN, but not known by the broker API, the second streaming provider gateway, the cable provider gateway, and a second streaming application); in response to a match between the encrypted request and the first encrypted manifest, at <b>2208</b> the broker API retrieves, from the storage device, the first media content that is encrypted by the first streaming key; and at <b>2210</b> the broker API delivers the encrypted first media content to the first streaming application.</p><p id="p-0109" num="0107">In one or more embodiments, at <b>2212</b> the broker API receives, from the second streaming application, a request for second media content that is encrypted by a second streaming key, which is known by the second streaming provider gateway and the second streaming application but not known by the broker API, the first streaming provider gateway, the first streaming application, and the cable provider gateway. At <b>2214</b> the broker API retrieves, from the storage device, a second encrypted manifest that is encrypted by the second streaming key. At <b>2216</b>, the broker API compares the encrypted request for the second media content to the second encrypted manifest. At <b>2218</b>, in response to a match between the encrypted request for the second media content and the second encrypted manifest, the broker API retrieves encrypted second media content corresponding to the encrypted request received from the second streaming application. At <b>2220</b>, the broker API delivers the encrypted second media content to the second streaming application.</p><p id="p-0110" num="0108">In one or more embodiments, at <b>2222</b> the broker API receives from the first streaming application an encrypted request for third media content; the third request is encrypted by the first streaming key. At <b>2224</b>, the broker API compares the encrypted request for third media content to the first encrypted manifest. At <b>2228</b>, in response to the encrypted request for third media content not matching the first encrypted manifest, the broker API returns to the first streaming application a signal configured to cause the first streaming application to retrieve the third media content from the first streaming provider gateway.</p><p id="p-0111" num="0109">According to another aspect, a streaming application implements a method <b>1900</b>, as shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, for caching and delivering media content from multiple streaming providers. At <b>1914</b>, the streaming application receives a consumer selection of first content from a user via a first streaming application User Interface (UI), generates a first encrypted content selection by encrypting the consumer selection of first content using a first streaming key, and transmits the first encrypted content selection to a broker Application Programming Interface (API) that is implemented in a Local Area Network (LAN) in communication with the first streaming application; the broker API does not know the first streaming key. At <b>1916</b>, the streaming application receives, from the broker API, encrypted first content corresponding to the first encrypted content selection, and generates first content by decrypting the encrypted first content using the first streaming key. At <b>1918</b>, the first streaming application displays the first content to the user via the first streaming application UI.</p><p id="p-0112" num="0110">In one or more embodiments the method <b>1900</b> also includes, at <b>1904</b> and <b>1906</b>, the first streaming application confirming that the broker API is enabled and detecting the broker API.</p><p id="p-0113" num="0111">In one or more embodiments, at <b>1908</b> the first streaming application retrieves an encrypted manifest from the broker API and at <b>1910</b> the first streaming application decrypts the encrypted manifest. At <b>1911</b> the first streaming application determines a list of local content to display, and at <b>1912</b> displays the list of local content to the user.</p><p id="p-0114" num="0112">In one or more embodiments, at <b>1920</b> after displaying the first content, the first streaming application communicates to a first streaming provider gateway an instruction to delete the encrypted first content from local storage that is connected in communication with the broker API via the LAN.</p><p id="p-0115" num="0113">In one or more embodiments, at <b>1922</b> after receiving the consumer selection of first content, the first streaming application transmits to a first streaming provider gateway the first encrypted consumer selection. At <b>1924</b>, the first streaming application receives from the first streaming provider gateway an encrypted list of second content that is related to the first content.</p><p id="p-0116" num="0114">In one or more embodiments, a second streaming application receives a consumer selection of second content via a second streaming application UI. The second streaming application generates a second encrypted content selection by encrypting the consumer selection of second content using a second streaming key. The broker API and the first streaming application do not know the second streaming key. The second streaming application transmits the second encrypted content selection to the broker API and receives, from the broker API, encrypted second content corresponding to the second encrypted content selection. The encrypted second content is encrypted by the second streaming key. The second streaming application generates second content by decrypting the encrypted second content using the second streaming key, and displays the second content to the user via the second streaming application UI.</p><p id="p-0117" num="0115">According to another aspect, a streaming provider gateway implements a method <b>2000</b> for proactively delivering media content to a subscriber streaming application, as shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>. At <b>2002</b>, the streaming provider gateway receives from the subscriber streaming application an encrypted selection of first media content to be consumed. The selection is encrypted by a first streaming key, which the streaming provider gateway and the subscriber streaming application know. At <b>2008</b> the streaming provider gateway encrypts the first media content by the first streaming key. At <b>2010</b> the streaming provider gateway pushes the encrypted first media content to a cable provider gateway that does not know the first streaming key. At <b>2004</b>, the streaming provider gateway uses a recommendation engine to identify second media content corresponding to the first media content. At <b>2008</b>, the streaming provider gateway encrypts the second media content by the first streaming key. At <b>2010</b>, the streaming provider gateway pushes the encrypted second media content from the streaming provider gateway to the cable provider gateway before the subscriber streaming application requests it.</p><p id="p-0118" num="0116">According to another aspect, a cable provider gateway and a broker API implement methods <b>2200</b>, <b>2300</b> for locally storing and delivering encrypted content, as shown in <figref idref="DRAWINGS">FIGS. <b>14</b> and <b>15</b></figref>. At <b>2302</b>, the cable provider gateway receives a first diff file that is pushed from a first streaming provider gateway. The first diff file includes first content and an updated manifest that are encrypted by a first streaming key. The first streaming provider gateway and a first streaming application know the first streaming key but the cable provider gateway does not know the first streaming key. At <b>2304</b>, the cable provider gateway pushes the first diff file through a consumer premises equipment to local storage. At <b>2200</b> the broker API receives an encrypted selection of media content from the first streaming application. The encrypted selection of media content is encrypted by the first streaming key, which the broker API does not know. At <b>2206</b> and <b>2208</b> the broker API matches the encrypted selection to the updated encrypted manifest in the local storage. At <b>2208</b>, the broker API retrieves the encrypted first content from the local storage in response to the encrypted selection. At <b>2210</b>, the broker API delivers the encrypted first content to the first streaming application via the LAN.</p><p id="p-0119" num="0117">In one or more embodiments, the first diff file includes instructions to delete second media content from the local storage and the updated manifest removes the second media content from a list of locally stored content.</p><p id="p-0120" num="0118">In one or more embodiments, the cable provider gateway also receives a second diff file that is pushed from a second streaming provider gateway. The second diff file includes third media content and a second updated manifest that are encrypted by a second streaming key. The second streaming provider gateway and a second streaming application know the second streaming key but the cable provider gateway and the first streaming provider gateway and the first streaming application do not know the second streaming key. The cable provider gateway pushes the second diff file through the consumer premises equipment to the local storage.</p><p id="p-0121" num="0119">In one or more embodiments, the broker API receives an encrypted selection of the third media content from the second streaming application. The encrypted selection of the third media content is encrypted by the second streaming key, which the broker API does not know. The broker API matches the encrypted selection of the third media content to the second updated encrypted manifest in the local storage, retrieves the encrypted third media content from the local storage in response to the encrypted selection of the third media content, and delivers the encrypted third media content to the second streaming application via the LAN.</p><p id="p-0122" num="0120">According to another aspect, a broker API and a streaming application implement methods <b>1900</b>, <b>2200</b> for locally caching and displaying media content, as shown in <figref idref="DRAWINGS">FIGS. <b>11</b> and <b>15</b></figref>. The methods include implementing a broker Application Programming Interface (API) at a consumer premises equipment that includes a memory and a processor, connected in communication with a cable provider gateway, a first streaming provider gateway, a second streaming provider gateway, and a Local Area Network (LAN), and implementing a streaming application in the LAN. At <b>2204</b> the broker API retrieves from the storage device a first encrypted manifest of locally stored content, which is encrypted using a first streaming key. At <b>1914</b> the first streaming application receives a consumer selection of first content from a user via a first streaming application User Interface (UI), generates a first encrypted request by encrypting the consumer selection of first content using the first streaming key, and transmits the first encrypted request to the broker API. The broker API does not know the first streaming key. At <b>2202</b> the broker API receives the first encrypted request. At <b>2206</b> the broker API compares the first encrypted request to the first encrypted manifest. At <b>2208</b>, in response to a match between the first encrypted request and the first encrypted manifest, the broker API retrieves from the storage device the first media content that is encrypted by the first streaming key. At <b>2210</b>, the broker API delivers the encrypted first media content to the first streaming application. At <b>1916</b> the first streaming application receives the encrypted first media content and generates first content by decrypting the encrypted first media content using the first streaming key. At <b>1918</b>, the first streaming application displays the first content to the user via the first streaming application UI.</p><p id="p-0123" num="0121">In one or more embodiments, at <b>2205</b> the broker API delivers the first encrypted manifest to the first streaming application. At <b>1910</b>, <b>1911</b> the first streaming application generates a first content listing by decrypting the first encrypted manifest using the first streaming key; at <b>1912</b>, the first streaming application displays the first content listing to the user.</p><p id="p-0124" num="0122">In one or more embodiments a second streaming application receives a consumer selection of second content via a second streaming application UI and generates a second encrypted content selection by encrypting the consumer selection of second content using a second streaming key. The broker API and the first streaming application do not know the second streaming key. The second streaming application transmits the second encrypted content selection by the second streaming application to the broker API. The broker API compares the second encrypted content selection to a second encrypted manifest that is encrypted by the second streaming key and, in response to the second encrypted content selection matching the second encrypted manifest, the broker API returns encrypted second content to the second streaming application. The second streaming application receives the encrypted second content from the broker API, generates second content by decrypting the encrypted second content using the second streaming key, and displays the second content to the user via the second streaming application UI.</p><p id="p-0125" num="0123">According to another aspect, a system <b>1800</b> for caching and delivering media content from multiple streaming providers includes a storage device <b>1806</b> that implements a broker Application Programming Interface (API) <b>1804</b> and a display device <b>1801</b> that implements a streaming application <b>1800</b>. The broker API <b>1804</b> is configured to: receive from the streaming application an encrypted request for first media content; retrieve from the storage device, a first encrypted manifest of locally stored content; compare the encrypted request to the first encrypted manifest, wherein the request and the first manifest both are encrypted by a first streaming key, which is known by the streaming application, but not known by the broker API; in response to a match between the encrypted request and the first encrypted manifest, retrieve from the storage device the first media content that is encrypted by the first streaming key; and deliver the encrypted first media content by the broker API to the first streaming application. The streaming application is configured to: receive a consumer selection of first content via a streaming application User Interface (UI); generate the encrypted request by encrypting the consumer selection of first content using the first streaming key; transmit the encrypted request to the broker API; receive, from the broker API, encrypted first media content that corresponds to the encrypted request; generate first content by decrypting the encrypted first media content using the first streaming key; and display the first content to the user via the streaming application UI.</p><p id="p-0126" num="0124">System and Article of Manufacture Details</p><p id="p-0127" num="0125"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of a system <b>700</b> that can implement at least some aspects of the invention, and is representative, for example, of one or more of the servers (and/or other elements with memory and processing capability) shown in the figures. As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, memory <b>730</b> configures the processor <b>720</b> to implement one or more methods, steps, and functions (collectively, shown as process <b>780</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). The memory <b>730</b> could be distributed or local and the processor <b>720</b> could be distributed or singular. Different steps could be carried out by different processors.</p><p id="p-0128" num="0126">The memory <b>730</b> could be implemented as an electrical, magnetic or optical memory, or any combination of these or other types of storage devices. It should be noted that if distributed processors are employed, each distributed processor that makes up processor <b>720</b> generally contains its own addressable memory space. It should also be noted that some or all of computer system <b>700</b> can be incorporated into an application-specific or general-use integrated circuit. For example, one or more method steps could be implemented in hardware in an ASIC or via a field-programmable gate array (FPGA) rather than using firmware. Display <b>740</b> is representative of a variety of possible input/output devices (e.g., keyboards, mice, and the like). Every processor may not have a display, keyboard, mouse or the like associated with it.</p><p id="p-0129" num="0127">As is known in the art, part or all of one or more aspects of the methods and apparatus discussed herein may be distributed as an article of manufacture that itself includes a tangible computer readable recordable storage medium having computer readable code means embodied thereon. The computer readable program code means is operable, in conjunction with a computer system (including, for example, system <b>700</b> or the like), to carry out all or some of the steps to perform the methods or create the apparatuses discussed herein. A computer readable medium may, in general, be a recordable medium (e.g., floppy disks, hard drives, compact disks, EEPROMs, or memory cards) or may be a transmission medium (e.g., a network including fiber-optics, the world-wide web, cables, or a wireless channel using time-division multiple access, code-division multiple access, or other radio-frequency channel). Any medium known or developed that can store information suitable for use with a computer system may be used. The computer-readable code means is any mechanism for allowing a computer to read instructions and data, such as magnetic variations on a magnetic media or height variations on the surface of a compact disk. The medium can be distributed on multiple physical devices (or over multiple networks). As used herein, a tangible computer-readable recordable storage medium is defined to encompass a recordable medium, examples of which are set forth above, but is defined not to encompass a transmission medium or disembodied signal.</p><p id="p-0130" num="0128">The computer systems and servers and other pertinent elements described herein each typically contain a memory that will configure associated processors to implement the methods, steps, and functions disclosed herein. The memories could be distributed or local and the processors could be distributed or singular. The memories could be implemented as an electrical, magnetic or optical memory, or any combination of these or other types of storage devices. Moreover, the term &#x201c;memory&#x201d; should be construed broadly enough to encompass any information able to be read from or written to an address in the addressable space accessed by an associated processor. With this definition, information on a network is still within a memory because the associated processor can retrieve the information from the network.</p><p id="p-0131" num="0129">Furthermore, it should be noted that any of the methods described herein can include an additional step of providing a system comprising distinct software modules embodied on one or more tangible computer readable storage media. All the modules (or any subset thereof) can be on the same medium, or each can be on a different medium, for example. The modules can include any or all of the components shown in the figures (e.g. modules/sub-modules to implement the elements in <figref idref="DRAWINGS">FIGS. <b>10</b>-<b>13</b></figref>). The method steps can then be carried out using the distinct software modules of the system, as described above, executing on one or more hardware processors (e.g., a hardware processor or server located in the premises <b>106</b>, head end <b>150</b>, regional data center <b>1048</b> and/or national data center <b>1098</b>). Further, a computer program product can include a tangible computer-readable recordable storage medium with code adapted to be executed to carry out one or more method steps described herein, including the provision of the system with the distinct software modules.</p><p id="p-0132" num="0130">Accordingly, it will be appreciated that one or more embodiments of the invention can include a computer program including computer program code means adapted to perform one or all of the steps of any methods or claims set forth herein when such program is implemented on a processor, and that such program may be embodied on a tangible computer readable recordable storage medium. Further, one or more embodiments of the present invention can include a processor including code adapted to cause the processor to carry out one or more steps of methods or claims set forth herein, together with one or more apparatus elements or features as depicted and described herein.</p><p id="p-0133" num="0131">Although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be made by one skilled in the art without departing from the scope or spirit of the invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A consumer premises equipment apparatus for facilitating caching and delivering media content from multiple streaming providers, configured for communication with a cable provider gateway, a first streaming provider gateway, a second streaming provider gateway, and a Local Area Network (LAN), the consumer premises equipment apparatus comprising:<claim-text>a memory; and</claim-text><claim-text>at least one processor, coupled to the memory and operative to:<claim-text>implement a broker Application Programming Interface (API);</claim-text><claim-text>receive, with the broker API, from a first streaming application implemented in the LAN, an encrypted request for first media content;</claim-text><claim-text>retrieve, with the broker API, from a storage device, a first encrypted manifest of locally stored content;</claim-text><claim-text>compare, with the broker API, the encrypted request to the first encrypted manifest, wherein the request and the first manifest both are encrypted by a first streaming key, which is known by the first streaming provider gateway and the first streaming application implemented in the LAN, but not known by the broker API, the second streaming provider gateway, the cable provider gateway, and a second streaming application;</claim-text><claim-text>in response to a match between the encrypted request and the first encrypted manifest, retrieve, with the broker API, from the storage device, the first media content that is encrypted by the first streaming key; and</claim-text><claim-text>deliver the encrypted first media content with the broker API to the first streaming application.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The consumer premises equipment apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one processor is further operative to:<claim-text>receive, with the broker API, from the second streaming application, a request for second media content that is encrypted by a second streaming key, which is known by the second streaming provider gateway and the second streaming application but not known by the broker API, the first streaming provider gateway, the first streaming application, and the cable provider gateway;</claim-text><claim-text>retrieve, with the broker API, from the storage device, a second encrypted manifest that is encrypted by the second streaming key;</claim-text><claim-text>compare, with the broker API, the encrypted request for the second media content to the second encrypted manifest;</claim-text><claim-text>in response to a match between the encrypted request for the second media content and the second encrypted manifest, retrieve, with the broker API encrypted second media content corresponding to the encrypted request received from the second streaming application; and</claim-text><claim-text>deliver the encrypted second media content, with the broker API, to the second streaming application.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The consumer premises equipment apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one processor is further operative to:<claim-text>receive, with the broker API, from the first streaming application, an encrypted request for third media content, wherein the third request is encrypted by the first streaming key;</claim-text><claim-text>compare, with the broker API, the encrypted request for third media content to the first encrypted manifest; and</claim-text><claim-text>in response to the encrypted request for third media content not matching the first encrypted manifest, return, with the broker API, to the first streaming application, a signal configured to cause the first streaming application to retrieve the third media content from the first streaming provider gateway.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. A display device for facilitating caching and delivering media content from multiple streaming providers, the display device comprising:<claim-text>a memory; and</claim-text><claim-text>at least one processor, coupled to the memory and operative to:</claim-text><claim-text>implement a first streaming application having a first streaming application User Interface (UI);</claim-text><claim-text>receive a consumer selection of first content, with the first streaming application, from a user, via the first streaming application UI;</claim-text><claim-text>generate a first encrypted content selection, by the first streaming application encrypting the consumer selection of first content using a first streaming key;</claim-text><claim-text>transmit the first encrypted content selection, with the first streaming application, to a broker Application Programming Interface (API) that is implemented in a Local Area Network (LAN) in communication with the first streaming application, wherein the broker API does not know the first streaming key;</claim-text><claim-text>receive, by the first streaming application, from the broker API, encrypted first content corresponding to the first encrypted content selection, wherein the encrypted first content is encrypted by the first streaming key;</claim-text><claim-text>generate first content, by the first streaming application decrypting the encrypted first content using the first streaming key; and</claim-text><claim-text>display the first content, with the first streaming application, to the user, via the first streaming application UI.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The display device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the at least one processor is further operative to confirm, using the first streaming application, that the broker API is enabled and to detect, using the first streaming application, the broker API.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The display device of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the at least one processor is further operative to retrieve, using the first streaming application, an encrypted manifest from the broker API.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The display device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the at least one processor is further operative to decrypt, using the first streaming application, the encrypted manifest, determine, using the first streaming application, a list of local content to display, and display, using the first streaming application, the list of local content to the user.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The display device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the at least one processor is further operative to, after displaying the first content, use the first streaming application to communicate to a first streaming provider gateway an instruction to delete the encrypted first content from local storage that is connected in communication with the broker API via the LAN.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The display device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the at least one processor is further operative to:<claim-text>after receiving the consumer selection of first content, with the first streaming application, transmit to a first streaming provider gateway the first encrypted consumer selection; and</claim-text><claim-text>with the first streaming application, receive from the first streaming provider gateway an encrypted list of second content that is related to the first content.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The display device of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the at least one processor is further operative to:<claim-text>implement a second streaming application having a second streaming application UI;</claim-text><claim-text>with the second streaming application UI, receive a consumer selection of second content;</claim-text><claim-text>with the second streaming application, generate a second encrypted content selection by encrypting the consumer selection of second content using a second streaming key, wherein the broker API and the first streaming application do not know the second streaming key;</claim-text><claim-text>with the second streaming application, transmit the second encrypted content selection to the broker API;</claim-text><claim-text>with the second streaming application, receive, from the broker API, encrypted second content corresponding to the second encrypted content selection, wherein the encrypted second content is encrypted by the second streaming key;</claim-text><claim-text>with the second streaming application, generate second content by decrypting the encrypted second content using the second streaming key; and</claim-text><claim-text>with the second streaming application, display the second content to the user via the second streaming application UI.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A streaming provider gateway for proactively delivering media content to a subscriber streaming application, the streaming provider gateway comprising:<claim-text>a memory; and</claim-text><claim-text>at least one processor, coupled to the memory and operative to:<claim-text>receive, from the subscriber streaming application, an encrypted selection of first media content to be consumed, wherein the selection is encrypted by a first streaming key, wherein the streaming provider gateway and the subscriber streaming application know the first streaming key;</claim-text><claim-text>encrypt the first media content by the first streaming key;</claim-text><claim-text>push the encrypted first media content from the streaming provider gateway to a cable provider gateway that does not know the first streaming key;</claim-text><claim-text>implement a recommendation engine to identify second media content corresponding to the first media content;</claim-text><claim-text>encrypt the second media content by the first streaming key; and</claim-text><claim-text>push the encrypted second media content to the cable provider gateway before the subscriber streaming application requests it.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>