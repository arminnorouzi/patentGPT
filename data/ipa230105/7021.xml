<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007022A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007022</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940218</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>202010165217.3</doc-number><date>20200311</date></priority-claim><priority-claim sequence="02" kind="national"><country>CN</country><doc-number>202010358287.0</doc-number><date>20200429</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1416</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1466</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3242</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3297</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e79">Method and Device for Preventing Replay Attack on Srv6 HMAC Verification</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2021/079429</doc-number><date>20210306</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17940218</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Huawei Technologies Co., Ltd.</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Lu</last-name><first-name>Dongjie</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Gu</last-name><first-name>Rui</first-name><address><city>Beijing</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Wu</last-name><first-name>Di</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Zhou</last-name><first-name>Yu</first-name><address><city>Beijing</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for preventing a replay attack on a Segment Routing over Internet Protocol version 6 (SRv6) keyed hashed message authentication code (HMAC) verification. The method includes a network device receiving an SRv6 packet comprising anti-replay attack verification information. The network device performs anti-replay attack verification based on the anti-replay attack verification information. The network device performs HMAC hash computation on the SRv6 packet in response to the first SRv6 packet passing passes the anti-replay attack verification.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="100.67mm" wi="158.75mm" file="US20230007022A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="191.26mm" wi="128.78mm" orientation="landscape" file="US20230007022A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="204.05mm" wi="157.48mm" file="US20230007022A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="103.29mm" wi="149.69mm" file="US20230007022A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="194.14mm" wi="137.75mm" orientation="landscape" file="US20230007022A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="198.46mm" wi="137.84mm" orientation="landscape" file="US20230007022A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="206.08mm" wi="137.33mm" orientation="landscape" file="US20230007022A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="210.82mm" wi="154.77mm" file="US20230007022A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="171.53mm" wi="163.75mm" file="US20230007022A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="163.41mm" wi="100.84mm" file="US20230007022A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="163.32mm" wi="100.08mm" file="US20230007022A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="212.94mm" wi="111.84mm" file="US20230007022A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="118.53mm" wi="155.36mm" file="US20230007022A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of International Patent Application No. PCT/CN2021/079429, filed on Mar. 6, 2021, which claims priority to Chinese Patent Application No. 202010165217.3, filed on Mar. 11, 2020 and Chinese Patent Application No. 202010358287.0, filed on Apr. 29, 2020. All of the aforementioned patent applications are hereby incorporated by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to the field of communication technologies, and in particular, to a method and a device for preventing a replay attack on a Segment Routing over Internet Protocol version 6 (IPv6) (SRv6) keyed hashed message authentication code (HMAC) verification.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">SRv6 is a method, designed based on source routing, for IPv6 data packet forwarding on a network. A segment routing header (SRH) is inserted into an IPv6 packet, and an explicit IPv6 address stack is pushed into the SRH. Transit nodes continuously update a destination address and offset the address stack to complete hop-by-hop forwarding.</p><p id="p-0005" num="0004">When an SRv6 technology is used to forward a packet, a transit node forwards the packet based on a segment identifier (SID) list. A network hacker can maliciously tamper with the SID list to launch a network attack, affecting network security. To prevent the SRH from being tampered with and spoofed, the Internet Engineering Task Force (IETF) recommends that a verification be performed on the SRH by using an HMAC, and a packet that fails the HMAC verification is discarded, so as to prevent an SRv6 packet header from being spoofed and tampered with. However, the HMAC verification occupies many computing resources for HMAC computation. When an attacker sends a large quantity of replay attack packets to a network node, the network node needs to perform the HMAC verification on the large quantity of replay attack packets, which severely occupies computing resources. Consequently, a normal packet cannot be effectively processed, and normal work of the network node is severely affected.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">In view of this, embodiments of the present disclosure provide a method, an apparatus, and a system for preventing a replay attack on an SRv6 HMAC verification.</p><p id="p-0007" num="0006">According to a first aspect, the present disclosure provides a method for preventing a replay attack on an SRv6 HMAC verification. The method is performed by a first network device. The first network device receives a first SRv6 packet from a second network device or an attacker device, where a packet header of the first SRv6 packet includes anti-replay attack verification information. The first network device performs anti-replay attack verification on the first SRv6 packet based on the anti-replay attack verification information, to determine whether the first SRv6 packet is a replay attack packet. If the first SRv6 packet passes the verification, the first network device performs HMAC computation on the first SRv6 packet that passes the verification. If the first SRv6 packet fails the verification, the first network device discards the first SRv6 packet and does not perform HMAC computation.</p><p id="p-0008" num="0007">According to the foregoing method, after receiving an SRv6 packet and before performing HMAC computation, the first network device verifies the received SRv6 packet based on anti-replay attack verification information carried in the SRv6 packet, and discards, in a timely manner, a packet that fails the verification. Therefore, before HMAC computation is performed, a large quantity of replay attack packets can be effectively identified and discarded, to effectively reduce computing resource consumption of a node, reduce network forwarding resources occupied by the large quantity of replay attack packets, and effectively prevent an impact of a replay attack on a normal service.</p><p id="p-0009" num="0008">According to a second aspect, the present disclosure provides a method for preventing a replay attack on an SRv6 HMAC verification. The method is performed by a second network device. The method includes the second network device generates a first SRv6 packet, where a packet header of the first SRv6 packet includes anti-replay attack verification information. The second network device sends the first SRv6 packet to a first network device, where the anti-replay attack verification information is used by the first network device to verify, before HMAC computation is performed, whether the first SRv6 packet is a replay attack packet.</p><p id="p-0010" num="0009">According to the foregoing method, when generating an SRv6 packet, a network device includes anti-replay attack verification information in the packet, so that a node that receives the packet can verify, based on the anti-replay attack verification information and before HMAC computation, whether the SRv6 packet is a replay attack packet. Further, before HMAC computation, the receive node can identify and discard the replay attack packet in a timely manner, to effectively reduce computing resource consumption of the node, reduce network forwarding resources occupied by a large quantity of replay attack packets, and effectively prevent an impact of a replay attack on a normal service.</p><p id="p-0011" num="0010">According to a third aspect, the present disclosure provides a method for preventing a replay attack on an SRv6 HMAC verification. The method is performed by a control management device. The method includes the control management device generates anti-replay attack verification information, where the anti-replay attack verification information is used by a network node to perform anti-replay attack verification on an SRv6 packet that carries the anti-replay attack verification information. The control management device sends the anti-replay attack verification information to a second network device. After receiving the anti-replay attack verification information, the second network device generates the corresponding SRv6 packet. Before performing HMAC computation, the network node receiving the SRv6 packet can effectively identify, based on the replay attack prevention verification information carried in the packet, whether the packet is a replay attack packet, to discard a large quantity of replay attack packets based on the anti-replay attack verification information carried in the packet, thereby avoiding performing HMAC computation on the large quantity of replay attack packets. Therefore, the node in a network device can effectively reduce computing resource consumption of the node, to reduce network forwarding resources occupied by the large quantity of replay attack packets, and effectively preventing an impact of a replay attack on a normal service. The control management device delivers the anti-replay attack verification information to the network node, so that SRH information can be delivered in a centralized manner, and there is no need to separately perform a configuration on a plurality of forwarding nodes, thereby simplifying configurations of the forwarding nodes.</p><p id="p-0012" num="0011">Optionally, the control management device generates an HMAC verification policy, where the anti-replay attack verification information is carried in the HMAC verification policy, and the control management device sends the HMAC verification policy to the corresponding network node. The control management device delivers the HMAC verification policy in a centralized manner, to implement centralized control of the HMAC verification policy, so that the forwarding nodes do not need to separately configure the HMAC verification policy, thereby effectively simplifying the configurations of the forwarding nodes.</p><p id="p-0013" num="0012">Optionally, the control management device generates the segment routing header information. The SRH information carries the anti-replay attack verification information and a segment list corresponding to forwarding paths. The control management device delivers the anti-replay attack verification information to the corresponding network node while delivering the SRH information to the corresponding network node. Therefore, after performing centralized path computation, the control management device can send the anti-replay attack verification information together with path information to the corresponding forwarding nodes, thereby effectively simplifying the configurations of forwarding nodes.</p><p id="p-0014" num="0013">Optionally, in the foregoing aspects, the anti-replay attack verification information includes one or more of the following information: a timestamp, a nonce, and a sequence number. When the anti-replay attack verification is performed by using the timestamp, the network node does not need to store time information locally, and may perform the anti-replay attack verification on the packet based on the timestamp carried in the packet and current time of receiving the packet. In this way, the network node does not need to maintain a large amount of data, thereby reducing a burden caused by data maintenance on the device and reducing network resources occupied by the data. When the anti-replay attack verification is performed by using the nonce or the sequence number, because either the nonce or the sequence number can uniquely identify a packet, a replay attack packet can be effectively identified.</p><p id="p-0015" num="0014">Optionally, in the foregoing aspects, the anti-replay attack verification information includes the timestamp, and that a first network device performs anti-replay attack verification on a first SRv6 packet includes the first network device verifies whether a deviation between the timestamp and the current time of the first network device meets a preset condition.</p><p id="p-0016" num="0015">Optionally, in the foregoing aspects, the anti-replay attack verification information includes the nonce, and that a first network device performs anti-replay attack verification on a first SRv6 packet includes the first network device verifies, based on a locally recorded nonce, whether the nonce carried in the first SRv6 packet is valid.</p><p id="p-0017" num="0016">Optionally, in the foregoing aspects, the anti-replay attack verification information includes the sequence number, and that a first network device performs anti-replay attack verification on a first SRv6 packet includes the first network device verifies, based on a locally recorded packet sequence number, whether the sequence number carried in the first SRv6 packet is valid.</p><p id="p-0018" num="0017">Optionally, in the foregoing aspects, the packet header includes an extended type-length-value (TLV) field, and the extended TLV field is used to carry the anti-replay attack verification information.</p><p id="p-0019" num="0018">Optionally, in the foregoing aspects, a Type field of the TLV field indicates that the TLV field is used to carry the SRv6 HMAC anti-replay attack verification information.</p><p id="p-0020" num="0019">Optionally, in the foregoing aspects, the extended TLV field is an extended HMAC TLV field, and the extended HMAC TLV field is further used to carry an HMAC encryption identifier HMAC key ID and an HMAC. An existing HMAC TLV field is extended, so that the existing field can be reused, another field of the packet is saved, and additional overheads are avoided.</p><p id="p-0021" num="0020">Optionally, in the foregoing aspects, the packet header includes first indication information, and the first indication information is used to identify a type of the anti-replay attack verification. The indication information is added to the packet to indicate the type of the anti-replay attack verification, so that when a plurality of anti-replay attack manners is used, the network node can perform the anti-replay attack verification on the packet based on identification information by using a corresponding verification solution. In this way, an anti-replay attack level can be further improved.</p><p id="p-0022" num="0021">Optionally, in the foregoing aspects, the first indication information includes a first bit, and the first bit is used to identify whether the anti-replay attack verification is performed by using the nonce.</p><p id="p-0023" num="0022">Optionally, in the foregoing aspects, the first indication information includes a second bit, and the second bit is used to identify whether the anti-replay attack verification is performed by using the timestamp.</p><p id="p-0024" num="0023">Optionally, in the foregoing aspects, the first indication information includes a third bit, and the third bit is used to identify whether the anti-replay attack verification is performed by using the sequence number.</p><p id="p-0025" num="0024">Optionally, in the foregoing aspects, the second network device obtains the anti-replay attack verification information from the control management device.</p><p id="p-0026" num="0025">Optionally, in the foregoing aspects, the anti-replay attack verification information is used as a hash factor of HMAC computation to perform the HMAC computation. In this case, even if an attacker modifies a value of the anti-replay attack verification information after generating an attack packet, because HMAC computation uses the anti-replay attack verification information as the hash factor for hash computation, an HMAC obtained by a node R<b>2</b> through computation is different from an HMAC carried in the packet, and an HMAC verification fails. This can effectively prevent the attack.</p><p id="p-0027" num="0026">According to a fourth aspect, an embodiment of the present disclosure provides a network device, including a communication interface and a processor connected to the communication interface. The network device is configured to perform the method according to any one of the foregoing aspects or implementations via the communication interface and the processor.</p><p id="p-0028" num="0027">According to a fifth aspect, an embodiment of the present disclosure provides a control management device, including a communication interface and a processor connected to the communication interface. The control management device is configured to perform, via the communication interface and the processor, the method performed by the control management device in any one of the foregoing aspects.</p><p id="p-0029" num="0028">According to a sixth aspect, an embodiment of the present disclosure provides a network node, including a memory and a processor. The memory is configured to store program code, and the processor is configured to run instructions in the program code, so that the network node performs the method according to any one of the foregoing aspects or implementations.</p><p id="p-0030" num="0029">According to a seventh aspect, an embodiment of the present disclosure provides a control management device. The control management device includes a memory and a processor, the memory is configured to store program code, and the processor is configured to run instructions in the program code, so that the control management device performs the method performed by the control management device in any one of the foregoing aspects or implementations.</p><p id="p-0031" num="0030">According to an eighth aspect, an embodiment of the present disclosure provides a computer-readable storage medium. The computer-readable storage medium stores instructions. When the instructions are run on a computer, the computer is enabled to perform the method according to any one of the foregoing aspects or implementations.</p><p id="p-0032" num="0031">According to a ninth aspect, an embodiment of the present disclosure provides a communication system. The communication system includes the network node according to the fourth aspect or the sixth aspect and the control management device according to the fifth aspect or the seventh aspect.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of a structure of an SRv6 packet according to an embodiment of the present disclosure;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> is a schematic diagram of a network architecture according to an embodiment of the present disclosure;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> is a schematic diagram of another network architecture according to an embodiment of the present disclosure;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic flowchart of a method for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of the present disclosure;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a schematic diagram of a structure of an SRv6 packet according to an embodiment of the present disclosure;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a schematic diagram of a structure of another SRv6 packet according to an embodiment of the present disclosure;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic flowchart of a method for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of the present disclosure;</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic flowchart of a method for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of the present disclosure;</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic flowchart of a method for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of the present disclosure;</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic flowchart of a method for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of the present disclosure;</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic diagram of a structure of a network device according to an embodiment of the present disclosure;</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a schematic diagram of a structure of a control management device according to an embodiment of the present disclosure;</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a schematic diagram of a structure of a network device according to an embodiment of the present disclosure;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a schematic diagram of a structure of a control management device according to an embodiment of the present disclosure;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a schematic diagram of a structure of a network device according to an embodiment of the present disclosure;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a schematic diagram of a structure of a control management device according to an embodiment of the present disclosure; and</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a schematic diagram of a structure of a network device according to an embodiment of this application.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0050" num="0049">The following describes technical solutions of embodiments in the present disclosure with reference to accompanying drawings. A network architecture and a service scenario described in embodiments of the present disclosure are intended to describe the technical solutions in embodiments of the present disclosure more clearly, and do not constitute a limitation on the technical solutions provided in embodiments of this application. Persons of ordinary skill in the art may know that: With the evolution of the network architecture and the emergence of new service scenarios, the technical solutions provided in embodiments of the present disclosure are also applicable to similar technical problems.</p><p id="p-0051" num="0050">Ordinal numbers such as &#x201c;1&#x201d;, &#x201c;2&#x201d;, &#x201c;3&#x201d;, &#x201c;first&#x201d;, &#x201c;second&#x201d;, and &#x201c;third&#x201d; in the present disclosure are used to distinguish between a plurality of objects, but are not used to limit a sequence of the plurality of objects.</p><p id="p-0052" num="0051">&#x201c;A and/or B&#x201d; mentioned in the present disclosure should be understood as including the following cases: Only A is included, only B is included, or both A and B are included.</p><p id="p-0053" num="0052">For SRv6 and technologies related to an HMAC verification and HMAC computation performed on an SRH in this application, refer to related descriptions of IETF Request For Comments (RFC) 8402, RFC 8754, and RFC 2104. RFC 8402, RFC 8754, and RFC 2104 are incorporated into the present disclosure by reference in their entireties.</p><p id="p-0054" num="0053">To facilitate understanding of the technical solutions of this application, the following explains and describes some technical terms in the present disclosure with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of a structure of an SRv6 packet according to an embodiment of this application. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the SRv6 packet includes an IPv6 header, a segment routing header SRH, and a payload. The SRH includes an HMAC TLV and a SID list that indicates packet forwarding paths. The segment identifier list may also be referred to as a segment list. In this application, the segment identifier list and the segment list are usually used interchangeably.</p><p id="p-0056" num="0055">In an implementation, the SID list may include segment identifiers SIDs of several nodes, for example, include several IPv6 addresses. The SIDs of the nodes indicate the nodes passed through in a packet forwarding process. In another implementation, the SID list may include SIDs of several adjacent links, and the SIDs of the adjacent links indicate the adjacent links through which a packet is forwarded. The adjacent link refers to a direct link between two nodes. In still another implementation, the SID list may further include an SID of a node and an SID of an adjacent link. The IPv6 header includes a destination address (DA) field. A value of the DA field changes in an SRv6 packet forwarding process. The SRH includes a segment left (SL) field. The SL field indicates a quantity of SIDs in the SID list that are not processed. The SL is numbered from 0. When a value of the SL is equal to m, a quantity of SIDs in the SID list that are not processed is m+1, and a segment list[m] is currently being processed. Processing an SID in the SID list means forwarding a packet to a node indicated by the SID.</p><p id="p-0057" num="0056">In an implementation, when the value of the SL is equal to m, a destination address in the IPv6 header is an address indicated by the segment list[m]. When forwarding the SRv6 packet, a network node can determine, based on the value of the SL field and the SID list, a next-hop destination node to forward the packet. For example, after a transit node receives the SRv6 packet, if the destination address in the SRv6 packet is an address of the transit node, the transit node may subtract 1 from the value of the SL field, use a value of the SL field, obtained by subtracting 1, as an index to determine the next-hop node to forward the packet. After determining the next-hop node to forward the packet, the transit node changes the value of the destination address field to an IPv6 address of the determined next-hop node.</p><p id="p-0058" num="0057">In another implementation, considering that a length of an Ethernet packet needs to be within a proper range, if the SID list occupies a large data amount, a data amount of the payload is affected. If the data amount of the payload becomes smaller, network performance of an entire network is affected. Therefore, the SID list in the SRv6 packet obtained by the network node from a head node may not include the destination address carried in the IPv6 header, to reduce a data amount occupied by the SID list. In this scenario, the quantity, of SIDs that are not processed, indicated by the SL field in the SRv6 packet obtained by the network node is greater than a value of LAST Entry. During SRv6 packet forwarding, if the SID list does not include the destination address carried in the IPv6 header, this SRv6 packet forwarding mode may also be referred to as a reduce mode. Correspondingly, if the SID list includes the destination address carried in the current IPv6 header, this SRv6 packet forwarding mode may also be referred to as a common mode.</p><p id="p-0059" num="0058">The HMAC TLV field includes an HMAC encryption identifier (HMAC key ID) field and an HMAC field. The HMAC key ID field is used for generating a pre-shared key and an algorithm that are required by an HMAC, and the field may include 4 bytes. The HMAC field is used to carry the HMAC. The HMAC TLV is an extended TLV of the SRH and provides an HMAC verification for some fields in the IPv6 packet header and some fields in the SRH. In an example, specific fields used in HMAC computation that are defined in RFC 8754 are as follows.</p><p id="p-0060" num="0059">An IPv6 Header is a header of an IPv6 packet, where Source Address indicates a source address of the IPv6 packet.</p><p id="p-0061" num="0060">In SRH, Last Entry (1 byte) in an SRv6 segment list indicates an index of the last element in the segment list.</p><p id="p-0062" num="0061">In the SRH, &#x201c;Flags&#x201d; (1 byte) is an extended field, and a default value is all 0s.</p><p id="p-0063" num="0062">In the SRH, all addresses in the segment list are with variable lengths.</p><p id="p-0064" num="0063">In the SRH, HMAC key ID (4 bytes) is a key value in an HMAC verification, and uniquely identifies an HMAC algorithm and a shared key used in the HMAC verification.</p><p id="p-0065" num="0064">In the SRH, &#x201c;HMAC 16 bits following length&#x201d; indicates that a length field in an HMAC TLV field is followed by 16 bits. In RFC 8754, the 16 bits following the length field correspond to a D bit and a Reserved field shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. HMAC is a keyed hashed message authentication code, and may also be referred to as a hash-based message authentication code.</p><p id="p-0066" num="0065">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the HMAC field indicates a data digest of specific fields in the SRv6 packet. The field usually includes 8 bytes, and may include a maximum of 32 bytes by the date of this patent application. The specific fields include, for example, a source address (SA) field, a segment list maximum identifier (last entry) field, a &#x201c;flags&#x201d; field, a SID list field, and the HMAC key ID field that are shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0067" num="0066">HMAC verification: A specific HMAC verification process is defined in RFC 8754. According to descriptions in RFC 8754, the HMAC verification starts by verifying whether a current segment in the SRH is the same as a destination address in the IPv6 packet header. After the verification is successful, HMAC computation starts. In RFC 8754, how to verify whether the current segment is equal to the destination address of the IPv6 header in the reduce mode and the normal mode described above is separately described, and details are not described herein. RFC 2104 defines an existing HMAC computation method. An HMAC field in an SRH is an output of HMAC computation. After receiving an SRv6 packet, if the packet passes the HMAC verification, a network node continues to process the packet; if the packet fails the HMAC verification, the network node discards the received SRv6 packet. It should be noted that a specific HMAC verification process and specific fields used in HMAC computation in embodiments of the present disclosure are not limited to the manner described in RFC 8754.</p><p id="p-0068" num="0067">HMAC computation: When a node configured with an HMAC verification receives an SRv6 packet, the node parses an HMAC key ID field and uses the HMAC key ID as an index to search for a key and a hash algorithm used in the HMAC verification. Then, the node computes specific fields in the received SRv6 packet based on the found key and hash algorithm to obtain a data digest. The node compares the computed data digest with a value of an HMAC field in the SRv6 packet. If the two values are the same, the SRv6 packet is not tampered with and can be forwarded. If the two values are different, the SRv6 packet has been tampered with. In this case, the packet can be discarded.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> are schematic diagrams of application scenarios of an HMAC verification according to an embodiment of this application. In an example, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, a network <b>100</b> includes a first domain <b>10</b>, a second domain <b>20</b>, and a third domain <b>30</b>. In a specific implementation, the domain <b>20</b> may be an SRv6 domain. In another specific implementation, the domain <b>10</b> and/or the domain <b>30</b> may also each be an SRv6 domain. The domain <b>10</b> includes a node R<b>1</b>, the domain <b>20</b> includes nodes R<b>2</b>, R<b>3</b>, R<b>4</b>, R<b>6</b>, R<b>7</b>, and R<b>8</b>, and the domain <b>30</b> includes a node R<b>5</b>. The domain <b>20</b> may be an SRv6 trusted domain, and the node R<b>2</b> is an edge node of the trusted domain <b>20</b>. The node R<b>2</b> may directly communicate with the node R<b>1</b>, and the node R<b>4</b> may directly communicate with the node R<b>5</b>. In some embodiments, the domain <b>10</b> and the domain <b>30</b> may also be defined as SRv6 trust domains. In embodiments of this application, an SRv6 trusted domain may belong to an access network, a bearer network, a core network, an operator network, or a campus network. This is not specifically limited in embodiments of this application. In another example, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, based on the network architecture shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, the network <b>100</b> may further include a control management device <b>40</b>. The control management device <b>40</b> is communicatively connected to the network devices in the network <b>100</b>. The control management device may be, for example, configured to compute a path, allocate segment lists corresponding to forwarding paths, and deliver information required by an HMAC TLV. For example, the control management device mentioned in embodiments of the present disclosure may be a device that runs network management software, may be a controller, or may be a software module that implements a related function. This is not specifically limited in embodiments of this application. In an example, the domain <b>20</b> may belong to an operator network, the node R<b>2</b> is used as an operator edge device, the first domain <b>10</b> belongs to an enterprise network, and the node R<b>1</b> is a customer-premises equipment (CPE) device.</p><p id="p-0070" num="0069">With reference to a scenario in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, the following describes an HMAC verification procedure by using an example.</p><p id="p-0071" num="0070">As shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, the head node R<b>1</b> generates a packet sent from the node R<b>1</b> to the node R<b>5</b>, and the packet is forwarded in the SRv6 domain <b>20</b> through the nodes R<b>2</b>-&#x3e;R<b>3</b>-&#x3e;R<b>4</b>. The SRv6 packet may be in a packet format shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Whether to perform an HMAC verification on the nodes R<b>2</b>, R<b>3</b>, and R<b>4</b> may be configured as required. In this example, an HMAC verification policy is configured on the R<b>2</b>. The verification policy includes but is not limited to: an interface configured for the HMAC verification, a shared key configured for an HMAC, a hash algorithm configured to be used in the HMAC verification, and the like.</p><p id="p-0072" num="0071">1. The R<b>1</b> generates an SRv6 packet carrying a segment list and an HMAC TLV.</p><p id="p-0073" num="0072">In the SRv6 packet, an SA field in an IPv6 packet header carries an address of the R<b>1</b>, a DA field in the IPv6 packet header carries an address of the R<b>2</b>, and an SRH carries the segment list.</p><p id="p-0074" num="0073">In a specific implementation, the DA field carries an address SID <b>2</b> of the R<b>2</b>. The segment list in the SRH includes three segment identifiers: SID <b>4</b>, SID <b>3</b>, and SID <b>2</b>, respectively indicating the node R<b>4</b>, the node R<b>3</b>, and the node R<b>2</b>. Segment left is equal to 2.</p><p id="p-0075" num="0074">In another specific implementation, when the domain <b>20</b> is configured as an SRv6 trusted domain, an SRv6 packet may access the domain <b>20</b> based on a BSID. The BSID is used to identify one forwarding path. In this case, the DA field in the IPv6 packet header carries the BSID. Specifically, in an example, the control management device may generate the BSID for identifying the forwarding path that is in the trusted domain. Correspondingly, when computing forwarding paths of the SRv6 packet, the control management device may obtain the segment list including the BSID. In addition, after generating the BSID, the control management device may send a correspondence between the BSID and the forwarding path indicated by the BSID to the edge node R<b>2</b> of the trusted domain, so that the edge node R<b>2</b> of the trusted domain verifies the SRv6 packet, and forwards the packet in the trusted domain when the SRv6 packet passes the verification. In another example, the edge node R<b>2</b> of the trusted domain may generate the BSID, and send a correspondence between the BSID and the forwarding path indicated by the BSID to the control management device, so that when computing forwarding paths of the SRv6 packet, the control management device obtains the SID list including the BSID.</p><p id="p-0076" num="0075">An example is provided to describe the foregoing correspondence between the BSID and the forwarding path indicated by the BSID. A BSID <b>1</b> indicates a forwarding path <b>1</b> that is in a trusted domain, for example, indicates a path between the R<b>2</b> and the R<b>3</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. The foregoing correspondence may be, for example, a correspondence between the BSID <b>1</b> and an SID list indicating the forwarding path <b>1</b>, and may be understood with reference to Table 1.</p><p id="p-0077" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="161pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>BSID</entry><entry>SID list indicating forwarding paths</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>BSID 1</entry><entry>SID 1 (indicating the node R1)</entry></row><row><entry/><entry/><entry>SID 2 (indicating the node R2)</entry></row><row><entry/><entry/><entry>SID 3 (indicating the node R3)</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0078" num="0076">As shown in Table 1, the forwarding path indicated by the BSID <b>1</b> is a path that successively passes through the node <b>1</b>, the node <b>2</b>, and the node <b>3</b>. The example provided in Table 1 is only for ease of understanding, and does not constitute a limitation on embodiments of this application.</p><p id="p-0079" num="0077">In a specific implementation, the R<b>1</b> may generate an HMAC key ID and an HMAC verification value of the HMAC TLV based on a preset key and an encryption algorithm. In another specific implementation, the HMAC TLV may alternatively be generated by the control management device and then delivered to the R<b>1</b>. The HMAC verification value is carried in the HMAC field of the HMAC TLV shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0080" num="0078">2. The R<b>2</b> performs the HMAC verification on the received SRv6 packet.</p><p id="p-0081" num="0079">A specific HMAC verification process is described below by using an example in which the destination address in the IPv6 packet header of the SRv6 packet is SID <b>2</b>.</p><p id="p-0082" num="0080">The R<b>1</b> forwards the SRv6 packet to the node R<b>2</b>. In a specific implementation, after receiving the SRv6 packet, the node R<b>2</b> performs HMAC computation in the HMAC computation process described above. In another specific implementation, before performing HMAC computation, the node R<b>2</b> starts to perform the first step of the HMAC verification based on the destination address SID <b>2</b> carried in the SRv6 packet and a current SID indicated by the SL field in the SRH, to determine whether the destination address is consistent with the current SID. If the destination address is consistent with the current SID, it is considered that the packet passes the first step of the HMAC verification, and the second step of the HMAC verification, that is, HMAC computation is performed. If the destination address is inconsistent with the current SID, it is considered that the HMAC verification fails, and the packet is discarded.</p><p id="p-0083" num="0081">When the HMAC computation is performed, a to-be-verified HMAC is obtained based on a plurality of specific fields used in HMAC computation described above. The to-be-verified HMAC is compared with the HMAC verification value carried in the SRv6 packet, to perform verification. If the packet passes the verification, it is considered that the packet passes the HMAC verification, and a packet processing procedure continues. If the packet fails the verification, it is considered that the packet fails the HMAC verification, and the packet is discarded.</p><p id="p-0084" num="0082">In the HMAC verification solution described above, a large quantity of computing resources needs to be occupied to perform HMAC computation. When an attacker sends a large quantity of attack packets, especially replay attack packets, to the node R<b>2</b>, the R<b>2</b> needs to perform the HMAC verification on these packets, which severely occupies processor resources. Consequently, a normal packet cannot be effectively processed, and the node R<b>2</b> cannot work normally. If an existing manner such as rate limiting or access control list (ACL) filtering is used for prevention, because a valid packet and an attack packet cannot be distinguished, and especially a replay attack packet cannot be effectively identified, the valid packet may be discarded, and a normal service is affected. In addition, because the replay attack packet cannot be identified or discarded in the foregoing HMAC verification, the large quantity of replay attack packets is normally forwarded in a network, and a large quantity of network resources are occupied.</p><p id="p-0085" num="0083">To resolve the foregoing problem, the present disclosure provides a solution for preventing a replay attack on an SRv6 HMAC verification. Anti-replay attack verification information is added to an SRv6 packet, so that a node can determine, before performing HMAC computation, whether the received packet is a replay attack packet based on the anti-replay attack verification information. If the node determines that the received packet is a replay attack packet, the node does not perform HMAC computation and discards the packet. If the node determines that the received packet is not a replay attack packet, the node continues to perform HMAC computation. According to the foregoing solution, when an HMAC verification is used for an SRv6 packet, HMAC computation on a large quantity of replay attack packets can be avoided, thereby greatly reducing computing resources required when a processor performs the HMAC verification, improving efficiency of processing a normal packet, and effectively ensuring normal running of a service. In addition, network forwarding resources occupied by the large quantity of replay attack packets are greatly reduced.</p><p id="p-0086" num="0084">The following describes, with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a method <b>300</b> for preventing a replay attack on an SRv6 HMAC verification provided in this application. The method <b>300</b> may be applied to the network scenario shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. The method <b>300</b> includes the following steps.</p><p id="p-0087" num="0085">S<b>301</b>: A node R<b>2</b> receives an SRv6 packet <b>1</b>, where the SRv6 packet <b>1</b> includes anti-replay attack verification information.</p><p id="p-0088" num="0086">S<b>302</b>: The node R<b>2</b> performs anti-replay attack verification on the SRv6 packet <b>1</b> based on the anti-replay attack verification information. If the packet passes the verification, S<b>303</b> is performed; if the packet fails the verification, S<b>304</b> is performed.</p><p id="p-0089" num="0087">S<b>303</b>: Perform HMAC computation on the SRv6 packet <b>1</b>.</p><p id="p-0090" num="0088">S<b>304</b>: Do not perform HMAC computation, and discard the packet.</p><p id="p-0091" num="0089">In S<b>301</b>, in an example, the node R<b>2</b> receives a normal SRv6 packet <b>1</b> from a node R<b>1</b>. In this case, the R<b>2</b> performs S<b>302</b> to perform anti-replay attack verification on the SRv6 packet <b>1</b>. After the packet passes the verification, the R<b>2</b> performs S<b>303</b> for subsequent HMAC computation. In another example, the node R<b>2</b> receives the SRv6 packet <b>1</b> from an attacker device, and the SRv6 packet <b>1</b> is a replay attack packet. In this case, the R<b>2</b> may perform S<b>302</b> to verify the packet. After the verification fails, the R<b>2</b> performs S<b>304</b> to discard the packet.</p><p id="p-0092" num="0090">Specifically, before performing HMAC computation on the SRv6 packet <b>1</b>, the node R<b>2</b> performs anti-replay attack verification on the SRv6 packet <b>1</b> based on the anti-replay attack verification information, that is, determines whether the SRv6 packet <b>1</b> is a replay attack packet. If the node determines that the SRv6 packet <b>1</b> is not a replay attack packet, the node continues to perform HMAC computation. If the node determines that the SRv6 packet <b>1</b> is a replay attack packet, the node does not perform HMAC computation.</p><p id="p-0093" num="0091">In a specific implementation, the anti-replay attack verification information may be a timestamp. When the anti-replay attack verification information is a timestamp, the SRv6 packet <b>1</b> includes a timestamp field. For example, the timestamp field may be used to carry a timestamp at which the node R<b>1</b> sends the SRv6 packet <b>1</b> or a timestamp at which the SRv6 packet <b>1</b> is generated. The node R<b>2</b> receives the SRv6 packet <b>1</b>, checks the timestamp field in the packet, and verifies whether the timestamp carried in the packet meets a preset condition. For example, the preset condition may be that a time deviation between the timestamp carried in the packet and current time of the node R<b>2</b> meets a preset condition, where for example, the time deviation is within a proper range or the time deviation is beyond an abnormal range. Alternatively, the preset condition may be that time indicated by the timestamp carried in the packet meets a preset condition, where for example, the time indicated by the timestamp is within a preset time range. If the preset condition is met, it indicates that the packet passes the verification; if the preset condition is not met, it indicates that the packet fails the verification, and the packet is discarded.</p><p id="p-0094" num="0092">In the solution in which the anti-replay attack verification is performed by using the timestamp, if the SRv6 packet <b>1</b> is a replay attack packet, a packet header of the SRv6 packet <b>1</b> should be the same as a packet header of an SRv6 packet <b>2</b> that has been received by the node R<b>2</b>. Therefore, timestamps carried in the two packets are the same. In an example, the node R<b>2</b> receives, at time t<b>1</b>, the SRv6 packet <b>2</b> sent by the R<b>1</b>, where time indicated by the timestamp carried in the SRv6 packet <b>2</b> is t<b>2</b>, and a time derivation between t<b>1</b> and t<b>2</b> is within a proper range. In this case, the packet passes the verification, and HMAC computation continues to be performed. Then, the R<b>2</b> receives the replay attack packet SRv6 packet <b>1</b> at time t<b>3</b>. The timestamp carried in the SRv6 packet <b>1</b> is still t<b>2</b>. In this case, a time derivation between the current time t<b>3</b> of the R<b>2</b> and the timestamp t<b>2</b> in SRv6 packet <b>1</b> exceeds a proper range. In this case, the verification fails, and HMAC computation is not performed. It can be seen that, by adding a timestamp verification in an HMAC verification process, a large quantity of replay attack packets can be identified and discarded before HMAC computation is performed. This effectively reduces computing resource consumption of a node, reduces network forwarding resources occupied by the large quantity of replay attack packets, and effectively prevents an impact of a replay attack on a normal service.</p><p id="p-0095" num="0093">In a specific implementation, the anti-replay attack verification information may be a nonce. When the anti-replay attack verification information is a nonce, the SRv6 packet <b>1</b> includes a nonce field used to carry the nonce. After receiving the SRv6 packet <b>1</b>, the R<b>2</b> verifies the nonce field, and verifies, based on a locally stored nonce record of the node, whether the nonce carried in SRv6 packet <b>1</b> is valid. For example, if the nonce is stored in the local record, it is considered that the nonce carried in the SRv6 packet <b>1</b> is not a valid nonce. Therefore, the packet is discarded, and HMAC computation is not performed. If the nonce is not stored in the local record, it is considered that the nonce included in the SRv6 packet <b>1</b> is a valid nonce, and the nonce is locally stored to verify a nonce carried in a subsequent packet. HMAC computation continues to be performed on the packet that passes the verification. In this solution, a nonce is randomly and uniquely generated when a node generates a packet. Therefore, if the node R<b>2</b> determines that a same nonce has been locally stored before the node R<b>2</b> receives the SRv6 packet <b>1</b>, the node R<b>2</b> considers that the same packet has been received. In this case, the node R<b>2</b> determines that the SRv6 packet <b>1</b> is a replay attack packet. It can be seen that, by adding a nonce verification in an HMAC verification process, a large quantity of replay attack packets can be identified and discarded before HMAC computation is performed. This effectively reduces computing resource consumption of a node, reduces network forwarding resources occupied by the large quantity of replay attack packets, and effectively prevents an impact of a replay attack on a normal service.</p><p id="p-0096" num="0094">In a specific implementation, the anti-replay attack verification information may alternatively be a packet sequence number. A specific manner of performing the anti-replay attack verification using the packet sequence number is similar to the manner of performing the anti-replay attack verification using a nonce. That is, in this manner, whether a sequence number to be verified is valid is determined by comparison against a local record of the node. For a packet with an invalid sequence number, the packet is discarded, and HMAC computation is not performed. For a packet that passes the sequence number verification, HMAC computation and an HMAC verification continue to be performed. In an example, if a sequence number carried in a packet is the same as a locally recorded sequence number, the sequence number carried in the packet is considered as an invalid sequence number. If the local record does not store a sequence number that is the same as a sequence number carried in a packet, the sequence number carried in the packet is considered as a valid sequence number. In this case, the packet passes the verification, and the sequence number is stored locally.</p><p id="p-0097" num="0095">In a specific implementation, the SRH may be extended with a new field to carry the anti-replay attack verification information. For example, an extended TLV field may be newly added to the SRH, and a type field of the newly added TLV field indicates that the TLV is used to carry the anti-replay attack verification information.</p><p id="p-0098" num="0096">In a specific implementation, an existing HMAC TLV may alternatively be extended with a new field to carry the anti-replay attack verification information. For example, a new HMAC TLV type, such as type <b>7</b>, may be newly added to indicate the anti-replay attack verification information carried in the HMAC TLV. For example, as shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, a field is newly added to the HMAC TLV field to carry the anti-replay attack verification information such as the timestamp, the nonce, and/or the sequence number.</p><p id="p-0099" num="0097">In a specific implementation, the SRH may be alternatively extended with a new field to carry indication information <b>1</b>, where the indication information <b>1</b> indicates a type of the anti-replay attack verification. In an example, the type of the anti-replay attack verification includes but is not limited to one or more of the following: anti-replay attack verification using the nonce, anti-replay attack verification using the timestamp, and anti-replay attack verification using the sequence number. In a specific implementation, the indication information <b>1</b> indicates the type of the anti-replay attack verification in a bit mapping manner. For example, a plurality of bits may be newly added to a reserved field of the SRH header, to respectively identify different types of the anti-replay attack verification. For example, the plurality of bits may include a bit T, a bit N, and a bit S. When T is denoted as 1, it indicates that the timestamp is used to verify a packet; when N is denoted as 1, it indicates that the nonce is used to verify a packet; when S is denoted as 1, it indicates that the sequence number is used to verify a packet. In a specific implementation, binary values of several bits may be alternatively used to indicate different types of the anti-replay attack verification. For example, the indication information <b>1</b> includes three bits. When the three bits are {0, 0, 0}, in other words, when a binary value is 0, it indicates that the verification is performed by using the timestamp. When the three bits are {0, 0, 1}, in other words, when a binary value is 1, it indicates that the verification is performed by using the nonce. A specific manner of representing the indication information <b>1</b> is not specifically limited in this application.</p><p id="p-0100" num="0098">In a specific implementation, the existing HMAC TLV may alternatively be extended with a new field to carry the indication information <b>1</b>. For example, a field is newly added to the HMAC TLV field to carry anti-replay attack verification information such as the timestamp, the nonce, and/or the sequence number. For example, as shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the reserved field of the HMAC TLV field may be extended with three bits to carry the indication information <b>1</b>.</p><p id="p-0101" num="0099">It should be noted that, in this application, any anti-replay attack verification information may be independently used to verify a packet, or two or more mechanisms may be used together to perform the verification, so as to further improve an anti-replay attack capability.</p><p id="p-0102" num="0100">In a specific implementation, specific fields used by the node R<b>2</b> to perform HMAC computation include the anti-replay attack verification information. By adding the anti-replay attack verification information to HMAC computation, even if an attacker modifies a value of the anti-replay attack verification information after generating an attack packet, because HMAC computation uses the anti-replay attack verification information as a hash factor for hash computation, an HMAC obtained by the node R<b>2</b> through computation is different from an HMAC carried in the packet, and the HMAC verification fails. This can effectively prevent the attack.</p><p id="p-0103" num="0101">In a specific implementation, a control management device may deliver the anti-replay attack verification information to a network node, so that the node carries the anti-replay attack verification information in a generated SRv6 packet, and after receiving the corresponding packet, a node configured with an HMAC verification can perform anti-replay attack verification on the packet based on the anti-replay attack verification information carried in the packet. A method <b>500</b> for preventing a replay attack provided in the present disclosure is described below with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>. The method may be applied to the scenario shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. In the method <b>500</b>, differences between the method <b>500</b> and the method <b>300</b> are mainly described. For same parts in the method <b>300</b>, refer to related descriptions in the method <b>300</b>. Details are not described herein again. The method <b>500</b> includes the following steps.</p><p id="p-0104" num="0102">S<b>501</b>: A control management device generates SRH information including an HMAC TLV, where the SRH information includes anti-replay attack verification information.</p><p id="p-0105" num="0103">In a specific implementation, the control management device performs SRv6 path computation based on a network topology, and generates a segment list corresponding to packet forwarding paths, to guide packet forwarding in an SRv6 network. The anti-replay attack verification information such as a timestamp, a nonce, and/or a sequence number and a corresponding HMAC key ID are generated. HMAC computation is performed based on a shared key, an HMAC algorithm, and specific fields used in the HMAC computation to obtain an HMAC verification value. In a specific implementation, a key field used in the HMAC computation includes the anti-replay attack verification information.</p><p id="p-0106" num="0104">S<b>502</b>: The control management device sends the SRH information to a node R<b>1</b>.</p><p id="p-0107" num="0105">S<b>503</b>: The node R<b>1</b> receives the SRH information, and generates an SRv6 packet <b>1</b> based on the SRH information.</p><p id="p-0108" num="0106">S<b>504</b>: The node R<b>1</b> forwards the SRv6 packet <b>1</b> to a node R<b>2</b>.</p><p id="p-0109" num="0107">After the node R<b>2</b> receives the SRv6 packet <b>1</b>, the R<b>2</b> may process the packet according to the method <b>300</b> described above. Details are not described herein again.</p><p id="p-0110" num="0108">Persons skilled in the art may understand that specific content shown in blocks S<b>501</b> and S<b>504</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref> is merely a specific example provided for ease of understanding the technical solutions of this application, and should not be understood as a limitation on the method <b>500</b>.</p><p id="p-0111" num="0109">In a specific implementation, the control management device may send the anti-replay attack verification information to the node R<b>2</b> based on a plurality of protocols such as the Network Configuration Protocol (NETCONF), the Simple Network Management Protocol (SNMP), the Path Computation Element Communication Protocol (PCEP), and the Border Gateway Protocol (BGP). The control management device may send the anti-replay attack verification information and other SRH information together to the node, or may separately send the anti-replay attack verification information and other SRH information based on different messages. This is not specifically limited in this application.</p><p id="p-0112" num="0110"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a method <b>600</b> for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of this application. The method may be applied to the network scenario shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. The method <b>600</b> may be specifically used to implement the method <b>300</b> or the method <b>500</b>. The method <b>600</b> includes S<b>601</b>, S<b>602</b>, and S<b>603</b>, or includes S<b>601</b>, S<b>602</b>, and S<b>604</b>.</p><p id="p-0113" num="0111">S<b>601</b>: A first network device receives a first SRv6 packet, where a packet header of the first SRv6 packet includes anti-replay attack verification information.</p><p id="p-0114" num="0112">Specifically, the first network device receives the first SRv6 packet from a second network device. The second network device may be a normal network element in a network domain, or may be a network attacker device. When the method <b>600</b> is specifically used to implement the method <b>300</b>, the first network device in S<b>601</b> is equivalent to the node R<b>2</b> in the method <b>300</b>, and the first SRv6 packet is equivalent to the SRv6 packet <b>1</b> described in the method <b>300</b>. The second network device may be the node R<b>1</b> described in the method <b>300</b>, or may be an attacker device.</p><p id="p-0115" num="0113">S<b>602</b>: The first network device performs anti-replay attack verification on the first SRv6 packet based on the anti-replay attack verification information.</p><p id="p-0116" num="0114">For specific descriptions of the anti-replay attack verification information described in the method <b>600</b>, refer to related descriptions in the method <b>300</b>. Details are not described herein again.</p><p id="p-0117" num="0115">S<b>603</b>: The first network device performs HMAC computation on the first SRv6 packet that passes the verification.</p><p id="p-0118" num="0116">S<b>604</b>: The first network device discards the first SRv6 packet that fails the verification.</p><p id="p-0119" num="0117">For a specific process of each step in the method <b>600</b>, refer to related descriptions in the method <b>300</b>. Details are not described herein again.</p><p id="p-0120" num="0118"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a method <b>700</b> for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of this application. The method <b>700</b> may be applied to the network scenario shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. The method <b>700</b> includes the following steps.</p><p id="p-0121" num="0119">S<b>701</b>: A second network device generates a first SRv6 packet, where a packet header of the first SRv6 packet includes anti-replay attack verification information.</p><p id="p-0122" num="0120">S<b>702</b>: The second network device sends the first SRv6 packet to a first network device, where the anti-replay attack verification information is used by the first network device to verify whether the first SRv6 packet is a replay attack packet.</p><p id="p-0123" num="0121">When the method <b>700</b> is specifically used to implement the method <b>300</b>, the second network device may be, for example, the node R<b>1</b> or the attacker device described in the method <b>300</b>, and the first network device may be, for example, the node R<b>2</b>.</p><p id="p-0124" num="0122">In a specific implementation, before S<b>701</b>, the second network device obtains the anti-replay attack verification information from a control management device. Specifically, in the method <b>700</b>, the second network device may obtain the anti-replay attack verification information from the control management device in the manner described in the method <b>500</b>.</p><p id="p-0125" num="0123">For specific descriptions of the anti-replay attack verification information and related steps in the method <b>700</b>, refer to related descriptions in the method <b>300</b>. Details are not described herein again.</p><p id="p-0126" num="0124"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a method <b>800</b> for preventing a replay attack on an SRv6 HMAC verification according to an embodiment of this application. The method <b>800</b> may be applied to the network scenario shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. The method <b>800</b> includes the following steps.</p><p id="p-0127" num="0125">S<b>801</b>: A control management device generates anti-replay attack verification information.</p><p id="p-0128" num="0126">S<b>802</b>: The control management device sends the anti-replay attack verification information to a second network device.</p><p id="p-0129" num="0127">In a specific implementation, the control management device generates an HMAC verification policy, where the anti-replay attack verification information is carried in the HMAC verification policy, and the control management device sends the HMAC verification policy to a corresponding network node. The control management device delivers the HMAC verification policy in a centralized manner, to implement centralized control of the HMAC verification policy, so that forwarding nodes do not need to separately configure the HMAC verification policy, thereby effectively simplifying configurations of the forwarding nodes.</p><p id="p-0130" num="0128">In a specific implementation, the control management device generates SRH information. The SRH information carries the anti-replay attack verification information and a segment list corresponding to forwarding paths. The control management device delivers the anti-replay attack verification information to the corresponding network node while delivering the SRH information to the corresponding network node. Therefore, after performing centralized path computation, the control management device can send the anti-replay attack verification information together with path information to the corresponding forwarding nodes, thereby effectively simplifying the configurations of forwarding nodes.</p><p id="p-0131" num="0129">The method <b>800</b> may be specifically used to implement the method <b>500</b> and the method <b>300</b>. In this case, the second network device in the method <b>800</b> is equivalent to the node R<b>1</b> described in the method <b>300</b> or <b>500</b>.</p><p id="p-0132" num="0130">In a specific implementation, the method <b>800</b> may further include the following steps.</p><p id="p-0133" num="0131">S<b>803</b>: The second network device generates a first SRv6 packet, where a packet header of the first SRv6 packet includes the anti-replay attack verification information.</p><p id="p-0134" num="0132">S<b>804</b>: The second network device sends the first SRv6 packet to a first network device, where the anti-replay attack verification information is used by the first network device to verify whether the first SRv6 packet is a replay attack packet.</p><p id="p-0135" num="0133">For related implementations of S<b>803</b> and S<b>804</b>, refer to descriptions of S<b>701</b> and S<b>702</b> in the method <b>700</b>. Details are not described herein again.</p><p id="p-0136" num="0134">In a specific implementation, the method <b>800</b> may further include the following steps.</p><p id="p-0137" num="0135">S<b>805</b>: The first network device receives the first SRv6 packet, where the packet header of the first SRv6 packet includes the anti-replay attack verification information.</p><p id="p-0138" num="0136">For specific descriptions of the anti-replay attack verification information described in the method <b>800</b>, refer to related descriptions in the method <b>300</b>. Details are not described herein again.</p><p id="p-0139" num="0137">S<b>806</b>: The first network device performs anti-replay attack verification on the first SRv6 packet to determine whether the first SRv6 packet passes the verification.</p><p id="p-0140" num="0138">S<b>807</b>: The first network device performs HMAC computation on the first SRv6 packet that passes the verification.</p><p id="p-0141" num="0139">S<b>808</b>: The first network device discards the first SRv6 packet that fails the verification.</p><p id="p-0142" num="0140">For related implementations of S<b>805</b> to S<b>808</b>, refer to related descriptions of S<b>601</b> to S<b>604</b> in the method <b>600</b>. Details are not described herein again.</p><p id="p-0143" num="0141">The following describes different implementations in the method <b>600</b>, the method <b>700</b>, and the method <b>800</b>.</p><p id="p-0144" num="0142">In a specific implementation, the anti-replay attack verification information includes one or more of the following information: a timestamp, a nonce, and a sequence number.</p><p id="p-0145" num="0143">In a specific implementation, the anti-replay attack verification information includes the timestamp, and that the first network device performs anti-replay attack verification on the first SRv6 packet includes the first network device verifies whether a deviation between the timestamp and current time of the first network device meets a preset condition.</p><p id="p-0146" num="0144">In a specific implementation, the anti-replay attack verification information includes the nonce, and that the first network device performs anti-replay attack verification on the first SRv6 packet includes the first network device verifies, based on a locally recorded nonce, whether the nonce carried in the first SRv6 packet is valid.</p><p id="p-0147" num="0145">In a specific implementation, the anti-replay attack verification information includes the sequence number, and that the first network device performs anti-replay attack verification on the first SRv6 packet includes the first network device verifies, based on a locally recorded packet sequence number, whether the sequence number carried in the first SRv6 packet is valid.</p><p id="p-0148" num="0146">In a specific implementation, the packet header of the first SRv6 packet includes an extended TLV field, and the extended TLV field is used to carry the anti-replay attack verification information. In a specific implementation, a Type field of the TLV field indicates that the TLV field is used to carry the SRv6 HMAC anti-replay attack verification information. In a specific implementation, the extended TLV field is an extended HMAC TLV field, and the extended HMAC TLV field is further used to carry an HMAC key ID and an HMAC.</p><p id="p-0149" num="0147">In a specific implementation, the packet header of the first SRv6 packet includes first indication information, and the first indication information is used to identify a type of the anti-replay attack verification. When the method <b>600</b>, <b>700</b>, or <b>800</b> is specifically used to implement the method <b>300</b> or <b>500</b>, the first indication information is equivalent to the indication information <b>1</b> in the method <b>300</b>. Related descriptions of the first indication information are not described herein again.</p><p id="p-0150" num="0148">In a specific implementation, the type of the anti-replay attack verification includes one or more of the following: anti-replay attack verification using the nonce; anti-replay attack verification using the timestamp; and anti-replay attack verification using the sequence number.</p><p id="p-0151" num="0149">In a specific implementation, the first indication information includes a first bit, and the first bit is used to identify whether the anti-replay attack verification is performed by using the nonce.</p><p id="p-0152" num="0150">In a specific implementation, the first indication information includes a second bit, and the second bit is used to identify whether the anti-replay attack verification is performed by using the timestamp.</p><p id="p-0153" num="0151">In a specific implementation, the first indication information includes a third bit, and the third bit is used to identify whether the anti-replay attack verification is performed by using the sequence number.</p><p id="p-0154" num="0152">In a specific implementation, the anti-replay attack verification information is used as a hash factor of HMAC computation to perform the HMAC computation.</p><p id="p-0155" num="0153">In addition, an embodiment of the present disclosure further provides a network device <b>900</b>. <figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic diagram of a structure of a network device according to an embodiment of this application. The network device <b>900</b> includes a transceiver unit <b>901</b> and a processing unit <b>902</b>. In a specific implementation, the network device <b>900</b> may be configured to perform the method <b>300</b>, the method <b>500</b>, or the method <b>600</b>. The transceiver unit <b>901</b> may be configured to perform sending and receiving operations performed by the node R<b>2</b> in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform sending and receiving operations performed by the first network device in the method <b>600</b> or the method <b>800</b>. The processing unit <b>902</b> may be configured to perform an operation other than the sending and receiving operations performed by the node R<b>2</b> in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform an operation other than the sending and receiving operations performed by the first network device in the method <b>600</b> or the method <b>800</b>. For example, when the network device <b>900</b> is the first network device in the method <b>600</b> or the method <b>800</b>, the transceiver unit <b>901</b> is configured to receive a first SRv6 packet, and the processing unit <b>902</b> is configured to: perform anti-replay attack verification on the first SRv6 packet, and perform HMAC computation on the first SRv6 packet that passes the verification or discard the first SRv6 packet that fails the verification.</p><p id="p-0156" num="0154">In another specific implementation, the transceiver unit <b>901</b> may be configured to perform sending and receiving operations performed by the node R<b>1</b> or the attacker device in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform sending and receiving operations performed by the second network device in the method <b>700</b> or the method <b>800</b>. The processing unit <b>902</b> may be configured to perform an operation other than the sending and receiving operations performed by the node R<b>1</b> or the attacker device in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform an operation other than the sending and receiving operations performed by the second network device in the method <b>700</b> or the method <b>800</b>. For example, when the network device <b>900</b> is the second network device in the method <b>700</b> or the method <b>800</b>, the processing unit <b>902</b> is configured to generate a first SRv6 packet that carries anti-replay attack verification information, and the transceiver unit <b>901</b> is configured to send the first SRv6 packet to a first network device.</p><p id="p-0157" num="0155">In the network device <b>900</b>, a function of the transceiver unit <b>901</b> may be specifically implemented by a communication interface, and a function of the processing unit <b>902</b> may be specifically implemented by a processor. In a specific example, functions of the transceiver unit <b>901</b> and the processing unit <b>902</b> may be implemented by a communication interface <b>1101</b> and a processor <b>1102</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0158" num="0156">An embodiment of the present disclosure further provides a control management device <b>1000</b>, as shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. <figref idref="DRAWINGS">FIG. <b>10</b></figref> is a schematic diagram of a structure of a control management device according to an embodiment of this application. The control management device <b>1000</b> includes a transceiver unit <b>1001</b> and a processing unit <b>1002</b>. The transceiver unit <b>1001</b> is configured to perform sending and receiving operations performed by the control management device in embodiments of this application. The processing unit <b>1002</b> is configured to perform an operation other than the sending and receiving operations performed by the control management device mentioned in embodiments of this application. For example, when the control management device is specifically configured to implement the method <b>800</b>, the processing unit <b>1002</b> is configured to generate SRH information including anti-replay attack verification information, and the transceiver unit <b>1001</b> is configured to send the SRH information to a second network device. In the control management device <b>1000</b>, a function of the transceiver unit <b>1001</b> may be specifically implemented by a communication interface, and a function of the processing unit <b>1002</b> may be specifically implemented by a processor. In a specific example, functions of the transceiver unit <b>1001</b> and the processing unit <b>1002</b> may be implemented by a communication interface <b>1201</b> and a processor <b>1202</b> shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>.</p><p id="p-0159" num="0157">An embodiment of the present disclosure further provides a network device <b>1100</b>. <figref idref="DRAWINGS">FIG. <b>11</b></figref> is a schematic diagram of a structure of a network device <b>1100</b> according to an embodiment of this application. The network device <b>1100</b> includes a communication interface <b>1101</b> and a processor <b>1102</b> connected to the communication interface <b>1101</b>. In a specific implementation, the network device <b>1100</b> may be configured to perform the method <b>300</b>, the method <b>500</b>, or the method <b>600</b>. The communication interface <b>1101</b> may be configured to perform sending and receiving operations performed by the node R<b>2</b> in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform sending and receiving operations performed by the first network device in the method <b>600</b> or the method <b>800</b>. The processor <b>1102</b> may be configured to perform an operation other than the sending and receiving operations performed by the node R<b>2</b> in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform an operation other than the sending and receiving operations performed by the first network device in the method <b>600</b> or the method <b>800</b>. For example, when the network device <b>1100</b> is the first network device in the method <b>600</b> or the method <b>800</b>, the communication interface <b>1101</b> is configured to receive a first SRv6 packet, and the processor <b>1102</b> is configured to: perform anti-replay attack verification on the first SRv6 packet, and perform HMAC computation on the first SRv6 packet that passes the verification or discard the first SRv6 packet that fails the verification.</p><p id="p-0160" num="0158">In another specific implementation, the communication interface <b>1101</b> may be configured to perform sending and receiving operations performed by the node R<b>1</b> or the attacker device in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform sending and receiving operations performed by the second network device in the method <b>700</b> or the method <b>800</b>. The processor <b>1102</b> may be configured to perform an operation other than the sending and receiving operations performed by the node R<b>1</b> or the attacker device in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or configured to perform an operation other than the sending and receiving operations performed by the second network device in the method <b>700</b> or the method <b>800</b>. For example, when the network device <b>1100</b> is the second network device in the method <b>700</b> or the method <b>800</b>, the processor <b>1102</b> is configured to generate a first SRv6 packet that carries anti-replay attack verification information, and the communication interface <b>1101</b> is configured to send the first SRv6 packet to a first network device.</p><p id="p-0161" num="0159">In addition, an embodiment of the present disclosure further provides a control management device <b>1200</b>. <figref idref="DRAWINGS">FIG. <b>12</b></figref> is a schematic diagram of a structure of a control management device according to an embodiment of this application. The control management device <b>1200</b> includes a communication interface <b>1201</b> and a processor <b>1202</b> connected to the communication interface <b>1201</b>. The communication interface <b>1201</b> is configured to perform sending and receiving operations performed by the control management device in embodiments of this application. The processor <b>1202</b> is configured to perform an operation other than the sending and receiving operations performed by the control management device mentioned in embodiments of this application. For example, when the control management device is specifically configured to implement the method <b>800</b>, the processor <b>1202</b> is configured to generate SRH information including anti-replay attack verification information, and the communication interface <b>1201</b> is configured to send the SRH information to a second network device.</p><p id="p-0162" num="0160">In addition, an embodiment of the present disclosure further provides a network device <b>1300</b>. <figref idref="DRAWINGS">FIG. <b>13</b></figref> is a schematic diagram of a structure of a network device according to an embodiment of this application. The network device <b>1300</b> includes a memory <b>1301</b> and a processor <b>1302</b>. The memory <b>1301</b> is configured to store program code. The processor <b>1302</b> is configured to run instructions in the program code, so that the network device <b>1300</b> performs an operation performed by the node R<b>2</b>, the node R<b>1</b>, or the attacker device in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, or performs an operation performed by the first network device, the second network device, or the attacker device in the method <b>600</b>, the method <b>700</b>, or the method <b>800</b>.</p><p id="p-0163" num="0161">In addition, an embodiment of the present disclosure further provides a control management device <b>1400</b>. <figref idref="DRAWINGS">FIG. <b>14</b></figref> is a schematic diagram of a structure of a control management device according to an embodiment of this application. The control management device <b>1400</b> includes a memory <b>1401</b> and a processor <b>1402</b>. The memory <b>1401</b> is configured to store program code. The processor <b>1402</b> is configured to run instructions in the program code, so that the control management device <b>1400</b> performs an operation performed by the control management device in embodiments of this application.</p><p id="p-0164" num="0162">In addition, an embodiment of the present disclosure further provides a schematic diagram of another network device <b>1500</b>. The network device <b>1500</b> may be used in a network architecture shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, and the network device <b>1500</b> may be any network device described above. For example, the network device <b>1500</b> may be the R<b>2</b> in the network architecture shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, and is configured to perform an operation performed by the R<b>2</b> in the method <b>300</b> or the method <b>500</b> or an operation performed by the first network device in the method <b>600</b> or the method <b>800</b>. For example, the network device <b>1500</b> may be the R<b>1</b> in the network architecture shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> or <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, and is configured to perform an operation performed by the R<b>1</b> in the method <b>300</b> or the method <b>500</b> or an operation performed by the first network device in the method <b>700</b> or the method <b>800</b>.</p><p id="p-0165" num="0163">As shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the network device <b>1500</b> may include a processor <b>1510</b>, a memory <b>1520</b> connected to the processor <b>1510</b> in a coupling manner, and a transceiver <b>1530</b>. In an implementation, the transceiver <b>1530</b> may be a communication interface. The memory <b>1520</b> stores computer-readable instructions. The computer-readable instructions may include a plurality of software modules, for example, a sending module <b>1521</b>, a processing module <b>1522</b>, and a receiving module <b>1523</b>. After executing each software module, the processor <b>1510</b> may perform a corresponding operation as indicated by each software module. In this embodiment, an operation performed by a software module is actually the operation performed by the processor <b>1510</b> based on the indication of the software module. For example, a receiving module <b>1523</b> is configured to perform a receiving operation. A processing module <b>1522</b> is configured to perform an operation other than receiving and sending operations. A sending module <b>1521</b> is configured to perform a sending operation. In addition, after executing the computer-readable instructions in the memory <b>1520</b>, the processor <b>1510</b> may perform, based on an indication of the computer readable instructions, all operations that can be performed by a network device, for example, an operation performed by the first network device in the embodiment corresponding to the method <b>600</b> or the method <b>800</b>, or an operation performed by the second network device in the embodiment corresponding to the method <b>700</b>.</p><p id="p-0166" num="0164">The processor mentioned in embodiments of the present disclosure may be a central processing unit (CPU), a network processor (NP), or a combination of a CPU and an NP, or may be a hardware chip. The hardware chip may be an application-specific integrated circuit (ASIC), a programmable logic device (PLD), or a combination thereof. The PLD may be a complex programmable logic device (CPLD), a field programmable gate array (FPGA), a generic array logic (GAL), or any combination thereof. The processor may be one processor, or may include a plurality of processors. The memory may include a volatile memory such as a random-access memory (RAM); the memory may include a non-volatile memory such as a read-only memory (ROM), a flash memory, a hard disk drive (HDD), or a solid state drive (SSD); or the memory may include a combination of the foregoing types of memories. The memory may be one memory, or may include a plurality of memories.</p><p id="p-0167" num="0165">An embodiment of the present disclosure further provides a computer-readable storage medium. The computer-readable storage medium stores instructions. When the instructions are run on a computer, the computer is enabled to perform an operation performed by the node R<b>2</b>, the node R<b>1</b>, or the attacker device in the embodiment corresponding to the method <b>300</b> or the method <b>500</b>, the computer is enabled to perform an operation performed by the first network device, the second network device, or the attacker device in the method <b>600</b>, the method <b>700</b>, or the method <b>800</b>, or the computer is enabled to perform an operation performed by the control management device in embodiments of this application.</p><p id="p-0168" num="0166">An embodiment of the present disclosure further provides a communication system. The communication system includes the foregoing control management device and any network device described above. For example, the network device may be, for example, the node R<b>2</b> that performs the method <b>300</b> or the first network device in the method <b>600</b>.</p><p id="p-0169" num="0167">It may be clearly understood by persons skilled in the art that, for the purpose of convenient and brief description, for a detailed working process of the foregoing system, apparatuses, and units, refer to a corresponding process in the foregoing method embodiments, and details are not described herein again.</p><p id="p-0170" num="0168">In the several embodiments provided in this application, it should be understood that the disclosed system, apparatuses, and methods may be implemented in other manners. For example, the described apparatus embodiments are merely examples. For example, division into units is merely logical service division and may be other division during actual implementation. For example, a plurality of units or components may be combined or integrated into another system, or some features may be ignored or not performed. In addition, the displayed or discussed mutual couplings or direct couplings or communication connections may be implemented by using some interfaces. The indirect couplings or communication connections between the apparatuses or units may be implemented in electronic, mechanical, or other forms.</p><p id="p-0171" num="0169">The units described as separate parts may or may not be physically separate, and parts displayed as units may or may not be physical units, in other words, may be located in one position, or may be distributed on a plurality of network units. Some or all of the units may be selected based on actual requirements to achieve the objectives of the solutions of embodiments.</p><p id="p-0172" num="0170">In addition, service units in embodiments of the present disclosure may be integrated into one processing unit, or each of the units may exist alone physically, or two or more units may be integrated into one unit. The integrated unit may be implemented in a form of hardware, or may be implemented in a form of a software service unit.</p><p id="p-0173" num="0171">When the integrated unit is implemented in a form of a software service unit and sold or used as an independent product, the integrated unit may be stored in a computer-readable storage medium. Based on such an understanding, the technical solutions of the present disclosure essentially, or the part contributing to a conventional technology, or all or some of the technical solutions may be implemented in a form of a software product. The computer software product is stored in a storage medium and includes several instructions for instructing a computer device (which may be a personal computer, a server, or a network device) to perform all or some of the steps of the methods described in embodiments of this application. The storage medium includes any medium that can store program code, such as a Universal Serial Bus (USB) flash drive, a removable hard disk, a ROM, a RAM, a magnetic disk, or an optical disc.</p><p id="p-0174" num="0172">Persons skilled in the art should be aware that, in the foregoing one or more examples, services described in the present disclosure may be implemented by hardware, software, firmware, or any combination thereof. When the present disclosure is implemented by the software, the services may be stored in a computer-readable medium or transmitted as one or more instructions or code in the computer-readable medium. The computer-readable medium includes a computer storage medium and a communication medium, where the communication medium includes any medium that enables a computer program to be transmitted from one place to another. The storage medium may be any available medium accessible to a general-purpose computer or a dedicated computer.</p><p id="p-0175" num="0173">The objectives, technical solutions, and beneficial effects of the present disclosure have been further described in detail in the foregoing specific implementations. It should be understood that the foregoing descriptions are merely specific implementations of the present disclosure.</p><p id="p-0176" num="0174">The foregoing embodiments are merely intended to describe the technical solutions of the present disclosure, but are not to limit the present disclosure. Although the present disclosure is described in detail with reference to the foregoing embodiments, persons of ordinary skill in the art should understand that they may still make modifications to the technical solutions recorded in the foregoing embodiments or make equivalent replacements to some technical features thereof. However, these modifications or replacements do not make the essence of the corresponding technical solutions depart from the scope of the technical solutions of the foregoing embodiments of the present disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, performed by a first network device, for preventing a replay attack on a Segment Routing over Internet Protocol version 6 (SRv6) keyed hashed message authentication code (HMAC) verification, the method comprising:<claim-text>receiving a first SRv6 packet comprising a first packet header, wherein the first packet header comprises first anti-replay attack verification information;</claim-text><claim-text>performing anti-replay attack verification on the first SRv6 packet based on the first anti-replay attack verification information; and</claim-text><claim-text>performing HMAC computation on the first SRv6 packet in response to the first SRv6 packet passing the anti-replay attack verification.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first anti-replay attack verification information comprises at least one of a timestamp, a nonce, or a sequence number.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first anti-replay attack verification information comprises a timestamp, and wherein performing the anti-replay attack verification on the first SRv6 packet comprises verifying whether a deviation between the timestamp and a current time of the first network device satisfies a preset condition.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first anti-replay attack verification information comprises a nonce, and wherein performing the anti-replay attack verification on the first SRv6 packet comprises verifying, based on a locally recorded nonce, whether the nonce is valid.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first anti-replay attack verification information comprises a sequence number, and wherein performing the anti-replay attack verification on the first SRv6 packet comprises verifying, based on a locally recorded packet sequence number, whether the sequence number is valid.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first anti-replay attack verification information is carried in an extended type-length-value (TLV) field of the first packet header.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first packet header comprises first indication information identifying a type of the anti-replay attack verification, wherein the type comprises at least one of the anti-replay attack verification using a nonce, the anti-replay attack verification using a timestamp, or the anti-replay attack verification using a sequence number.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising performing the HMAC computation using the first anti-replay attack verification information as a hash factor.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving a second SRv6 packet comprising a second packet header, wherein the second packet header comprises second anti-replay attack verification information;</claim-text><claim-text>performing the anti-replay attack verification on the second SRv6 packet based on the second anti-replay attack verification information; and</claim-text><claim-text>discarding the second SRv6 packet and terminating the HMAC computation in response to the second SRv6 packet failing the anti-replay attack verification.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A method, performed by a first network device, for preventing a replay attack on a Segment Routing over Internet Protocol version 6 (SRv6) keyed hashed message authentication code (HMAC) verification, the method comprising:<claim-text>generating a first SRv6 packet comprising a packet header, wherein the packet header comprises anti-replay attack verification information, and wherein the anti-replay attack verification information is configured to verify, before HMAC computation is performed, whether the first SRv6 packet is a replay attack packet; and</claim-text><claim-text>sending the first SRv6 packet to a second network device.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the anti-replay attack verification information comprises at least one of a timestamp, a nonce, or a sequence number.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A first network device for preventing a replay attack on a Segment Routing over Internet Protocol version 6 (SRv6) keyed hashed message authentication code (HMAC) verification, the first network device comprising:<claim-text>at least one processor; and</claim-text><claim-text>a memory coupled with the at least one processor, wherein the memory is configured to store instructions that, when executed by the at least one processor, cause the first network device to:<claim-text>receive a first SRv6 packet comprising a first packet header, wherein the first packet header comprises first anti-replay attack verification information;</claim-text><claim-text>perform anti-replay attack verification on the first SRv6 packet based on the first anti-replay attack verification information; and</claim-text><claim-text>perform HMAC computation on the first SRv6 packet in response to the first SRv6 packet passing the anti-replay attack verification.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first anti-replay attack verification information comprises at least one of a timestamp, a nonce, or a sequence number.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first anti-replay attack verification information comprises a timestamp, and wherein the instructions when executed by the at least one processor further cause the first network device to verify whether a deviation between the timestamp and a current time of the first network device satisfies a preset condition.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first anti-replay attack verification information comprises a nonce, and wherein the instructions when executed by the at least one processor further cause the first network device to verify, based on a locally recorded nonce, whether the nonce is valid.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first anti-replay attack verification information comprises a sequence number, wherein the instructions when executed by the at least one processor further cause the first network device to verify, based on a locally recorded packet sequence number, whether the sequence number is valid.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first anti-replay attack verification information is carried in an extended type-length-value (TLV) field of the first packet header.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the packet header comprises first indication information identifying a type of the anti-replay attack verification, wherein the type comprises at least one of the anti-replay attack verification using a nonce, the anti-replay attack verification using a timestamp, or the anti-replay attack verification using a sequence number.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the instructions, when executed by the at least one processor, further cause the first network device to perform the HMAC computation using the first anti-replay attack verification information as a hash factor.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The first network device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the instructions, when executed by the at least one processor, further cause the first network device to:<claim-text>receive a second SRv6 packet comprising a second packet header, wherein the second packet header comprises second anti-replay attack verification information;</claim-text><claim-text>perform the anti-replay attack verification on the second SRv6 packet based on the second anti-replay attack verification information; and</claim-text><claim-text>discard the second SRv6 packet and terminate the HMAC computation in response to the second SRv6 packet failing the anti-replay attack verification.</claim-text></claim-text></claim></claims></us-patent-application>