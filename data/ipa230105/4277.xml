<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004278A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004278</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17809791</doc-number><date>20220629</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04817</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04847</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>232</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04845</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04817</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04847</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180801</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>232935</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04845</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>23245</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">PRESENTING AVAILABLE FUNCTIONS FOR A CAPTURED IMAGE WITHIN A MESSAGING SYSTEM</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217031</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Snap Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Anvaripour</last-name><first-name>Kaveh</first-name><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Desserrey</last-name><first-name>Laurent</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects of the present disclosure involve a system comprising a computer-readable storage medium storing a program and method for presenting available functions for a captured image. The program and method provide for selecting a subset of functions from among a set of functions for applying to an image captured by a device camera; causing display of a first interface for presenting the subset of functions, the first interface including a group of icons, each of which is user-selectable to perform a respective function within the subset, the first interface further including an additional icon selectable to switch to a second interface; and causing, in response to user selection of the additional icon, to switch to display of the second interface for presenting the set of functions, the second interface including a list of entries, each of which is user-selectable to perform a respective function within the set of functions.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="127.93mm" wi="79.93mm" file="US20230004278A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="245.87mm" wi="168.66mm" file="US20230004278A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="228.18mm" wi="162.98mm" file="US20230004278A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="235.88mm" wi="159.85mm" file="US20230004278A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="233.00mm" wi="148.59mm" file="US20230004278A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="189.06mm" wi="162.81mm" orientation="landscape" file="US20230004278A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="235.46mm" wi="148.51mm" orientation="landscape" file="US20230004278A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="124.29mm" wi="133.77mm" file="US20230004278A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="238.00mm" wi="160.27mm" file="US20230004278A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="239.86mm" wi="172.30mm" file="US20230004278A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="239.86mm" wi="175.68mm" file="US20230004278A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This patent application claims the benefit of U.S. Provisional Patent Application No. 63/217,031, filed Jun. 30, 2021, entitled &#x201c;PRESENTING AVAILABLE FUNCTIONS FOR A CAPTURED IMAGE WITHIN A MESSAGING SYSTEM&#x201d;, which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates generally to a messaging system, including presenting available functions for a captured image within a messaging system.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Messaging systems provide for the exchange of message content between users. For example, a messaging system allows a user to exchange message content (e.g., text, images) with one or more other users.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading><p id="p-0005" num="0004">In the drawings, which are not necessarily drawn to scale, like numerals may describe similar components in different views. To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced. Some nonlimiting examples are illustrated in the figures of the accompanying drawings in which:</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagrammatic representation of a networked environment in which the present disclosure may be deployed, in accordance with some examples.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagrammatic representation of a messaging system, in accordance with some examples, that has both client-side and server-side functionality.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagrammatic representation of a data structure as maintained in a database, in accordance with some examples.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagrammatic representation of a message, in accordance with some examples.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow diagram illustrating a flow between user interfaces for presenting available functions for a captured image, in accordance with some example embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>C</figref> illustrate example user interfaces for presenting available functions for a captured image, in accordance with some example embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart illustrating a process for presenting available functions for a captured image, in accordance with some example embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart for an access-limiting process, in accordance with some examples.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagrammatic representation of a machine in the form of a computer system within which a set of instructions may be executed for causing the machine to perform any one or more of the methodologies discussed herein, in accordance with some examples.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram showing a software architecture within which examples may be implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0016" num="0015">A messaging system typically allow users to exchange content items (e.g., messages, images and/or video) with one another in a message thread. A messaging system may implement various functions for modifying or otherwise supplementing image data captured by a device camera, for including in a message. Examples of such functions include applying augmented reality content to the image data, selecting an audio track to accompany the image data, and enabling different camera modes (e.g., a timer mode, a slow motion mode, and the like) for image capture.</p><p id="p-0017" num="0016">The disclosed embodiments provide for a messaging client to switch between different user interfaces for presenting available functions for applying to an image (e.g., video) captured by a device camera. A first interface presents a group of icons corresponding to a subset of the available functions. For example, the messaging client selects the subset of functions based on user history and/or objects detected within the captured image. The first interface includes an icon for switching to a second interface which presents a list of entries corresponding to a larger group of available functions (e.g., all available functions). Each entry within the list of entries includes the respective icon, as well as a title and description of the respective function. Selection of an icon within the first interface, or selection of an entry within the second interface, causes the messaging client to display a widget with user-selectable options. The options specify parameters that relate to performing the respective function.</p><p id="p-0018" num="0017">By virtue of switching between the first and second interfaces and providing widgets as described herein, it is possible to facilitate the selection of available functions for end users. In addition, the corresponding user interfaces provide for an engaging user experience.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system <b>100</b> for exchanging data (e.g., messages and associated content) over a network. The messaging system <b>100</b> includes multiple instances of a client device <b>102</b>, each of which hosts a number of applications, including a messaging client <b>104</b> and other applications <b>106</b>. Each messaging client <b>104</b> is communicatively coupled to other instances of the messaging client <b>104</b> (e.g., hosted on respective other client devices <b>102</b>), a messaging server system <b>108</b> and third-party servers <b>110</b> via a network <b>112</b> (e.g., the Internet). A messaging client <b>104</b> can also communicate with locally-hosted applications <b>106</b> using Applications Program Interfaces (APIs).</p><p id="p-0020" num="0019">A messaging client <b>104</b> is able to communicate and exchange data with other messaging clients <b>104</b> and with the messaging server system <b>108</b> via the network <b>112</b>. The data exchanged between messaging clients <b>104</b>, and between a messaging client <b>104</b> and the messaging server system <b>108</b>, includes functions (e.g., commands to invoke functions) as well as payload data (e.g., text, audio, video or other multimedia data).</p><p id="p-0021" num="0020">The messaging server system <b>108</b> provides server-side functionality via the network <b>112</b> to a particular messaging client <b>104</b>. While certain functions of the messaging system <b>100</b> are described herein as being performed by either a messaging client <b>104</b> or by the messaging server system <b>108</b>, the location of certain functionality either within the messaging client <b>104</b> or the messaging server system <b>108</b> may be a design choice. For example, it may be technically preferable to initially deploy certain technology and functionality within the messaging server system <b>108</b> but to later migrate this technology and functionality to the messaging client <b>104</b> where a client device <b>102</b> has sufficient processing capacity.</p><p id="p-0022" num="0021">The messaging server system <b>108</b> supports various services and operations that are provided to the messaging client <b>104</b>. Such operations include transmitting data to, receiving data from, and processing data generated by the messaging client <b>104</b>. This data may include message content, client device information, geolocation information, media augmentation and overlays, message content persistence conditions, social network information, and live event information, as examples. Data exchanges within the messaging system <b>100</b> are invoked and controlled through functions available via user interfaces (UIs) of the messaging client <b>104</b>.</p><p id="p-0023" num="0022">Turning now specifically to the messaging server system <b>108</b>, an Application Program Interface (API) server <b>116</b> is coupled to, and provides a programmatic interface to, application servers <b>114</b>. The application servers <b>114</b> are communicatively coupled to a database server <b>120</b>, which facilitates access to a database <b>126</b> that stores data associated with messages processed by the application servers <b>114</b>. Similarly, a web server <b>128</b> is coupled to the application servers <b>114</b>, and provides web-based interfaces to the application servers <b>114</b>. To this end, the web server <b>128</b> processes incoming network requests over the Hypertext Transfer Protocol (HTTP) and several other related protocols.</p><p id="p-0024" num="0023">The Application Program Interface (API) server <b>116</b> receives and transmits message data (e.g., commands and message payloads) between the client device <b>102</b> and the application servers <b>114</b>. Specifically, the Application Program Interface (API) server <b>116</b> provides a set of interfaces (e.g., routines and protocols) that can be called or queried by the messaging client <b>104</b> in order to invoke functionality of the application servers <b>114</b>. The Application Program Interface (API) server <b>116</b> exposes various functions supported by the application servers <b>114</b>, including account registration, login functionality, the sending of messages, via the application servers <b>114</b>, from a particular messaging client <b>104</b> to another messaging client <b>104</b>, the sending of media files (e.g., images or video) from a messaging client <b>104</b> to a messaging server <b>118</b>, and for possible access by another messaging client <b>104</b>, the settings of a collection of media data (e.g., story), the retrieval of a list of friends of a user of a client device <b>102</b>, the retrieval of such collections, the retrieval of messages and content, the addition and deletion of entities (e.g., friends) to an entity graph (e.g., a social graph), the location of friends within a social graph, and opening an application event (e.g., relating to the messaging client <b>104</b>).</p><p id="p-0025" num="0024">The application servers <b>114</b> host a number of server applications and subsystems, including for example a messaging server <b>118</b>, an image processing server <b>122</b>, and a social network server <b>124</b>. The messaging server <b>118</b> implements a number of message processing technologies and functions, particularly related to the aggregation and other processing of content (e.g., textual and multimedia content) included in messages received from multiple instances of the messaging client <b>104</b>. As will be described in further detail, the text and media content from multiple sources may be aggregated into collections of content (e.g., called stories or galleries). These collections are then made available to the messaging client <b>104</b>. Other processor and memory intensive processing of data may also be performed server-side by the messaging server <b>118</b>, in view of the hardware requirements for such processing.</p><p id="p-0026" num="0025">The application servers <b>114</b> also include an image processing server <b>122</b> that is dedicated to performing various image processing operations, typically with respect to images or video within the payload of a message sent from or received at the messaging server <b>118</b>.</p><p id="p-0027" num="0026">The social network server <b>124</b> supports various social networking functions and services and makes these functions and services available to the messaging server <b>118</b>. To this end, the social network server <b>124</b> maintains and accesses an entity graph <b>304</b> (as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) within the database <b>126</b>. Examples of functions and services supported by the social network server <b>124</b> include the identification of other users of the messaging system <b>100</b> with which a particular user has relationships or is &#x201c;following,&#x201d; and also the identification of other entities and interests of a particular user.</p><p id="p-0028" num="0027">Returning to the messaging client <b>104</b>, features and functions of an external resource (e.g., an application <b>106</b> or applet) are made available to a user via an interface of the messaging client <b>104</b>. In this context, &#x201c;external&#x201d; refers to the fact that the application <b>106</b> or applet is external to the messaging client <b>104</b>. The external resource is often provided by a third party but may also be provided by the creator or provider of the messaging client <b>104</b>. The messaging client <b>104</b> receives a user selection of an option to launch or access features of such an external resource. The external resource may be the application <b>106</b> installed on the client device <b>102</b> (e.g., a &#x201c;native app&#x201d;), or a small-scale version of the application (e.g., an &#x201c;applet&#x201d;) that is hosted on the client device <b>102</b> or remote of the client device <b>102</b> (e.g., on third-party servers <b>110</b>). The small-scale version of the application includes a subset of features and functions of the application (e.g., the full-scale, native version of the application) and is implemented using a markup-language document. In one example, the small-scale version of the application (e.g., an &#x201c;applet&#x201d;) is a web-based, markup-language version of the application and is embedded in the messaging client <b>104</b>. In addition to using markup-language documents (e.g., a .*ml file), an applet may incorporate a scripting language (e.g., a .*js file or a .json file) and a style sheet (e.g., a .*ss file).</p><p id="p-0029" num="0028">In response to receiving a user selection of the option to launch or access features of the external resource, the messaging client <b>104</b> determines whether the selected external resource is a web-based external resource or a locally-installed application <b>106</b>. In some cases, applications <b>106</b> that are locally installed on the client device <b>102</b> can be launched independently of and separately from the messaging client <b>104</b>, such as by selecting an icon, corresponding to the application <b>106</b>, on a home screen of the client device <b>102</b>. Small-scale versions of such applications can be launched or accessed via the messaging client <b>104</b> and, in some examples, no or limited portions of the small-scale application can be accessed outside of the messaging client <b>104</b>. The small-scale application can be launched by the messaging client <b>104</b> receiving, from a third-party server <b>110</b> for example, a markup-language document associated with the small-scale application and processing such a document.</p><p id="p-0030" num="0029">In response to determining that the external resource is a locally-installed application <b>106</b>, the messaging client <b>104</b> instructs the client device <b>102</b> to launch the external resource by executing locally-stored code corresponding to the external resource. In response to determining that the external resource is a web-based resource, the messaging client <b>104</b> communicates with the third-party servers <b>110</b> (for example) to obtain a markup-language document corresponding to the selected external resource. The messaging client <b>104</b> then processes the obtained markup-language document to present the web-based external resource within a user interface of the messaging client <b>104</b>.</p><p id="p-0031" num="0030">The messaging client <b>104</b> can notify a user of the client device <b>102</b>, or other users related to such a user (e.g., &#x201c;friends&#x201d;), of activity taking place in one or more external resources. For example, the messaging client <b>104</b> can provide participants in a conversation (e.g., a chat session) in the messaging client <b>104</b> with notifications relating to the current or recent use of an external resource by one or more members of a group of users. One or more users can be invited to join in an active external resource or to launch a recently-used but currently inactive (in the group of friends) external resource. The external resource can provide participants in a conversation, each using respective messaging clients <b>104</b>, with the ability to share an item, status, state, or location in an external resource with one or more members of a group of users into a chat session. The shared item may be an interactive chat card with which members of the chat can interact, for example, to launch the corresponding external resource, view specific information within the external resource, or take the member of the chat to a specific location or state within the external resource. Within a given external resource, response messages can be sent to users on the messaging client <b>104</b>. The external resource can selectively include different media items in the responses, based on a current context of the external resource.</p><p id="p-0032" num="0031">The messaging client <b>104</b> can present a list of the available external resources (e.g., applications <b>106</b> or applets) to a user to launch or access a given external resource. This list can be presented in a context-sensitive menu. For example, the icons representing different ones of the application <b>106</b> (or applets) can vary based on how the menu is launched by the user (e.g., from a conversation interface or from a non-conversation interface).</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating further details regarding the messaging system <b>100</b>, according to some examples. Specifically, the messaging system <b>100</b> is shown to comprise the messaging client <b>104</b> and the application servers <b>114</b>. The messaging system <b>100</b> embodies a number of subsystems, which are supported on the client-side by the messaging client <b>104</b> and on the sever-side by the application servers <b>114</b>. These subsystems include, for example, an ephemeral timer system <b>202</b>, a collection management system <b>204</b>, an augmentation system <b>208</b>, a map system <b>212</b>, an external resource system <b>214</b>, a camera mode system <b>216</b>, and an audio track system <b>218</b>.</p><p id="p-0034" num="0033">The ephemeral timer system <b>202</b> is responsible for enforcing the temporary or time-limited access to content by the messaging client <b>104</b> and the messaging server <b>118</b>. The ephemeral timer system <b>202</b> incorporates a number of timers that, based on duration and display parameters associated with a message, or collection of messages (e.g., a story), selectively enable access (e.g., for presentation and display) to messages and associated content via the messaging client <b>104</b>. Further details regarding the operation of the ephemeral timer system <b>202</b> are provided below.</p><p id="p-0035" num="0034">The collection management system <b>204</b> is responsible for managing sets or collections of media (e.g., collections of text, image video, and audio data). A collection of content (e.g., messages, including images, video, text, and audio) may be organized into an &#x201c;event gallery&#x201d; or an &#x201c;event story.&#x201d; Such a collection may be made available for a specified time period, such as the duration of an event to which the content relates. For example, content relating to a music concert may be made available as a &#x201c;story&#x201d; for the duration of that music concert. The collection management system <b>204</b> may also be responsible for publishing an icon that provides notification of the existence of a particular collection to the user interface of the messaging client <b>104</b>.</p><p id="p-0036" num="0035">The collection management system <b>204</b> furthermore includes a curation interface <b>206</b> that allows a collection manager to manage and curate a particular collection of content. For example, the curation interface <b>206</b> enables an event organizer to curate a collection of content relating to a specific event (e.g., delete inappropriate content or redundant messages). Additionally, the collection management system <b>204</b> employs machine vision (or image recognition technology) and content rules to automatically curate a content collection. In certain examples, compensation may be paid to a user for the inclusion of user-generated content into a collection. In such cases, the collection management system <b>204</b> operates to automatically make payments to such users for the use of their content.</p><p id="p-0037" num="0036">The augmentation system <b>208</b> provides various functions that enable a user to augment (e.g., annotate or otherwise modify or edit) media content associated with a message. For example, the augmentation system <b>208</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The augmentation system <b>208</b> operatively supplies a media overlay or augmentation (e.g., an image filter) to the messaging client <b>104</b> based on a geolocation of the client device <b>102</b>. In another example, the augmentation system <b>208</b> operatively supplies a media overlay to the messaging client <b>104</b> based on other information, such as social network information of the user of the client device <b>102</b>. A media overlay may include audio and visual content and visual effects. Examples of audio and visual content include pictures, texts, logos, animations, and sound effects. An example of a visual effect includes color overlaying. The audio and visual content or the visual effects can be applied to a media content item (e.g., a photo) at the client device <b>102</b>. For example, the media overlay may include text or image that can be overlaid on top of a photograph taken by the client device <b>102</b>. In another example, the media overlay includes an identification of a location overlay (e.g., Venice beach), a name of a live event, or a name of a merchant overlay (e.g., Beach Coffee House). In another example, the augmentation system <b>208</b> uses the geolocation of the client device <b>102</b> to identify a media overlay that includes the name of a merchant at the geolocation of the client device <b>102</b>. The media overlay may include other indicia associated with the merchant. The media overlays may be stored in the database <b>126</b> and accessed through the database server <b>120</b>.</p><p id="p-0038" num="0037">In some examples, the augmentation system <b>208</b> provides a user-based publication platform that enables users to select a geolocation on a map and upload content associated with the selected geolocation. The user may also specify circumstances under which a particular media overlay should be offered to other users. The augmentation system <b>208</b> generates a media overlay that includes the uploaded content and associates the uploaded content with the selected geolocation.</p><p id="p-0039" num="0038">In other examples, the augmentation system <b>208</b> provides a merchant-based publication platform that enables merchants to select a particular media overlay associated with a geolocation via a bidding process. For example, the augmentation system <b>208</b> associates the media overlay of the highest bidding merchant with a corresponding geolocation for a predefined amount of time.</p><p id="p-0040" num="0039">In other examples, as discussed below with respect to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the augmentation system <b>208</b> provides for presenting augmented reality content in association with an image or a video captured by a camera of the client device <b>102</b>. The augmentation system <b>208</b> may implement or otherwise access augmented reality content items (e.g., corresponding to applying Lenses or augmented reality experiences) for providing real-time special effect(s) and/or sound(s) that may be added to the image or video.</p><p id="p-0041" num="0040">In one or more embodiments, the augmentation system <b>208</b> includes or otherwise accesses an object detection system <b>210</b>. For example, the object detection system <b>210</b> may be included within the augmentation system <b>208</b> (e.g., as shown in the example of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) or may be separate and accessible by the augmentation system <b>208</b>.</p><p id="p-0042" num="0041">The object detection system <b>210</b> provides various object detection functions within the context of the messaging system <b>100</b>. The object detection system <b>210</b> may employ one or more object classifiers to identify objects depicted in a captured image. The image may correspond to a live video feed captured by a camera (e.g., rear or front facing camera) of the client device <b>102</b>. Alternatively or in addition, the image may correspond to an image (e.g., photo) stored in association with the user of the client device <b>102</b> (e.g., a photo library).</p><p id="p-0043" num="0042">In one or more embodiments, the object detection system <b>210</b> is configured to implement or otherwise access object recognition algorithms (e.g., including machine learning algorithms) configured to scan the captured image, and to detect/track the movement of objects within the image. By way of non-limiting example, detectable objects within an image include: a human face, parts of a human body, animals and parts thereof, landscapes, objects in nature, non-living objects (e.g., articles of clothing, chairs, books, cars, buildings, other structures), illustrations of objects (e.g., on posters and/or flyers), text-based objects, equation-based objects and the like.</p><p id="p-0044" num="0043">In addition, the object detection system <b>210</b> is configured to determine or otherwise access attributes of objects. For a particular object, the object detection system <b>210</b> may determine or retrieve attributes such as a name/type, genre, color, size, shape, texture, environmental factors (e.g., geolocation, time, weather), and/or other supplemental information (e.g., a song title/artist for an object corresponding to media).</p><p id="p-0045" num="0044">With respect to the environmental factors, the object detection system <b>210</b> may receive information from the messaging client <b>104</b> to identify the weather, geographical location, time, and so forth around the client device <b>102</b> (e.g., via device sensors). The object detection system <b>210</b> may rank the retrieved attributes based on relevance, such as based on their association with the one or more environmental factors. Other machine learning techniques may be employed to select and rank retrieved attributes. The object detection system <b>210</b> may select an object from the list of objects detected in the captured image that is associated with the highest ranked attributes, and may send an indication of the selected object to the messaging client <b>104</b>. Alternatively or in addition, the object detection system <b>210</b> may provide for communicating one or more attributes (e.g., name/type) for each detected object, and/or an indication of the ranking of the attributes to the messaging client <b>104</b>.</p><p id="p-0046" num="0045">In one or more embodiments, the object detection system <b>210</b> determines that one of the attributes corresponds to a keyword that has been sponsored by a third party. For example, third parties may sponsor or pay for certain keywords to be ranked higher than others. In response to determining that a given attribute corresponds to a sponsored keyword, the object detection system <b>210</b> may provide for a higher ranking of that attribute relative to other attributes.</p><p id="p-0047" num="0046">The map system <b>212</b> provides various geographic location functions, and supports the presentation of map-based media content and messages by the messaging client <b>104</b>. For example, the map system <b>212</b> enables the display of user icons or avatars (e.g., stored in profile data <b>302</b>) on a map to indicate a current or past location of &#x201c;friends&#x201d; of a user, as well as media content (e.g., collections of messages including photographs and videos) generated by such friends, within the context of a map. For example, a message posted by a user to the messaging system <b>100</b> from a specific geographic location may be displayed within the context of a map at that particular location to &#x201c;friends&#x201d; of a specific user on a map interface of the messaging client <b>104</b>. A user can furthermore share his or her location and status information (e.g., using an appropriate status avatar) with other users of the messaging system <b>100</b> via the messaging client <b>104</b>, with this location and status information being similarly displayed within the context of a map interface of the messaging client <b>104</b> to selected users.</p><p id="p-0048" num="0047">The external resource system <b>214</b> provides an interface for the messaging client <b>104</b> to communicate with remote servers (e.g. third-party servers <b>110</b>) to launch or access external resources, i.e. applications or applets. Each third-party server <b>110</b> hosts, for example, a markup language (e.g., HTML5) based application or small-scale version of an application (e.g., game, utility, payment, or ride-sharing application). The messaging client <b>104</b> may launches a web-based resource (e.g., application) by accessing the HTML5 file from the third-party servers <b>110</b> associated with the web-based resource. In certain examples, applications hosted by third-party servers <b>110</b> are programmed in JavaScript leveraging a Software Development Kit (SDK) provided by the messaging server <b>118</b>. The SDK includes Application Programming Interfaces (APIs) with functions that can be called or invoked by the web-based application. In certain examples, the messaging server <b>118</b> includes a JavaScript library that provides a given external resource access to certain user data of the messaging client <b>104</b>. HTML5 is used as an example technology for programming games, but applications and resources programmed based on other technologies can be used.</p><p id="p-0049" num="0048">In order to integrate the functions of the SDK into the web-based resource, the SDK is downloaded by a third-party server <b>110</b> from the messaging server <b>118</b> or is otherwise received by the third-party server <b>110</b>. Once downloaded or received, the SDK is included as part of the application code of a web-based external resource. The code of the web-based resource can then call or invoke certain functions of the SDK to integrate features of the messaging client <b>104</b> into the web-based resource.</p><p id="p-0050" num="0049">The SDK stored on the messaging server <b>118</b> effectively provides the bridge between an external resource (e.g., applications <b>106</b> or applets and the messaging client <b>104</b>. This provides the user with a seamless experience of communicating with other users on the messaging client <b>104</b>, while also preserving the look and feel of the messaging client <b>104</b>. To bridge communications between an external resource and a messaging client <b>104</b>, in certain examples, the SDK facilitates communication between third-party servers <b>110</b> and the messaging client <b>104</b>. In certain examples, a Web ViewJavaScriptBridge running on a client device <b>102</b> establishes two one-way communication channels between an external resource and the messaging client <b>104</b>. Messages are sent between the external resource and the messaging client <b>104</b> via these communication channels asynchronously. Each SDK function invocation is sent as a message and callback. Each SDK function is implemented by constructing a unique callback identifier and sending a message with that callback identifier.</p><p id="p-0051" num="0050">By using the SDK, not all information from the messaging client <b>104</b> is shared with third-party servers <b>110</b>. The SDK limits which information is shared based on the needs of the external resource. In certain examples, each third-party server <b>110</b> provides an HTML5 file corresponding to the web-based external resource to the messaging server <b>118</b>. The messaging server <b>118</b> can add a visual representation (such as a box art or other graphic) of the web-based external resource in the messaging client <b>104</b>. Once the user selects the visual representation or instructs the messaging client <b>104</b> through a GUI of the messaging client <b>104</b> to access features of the web-based external resource, the messaging client <b>104</b> obtains the HTML5 file and instantiates the resources necessary to access the features of the web-based external resource.</p><p id="p-0052" num="0051">The messaging client <b>104</b> presents a graphical user interface (e.g., a landing page or title screen) for an external resource. During, before, or after presenting the landing page or title screen, the messaging client <b>104</b> determines whether the launched external resource has been previously authorized to access user data of the messaging client <b>104</b>. In response to determining that the launched external resource has been previously authorized to access user data of the messaging client <b>104</b>, the messaging client <b>104</b> presents another graphical user interface of the external resource that includes functions and features of the external resource. In response to determining that the launched external resource has not been previously authorized to access user data of the messaging client <b>104</b>, after a threshold period of time (e.g., 3 seconds) of displaying the landing page or title screen of the external resource, the messaging client <b>104</b> slides up (e.g., animates a menu as surfacing from a bottom of the screen to a middle of or other portion of the screen) a menu for authorizing the external resource to access the user data. The menu identifies the type of user data that the external resource will be authorized to use. In response to receiving a user selection of an accept option, the messaging client <b>104</b> adds the external resource to a list of authorized external resources and allows the external resource to access user data from the messaging client <b>104</b>. In some examples, the external resource is authorized by the messaging client <b>104</b> to access the user data in accordance with an OAuth 2 framework.</p><p id="p-0053" num="0052">The messaging client <b>104</b> controls the type of user data that is shared with external resources based on the type of external resource being authorized. For example, external resources that include full-scale applications (e.g., an application <b>106</b>) are provided with access to a first type of user data (e.g., only two-dimensional avatars of users with or without different avatar characteristics). As another example, external resources that include small-scale versions of applications (e.g., web-based versions of applications) are provided with access to a second type of user data (e.g., payment information, two-dimensional avatars of users, three-dimensional avatars of users, and avatars with various avatar characteristics). Avatar characteristics include different ways to customize a look and feel of an avatar, such as different poses, facial features, clothing, and so forth.</p><p id="p-0054" num="0053">The camera mode system <b>216</b> implements various functions for providing different camera modes within the context of the messaging system <b>100</b>. For example, the camera mode system <b>216</b> provides one or more of a multiple media content item mode, a timeline mode, a timer mode, a slow-motion mode, a grid mode, a focus mode, and a three-dimensional (3D) mode. The multiple media content item mode is user selectable to capture multiple media content items at once and then edit them, as opposed to a default setting to capture a single photo/video clip to generate a media content item (e.g., based on a single tap or a hold-and-press gesture of the capture button). The timeline mode is user-selectable for capturing multiple videos sequentially to edit and send as one video corresponding to a media content item (e.g., based on multiple taps and/or hold-and-press gestures of the capture button), as opposed to the default setting to capture a single photo/video clip to generate the media content item. The timer mode is user-selectable to set a time to begin video capture (e.g., after 5 seconds, 10 seconds, etc.), as opposed to a default setting to immediately between video capture (e.g., in response to a tap or hold-and-press gesture). The slow-motion mode is user selectable for capturing video in slow motion, as opposed to a default setting for capturing video in regular (e.g., non-slow motion) time. The grid mode is user selectable to align a captured image/video with grid lines, as opposed to a default setting not to include grid lines. The focus mode is user selectable to focus on an object (e.g., a face) with a depth-of-field effect, as opposed to a default setting without a depth-of-field effect. The 3D mode is user selectable to capture video in 3D (e.g., via the front-facing camera) and to add 3D effects, as opposed to a default setting to capture in 2D.</p><p id="p-0055" num="0054">The audio track system <b>218</b> implements various functions for adding audio track(s) to captured video (or captured images) with respect to generating a media content item. For example, the audio track system <b>218</b> provides for accessing a catalog of available audio tracks, for presenting the available audio tracks for user selection, and for combining selected audio track(s) with captured video or image in order to generate the media content item. In one or more embodiments, the catalog of available audio tracks is maintained by a third-party server (e.g., corresponding to one of the third-party servers <b>110</b>). For example, the audio track system <b>218</b> is configured to access (e.g., download and/or stream) the audio tracks based on licensing arrangements between the messaging system <b>100</b> and the third party-server. In one or more embodiments, the audio track system <b>218</b> is further configured to access identifying information for a given audio track, such as the title of the audio track (e.g., song name), artist, genre, and the like.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram illustrating data structures <b>300</b>, which may be stored in the database <b>126</b> of the messaging server system <b>108</b>, according to certain examples. While the content of the database <b>126</b> is shown to comprise a number of tables, it will be appreciated that the data could be stored in other types of data structures (e.g., as an object-oriented database).</p><p id="p-0057" num="0056">The database <b>126</b> includes message data stored within a message table <b>306</b>. This message data includes, for any particular one message, at least message sender data, message recipient (or receiver) data, and a payload. Further details regarding information that may be included in a message, and included within the message data stored in the message table <b>306</b> is described below with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0058" num="0057">An entity table <b>308</b> stores entity data, and is linked (e.g., referentially) to an entity graph <b>304</b> and profile data <b>302</b>. Entities for which records are maintained within the entity table <b>308</b> may include individuals, corporate entities, organizations, objects, places, events, and so forth. Regardless of entity type, any entity regarding which the messaging server system <b>108</b> stores data may be a recognized entity. Each entity is provided with a unique identifier, as well as an entity type identifier (not shown).</p><p id="p-0059" num="0058">The entity graph <b>304</b> stores information regarding relationships and associations between entities. Such relationships may be social, professional (e.g., work at a common corporation or organization) interested-based or activity-based, merely for example.</p><p id="p-0060" num="0059">The profile data <b>302</b> stores multiple types of profile data about a particular entity. The profile data <b>302</b> may be selectively used and presented to other users of the messaging system <b>100</b>, based on privacy settings specified by a particular entity. Where the entity is an individual, the profile data <b>302</b> includes, for example, a user name, telephone number, address, settings (e.g., notification and privacy settings), as well as a user-selected avatar representation (or collection of such avatar representations). A particular user may then selectively include one or more of these avatar representations within the content of messages communicated via the messaging system <b>100</b>, and on map interfaces displayed by messaging clients <b>104</b> to other users. The collection of avatar representations may include &#x201c;status avatars,&#x201d; which present a graphical representation of a status or activity that the user may select to communicate at a particular time.</p><p id="p-0061" num="0060">Where the entity is a group, the profile data <b>302</b> for the group may similarly include one or more avatar representations associated with the group, in addition to the group name, members, and various settings (e.g., notifications) for the relevant group.</p><p id="p-0062" num="0061">The database <b>126</b> also stores augmentation data, such as overlays or filters, in an augmentation table <b>310</b>. The augmentation data is associated with and applied to videos (for which data is stored in a video table <b>314</b>) and images (for which data is stored in an image table <b>316</b>).</p><p id="p-0063" num="0062">Filters, in one example, are overlays that are displayed as overlaid on an image or video during presentation to a recipient user. Filters may be of various types, including user-selected filters from a set of filters presented to a sending user by the messaging client <b>104</b> when the sending user is composing a message. Other types of filters include geolocation filters (also known as geo-filters), which may be presented to a sending user based on geographic location. For example, geolocation filters specific to a neighborhood or special location may be presented within a user interface by the messaging client <b>104</b>, based on geolocation information determined by a Global Positioning System (GPS) unit of the client device <b>102</b>.</p><p id="p-0064" num="0063">Another type of filter is a data filter, which may be selectively presented to a sending user by the messaging client <b>104</b>, based on other inputs or information gathered by the client device <b>102</b> during the message creation process. Examples of data filters include current temperature at a specific location, a current speed at which a sending user is traveling, battery life for a client device <b>102</b>, or the current time.</p><p id="p-0065" num="0064">Other augmentation data that may be stored within the image table <b>316</b> includes augmented reality content items (e.g., corresponding to applying Lenses or augmented reality experiences). An augmented reality content item may provide a real-time special effect and/or sound that may be added to an image or a video.</p><p id="p-0066" num="0065">As described above, augmentation data includes augmented reality content items, overlays, image transformations, AR images, and similar terms refer to modifications that may be applied to image data (e.g., videos or images). This includes real-time modifications, which modify an image as it is captured using device sensors (e.g., one or multiple cameras) of a client device <b>102</b> and then displayed on a screen of the client device <b>102</b> with the modifications. This also includes modifications to stored content, such as video clips in a gallery that may be modified. For example, in a client device <b>102</b> with access to multiple augmented reality content items, a user can use a single video clip with multiple augmented reality content items to see how the different augmented reality content items will modify the stored clip. For example, multiple augmented reality content items that apply different pseudorandom movement models can be applied to the same content by selecting different augmented reality content items for the content. Similarly, real-time video capture may be used with an illustrated modification to show how video images currently being captured by sensors of a client device <b>102</b> would modify the captured data. Such data may simply be displayed on the screen and not stored in memory, or the content captured by the device sensors may be recorded and stored in memory with or without the modifications (or both). In some systems, a preview feature can show how different augmented reality content items will look within different windows in a display at the same time. This can, for example, enable multiple windows with different pseudorandom animations to be viewed on a display at the same time.</p><p id="p-0067" num="0066">Data and various systems using augmented reality content items or other such transform systems to modify content using this data can thus involve detection of objects (e.g., faces, hands, bodies, cats, dogs, surfaces, objects, etc.), tracking of such objects as they leave, enter, and move around the field of view in video frames, and the modification or transformation of such objects as they are tracked. In various examples, different methods for achieving such transformations may be used. Some examples may involve generating a three-dimensional mesh model of the object or objects, and using transformations and animated textures of the model within the video to achieve the transformation. In other examples, tracking of points on an object may be used to place an image or texture (which may be two dimensional or three dimensional) at the tracked position. In still further examples, neural network analysis of video frames may be used to place images, models, or textures in content (e.g., images or frames of video). Augmented reality content items thus refer both to the images, models, and textures used to create transformations in content, as well as to additional modeling and analysis information needed to achieve such transformations with object detection, tracking, and placement.</p><p id="p-0068" num="0067">Real-time video processing can be performed with any kind of video data (e.g., video streams, video files, etc.) saved in a memory of a computerized system of any kind. For example, a user can load video files and save them in a memory of a device, or can generate a video stream using sensors of the device. Additionally, any objects can be processed using a computer animation model, such as a human's face and parts of a human body, animals, or non-living things such as chairs, cars, or other objects.</p><p id="p-0069" num="0068">In some examples, when a particular modification is selected along with content to be transformed, elements to be transformed are identified by the computing device, and then detected and tracked if they are present in the frames of the video. The elements of the object are modified according to the request for modification, thus transforming the frames of the video stream. Transformation of frames of a video stream can be performed by different methods for different kinds of transformation. For example, for transformations of frames mostly referring to changing forms of object's elements characteristic points for each element of an object are calculated (e.g., using an Active Shape Model (ASM) or other known methods). Then, a mesh based on the characteristic points is generated for each of the at least one element of the object. This mesh used in the following stage of tracking the elements of the object in the video stream. In the process of tracking, the mentioned mesh for each element is aligned with a position of each element. Then, additional points are generated on the mesh. A first set of first points is generated for each element based on a request for modification, and a set of second points is generated for each element based on the set of first points and the request for modification. Then, the frames of the video stream can be transformed by modifying the elements of the object on the basis of the sets of first and second points and the mesh. In such method, a background of the modified object can be changed or distorted as well by tracking and modifying the background.</p><p id="p-0070" num="0069">In some examples, transformations changing some areas of an object using its elements can be performed by calculating characteristic points for each element of an object and generating a mesh based on the calculated characteristic points. Points are generated on the mesh, and then various areas based on the points are generated. The elements of the object are then tracked by aligning the area for each element with a position for each of the at least one element, and properties of the areas can be modified based on the request for modification, thus transforming the frames of the video stream. Depending on the specific request for modification properties of the mentioned areas can be transformed in different ways. Such modifications may involve changing color of areas; removing at least some part of areas from the frames of the video stream; including one or more new objects into areas which are based on a request for modification; and modifying or distorting the elements of an area or object. In various examples, any combination of such modifications or other similar modifications may be used. For certain models to be animated, some characteristic points can be selected as control points to be used in determining the entire state-space of options for the model animation.</p><p id="p-0071" num="0070">In some examples of a computer animation model to transform image data using face detection, the face is detected on an image with use of a specific face detection algorithm (e.g., Viola-Jones). Then, an Active Shape Model (ASM) algorithm is applied to the face region of an image to detect facial feature reference points.</p><p id="p-0072" num="0071">Other methods and algorithms suitable for face detection can be used. For example, in some examples, features are located using a landmark, which represents a distinguishable point present in most of the images under consideration. For facial landmarks, for example, the location of the left eye pupil may be used. If an initial landmark is not identifiable (e.g., if a person has an eyepatch), secondary landmarks may be used. Such landmark identification procedures may be used for any such objects. In some examples, a set of landmarks forms a shape. Shapes can be represented as vectors using the coordinates of the points in the shape. One shape is aligned to another with a similarity transform (allowing translation, scaling, and rotation) that minimizes the average Euclidean distance between shape points. The mean shape is the mean of the aligned training shapes.</p><p id="p-0073" num="0072">In some examples, a search for landmarks from the mean shape aligned to the position and size of the face determined by a global face detector is started. Such a search then repeats the steps of suggesting a tentative shape by adjusting the locations of shape points by template matching of the image texture around each point and then conforming the tentative shape to a global shape model until convergence occurs. In some systems, individual template matches are unreliable, and the shape model pools the results of the weak template matches to form a stronger overall classifier. The entire search is repeated at each level in an image pyramid, from coarse to fine resolution.</p><p id="p-0074" num="0073">A transformation system can capture an image or video stream on a client device (e.g., the client device <b>102</b>) and perform complex image manipulations locally on the client device <b>102</b> while maintaining a suitable user experience, computation time, and power consumption. The complex image manipulations may include size and shape changes, emotion transfers (e.g., changing a face from a frown to a smile), state transfers (e.g., aging a subject, reducing apparent age, changing gender), style transfers, graphical element application, and any other suitable image or video manipulation implemented by a convolutional neural network that has been configured to execute efficiently on the client device <b>102</b>.</p><p id="p-0075" num="0074">In some examples, a computer animation model to transform image data can be used by a system where a user may capture an image or video stream of the user (e.g., a selfie) using a client device <b>102</b> having a neural network operating as part of a messaging client <b>104</b> operating on the client device <b>102</b>. The transformation system operating within the messaging client <b>104</b> determines the presence of a face within the image or video stream and provides modification icons associated with a computer animation model to transform image data, or the computer animation model can be present as associated with an interface described herein. The modification icons include changes that may be the basis for modifying the user's face within the image or video stream as part of the modification operation. Once a modification icon is selected, the transform system initiates a process to convert the image of the user to reflect the selected modification icon (e.g., generate a smiling face on the user). A modified image or video stream may be presented in a graphical user interface displayed on the client device <b>102</b> as soon as the image or video stream is captured, and a specified modification is selected. The transformation system may implement a complex convolutional neural network on a portion of the image or video stream to generate and apply the selected modification. That is, the user may capture the image or video stream and be presented with a modified result in real-time or near real-time once a modification icon has been selected. Further, the modification may be persistent while the video stream is being captured, and the selected modification icon remains toggled. Machine taught neural networks may be used to enable such modifications.</p><p id="p-0076" num="0075">The graphical user interface, presenting the modification performed by the transform system, may supply the user with additional interaction options. Such options may be based on the interface used to initiate the content capture and selection of a particular computer animation model (e.g., initiation from a content creator user interface). In various examples, a modification may be persistent after an initial selection of a modification icon. The user may toggle the modification on or off by tapping or otherwise selecting the face being modified by the transformation system and store it for later viewing or browse to other areas of the imaging application. Where multiple faces are modified by the transformation system, the user may toggle the modification on or off globally by tapping or selecting a single face modified and displayed within a graphical user interface. In some examples, individual faces, among a group of multiple faces, may be individually modified, or such modifications may be individually toggled by tapping or selecting the individual face or a series of individual faces displayed within the graphical user interface.</p><p id="p-0077" num="0076">A story table <b>312</b> stores data regarding collections of messages and associated image, video, or audio data, which are compiled into a collection (e.g., a story or a gallery). The creation of a particular collection may be initiated by a particular user (e.g., each user for which a record is maintained in the entity table <b>308</b>). A user may create a &#x201c;personal story&#x201d; in the form of a collection of content that has been created and sent/broadcast by that user. To this end, the user interface of the messaging client <b>104</b> may include an icon that is user-selectable to enable a sending user to add specific content to his or her personal story.</p><p id="p-0078" num="0077">A collection may also constitute a &#x201c;live story,&#x201d; which is a collection of content from multiple users that is created manually, automatically, or using a combination of manual and automatic techniques. For example, a &#x201c;live story&#x201d; may constitute a curated stream of user-submitted content from varies locations and events. Users whose client devices have location services enabled and are at a common location event at a particular time may, for example, be presented with an option, via a user interface of the messaging client <b>104</b>, to contribute content to a particular live story. The live story may be identified to the user by the messaging client <b>104</b>, based on his or her location. The end result is a &#x201c;live story&#x201d; told from a community perspective.</p><p id="p-0079" num="0078">A further type of content collection is known as a &#x201c;location story,&#x201d; which enables a user whose client device <b>102</b> is located within a specific geographic location (e.g., on a college or university campus) to contribute to a particular collection. In some examples, a contribution to a location story may require a second degree of authentication to verify that the end user belongs to a specific organization or other entity (e.g., is a student on the university campus).</p><p id="p-0080" num="0079">As mentioned above, the video table <b>314</b> stores video data that, in one example, is associated with messages for which records are maintained within the message table <b>306</b>. Similarly, the image table <b>316</b> stores image data associated with messages for which message data is stored in the entity table <b>308</b>. The entity table <b>308</b> may associate various augmentations from the augmentation table <b>310</b> with various images and videos stored in the image table <b>316</b> and the video table <b>314</b>.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram illustrating a structure of a message <b>400</b>, according to some examples, generated by a messaging client <b>104</b> for communication to a further messaging client <b>104</b> or the messaging server <b>118</b>. The content of a particular message <b>400</b> is used to populate the message table <b>306</b> stored within the database <b>126</b>, accessible by the messaging server <b>118</b>. Similarly, the content of a message <b>400</b> is stored in memory as &#x201c;in-transit&#x201d; or &#x201c;in-flight&#x201d; data of the client device <b>102</b> or the application servers <b>114</b>. A message <b>400</b> is shown to include the following example components:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0081">message identifier <b>402</b>: a unique identifier that identifies the message <b>400</b>.</li>        <li id="ul0002-0002" num="0082">message text payload <b>404</b>: text, to be generated by a user via a user interface of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0003" num="0083">message image payload <b>406</b>: image data, captured by a camera component of a client device <b>102</b> or retrieved from a memory component of a client device <b>102</b>, and that is included in the message <b>400</b>. Image data for a sent or received message <b>400</b> may be stored in the image table <b>316</b>.</li>        <li id="ul0002-0004" num="0084">message video payload <b>408</b>: video data, captured by a camera component or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>. Video data for a sent or received message <b>400</b> may be stored in the video table <b>314</b>.</li>        <li id="ul0002-0005" num="0085">message audio payload <b>410</b>: audio data, captured by a microphone or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0006" num="0086">message augmentation data <b>412</b>: augmentation data (e.g., filters, stickers, or other annotations or enhancements) that represents augmentations to be applied to message image payload <b>406</b>, message video payload <b>408</b>, or message audio payload <b>410</b> of the message <b>400</b>. Augmentation data for a sent or received message <b>400</b> may be stored in the augmentation table <b>310</b>.</li>        <li id="ul0002-0007" num="0087">message duration parameter <b>414</b>: parameter value indicating, in seconds, the amount of time for which content of the message (e.g., the message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b>) is to be presented or made accessible to a user via the messaging client <b>104</b>.</li>        <li id="ul0002-0008" num="0088">message geolocation parameter <b>416</b>: geolocation data (e.g., latitudinal and longitudinal coordinates) associated with the content payload of the message. Multiple message geolocation parameter <b>416</b> values may be included in the payload, each of these parameter values being associated with respect to content items included in the content (e.g., a specific image into within the message image payload <b>406</b>, or a specific video in the message video payload <b>408</b>).</li>        <li id="ul0002-0009" num="0089">message story identifier <b>418</b>: identifier values identifying one or more content collections (e.g., &#x201c;stories&#x201d; identified in the story table <b>312</b>) with which a particular content item in the message image payload <b>406</b> of the message <b>400</b> is associated. For example, multiple images within the message image payload <b>406</b> may each be associated with multiple content collections using identifier values.</li>        <li id="ul0002-0010" num="0090">message tag <b>420</b>: each message <b>400</b> may be tagged with multiple tags, each of which is indicative of the subject matter of content included in the message payload. For example, where a particular image included in the message image payload <b>406</b> depicts an animal (e.g., a lion), a tag value may be included within the message tag <b>420</b> that is indicative of the relevant animal. Tag values may be generated manually, based on user input, or may be automatically generated using, for example, image recognition.</li>        <li id="ul0002-0011" num="0091">message sender identifier <b>422</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the Client device <b>102</b> on which the message <b>400</b> was generated and from which the message <b>400</b> was sent.</li>        <li id="ul0002-0012" num="0092">message receiver identifier <b>424</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the client device <b>102</b> to which the message <b>400</b> is addressed.</li>    </ul>    </li></ul></p><p id="p-0082" num="0093">The contents (e.g., values) of the various components of message <b>400</b> may be pointers to locations in tables within which content data values are stored. For example, an image value in the message image payload <b>406</b> may be a pointer to (or address of) a location within an image table <b>316</b>. Similarly, values within the message video payload <b>408</b> may point to data stored within a video table <b>314</b>, values stored within the message augmentations <b>412</b> may point to data stored in an augmentation table <b>310</b>, values stored within the message story identifier <b>418</b> may point to data stored in a story table <b>312</b>, and values stored within the message sender identifier <b>422</b> and the message receiver identifier <b>424</b> may point to user records stored within an entity table <b>308</b>.</p><p id="p-0083" num="0094"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow diagram <b>500</b> illustrating a flow between user interfaces for presenting available functions for a captured image, in accordance with some example embodiments. For explanatory purposes, the flow diagram <b>500</b> is primarily described herein with reference to the messaging client <b>104</b> of the client device <b>102</b>, and the messaging server system <b>108</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. However, one or more blocks (or operations) of the flow diagram <b>500</b> may be performed by one or more other components, and/or by other suitable devices. Further for explanatory purposes, the blocks of the flow diagram <b>500</b> are described herein as occurring in serial, or linearly. However, multiple blocks of the flow diagram <b>500</b> may occur in parallel. In addition, the blocks of the flow diagram <b>500</b> need not be performed in the order shown and/or one or more blocks of the flow diagram <b>500</b> need not be performed and/or can be replaced by other operations.</p><p id="p-0084" num="0095">As described herein, the messaging client <b>104</b> is configured to switch between different user interfaces for presenting available functions for applying to an image (e.g., video) captured by a device camera. A first interface (e.g., the camera dock interface <b>502</b>) presents a group of icons corresponding to a subset of the available functions. The messaging client <b>104</b> may select the subset of functions based on user history and/or objects detected within the captured image. The first interface may include an icon for switching to a second interface (e.g., the camera center interface <b>504</b>) which presents a list of entries corresponding to a larger group of available functions (e.g., all available functions). Selection of an icon within the first interface or selection of an entry within the second interface causes the messaging client <b>104</b> to display a widget with user-selectable options to specify parameters for a respective function corresponding to the selected icon/entry.</p><p id="p-0085" num="0096">The messaging application (e.g., the messaging client <b>104</b>) launches at operation <b>510</b>. For example, the user invokes the messaging client <b>104</b> by selecting a respective icon corresponding to the client device <b>102</b> within a home screen displayed by the operating system of the client device <b>102</b>. In another example, the user invokes the messaging client <b>104</b> via an interface (e.g., a link, a deep link) presented within a third-party application, where the interface is user-selectable to launch the messaging client <b>104</b>. It is noted that there may be other manners in which the messaging client <b>104</b> is launched in addition to the above two examples.</p><p id="p-0086" num="0097">In one or more embodiments, upon startup, the messaging client <b>104</b> activates a device camera (e.g., a front-facing camera, rear-facing camera) to capture video, and displays the captured video on the display screen (e.g., as a live video feed). The messaging client <b>104</b> may further display interface elements for generating a media content item based on the live video feed, and for selecting and applying augmented reality content to the captured video.</p><p id="p-0087" num="0098">Moreover, the messaging client <b>104</b> displays the camera dock interface <b>502</b> in association with the captured video. As discussed further below with respect to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the camera dock interface <b>502</b> includes user-selectable elements for applying different functions with respect to the live video feed. In the camera dock interface <b>502</b>, the user-selectable elements are presented as a group of icons. Each of the icons is selectable to activate a widget related to the respective function, as discussed below. Examples of the selectable icons include a flash button for activating or deactivating a flash with respect to the captured image, and an audio track button for adding audio track(s) to the captured video for generating a media content item.</p><p id="p-0088" num="0099">The selectable icons also include icons for activating the above-mode(s) associated with the camera mode system <b>216</b>. For example, the selectable icons may include one or more of: a timeline icon for activating the timeline mode (to capture multiple videos sequentially to edit and send as one video); a timer icon for activating the timer mode (to set a time to begin video capture); a slow-motion icon for activating the slow-motion mode (capturing video in slow motion); a grid icon for activating the grid mode (to align a captured image/video with grid lines); a focus icon for activating the focus mode (to focus on an object with a depth-of-field effect); and a 3D icon for activating the 3D mode (to capture video in 3D).</p><p id="p-0089" num="0100">As discussed further below with respect to <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the camera dock interface <b>502</b> includes a camera center interface icon. This icon is user-selectable to switch to the camera center interface <b>504</b> (discussed further below with respect to <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>). Thus, at operation <b>512</b>, the user selects the camera center interface icon within the camera dock interface <b>502</b>, which causes the client device <b>102</b> to switch from the camera dock interface <b>502</b> to the camera center interface <b>504</b>.</p><p id="p-0090" num="0101">In one or more embodiments, the camera center interface <b>504</b> includes user-selectable elements for applying different functions with respect to the live video feed. In the camera center interface <b>504</b>, the user-selectable elements are presented as a list of entries. Each entry within the list is selectable to perform a respective function. Each entry within the list of entries includes one or more of an icon representing the respective function, a title of the respective function, a description of the respective function, and a button for activating a widget corresponding to the respective function.</p><p id="p-0091" num="0102">For example, the selectable entries include an audio track button for adding audio track(s) to the captured video for generating a media content item. The selectable entries further include respective entries for activating the above-described mode(s). For example, the selectable entries include one or more of a timeline entry for activating the timeline mode, a timer entry for activating the timer mode, a slow-motion entry for activating the slow-motion mode, a grid entry for activating the grid mode, a focus entry for activating the focus mode, and a 3D entry for activating the 3D mode.</p><p id="p-0092" num="0103">In one or more embodiments, the number of entries presented within the camera center interface <b>504</b> is greater than the number of icons presented within the camera dock interface <b>502</b>. As such, the entries within the camera center interface <b>504</b> correspond to a set of available functions (e.g., all available functions), while the icons within the camera dock interface <b>502</b> correspond to a subset of the available functions. However, in one example exception, the camera dock interface <b>502</b> includes the camera selection icon and the flash icon, while the camera center interface <b>504</b> does not include an entry for camera selection or flash.</p><p id="p-0093" num="0104">In one or more embodiments, the messaging client <b>104</b> provides for the subset of functions presented within the camera center interface <b>504</b> to be configurable by the user. For example, the messaging client <b>104</b> may provide interfaces (e.g., menus) for adding, removing or modifying the subset of functions presented within the camera center interface <b>504</b>.</p><p id="p-0094" num="0105">Alternatively or in addition, the subset of functions may be automatically selected by the messaging client <b>104</b> (e.g., in conjunction with the messaging server system <b>108</b>). In one example, the selecting is based at least in part on user history with respect to performing the subset of functions. The messaging client <b>104</b> may be configured to store indications of the frequency of user selection of functions over time, and to access the stored indications in order to present those functions which the user most frequently selects.</p><p id="p-0095" num="0106">In another example, the messaging client <b>104</b> in conjunction with the object detection system <b>210</b> selects the subset of functions based at least in part on objects detected within the captured image. As noted above, the object detection system <b>210</b> is configured to determine attribute(s) of object(s) in the captured image. As further noted above, the object detection system <b>210</b> implements or otherwise accesses object recognition algorithms (e.g., including machine learning algorithms) configured to determine attribute(s) of object(s) in a captured image, and to detect/track the movement of objects within the image. For example, types of objects detectable by the object detection system <b>210</b> include but are not limited to: a human face, parts of a human body, animals and parts thereof, landscapes, objects in nature, non-living objects (e.g., chairs, books, cars, buildings, other structures), illustrations of objects (e.g., on posters and/or flyers), text-based objects, equation-based objects and the like. Moreover, the object detection system <b>210</b> is configured to determine or otherwise access attributes of objects, such as a name, type, genre, color, size, shape, texture, geolocation and/or other supplemental information (e.g., a song title/artist for an object corresponding to media).</p><p id="p-0096" num="0107">In addition, the messaging client <b>104</b> may select and/or rank available functions that are associated with the attributes of the detected object(s). In one or more implementations, the messaging client <b>104</b> may store (e.g., as metadata) and associate particular functions with particular attributes of objects. For example, the messaging client <b>104</b> may store metadata indicating scenery or landscapes in association with the grid function (e.g., grid mode). In a case where a landscape is detected in the captured image, the messaging client <b>104</b> may select to include the grid icon within the camera dock interface <b>502</b>, based on metadata associated with the grid icon.</p><p id="p-0097" num="0108">The camera dock interface <b>502</b> further includes an exit button (e.g., icon) for exiting the camera dock interface <b>502</b>. Operation <b>514</b> corresponds with the user selecting the exit button, which causes the client device <b>102</b> to return to the camera dock interface <b>502</b>.</p><p id="p-0098" num="0109">In one or more embodiments, each of the available functions (which are selectable via the camera dock interface <b>502</b> and/or the camera center interface <b>504</b>) may have a respective widget associated therewith. A widget as described herein corresponds to a component of an interface (e.g., camera dock interface <b>502</b>) that enables a user to perform a respective function.</p><p id="p-0099" num="0110">In one or more embodiments, a widget includes interface elements for specifying parameters related to the respective function. For example, with respect to the timer mode, the corresponding widget includes user-selectable options specifying the amount of time (e.g. 3 seconds, 5 seconds, 10 seconds) to wait before video capture starts. Each of the available functions/modes (e.g., timeline mode, timer mode, slow-motion mode, grid mode, focus mode, 3D mode) may have corresponding widgets associated therewith. Each widget may include different interface elements (e.g., buttons, sliders, buttons, menu items, checkboxes, etc.) for specifying parameters for that function.</p><p id="p-0100" num="0111">In one or more embodiments, widgets are presented within (e.g., as on overlay on) the camera dock interface <b>502</b>. In the example of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the camera dock interface+widget <b>506</b> corresponds to displaying a widget as an overlay on the camera dock interface. As shown, the widget can be displayed in response to either the user selecting an icon within the camera dock interface <b>502</b> (operation <b>518</b>), or the user selecting an entry within the camera center interface <b>504</b> (operation <b>520</b>).</p><p id="p-0101" num="0112">Within the camera dock interface+widget <b>506</b>, the user is presented with the above-described interface elements for specifying parameters related to the respective function. Operation <b>522</b> corresponds with the user providing input to select widget parameters via the interface elements.</p><p id="p-0102" num="0113">In one or more embodiments, the messaging client <b>104</b> may direct to a preview and send interface <b>508</b>. For example, each of the camera dock interface <b>502</b> and the camera dock interface+widget <b>506</b> may include a user-selectable element (e.g., button) for generating a media content item. Selection of the button generates a media content item corresponding to an image (e.g., in response to a press/tap gesture of the button) and/or a video (e.g., in response to a press-and-hold gesture of the button). For example, the generated media content item is based on the function(s) selected by the user via the corresponding widget(s). Upon release of the button, the messaging client <b>104</b> directs to the preview and send interface <b>508</b>.</p><p id="p-0103" num="0114">In one or more embodiments, the preview and send interface <b>508</b> provides for previewing and/or sending the generated media content item. The preview and send interface <b>508</b> may include one or more user-selectable elements (e.g., buttons) for: modifying/annotating (e.g., drawing on, adding text to, adding stickers to, cropping, and the like) the media content item; saving the media content item; publishing a Story based on the media content item; and/or sending a message including the media content item.</p><p id="p-0104" num="0115">By virtue of switching between the camera dock interface <b>502</b> and the camera center interface <b>504</b> and providing widgets as described herein, it is possible to facilitate the selection of available functions for end users. Without providing for such switching and widgets, end users may be required to perform several gestures in order to perform particular functions. Thus, the messaging system <b>100</b> saves time for the user, and reduces computational resources/processing power associated with having to search for and select particular functions. In addition, the user interfaces as described herein may be more engaging for users of the messaging system <b>100</b>.</p><p id="p-0105" num="0116"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>C</figref> illustrate example user interfaces for presenting available functions for a captured image, in accordance with some example embodiments. As noted above with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the messaging client <b>104</b> is configured to display a camera dock interface <b>502</b>, a camera center interface <b>504</b> and a camera dock interface+widget <b>506</b>. The camera dock interface <b>502</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref> corresponds with the camera dock interface <b>606</b> depicted in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the camera center interface <b>504</b> corresponds with the camera center interface <b>624</b> of <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, and the camera dock interface+widget <b>506</b> corresponds with the camera dock interface <b>606</b> and timer widget <b>638</b> of <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>.</p><p id="p-0106" num="0117">As shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the user interface <b>602</b> includes a camera selection icon <b>608</b>, a flash icon <b>610</b>, an audio track icon <b>612</b>, a timeline icon <b>614</b>, a timer icon <b>616</b>, a camera center interface icon <b>618</b>, a carousel interface <b>620</b> and a selected AR icon <b>622</b>.</p><p id="p-0107" num="0118">In one or more embodiments, the carousel interface <b>620</b> allows the user to cycle through and/or select different augmented reality content items to apply/display with respect to the captured image <b>604</b>. Each of the available augmented reality content items is represented by an icon which is user-selectable for switching to the respective augmented reality content item. In one or more embodiments, the icon corresponding to an active augmented reality content item (e.g., a selected AR icon <b>622</b>) is displayed in a different manner relative to (e.g., larger than) the remaining icons.</p><p id="p-0108" num="0119">User selection of the selected AR icon <b>622</b> provides for generating a media content item which includes an image (e.g., in response to a press/tap gesture of the selected AR icon <b>622</b>) and/or a video (e.g., in response to a press-and-hold gesture of the selected AR icon <b>622</b>) of the screen content, for example, to send to friends, include in a Story, and the like. In the example of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, an active augmented reality content item has not been selected. As such, the selected AR icon <b>622</b> is depicted as a shutter icon (e.g., a blank circle that is unassociated with an augmented reality content item).</p><p id="p-0109" num="0120">In the example of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the client device <b>102</b> captures an image (e.g., a live video feed) from a front-facing camera of the client device <b>102</b>. In this example, the captured image <b>604</b> corresponds to a selfie of the user. While the example of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> illustrates the captured image <b>604</b> as captured by a front-facing camera of the client device <b>102</b>, it is possible for the messaging client <b>104</b> to instead capture an image (e.g., a live video feed) from a rear-facing camera. For example, the camera selection icon <b>608</b> corresponds to a user-selectable button for switching between the rear-facing and front-facing camera of the client device <b>102</b>. The user interface <b>602</b> further includes a flash icon <b>610</b> for activating or deactivating a flash with respect to the captured image <b>604</b>.</p><p id="p-0110" num="0121">Moreover, each of the icons <b>612</b>-<b>616</b> is user-selectable to activate a corresponding widget, as discussed further below with respect to <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>. For example, the audio track icon <b>612</b> is selectable to activate a widget for specifying parameters to adding an audio track. The timeline icon <b>614</b> is selectable to activate a widget for specifying parameters for the timeline mode, in order to capture multiple videos sequentially to edit and send as one video. The timer icon <b>616</b> is selectable to activate a widget for specifying parameters for the timer mode, in order to set a time to begin video capture.</p><p id="p-0111" num="0122">In addition, the camera center interface icon <b>618</b> is user-selectable to cause the messaging client <b>104</b> to switch from display of the camera dock interface <b>606</b> to the camera center interface <b>624</b> as shown in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the camera center interface <b>624</b> corresponds to a list of entries, each of which is user-selectable for applying different functions with respect to the live video feed. In one or more embodiments, the number of entries within the list of entries in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is greater than the number of icons within the group of icons in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>.</p><p id="p-0112" num="0123">Each entry within the list of entries includes an icon representing the respective function (e.g., where the icon matches the respective icon in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>), a title of the respective function, a description of the respective function, and a button (depicted as a &#x201c;+&#x201d;). Similar to the icons <b>612</b>-<b>616</b> in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, each of the buttons <b>628</b>-<b>636</b> is selectable to activate a corresponding widget.</p><p id="p-0113" num="0124">In particular, the timeline button <b>628</b> is selectable to activate a widget for specifying parameters for the timeline mode, the timer button <b>630</b> is selectable to activate a widget for specifying parameters for the timer mode, the slow-motion button <b>632</b> is selectable to activate a widget for specifying parameters for the slow-motion mode, the audio track button <b>634</b> is selectable to activate a widget for specifying parameters to adding an audio track, and the grid button <b>636</b> is selectable to activate a widget for specifying parameters for grid mode.</p><p id="p-0114" num="0125">The camera center interface <b>624</b> further includes a close button <b>626</b>. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, user selection of the close button <b>626</b> causes the messaging client <b>104</b> to return to the camera dock interface <b>606</b>.</p><p id="p-0115" num="0126">In response to user selection of one of the icons <b>608</b>-<b>618</b>, or user selection of one of the buttons <b>628</b>-<b>636</b>, the messaging client <b>104</b> provides for displaying a widget as an overlay on the camera dock interface <b>606</b>. For example, <figref idref="DRAWINGS">FIG. <b>6</b>C</figref> depicts a timer widget <b>638</b> for setting parameters with respect to the timer mode. The timer widget <b>638</b> includes user-selectable options for setting the amount of time (e.g. 3 seconds, 5 seconds, 10 seconds) to wait before video capture starts.</p><p id="p-0116" num="0127">In one or more embodiments, the user interface <b>602</b> may be configured to receive touch input (e.g., a predefined gesture) for removing the timer widget <b>638</b> (or any widget) and returning to the camera dock interface <b>606</b> of <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>. For example, user selection on a part of the screen outside of the timer widget <b>638</b> may cause the messaging client <b>104</b> to remove the timer widget <b>638</b> from the screen, such that the timer mode is not enabled.</p><p id="p-0117" num="0128">As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the camera dock interface <b>606</b> presented within <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>6</b>C</figref> includes a user-selectable element (e.g., selected AR icon <b>622</b>) for generating a media content item. Selection of the selected AR icon <b>622</b> generates a media content item corresponding to an image (e.g., in response to a press/tap gesture of the button) and/or a video (e.g., in response to a press-and-hold gesture of the button). For example, the generated media content item is based on the function(s) selected by the user via the corresponding widget(s). Upon release of the button, the messaging client <b>104</b> directs to a preview and send interface.</p><p id="p-0118" num="0129">The preview and send interface provides for previewing and/or sending the generated media content item. The preview and send interface further includes one or more user-selectable elements (e.g., buttons) for: modifying/annotating (e.g., drawing on, adding text to, adding stickers to, cropping, and the like) the media content item; saving the media content item; publishing a Story based on the media content item; and/or sending a message including the media content item.</p><p id="p-0119" num="0130"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart illustrating a process for presenting available functions for a captured image, in accordance with some example embodiments. For explanatory purposes, the process <b>700</b> is primarily described herein with reference to the messaging client <b>104</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. However, one or more blocks (or operations) of the process <b>700</b> may be performed by one or more other components, and/or by other suitable devices. Further for explanatory purposes, the blocks (or operations) of the process <b>700</b> are described herein as occurring in serial, or linearly. However, multiple blocks (or operations) of the process <b>700</b> may occur in parallel or concurrently. In addition, the blocks (or operations) of the process <b>700</b> need not be performed in the order shown and/or one or more blocks (or operations) of the process <b>700</b> need not be performed and/or can be replaced by other operations. The process <b>700</b> may be terminated when its operations are completed. In addition, the process <b>700</b> may correspond to a method, a procedure, an algorithm, etc.</p><p id="p-0120" num="0131">The messaging client <b>104</b> selects a subset of functions from among a set of functions for applying to an image captured by a device camera (block <b>702</b>). The selecting may be based at least in part on user history with respect to performing the subset of functions. Alternatively or in addition, the messaging client <b>104</b> may detect an object within the image, and the selecting may be based at least in part on an attribute of the detected object corresponding to the subset of functions.</p><p id="p-0121" num="0132">The messaging client <b>104</b> causes display of a first interface for presenting the subset of functions, the first interface including a group of icons, each of which is user-selectable to perform a respective function within the subset of functions, the first interface further including an additional icon which is user-selectable to switch to a second interface (block <b>704</b>).</p><p id="p-0122" num="0133">The messaging client <b>104</b> causes, in response to user selection of the additional icon, display of the first interface to switch to display of the second interface for presenting the set of functions, the second interface including a list of entries, each of which is user-selectable to perform a respective function within the set of functions (block <b>706</b>).</p><p id="p-0123" num="0134">The messaging client <b>104</b> may cause, in response to user selection of an icon within the group of icons, display of the first interface to include a widget associated with the selected icon. The widget may include user-selectable options for specifying parameters for the respective function associated with the selected icon.</p><p id="p-0124" num="0135">Each entry within the list of entries may include an icon representing the respective function, a title of the respective function, a description of the respective function, and a button for displaying a widget corresponding to the respective function. The messaging client <b>104</b> may receive user selection of an entry, from among the list of entries, via the button corresponding to the entry, and cause, in response to receiving the user selection, display of the widget corresponding to the respective function associated with the selected entry. The widget may include user-selectable options specifying parameters for the respective function associated with the selected entry.</p><p id="p-0125" num="0136"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic diagram illustrating an access-limiting process <b>800</b>, in terms of which access to content (e.g., an ephemeral message <b>802</b>, and associated multimedia payload of data) or a content collection (e.g., an ephemeral message group <b>804</b>) may be time-limited (e.g., made ephemeral).</p><p id="p-0126" num="0137">An ephemeral message <b>802</b> is shown to be associated with a message duration parameter <b>806</b>, the value of which determines an amount of time that the ephemeral message <b>802</b> will be displayed to a receiving user of the ephemeral message <b>802</b> by the messaging client <b>104</b>. In one example, an ephemeral message <b>802</b> is viewable by a receiving user for up to a maximum of 10 seconds, depending on the amount of time that the sending user specifies using the message duration parameter <b>806</b>.</p><p id="p-0127" num="0138">The message duration parameter <b>806</b> and the message receiver identifier <b>424</b> are shown to be inputs to a message timer <b>810</b>, which is responsible for determining the amount of time that the ephemeral message <b>802</b> is shown to a particular receiving user identified by the message receiver identifier <b>424</b>. In particular, the ephemeral message <b>802</b> will only be shown to the relevant receiving user for a time period determined by the value of the message duration parameter <b>806</b>. The message timer <b>810</b> is shown to provide output to a more generalized ephemeral timer system <b>202</b>, which is responsible for the overall timing of display of content (e.g., an ephemeral message <b>802</b>) to a receiving user.</p><p id="p-0128" num="0139">The ephemeral message <b>802</b> is shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> to be included within an ephemeral message group <b>804</b> (e.g., a collection of messages in a personal story, or an event story). The ephemeral message group <b>804</b> has an associated group duration parameter <b>808</b>, a value of which determines a time duration for which the ephemeral message group <b>804</b> is presented and accessible to users of the messaging system <b>100</b>. The group duration parameter <b>808</b>, for example, may be the duration of a music concert, where the ephemeral message group <b>804</b> is a collection of content pertaining to that concert. Alternatively, a user (either the owning user or a curator user) may specify the value for the group duration parameter <b>808</b> when performing the setup and creation of the ephemeral message group <b>804</b>.</p><p id="p-0129" num="0140">Additionally, each ephemeral message <b>802</b> within the ephemeral message group <b>804</b> has an associated group participation parameter <b>812</b>, a value of which determines the duration of time for which the ephemeral message <b>802</b> will be accessible within the context of the ephemeral message group <b>804</b>. Accordingly, a particular ephemeral message group <b>804</b> may &#x201c;expire&#x201d; and become inaccessible within the context of the ephemeral message group <b>804</b>, prior to the ephemeral message group <b>804</b> itself expiring in terms of the group duration parameter <b>808</b>. The group duration parameter <b>808</b>, group participation parameter <b>812</b>, and message receiver identifier <b>424</b> each provide input to a group timer <b>814</b>, which operationally determines, firstly, whether a particular ephemeral message <b>802</b> of the ephemeral message group <b>804</b> will be displayed to a particular receiving user and, if so, for how long. Note that the ephemeral message group <b>804</b> is also aware of the identity of the particular receiving user as a result of the message receiver identifier <b>424</b>.</p><p id="p-0130" num="0141">Accordingly, the group timer <b>814</b> operationally controls the overall lifespan of an associated ephemeral message group <b>804</b>, as well as an individual ephemeral message <b>802</b> included in the ephemeral message group <b>804</b>. In one example, each and every ephemeral message <b>802</b> within the ephemeral message group <b>804</b> remains viewable and accessible for a time period specified by the group duration parameter <b>808</b>. In a further example, a certain ephemeral message <b>802</b> may expire, within the context of ephemeral message group <b>804</b>, based on a group participation parameter <b>812</b>. Note that a message duration parameter <b>806</b> may still determine the duration of time for which a particular ephemeral message <b>802</b> is displayed to a receiving user, even within the context of the ephemeral message group <b>804</b>. Accordingly, the message duration parameter <b>806</b> determines the duration of time that a particular ephemeral message <b>802</b> is displayed to a receiving user, regardless of whether the receiving user is viewing that ephemeral message <b>802</b> inside or outside the context of an ephemeral message group <b>804</b>.</p><p id="p-0131" num="0142">The ephemeral timer system <b>202</b> may furthermore operationally remove a particular ephemeral message <b>802</b> from the ephemeral message group <b>804</b> based on a determination that it has exceeded an associated group participation parameter <b>812</b>. For example, when a sending user has established a group participation parameter <b>812</b> of 24 hours from posting, the ephemeral timer system <b>202</b> will remove the relevant ephemeral message <b>802</b> from the ephemeral message group <b>804</b> after the specified 24 hours. The ephemeral timer system <b>202</b> also operates to remove an ephemeral message group <b>804</b> when either the group participation parameter <b>812</b> for each and every ephemeral message <b>802</b> within the ephemeral message group <b>804</b> has expired, or when the ephemeral message group <b>804</b> itself has expired in terms of the group duration parameter <b>808</b>.</p><p id="p-0132" num="0143">In certain use cases, a creator of a particular ephemeral message group <b>804</b> may specify an indefinite group duration parameter <b>808</b>. In this case, the expiration of the group participation parameter <b>812</b> for the last remaining ephemeral message <b>802</b> within the ephemeral message group <b>804</b> will determine when the ephemeral message group <b>804</b> itself expires. In this case, a new ephemeral message <b>802</b>, added to the ephemeral message group <b>804</b>, with a new group participation parameter <b>812</b>, effectively extends the life of an ephemeral message group <b>804</b> to equal the value of the group participation parameter <b>812</b>.</p><p id="p-0133" num="0144">Responsive to the ephemeral timer system <b>202</b> determining that an ephemeral message group <b>804</b> has expired (e.g., is no longer accessible), the ephemeral timer system <b>202</b> communicates with the messaging system <b>100</b> (and, for example, specifically the messaging client <b>104</b>) to cause an indicium (e.g., an icon) associated with the relevant ephemeral message group <b>804</b> to no longer be displayed within a user interface of the messaging client <b>104</b>. Similarly, when the ephemeral timer system <b>202</b> determines that the message duration parameter <b>806</b> for a particular ephemeral message <b>802</b> has expired, the ephemeral timer system <b>202</b> causes the messaging client <b>104</b> to no longer display an indicium (e.g., an icon or textual identification) associated with the ephemeral message <b>802</b>.</p><p id="p-0134" num="0145"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagrammatic representation of the machine <b>900</b> within which instructions <b>910</b> (e.g., software, a program, an application, an applet, an app, or other executable code) for causing the machine <b>900</b> to perform any one or more of the methodologies discussed herein may be executed. For example, the instructions <b>910</b> may cause the machine <b>900</b> to execute any one or more of the methods described herein. The instructions <b>910</b> transform the general, non-programmed machine <b>900</b> into a particular machine <b>900</b> programmed to carry out the described and illustrated functions in the manner described. The machine <b>900</b> may operate as a standalone device or may be coupled (e.g., networked) to other machines. In a networked deployment, the machine <b>900</b> may operate in the capacity of a server machine or a client machine in a server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine <b>900</b> may comprise, but not be limited to, a server computer, a client computer, a personal computer (PC), a tablet computer, a laptop computer, a netbook, a set-top box (STB), a personal digital assistant (PDA), an entertainment media system, a cellular telephone, a smartphone, a mobile device, a wearable device (e.g., a smartwatch), a smart home device (e.g., a smart appliance), other smart devices, a web appliance, a network router, a network switch, a network bridge, or any machine capable of executing the instructions <b>910</b>, sequentially or otherwise, that specify actions to be taken by the machine <b>900</b>. Further, while only a single machine <b>900</b> is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include a collection of machines that individually or jointly execute the instructions <b>910</b> to perform any one or more of the methodologies discussed herein. The machine <b>900</b>, for example, may comprise the client device <b>102</b> or any one of a number of server devices forming part of the messaging server system <b>108</b>. In some examples, the machine <b>900</b> may also comprise both client and server systems, with certain operations of a particular method or algorithm being performed on the server-side and with certain operations of the particular method or algorithm being performed on the client-side.</p><p id="p-0135" num="0146">The machine <b>900</b> may include processors <b>904</b>, memory <b>906</b>, and input/output I/O components <b>902</b>, which may be configured to communicate with each other via a bus <b>940</b>. In an example, the processors <b>904</b> (e.g., a Central Processing Unit (CPU), a Reduced Instruction Set Computing (RISC) Processor, a Complex Instruction Set Computing (CISC) Processor, a Graphics Processing Unit (GPU), a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Radio-Frequency Integrated Circuit (RFIC), another processor, or any suitable combination thereof) may include, for example, a processor <b>908</b> and a processor <b>912</b> that execute the instructions <b>910</b>. The term &#x201c;processor&#x201d; is intended to include multi-core processors that may comprise two or more independent processors (sometimes referred to as &#x201c;cores&#x201d;) that may execute instructions contemporaneously. Although <figref idref="DRAWINGS">FIG. <b>9</b></figref> shows multiple processors <b>904</b>, the machine <b>900</b> may include a single processor with a single-core, a single processor with multiple cores (e.g., a multi-core processor), multiple processors with a single core, multiple processors with multiples cores, or any combination thereof.</p><p id="p-0136" num="0147">The memory <b>906</b> includes a main memory <b>914</b>, a static memory <b>916</b>, and a storage unit <b>918</b>, both accessible to the processors <b>904</b> via the bus <b>940</b>. The main memory <b>906</b>, the static memory <b>916</b>, and storage unit <b>918</b> store the instructions <b>910</b> embodying any one or more of the methodologies or functions described herein. The instructions <b>910</b> may also reside, completely or partially, within the main memory <b>914</b>, within the static memory <b>916</b>, within machine-readable medium <b>920</b> within the storage unit <b>918</b>, within at least one of the processors <b>904</b> (e.g., within the Processor's cache memory), or any suitable combination thereof, during execution thereof by the machine <b>900</b>.</p><p id="p-0137" num="0148">The I/O components <b>902</b> may include a wide variety of components to receive input, provide output, produce output, transmit information, exchange information, capture measurements, and so on. The specific I/O components <b>902</b> that are included in a particular machine will depend on the type of machine. For example, portable machines such as mobile phones may include a touch input device or other such input mechanisms, while a headless server machine will likely not include such a touch input device. It will be appreciated that the I/O components <b>902</b> may include many other components that are not shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. In various examples, the I/O components <b>902</b> may include user output components <b>926</b> and user input components <b>928</b>. The user output components <b>926</b> may include visual components (e.g., a display such as a plasma display panel (PDP), a light-emitting diode (LED) display, a liquid crystal display (LCD), a projector, or a cathode ray tube (CRT)), acoustic components (e.g., speakers), haptic components (e.g., a vibratory motor, resistance mechanisms), other signal generators, and so forth. The user input components <b>928</b> may include alphanumeric input components (e.g., a keyboard, a touch screen configured to receive alphanumeric input, a photo-optical keyboard, or other alphanumeric input components), point-based input components (e.g., a mouse, a touchpad, a trackball, a joystick, a motion sensor, or another pointing instrument), tactile input components (e.g., a physical button, a touch screen that provides location and force of touches or touch gestures, or other tactile input components), audio input components (e.g., a microphone), and the like.</p><p id="p-0138" num="0149">In further examples, the I/O components <b>902</b> may include biometric components <b>930</b>, motion components <b>932</b>, environmental components <b>934</b>, or position components <b>936</b>, among a wide array of other components. For example, the biometric components <b>930</b> include components to detect expressions (e.g., hand expressions, facial expressions, vocal expressions, body gestures, or eye-tracking), measure biosignals (e.g., blood pressure, heart rate, body temperature, perspiration, or brain waves), identify a person (e.g., voice identification, retinal identification, facial identification, fingerprint identification, or electroencephalogram-based identification), and the like. The motion components <b>932</b> include acceleration sensor components (e.g., accelerometer), gravitation sensor components, rotation sensor components (e.g., gyroscope).</p><p id="p-0139" num="0150">The environmental components <b>934</b> include, for example, one or cameras (with still image/photograph and video capabilities), illumination sensor components (e.g., photometer), temperature sensor components (e.g., one or more thermometers that detect ambient temperature), humidity sensor components, pressure sensor components (e.g., barometer), acoustic sensor components (e.g., one or more microphones that detect background noise), proximity sensor components (e.g., infrared sensors that detect nearby objects), gas sensors (e.g., gas detection sensors to detection concentrations of hazardous gases for safety or to measure pollutants in the atmosphere), or other components that may provide indications, measurements, or signals corresponding to a surrounding physical environment.</p><p id="p-0140" num="0151">With respect to cameras, the client device <b>102</b> may have a camera system comprising, for example, front cameras on a front surface of the client device <b>102</b> and rear cameras on a rear surface of the client device <b>102</b>. The front cameras may, for example, be used to capture still images and video of a user of the client device <b>102</b> (e.g., &#x201c;selfies&#x201d;), which may then be augmented with augmentation data (e.g., filters) described above. The rear cameras may, for example, be used to capture still images and videos in a more traditional camera mode, with these images similarly being augmented with augmentation data. In addition to front and rear cameras, the client device <b>102</b> may also include a 360&#xb0; camera for capturing 360&#xb0; photographs and videos.</p><p id="p-0141" num="0152">Further, the camera system of a client device <b>102</b> may include dual rear cameras (e.g., a primary camera as well as a depth-sensing camera), or even triple, quad or penta rear camera configurations on the front and rear sides of the client device <b>102</b>. These multiple cameras systems may include a wide camera, an ultra-wide camera, a telephoto camera, a macro camera and a depth sensor, for example.</p><p id="p-0142" num="0153">The position components <b>936</b> include location sensor components (e.g., a GPS receiver component), altitude sensor components (e.g., altimeters or barometers that detect air pressure from which altitude may be derived), orientation sensor components (e.g., magnetometers), and the like.</p><p id="p-0143" num="0154">Communication may be implemented using a wide variety of technologies. The I/O components <b>902</b> further include communication components <b>938</b> operable to couple the machine <b>900</b> to a network <b>922</b> or devices <b>924</b> via respective coupling or connections. For example, the communication components <b>938</b> may include a network interface Component or another suitable device to interface with the network <b>922</b>. In further examples, the communication components <b>938</b> may include wired communication components, wireless communication components, cellular communication components, Near Field Communication (NFC) components, Bluetooth&#xae; components (e.g., Bluetooth&#xae; Low Energy), Wi-Fi&#xae; components, and other communication components to provide communication via other modalities. The devices <b>924</b> may be another machine or any of a wide variety of peripheral devices (e.g., a peripheral device coupled via a USB).</p><p id="p-0144" num="0155">Moreover, the communication components <b>938</b> may detect identifiers or include components operable to detect identifiers. For example, the communication components <b>938</b> may include Radio Frequency Identification (RFID) tag reader components, NFC smart tag detection components, optical reader components (e.g., an optical sensor to detect one-dimensional bar codes such as Universal Product Code (UPC) bar code, multi-dimensional bar codes such as Quick Response (QR) code, Aztec code, Data Matrix, Dataglyph, MaxiCode, PDF417, Ultra Code, UCC RSS-2D bar code, and other optical codes), or acoustic detection components (e.g., microphones to identify tagged audio signals). In addition, a variety of information may be derived via the communication components <b>938</b>, such as location via Internet Protocol (IP) geolocation, location via Wi-Fi&#xae; signal triangulation, location via detecting an NFC beacon signal that may indicate a particular location, and so forth.</p><p id="p-0145" num="0156">The various memories (e.g., main memory <b>914</b>, static memory <b>916</b>, and memory of the processors <b>904</b>) and storage unit <b>918</b> may store one or more sets of instructions and data structures (e.g., software) embodying or used by any one or more of the methodologies or functions described herein. These instructions (e.g., the instructions <b>910</b>), when executed by processors <b>904</b>, cause various operations to implement the disclosed examples.</p><p id="p-0146" num="0157">The instructions <b>910</b> may be transmitted or received over the network <b>922</b>, using a transmission medium, via a network interface device (e.g., a network interface component included in the communication components <b>938</b>) and using any one of several well-known transfer protocols (e.g., hypertext transfer protocol (HTTP)). Similarly, the instructions <b>910</b> may be transmitted or received using a transmission medium via a coupling (e.g., a peer-to-peer coupling) to the devices <b>924</b>.</p><p id="p-0147" num="0158"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram <b>1000</b> illustrating a software architecture <b>1004</b>, which can be installed on any one or more of the devices described herein. The software architecture <b>1004</b> is supported by hardware such as a machine <b>1002</b> that includes processors <b>1020</b>, memory <b>1026</b>, and I/O components <b>1038</b>. In this example, the software architecture <b>1004</b> can be conceptualized as a stack of layers, where each layer provides a particular functionality. The software architecture <b>1004</b> includes layers such as an operating system <b>1012</b>, libraries <b>1010</b>, frameworks <b>1008</b>, and applications <b>1006</b>. Operationally, the applications <b>1006</b> invoke API calls <b>1050</b> through the software stack and receive messages <b>1052</b> in response to the API calls <b>1050</b>.</p><p id="p-0148" num="0159">The operating system <b>1012</b> manages hardware resources and provides common services. The operating system <b>1012</b> includes, for example, a kernel <b>1014</b>, services <b>1016</b>, and drivers <b>1022</b>. The kernel <b>1014</b> acts as an abstraction layer between the hardware and the other software layers. For example, the kernel <b>1014</b> provides memory management, processor management (e.g., scheduling), component management, networking, and security settings, among other functionality. The services <b>1016</b> can provide other common services for the other software layers. The drivers <b>1022</b> are responsible for controlling or interfacing with the underlying hardware. For instance, the drivers <b>1022</b> can include display drivers, camera drivers, BLUETOOTH&#xae; or BLUETOOTH&#xae; Low Energy drivers, flash memory drivers, serial communication drivers (e.g., USB drivers), WI-FI&#xae; drivers, audio drivers, power management drivers, and so forth.</p><p id="p-0149" num="0160">The libraries <b>1010</b> provide a common low-level infrastructure used by the applications <b>1006</b>. The libraries <b>1010</b> can include system libraries <b>1018</b> (e.g., C standard library) that provide functions such as memory allocation functions, string manipulation functions, mathematic functions, and the like. In addition, the libraries <b>1010</b> can include API libraries <b>1024</b> such as media libraries (e.g., libraries to support presentation and manipulation of various media formats such as Moving Picture Experts Group-4 (MPEG4), Advanced Video Coding (H.264 or AVC), Moving Picture Experts Group Layer-3 (MP3), Advanced Audio Coding (AAC), Adaptive Multi-Rate (AMR) audio codec, Joint Photographic Experts Group (JPEG or JPG), or Portable Network Graphics (PNG)), graphics libraries (e.g., an OpenGL framework used to render in two dimensions (2D) and three dimensions (3D) in a graphic content on a display), database libraries (e.g., SQLite to provide various relational database functions), web libraries (e.g., WebKit to provide web browsing functionality), and the like. The libraries <b>1010</b> can also include a wide variety of other libraries <b>1028</b> to provide many other APIs to the applications <b>1006</b>.</p><p id="p-0150" num="0161">The frameworks <b>1008</b> provide a common high-level infrastructure that is used by the applications <b>1006</b>. For example, the frameworks <b>1008</b> provide various graphical user interface (GUI) functions, high-level resource management, and high-level location services. The frameworks <b>1008</b> can provide a broad spectrum of other APIs that can be used by the applications <b>1006</b>, some of which may be specific to a particular operating system or platform.</p><p id="p-0151" num="0162">In an example, the applications <b>1006</b> may include a home application <b>1036</b>, a contacts application <b>1030</b>, a browser application <b>1032</b>, a book reader application <b>1034</b>, a location application <b>1042</b>, a media application <b>1044</b>, a messaging application <b>1046</b>, a game application <b>1048</b>, and a broad assortment of other applications such as a third-party application <b>1040</b>. The applications <b>1006</b> are programs that execute functions defined in the programs. Various programming languages can be employed to create one or more of the applications <b>1006</b>, structured in a variety of manners, such as object-oriented programming languages (e.g., Objective-C, Java, or C++) or procedural programming languages (e.g., C or assembly language). In a specific example, the third-party application <b>1040</b> (e.g., an application developed using the ANDROID&#x2122; or IOS&#x2122; software development kit (SDK) by an entity other than the vendor of the particular platform) may be mobile software running on a mobile operating system such as IOS&#x2122;, ANDROID&#x2122;, WINDOWS&#xae; Phone, or another mobile operating system. In this example, the third-party application <b>1040</b> can invoke the API calls <b>1050</b> provided by the operating system <b>1012</b> to facilitate functionality described herein.</p><p id="p-0152" num="0163">&#x201c;Carrier signal&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible media to facilitate communication of such instructions. Instructions may be transmitted or received over a network using a transmission medium via a network interface device.</p><p id="p-0153" num="0164">&#x201c;Client device&#x201d; refers to any machine that interfaces to a communications network to obtain resources from one or more server systems or other client devices. A client device may be, but is not limited to, a mobile phone, desktop computer, laptop, portable digital assistants (PDAs), smartphones, tablets, ultrabooks, netbooks, laptops, multi-processor systems, microprocessor-based or programmable consumer electronics, game consoles, set-top boxes, or any other communication device that a user may use to access a network.</p><p id="p-0154" num="0165">&#x201c;Communication network&#x201d; refers to one or more portions of a network that may be an ad hoc network, an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a wireless WAN (WWAN), a metropolitan area network (MAN), the Internet, a portion of the Internet, a portion of the Public Switched Telephone Network (PSTN), a plain old telephone service (POTS) network, a cellular telephone network, a wireless network, a Wi-Fi&#xae; network, another type of network, or a combination of two or more such networks. For example, a network or a portion of a network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access (CDMA) connection, a Global System for Mobile communications (GSM) connection, or other types of cellular or wireless coupling. In this example, the coupling may implement any of a variety of types of data transfer technology, such as Single Carrier Radio Transmission Technology (1xRTT), Evolution-Data Optimized (EVDO) technology, General Packet Radio Service (GPRS) technology, Enhanced Data rates for GSM Evolution (EDGE) technology, third Generation Partnership Project (3GPP) including 3G, fourth generation wireless (4G) networks, Universal Mobile Telecommunications System (UMTS), High Speed Packet Access (HSPA), Worldwide Interoperability for Microwave Access (WiMAX), Long Term Evolution (LTE) standard, others defined by various standard-setting organizations, other long-range protocols, or other data transfer technology.</p><p id="p-0155" num="0166">&#x201c;Component&#x201d; refers to a device, physical entity, or logic having boundaries defined by function or subroutine calls, branch points, APIs, or other technologies that provide for the partitioning or modularization of particular processing or control functions. Components may be combined via their interfaces with other components to carry out a machine process. A component may be a packaged functional hardware unit designed for use with other components and a part of a program that usually performs a particular function of related functions. Components may constitute either software components (e.g., code embodied on a machine-readable medium) or hardware components. A &#x201c;hardware component&#x201d; is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various examples, one or more computer systems (e.g., a standalone computer system, a client computer system, or a server computer system) or one or more hardware components of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware component that operates to perform certain operations as described herein. A hardware component may also be implemented mechanically, electronically, or any suitable combination thereof. For example, a hardware component may include dedicated circuitry or logic that is permanently configured to perform certain operations. A hardware component may be a special-purpose processor, such as a field-programmable gate array (FPGA) or an application specific integrated circuit (ASIC). A hardware component may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example, a hardware component may include software executed by a general-purpose processor or other programmable processor. Once configured by such software, hardware components become specific machines (or specific components of a machine) uniquely tailored to perform the configured functions and are no longer general-purpose processors. It will be appreciated that the decision to implement a hardware component mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software), may be driven by cost and time considerations. Accordingly, the phrase &#x201c;hardware component&#x201d;(or &#x201c;hardware-implemented component&#x201d;) should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering examples in which hardware components are temporarily configured (e.g., programmed), each of the hardware components need not be configured or instantiated at any one instance in time. For example, where a hardware component comprises a general-purpose processor configured by software to become a special-purpose processor, the general-purpose processor may be configured as respectively different special-purpose processors (e.g., comprising different hardware components) at different times. Software accordingly configures a particular processor or processors, for example, to constitute a particular hardware component at one instance of time and to constitute a different hardware component at a different instance of time. Hardware components can provide information to, and receive information from, other hardware components. Accordingly, the described hardware components may be regarded as being communicatively coupled. Where multiple hardware components exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) between or among two or more of the hardware components. In examples in which multiple hardware components are configured or instantiated at different times, communications between such hardware components may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware components have access. For example, one hardware component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware component may then, at a later time, access the memory device to retrieve and process the stored output. Hardware components may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information). The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented components that operate to perform one or more operations or functions described herein. As used herein, &#x201c;processor-implemented component&#x201d; refers to a hardware component implemented using one or more processors. Similarly, the methods described herein may be at least partially processor-implemented, with a particular processor or processors being an example of hardware. For example, at least some of the operations of a method may be performed by one or more processors or processor-implemented components. Moreover, the one or more processors may also operate to support performance of the relevant operations in a &#x201c;cloud computing&#x201d; environment or as a &#x201c;software as a service&#x201d; (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), with these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., an API). The performance of certain of the operations may be distributed among the processors, not only residing within a single machine, but deployed across a number of machines. In some examples, the processors or processor-implemented components may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other examples, the processors or processor-implemented components may be distributed across a number of geographic locations.</p><p id="p-0156" num="0167">&#x201c;Computer-readable storage medium&#x201d; refers to both machine-storage media and transmission media. Thus, the terms include both storage devices/media and carrier waves/modulated data signals. The terms &#x201c;machine-readable medium,&#x201d; &#x201c;computer-readable medium&#x201d; and &#x201c;device-readable medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><p id="p-0157" num="0168">&#x201c;Ephemeral message&#x201d; refers to a message that is accessible for a time-limited duration. An ephemeral message may be a text, an image, a video and the like. The access time for the ephemeral message may be set by the message sender. Alternatively, the access time may be a default setting or a setting specified by the recipient. Regardless of the setting technique, the message is transitory.</p><p id="p-0158" num="0169">&#x201c;Machine storage medium&#x201d; refers to a single or multiple storage devices and media (e.g., a centralized or distributed database, and associated caches and servers) that store executable instructions, routines and data. The term shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media, including memory internal or external to processors. Specific examples of machine-storage media, computer-storage media and device-storage media include non-volatile memory, including by way of example semiconductor memory devices, e.g., erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), FPGA, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks The terms &#x201c;machine-storage medium,&#x201d; &#x201c;device-storage medium,&#x201d; &#x201c;computer-storage medium&#x201d; mean the same thing and may be used interchangeably in this disclosure. The terms &#x201c;machine-storage media,&#x201d; &#x201c;computer-storage media,&#x201d; and &#x201c;device-storage media&#x201d; specifically exclude carrier waves, modulated data signals, and other such media, at least some of which are covered under the term &#x201c;signal medium.&#x201d;</p><p id="p-0159" num="0170">&#x201c;Non-transitory computer-readable storage medium&#x201d; refers to a tangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine.</p><p id="p-0160" num="0171">&#x201c;Signal medium&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine and includes digital or analog communications signals or other intangible media to facilitate communication of software or data. The term &#x201c;signal medium&#x201d; shall be taken to include any form of a modulated data signal, carrier wave, and so forth. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a matter as to encode information in the signal. The terms &#x201c;transmission medium&#x201d; and &#x201c;signal medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>selecting a subset of functions from among a set of functions for applying to an image captured by a device camera;</claim-text><claim-text>causing display of a first interface for presenting the subset of functions, the first interface including a group of icons, each of which is user-selectable to perform a respective function within the subset of functions, the first interface further including an additional icon which is user-selectable to switch to a second interface; and</claim-text><claim-text>causing, in response to user selection of the additional icon, display of the first interface to switch to display of the second interface for presenting the set of functions, the second interface including a list of entries, each of which is user-selectable to perform a respective function within the set of functions.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the selecting is based at least in part on user history with respect to performing the subset of functions.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>detecting an object within the image, wherein the selecting is based at least in part on an attribute of the detected object corresponding to the subset of functions.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>causing, in response to user selection of an icon within the group of icons, display of the first interface to include a widget associated with the selected icon.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the widget includes user-selectable options for specifying parameters for the respective function associated with the selected icon.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each entry within the list of entries includes an icon representing the respective function, a title of the respective function, a description of the respective function, and a button for displaying a widget corresponding to the respective function.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>receiving user selection of an entry, from among the list of entries, via the button corresponding to the entry; and</claim-text><claim-text>causing, in response to receiving the user selection, display of the widget corresponding to the respective function associated with the selected entry.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the widget includes user-selectable options specifying parameters for the respective function associated with the selected entry.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A system comprising:<claim-text>a processor; and</claim-text><claim-text>a memory storing instructions that, when executed by the processor, configure the processor to perform operations comprising:<claim-text>selecting a subset of functions from among a set of functions for applying to an image captured by a device camera;</claim-text><claim-text>causing display of a first interface for presenting the subset of functions, the first interface including a group of icons, each of which is user-selectable to perform a respective function within the subset of functions, the first interface further including an additional icon which is user-selectable to switch to a second interface; and</claim-text><claim-text>causing, in response to user selection of the additional icon, display of the first interface to switch to display of the second interface for presenting the set of functions, the second interface including a list of entries, each of which is user-selectable to perform a respective function within the set of functions.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the selecting is based at least in part on user history with respect to performing the subset of functions.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, the operations further comprising:<claim-text>detecting an object within the image, wherein the selecting is based at least in part on an attribute of the detected object corresponding to the subset of functions.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, the operations further comprising:<claim-text>causing, in response to user selection of an icon within the group of icons, display of the first interface to include a widget associated with the selected icon.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the widget includes user-selectable options for specifying parameters for the respective function associated with the selected icon.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein each entry within the list of entries includes an icon representing the respective function, a title of the respective function, a description of the respective function, and a button for displaying a widget corresponding to the respective function.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, the operations further comprising:<claim-text>receiving user selection of an entry, from among the list of entries, via the button corresponding to the entry; and</claim-text><claim-text>causing, in response to receiving the user selection, display of the widget corresponding to the respective function associated with the selected entry.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the widget includes user-selectable options specifying parameters for the respective function associated with the selected entry.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory computer-readable storage medium, the computer-readable storage medium including instructions that when executed by a computer, cause the computer to perform operations comprising:<claim-text>selecting a subset of functions from among a set of functions for applying to an image captured by a device camera;</claim-text><claim-text>causing display of a first interface for presenting the subset of functions, the first interface including a group of icons, each of which is user-selectable to perform a respective function within the subset of functions, the first interface further including an additional icon which is user-selectable to switch to a second interface; and</claim-text><claim-text>causing, in response to user selection of the additional icon, display of the first interface to switch to display of the second interface for presenting the set of functions, the second interface including a list of entries, each of which is user-selectable to perform a respective function within the set of functions.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the selecting is based at least in part on user history with respect to performing the subset of functions.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, the operations further comprising:<claim-text>detecting an object within the image, wherein the selecting is based at least in part on an attribute of the detected object corresponding to the subset of functions.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, the operations further comprising:<claim-text>causing, in response to user selection of an icon within the group of icons, display of the first interface to include a widget associated with the selected icon.</claim-text></claim-text></claim></claims></us-patent-application>