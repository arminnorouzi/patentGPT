<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004262A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004262</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17812627</doc-number><date>20220714</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04817</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>046</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04817</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>046</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CONTEXTUAL SENDING MENU</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17303943</doc-number><date>20210610</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11392275</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17812627</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>63037557</doc-number><date>20200610</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Snap Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Desserrey</last-name><first-name>Laurent</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Eirinberg</last-name><first-name>Dylan Shane</first-name><address><city>Venice</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Grantham</last-name><first-name>Matthew Colin</first-name><address><city>Toronto</city><country>CA</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Whyte</last-name><first-name>David</first-name><address><city>Toronto</city><country>CA</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Method of generating contextual sending menu starts with processor causing first client device to display first and second portion of display screen in inactivated position. Processor receives selection from first user of first client device of chat selectable item in application interface. Chat selectable item is associated with communication interface of messaging system. In response to receiving the selection, processor generates media content item based on context of first client device and causes first portion and second portion of display screen to be displayed in an activated position by causing first portion to contract, and causing second portion to expand and to comprise a preview of media content item and selectable item associated with second user. Processor then receives from the first user selection of the selectable item associated with the second user, and transmits media content item to second client device. Other embodiments are also disclosed herein.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="220.98mm" wi="158.75mm" file="US20230004262A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="236.39mm" wi="160.78mm" file="US20230004262A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="241.38mm" wi="156.97mm" file="US20230004262A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="235.88mm" wi="159.85mm" file="US20230004262A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="233.00mm" wi="148.59mm" file="US20230004262A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="239.95mm" wi="146.30mm" file="US20230004262A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="239.27mm" wi="144.86mm" file="US20230004262A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="239.78mm" wi="139.78mm" file="US20230004262A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="239.95mm" wi="134.03mm" file="US20230004262A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="239.86mm" wi="172.30mm" file="US20230004262A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="239.86mm" wi="175.77mm" file="US20230004262A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CLAIM OF PRIORITY</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/303,943, filed Jun. 10, 2021, which application claims the benefit of priority to U.S. Provisional Application Ser. No. 63/037,557, filed Jun. 10, 2020, which is incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Electronic messaging, particularly instant messaging, continues to grow globally in popularity. Users are quickly able to share with one another electronic media content items including text, electronic images, audio, and video instantly.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading><p id="p-0004" num="0003">In the drawings, which are not necessarily drawn to scale, like numerals may describe similar components in different views. To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced. Some embodiments are illustrated by way of example, and not limitation, in the figures of the accompanying drawings in which:</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagrammatic representation of a networked environment in which the present disclosure may be deployed, in accordance with some examples.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagrammatic representation of a messaging system, in accordance with some examples, that has both client-side and server-side functionality.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagrammatic representation of a data structure as maintained in a database, in accordance with some examples.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagrammatic representation of a message, in accordance with some examples.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an interface <b>500</b> in accordance with one embodiment.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an interface <b>600</b> in accordance with one embodiment.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an interface <b>700</b> in accordance with one embodiment.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a process <b>800</b> of generating a contextual sending menu in accordance with one embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagrammatic representation of a machine in the form of a computer system within which a set of instructions may be executed for causing the machine to perform any one or more of the methodologies discussed herein, in accordance with some examples.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram showing a software architecture within which examples may be implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">With the increasing number of users on social networking systems, each user also has a growing network of individuals that she follows. Therefore, in order to maintain the user's engagement on social networking systems, it is paramount that the systems have the ability to present to each user the media content items that are most interesting or relevant to her. In addition to the need to curate the media content items, the social networking systems are also presented with the challenge of providing a graphical user interface that captivates the user's attention and allows her to view the curated media content items and further interact the network of individuals that she follows.</p><p id="p-0016" num="0015">In messaging systems, users are connected to a variety of other users with whom they have different levels and types of relationships. Users can interact with one another in the messaging system by exchanging messages, audio visual content, links to content on the Internet, etc.</p><p id="p-0017" num="0016">Embodiments of the present disclosure improve the functionality of electronic messaging software and systems by generating a platform on which the user can access applications and by generating an action bar based on the user's client device's context. Specifically, the action bar that is generated and displayed on the user's client device is contextual in that the contents of the action bar menu can be dependent on the application that is currently running on the user's client device. In response to selections in the application, the action bar can also be caused to display a contextual sending interface that includes a preview of the media content item from the application to be sent and a list of the users that are associated with the user on this application or on the messaging device. Selectable items (e.g., icons, images, text) identifying these users can also be displayed in the contextual sending menu such that the user can quickly access these users in order to send them content or messages related to the application.</p><p id="p-0018" num="0017">Embodiments of the present disclosure also improve on the functionality of electronic messaging software and systems by providing for a shared placement of the action bar, from which the settings menu can be accessed, across applications being executed on the client device. The action bar can be native to the messaging system but dynamically adaptable to incorporate elements that are related to the current context of the client device, such as the application that is currently being accessed by the user on the client device. By ensuring the shared placement of the action bar and the contextual aspect of the settings menu, embodiments of the messaging system improve the user experience such that user engagement with the messaging system can be further increased.</p><p id="p-0019" num="0018">Networked Computing Environment</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system <b>100</b> for exchanging data (e.g., messages and associated content) over a network. The messaging system <b>100</b> includes multiple instances of a client device <b>106</b>, each of which hosts a number of applications, including a messaging client <b>108</b>. Each messaging client <b>108</b> is communicatively coupled to other instances of the messaging client <b>108</b> and a messaging server system <b>104</b> via a network <b>102</b> (e.g., the Internet).</p><p id="p-0021" num="0020">A messaging client <b>108</b> is able to communicate and exchange data with another messaging client <b>108</b> and with the messaging server system <b>104</b> via the network <b>102</b>. The data exchanged between messaging client <b>108</b>, and between a messaging client <b>108</b> and the messaging server system <b>104</b>, includes functions (e.g., commands to invoke functions) as well as payload data (e.g., text, audio, video or other multimedia data).</p><p id="p-0022" num="0021">The messaging server system <b>104</b> provides server-side functionality via the network <b>102</b> to a particular messaging client <b>108</b>. While certain functions of the messaging system <b>100</b> are described herein as being performed by either a messaging client <b>108</b> or by the messaging server system <b>104</b>, the location of certain functionality either within the messaging client <b>108</b> or the messaging server system <b>104</b> may be a design choice. For example, it may be technically preferable to initially deploy certain technology and functionality within the messaging server system <b>104</b> but to later migrate this technology and functionality to the messaging client <b>108</b> where a client device <b>106</b> has sufficient processing capacity.</p><p id="p-0023" num="0022">The messaging server system <b>104</b> supports various services and operations that are provided to the messaging client <b>108</b>. Such operations include transmitting data to, receiving data from, and processing data generated by the messaging client <b>108</b>. This data may include message content, client device information, geolocation information, media augmentation and overlays, message content persistence conditions, social network information, and live event information, as examples. Data exchanges within the messaging system <b>100</b> are invoked and controlled through functions available via user interfaces (UIs) of the messaging client <b>108</b>.</p><p id="p-0024" num="0023">Turning now specifically to the messaging server system <b>104</b>, an Application Program Interface (API) server <b>112</b> is coupled to, and provides a programmatic interface to, application servers <b>110</b>. The application servers <b>110</b> are communicatively coupled to a database server <b>116</b>, which facilitates access to a database <b>122</b> that stores data associated with messages processed by the application servers <b>110</b>. Similarly, a web server <b>124</b> is coupled to the application servers <b>110</b>, and provides web-based interfaces to the application servers <b>110</b>. To this end, the web server <b>124</b> processes incoming network requests over the Hypertext Transfer Protocol (HTTP) and several other related protocols.</p><p id="p-0025" num="0024">The Application Program Interface (API) server <b>112</b> receives and transmits message data (e.g., commands and message payloads) between the client device <b>106</b> and the application servers <b>110</b>. Specifically, the Application Program Interface (API) server <b>112</b> provides a set of interfaces (e.g., routines and protocols) that can be called or queried by the messaging client <b>108</b> in order to invoke functionality of the application servers <b>110</b>. The Application Program Interface (API) server <b>112</b> exposes various functions supported by the application servers <b>110</b>, including account registration, login functionality, the sending of messages, via the application servers <b>110</b>, from a particular messaging client <b>108</b> to another messaging client <b>108</b>, the sending of media files (e.g., images or video) from a messaging client <b>108</b> to a messaging server <b>114</b>, and for possible access by another messaging client <b>108</b>, the settings of a collection of media data (e.g., story), the retrieval of a list of friends of a user of a client device <b>106</b>, the retrieval of such collections, the retrieval of messages and content, the addition and deletion of entities (e.g., friends) to an entity graph (e.g., a social graph), the location of friends within a social graph, and opening an application event (e.g., relating to the messaging client <b>108</b>).</p><p id="p-0026" num="0025">The application servers <b>110</b> host a number of server applications and subsystems, including for example a messaging server <b>114</b>, an image processing server <b>118</b>, and a social network server <b>120</b>. The messaging server <b>114</b> implements a number of message processing technologies and functions, particularly related to the aggregation and other processing of content (e.g., textual and multimedia content) included in messages received from multiple instances of the messaging client <b>108</b>. As will be described in further detail, the text and media content from multiple sources may be aggregated into collections of content (e.g., called stories or galleries). These collections are then made available to the messaging client <b>108</b>. Other processor and memory intensive processing of data may also be performed server-side by the messaging server <b>114</b>, in view of the hardware requirements for such processing.</p><p id="p-0027" num="0026">The application servers <b>110</b> also include an image processing server <b>118</b> that is dedicated to performing various image processing operations, typically with respect to images or video within the payload of a message sent from or received at the messaging server <b>114</b>.</p><p id="p-0028" num="0027">The social network server <b>120</b> supports various social networking functions and services and makes these functions and services available to the messaging server <b>114</b>. To this end, the social network server <b>120</b> maintains and accesses an entity graph <b>308</b> (as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) within the database <b>122</b>. Examples of functions and services supported by the social network server <b>120</b> include the identification of other users of the messaging system <b>100</b> with which a particular user has relationships or is &#x201c;following,&#x201d; and also the identification of other entities and interests of a particular user.</p><p id="p-0029" num="0028">System Architecture</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating further details regarding the messaging system <b>100</b>, according to some examples. Specifically, the messaging system <b>100</b> is shown to comprise the messaging client <b>108</b> and the application servers <b>110</b>. The messaging system <b>100</b> embodies a number of subsystems, which are supported on the client-side by the messaging client <b>108</b> and on the server-side by the application servers <b>110</b>. These subsystems include, for example, an ephemeral timer system <b>202</b>, a collection management system <b>204</b>, an augmentation system <b>206</b>, a map system <b>210</b>, and a game system <b>212</b>.</p><p id="p-0031" num="0030">The ephemeral timer system <b>202</b> is responsible for enforcing the temporary or time-limited access to content by the messaging client <b>108</b> and the messaging server <b>114</b>. The ephemeral timer system <b>202</b> incorporates a number of timers that, based on duration and display parameters associated with a message, or collection of messages (e.g., a story), selectively enable access (e.g., for presentation and display) to messages and associated content via the messaging client <b>108</b>. Further details regarding the operation of the ephemeral timer system <b>202</b> are provided below.</p><p id="p-0032" num="0031">The collection management system <b>204</b> is responsible for managing sets or collections of media (e.g., collections of text, image video, and audio data). A collection of content (e.g., messages, including images, video, text, and audio) may be organized into an &#x201c;event gallery&#x201d; or an &#x201c;event story.&#x201d; Such a collection may be made available for a specified time period, such as the duration of an event to which the content relates. For example, content relating to a music concert may be made available as a &#x201c;story&#x201d; for the duration of that music concert. The collection management system <b>204</b> may also be responsible for publishing an icon that provides notification of the existence of a particular collection to the user interface of the messaging client <b>108</b>. In one embodiment, the collection management system <b>204</b> can be responsible for managing a shared collection of media content items that can only be viewed by a group of users in the messaging system that are selected by the creator of the shared collection (e.g., the private group). In one embodiment, the shared collection of media content items can be modified by the creator of the shared collection as well as the other members of the private group. For example, the collection management system <b>204</b> only processes and implements modifications such as adding, deleting, or editing the media content items included in the shared collection that are received from client devices <b>102</b> of the members of the private group. The shared collection can also be a &#x201c;shared story&#x201d; such that the shared collection be made available for a specified time period, that is enforced by the ephemeral timer system <b>202</b>.</p><p id="p-0033" num="0032">The collection management system <b>204</b> furthermore includes a curation interface <b>208</b> that allows a collection manager to manage and curate a particular collection of content. For example, the curation interface <b>208</b> enables an event organizer to curate a collection of content relating to a specific event (e.g., delete inappropriate content or redundant messages). Additionally, the collection management system <b>204</b> employs machine vision (or image recognition technology) and content rules to automatically curate a content collection. In certain examples, compensation may be paid to a user for the inclusion of user-generated content into a collection. In such cases, the collection management system <b>204</b> operates to automatically make payments to such users for the use of their content.</p><p id="p-0034" num="0033">The augmentation system <b>206</b> provides various functions that enable a user to augment (e.g., annotate or otherwise modify or edit) media content associated with a message. For example, the augmentation system <b>206</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The augmentation system <b>206</b> operatively supplies a media overlay or augmentation (e.g., an image filter) to the messaging client <b>108</b> based on a geolocation of the client device <b>106</b>. In another example, the augmentation system <b>206</b> operatively supplies a media overlay to the messaging client <b>108</b> based on other information, such as social network information of the user of the client device <b>106</b>. A media overlay may include audio and visual content and visual effects. Examples of audio and visual content include pictures, texts, logos, animations, and sound effects. An example of a visual effect includes color overlaying. The audio and visual content or the visual effects can be applied to a media content item (e.g., a photo) at the client device <b>106</b>. For example, the media overlay may include text or image that can be overlaid on top of a photograph taken by the client device <b>106</b>. In another example, the media overlay includes an identification of a location overlay (e.g., Venice beach), a name of a live event, or a name of a merchant overlay (e.g., Beach Coffee House). In another example, the augmentation system <b>206</b> uses the geolocation of the client device <b>106</b> to identify a media overlay that includes the name of a merchant at the geolocation of the client device <b>106</b>. The media overlay may include other indicia associated with the merchant. The media overlays may be stored in the database <b>122</b> and accessed through the database server <b>116</b>. In one embodiment, the augmentation system <b>206</b> generates the invitation media overlays for the shared collection of media content items. The invitation overlay can include a text that identifies the shared collection of media content items. The invitation overlay can also include an avatar of associated with the user that created the shared collection. In some embodiments, the invitation overlay can also include avatars of associated with the users in the private group.</p><p id="p-0035" num="0034">In some examples, the augmentation system <b>206</b> provides a user-based publication platform that enables users to select a geolocation on a map and upload content associated with the selected geolocation. The user may also specify circumstances under which a particular media overlay should be offered to other users. The augmentation system <b>206</b> generates a media overlay that includes the uploaded content and associates the uploaded content with the selected geolocation.</p><p id="p-0036" num="0035">In other examples, the augmentation system <b>206</b> provides a merchant-based publication platform that enables merchants to select a particular media overlay associated with a geolocation via a bidding process. For example, the augmentation system <b>206</b> associates the media overlay of the highest bidding merchant with a corresponding geolocation for a predefined amount of time.</p><p id="p-0037" num="0036">The map system <b>210</b> provides various geographic location functions, and supports the presentation of map-based media content and messages by the messaging client <b>108</b>. For example, the map system <b>210</b> enables the display of user icons or avatars (e.g., stored in profile data <b>316</b>) on a map to indicate a current or past location of &#x201c;friends&#x201d; of a user, as well as media content (e.g., collections of messages including photographs and videos) generated by such friends, within the context of a map. For example, a message posted by a user to the messaging system <b>100</b> from a specific geographic location may be displayed within the context of a map at that particular location to &#x201c;friends&#x201d; of a specific user on a map interface of the messaging client <b>108</b>. A user can furthermore share his or her location and status information (e.g., using an appropriate status avatar) with other users of the messaging system <b>100</b> via the messaging client <b>108</b>, with this location and status information being similarly displayed within the context of a map interface of the messaging client <b>108</b> to selected users.</p><p id="p-0038" num="0037">The game system <b>212</b> provides various gaming functions within the context of the messaging client <b>108</b>. The messaging client <b>108</b> provides a game interface providing a list of available games that can be launched by a user within the context of the messaging client <b>108</b>, and played with other users of the messaging system <b>100</b>. The messaging system <b>100</b> further enables a particular user to invite other users to participate in the play of a specific game, by issuing invitations to such other users from the messaging client <b>108</b>. The messaging client <b>108</b> also supports both the voice and text messaging (e.g., chats) within the context of gameplay, provides a leaderboard for the games, and also supports the provision of in-game rewards (e.g., coins and items).</p><p id="p-0039" num="0038">Data Architecture</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram illustrating data structures <b>300</b>, which may be stored in the database <b>122</b> of the messaging server system <b>104</b>, according to certain examples. While the content of the database <b>122</b> is shown to comprise a number of tables, it will be appreciated that the data could be stored in other types of data structures (e.g., as an object-oriented database).</p><p id="p-0041" num="0040">The database <b>122</b> includes message data stored within a message table <b>302</b>. This message data includes, for any particular one message, at least message sender data, message recipient (or receiver) data, and a payload. Further details regarding information that may be included in a message, and included within the message data stored in the message table <b>302</b> is described below with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0042" num="0041">An entity table <b>306</b> stores entity data, and is linked (e.g., referentially) to an entity graph <b>308</b> and profile data <b>316</b>. Entities for which records are maintained within the entity table <b>306</b> may include individuals, corporate entities, organizations, objects, places, events, and so forth. Regardless of entity type, any entity regarding which the messaging server system <b>104</b> stores data may be a recognized entity. Each entity is provided with a unique identifier, as well as an entity type identifier (not shown).</p><p id="p-0043" num="0042">The entity graph <b>308</b> stores information regarding relationships and associations between entities. Such relationships may be social, professional (e.g., work at a common corporation or organization) interested-based or activity-based, merely for example.</p><p id="p-0044" num="0043">The profile data <b>316</b> stores multiple types of profile data about a particular entity. The profile data <b>316</b> may be selectively used and presented to other users of the messaging system <b>100</b>, based on privacy settings specified by a particular entity. Where the entity is an individual, the profile data <b>316</b> includes, for example, a user name, telephone number, address, settings (e.g., notification and privacy settings), as well as a user-selected avatar representation (or collection of such avatar representations). A particular user may then selectively include one or more of these avatar representations within the content of messages communicated via the messaging system <b>100</b>, and on map interfaces displayed by messaging clients <b>108</b> to other users. The collection of avatar representations may include &#x201c;status avatars,&#x201d; which present a graphical representation of a status or activity that the user may select to communicate at a particular time.</p><p id="p-0045" num="0044">Where the entity is a group, the profile data <b>316</b> for the group may similarly include one or more avatar representations associated with the group, in addition to the group name, members, and various settings (e.g., notifications) for the relevant group.</p><p id="p-0046" num="0045">The database <b>122</b> also stores augmentation data, such as overlays or filters, in an augmentation table <b>310</b>. The augmentation data is associated with and applied to videos (for which data is stored in a video table <b>304</b>) and images (for which data is stored in an image table <b>312</b>).</p><p id="p-0047" num="0046">Filters, in one example, are overlays that are displayed as overlaid on an image or video during presentation to a recipient user. Filters may be of various types, including user-selected filters from a set of filters presented to a sending user by the messaging client <b>108</b> when the sending user is composing a message. The user-selected filters can include an invitation media overlay that is associated with a shared collection of media content items.</p><p id="p-0048" num="0047">Other types of filters include geolocation filters (also known as geo-filters), which may be presented to a sending user based on geographic location. For example, geolocation filters specific to a neighborhood or special location may be presented within a user interface by the messaging client <b>108</b>, based on geolocation information determined by a Global Positioning System (GPS) unit of the client device <b>106</b>.</p><p id="p-0049" num="0048">Another type of filter is a data filter, which may be selectively presented to a sending user by the messaging client <b>108</b>, based on other inputs or information gathered by the client device <b>106</b> during the message creation process. Examples of data filters include current temperature at a specific location, a current speed at which a sending user is traveling, battery life for a client device <b>106</b>, or the current time.</p><p id="p-0050" num="0049">Other augmentation data that may be stored within the image table <b>312</b> includes augmented reality content items (e.g., corresponding to applying lenses or augmented reality experiences). An augmented reality content item may be a real-time special effect and sound that may be added to an image or a video.</p><p id="p-0051" num="0050">As described above, augmentation data includes augmented reality content items, overlays, image transformations, AR images, and similar terms refer to modifications that may be applied to image data (e.g., videos or images). This includes real-time modifications, which modify an image as it is captured using device sensors (e.g., one or multiple cameras) of a client device <b>106</b> and then displayed on a screen of the client device <b>106</b> with the modifications. This also includes modifications to stored content, such as video clips in a gallery that may be modified. For example, in a client device <b>106</b> with access to multiple augmented reality content items, a user can use a single video clip with multiple augmented reality content items to see how the different augmented reality content items will modify the stored clip. For example, multiple augmented reality content items that apply different pseudorandom movement models can be applied to the same content by selecting different augmented reality content items for the content. Similarly, real-time video capture may be used with an illustrated modification to show how video images currently being captured by sensors of a client device <b>106</b> would modify the captured data. Such data may simply be displayed on the screen and not stored in memory, or the content captured by the device sensors may be recorded and stored in memory with or without the modifications (or both). In some systems, a preview feature can show how different augmented reality content items will look within different windows in a display at the same time. This can, for example, enable multiple windows with different pseudorandom animations to be viewed on a display at the same time.</p><p id="p-0052" num="0051">Data and various systems using augmented reality content items or other such transform systems to modify content using this data can thus involve detection of objects (e.g., faces, hands, bodies, cats, dogs, surfaces, objects, etc.), tracking of such objects as they leave, enter, and move around the field of view in video frames, and the modification or transformation of such objects as they are tracked. In various embodiments, different methods for achieving such transformations may be used. Some examples may involve generating a three-dimensional mesh model of the object or objects, and using transformations and animated textures of the model within the video to achieve the transformation. In other examples, tracking of points on an object may be used to place an image or texture (which may be two dimensional or three dimensional) at the tracked position. In still further examples, neural network analysis of video frames may be used to place images, models, or textures in content (e.g., images or frames of video). Augmented reality content items thus refer both to the images, models, and textures used to create transformations in content, as well as to additional modeling and analysis information needed to achieve such transformations with object detection, tracking, and placement.</p><p id="p-0053" num="0052">Real-time video processing can be performed with any kind of video data (e.g., video streams, video files, etc.) saved in a memory of a computerized system of any kind. For example, a user can load video files and save them in a memory of a device, or can generate a video stream using sensors of the device. Additionally, any objects can be processed using a computer animation model, such as a human's face and parts of a human body, animals, or non-living things such as chairs, cars, or other objects.</p><p id="p-0054" num="0053">In some examples, when a particular modification is selected along with content to be transformed, elements to be transformed are identified by the computing device, and then detected and tracked if they are present in the frames of the video. The elements of the object are modified according to the request for modification, thus transforming the frames of the video stream. Transformation of frames of a video stream can be performed by different methods for different kinds of transformation. For example, for transformations of frames mostly referring to changing forms of object's elements characteristic points for each element of an object are calculated (e.g., using an Active Shape Model (ASM) or other known methods). Then, a mesh based on the characteristic points is generated for each of the at least one element of the object. This mesh used in the following stage of tracking the elements of the object in the video stream. In the process of tracking, the mentioned mesh for each element is aligned with a position of each element. Then, additional points are generated on the mesh. A first set of first points is generated for each element based on a request for modification, and a set of second points is generated for each element based on the set of first points and the request for modification. Then, the frames of the video stream can be transformed by modifying the elements of the object on the basis of the sets of first and second points and the mesh. In such method, a background of the modified object can be changed or distorted as well by tracking and modifying the background.</p><p id="p-0055" num="0054">In some examples, transformations changing some areas of an object using its elements can be performed by calculating characteristic points for each element of an object and generating a mesh based on the calculated characteristic points. Points are generated on the mesh, and then various areas based on the points are generated. The elements of the object are then tracked by aligning the area for each element with a position for each of the at least one element, and properties of the areas can be modified based on the request for modification, thus transforming the frames of the video stream. Depending on the specific request for modification properties of the mentioned areas can be transformed in different ways. Such modifications may involve changing color of areas; removing at least some part of areas from the frames of the video stream; including one or more new objects into areas which are based on a request for modification; and modifying or distorting the elements of an area or object. In various embodiments, any combination of such modifications or other similar modifications may be used. For certain models to be animated, some characteristic points can be selected as control points to be used in determining the entire state-space of options for the model animation.</p><p id="p-0056" num="0055">In some examples of a computer animation model to transform image data using face detection, the face is detected on an image with use of a specific face detection algorithm (e.g., Viola-Jones). Then, an Active Shape Model (ASM) algorithm is applied to the face region of an image to detect facial feature reference points.</p><p id="p-0057" num="0056">In other examples, other methods and algorithms suitable for face detection can be used. For example, in some embodiments, features are located using a landmark, which represents a distinguishable point present in most of the images under consideration. For facial landmarks, for example, the location of the left eye pupil may be used. If an initial landmark is not identifiable (e.g., if a person has an eyepatch), secondary landmarks may be used. Such landmark identification procedures may be used for any such objects. In some examples, a set of landmarks forms a shape. Shapes can be represented as vectors using the coordinates of the points in the shape. One shape is aligned to another with a similarity transform (allowing translation, scaling, and rotation) that minimizes the average Euclidean distance between shape points. The mean shape is the mean of the aligned training shapes.</p><p id="p-0058" num="0057">In some examples, a search for landmarks from the mean shape aligned to the position and size of the face determined by a global face detector is started. Such a search then repeats the steps of suggesting a tentative shape by adjusting the locations of shape points by template matching of the image texture around each point and then conforming the tentative shape to a global shape model until convergence occurs. In some systems, individual template matches are unreliable, and the shape model pools the results of the weak template matches to form a stronger overall classifier. The entire search is repeated at each level in an image pyramid, from coarse to fine resolution.</p><p id="p-0059" num="0058">A transformation system can capture an image or video stream on a client device (e.g., the client device <b>106</b>) and perform complex image manipulations locally on the client device <b>106</b> while maintaining a suitable user experience, computation time, and power consumption. The complex image manipulations may include size and shape changes, emotion transfers (e.g., changing a face from a frown to a smile), state transfers (e.g., aging a subject, reducing apparent age, changing gender), style transfers, graphical element application, and any other suitable image or video manipulation implemented by a convolutional neural network that has been configured to execute efficiently on the client device <b>106</b>.</p><p id="p-0060" num="0059">In some examples, a computer animation model to transform image data can be used by a system where a user may capture an image or video stream of the user (e.g., a selfie) using a client device <b>106</b> having a neural network operating as part of a messaging client application <b>104</b> operating on the client device <b>106</b>. The transformation system operating within the messaging client <b>108</b> determines the presence of a face within the image or video stream and provides modification icons associated with a computer animation model to transform image data, or the computer animation model can be present as associated with an interface described herein. The modification icons include changes that may be the basis for modifying the user's face within the image or video stream as part of the modification operation. Once a modification icon is selected, the transform system initiates a process to convert the image of the user to reflect the selected modification icon (e.g., generate a smiling face on the user). A modified image or video stream may be presented in a graphical user interface displayed on the client device <b>106</b> as soon as the image or video stream is captured, and a specified modification is selected. The transformation system may implement a complex convolutional neural network on a portion of the image or video stream to generate and apply the selected modification. That is, the user may capture the image or video stream and be presented with a modified result in real-time or near real-time once a modification icon has been selected. Further, the modification may be persistent while the video stream is being captured, and the selected modification icon remains toggled. Machine taught neural networks may be used to enable such modifications.</p><p id="p-0061" num="0060">The graphical user interface, presenting the modification performed by the transform system, may supply the user with additional interaction options. Such options may be based on the interface used to initiate the content capture and selection of a particular computer animation model (e.g., initiation from a content creator user interface). In various embodiments, a modification may be persistent after an initial selection of a modification icon. The user may toggle the modification on or off by tapping or otherwise selecting the face being modified by the transformation system and store it for later viewing or browse to other areas of the imaging application. Where multiple faces are modified by the transformation system, the user may toggle the modification on or off globally by tapping or selecting a single face modified and displayed within a graphical user interface. In some embodiments, individual faces, among a group of multiple faces, may be individually modified, or such modifications may be individually toggled by tapping or selecting the individual face or a series of individual faces displayed within the graphical user interface.</p><p id="p-0062" num="0061">A story table <b>314</b> stores data regarding collections of messages and associated image, video, or audio data, which are compiled into a collection (e.g., a story or a gallery). The creation of a particular collection may be initiated by a particular user (e.g., each user for which a record is maintained in the entity table <b>306</b>). A user may create a &#x201c;personal story&#x201d; in the form of a collection of content that has been created and sent/broadcast by that user. To this end, the user interface of the messaging client <b>108</b> may include an icon that is user-selectable to enable a sending user to add specific content to his or her personal story.</p><p id="p-0063" num="0062">A collection may also constitute a &#x201c;live story,&#x201d; which is a collection of content from multiple users that is created manually, automatically, or using a combination of manual and automatic techniques. For example, a &#x201c;live story&#x201d; may constitute a curated stream of user-submitted content from varies locations and events. Users whose client devices have location services enabled and are at a common location event at a particular time may, for example, be presented with an option, via a user interface of the messaging client <b>108</b>, to contribute content to a particular live story. The live story may be identified to the user by the messaging client <b>108</b>, based on his or her location. The end result is a &#x201c;live story&#x201d; told from a community perspective.</p><p id="p-0064" num="0063">A further type of content collection is known as a &#x201c;location story,&#x201d; which enables a user whose client device <b>106</b> is located within a specific geographic location (e.g., on a college or university campus) to contribute to a particular collection. In some examples, a contribution to a location story may require a second degree of authentication to verify that the end user belongs to a specific organization or other entity (e.g., is a student on the university campus).</p><p id="p-0065" num="0064">As mentioned above, the video table <b>304</b> stores video data that, in one example, is associated with messages for which records are maintained within the message table <b>302</b>. Similarly, the image table <b>312</b> stores image data associated with messages for which message data is stored in the entity table <b>306</b>. The entity table <b>306</b> may associate various augmentations from the augmentation table <b>310</b> with various images and videos stored in the image table <b>312</b> and the video table <b>304</b>.</p><p id="p-0066" num="0065">Data Communications Architecture</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram illustrating a structure of a message <b>400</b>, according to some examples, generated by a messaging client <b>108</b> for communication to a further messaging client <b>108</b> or the messaging server <b>114</b>. The content of a particular message <b>400</b> is used to populate the message table <b>302</b> stored within the database <b>122</b>, accessible by the messaging server <b>114</b>. Similarly, the content of a message <b>400</b> is stored in memory as &#x201c;in-transit&#x201d; or &#x201c;in-flight&#x201d; data of the client device <b>106</b> or the application servers <b>110</b>. A message <b>400</b> is shown to include the following example components:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0067">message identifier <b>402</b>: a unique identifier that identifies the message <b>400</b>.</li>        <li id="ul0002-0002" num="0068">message text payload <b>404</b>: text, to be generated by a user via a user interface of the client device <b>106</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0003" num="0069">message image payload <b>406</b>: image data, captured by a camera component of a client device <b>106</b> or retrieved from a memory component of a client device <b>106</b>, and that is included in the message <b>400</b>. Image data for a sent or received message <b>400</b> may be stored in the image table <b>312</b>.</li>        <li id="ul0002-0004" num="0070">message video payload <b>408</b>: video data, captured by a camera component or retrieved from a memory component of the client device <b>106</b>, and that is included in the message <b>400</b>. Video data for a sent or received message <b>400</b> may be stored in the video table <b>304</b>.</li>        <li id="ul0002-0005" num="0071">message audio payload <b>410</b>: audio data, captured by a microphone or retrieved from a memory component of the client device <b>106</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0006" num="0072">message augmentation data <b>412</b>: augmentation data (e.g., filters, stickers, or other annotations or enhancements) that represents augmentations to be applied to message image payload <b>406</b>, message video payload <b>408</b>, or message audio payload <b>410</b> of the message <b>400</b>. Augmentation data for a sent or received message <b>400</b> may be stored in the augmentation table <b>310</b>.</li>        <li id="ul0002-0007" num="0073">message duration parameter <b>414</b>: parameter value indicating, in seconds, the amount of time for which content of the message (e.g., the message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b>) is to be presented or made accessible to a user via the messaging client <b>108</b>.</li>        <li id="ul0002-0008" num="0074">message geolocation parameter <b>416</b>: geolocation data (e.g., latitudinal and longitudinal coordinates) associated with the content payload of the message. Multiple message geolocation parameter <b>416</b> values may be included in the payload, each of these parameter values being associated with respect to content items included in the content (e.g., a specific image into within the message image payload <b>406</b>, or a specific video in the message video payload <b>408</b>).</li>        <li id="ul0002-0009" num="0075">message story identifier <b>418</b>: identifier values identifying one or more content collections (e.g., &#x201c;stories&#x201d; identified in the story table <b>314</b>) with which a particular content item in the message image payload <b>406</b> of the message <b>400</b> is associated. For example, multiple images within the message image payload <b>406</b> may each be associated with multiple content collections using identifier values.</li>        <li id="ul0002-0010" num="0076">message tag <b>420</b>: each message <b>400</b> may be tagged with multiple tags, each of which is indicative of the subject matter of content included in the message payload. For example, where a particular image included in the message image payload <b>406</b> depicts an animal (e.g., a lion), a tag value may be included within the message tag <b>420</b> that is indicative of the relevant animal. Tag values may be generated manually, based on user input, or may be automatically generated using, for example, image recognition.</li>        <li id="ul0002-0011" num="0077">message sender identifier <b>422</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the Client device <b>106</b> on which the message <b>400</b> was generated and from which the message <b>400</b> was sent.</li>        <li id="ul0002-0012" num="0078">message receiver identifier <b>424</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the client device <b>106</b> to which the message <b>400</b> is addressed.</li>    </ul>    </li></ul></p><p id="p-0068" num="0079">The contents (e.g., values) of the various components of message <b>400</b> may be pointers to locations in tables within which content data values are stored. For example, an image value in the message image payload <b>406</b> may be a pointer to (or address of) a location within an image table <b>312</b>. Similarly, values within the message video payload <b>408</b> may point to data stored within a video table <b>304</b>, values stored within the message augmentations <b>412</b> may point to data stored in an augmentation table <b>310</b>, values stored within the message story identifier <b>418</b> may point to data stored in a story table <b>314</b>, and values stored within the message sender identifier <b>422</b> and the message receiver identifier <b>424</b> may point to user records stored within an entity table <b>306</b>.</p><p id="p-0069" num="0080">Contextual Sending Menu</p><p id="p-0070" num="0081">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the game system <b>212</b> provides various gaming functions within the context of the messaging client <b>108</b>. Games that can be launched by a user within the context of the messaging client <b>108</b> can include smaller applications (e.g., &#x201c;mini-applications&#x201d;) that are sub-applications of a larger main application that provide utility for the larger user base of the main application. The mini-applications can be designed to fit within the platform provided by messaging system <b>100</b> and leverage the features of messaging system <b>100</b> including the users and the users' list of friends within a social graph, etc.</p><p id="p-0071" num="0082">The mini-applications can be Hypertext Markup Language version 5 (HTML5) web applications that are games or other programs that can execute within the messaging system <b>100</b>. The game system <b>212</b> or a processor in the client device <b>106</b> or a processor in the application servers <b>110</b>, alone or in combination, can cause the interfaces to be displayed by the client device <b>106</b>. <figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an interface <b>500</b> with the first portion <b>502</b> and the second portion <b>504</b> in an inactivated position in accordance with one embodiment.</p><p id="p-0072" num="0083">A user of the client device <b>106</b> can launch a mini-application by selecting a selectable item (e.g., an icon, text, or image) that is associated with the mini-application. The game system <b>212</b> can cause a list selectable items associated respectively with a list of available mini-applications that can be executed by the client device <b>106</b> within the messaging system <b>100</b>. Each of the available mini-applications can be associated with application icons that can be selected to execute the mini-application on the client device <b>106</b>. As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the game system <b>212</b> causes the interface <b>500</b> to be displayed by the client device <b>106</b> in response to the user of the client device <b>106</b> selecting a selectable item associated with a mini-application. The interface <b>500</b> includes a first portion <b>502</b> and a second portion <b>504</b> of the display screen in an inactivated position. As illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the first portion <b>502</b> of the display screen is a top portion of the display screen and the second portion <b>504</b> of the display screen is a bottom portion of the display screen. The first portion <b>502</b> of the display screen in the inactivated position is greater in size than the second portion <b>504</b> of the display screen in the inactivated position.</p><p id="p-0073" num="0084">The first portion <b>502</b> includes an application interface <b>506</b> that is associated with the mini-application that was selected and activated by the user. In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the mini-application is a prediction game that displays questions to the user (e.g., &#x201c;The Weeknd is still on top! Who will knock him out of the top spot on Billboard?&#x201d;) and provides answer options that can be selected by the user (e.g., Drake, Roddy Rich, Dua Lipa, Doja Cat, and Someone Else). As shown in application interface <b>506</b>, the game system <b>212</b> causes the client device <b>106</b> to display the question from the mini-application and a plurality of selectable items (e.g., selectable item <b>518</b>) associated with the plurality of answer options. Selectable items can be text, links, images, icons, etc.</p><p id="p-0074" num="0085">The second portion <b>504</b> includes an action bar <b>516</b> that is associated with the game system <b>212</b> of the messaging system <b>100</b>. The action bar <b>516</b> can be native to the game system <b>212</b> such that it is always present when any mini-application is selected and displayed in the first portion <b>502</b>. The appearance and functionality of the action bar <b>516</b> can differ based on the context or the state of the user of the client device <b>106</b> or of the client device <b>106</b>.</p><p id="p-0075" num="0086">The action bar <b>516</b> can comprise a selectable item <b>508</b> that can be selected to exit from the mini-application. By activating the selectable item <b>508</b>, the client device <b>106</b> is caused to return the user to the interface from which the user launched the mini-application.</p><p id="p-0076" num="0087">When generating the action bar <b>516</b>, the game system <b>212</b> can determine that the context of the client device <b>106</b> includes the user selecting an icon associated with the mini-application from a communication interface for a communication session between a plurality of the users of the messaging system <b>100</b>. In this example, the client device <b>106</b> is caused to display the communication interface when the user selects the selectable item <b>508</b>.</p><p id="p-0077" num="0088">In another example, the game system <b>212</b> can determine that the selectable item associated with the mini-application selected by the user is displayed in a media item viewing interface that allows the user to view images, videos, text, messages, available on the messaging system <b>100</b>. The selectable item associated with the mini-application could be an overlay on a media content item that was received by the client device <b>106</b> and viewed on the media content item viewing interface displayed by the client device <b>106</b>. Alternatively, the media content item viewing interface can be an interface that allows the user to search or view a list of mini-applications that can be executed on the messaging system <b>100</b> (e.g., mini-application search interface, mini-application suggestion interface, etc.). The game system <b>212</b> can cause a list selectable items associated respectively with a list of available mini-applications that can be executed by the client device <b>106</b> within the messaging system <b>100</b>. In this example, since the selectable item associated with the mini-application selected by the user is displayed in the media item viewing interface, the client device <b>106</b> is caused to display the media item viewing interface when the user selects the selectable item <b>508</b>.</p><p id="p-0078" num="0089">The action bar <b>516</b> can also include a text input element <b>510</b> that can receive text input by the user to be shared in the communication interface for the communication session between the user of the client device <b>106</b> and other users in the messaging system <b>100</b>.</p><p id="p-0079" num="0090">The microphone icon <b>512</b> in the action bar <b>516</b>, when activated, can cause the microphone of the client device <b>106</b> to start recording acoustic signals. Specifically, the microphone icon <b>512</b> can be activated to record the voice of the user of the client device <b>106</b> to allow the user to send voice messages to users in the communication session. The voice recording can be displayed in the communication interface as a selectable item and played back by other users receiving the voice recording on their client devices. Alternatively, a voice communication connection between the users in the communication session can be established that allows the users to communicate via audio upon activation of the microphone icon <b>512</b>.</p><p id="p-0080" num="0091">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the action bar <b>516</b> can also include the settings selectable item <b>514</b> that is associated with a settings menu. When settings selectable item <b>514</b> is activated by the user of the client device <b>106</b>, the game system <b>212</b> receives a request to display the settings menu. The game system <b>212</b> generates the settings menu based on the context of the client device <b>106</b>.</p><p id="p-0081" num="0092">The context can include information on the mini-application that is currently running in the application interface <b>506</b>. For example, the information on the mini-application can include the identification (e.g., name, icon, images, etc.) of the mini-application, the type of application of the mini-application (e.g., single player, multiplayer, etc.), or the subject matter associated with the mini-application (e.g., categorizations such as meditation and wellness, fitness, food, culture, fashion, etc.). The context can also include information on the user of the client device <b>106</b> such has the user's activity information on the mini-application or the user's selection information on the mini-application, user's game scoring information on the mini-application, user's ranking information on the mini-application. The context can also comprise a list of users associated with the user on the mini-application, or a list of users associated with the user on the messaging system <b>100</b>.</p><p id="p-0082" num="0093"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an interface <b>600</b> that is caused to be generated by the client device <b>106</b> when the user selects one of the selectable items in the application interface <b>506</b> in accordance with one embodiment. For example, when the user activates the selectable item <b>518</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to provide &#x201c;Drake&#x201d; as his answer, the game system <b>212</b> can cause the client device <b>106</b> to display the media content item <b>604</b> in the application interface <b>506</b>.</p><p id="p-0083" num="0094">The game system <b>212</b> generates the media content item <b>604</b> based on a context of the client device <b>106</b>. In the example in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the context of the client device <b>106</b> can be that the mini-application currently running on application interface <b>506</b> is the prediction application, the current state of the mini-application (e.g., the question that the user responded to (e.g., &#x201c;The Weeknd is still on top! Who will knock him out of the top spot on Billboard?&#x201d;)), the selection that the user has selected in the application interface <b>506</b> (e.g., the selectable item <b>518</b> associated with the &#x201c;Drake&#x201d; answer), etc.</p><p id="p-0084" num="0095">In <figref idref="DRAWINGS">FIG. <b>6</b></figref>, when the user selected the selectable item <b>518</b> associated with the answer &#x201c;Drake&#x201d;, the game system <b>212</b> generates media content item <b>604</b> to include the answer &#x201c;Drake&#x201d;. As shown in interface <b>600</b>, the media content item <b>604</b> includes the text that states &#x201c;Drake will knock The Weeknd out of the top spot on the Billboard Hot <b>100</b>.&#x201d; The media content item <b>604</b> can also include a link that embeds the context. When a client device associated with a second user displays the media content item <b>604</b> and the second user selects the media content item <b>604</b>, the link is activated, and the client device associated with the second user loads the mini-application and displays the application interface <b>506</b> with the context. For example, the mini-application can be loaded on the client device associated with the second user to include the first user's answer (e.g., &#x201c;Drake&#x201d;) or to display the question that was being answered.</p><p id="p-0085" num="0096">As further shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the game system <b>212</b> can also cause the display of a chat selectable item <b>602</b> in the application interface <b>506</b> that allows the user to share the media content item <b>604</b> with other users associated with the user on the mini-application or on the messaging system <b>100</b>.</p><p id="p-0086" num="0097"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an interface <b>700</b> with a first portion of the display screen and a second portion of the display screen in an activated position in accordance with one embodiment. The game system <b>212</b> causes interface <b>700</b> to be displayed in response to detecting a selection by the user of chat selectable item <b>602</b>.</p><p id="p-0087" num="0098">As shown in interface <b>700</b>, the first portion <b>502</b> is caused to contract while the second portion <b>504</b> is caused to expand and comprise a contextual sending interface (or contextual sending menu) that includes a preview <b>704</b> of the media content item <b>604</b> and a plurality of selectable items (e.g., selectable item <b>702</b>, user selectable item <b>706</b>, selectable item <b>708</b>).</p><p id="p-0088" num="0099">In <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the game system <b>212</b> causing the first portion <b>502</b> and the second portion <b>504</b> to be in the activated position comprises causing the first portion <b>502</b> of the display screen to contract upwards by a predetermined distance. The application interface <b>506</b> is caused to be pushed upwards in the first portion <b>502</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Accordingly, the top of the application interface <b>506</b> as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> is no longer visible in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. The game system <b>212</b> also causes the second portion <b>504</b> of the display screen in <figref idref="DRAWINGS">FIG. <b>6</b></figref> to expand upwards by the predetermined distance that was vacated by the first portion <b>502</b>. In some embodiments, the contextual sending interface is displayed on the client device <b>106</b> to appear as though it exists behind the application interface <b>506</b>. For example, when the application interface <b>506</b> is pushed upwards, the second portion <b>504</b> expands in a manner that reveals the settings menu from behind the application interface <b>506</b>.</p><p id="p-0089" num="0100">The contextual sending interface in the second portion <b>504</b> in interface <b>700</b> is contextual in that the contextual sending interface can include the name of the mini-application that is currently displayed in application interface <b>506</b> (e.g., Prediction Master) and the preview <b>704</b> for the media content item <b>604</b> associated with this mini-application.</p><p id="p-0090" num="0101">In one embodiment, the game system <b>212</b> generates the preview <b>704</b> that is a preview of the media content item <b>604</b> to be transmitted to users associated with the user in the mini-application or in the messaging system <b>100</b>.</p><p id="p-0091" num="0102">The contextual sending interface in the second portion <b>504</b> in interface <b>700</b> can also be contextual in that it can comprises a plurality of selectable items (e.g., user selectable item <b>706</b>) associated with each of the users in the list of users associated with the user on the mini-application. The user selectable item <b>706</b> can be associated with a single user or a group of users that is associated with the user on the mini-application. For example, the users that are associated with the user on the mini-application can be other users that are also running the mini-application on their client devices. If the mini-application is a multiplayer game, for instance, the users that are associated with the user on the mini-application are other users that are playing this multiplayer game with the user. In <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the user can select the chat selectable item <b>602</b> to communicate with the respective users (e.g., Yamill, Patrick Mandia, Jeremy Voss), to send them the media content item <b>604</b> related to the mini-application, or to request that the messaging system <b>100</b> cause a notification to appear on the respective users' client devices (e.g., ring the user Jeremy Voss by activating the selectable text marked &#x201c;Ring&#x201d; in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0092" num="0103">The contextual sending interface can also include the selectable item <b>708</b>, when activated by the user, allows the user to view more of the contextual sending interface. When the selectable item <b>708</b> is activated, the game system <b>212</b> receives a request to display additional information included in the contextual sending interface and causes the second portion <b>504</b> to further expand or become larger. For example, by clicking on the selectable item <b>708</b>, additional user selectable items <b>706</b> can be displayed in the expanded second portion <b>504</b>.</p><p id="p-0093" num="0104">The game system <b>212</b> can also cause the second portion <b>504</b> to become a scrollable interface when the selectable item <b>708</b> is activated or when a user provides an input on the display device such as a scrolling input on the second portion <b>504</b>. A scrollable interface is one that the user can navigate by using a user input (e.g., scrolling motion including up-down, side-to-side on the display screen) to view portions of the interface that are not in view on the display screen.</p><p id="p-0094" num="0105">In one embodiment, the game system <b>212</b> generating the settings menu based on the context of the client device <b>106</b> includes identifying the mini-application that is displayed in application interface <b>506</b>, determining the settings associated with the mini-application, and establishing a configuration of the settings menu. The configuration of the settings menu can include the height of the settings menu and fixed or scrollable aspect of the settings menu. The height of the settings menu can then be used to determine the predetermined distance of the contraction of the first portion <b>502</b> and the expansion of the second portion <b>504</b>.</p><p id="p-0095" num="0106">The contextual sending interface can also include selectable item <b>702</b> (e.g., &#x201c;Back to Prediction Master&#x201d;) that is associated with a request to return to the mini-application (e.g., interface <b>500</b>). The selectable item <b>702</b> is generated based on the context of the client device <b>106</b> because it can indicate an identification of the mini-application that is currently in the application interface <b>506</b>. When the user activates selectable item <b>702</b> on his client device <b>106</b>, the game system <b>212</b> receives an input corresponding to a request to return to the inactivated position as shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. This request allows the user to return playing or using the mini-application from the contextual sending interface. In response to receiving this request, the game system <b>212</b> causes the first portion <b>502</b> and the second portion <b>504</b> of the display screen to be displayed by the client device <b>106</b> in the inactivated position in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0096" num="0107">While not shown, the user can request to return to interface <b>500</b> by selecting and dragging the first portion <b>502</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref> downwards. In request to this selection and dragging input, the game system <b>212</b> can cause the client device <b>106</b> to display the first portion <b>502</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref> to expand downwards, revealing the top of the application interface <b>506</b> that is not visible in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Simultaneously and proportionally to the expansion of first portion <b>502</b>, the game system <b>212</b> can cause the client device <b>106</b> to display the second portion <b>504</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref> to contract downwards, to cause the contextual sending interface to disappear out of view and to return to the action bar <b>516</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0097" num="0108">Process of Generating a Contextual Sending Menu</p><p id="p-0098" num="0109">Although the described flowcharts can show operations as a sequential process, many of the operations can be performed in parallel or concurrently. In addition, the order of the operations may be re-arranged. A process is terminated when its operations are completed. A process may correspond to a method, a procedure, an algorithm, etc. The operations of methods may be performed in whole or in part, may be performed in conjunction with some or all of the operations in other methods, and may be performed by any number of different systems, such as the systems described herein, or any portion thereof, such as a processor included in any of the systems.</p><p id="p-0099" num="0110"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a process <b>800</b> of generating a contextual sending menu in accordance with one embodiment. At operation <b>802</b>, a processor causes a display screen of a first client device <b>106</b> to display a first portion <b>502</b> of the display screen and a second portion <b>504</b> of the display screen in an inactivated position. The processor can cause the first portion <b>502</b> to display an application interface associated with an application and cause the second portion <b>504</b> to display an action bar that is associated with a messaging system <b>100</b>.</p><p id="p-0100" num="0111">At operation <b>804</b>, the processor receives a selection from a first user of the first client device <b>106</b> of a chat selectable item <b>602</b> in the application interface <b>506</b>. The chat selectable item <b>602</b> is associated with a communication interface of the messaging system <b>100</b>. At operation <b>806</b>, in response to receiving the selection of the chat selectable item <b>602</b>, the processor generates a media content item <b>604</b> based on a context of the first client device <b>106</b>.</p><p id="p-0101" num="0112">The processor then causes the first portion <b>502</b> and the second portion <b>504</b> of the display screen to be displayed in an activated position at operation <b>808</b>. In one embodiment, to cause the first portion <b>502</b> and the second portion <b>504</b> to be displayed in the activated position, the processor can cause the first portion <b>502</b> of the display screen to contract. To cause the first portion <b>502</b> and the second portion <b>504</b> to be displayed in the activated position, the processor can also cause the second portion <b>504</b> of the display screen to expand and to comprise a preview <b>704</b> of the media content item <b>604</b> and a user selectable item <b>706</b> associated with a second user.</p><p id="p-0102" num="0113">At operation <b>810</b>, the processor receives from the first user a selection of the user selectable item <b>706</b> associated with the second user and at operation <b>812</b>, the processor transmits the media content item <b>604</b> to a second client device <b>106</b> that is associated with the second user. In one embodiment, the processor further causes the communication interface for a communication session to be displayed at the second client device <b>106</b>. In this example, the first user and the second user are users of the messaging system <b>100</b>, and the communication session is between a plurality of client devices including the first client device <b>106</b> and the second client device <b>106</b>. The processor can further cause the media content item <b>604</b> to be displayed in the communication interface at the second client device <b>106</b>.</p><p id="p-0103" num="0114">Machine Architecture</p><p id="p-0104" num="0115"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagrammatic representation of the machine <b>900</b> within which instructions <b>910</b> (e.g., software, a program, an application, an applet, an app, or other executable code) for causing the machine <b>900</b> to perform any one or more of the methodologies discussed herein may be executed. For example, the instructions <b>910</b> may cause the machine <b>900</b> to execute any one or more of the methods described herein. The instructions <b>910</b> transform the general, non-programmed machine <b>900</b> into a particular machine <b>900</b> programmed to carry out the described and illustrated functions in the manner described. The machine <b>900</b> may operate as a standalone device or may be coupled (e.g., networked) to other machines. In a networked deployment, the machine <b>900</b> may operate in the capacity of a server machine or a client machine in a server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine <b>900</b> may comprise, but not be limited to, a server computer, a client computer, a personal computer (PC), a tablet computer, a laptop computer, a netbook, a set-top box (STB), a personal digital assistant (PDA), an entertainment media system, a cellular telephone, a smartphone, a mobile device, a wearable device (e.g., a smartwatch), a smart home device (e.g., a smart appliance), other smart devices, a web appliance, a network router, a network switch, a network bridge, or any machine capable of executing the instructions <b>910</b>, sequentially or otherwise, that specify actions to be taken by the machine <b>900</b>. Further, while only a single machine <b>900</b> is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include a collection of machines that individually or jointly execute the instructions <b>910</b> to perform any one or more of the methodologies discussed herein. The machine <b>900</b>, for example, may comprise the client device <b>106</b> or any one of a number of server devices forming part of the messaging server system <b>104</b>. In some examples, the machine <b>900</b> may also comprise both client and server systems, with certain operations of a particular method or algorithm being performed on the server-side and with certain operations of the particular method or algorithm being performed on the client-side.</p><p id="p-0105" num="0116">The machine <b>900</b> may include processors <b>904</b>, memory <b>906</b>, and input/output I/O components <b>638</b>, which may be configured to communicate with each other via a bus <b>940</b>. In an example, the processors <b>904</b> (e.g., a Central Processing Unit (CPU), a Reduced Instruction Set Computing (RISC) Processor, a Complex Instruction Set Computing (CISC) Processor, a Graphics Processing Unit (GPU), a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Radio-Frequency Integrated Circuit (RFIC), another processor, or any suitable combination thereof) may include, for example, a processor <b>908</b> and a processor <b>912</b> that execute the instructions <b>910</b>. The term &#x201c;processor&#x201d; is intended to include multi-core processors that may comprise two or more independent processors (sometimes referred to as &#x201c;cores&#x201d;) that may execute instructions contemporaneously. Although <figref idref="DRAWINGS">FIG. <b>9</b></figref> shows multiple processors <b>904</b>, the machine <b>900</b> may include a single processor with a single-core, a single processor with multiple cores (e.g., a multi-core processor), multiple processors with a single core, multiple processors with multiples cores, or any combination thereof.</p><p id="p-0106" num="0117">The memory <b>906</b> includes a main memory <b>914</b>, a static memory <b>916</b>, and a storage unit <b>918</b>, both accessible to the processors <b>904</b> via the bus <b>940</b>. The main memory <b>906</b>, the static memory <b>916</b>, and storage unit <b>918</b> store the instructions <b>910</b> embodying any one or more of the methodologies or functions described herein. The instructions <b>910</b> may also reside, completely or partially, within the main memory <b>914</b>, within the static memory <b>916</b>, within machine-readable medium <b>920</b> within the storage unit <b>918</b>, within at least one of the processors <b>904</b> (e.g., within the Processor's cache memory), or any suitable combination thereof, during execution thereof by the machine <b>900</b>.</p><p id="p-0107" num="0118">The I/O components <b>902</b> may include a wide variety of components to receive input, provide output, produce output, transmit information, exchange information, capture measurements, and so on. The specific I/O components <b>902</b> that are included in a particular machine will depend on the type of machine. For example, portable machines such as mobile phones may include a touch input device or other such input mechanisms, while a headless server machine will likely not include such a touch input device. It will be appreciated that the I/O components <b>902</b> may include many other components that are not shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. In various examples, the I/O components <b>902</b> may include user output components <b>926</b> and user input components <b>928</b>. The user output components <b>926</b> may include visual components (e.g., a display such as a plasma display panel (PDP), a light-emitting diode (LED) display, a liquid crystal display (LCD), a projector, or a cathode ray tube (CRT)), acoustic components (e.g., speakers), haptic components (e.g., a vibratory motor, resistance mechanisms), other signal generators, and so forth. The user input components <b>928</b> may include alphanumeric input components (e.g., a keyboard, a touch screen configured to receive alphanumeric input, a photo-optical keyboard, or other alphanumeric input components), point-based input components (e.g., a mouse, a touchpad, a trackball, a joystick, a motion sensor, or another pointing instrument), tactile input components (e.g., a physical button, a touch screen that provides location and force of touches or touch gestures, or other tactile input components), audio input components (e.g., a microphone), and the like.</p><p id="p-0108" num="0119">In further examples, the I/O components <b>902</b> may include biometric components <b>930</b>, motion components <b>932</b>, environmental components <b>934</b>, or position components <b>936</b>, among a wide array of other components. For example, the biometric components <b>930</b> include components to detect expressions (e.g., hand expressions, facial expressions, vocal expressions, body gestures, or eye-tracking), measure biosignals (e.g., blood pressure, heart rate, body temperature, perspiration, or brain waves), identify a person (e.g., voice identification, retinal identification, facial identification, fingerprint identification, or electroencephalogram-based identification), and the like. The motion components <b>932</b> include acceleration sensor components (e.g., accelerometer), gravitation sensor components, rotation sensor components (e.g., gyroscope).</p><p id="p-0109" num="0120">The environmental components <b>934</b> include, for example, one or cameras (with still image/photograph and video capabilities), illumination sensor components (e.g., photometer), temperature sensor components (e.g., one or more thermometers that detect ambient temperature), humidity sensor components, pressure sensor components (e.g., barometer), acoustic sensor components (e.g., one or more microphones that detect background noise), proximity sensor components (e.g., infrared sensors that detect nearby objects), gas sensors (e.g., gas detection sensors to detection concentrations of hazardous gases for safety or to measure pollutants in the atmosphere), or other components that may provide indications, measurements, or signals corresponding to a surrounding physical environment.</p><p id="p-0110" num="0121">With respect to cameras, the client device <b>106</b> may have a camera system comprising, for example, front cameras on a front surface of the client device <b>106</b> and rear cameras on a rear surface of the client device <b>106</b>. The front cameras may, for example, be used to capture still images and video of a user of the client device <b>106</b> (e.g., &#x201c;selfies&#x201d;), which may then be augmented with augmentation data (e.g., filters) described above. The rear cameras may, for example, be used to capture still images and videos in a more traditional camera mode, with these images similarly being augmented with augmentation data. In addition to front and rear cameras, the client device <b>106</b> may also include a 360&#xb0; camera for capturing 360&#xb0; photographs and videos.</p><p id="p-0111" num="0122">Further, the camera system of a client device <b>106</b> may include dual rear cameras (e.g., a primary camera as well as a depth-sensing camera), or even triple, quad or penta rear camera configurations on the front and rear sides of the client device <b>106</b>. These multiple cameras systems may include a wide camera, an ultra-wide camera, a telephoto camera, a macro camera and a depth sensor, for example.</p><p id="p-0112" num="0123">The position components <b>936</b> include location sensor components (e.g., a GPS receiver component), altitude sensor components (e.g., altimeters or barometers that detect air pressure from which altitude may be derived), orientation sensor components (e.g., magnetometers), and the like.</p><p id="p-0113" num="0124">Communication may be implemented using a wide variety of technologies. The I/O components <b>902</b> further include communication components <b>938</b> operable to couple the machine <b>900</b> to a network <b>922</b> or devices <b>924</b> via respective coupling or connections. For example, the communication components <b>938</b> may include a network interface Component or another suitable device to interface with the network <b>922</b>. In further examples, the communication components <b>938</b> may include wired communication components, wireless communication components, cellular communication components, Near Field Communication (NFC) components, Bluetooth&#xae; components (e.g., Bluetooth&#xae; Low Energy), Wi-Fi&#xae; components, and other communication components to provide communication via other modalities. The devices <b>924</b> may be another machine or any of a wide variety of peripheral devices (e.g., a peripheral device coupled via a USB).</p><p id="p-0114" num="0125">Moreover, the communication components <b>938</b> may detect identifiers or include components operable to detect identifiers. For example, the communication components <b>938</b> may include Radio Frequency Identification (RFID) tag reader components, NFC smart tag detection components, optical reader components (e.g., an optical sensor to detect one-dimensional bar codes such as Universal Product Code (UPC) bar code, multi-dimensional bar codes such as Quick Response (QR) code, Aztec code, Data Matrix, Dataglyph, MaxiCode, PDF417, Ultra Code, UCC RSS-2D bar code, and other optical codes), or acoustic detection components (e.g., microphones to identify tagged audio signals). In addition, a variety of information may be derived via the communication components <b>938</b>, such as location via Internet Protocol (IP) geolocation, location via Wi-Fi&#xae; signal triangulation, location via detecting an NFC beacon signal that may indicate a particular location, and so forth.</p><p id="p-0115" num="0126">The various memories (e.g., main memory <b>914</b>, static memory <b>916</b>, and memory of the processors <b>904</b>) and storage unit <b>918</b> may store one or more sets of instructions and data structures (e.g., software) embodying or used by any one or more of the methodologies or functions described herein. These instructions (e.g., the instructions <b>910</b>), when executed by processors <b>904</b>, cause various operations to implement the disclosed examples.</p><p id="p-0116" num="0127">The instructions <b>910</b> may be transmitted or received over the network <b>922</b>, using a transmission medium, via a network interface device (e.g., a network interface component included in the communication components <b>938</b>) and using any one of several well-known transfer protocols (e.g., hypertext transfer protocol (HTTP)). Similarly, the instructions <b>910</b> may be transmitted or received using a transmission medium via a coupling (e.g., a peer-to-peer coupling) to the devices <b>924</b>.</p><p id="p-0117" num="0128">Software Architecture</p><p id="p-0118" num="0129"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram <b>1000</b> illustrating a software architecture <b>1004</b>, which can be installed on any one or more of the devices described herein. The software architecture <b>1004</b> is supported by hardware such as a machine <b>1002</b> that includes processors <b>1020</b>, memory <b>1026</b>, and I/O components <b>1038</b>. In this example, the software architecture <b>1004</b> can be conceptualized as a stack of layers, where each layer provides a particular functionality. The software architecture <b>1004</b> includes layers such as an operating system <b>1012</b>, libraries <b>1010</b>, frameworks <b>1008</b>, and applications <b>1006</b>. Operationally, the applications <b>1006</b> invoke API calls <b>1050</b> through the software stack and receive messages <b>1052</b> in response to the API calls <b>1050</b>.</p><p id="p-0119" num="0130">The operating system <b>1012</b> manages hardware resources and provides common services. The operating system <b>1012</b> includes, for example, a kernel <b>1014</b>, services <b>1016</b>, and drivers <b>1022</b>. The kernel <b>1014</b> acts as an abstraction layer between the hardware and the other software layers. For example, the kernel <b>1014</b> provides memory management, processor management (e.g., scheduling), component management, networking, and security settings, among other functionality. The services <b>1016</b> can provide other common services for the other software layers. The drivers <b>1022</b> are responsible for controlling or interfacing with the underlying hardware. For instance, the drivers <b>1022</b> can include display drivers, camera drivers, BLUETOOTH&#xae; or BLUETOOTH&#xae; Low Energy drivers, flash memory drivers, serial communication drivers (e.g., USB drivers), WI-FI&#xae; drivers, audio drivers, power management drivers, and so forth.</p><p id="p-0120" num="0131">The libraries <b>1010</b> provide a common low-level infrastructure used by the applications <b>1006</b>. The libraries <b>1010</b> can include system libraries <b>1018</b> (e.g., C standard library) that provide functions such as memory allocation functions, string manipulation functions, mathematic functions, and the like. In addition, the libraries <b>1010</b> can include API libraries <b>1024</b> such as media libraries (e.g., libraries to support presentation and manipulation of various media formats such as Moving Picture Experts Group-4 (MPEG4), Advanced Video Coding (H.264 or AVC), Moving Picture Experts Group Layer-3 (MP3), Advanced Audio Coding (AAC), Adaptive Multi-Rate (AMR) audio codec, Joint Photographic Experts Group (JPEG or JPG), or Portable Network Graphics (PNG)), graphics libraries (e.g., an OpenGL framework used to render in two dimensions (2D) and three dimensions (3D) in a graphic content on a display), database libraries (e.g., SQLite to provide various relational database functions), web libraries (e.g., WebKit to provide web browsing functionality), and the like. The libraries <b>1010</b> can also include a wide variety of other libraries <b>1028</b> to provide many other APIs to the applications <b>1006</b>.</p><p id="p-0121" num="0132">The frameworks <b>1008</b> provide a common high-level infrastructure that is used by the applications <b>1006</b>. For example, the frameworks <b>1008</b> provide various graphical user interface (GUI) functions, high-level resource management, and high-level location services. The frameworks <b>1008</b> can provide a broad spectrum of other APIs that can be used by the applications <b>1006</b>, some of which may be specific to a particular operating system or platform.</p><p id="p-0122" num="0133">In an example, the applications <b>1006</b> may include a home application <b>1036</b>, a contacts application <b>1030</b>, a browser application <b>1032</b>, a book reader application <b>1034</b>, a location application <b>1042</b>, a media application <b>1044</b>, a messaging application <b>1046</b>, a game application <b>1048</b>, and a broad assortment of other applications such as a third-party application <b>1040</b>. The applications <b>1006</b> are programs that execute functions defined in the programs. Various programming languages can be employed to create one or more of the applications <b>1006</b>, structured in a variety of manners, such as object-oriented programming languages (e.g., Objective-C, Java, or C++) or procedural programming languages (e.g., C or assembly language). In a specific example, the third-party application <b>1040</b> (e.g., an application developed using the ANDROID&#x2122; or IOS&#x2122; software development kit (SDK) by an entity other than the vendor of the particular platform) may be mobile software running on a mobile operating system such as IOS&#x2122;, ANDROID&#x2122;, WINDOWS&#xae; Phone, or another mobile operating system. In this example, the third-party application <b>1040</b> can invoke the API calls <b>1050</b> provided by the operating system <b>1012</b> to facilitate functionality described herein.</p><heading id="h-0005" level="1">Glossary</heading><p id="p-0123" num="0134">&#x201c;Carrier signal&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible media to facilitate communication of such instructions. Instructions may be transmitted or received over a network using a transmission medium via a network interface device.</p><p id="p-0124" num="0135">&#x201c;Client device&#x201d; refers to any machine that interfaces to a communications network to obtain resources from one or more server systems or other client devices. A client device may be, but is not limited to, a mobile phone, desktop computer, laptop, portable digital assistants (PDAs), smartphones, tablets, ultrabooks, netbooks, laptops, multi-processor systems, microprocessor-based or programmable consumer electronics, game consoles, set-top boxes, or any other communication device that a user may use to access a network.</p><p id="p-0125" num="0136">&#x201c;Communication network&#x201d; refers to one or more portions of a network that may be an ad hoc network, an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a wireless WAN (WWAN), a metropolitan area network (MAN), the Internet, a portion of the Internet, a portion of the Public Switched Telephone Network (PSTN), a plain old telephone service (POTS) network, a cellular telephone network, a wireless network, a Wi-Fi&#xae; network, another type of network, or a combination of two or more such networks. For example, a network or a portion of a network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access (CDMA) connection, a Global System for Mobile communications (GSM) connection, or other types of cellular or wireless coupling. In this example, the coupling may implement any of a variety of types of data transfer technology, such as Single Carrier Radio Transmission Technology (1&#xd7;RTT), Evolution-Data Optimized (EVDO) technology, General Packet Radio Service (GPRS) technology, Enhanced Data rates for GSM Evolution (EDGE) technology, third Generation Partnership Project (3GPP) including 3G, fourth generation wireless (4G) networks, Universal Mobile Telecommunications System (UMTS), High Speed Packet Access (HSPA), Worldwide Interoperability for Microwave Access (WiMAX), Long Term Evolution (LTE) standard, others defined by various standard-setting organizations, other long-range protocols, or other data transfer technology.</p><p id="p-0126" num="0137">&#x201c;Component&#x201d; refers to a device, physical entity, or logic having boundaries defined by function or subroutine calls, branch points, APIs, or other technologies that provide for the partitioning or modularization of particular processing or control functions. Components may be combined via their interfaces with other components to carry out a machine process. A component may be a packaged functional hardware unit designed for use with other components and a part of a program that usually performs a particular function of related functions. Components may constitute either software components (e.g., code embodied on a machine-readable medium) or hardware components. A &#x201c;hardware component&#x201d; is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments, one or more computer systems (e.g., a standalone computer system, a client computer system, or a server computer system) or one or more hardware components of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware component that operates to perform certain operations as described herein. A hardware component may also be implemented mechanically, electronically, or any suitable combination thereof. For example, a hardware component may include dedicated circuitry or logic that is permanently configured to perform certain operations. A hardware component may be a special-purpose processor, such as a field-programmable gate array (FPGA) or an application specific integrated circuit (ASIC). A hardware component may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example, a hardware component may include software executed by a general-purpose processor or other programmable processor. Once configured by such software, hardware components become specific machines (or specific components of a machine) uniquely tailored to perform the configured functions and are no longer general-purpose processors. It will be appreciated that the decision to implement a hardware component mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software), may be driven by cost and time considerations. Accordingly, the phrase &#x201c;hardware component&#x201d; (or &#x201c;hardware-implemented component&#x201d;) should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering embodiments in which hardware components are temporarily configured (e.g., programmed), each of the hardware components need not be configured or instantiated at any one instance in time. For example, where a hardware component comprises a general-purpose processor configured by software to become a special-purpose processor, the general-purpose processor may be configured as respectively different special-purpose processors (e.g., comprising different hardware components) at different times. Software accordingly configures a particular processor or processors, for example, to constitute a particular hardware component at one instance of time and to constitute a different hardware component at a different instance of time. Hardware components can provide information to, and receive information from, other hardware components. Accordingly, the described hardware components may be regarded as being communicatively coupled. Where multiple hardware components exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) between or among two or more of the hardware components. In embodiments in which multiple hardware components are configured or instantiated at different times, communications between such hardware components may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware components have access. For example, one hardware component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware component may then, at a later time, access the memory device to retrieve and process the stored output. Hardware components may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information). The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented components that operate to perform one or more operations or functions described herein. As used herein, &#x201c;processor-implemented component&#x201d; refers to a hardware component implemented using one or more processors. Similarly, the methods described herein may be at least partially processor-implemented, with a particular processor or processors being an example of hardware. For example, at least some of the operations of a method may be performed by one or more processors <b>1004</b> or processor-implemented components. Moreover, the one or more processors may also operate to support performance of the relevant operations in a &#x201c;cloud computing&#x201d; environment or as a &#x201c;software as a service&#x201d; (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), with these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., an API). The performance of certain of the operations may be distributed among the processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processors or processor-implemented components may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other example embodiments, the processors or processor-implemented components may be distributed across a number of geographic locations.</p><p id="p-0127" num="0138">&#x201c;Computer-readable storage medium&#x201d; refers to both machine-storage media and transmission media. Thus, the terms include both storage devices/media and carrier waves/modulated data signals. The terms &#x201c;machine-readable medium,&#x201d; &#x201c;computer-readable medium&#x201d; and &#x201c;device-readable medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><p id="p-0128" num="0139">&#x201c;Ephemeral message&#x201d; refers to a message that is accessible for a time-limited duration. An ephemeral message may be a text, an image, a video and the like. The access time for the ephemeral message may be set by the message sender. Alternatively, the access time may be a default setting, or a setting specified by the recipient. Regardless of the setting technique, the message is transitory.</p><p id="p-0129" num="0140">&#x201c;Machine storage medium&#x201d; refers to a single or multiple storage devices and media (e.g., a centralized or distributed database, and associated caches and servers) that store executable instructions, routines and data. The term shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media, including memory internal or external to processors. Specific examples of machine-storage media, computer-storage media and device-storage media include non-volatile memory, including by way of example semiconductor memory devices, e.g., erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), FPGA, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks The terms &#x201c;machine-storage medium,&#x201d; &#x201c;device-storage medium,&#x201d; &#x201c;computer-storage medium&#x201d; mean the same thing and may be used interchangeably in this disclosure. The terms &#x201c;machine-storage media,&#x201d; &#x201c;computer-storage media,&#x201d; and &#x201c;device-storage media&#x201d; specifically exclude carrier waves, modulated data signals, and other such media, at least some of which are covered under the term &#x201c;signal medium.&#x201d;</p><p id="p-0130" num="0141">&#x201c;Non-transitory computer-readable storage medium&#x201d; refers to a tangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine.</p><p id="p-0131" num="0142">&#x201c;Signal medium&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine and includes digital or analog communications signals or other intangible media to facilitate communication of software or data. The term &#x201c;signal medium&#x201d; shall be taken to include any form of a modulated data signal, carrier wave, and so forth. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a matter as to encode information in the signal. The terms &#x201c;transmission medium&#x201d; and &#x201c;signal medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>causing, by a processor, a display screen of a first client device to display a first portion of the display screen and a second portion of the display screen in an inactivated position by</claim-text><claim-text>causing the first portion to display an application interface associated with an application, and</claim-text><claim-text>causing the second portion to display an action bar that is associated with a messaging system;</claim-text><claim-text>in response to receiving a selection of a chat selectable item included in the application interface, generating a media content item based on a context of the first client device; and</claim-text><claim-text>causing the first portion and the second portion of the display screen to be displayed in an activated position by</claim-text><claim-text>causing the first portion of the display screen to contract, and</claim-text><claim-text>causing the second portion of the display screen to expand and to comprise a preview of the media content item and a selectable item associated with a second user;</claim-text><claim-text>receiving from the first user a selection of the selectable item associated with the second user.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving from the first user a selection of the selectable item associated with the second user;</claim-text><claim-text>transmitting the media content item to a second client device that is associated with the second user; and</claim-text><claim-text>causing a communication interface of the messaging system for a communication session to be displayed at the second client device.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the first user and the second user are users of the messaging system, and wherein the communication session is between a plurality of client devices including the first client device and the second client device.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:<claim-text>causing the media content item to be displayed in the communication interface at the second client device.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the context of the first client device is based on information including user information, activity information on the application, selection information on the application, game scoring information on the application, ranking information on the application, a list of users associated with the first user on the application, or a list of users associated with the first user on the messaging system.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>causing an application icon to be displayed by the display screen, the icon being associated with the application;</claim-text><claim-text>receiving a selection of the application icon, wherein the processor causes the display screen of the first client device to display the application interface in response to the selection of the application icon.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first portion of the display screen in the inactivated position is greater in size than the second portion of the display screen in the inactivated position.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first portion of the display screen is a top portion of the display screen and the second portion of the display screen is a bottom portion of the display screen.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein causing the first portion and the second portion of the display screen to be in the activated position further comprises:<claim-text>causing the first portion of the display screen to contract upwards by a predetermined distance, wherein the application interface displayed in the first portion is pushed upwards, and</claim-text><claim-text>causing the second portion of the display screen to expand upwards by the predetermined distance.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>in response to the media content item being transmitted, causing the first portion and the second portion of the display screen to be displayed by the first client device in the inactivated position.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A non-transitory computer-readable storage medium having stored thereon instructions,<claim-text>when executed by a processor, causes the processor to perform operations comprising:</claim-text><claim-text>causing a display screen of a first client device to display a first portion of the display screen and a second portion of the display screen in an inactivated position by<claim-text>causing the first portion to display an application interface associated with an application, and</claim-text><claim-text>causing the second portion to display an action bar that is associated with a messaging system;</claim-text></claim-text><claim-text>in response to receiving a selection of a chat selectable item in the application interface from a first user of the first client device, generating a media content item based on a context of the first client device; and</claim-text><claim-text>causing the first portion and the second portion of the display screen to be displayed in an activated position by<claim-text>causing the first portion of the display screen to contract, and</claim-text><claim-text>causing the second portion of the display screen to expand and to comprise a preview of the media content item and a selectable item associated with a second user.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:<claim-text>receiving from the first user a selection of the selectable item associated with the second user;</claim-text><claim-text>transmitting the media content item to a second client device that is associated with the second user; and</claim-text><claim-text>causing a communication interface of the messaging system for a communication session to be displayed at the second client device.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00012">claim 12</claim-ref>,<claim-text>wherein the first user and the second user are users of the messaging system, and wherein the communication session is between a plurality of client devices including the first client device and the second client device.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the operations further comprise:<claim-text>causing the media content item to be displayed in the communication interface at the second client device.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the context of the first client device is based on information including user information, activity information on the application, selection information on the application, game scoring information on the application, ranking information on the application, a list of users associated with the first user on the application, or a list of users associated with the first user on the messaging system.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:<claim-text>causing an application icon to be displayed by a display screen, the icon being associated with the application;</claim-text><claim-text>receiving a selection of the application icon, wherein the processor causes the display screen of the first client device to display the application interface in response to the selection of the application icon.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the first portion of the display screen in the inactivated position is greater in size than the second portion of the display screen in the inactivated position.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the first portion of the display screen is a top portion of the display screen and the second portion of the display screen is a bottom portion of the display screen.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein causing the first portion and the second portion of the display screen to be in the activated position further comprises:<claim-text>causing the first portion of the display screen to contract upwards by a predetermined distance, wherein the application interface displayed in the first portion is pushed upwards, and</claim-text><claim-text>causing the second portion of the display screen to expand upwards by the predetermined distance.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:<claim-text>in response to the media content item being transmitted, causing the first portion and the second portion of the display screen to be displayed by the first client device in the inactivated position.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A system comprising:<claim-text>a processor; and</claim-text><claim-text>a memory having instructions stored thereon, when executed by the processor, causes the system to perform operations comprising:</claim-text><claim-text>causing a display screen of a first client device to display a first portion of the display screen and a second portion of the display screen in an inactivated position by<claim-text>causing the first portion to display an application interface associated with an application, and</claim-text><claim-text>causing the second portion to display an action bar that is associated with a messaging system;</claim-text></claim-text><claim-text>in response to receiving a selection of a chat selectable item in the application interface from a first user of the first client device, generating a media content item based on a context of the first client device; and</claim-text><claim-text>causing the first portion and the second portion of the display screen to be displayed in an activated position by</claim-text><claim-text>causing the first portion of the display screen to contract, and</claim-text><claim-text>causing the second portion of the display screen to expand and to comprise a preview of the media content item and a selectable item associated with a second user.</claim-text></claim-text></claim></claims></us-patent-application>