<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004356A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004356</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17781723</doc-number><date>20191219</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>7</main-group><subgroup>58</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>7</main-group><subgroup>582</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0869</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SECURE RANDOM NUMBER GENERATION SYSTEM, SECURE COMPUTATION APPARATUS, SECURE RANDOM NUMBER GENERATION METHOD, AND PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NIPPON TELEGRAPH AND TELEPHONE CORPORATION</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>ICHIKAWA</last-name><first-name>Atsunori</first-name><address><city>Musashino-shi, Tokyo</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>NIPPON TELEGRAPH AND TELEPHONE CORPORATION</orgname><role>03</role><address><city>Tokyo</city><country>JP</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/JP2019/049883</doc-number><date>20191219</date></document-id><us-371c12-date><date>20220602</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A secure random number that follows a binomial distribution is generated without performing successive communication. A secure computation apparatus (<b>1</b><sub>i</sub>) generates a share [r]<sub>i </sub>of a random number r that follows a binomial distribution. A parameter storage unit (<b>10</b>) stores a pseudorandom function PRF, at least one set of a key k<sub>A </sub>and a polynomial f<sub>A</sub>. A pseudorandom number generating unit (<b>11</b>) obtains a pseudorandom number p<sub>A </sub>for each of the keys k<sub>A </sub>by computing the pseudorandom function PRF(k<sub>A</sub>, a) using the keys k<sub>A</sub>. A bit counting unit (<b>12</b>) counts the number r<sub>A </sub>of 1s included in each pseudorandom number p<sub>A</sub>. A random number share generating unit (<b>13</b>) obtains the sum of products of the number r<sub>A </sub>of 1s and an output of the polynomial f<sub>A</sub>(i) corresponding to the number r<sub>A </sub>of 1s as the share [r]<sub>i </sub>of the random number r.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="96.86mm" wi="103.04mm" file="US20230004356A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="117.26mm" wi="120.40mm" file="US20230004356A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="148.67mm" wi="80.86mm" file="US20230004356A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="154.43mm" wi="120.06mm" file="US20230004356A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="97.87mm" wi="137.08mm" file="US20230004356A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates to a secure computation technique and a privacy protection technique.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">Recently, demands for utilizing privacy data represented by private information have been increasing, and a secure computation technique for enabling various calculations while information is kept secret attracts attention. The secure computation is a useful technique that can be applied to various applications (e.g., refer to NPL 1). However, because the accuracy (correctness) of calculation results is ensured in the secure computation, the privacy of calculation results, which is called as &#x201c;output privacy&#x201d;, is not protected. Mixing of a calculation result using random noise, for example, is needed in order to protect the output privacy, and in the secure computation as well, such mixing, that is, generation of random noise is one technical issue.</p><p id="p-0004" num="0003">For such an issue, a method of generating secret random noise following a binomial distribution using the secure computation is disclosed in NPL 2. Noise that follows the binomial distribution is used for satisfying an output privacy protection standard called differential privacy, and therefore the technique disclosed in NPL 2 can be said as a useful technique for achieving the output privacy protection in the secure computation.</p><heading id="h-0003" level="1">CITATION LIST</heading><heading id="h-0004" level="1">Non Patent Literature</heading><p id="p-0005" num="0004">[NPL 1] Naoto Kiribuchi, Dai Ikarashi, Koki Hamada, Ryo Kikuchi, &#x201c;MEVAL3: A Library for Programmable Secure Computation&#x201d;, Symposium on Cryptography and Information Security (SCIS), 2018.</p><p id="p-0006" num="0005">[NPL 2] C. Dwork, K, Kenthapadi, F. McSherry, I. Mironov, M. Naor, &#x201c;Our data, ourselves: privacy via distributed noise generation,&#x201d; Advances in Cryptology, EUROCRYPT, LNCS 4004, pp. 486-503, 2006.</p><heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading><heading id="h-0006" level="1">Technical Problem</heading><p id="p-0007" num="0006">However, there is a problem regarding NPL 2 in that a communication amount according to the noise range is needed when noise is generated. The noise range drastically increases depending on the range of a calculation result to be protected and the protection strength, and therefore, in order to achieve the sufficient protection strength regarding any computation, quite a large communication amount corresponding to the increased noise range is needed. The reduction of this communication amount is a big issue from a viewpoint of speeding up the secure computation.</p><p id="p-0008" num="0007">The present invention has been made in view of the technical issue described above, and an object of the present invention is to generate a secure random number that follows a binomial distribution without performing successive communication.</p><heading id="h-0007" level="1">Means for Solving the Problem</heading><p id="p-0009" num="0008">In order to achieve the above-described object, a secure random number generation system according to one aspect of the invention is a secure random number generation system that includes a plurality of secure computation apparatuses and generates a concealed value of a random number that follows a binomial distribution, wherein the secure computation apparatuses each include: a storage unit configured to store a pseudorandom function and at least one set of a key and a polynomial; a pseudorandom number generating unit configured to obtain a pseudorandom number for each of the keys by computing the pseudorandom function using the keys; a bit counting unit configured to count the number of 1s included in each pseudorandom number; and a random number share generating unit configured to obtain the sum of products of the number of 1s and an output of the polynomial corresponding to the number of 1s as the share of the random number.</p><heading id="h-0008" level="1">Effects of the Invention</heading><p id="p-0010" num="0009">According to the present invention, a secure random number that follows a binomial distribution can be generated without performing successive communication. As a result of performing mixing of a calculation result using this secure random number, the output privacy in the secure computation can be efficiently protected.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0009" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating a functional configuration of a secure random number generation system.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating a functional configuration of a secure computation apparatus.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating a processing procedure of a secure random number generation method.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating a functional configuration of a computer.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0010" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0015" num="0014">In this specification, &#x201c;_&#x201d; (underscore) in a subscript represents that a character on the right side is added to a character on the left side as a subscript. That is, &#x201c;a<sub>b_c</sub>&#x201d; represents that b<sub>c </sub>is added to a as a subscript.</p><p id="p-0016" num="0015">First, the existing technologies on which the present invention is premised will be described.</p><p id="p-0017" num="0016">Shamir's secret sharing method</p><p id="p-0018" num="0017">Shamir's secret sharing method is a method in which a secret value s is broken up into n fragments by a random polynomial f, and the secret value s is restored from any t fragments (refer to Reference Literature 1, for example). Hereinafter, one fragment obtained by breaking up a certain value is called as a &#x201c;share&#x201d;, and a set of all shares is called as a &#x201c;concealed value&#x201d;. The concealed value of a certain value &#x22c5; is represented by [&#x22c5;], and the i<sup>th </sup>share of the concealed value [&#x22c5;] is represented by [&#x22c5;]<sub>i</sub>. Note that n is an integer of 3 or more, and t is an integer that satisfies n&#x2265;2t&#x2212;1.</p><p id="p-0019" num="0018">[Reference Literature 1] A. Shamir, &#x201c;How to share a secret,&#x201d; Communications of the ACM, Vol. 22, No. 11, pp. 612-613, 1979.</p><p id="p-0020" num="0019">In the Shamir's secret sharing method, first, with respect to a secret s on a finite field Z<sub>p </sub>with order p, a t-1<sup>th </sup>order polynomial f(x)=r<sub>t&#x2212;1</sub>x<sup>t&#x2212;1</sup>+ . . . +r<sub>1</sub>x<sup>1</sup>+s on the finite field Z<sub>p </sub>is selected. Note that r<sub>i </sub>is a random value on the finite field Z<sub>p</sub>. Here, each of shares [s]<sub>1</sub>, . . . , [s]<sub>n </sub>of the secret s is obtained as [s]<sub>i</sub>=f(i), for example. When the secret s is restored, the constant term s of the polynomial f(x) is obtained by performing polynomial interpolation using any t or more shares that do not duplicate.</p><heading id="h-0011" level="1">Pseudorandom Secret Sharing</heading><p id="p-0021" num="0020">The pseudorandom secret sharing is a method for generating a share of a uniform random number using a pseudorandom function without performing communication (refer to Reference Literature 2, for example).</p><heading id="h-0012" level="1">Reference Literature 2</heading><p id="p-0022" num="0021">R. Cramer, I. Damgard, and Y. Ishai, &#x201c;Share conversion, pseudorandom secret-sharing and applications to secure computation,&#x201d; Theory of Cryptography, LNCS 3378, pp. 342-362, 2005.</p><p id="p-0023" num="0022">A pseudorandom function PRF: K&#xd7;{0, 1}<sup>&#x3b1;</sup>&#x2192;Z<sub>p </sub>is a function for outputting a random number on an (approximately) uniform finite field Z<sub>p </sub>by receiving a private key and a bit stream of length &#x3b1;. Here, K represents a keyspace. Also, consider a case where shares in the Shamir's secret sharing method are retained by n parties P<sub>1</sub>, . . . , P<sub>n </sub>in a broken up manner. Here, the shares [r]<sub>1</sub>, . . . , [r]<sub>n </sub>of a random number r are retained by n parties in a manner described below.</p><p id="p-0024" num="0023">1. First, the key of the pseudorandom function is shared by some parties, in advance. Specifically, a set A is defined as a set constituted by n&#x2212;t+1 parties selected from the n parties, and the key k<sub>A</sub>&#x2208;K is shared by all of the n&#x2212;t+1 parties included in the set A. Conversely, t&#x2212;1 parties that are not included in the set A do not obtain information regarding the key k<sub>A</sub>. Similarly, with respect to each set A that can be envisioned, all parties included in the envisioned set A shares a different key k<sub>A</sub>. Also, separately, with respect to each of all of the sets A, a t<sup>th </sup>order polynomial f<sub>A </sub>corresponding to the set A is shared. Here, assume that a condition that f<sub>A</sub>(0)=1 and f<sub>A</sub>(i)=0 (if P<sub>i </sub>is not included in set A) is satisfied.</p><p id="p-0025" num="0024">2. When a random number needs to be generated, each party generates a pseudorandom number with a value a such as a time stamp that is used in common. Specifically, when parties P<sub>i </sub>are included in a set A<sub>j </sub>and retain a key set {k<sub>A_j</sub>}, each party P<sub>i </sub>computes [r]<sub>i</sub>&#x2190;&#x3a3;<sub>j</sub>PRF(k<sub>A_j</sub>, a)&#xb7;f<sub>A_j</sub>(i). Here, J is the number of sets A to which the party P<sub>i </sub>belongs, and j indicates an integer from 1 to j.</p><p id="p-0026" num="0025">The share [r]<sub>i </sub>to be obtained by the party P<sub>i </sub>with the processing described above is a share of a pseudorandom number r=&#x3a3;<sub>A</sub>PRF(k<sub>A</sub>, a).</p><heading id="h-0013" level="1">Binomial Distribution</heading><p id="p-0027" num="0026">The number of 1s included in L-bit uniform random number r&#x2208;{0, 1}<sup>L </sup>is known to be a random number that follows a binomial distribution Bin(L, &#xbd;). If a pseudorandom function PRF: K&#xd7;{0, 1}<sup>&#x3b1;</sup>&#x2192;{0, 1}<sup>L </sup>has sufficient uniformity, the number of ls included in the pseudorandom number PRF(k, a) can also be said to similarly follow the binomial distribution Bin(L, &#xbd;).</p><heading id="h-0014" level="1">EMBODIMENT</heading><p id="p-0028" num="0027">Here, an embodiment of the present invention will be described in detail. Note that the same reference numerals are added to constituent units that have the same function, in the drawings, and redundant description will be omitted.</p><p id="p-0029" num="0028">In the secure random number generation system of the embodiment, N (&#x2265;3) secure computation apparatus computes, in a cooperated manner, a concealed value of a random value that follows the binomial distribution. In the present embodiment, it is premised on that a multi-party computation based on the Shamir's secret sharing method is used.</p><p id="p-0030" num="0029">A secure random number generation system <b>100</b> of the embodiment includes n (&#x2265;3) secure computation apparatuses <b>1</b><sub>1</sub>, . . . , <b>1</b><sub>n</sub>, as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. In the present embodiment, the secure computation apparatuses <b>1</b><sub>l</sub>, . . . , <b>1</b><sub>n </sub>are connected to a communication network <b>9</b>. The communication network <b>9</b> is a communication network of a circuit switching system or a packet exchange system that is configured such that connected apparatuses can communicate to each other, and the Internet, LAN (Local Area Network), WAN (Wide Area Network), or the like can be used. Note that the apparatuses need not communicate on-line via the communication network <b>9</b>. For example, the configuration may be such that information to be input to the secure computation apparatuses <b>1</b><sub>l</sub>, . . . , <b>1</b><sub>n </sub>is stored in a portable recording medium such as a magnetic tape or a USB memory, and the information is input off-line from the portable recording medium to the secure computation apparatuses <b>1</b><sub>l</sub>, . . . , <b>1</b><sub>n</sub>, for example.</p><p id="p-0031" num="0030">The secure computation apparatus <b>1</b><sub>i </sub>(i=1, . . . , n) included in the secure random number generation system <b>100</b> of the embodiment includes a parameter storage unit <b>10</b>, a pseudorandom number generating unit <b>11</b>, a bit counting unit <b>12</b>, a random number share generating unit <b>13</b>, and an output unit <b>14</b>, as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, for example. The secure random number generation method of the present embodiment is realized by the secure computation apparatus <b>1</b><sub>i </sub>(i=1, . . . , n) performing the processing in the steps to be described later while cooperating with another secure computation apparatus <b>1</b><sub>j </sub>(j=1, . . . , n, where i&#x2260;j).</p><p id="p-0032" num="0031">The secure computation apparatus <b>1</b><sub>i </sub>is a special apparatus that is configured by a special program being read in a known or dedicated computer including a central processing unit (CPU), a main storage device (RAM: Random Access Memory), and the like, for example. The secure computation apparatus <b>1</b><sub>i </sub>executes the processing under the control of the central processing unit, for example. The data input to the secure computation apparatus <b>1</b><sub>i </sub>and the data obtained by the processing are stored in the main storage device, for example, and the data stored in the main storage device is read out to the central processing unit as necessary and is used for another processing. At least some of the processing units of the secure computation apparatus <b>1</b><sub>i </sub>may be configured by hardware such as an integrated circuit. The storage units included in the secure computation apparatus <b>1</b><sub>i </sub>can be configured by a main storage device such as RAM (Random Access Memory), an auxiliary storage device such as a hard disk, an optical disk, or a semiconductor memory device such as a flash memory, or middleware such as a relational database or key-value store, for example.</p><p id="p-0033" num="0032">In the following, the processing procedure of the secure random number generation method to be executed by the secure random number generation system <b>100</b> of the embodiment will be described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0034" num="0033">The parameter storage unit <b>10</b> stores the pseudorandom function PRF: K&#xd7;{0, 1}<sup>&#x3b1;&#x2192;{</sup>0, 1}<sup>L</sup>, J keys {k<sub>A_1</sub>, . . . , k<sub>A_J</sub>}, and k polynomials {f<sub>A_1 </sub>(x), . . . , f<sub>A_J</sub>(x)}.</p><p id="p-0035" num="0034">In step S<b>11</b>, the pseudorandom number generating unit <b>11</b> computes, for each integer j of 1 or more and J or less, a pseudorandom function PRF(k<sub>A_j</sub>, a) using a key k<sub>A_j </sub>and a parameter a that are stored in the parameter storage unit <b>10</b>. The parameter a is a parameter, such as a time stamp, that can be used in common between all the secure computation apparatuses <b>1</b><sub>l</sub>. . . , <b>1</b><sub>n</sub>. The pseudorandom number generating unit <b>11</b> outputs pseudorandom numbers p<sub>A_j </sub>calculated from keys k<sub>A_j </sub>to the bit counting unit <b>12</b>.</p><p id="p-0036" num="0035">In step S<b>12</b>, the bit counting unit <b>12</b> obtains the number r<sub>A_j </sub>of 1s included in the pseudorandom number p<sub>A_j </sub>for each integer j of 1 or more and J or less. The bit counting unit <b>12</b> output the numbers r<sub>A_j </sub>of 1s obtained from the pseudorandom numbers p<sub>A_j </sub>to the random number share generating unit <b>13</b>.</p><p id="p-0037" num="0036">In step S<b>13</b>, the random number share generating unit <b>13</b> computes a sum of products [r]<sub>i</sub>&#x2190;&#x3a3;<sub>j</sub>r<sub>A_j</sub>&#xb7;f<sub>A_j</sub>(i) of the numbers r<sub>A_j </sub>of 1s and the outputs of polynomial f<sub>A_j </sub>(i). Here, i is the number of the secure computation apparatus. This [r]<sub>i </sub>is a share of the random number r=&#x3a3;<sub>A</sub>r<sub>A</sub>. The random number share generating unit <b>13</b> outputs the share [r]<sub>i </sub>of a random number r to the output unit <b>14</b>.</p><p id="p-0038" num="0037">In step S<b>14</b>, the output unit <b>14</b> outputs the share [r]<sub>i </sub>of the random number r.</p><p id="p-0039" num="0038">The number r<sub>A </sub>of 1s included in an L-bit pseudorandom number p<sub>A</sub>, which is an output of the pseudorandom function PRF(k<sub>A</sub>, a), follows a binomial distribution Bin(L, &#xbd;). Similarly, the number r of 1s included in a total N=(nCn&#x2212;t+1)&#xd7;L-bit random number computed by all the keys k<sub>A </sub>that are shared by the parties follows the binomial distribution Bin(N, &#xbd;). Here, nCn&#x2212;t+1 represents the number of combinations of selecting different n&#x2212;t+1 pieces from different n pieces. This number r of 1s satisfies r=&#x3a3;<sub>A</sub>r<sub>A</sub>. Also, these computations can be locally performed, and therefore communication between parties is not needed. The present invention provides a technique in which, by utilizing this property, each party obtains the share [r]<sub>i </sub>of a random number that follows a binomial distribution Bin(N, &#xbd;) without the parties communicating to each other, and the concealed value [r] of a random number r is generated as an entire system.</p><p id="p-0040" num="0039">In the present invention, the need of successive communication is eliminated when a secure random number is generated, based on the pseudorandom secret sharing method. Here, as a result of changing the pseudorandom secret sharing method for generating a uniform random number such that a random number that follows a binomial distribution can be generated, the communication amount is largely reduced relative to that of a known method. As described above, according to the present invention, a secure random number that follows a binomial distribution and can be used for output privacy protection of a secure computation result and the like can be generated without performing successive communication. In the known method, communication of an amount that is in proportion to a noise range N is needed every time a secure random number is generated.</p><p id="p-0041" num="0040">Although an embodiment of the present invention have been described above, a specific configuration is not limited to the embodiment, and even if a design change or the like is made without departing from the spirit of the present invention, when necessary, such a change is included in the scope of the present invention as a matter of course. The various kinds of processing described in the embodiment are not necessarily executed in chronological order according to the order of descriptions, and may be parallelly or individually executed depending on the processing capabilities of the device that executes the processing or according to the need.</p><heading id="h-0015" level="1">Program and Recording Medium</heading><p id="p-0042" num="0041">When the various processing functions of the devices described in the above embodiment are realized using a computer, the functions that the devices need to have are to be described in the form of a program. Then, this program is read in a storage unit <b>1020</b> of a computer shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and a control unit <b>1010</b>, an input unit <b>1030</b>, an output unit <b>1040</b> are caused to operate, and as a result, the various processing functions of the above devices are realized on the computer.</p><p id="p-0043" num="0042">The program that describes the contents of such processing can be recorded in a computer-readable recording medium. Any kind of computer-readable recording medium may be employed, such as a magnetic recording device, an optical disc, a magneto-optical recording medium, or a semiconductor memory.</p><p id="p-0044" num="0043">The program is distributed by, for example, selling, transferring, or lending a portable recording medium such as a DVD or a CD-ROM on which the program is recorded. Furthermore, it is possible to employ a configuration in which the program is stored in a storage device of a server computer, and the program is distributed by the server computer transferring the program to other computers via a network.</p><p id="p-0045" num="0044">A computer that executes such a program first stores, in a storage device thereof, the program that is recorded on a portable recording medium or that has been transferred from a server computer. Thereafter, when executing processing, the computer reads the program stored in the storage device thereof, and executes processing according to the program thus read. In another mode of execution of the program, the computer may read the program directly from a portable recording medium and execute processing according to the program. In addition, the computer may sequentially execute processing according to the received program every time the computer receives the program transferred from a server computer. Also, it is possible to employ a configuration for executing the above-described processing by using a so-called ASP (Application Service Provider) type service, which does not transfer a program from the server computer to the computer, but realizes processing functions by only making instructions to execute the program and acquiring the results. The program according to the embodiments may be information that is used by an electronic computer to perform processing, and that is similar to a program (e.g. data that is not a direct command to the computer, but has the property of defining computer processing).</p><p id="p-0046" num="0045">Also, although the device is formed by running a predetermined program on a computer in the embodiment, at least part of the content of the above processing may be realized using hardware.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A secure random number generation system comprising a plurality of secure computation apparatuses and generating a concealed value of a random number, the random number following a binomial distribution,<claim-text>the secure computation apparatuses each comprising:</claim-text><claim-text>processing circuitry configured to:</claim-text><claim-text>store a pseudorandom function and at least one set of a key and a polynomial;</claim-text><claim-text>obtain a pseudorandom number for each of the keys by computing the pseudorandom function using the key;</claim-text><claim-text>count the number of 1s included in each pseudorandom number; and</claim-text><claim-text>obtain the sum of products of the number of 1s and an output of the polynomial corresponding to the number of 1s as the share of the random number.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. A secure computation apparatus being to be used in a secure random number generation system, the secure random number generation system generating a concealed value of a random number, the random number following a binomial distribution, the secure computation apparatus comprising:<claim-text>processing circuitry configured to:</claim-text><claim-text>store a pseudorandom function and at least one set of a key and a polynomial;</claim-text><claim-text>obtain a pseudorandom number for each of the keys by computing the pseudorandom function using the key;</claim-text><claim-text>count the number of 1s included in each pseudorandom number; and</claim-text><claim-text>obtain the sum of products of the number of 1s and an output of the polynomial corresponding to the number of 1s as the share of the random number.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. A secure random number generation method to be executed by a secure random number generation system comprising a plurality of secure computation apparatuses, the secure random number generation system generating a concealed value of a random number, the random number following a binomial distribution,<claim-text>wherein a pseudorandom function and at least one set of a key and a polynomial are stored in a storage unit,</claim-text><claim-text>the secure random number generation method comprises:</claim-text><claim-text>obtaining, by processing circuitry of each of the secure computation apparatuses, a pseudorandom number for each of the keys by computing the pseudorandom function using the key;</claim-text><claim-text>counting, by the processing circuitry, the number of 1s included in each pseudorandom number; and</claim-text><claim-text>obtaining, by the processing circuitry, the sum of products of the number of 1s and an output of the polynomial corresponding to the number of 1s as the share of the random number.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. A non-transitory computer recording medium on which a program for causing a computer to operate as the secure computation apparatus according to <claim-ref idref="CLM-00002">claim 2</claim-ref> is recorded.</claim-text></claim></claims></us-patent-application>