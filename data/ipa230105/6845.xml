<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006846A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006846</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940154</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>2020113168896</doc-number><date>20201123</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1061</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0871</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1065</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>0871</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">DATA PROCESSING METHOD AND APPARATUS BASED ON BLOCKCHAIN NETWORK</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2021/123946</doc-number><date>20211015</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17940154</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Tencent Technology (Shenzhen) Company Limited</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Zhu</last-name><first-name>Gengliang</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Tencent Technology (Shenzhen) Company Limited</orgname><role>03</role><address><city>Shenzhen</city><country>CN</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">This disclosure relates to data processing method and apparatus based on a blockchain network. The method may include receiving a data acquisition request transmitted by a target service node. The data acquisition request may carry a data type of data requested by the target service node and a data identifier set. The method may further include determining a target node set from the nodes in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes. The method may further include transmitting feedback information carrying the node information in the target node set to the target service node. The feedback information is for instructing the target service node to acquire the requested data from a node according to the node information in the target node set.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="72.47mm" wi="158.75mm" file="US20230006846A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="159.94mm" wi="156.55mm" file="US20230006846A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="214.88mm" wi="165.35mm" file="US20230006846A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="87.29mm" wi="175.09mm" file="US20230006846A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="186.94mm" wi="158.16mm" file="US20230006846A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="151.05mm" wi="166.03mm" file="US20230006846A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="213.87mm" wi="176.53mm" file="US20230006846A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="77.39mm" wi="119.80mm" file="US20230006846A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is a continuation application of PCT Patent Application No. PCT/CN2021/123946, filed on Oct. 15, 2021, which claims the priority of Chinese patent application No. 202011316889.6, filed with the China Intellectual Property Administration on Nov. 23, 2020 and entitled &#x201c;Data Processing Method based on Blockchain Network and Related Apparatus,&#x201d; wherein the content of each of the above-referenced applications is incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE TECHNOLOGY</heading><p id="p-0003" num="0002">This disclosure relates to the technical field of blockchains, in particular to a data processing method based on a blockchain network, a data processing apparatus based on a blockchain network, a computer device, and a computer-readable storage medium.</p><heading id="h-0003" level="1">BACKGROUND OF THE DISCLOSURE</heading><p id="p-0004" num="0003">The advent of the era of science and technology and the development of the mobile Internet have accelerated the pace of network transformation. The process of realizing information fusion in the same field or multiple fields so as to provide users with comprehensive informatization solutions also faces new challenges such as improvement of a system structure and shifting of a supporting center of gravity. Therefore, as a specific implementation of distributed ledgers, a blockchain technology has gradually become a preferred way for data storage and data transaction in various fields by virtue of its natural advantage of storing and managing data.</p><p id="p-0005" num="0004">A blockchain network is a distributed system formed by a plurality of nodes, and a peer to peer (P2P) network is formed between the nodes.</p><p id="p-0006" num="0005">At present, P2P solutions for blockchain products are usually a single-layer, unified P2P, that is, node peering, which are located in the same network. However, when a blockchain product is used in some application scenarios such as the government or a commercial organization, not all blockchain participating nodes have sufficient resources and necessity to become nodes participating in blockchain consensus. For the sake of data security, when data related to personal privacy or national security is involved in a blockchain system, it is not suitable for using a general data peering P2P blockchain deployment method. It can be seen that the single-layer (i.e., node peering) P2P solution is not applicable to the above-mentioned various application scenarios. In addition, for the blockchain network that adopts the node peering P2P solution, a node usually acquires desired data from other nodes randomly.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">Embodiments of this disclosure provide a data processing method and apparatus based on a blockchain network, a computer device, and a computer-readable storage medium.</p><p id="p-0008" num="0007">In one aspect, an embodiment of this disclosure provides a data processing method based on a blockchain network. The blockchain network includes a witness network and a consensus network, the witness network is formed by networking a plurality of service nodes, the consensus network is formed by networking a plurality of consensus nodes, and the witness network and the consensus network are connected through a gateway device. The method may include receiving a data acquisition request transmitted by a target service node. The data acquisition request may carry a data type of data requested by the target service node and a data identifier set. The method may further include determining a target node set from the nodes in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network. The target node set may include one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network. The method may further include transmitting feedback information carrying the node information in the target node set to the target service node. The feedback information is for instructing the target service node to acquire the requested data from a node according to the node information in the target node set.</p><p id="p-0009" num="0008">In one aspect, an embodiment of this disclosure provides a data processing apparatus based on a blockchain network, wherein the blockchain network includes a witness network and a consensus network, the witness network is formed by networking a plurality of service nodes, the consensus network is formed by networking a plurality of consensus nodes, and the witness network and the consensus network are connected through a gateway device. The apparatus may include a memory operable to store computer-readable instructions and a processor circuitry operable to read the computer-readable instructions. When executing the computer-readable instructions, the processor circuitry may be configured to receive a data acquisition request transmitted by a target service node. The data acquisition request may carry a data type of data requested by the target service node and a data identifier set. The processor circuitry may be further configured to determine a target node set from the nodes in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network. The target node set may include one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network. The processor circuitry may be further configured to transmit feedback information carrying the node information in the target node set to the target service node. The feedback information is for instructing the target service node to acquire the requested data from a node according to the node information comprised in the target node set.</p><p id="p-0010" num="0009">In one aspect, an embodiment of this disclosure provides a non-transitory machine-readable media having instructions stored on the machine-readable media. The instructions are configured to implement data processing based on a blockchain network. The blockchain network may include a witness network and a consensus network, the witness network may be formed by networking a plurality of service nodes, the consensus network may be formed by networking a plurality of consensus nodes, the witness network and the consensus network may be connected by a gateway device. When being executed, the instructions may be configured to cause a machine to receive a data acquisition request transmitted by a target service node. The data acquisition request may carry a data type of data requested by the target service node and a data identifier set. The instructions may be further configured to cause the machine to determine a target node set from the nodes comprised in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network. The target node set may include one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network. The instructions may be further configured to cause the machine to transmit feedback information carrying the node information comprised in the target node set to the target service node. The feedback information may be for instructing the target service node to acquire the requested data from a node according to the node information comprised in the target node set.</p><p id="p-0011" num="0010">Correspondingly, an embodiment of this disclosure provides a computer program product or a computer program. The computer program product or the computer program includes computer instructions, and the computer instructions are stored in a computer readable storage medium. A processor of a computer device reads the computer instruction from the computer readable storage medium, and the processor executes the computer instruction, so that the computer device implements the data processing method based on a blockchain network.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011">To describe the technical solutions in the embodiments of this disclosure or the related art more clearly, the following briefly describes the accompanying drawings required for describing the embodiments or the related art. Apparently, the accompanying drawings in the following description show merely some embodiments of this disclosure, and a person of ordinary skill in the art may still derive other drawings from the accompanying drawings without creative efforts.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic architecture diagram of a distributed system according to an embodiment of this disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic structural diagram of a block according to an embodiment of this disclosure.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates the transaction process of Hyperledger Fabric.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a network architecture diagram of a layered blockchain network according to an embodiment of this disclosure.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic flowchart of a data processing method based on a blockchain network according to an embodiment of this disclosure.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a sub-flowchart of the data processing method shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a network architecture diagram of another layered blockchain network according to an embodiment of this disclosure.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic structural diagram of a data processing apparatus based on a blockchain network according to an embodiment of this disclosure.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic structural diagram of a computer device according to an embodiment of this disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0022" num="0021">The technical solutions in the embodiments of this disclosure are clearly and completely described in the following with reference to the accompanying drawings in the embodiments of this disclosure. Apparently, the described embodiments are merely some rather than all of the embodiments of this disclosure. All other embodiments obtained by a person of ordinary skill in the art based on the embodiments of this disclosure without making creative efforts shall fall within the protection scope of this disclosure.</p><p id="p-0023" num="0022">In order to better understand the embodiments of this disclosure, some terms and a blockchain technology involved in the embodiments of this disclosure are first introduced below.</p><p id="p-0024" num="0023">Certificate: It refers to a public key infrastructure (PKI). In the certificate system, a certificate is an identity certificate of a public key owner and is issued by a certificate authority (CA). Asymmetric encryption and digital signatures for information can be achieved based on the PKI.</p><p id="p-0025" num="0024">PKI: It refers to a public key infrastructure (PKI), mainly including public and private key passwords, an X509 certificate, a CA, and the like.</p><p id="p-0026" num="0025">P2P network: It refers to a peer-to-peer network in which there is no need for a central node to maintain the network state between network nodes based on a specific type of network protocol, but each node maintains states of nodes in the whole network or the connected state with an adjacent node by broadcasting interaction with the adjacent node.</p><p id="p-0027" num="0026">A blockchain network is a distributed system that can be formed by connecting a plurality of nodes (computing devices in any form, which are connected to a network, such as servers and user terminals) by network communication. Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an optional schematic architecture diagram of a distributed system <b>100</b> according to an embodiment of this disclosure applied to a blockchain network is illustrated. A blockchain network is formed by a plurality of nodes. A peer-to-peer (P2P) network is formed between the nodes. The P2P protocol is an application-layer protocol running over the Transmission Control Protocol (TCP). In the blockchain network, any machine such as a server or a terminal may be added to the distributed system to become a node. The nodes include a hardware layer, an intermediate layer, an operating system layer, and an application layer.</p><p id="p-0028" num="0027">Referring to functions of each node in the blockchain network shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the related functions include the following:</p><p id="p-0029" num="0028">(1) Routing: which is a basic function of a node, and is used for supporting communication between nodes.</p><p id="p-0030" num="0029">In addition to the routing function, the node may further have the following functions:</p><p id="p-0031" num="0030">(2) Blockchain: which includes a series of blocks that are consecutive in a chronological order of generation. Once a new block is added to the blockchain, the new block is no longer removed. The block records recorded data such as transaction data submitted by the node in the blockchain network.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> is an optional schematic diagram of a block structure according to an embodiment of this disclosure. Each block includes a hash value of a data record stored in the current block (a hash value of the current block) and a hash value of a previous block. Blocks are connected according to hash values to form a blockchain. In addition, the block may further include information such as a timestamp indicating a block generation time. A blockchain is essentially a decentralized database, and is a string of associated data blocks generated by using a cryptology method. Each data block includes related information used for verifying the validity (anti-counterfeiting) of information of the data block and generating a next block.</p><p id="p-0033" num="0032">(3) Application: which is deployed in a blockchain, and is used for implementing a particular service according to an actual service requirement, recording data related to function implementation to form recorded data, adding a digital signature to the recorded data to indicate a source of task data, and transmitting the recorded data to another node in the blockchain network, so that the another node adds the recorded data to a temporary block when successfully verifying a source and integrity of the recorded data.</p><p id="p-0034" num="0033">For example, services implemented by the application include:</p><p id="p-0035" num="0034">3.1) Wallet: used for providing a transaction function with virtual resources, including transaction initiation (that is, a transaction record of a current transaction is transmitted to another node in the blockchain network, and the another node stores, after successfully verifying the transaction record, recorded data of the transaction to a temporary block in a blockchain in response to admitting that the transaction is valid). Certainly, the wallet further supports querying for remaining electronic money in an electronic money address.</p><p id="p-0036" num="0035">(3.2) Shared ledger: used for providing functions of operations such as storage, query, and modification of account data. Recorded data of the operations on the account data is transmitted to another node in the blockchain network. The another node stores, after verifying that the account data is valid, the recorded data to a temporary block in response to admitting that the account data is valid, and may further transmit an acknowledgement to a node initiating the operations.</p><p id="p-0037" num="0036">3.3) A smart contract is a computerized protocol, may be used for executing conditions of a contract, and is implemented by using code that is deployed in the shared ledger and that is executed when a condition is satisfied. The code is used for completing, according to an actual service requirement, an automated transaction, for example, searching for a delivery status of goods purchased by a purchaser, and transferring virtual resources of the purchaser to an address of a merchant after the purchaser signs for the goods. Certainly, the smart contract is not limited only to a contract used for executing a transaction, and may be further a contract used for processing received information.</p><p id="p-0038" num="0037">4) Consensus is used for solving and ensuring the consistency and correctness of each transaction or data on all accounting nodes. A consensus mechanism of blockchain is to determine a way of reaching a certain consensus and maintaining the consensus. The consensus mechanism of blockchain still makes it possible to complete operation efficiently and collaboratively on a large scale even without relying on a centralized organization.</p><p id="p-0039" num="0038">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, nodes in a blockchain network include consensus nodes <b>102</b> (i.e., accounting nodes that run a blockchain consensus protocol) and other types of nodes <b>104</b>. A consensus node is a node in a blockchain network that has a block production function and a consensus function, and can be a full node that stores a complete blockchain in the blockchain network. The consensus nodes <b>102</b> in the blockchain network can be divided into master nodes and slave nodes. The so-called master node refers to a consensus node that is in charge of producing blocks (i.e., generating blocks) at a current stage, and the so-called slave node refers to a consensus node in the blockchain network other than the master nodes. The current stage can refer to a current block height. The consensus nodes and other types of nodes can be computer devices such as terminals or servers. The server may be an independent physical server, may also be a server cluster or distributed system composed of a plurality of physical servers, and may also be a cloud server providing basic cloud computing services, such as a cloud service, a cloud database, cloud computing, a cloud function, cloud storage, a network service, cloud communication, a middleware service, a domain name service, a security service, a CDN, and a large data and AI platform. The terminal may be a smartphone (such as an Android smartphone, an iOS smartphone, or the like), a tablet computer, a notebook computer, a desktop computer, a smart speaker, a smart watch, or the like, but is not limited thereto. Each node may be directly or indirectly connected in a wired or wireless communication manner. This is not limited in this disclosure.</p><p id="p-0040" num="0039">At present, P2P solutions for blockchain products are all a single-layer, unified P2P, that is, node peering, which are located in the same network (as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). P2P solutions in several application scenarios are introduced below.</p><p id="p-0041" num="0040">1. P2P solution in a blockchain technology for public chains such as Bitcoin and Ethereum:</p><p id="p-0042" num="0041">Nodes in a Bitcoin network have four main functions: wallet, mining, blockchain database, and network routing. Each node has a routing function, but does not have all other functions. Generally, only a Bitcoin core node has all the four functions. A node with all the functions is also referred to as a full node. Most of other nodes are simplified payment verification (SPV) nodes except that a Bitcoin core wallet is a full node. Users can check their account balances, manage wallet addresses and private keys, and initiate transactions through these SPV wallets. Another type of node is a mining node. If the node stores all data of a block, it is also a full node, generally an independent miner.</p><p id="p-0043" num="0042">There is a type of mining node that does not achieve mining independently, but this type of mining node will be connected with other nodes to form a mining pool for collective mining, which is referred to as a collective miner. A mining pool network will also be formed. It is a centralized network taking a mining pool server as a central node, and other miners are connected to the central node. Communication between the miners and the mining server is achieved by its own mining pool protocol, instead of a Bitcoin protocol. A mainstream mining pool protocol is a Stratum protocol. In addition, after a miner creates a new block, the miner also needs to broadcast the block to all nodes in the whole network. A reward to the miner is valid only after the whole network accepts the block, and then Hash calculation of a next block will be started. Therefore, the miner needs to minimize the time for broadcasting a new block and calculating the next block. Therefore, a special broadcast network is required to speed up the dissemination of blocks. This broadcast network is also referred to as a Bitcoin relay network.</p><p id="p-0044" num="0043">In the Bitcoin network, one node can transmit a peer list that it maintains to neighboring nodes. Therefore, after an initial node finds the peer list, a node list is required to be copied from the neighboring nodes. Like Bitcoin, Ethereum also has four main functions: wallet, mining, blockchain database, and block routing. There are also different types of nodes. The biggest difference from the Bitcoin's P2P network structure is that Ethereum's P2P is structured. The Ethereum network is implemented by a Kademlia (Kad) algorithm. This algorithm can be used to quickly and accurately route and locate data problems.</p><p id="p-0045" num="0044">A routing table of Kad is constructed from data referred to as K-buckets that record information, such as Nodeld, distance, endpoint, and ip, of nodes. The K-buckets are sorted according to distances from a target node. There are 256 K-buckets in total, and each K-bucket contains 16 nodes. The communication between the nodes in the Kad network is based on the User Datagram Protocol (UDP), which is mainly composed of the following several commands. Corresponding nodes are considered to be online if PING-PONG handshake between two nodes succeeds. ping command: detecting a node to determine whether it is online. PONG: response to ping. FIND_NODE: querying the nodes for a node that is close to the ID of a target node. NEIGHBORS: in response to FIND_NODE command, transmitting the nodes, close to the ID of the target node, in the K-bucket.</p><p id="p-0046" num="0045">Description of the process of finding out neighbor nodes:</p><p id="p-0047" num="0046">A system is started for the first time to randomly generate NodeId of a local node, which is denoted as LocalId. LocalId remains constant once it is generated. The local node is denoted as local-eth. The system reads public node information, and writes the public node information into a K-bucket after the PING-PONG handshake is completed. The system refreshes the K-bucket every 7,200 ms.</p><p id="p-0048" num="0047">The process of refreshing the K-bucket is as follows:</p><p id="p-0049" num="0048">a. Randomly generate Id of a target node, which is denoted as TargetId, and record the number of findings and refresh time from 1.b. Calculate a distance between TargetId and LocalId, which is denoted as Dlt.c. Denote NodeId of each node in the K-bucket as KadId, and calculate a distance between KadId and TargetId, which is denoted as Dkt.d. Find out a node, whose Dlt is greater than Dkt, in the K-bucket, denote the node as a K-bucket node, and transmit a FIND_NODE command to the K-bucket node. The FIND_NODE command contains the TargetId.e. Perform steps b to d after the K-bucket node receives the FIND_NODE command, and transmit the node found in the K-bucket back to the local node using a NEIGHBORS command.f. Write the received node into the K-bucket after the local node receives the NEIGHBORS command.g. Perform step b when the number of searches does not exceed a preset number of times (such as 8) and the refresh time does not exceed a preset duration (such as 600 ms).</p><p id="p-0050" num="0049">2. P2P Solution for Consortium Chains Such as Fabric and Terdermint:</p><p id="p-0051" num="0050">Fabric's P2P network is a data encapsulation network based on a Gossip protocol. The gossip process is initiated by a seed node. When one seed node has a state that is required to be updated to other nodes in the network, several surrounding nodes will be randomly selected to spread a message. Nodes that receive the message will also repeat this process, until finally all the nodes in the network have received the message. This process may take certain time. All the nodes cannot be ensured to receive the message at certain time, but in theory, all the nodes will eventually receive the message, so the Gossip protocol is a final consistency protocol.</p><p id="p-0052" num="0051">Types of Gossip Protocols:</p><p id="p-0053" num="0052">Dissemination protocol/rumor-mongering protocol: This protocol works through a flooding agent in the network. After a node receives broadcast data, the node directly forwards the data to all neighbor nodes. This way can improve the robustness of the network, but a broadcast storm is easily caused.</p><p id="p-0054" num="0053">Anti-entropy protocol: This protocol is used for repairing replicated data and is operated by comparing a difference between replication and coordination. Data synchronization in Hyperledger Fabric is implemented in this way.</p><p id="p-0055" num="0054">Protocol for calculating aggregates: This protocol samples information of the nodes in the network and combines these values to obtain a system-wide value, thus calculating a network-wide set; a comprehensive information flow mode will then be established.</p><p id="p-0056" num="0055">Two data transmission ways of a Gossip data distribution protocol:</p><p id="p-0057" num="0056">(1) Push-Based:</p><p id="p-0058" num="0057">A certain node in the network randomly selects N nodes as data receiving objects, and the node transmits corresponding information to the selected N nodes. The nodes that have received the information process the received data, and the nodes that have received the data repeat the process from the first step.</p><p id="p-0059" num="0058">(2) Pull-Based:</p><p id="p-0060" num="0059">A certain node periodically randomly selects N nodes to ask if there is the latest information, and a node that has received the request replies to the requesting node with information that it has not received information recently.</p><p id="p-0061" num="0060">In the transaction process of Hyperledger Fabric, a peer node, as a main body participating in the transaction, is mainly responsible for storing complete blockchain data and executing a smart contract. The gossip protocol can be used between the peer nodes to complete block distribution, state synchronization and other issues.</p><p id="p-0062" num="0061">The information of other peer nodes is maintained on each peer node, and information is exchanged randomly by communication with other peer nodes to achieve final consistency. The main process is to perform communication through a bidirectional gossip stream of a gossip client and send a signed gossip message structure. Peer nodes form a P2P network. The client will submit a request to the peer nodes, and after processing the request, the peer nodes will submit a transaction proposal to endorsers for endorsement; and the endorsers finally reach a consensus through an ordering service and broadcast to the peer nodes, as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Gossip is responsible for connecting the ordering service to the peer nodes, which achieves efficient data distribution from a single source node to all the nodes, achieves state synchronization between different nodes in the background, and can process Byzantine problems, dynamic node addition and network partition.</p><p id="p-0063" num="0062">Gossip Flaws:</p><p id="p-0064" num="0063">Message delay: in the Gossip protocol, a node only randomly sends a message to a few nodes, and the message finally reaches the whole network through multiple rounds of dissemination, so the use of the Gossip protocol will cause inevitable message delay, and Gossip is not suitable for scenarios with high requirements for instantaneity.</p><p id="p-0065" num="0064">Message redundancy: the Gossip protocol stipulates that a node will randomly periodically send messages to surrounding nodes, and the nodes that have received the message will also repeat this step, so it is inevitable that the message will be repeatedly transmitted to the same node, resulting in message redundancy; and in addition, the processing load of the nodes that have received the message also increases. Moreover, the message is transmitted periodically. Therefore, the nodes that have received the message will still receive the message, which increases the message redundancy.</p><p id="p-0066" num="0065">The above-mentioned P2P solutions for related blockchain products are all single-layer, unified P2P, that is, node peering, which are located in the same network. However, when a blockchain product is used in some application scenarios such as the government or a commercial organization, not all blockchain participating nodes have sufficient resources and necessity to become nodes participating in blockchain consensus. For the sake of data security, when data related to personal privacy or national security is involved in a blockchain system, it is not suitable for using a general data peering P2P blockchain deployment method. It can be seen that the single-layer (i.e., node peering) P2P solution is not applicable to the above-mentioned various application scenarios. In addition, for a blockchain network that adopts a node peering P2P solution, nodes usually use a P2P routing table polling mechanism to randomly acquire desired data from other nodes, but this process usually takes a long time, which seriously affects the data acquisition efficiency.</p><p id="p-0067" num="0066">In order to solve the above-mentioned problems, an embodiment of this disclosure provides a P2P solution based on allocation management in a layered blockchain network. By dividing blockchain networks into a witness network and a consensus network, each node may be distinguished according to different functions. On the one hand, a layered blockchain network can be achieved, and only some nodes in the blockchain network can be used as consensus nodes, which is conducive to improving the consensus efficiency. On the other hand, nodes in different networks can store different data to achieve a blockchain deployment method with data asymmetry, which can improve the security and confidentiality of data. In addition, when a service node acquires data, access nodes can be properly recommended for the service node based on recorded data storage information of each node, so that the service node can purposefully acquire requested data from the recommended access nodes, thus effectively improving the data acquisition efficiency. Based on the above-mentioned beneficial effects, the P2P solution based on allocation management in a layered blockchain network according to this embodiment of this disclosure can be applied to various application scenarios where the single-layer P2P solution is not applicable.</p><p id="p-0068" num="0067">The P2P solution based on the allocation management in the layered blockchain network <b>400</b> according to this embodiment of this disclosure is described in detail below. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a schematic architecture diagram of a blockchain network applicable to this solution is illustrated. The blockchain network <b>400</b> is a layered blockchain network divided into a witness network <b>402</b> and a consensus network <b>404</b>. The witness network <b>402</b> is composed of a plurality of service nodes <b>410</b>, and the consensus network <b>404</b> is composed of a plurality of consensus nodes <b>412</b>. The witness network <b>402</b> and the consensus network <b>404</b> are connected by a gateway device <b>406</b>, and the gateway device <b>406</b> can also be configured with an allocation management module <b>408</b>. The service nodes <b>410</b> in the witness network are SPV nodes, and the consensus nodes <b>412</b> in the consensus network are full nodes.</p><p id="p-0069" num="0068">The term module (and other similar terms such as unit, submodule, etc.) may refer to a software module, a hardware module, or a combination thereof. A software module (e.g., computer program) may be developed using a computer programming language. A hardware module may be implemented using processing circuitry and/or memory. Each module can be implemented using one or more processors (or processors and memory). Likewise, a processor (or processors and memory) can be used to implement one or more modules. Moreover, each module can be part of an overall module that includes the functionalities of the module. A module is configured to perform functions and achieve goals such as those described in this disclosure, and may work together with other related modules, programs, and components to achieve those functions and goals.</p><p id="p-0070" num="0069">The service nodes <b>410</b> in the witness network <b>402</b> can store at least part of acquired data to their cache, and the at least part of data can be simultaneously stored to both the caches and internal memories of the service nodes in the witness network. Or, the at least part of data can be stored to the caches preferentially, and is then stored to the internal memories when a certain condition is satisfied (for example, a storage space is not enough at caching time and needs to be cleared). The consensus nodes <b>412</b> in the consensus network <b>404</b> store complete blockchain data (such as public data in the blockchain network and personal data related to all the service nodes) in their internal memories, can cache, according to an indication of a data cache policy, personal data related to some service nodes in the witness network to their caches, and can further update data in their caches using a Least Recently Used (LRU) algorithm. The layered blockchain network implements an asymmetric data deployment method. The data stored by the service nodes in the witness network includes public data, acquired by the service nodes, in the blockchain network, and the data stored by the consensus nodes in the consensus network includes public data in the blockchain network and personal data related to all the service nodes. Such an asymmetric data deployment method can improve the security and confidentiality of the data.</p><p id="p-0071" num="0070">The gateway device <b>406</b> records the data storage information of at least some nodes (including the service nodes in the witness network and the consensus nodes in the consensus network) in the blockchain network <b>400</b>. The data storage information includes data internal memory information and/or data cache information. The data internal memory information is used for indicating a data storage situation in the internal memories of the nodes, and the data cache information is used for indicating a data cache situation in the caches of the nodes. When making a response to a data acquisition request of a service node, the gateway device can properly recommend access nodes for the service node based on the recorded data storage information of all the nodes, so that the service node purposefully acquire the requested data from the recommended access nodes, thus effectively improving the data acquisition efficiency.</p><p id="p-0072" num="0071">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a schematic flowchart of a data processing method <b>500</b> based on a blockchain network according to an embodiment of this disclosure is illustrated. The data processing method based on a blockchain network described in this embodiment of this disclosure is implemented by the gateway device shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. All or some steps implemented by the gateway device can be specifically implemented by an allocation management module configured in the gateway device. The method includes:</p><p id="p-0073" num="0072">S<b>501</b>. A target service node transmits a data acquisition request to the gateway device, wherein the target service node is any service node in the witness network, and the data acquisition request carries a data type of data requested by the target service node and a data identifier set.</p><p id="p-0074" num="0073">In this embodiment of this disclosure, the data type includes the first data type and the second data type. The first data type is a public data type. The public data is public data or data that can be accessed by any node, such as block head data. The second data type is a personal data type. Personal data is private data of a certain node, which is unpublished data or data that can only be accessed with a corresponding access permission, including transaction data in a block body and the like. The data identifier set includes one or more data identifiers, and the data identifiers are used for distinguishing data, including one or more of a height of a block to which the data belongs (if the transaction data is stored in a block with block height <b>100</b>, &#x201c;block height <b>100</b>&#x201d; is used as a data identifier of the transaction data), an identifier of an owner of the data (such as transaction data generated by service node M, &#x201c;service node M&#x201d; is used as a data identifier of the transaction data), generation time or uploading time of the data, and the like.</p><p id="p-0075" num="0074">S<b>502</b>. The gateway device receives the data acquisition request transmitted by the target service node.</p><p id="p-0076" num="0075">S<b>503</b>. In response to the data acquisition request, the gateway device determines a target node set from the nodes included in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network.</p><p id="p-0077" num="0076">In this embodiment of this disclosure, the service nodes in the witness network can store at least part of acquired data to their caches, and the at least part of data can be simultaneously stored to both the caches and internal memories of the service nodes in the witness network. Or, the at least part of data can be stored to the caches preferentially, and is then stored to the internal memories when a certain condition is satisfied. The consensus nodes in the consensus network store complete blockchain data in their internal memories, and can cache, according to an indication of a data cache policy, personal data related to some service nodes in the witness network to their caches. The gateway device records the data storage information of at least some nodes in the blockchain network. The data storage information includes data internal memory information and/or data cache information. The data internal memory information is used for indicating a data storage situation in the internal memories of the nodes, and the data cache information is used for indicating a data cache situation in the caches of the nodes.</p><p id="p-0078" num="0077">The target node set determined by the gateway device from the nodes included in the blockchain network according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network includes: one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network. The node information includes an identifier of a node (such as a serial number of the node and a network address of the node). In a feasible implementation, the node information may also include data storage information of the node (including data cache information and/or data internal memory information), the frequency of recommendation as a node for acquiring some data, and the like. The nodes corresponding to the node information included in the target node set are one or more nodes recommended by the gateway device, from which all the data requested by the target service node can be acquired. The one or more nodes may all be service nodes in the witness network, may all be consensus nodes in the consensus network, or may be a combination of service nodes and consensus nodes.</p><p id="p-0079" num="0078">In this embodiment of this disclosure, step S<b>503</b> specifically includes the following steps as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>:</p><p id="p-0080" num="0079">S<b>5031</b>. The gateway device acquires the data type, carried in the data acquisition request, of the data requested by the target service node.</p><p id="p-0081" num="0080">S<b>5032</b>. When the data type is the first data type, the target node set is determined from the plurality of service nodes included in the witness network according to the data identifier set and the recorded data cache information of the service nodes in the witness network, the target node set including the node information determined from the service nodes in the witness network.</p><p id="p-0082" num="0081">Specifically, when the data type of the data requested by the target service node is the first data type, it indicates that the target service node requests public data. At this time, the gateway device determines at least one recommended node (which are all service nodes) from the plurality of service nodes included in the witness network according to the data identifier set and the recorded data cache information of the service nodes in the witness network. All the data requested by the target service node are cached in the cache of the at least one recommended node, which means: all the data requested by the target service node are cached in the cache of each recommended node; or, only part of the data requested by the target service node is cached in the cache of each recommended node, but the partial data requested by the target service node and cached by each recommended node can be combined to obtain all the data requested by the target service node; or, all the data requested by the target service node are cached in the caches of some recommended nodes, and only part of the data requested by the target service nodes are cached in the caches of some other recommended nodes.</p><p id="p-0083" num="0082">Further, the gateway device acquires the node information of the at least one recommended node (i.e., a service node), and the node information includes the identifier of the service node (such as the serial number of the service node and the network address of the service node). In a feasible implementation, the node information may also include the data storage information of the service node (including the data cache information and/or the data internal memory information), the frequency of recommendation as a node for acquiring some data, and the like. Finally, the target node set is generated according to the node information of the at least one recommended node.</p><p id="p-0084" num="0083">For example, the witness network includes service nodes <b>1</b>, <b>2</b>, and <b>3</b>. The cache of service node <b>1</b> caches block header data of block heights <b>1</b>-<b>1700</b>; the cache of service node <b>2</b> caches block header data of block heights <b>500</b>-<b>1500</b>; and the cache of service node <b>3</b> caches block header data of block heights <b>3000</b>-<b>4500</b>. Assuming that the target service node requests to acquire block header data of block heights <b>1</b>-<b>200</b>, the gateway device may determine service node <b>1</b> as a recommended node, and generate the target node set according to the node information of service node <b>1</b>. Assuming that the target service node requests to acquire block header data of block heights <b>500</b>-<b>1000</b>, the gateway device may determine service nodes <b>1</b> and <b>2</b> as recommended nodes, and generate the target node set according to the node information of service nodes <b>1</b> and <b>2</b>.</p><p id="p-0085" num="0084">In one embodiment, if the gateway device determines, according to the data identifier set and the recorded data cache information of the service nodes in the witness network, that the caches of the plurality of service nodes included in the witness network do not cache all the data requested by the target service node, at least one recommended node can be determined from the plurality of service nodes included in the witness network according to the data identifier set and the recorded data internal memory information of the service nodes in the witness network, and all the data requested by the target service node are stored in the internal memory of the at least one recommended node. Various situations here are similar to those described above, and descriptions thereof are omitted.</p><p id="p-0086" num="0085">For example, the witness network includes service nodes <b>1</b>, <b>2</b>, and <b>3</b>, the cache of service node <b>1</b> caches the block header data of block heights <b>1</b>-<b>1700</b>, and the internal memory stores the block header data of block heights <b>1</b>-<b>2000</b>; the cache of service node <b>2</b> caches the block header data of block heights <b>500</b>-<b>1500</b>, and the internal memory stores the block header data of block heights <b>1600</b>-<b>2500</b>; and the cache of service node <b>3</b> caches the block header data of block heights <b>3000</b>-<b>4500</b>, and the internal memory stores the block header data of block heights <b>3500</b>-<b>6000</b>. Assuming that the target service node requests to acquire block header data of block heights <b>1600</b>-<b>2000</b>, it can be found that the cache of service node <b>1</b> caches the block header data of block heights <b>1600</b>-<b>1700</b>, but does not cache the block header data of block heights <b>1701</b>-<b>2000</b>, and the caches of service nodes <b>2</b> and <b>3</b> do not cache the block header data of block heights <b>1600</b>-<b>2000</b>; and the internal memories of service nodes <b>1</b> and <b>2</b> store the block header data of block heights <b>1600</b>-<b>2000</b>, service node <b>1</b> and/or service node <b>2</b> can be determined as recommended nodes, and the target node set is generated according to the node information of service node <b>1</b> and/or service node <b>2</b>.</p><p id="p-0087" num="0086">In one implementation, after the gateway device determines service node <b>1</b> and/or service node <b>2</b> as the recommended nodes, and generates the target node set according to the node information of service node <b>1</b> and/or service node <b>2</b>, the block header data of block heights <b>1600</b>-<b>2000</b> is stored in the caches of service node <b>1</b> and/or service node <b>2</b>, and the recorded data cache information of service node <b>1</b> and/or service node <b>2</b> is correspondingly updated. In this way, on the one hand, when a service node in the witness network requests to acquire the block header data of block heights <b>1600</b>-<b>2000</b> at the later stage, the gateway device can directly determine service node <b>1</b> and/or service node <b>2</b> as the recommended nodes based on the cache information of service node <b>1</b> and/or service node <b>2</b>, so that the determination efficiency of the recommended nodes and the target node set is improved; and on the other hand, when the service node in the witness network acquires the block header data of block heights <b>1600</b>-<b>2000</b> from service node <b>1</b> and/or service node <b>2</b>, service node <b>1</b> and/or service node <b>2</b> can directly extract the block header data of block heights <b>1600</b>-<b>2000</b> from the caches. Compared with extraction of data from the internal memories, direct extraction from the caches is faster, which is favorable for saving network and computer resources.</p><p id="p-0088" num="0087">In another embodiment, if the gateway device determines, according to the data identifier set and the recorded data cache information of the service nodes in the witness network, that the caches of the plurality of service nodes included in the witness network do not cache all the data requested by the target service node, at least one first recommended node and at least one second recommended node can be determined from the plurality of service nodes included in the witness network according to the data identifier set and the recorded data cache information and data internal memory information of the service nodes in the witness network. The data requested by the target service node and cached in the cache of the at least one first recommended node and the data requested by the target service node and stored in the internal memory of the at least one second recommended node can be combined to obtain all the data requested by the target service node. Further, the target node set is generated according to the node information of the at least one first recommended node and the at least one second recommended node.</p><p id="p-0089" num="0088">For example, the witness network includes service nodes <b>1</b>, <b>2</b>, and <b>3</b>, the cache of service node <b>1</b> caches the block header data of block heights <b>1</b>-<b>1700</b>, and the internal memory stores the block header data of block heights <b>2001</b>-<b>3000</b>; the cache of service node <b>2</b> caches the block header data of block heights <b>500</b>-<b>1500</b>, and the internal memory stores the block header data of block heights <b>1700</b>-<b>2500</b>; and the cache of service node <b>3</b> caches the block header data of block heights <b>3000</b>-<b>4500</b>, and the internal memory stores the block header data of block heights <b>3500</b>-<b>6000</b>. Assuming that the target service node requests to acquire block header data of block heights <b>1600</b>-<b>2000</b>, it can be found that the cache of service node <b>1</b> caches the block header data of block heights <b>1600</b>-<b>1700</b>, but does not cache the block header data of block heights <b>1701</b>-<b>2000</b>, and the caches of service nodes <b>2</b> and <b>3</b> do not cache the block header data of block heights <b>1600</b>-<b>2000</b>; and the internal memory of service node <b>2</b> stores the block header data of block heights <b>1701</b>-<b>2000</b>, service node <b>1</b> and service node <b>2</b> can be determined as recommended nodes, and the target node set is generated according to the node information of service node <b>1</b> and service node <b>2</b>.</p><p id="p-0090" num="0089">In this embodiment of this disclosure, when the data requested by the target service node is public data, the gateway device will preferentially allocate other service nodes, which store this part of data, in the witness network to a data requester (that is, the target service node), so that the target service node acquires this part of data directly from other service nodes in the witness network, instead of the consensus network. In this way, the data acquisition speed can be increased, and the load on the consensus network can be relieved.</p><p id="p-0091" num="0090">In a feasible embodiment, if the gateway device determines, according to the data identifier set and the recorded data storage information of the service nodes in the witness network, that the caches and internal memories of the plurality of service nodes included in the witness network do not store all the data requested by the target service node, a first recommended node set and a second recommended node set can be determined from the plurality of service nodes included in the witness network, and a third recommended node set can be determined from the plurality of consensus nodes included in the consensus network according to the data identifier set, the recorded data storage information of the service nodes in the witness network, and the recorded data storage information of the consensus nodes in the consensus network. The data requested by the target service node and cached in the caches of the first recommended nodes in the first recommended node set, the data requested by the target service node and stored in the internal memories of the second recommended nodes in the second recommended node set, and the data requested by the target service node and stored in the internal memory and/or cache of at least one third recommended node in the third recommended node set can be combined to obtain all the data requested by the target service node. Further, the target node set is generated according to the node information of the first recommended nodes in the first recommended node set, the second recommended nodes in the second recommended node set, and the at least one third recommended node in the third recommended node set. In addition to including the identifiers of the nodes, the node information can also include the data storage information of the nodes. The first recommended node set and/or the second recommended node set may be empty sets.</p><p id="p-0092" num="0091">In a feasible embodiment, when the gateway device determines the target node set from the plurality of service nodes included in the witness network according to the data identifier set and the recorded data storage information of the service nodes in the witness network, the target node set can be further determined in combination with recorded network performance parameters of the service nodes in the witness network, and/or the frequency of recommendation as a node for acquiring some data. The network performance parameters include one or more of a rate, a bandwidth, a delay (including a transmission delay, a dissemination delay, a processing delay, and a queuing delay), a bandwidth delay product, a utilization rate (including a channel utilization rate and a network utilization rate), a throughput, and a load condition.</p><p id="p-0093" num="0092">For example, the witness network includes service nodes <b>1</b> and <b>2</b>, the cache of service node <b>1</b> caches the block header data of block heights <b>1</b>-<b>1700</b>, and the cache of service node <b>2</b> caches the block header data of block heights <b>500</b>-<b>1500</b>. Assuming that the target service node requests to acquire the block header data of block heights <b>1000</b>-<b>1500</b>, it can be found that the caches of service nodes <b>1</b> and <b>2</b> both cache the block header data of block heights <b>1000</b>-<b>1500</b>; and If it is determined, based on the network performance parameters of service nodes <b>1</b> and <b>2</b>, that the network performances of service node <b>1</b> are better than those of service node <b>2</b>, service node <b>1</b> can be determined as a recommended node, and the target node set is generated according to the node information of service node <b>1</b>.</p><p id="p-0094" num="0093">S<b>5033</b>. When the data type is the second data type, the target node set is determined from the plurality of consensus nodes included in the consensus network according to the data identifier set and the data cache information of the consensus nodes in the consensus network, the target node set including the node information determined from the consensus nodes in the consensus network.</p><p id="p-0095" num="0094">Specifically, when the data type of the data requested by the target service node is the second data type, it indicates that the target service node requests personal data. The gateway device determines at least one recommended node (which are all consensus nodes) from the plurality of consensus nodes included in the consensus network according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network. All the data requested by the target service node are cached in the cache of the at least one recommended node. Various situations here are similar to those described above, and descriptions thereof are omitted.</p><p id="p-0096" num="0095">Further, the node information of the at least one recommended node (i.e., a consensus node) is acquired, and the node information includes the identifier of the consensus node (such as the serial number of the consensus node and the network address of the consensus node). In a feasible implementation, the node information may also include the data cache information of the consensus node. Finally, the target node set is generated according to the node information of the at least one recommended node.</p><p id="p-0097" num="0096">For example, the consensus network includes consensus nodes <b>1</b>, <b>2</b>, and <b>3</b>, the cache of consensus node <b>1</b> caches transaction data generated by service node <b>1</b> within a first time period; the cache of consensus node <b>2</b> caches transaction data generated by service node <b>2</b> within the first time period; and the cache of consensus node <b>3</b> caches transaction data generated by service nodes <b>1</b> and <b>2</b> within a second time period. Assuming that the target service node is service node <b>1</b>, and requests to acquire the transaction data (personal data of service node <b>1</b>) generated within the first time period, the gateway device can determine consensus node <b>1</b> as a recommended node, and generate the target node set according to the node information of consensus node <b>1</b>.</p><p id="p-0098" num="0097">If the gateway device determines, according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network, that the caches of the plurality of consensus nodes included in the consensus network do not cache all the personal data requested by the target service node, since the internal memories of the consensus nodes in the consensus network all store complete blockchain data, at least one consensus node can be randomly added into a recommended node set, and the target service node acquires all the requested data from the at least one consensus node or acquires the requested data that is not cached in the cache of the consensus node. In a feasible implementation, the gateway device may also add at least one consensus node into the recommended node set in combination with recorded network performance parameters of the consensus nodes in the consensus network. For example, a consensus node with the best network performances is also used as a recommended node, and the target service node can acquire all the requested data from the consensus node with the best network performances or acquire the requested data that is not cached in the cache of the consensus node.</p><p id="p-0099" num="0098">In one embodiment, when the target service node requests to acquire personal data, identity authentication information of the target service node can be carried in the data acquisition request and transmitted to the gateway device. The identity authentication information may include one or more of a node identifier, a public key password, a public key certificate and the like. When the gateway device detects that the target service node requests to acquire the personal data, the gateway device can first perform identity authentication on the target service node according to the identity authentication information of the target service node carried in the data acquisition request, including one or more of verifying whether the target service node is a service node in the witness network according to the node identifier, verifying the accuracy of the public key password, verifying the accuracy of the public key certificate, and the like. When an identity authentication result indicates that the identity authentication of the target service node succeeds, whether the target service node has a permission to acquire the requested personal data is further determined according to the data identifier set and recorded data authorization information on the target service node; and if the target service node has the permission, the target node set is determined from the plurality of consensus nodes included in the consensus network according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network. Otherwise, if the target service node does not have the permission, the data acquisition request of the target service node is rejected. In this way, the security of data acquired from the consensus network can be improved to a certain extent.</p><p id="p-0100" num="0099">All the steps in S<b>103</b> may be specifically implemented by the allocation management module configured in the gateway device.</p><p id="p-0101" num="0100">In one embodiment, after receiving the data acquisition request transmitted by the target service node, the gateway device first detects whether the allocation management module configured in the gateway device runs normally; and if the allocation management module runs normally, the gateway device triggers the allocation management module to implement S<b>103</b>:determine the target node set from the nodes included in the blockchain network according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network; and if the allocation management module runs abnormally, the gateway device makes, according to a P2P routing table pooling policy, a response to the data acquisition request transmitted by the target service node, so that the target service node randomly acquires the requested data from other nodes.</p><p id="p-0102" num="0101">S<b>504</b>. The gateway device transmits feedback information carrying the node information included in the target node set to the target service node.</p><p id="p-0103" num="0102">In this embodiment of this disclosure, the feedback information is used for instructing the target service node to acquire the requested data from the corresponding nodes according to the node information included in the target node set.</p><p id="p-0104" num="0103">In one embodiment, when the target node set includes the node information of a plurality of nodes, the feedback information may also carry a data acquisition policy, and the data acquisition policy is used for instructing the target service node to acquire which part of data from which node. The data acquisition policy may be determined by the gateway device according to the data storage information and network performance parameters of the nodes in the blockchain network.</p><p id="p-0105" num="0104">S<b>505</b>. The target service node receives the feedback information transmitted by the gateway device.</p><p id="p-0106" num="0105">S<b>506</b>. The target service node acquires the requested data from the corresponding nodes according to the node information included in the target node set and carried in the feedback information.</p><p id="p-0107" num="0106">In this embodiment of this disclosure, the target service node determines, according to the node information included in the target node set, access nodes (one or more) from at least one recommended node corresponding to the node information included in the target node set, determines at least part of corresponding data needing to be acquired from the various access nodes, and accesses the various access nodes to acquire the at least part of corresponding data, so as to obtain all the data requested by the target service node. The target service node may further determine the access nodes and the at least part of corresponding data needing to be acquired from the various access nodes by combining the node information included in the target node set and one or more of network performance parameters, geographical location parameters, and the frequency of recommendation as a node for acquiring some data of the various recommended nodes corresponding to the node information included in the target node set.</p><p id="p-0108" num="0107">In one embodiment, if the target node set includes the node information of a plurality of nodes, and the feedback information also carries a data acquisition policy, the target service node can determine the corresponding nodes as access nodes according to an indication of the data acquisition policy, and acquire the corresponding part of data from the corresponding access nodes according to an indication of the data acquisition policy.</p><p id="p-0109" num="0108">In the above-mentioned manner, when the node information included in the target node set corresponds to a plurality of nodes, if the plurality of nodes only include part of the data requested by the target service node, a plurality of access nodes are determined, which ensures that all the requested data are acquired; if the plurality of nodes all include all the data requested by the target service node, a plurality of access nodes are determined, and part of data is acquired from the various access nodes, which can reduce a load on each access node based on ensuring that all the requested data are acquired, so as to equalize a network load, increase the success rate of data transmission, and improve the data acquisition speed.</p><p id="p-0110" num="0109">In a feasible embodiment, if the node information included in the target node set further includes the data storage information of each recommended node, before the requested data is acquired from the corresponding nodes according to the node information included in the target node set, whether each recommended node stores the data requested by the target service node is first determined according to the data storage information of each recommended node; if YES, the requested data is acquired from the corresponding nodes according to the node information included in the target node set; otherwise, if NO, it indicates that the data in the data acquisition request is likely to be maliciously tampered with. At this time, an encrypted data acquisition request (if the request is encrypted using a private key of the service node, the gateway device decrypts the request using a corresponding stored public key) can be re-transmitted to the gateway device, so as to acquire new recommended nodes. In this ways, there is no need to acquire data from wrong nodes, and time and network resources can be saved.</p><p id="p-0111" num="0110">The data acquisition process involved in the data processing method based on a blockchain network according to this embodiment of this disclosure has been described in detail above. Other data processing processes involved in the data processing method based on a blockchain network are described below.</p><p id="p-0112" num="0111">1. Data Caching of Consensus Nodes:</p><p id="p-0113" num="0112">The consensus nodes can cache data in their caches based on a data cache policy. Specifically, the gateway device determines the data cache policy on the consensus nodes in the consensus network. The data cache policy is used for instructing the consensus nodes in the consensus network to cache at least some data related to some service nodes in the witness network. The data cache policy may be determined based on the number, the network performance parameters, and the frequency of recommendation as a node for acquiring some data of the consensus nodes in the consensus network. The gateway device generates a data cache request according to the data cache policy, and transmits the data cache request to the consensus nodes in the consensus network. After receiving the data cache request, the consensus nodes in the consensus network cache, in response to the data cache request, at least part of the data related to some service nodes in the witness network according to an indication of the data cache policy, so that the service nodes in the witness network access the personal data from the consensus nodes.</p><p id="p-0114" num="0113">In the process of updating their own caches, the consensus nodes can update the data in their own caches using an LRU mode, or can update the data in their own caches according to an indication of a new data cache policy determined by the gateway device.</p><p id="p-0115" num="0114">The steps, involved in the above process, of determining a data cache policy and generating a data cache request according to the data cache policy may be specifically implemented by the allocation management module configured in the gateway device.</p><p id="p-0116" num="0115">2. Data Synchronization of Service Nodes:</p><p id="p-0117" num="0116">The data synchronization of the service node includes: synchronizing own data storage information to the gateway device, and synchronizing own network performance parameters to the gateway device, and the like. Specifically, a service node in the witness network determines a stored data update information, and the stored data update information may include: one or more of related information of the data currently stored in the internal memory, related information of the data currently cached in the cache, data adjustment information in the internal memory, and data adjustment information in the cache. The data adjustment information includes related information of added data and related information of cleared data. The related information may be the data itself, or characteristic information such as the identifier of the data.</p><p id="p-0118" num="0117">A service node in the witness network transmits a data synchronization request carrying the stored data update information to the gateway device, and the gateway device updates, in response to the data synchronization request, the recorded data storage information of the service node based on the stored data update information.</p><p id="p-0119" num="0118">In one embodiment, a service node in the witness network may carry its current network performance parameters to the data synchronization request and transmit the same to the gateway device, and the gateway device can update the recorded network performance parameters of the corresponding service node based on the network performance parameters carried in the data synchronization request. The gateway device may also acquire the current network performance parameters of the service node in the witness network at a preset time interval, and update the recorded network performance parameters of the corresponding service node based on the acquired current network performance parameters.</p><p id="p-0120" num="0119">The updated data storage information and network performance parameters of each service node are used as an important reference for the gateway device to recommend, in response to the data acquisition request of the service node, data access nodes for the service node at the later stage. All the steps, implemented by the gateway device, in the above process may be specifically implemented by the allocation management module configured in the gateway device.</p><p id="p-0121" num="0120">3. Data Uploading of Service Nodes:</p><p id="p-0122" num="0121">After generating transaction data, a service node in the witness network generates a data upload request carrying the transaction data and sends the data upload request to the gateway device. The gateway device transmits, in response to the data upload request, the transaction data to a current master node in the consensus network. The master node generates a block according to the transaction data and broadcasts the block to the consensus nodes in the consensus network, so that the consensus nodes in the consensus network reach a consensus on the transaction data in the block, and upload the block after the consensus succeeds.</p><p id="p-0123" num="0122">In a feasible embodiment, the gateway device can generate, in response to the data upload request, a block according to the transaction data, and broadcasts the block to the various consensus nodes in the consensus network, so that the consensus nodes in the consensus network reach a consensus on the transaction data in the block, and upload the block after the consensus succeeds. In this way, the gateway device can be used as a block production node in the process of uploading the transaction data, without selecting a block production node (i.e., a master node) from the consensus nodes in the consensus network, so that the data processing volume of the consensus nodes can be reduced, and the problem of a consensus mistake or failure caused by a failure of selection of the block production node, a mistake and other reasons can also be avoided.</p><p id="p-0124" num="0123">In a specific implementation of the data processing method based on a blockchain network according to this embodiment of this disclosure, when interacting with each other for various data, the nodes and the gateway device can both encrypt data for interaction and transmit the data to the other parties. In this way, the security of data interaction can be improved. The encryption can be performed using the own private key or the public key of the other party, and the other party can decrypt the encrypted data using the corresponding public key or private key.</p><p id="p-0125" num="0124">Based on the foregoing introduction, a main implementation of the P2P solution based on allocation management in the layered blockchain network according to this embodiment of this disclosure is as follows:</p><p id="p-0126" num="0125">A blockchain is divided into a witness network and a consensus network, the witness network is formed by networking a plurality of service nodes, and the consensus network is formed by networking a plurality of consensus nodes. The service nodes in the witness network mainly perform business execution, without participating in accounting consensus, and can acquire the block header data and some block data authorized to be read from the consensus network by identity authentication. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an overall network architecture of the layered blockchain network is illustrated. The witness network and the consensus network are connected through the gateway device (that is, the service nodes and the consensus nodes interact through the gateway device), and the gateway device is provided with the allocation management module (or a P2P tracker that is an allocation management tool). The witness network and the consensus network are located in different network environments. The witness network is located in a public network, and the consensus network is located in a private network. Since the consensus network is located in a relatively secure private network, and there is a consensus mechanism for mutual access between the consensus nodes to ensure the security, additional identity management and network control are usually not required. The service nodes are in the public network and may be accessed by other uncertain network terminals. Therefore, the behavior that the service nodes and other possible nodes access the consensus network needs to be strictly controlled.</p><p id="p-0127" num="0126">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a specific network architecture of the layered blockchain network <b>700</b> applied to an electronic invoice business application scenario is illustrated. A service layer <b>710</b> is located in the witness network and will submit a business operation interaction to a core consensus network layer. The service layer <b>710</b>, a routing proxy layer <b>720</b>, and the core consensus network layer <b>730</b> form the entire blockchain service system. The routing proxy layer <b>720</b> plays a role in isolating the service layer <b>710</b> from the core consensus network layer <b>730</b>, and the gateway device in the layered blockchain network can be configured in the routing proxy layer <b>720</b>. The gateway device may be a proxy node shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, or configured in a proxy node shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0128" num="0127">In the above layered blockchain network, the data acquired by a service node in the witness network from other nodes include: public data in the blockchain network (such as the block header data) and personal data of the service node (such as the transaction data of the service node).</p><p id="p-0129" num="0128">When a service node in the witness network acquires the public data, the P2P tracker will preferentially allocate other service nodes having this part of public data to a data requester, so as to relieve the load on the consensus network. The P2P tracker records which part of data that each service node currently has. After the service node obtains a certain part of data, the service node will preferentially put the data to the cache.</p><p id="p-0130" num="0129">In this way, assuming that service node A requests block header data of block heights <b>1</b>-<b>1000</b>, service node A preferentially applies for the block header data from the P2P tracker. If the P2P tracker recommends service node B for service node A, service node A will acquire the desired block header data of block heights <b>1</b>-<b>1000</b> from service node B, and the P2P tracker will mark a cache of service node A that currently has the block header data of block heights <b>1</b>-<b>1000</b>. Assuming that service node C request block header data of block heights of 500-1000 at the later stage, the P2P tracker can recommend service node A and service node B for service node Assuming that there are more service nodes requesting the block header data of block heights <b>500</b>-<b>1000</b> at the later stage, the P2P tracker will uniformly recommend service nodes A, B, and C for the data requesters to ensure balanced network traffic.</p><p id="p-0131" num="0130">Assuming that there is service node X requesting block header data of block heights <b>3000</b>-<b>4000</b>, if all the service nodes do not cache this part of data, the P2P tracker can randomly recommend service node B that stores this part of data in the internal memory, service node X acquires the desired block header data of block heights <b>3000</b>-<b>4000</b> from service node B. Then, both service nodes X and B cache the block header data of block heights <b>3000</b>-<b>4000</b>, so that at the later stage, the frequency of recommending acquisition of the block header data of block heights <b>3000</b>-<b>4000</b> from service node B can be increased, and the frequency of recommending acquisition of the block header data of block heights <b>1</b>-<b>1000</b> from service node B can be decreased.</p><p id="p-0132" num="0131">When a service node in the witness network acquires the personal data, since other service nodes do not store this part of personal data, the P2P tracker will allocate consensus nodes that have cached this part of personal data to the data requester, so that the data requester acquires the desired personal data directly from the caches of the allocated consensus nodes. Compared with acquisition of the data from an internal memory, acquisition from a cache is faster, and the data acquisition efficiency is higher. The consensus nodes in the consensus network will update their own caches using the LRU mode according to the request allocated by the P2P tracker, finally achieving that each consensus node uses less cache to provide data more efficiently. The P2P tracker can dynamically adjust the allocation frequency according to the number of consensus nodes.</p><p id="p-0133" num="0132">A service node in the witness network and/or a consensus node in the consensus network can report its current data status and current network performances to the P2P tracker, so that the P2P tracker updates the recorded data storage information of the node, which is conductive to ensuring the accuracy of access nodes allocated to the data requester. When allocating an access node to a data requester, the P2P tracker can allocate the access node based on the following parameters of each node: a data storage status, the network performance, and a frequency of recommendation as a node for acquiring some data.</p><p id="p-0134" num="0133">In addition, the layered blockchain network can also run without the P2P tracker. When there is no P2P tracker or the P2P tracker fails, the P2P routing table polling mechanism can be used. A data requester randomly requests desired data from other nodes. In this way, although the performance will decrease, the security of the data in the layered blockchain network can be still guaranteed. A plurality of P2P trackers may also be configured. When the default P2P tracker fails, P2P tracker can be switched according to a preset priority order to ensure normal running.</p><p id="p-0135" num="0134">This embodiment of this disclosure provides a P2P solution suitable for a layered blockchain network. Compared with an original P2P autonomous connection mode, this P2P solution adds a P2P tracker into the layered blockchain network, and achieves a data cache and traffic planning method based on a layered blockchain network. The P2P solution based on allocation management in a layered blockchain network according to this embodiment of this disclosure not only achieves an asymmetric data blockchain deployment mode, but also improves the security and confidentiality of data. Furthermore, when a service node acquires data, access nodes can be properly recommended for the service node based on the recorded data storage information of each node, so that the service node can purposefully acquire requested data from the recommended access nodes, thus effectively improving the data acquisition efficiency. Based on the above-mentioned beneficial effects, the P2P solution based on allocation management in a layered blockchain network according to this embodiment of this disclosure can be applied to various application scenarios where the single-layer P2P solution is not applicable.</p><p id="p-0136" num="0135">An implementation main body for implementing each step in the above method embodiments may be constituted by hardware or software, or may be constituted by a combination of software and hardware.</p><p id="p-0137" num="0136">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a schematic structural diagram of a data processing apparatus <b>800</b> based on a blockchain network according to an embodiment of this disclosure is illustrated. The data processing apparatus based on a blockchain network according to this embodiment of this disclosure corresponds to the foregoing gateway device. The blockchain network includes a witness network and a consensus network, the witness network is formed by networking a plurality of service nodes, the consensus network is formed by networking a plurality of consensus nodes, and the witness network and the consensus network are connected through a gateway device. The apparatus includes:</p><p id="p-0138" num="0137">a transceiving unit <b>801</b>, configured to receive a data acquisition request transmitted by a target service node, the data acquisition request carrying a data type of data requested by the target service node and a data identifier set; and</p><p id="p-0139" num="0138">a processing unit <b>802</b>, configured to determine a target node set from nodes included in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network. The target node set includes one or more of node information determined from service nodes in the witness network and node information determined from consensus nodes in the consensus network.</p><p id="p-0140" num="0139">The transceiving unit <b>801</b> is further configured to transmit feedback information carrying the node information included in the target node set to the target service node, the feedback information being used for instructing the target service node to acquire the requested data from the corresponding nodes according to the node information included in the target node set.</p><p id="p-0141" num="0140">In one embodiment, the data storage information includes data cache information, and the processing unit <b>802</b> is further configured to: determine, when the data type is a first data type, a target node set from the plurality of service nodes included in the witness network according to the data identifier set and recorded data cache information of the service nodes in the witness network, the target node set including the node information determined from the service nodes in the witness network.</p><p id="p-0142" num="0141">In one embodiment, the processing unit <b>802</b> is further configured to: determine the target node set from the plurality of service nodes included in the witness network according to the data identifier set and recorded data cache information and network performance parameters of the service nodes in the witness network.</p><p id="p-0143" num="0142">In one embodiment, the processing unit <b>802</b> is further configured to: determine, when the data type is a second data type, the target node set from a plurality of consensus nodes included in the consensus network according to the data identifier set and recorded data cache information of the consensus nodes in the consensus network, the target node set including the node information determined from the consensus nodes of the consensus network.</p><p id="p-0144" num="0143">In one embodiment, the data acquisition request also carries identity authentication information of the target service node when the data type is the second data type. The apparatus further includes an inspection unit <b>803</b> configured to:</p><p id="p-0145" num="0144">perform identity authentication on the target service node according to the identity authentication information; determine, according to the data identifier set and recorded data authorization information on the target service node when an identity authentication result indicates that the identity authentication of the target service node succeeds, whether the target service node has a permission to acquire the data requested by the target service node; and trigger, when the target service node has the permission, the processing unit <b>802</b> to determine, according to the data identifier set and recorded data cache information of the consensus nodes in the consensus network, the target node set from the plurality of consensus nodes included in the consensus network.</p><p id="p-0146" num="0145">In one embodiment, the processing unit <b>802</b> is also configured to determine a data cache policy on the consensus nodes in the consensus network, and generate a data cache request according to the data cache policy.</p><p id="p-0147" num="0146">The transceiving unit <b>801</b> is also configured to transmit the data cache request to the consensus nodes in the consensus network to enable the consensus nodes in the consensus network to cache data related to some service nodes in the witness network according to an indication of the data cache policy.</p><p id="p-0148" num="0147">In one embodiment, the apparatus further includes a detection unit <b>804</b> configured to:</p><p id="p-0149" num="0148">detect whether an allocation management module runs normally; trigger, when the allocation management module runs normally, the allocation management module to determine, according to the data type, the data identifier set and the recorded data storage information of the nodes in the blockchain network, the target node set from the nodes included in the blockchain network; and</p><p id="p-0150" num="0149">trigger, when the allocation management module runs abnormally, the processing unit <b>802</b> to make, according to a P2P routing table polling policy, a response to the data acquisition request transmitted by the target service node.</p><p id="p-0151" num="0150">In one embodiment, the transceiving unit <b>801</b> is also configured to receive a data synchronization request transmitted by the target service node, the data synchronization request carrying stored data update information of the target service node.</p><p id="p-0152" num="0151">The processing unit <b>802</b> is also configured to update the recorded data storage information of the target service node based on the stored data update information.</p><p id="p-0153" num="0152">In one embodiment, the processing unit <b>802</b> is also configured to: update, when the data synchronization request carries network performance parameters of the target service node, recorded network performance parameters of the target service node based on the network performance parameters carried in the data synchronization request; and/or, acquire current network performance parameters of the target service node every preset time interval, and update, based on the acquired current network performance parameters, the recorded network performance parameters of the target service node.</p><p id="p-0154" num="0153">It can be understood that functions of all functional units of the data processing apparatus according to this embodiment of this disclosure may be specifically implemented according to the methods in the foregoing method embodiments. For specific implementation processes, reference may be made to related descriptions for the foregoing method embodiments.</p><p id="p-0155" num="0154">In a feasible implementation, the data processing apparatus based on a blockchain network according to this embodiment of this disclosure can be implemented in the form of software. The data processing apparatus based on a blockchain network may be stored in a memory, which may be software such as a program and a plugin and includes a series of units: a transceiving unit, a processing unit, an inspection unit, and a detection unit. The transceiving unit, the processing unit, the inspection unit, and the detection unit are configured to implement the data processing method based on a blockchain network according to this embodiment of this disclosure.</p><p id="p-0156" num="0155">In other feasible embodiments, the data processing apparatus based on a blockchain network according to this embodiment of this disclosure may also be implemented in the form of combining software and hardware. For example, the data processing apparatus based on a blockchain network according to this embodiment of this disclosure may be a processor in a form of a hardware decoding processor, programmed to perform the data processing method based on a blockchain network according to this embodiment of this disclosure. For example, the processor in the form of a hardware decoding processor may use one or more application-specific integrated circuits (ASICs), a DSP, a programmable logic device (PLD), a complex programmable logic device (CPLD), a field-programmable gate array (FPGA), or other electronic components.</p><p id="p-0157" num="0156">In this embodiment of this disclosure, by dividing the blockchain network into a witness network and a consensus network, each node may be distinguished according to different functions. On the one hand, a layered blockchain network can be achieved, and only some nodes in the blockchain network can be used as consensus nodes, which is conducive to improving the consensus efficiency. On the other hand, nodes in different networks can store different data to achieve a blockchain deployment method with data asymmetry, which can improve the security and confidentiality of data. In addition, when a service node acquires data, access nodes can be properly recommended (or allocated) for the service node based on recorded data storage information of each node, so that the service node can purposefully acquire requested data from the recommended access nodes, thus effectively improving the data acquisition efficiency. Based on all the above-mentioned aspects, this embodiment of this disclosure achieves a P2P solution based on allocation management in a layered blockchain network, which can be applied to various application scenarios where the single-layer P2P solution is not applicable.</p><p id="p-0158" num="0157">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a schematic structural diagram of a computer device <b>900</b> according to an embodiment of this disclosure is illustrated. The computer device <b>900</b> described in this embodiment of this disclosure correspond to the aforementioned gateway device, including: a processor <b>901</b>, a communications interface <b>902</b>, a memory <b>903</b>, and an allocation management module <b>904</b>. The processor <b>901</b>, the communication interface <b>902</b>, the memory <b>903</b>, and the allocation management module <b>904</b> may be connected via bus or in other ways. In this embodiment of this disclosure, bus connection is taken as an example.</p><p id="p-0159" num="0158">The processor <b>901</b> (or referred to as central processing unit (CPU)) is a computing core and control core of the computer device, and may parse various kinds of instructions in the computer device and process all kinds of data of the computer device. For example: the CPU may be configured to parse an on/off instruction transmitted by a user to the computer device and control the computer device to perform a switch on/off operation. In another example: the CPU may transmit all kinds of interaction data and the like between internal structures of the computer device. The communication interface <b>902</b> may include standard wired interface and a standard wireless interface (such as Wi-Fi and mobile communication interfaces), and is controlled by the processor <b>901</b> to be configured to transmit and receive data. The memory <b>903</b> is a storage device in the computer device, and is configured to store a program and data. It is understood that the memory <b>903</b> here may include an internal memory of the computer device, and may also certainly include an expanded memory supported by the computer device. The memory <b>903</b> provides a storage space which stores an operating system of the computer device and may include but not limited to: an Android system, an iOS system, a Windows Phone system and the like. This disclosure does not limit to this. The allocation management module <b>904</b> is configured to implement some particular functions of the computer device.</p><p id="p-0160" num="0159">In this embodiment of this disclosure, the computer device is arranged in a blockchain network; the blockchain network includes a witness network and a consensus network, the witness network is formed by networking a plurality of service nodes, and the consensus network is formed by networking a plurality of consensus nodes; and the witness network and the consensus network are connected through a gateway device. The processor <b>901</b> performs the following operations by running executable program codes in the memory <b>903</b>:</p><p id="p-0161" num="0160">receiving, through the communication interface <b>902</b>, a data acquisition request transmitted by a target service node, the data acquisition request carrying a data type of data requested by the target service node and a data identifier set; determining a target node set from the nodes included in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network, the target node set including one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network; and transmitting, through the communication interface <b>902</b>, feedback information carrying the node information included in the target node set to the target service node, the feedback information being used for instructing the target service node to acquire the requested data from the corresponding nodes according to the node information included in the target node set.</p><p id="p-0162" num="0161">In one embodiment, the data storage information includes data cache information; and when determining the target node set from the nodes included in the blockchain network according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network, the processor <b>901</b> is further configured to:</p><p id="p-0163" num="0162">determine, when the data type is the first data type, the target node set from the plurality of service nodes included in the witness network according to the data identifier set and recorded data cache information of the service nodes in the witness network, the target node set including the node information determined from the service nodes in the witness network; and</p><p id="p-0164" num="0163">determine, when the data type is a second data type, the target node set from a plurality of consensus nodes included in the consensus network according to the data identifier set and recorded data cache information of the consensus nodes in the consensus network, the target node set including the node information determined from the consensus nodes of the consensus network.</p><p id="p-0165" num="0164">In one embodiment, when determining the target node set from the plurality of service nodes included in the witness network according to the data identifier set and the recorded data cache information of the service nodes in the witness network, the processor <b>901</b> is further configured to: determine a target node set from the plurality of service nodes included in the witness network according to the data identifier set and recorded data cache information and network performance parameters of the service nodes in the witness network.</p><p id="p-0166" num="0165">In one embodiment, the data acquisition request also carries identity authentication information of the target service node when the data type is the second data type. Before determining the target node set from the plurality of consensus nodes included in the consensus network according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network, the processor <b>901</b> is also configured to:</p><p id="p-0167" num="0166">perform identity authentication on the target service node according to the identity authentication information; determine, according to the data identifier set and recorded data authorization information on the target service node when an identity authentication result indicates that the identity authentication of the target service node succeeds, whether the target service node has a permission to acquire the data requested by the target service node; and determine, when the target service node has the permission, the target node set from the plurality of consensus nodes included in the consensus network according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network.</p><p id="p-0168" num="0167">In one embodiment, the processor <b>901</b> is also configured to: determine a data cache policy on the consensus nodes in the consensus network, and generate a data cache request according to the data cache policy; and transmit, through the communication interface <b>902</b>, the data cache request to the consensus nodes in the consensus network to enable the consensus nodes in the consensus network to cache, according to an indication of the data cache policy, data related to some service nodes in the witness network.</p><p id="p-0169" num="0168">In one embodiment, before determining the target node set from the nodes included in the blockchain network according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network, the processor <b>901</b> is also configured to:</p><p id="p-0170" num="0169">detect whether the allocation management module <b>904</b> runs normally; trigger, when the allocation management module <b>904</b> runs normally, the allocation management module <b>904</b> to determine, according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network, the target node set from the nodes included in the blockchain network; and make, according to a P2P routing table polling policy when the allocation management module runs abnormally, a response to the data acquisition request transmitted by the target service node.</p><p id="p-0171" num="0170">In one embodiment, the processor <b>901</b> is also configured to: receive, through the communication interface <b>902</b>, a data synchronization request transmitted by the target service node, the data synchronization request carrying stored data update information of the target service node; and update recorded data storage information of the target service node based on the stored data update information.</p><p id="p-0172" num="0171">In one embodiment, the processor <b>901</b> is also configured to: update, when the data synchronization request carries network performance parameters of the target service node, recorded network performance parameters of the target service node based on the network performance parameter carried by the data synchronization request; and/or, acquire current network performance parameters of the target service node every preset time interval, and update, based on the acquired current network performance parameters, the recorded network performance parameters of the target service node.</p><p id="p-0173" num="0172">In a specific implementation, the processor <b>901</b>, the communication interface <b>902</b>, the memory <b>903</b>, and the allocation management module <b>904</b> described in this embodiment of this disclosure can implement the gateway device described in the data processing method based on a blockchain network according to this embodiment of this disclosure, and can also implement the data processing apparatus based on a blockchain network according to this embodiment of this disclosure. Descriptions thereof are omitted here.</p><p id="p-0174" num="0173">In this embodiment of this disclosure, by dividing the blockchain network into a witness network and a consensus network, each node may be distinguished according to different functions. On the one hand, a layered blockchain network can be achieved, and only some nodes in the blockchain network can be used as consensus nodes, which is conducive to improving the consensus efficiency. On the other hand, nodes in different networks can store different data to achieve a blockchain deployment method with data asymmetry, which can improve the security and confidentiality of data. In addition, when a service node acquires data, access nodes can be properly recommended for the service node based on recorded data storage information of each node, so that the service node can purposefully acquire requested data from the recommended access nodes, thus effectively improving the data acquisition efficiency. Based on all the above-mentioned aspects, this embodiment of this disclosure achieves a P2P solution based on allocation management in a layered blockchain network, which can be applied to various application scenarios where the single-layer P2P solution is not applicable.</p><p id="p-0175" num="0174">An embodiment of this disclosure further provides a computer-readable storage medium, storing instructions, the instructions, when run on a computer, causing the computer to implement the data processing method based on a blockchain network according to this embodiment of this disclosure. For a specific implementation, reference may be made to the foregoing descriptions in other embodiments.</p><p id="p-0176" num="0175">An embodiment of this disclosure provides a computer program product or a computer program. The computer program product or the computer program includes computer instructions, and the computer instructions are stored in a computer readable storage medium. A processor of a computer device reads the computer instruction from the computer readable storage medium, and the processor executes the computer instruction, so that the computer device implements the data processing method based on a blockchain network according to this embodiment of this disclosure. For a specific implementation, reference may be made to the foregoing descriptions in other embodiments.</p><p id="p-0177" num="0176">For ease of description in the foregoing method embodiments, each method is described as a combination of a series of operations. However, a person skilled in the art understands that this disclosure is not limited to the order of the described operations because some steps according to this disclosure may occur in other order or occur in parallel. In addition, a person skilled in the art is also to learn that the embodiments described in this specification are all exemplary embodiments, and the involved actions and modules are not necessarily required to this disclosure.</p><p id="p-0178" num="0177">A person of ordinary skill in the art may understand that all or some of the steps of the various methods in the foregoing embodiments may be implemented by a program instructing relevant hardware. The program may be stored in a computer-readable storage medium. The storage medium may include: a flash drive, a Read-Only Memory (ROM), a Random Access Memory (RAM), a magnetic disk, an optical disc, and the like.</p><p id="p-0179" num="0178">The foregoing disclosure is merely some embodiments of this disclosure, and certainly is not intended to limit the protection scope of this disclosure. Therefore, equivalent variations made in accordance with the claims of this disclosure shall fall within the scope of this disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A data processing method based on a blockchain network, the blockchain network comprising a witness network and a consensus network, the witness network being formed by networking a plurality of service nodes, the consensus network being formed by networking a plurality of consensus nodes, the witness network and the consensus network being connected by a gateway device, the method comprising:<claim-text>receiving a data acquisition request transmitted by a target service node, the data acquisition request carrying a data type of data requested by the target service node and a data identifier set;</claim-text><claim-text>determining a target node set from the nodes comprised in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network, the target node set comprising one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network; and</claim-text><claim-text>transmitting feedback information carrying the node information comprised in the target node set to the target service node, the feedback information being for instructing the target service node to acquire the requested data from a node according to the node information comprised in the target node set.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data storage information comprises data cache information, and the determining the target node set from the nodes comprised in the blockchain network comprises:<claim-text>in response to the data type being a first data type, determining the target node set from the plurality of service nodes comprised in the witness network according to the data identifier set and recorded data cache information of the service nodes in the witness network, the target node set comprising the node information determined from the service nodes in the witness network.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the determining the target node set from the plurality of service nodes comprised in the witness network comprises:<claim-text>determining the target node set from the plurality of service nodes comprised in the witness network according to the data identifier set, the recorded data cache information and network performance parameters of the service nodes in the witness network.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data storage information comprises data cache information, and the determining the target node set from the nodes comprised in the blockchain network comprises:<claim-text>in response to the data type being a second data type, determining the target node set from a plurality of consensus nodes comprised in the consensus network according to the data identifier set and recorded data cache information of the consensus nodes in the consensus network, the target node set comprising the node information determined from the consensus nodes of the consensus network.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the data acquisition request further carries identity authentication information of the target service node, and before the determining the target node set from the plurality of consensus nodes comprised in the consensus network, the method further comprises:<claim-text>performing identity authentication on the target service node according to the identity authentication information;</claim-text><claim-text>in response to an identity authentication result indicating that the identity authentication of the target service node succeeds, determining, according to the data identifier set and recorded data authorization information on the target service node, whether the target service node has a permission to acquire the data requested by the target service node; and</claim-text><claim-text>in response to the target service node having the permission, determining the target node set from the plurality of consensus nodes comprised in the consensus network according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises:<claim-text>determining a data cache policy on the consensus nodes in the consensus network, and generating a data cache request according to the data cache policy; and</claim-text><claim-text>transmitting the data cache request to the consensus nodes in the consensus network to enable the consensus nodes in the consensus network to cache data related to some service nodes in the witness network according to an indication of the data cache policy.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein before the determining the target node set from the nodes comprised in the blockchain network, the method further comprises:<claim-text>detecting whether an allocation management tool in the gateway device runs normally;</claim-text><claim-text>in response to the allocation management tool running normally, triggering the allocation management tool to determine the target node set from the nodes comprised in the blockchain network according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the method further comprises:<claim-text>in response to the allocation management tool running abnormally, making, according to a peer-to-peer routing table polling policy, a response to the data acquisition request transmitted by the target service node.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises:<claim-text>receiving a data synchronization request transmitted by the target service node, the data synchronization request carrying stored data update information of the target service node; and</claim-text><claim-text>updating recorded data storage information of the target service node based on the stored data update information.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the method further comprises:<claim-text>in response to the data synchronization request carrying network performance parameters of the target service node, updating recorded network performance parameters of the target service node based on the network performance parameters carried in the data synchronization request.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the method further comprises:<claim-text>acquiring current network performance parameters of the target service node at preset time intervals; and</claim-text><claim-text>updating, based on the acquired current network performance parameters, the recorded network performance parameters of the target service node.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A data processing apparatus based on a blockchain network, the blockchain network comprising a witness network and a consensus network, the witness network being formed by networking a plurality of service nodes, the consensus network being formed by networking a plurality of consensus nodes, the witness network and the consensus network being connected by a gateway device, the apparatus comprising:<claim-text>a memory operable to store computer-readable instructions; and</claim-text><claim-text>a processor circuitry operable to read the computer-readable instructions, the processor circuitry when executing the computer-readable instructions is configured to:<claim-text>receive a data acquisition request transmitted by a target service node, the data acquisition request carrying a data type of data requested by the target service node and a data identifier set;</claim-text><claim-text>determine a target node set from the nodes comprised in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network, the target node set comprising one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network; and</claim-text><claim-text>transmit feedback information carrying the node information comprised in the target node set to the target service node, the feedback information being for instructing the target service node to acquire the requested data from a node according to the node information comprised in the target node set.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the data storage information comprises data cache information, and the processor circuitry is configured to:<claim-text>in response to the data type being a first data type, determine the target node set from the plurality of service nodes comprised in the witness network according to the data identifier set and recorded data cache information of the service nodes in the witness network, the target node set comprising the node information determined from the service nodes in the witness network.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the processor circuitry is configured to:<claim-text>determine the target node set from the plurality of service nodes comprised in the witness network according to the data identifier set, the recorded data cache information and network performance parameters of the service nodes in the witness network.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the data storage information comprises data cache information, and the processor circuitry is configured to:<claim-text>in response to the data type being a second data type, determine the target node set from a plurality of consensus nodes comprised in the consensus network according to the data identifier set and recorded data cache information of the consensus nodes in the consensus network, the target node set comprising the node information determined from the consensus nodes of the consensus network.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the data acquisition request further carries identity authentication information of the target service node, and the processor circuitry is further configured to:<claim-text>perform identity authentication on the target service node according to the identity authentication information;</claim-text><claim-text>in response to an identity authentication result indicating that the identity authentication of the target service node succeeds, determine, according to the data identifier set and recorded data authorization information on the target service node, whether the target service node has a permission to acquire the data requested by the target service node; and</claim-text><claim-text>in response to the target service node having the permission, determine the target node set from the plurality of consensus nodes comprised in the consensus network according to the data identifier set and the recorded data cache information of the consensus nodes in the consensus network.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor circuitry is further configured to:<claim-text>determine a data cache policy on the consensus nodes in the consensus network, and generate a data cache request according to the data cache policy; and</claim-text><claim-text>transmit the data cache request to the consensus nodes in the consensus network to enable the consensus nodes in the consensus network to cache data related to some service nodes in the witness network according to an indication of the data cache policy.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor circuitry is further configured to:<claim-text>detect whether an allocation management tool in the gateway device runs normally;</claim-text><claim-text>in response to the allocation management tool running normally, trigger the allocation management tool to determine the target node set from the nodes comprised in the blockchain network according to the data type, the data identifier set, and the recorded data storage information of the nodes in the blockchain network; and</claim-text><claim-text>in response to the allocation management tool running abnormally, make, according to a peer-to-peer routing table polling policy, a response to the data acquisition request transmitted by the target service node.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor circuitry is further configured to:<claim-text>receive a data synchronization request transmitted by the target service node, the data synchronization request carrying stored data update information of the target service node; and</claim-text><claim-text>update recorded data storage information of the target service node based on the stored data update information.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory machine-readable media, having instructions stored on the machine-readable media, the instructions configured to process data in a blockchain network, the blockchain network comprising a witness network and a consensus network, the witness network being formed by networking a plurality of service nodes, the consensus network being formed by networking a plurality of consensus nodes, the witness network and the consensus network being connected by a gateway device, the instructions configured to, when executed, cause a machine to:<claim-text>receive a data acquisition request transmitted by a target service node, the data acquisition request carrying a data type of data requested by the target service node and a data identifier set;</claim-text><claim-text>determine a target node set from the nodes comprised in the blockchain network according to the data type, the data identifier set, and recorded data storage information of the nodes in the blockchain network, the target node set comprising one or more of node information determined from the service nodes in the witness network and node information determined from the consensus nodes in the consensus network; and</claim-text><claim-text>transmit feedback information carrying the node information comprised in the target node set to the target service node, the feedback information being for instructing the target service node to acquire the requested data from a node according to the node information comprised in the target node set.</claim-text></claim-text></claim></claims></us-patent-application>