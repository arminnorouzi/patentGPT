<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004220A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004220</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17845598</doc-number><date>20220621</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>01</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>19</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>02</class><subclass>B</subclass><main-group>27</main-group><subgroup>01</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>013</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>19</main-group><subgroup>003</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>19</main-group><subgroup>006</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>02</class><subclass>B</subclass><main-group>27</main-group><subgroup>017</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DYNAMIC UNIFORMITY COMPENSATION FOR FOVEATED IMAGING IN VIRTUAL REALITY AND AUGMENTED REALITY HEADSETS</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217608</doc-number><date>20210701</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Meta Platforms Technologies, LLC</orgname><address><city>Menlo Park</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wang</last-name><first-name>Shuang</first-name><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Buckley</last-name><first-name>Edward</first-name><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for dynamic uniformity compensation in displays for virtual reality and augmented reality headsets is provided. The method includes identifying an eyeball position within an image frame in a display, forming a filter for the two-dimensional array, centered on the eyeball position within the image frame. The method also includes collecting a calibration frame for the two-dimensional array indicative of a uniformity map for pupil locations, generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame, obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map, and generating eyeball uniformity maps including uniformity correction factors for display pixels. A system and a memory storing instructions to cause the system to perform the above method are also provided.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="103.21mm" wi="158.75mm" file="US20230004220A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="228.77mm" wi="154.77mm" orientation="landscape" file="US20230004220A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="143.68mm" wi="133.43mm" orientation="landscape" file="US20230004220A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="172.47mm" wi="145.88mm" orientation="landscape" file="US20230004220A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="205.91mm" wi="144.78mm" orientation="landscape" file="US20230004220A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="237.66mm" wi="124.46mm" orientation="landscape" file="US20230004220A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="197.70mm" wi="108.03mm" orientation="landscape" file="US20230004220A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="205.32mm" wi="146.90mm" orientation="landscape" file="US20230004220A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="228.52mm" wi="158.16mm" orientation="landscape" file="US20230004220A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="194.06mm" wi="153.59mm" orientation="landscape" file="US20230004220A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present disclosure is related and claims priority under 35 USC. &#xa7; 119(e) to US Prov. Pat. Appin. No. 63/217,608, entitled DYNAMIC UNIFORMITY COMPENSATION FOR FOVEATED IMAGING IN VIRTUAL REALITY AND AUGMENTED REALITY HEADSETS, filed on Jul. 1, 2021, to Shuang WANG et-al., the contents of which applications are hereby incorporated herein by reference in their entirety, for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">Field</heading><p id="p-0003" num="0002">The present disclosure is related to foveated imaging in virtual reality (VR) and augmented reality (AR) headsets. More specifically, the present disclosure is related to methods to perform dynamic uniformity correction for foveated imaging in VR and AR displays.</p><heading id="h-0004" level="1">Related Art</heading><p id="p-0004" num="0003">Current techniques for dynamic uniformity compensation in VR and AR headsets make use of eye-tracking techniques that follow the pupil location of a viewer to adjust for the natural non-uniformity in a virtual reality display, in real time. However, this approach involves heavy computational resources (e.g., memory and processing power) in a short expanse of time. This poses an undue burden in the computational capabilities of the headset device, even when the eye-tracking technique can be sufficiently fast and accurate. Some approaches may simplify the problem by using a mean uniformity value for multiple pupil locations. However, this simplistic approach may not render a foveated image with adequate quality.</p><heading id="h-0005" level="1">SUMMARY</heading><p id="p-0005" num="0004">In a first embodiment, a computer-implemented method includes identifying an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array. The computer-implemented method includes forming a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width, collecting a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame, generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame, obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map, and generating an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</p><p id="p-0006" num="0005">In a second embodiment, a system includes a memory storing instructions and one or more processors configured to execute the instructions to cause the system to perform operations. The operations include to identify an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array, to form a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width, and to collect a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame. The operations also include to generate a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame, to obtain a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map, and to generate an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</p><p id="p-0007" num="0006">In a third embodiment, a non-transitory, computer-readable medium storing instructions which, when executed by a processor in a computer, cause the computer to perform a method. The method includes identifying an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array. The method also includes forming a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width, and collecting a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame. The method also includes generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame, obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map, and generating an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</p><p id="p-0008" num="0007">In yet other embodiments, a system includes a first means to store instructions and a second means to execute the instructions to cause the system to perform a method. The method includes identifying an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array. The method also includes forming a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width, and collecting a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame. The method also includes generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame, obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map, and generating an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an architecture for use of a VR/AR headset, according to some embodiments.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a geometrical relation between a gaze angle, a pupil location, and an eyeball location for a viewer of a VR/AR headset, according to some embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a non-uniformity distribution of pixels in a display for multiple pupil locations and a fixed eyeball location, according to some embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a calibration frame obtained by scanning a pupil location over an image display for a given eyeball position (e.g., gaze center), according to some embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates the construction of an eyeball uniformity map using a filter and a calibration frame for multiple eyeball locations in a display, according to some embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a comparison of different uniformity maps obtained for a fixed pupil location with eyeball uniformity maps for three different pixel colors, according to some embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an eyeball uniformity map including a foveated area, according to some embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow chart illustrating steps in a method for providing dynamic uniformity compensation in a VR/AR headset, according to some embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an exemplary computer system with which a VR/AR headset, and the method of <figref idref="DRAWINGS">FIG. <b>8</b></figref> can be implemented, according to some embodiments.</p><p id="p-0018" num="0017">In the figures, elements having the same or similar reference numerals include the same or similar features, unless explicitly stated otherwise.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION</heading><p id="p-0019" num="0018">In the following detailed description, numerous specific details are set forth to provide a full understanding of the present disclosure. It will be apparent, however, to one ordinarily skilled in the art, that embodiments of the present disclosure may be practiced without some of these specific details. In other instances, well-known structures and techniques have not been shown in detail so as not to obscure the disclosure. Embodiments as disclosed herein should be considered within the scope of features and other embodiments illustrated in Appendix I, filed concurrently herewith.</p><p id="p-0020" num="0019">Embodiments as disclosed herein exploit the concept that for a foveated image, non-uniformity display correction may be performed based on the eyeball location, rather than on the instantaneous pupil location of the viewer. This is possible because the information as to where the gaze center is located may be obtained for each value of the pupil location. Typically, multiple pupil locations may correspond to the same eyeball location (e.g., gaze center), and therefore the frequency of refreshment for the non-uniformity calculation is smaller, and in some cases much smaller than the update frequency of a pupil location. In some embodiments, a weighted mean based on eccentricity is used to incorporate areas of the display that are projected on the viewer fovea. Such a shift in the approach for non-uniformity correction substantially relaxes the constraints on eyeball tracking requirements for virtual reality headsets.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an architecture <b>10</b> for use of a VR/AR headset <b>100</b>, according to some embodiments. A user <b>101</b> may also have a mobile device <b>110</b> paired to VR/AR headset <b>100</b>. Mobile device <b>110</b> and VR/AR headset <b>100</b> may communicate wirelessly with one another and may also be communicatively coupled with a remote server <b>130</b> and a database <b>152</b>, via a network <b>150</b>. Datasets <b>103</b>-<b>1</b>, <b>103</b>-<b>2</b> and <b>103</b>-<b>3</b> (hereinafter, collectively referred to as &#x201c;datasets <b>103</b>&#x201d;) may be transmitted between the different devices involved in network <b>150</b>, as shown. Network <b>150</b> can include, for example, any one or more of a local area network (LAN), a wide area network (WAN), the Internet, and the like. Further, network <b>150</b> can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a geometrical relation between a gaze angle <b>200</b>, a pupil location <b>201</b>, and an eyeball location <b>205</b> for a viewer of a VR/AR headset, according to some embodiments. Equations 1.1 and 1.2 express the coordinates of a pupil location vector (x<sub>p</sub>, y<sub>p</sub>):</p><p id="p-0023" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i><sub>p</sub><i>=d</i>&#xb7;tan(&#x3b8;) &#x2003;&#x2003;(1.1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0024" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>p</sub><i>=d</i>&#xb7;tan(&#x3d5;) &#x2003;&#x2003;(1.2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0025" num="0022">Wherein &#x3b8; and &#x3d5; are the projection of gaze angle <b>200</b> on the XZ and the YZ planes, respectively (wherein the YZ plane cuts into the plane of the figure). While the figure illustrates a specific choice of coordinates relative to a viewer's eye, this is for illustrative purposes only, and any other choice of reference frame would be consistent with the present disclosure.</p><p id="p-0026" num="0023"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a non-uniformity distribution of pixels in a display for multiple pupil locations and a fixed eyeball location, according to some embodiments. For a given eyeball location, a viewer sees a display non-uniformity for different pupil locations <b>301</b>-<b>1</b>, <b>301</b>-<b>2</b>, and <b>301</b>-<b>3</b> (hereinafter, collectively referred to as &#x201c;pupil locations <b>301</b>&#x201d;). The display non-uniformity is a variation of light intensity perceived by the eye at a given pupil location <b>301</b> and depends also on whether the light corresponds to a red, green, or blue pixel. Typically, it is desirable that at least a foveated region of each map be sufficiently uniform to guarantee image quality and improve viewer experience. The foveated region of any given image frame is substantially independent of pupil location <b>301</b>, as long as the eyeball location <b>305</b> is fixed. A gaze center <b>303</b> is indicative of eyeball location <b>305</b>. Accordingly, it is found that correction of image non-uniformity for each eyeball location <b>305</b> may be sufficient to provide a high quality foveated image to the viewer.</p><p id="p-0027" num="0024"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a calibration frame obtained by scanning a pupil location over an image display for a given eyeball position (e.g., gaze center <b>403</b>), according to some embodiments. The calibration frame is a 2D map associating a field of view (FOV) angle (e.g., between &#x2212;30&#xb0; to +30&#xb0; horizontally, and &#x2212;20&#xb0; to +20&#xb0; vertically) to each pupil location for a given gaze center <b>403</b> (e.g., the center of the display, at position (<b>0</b>,<b>0</b>)).</p><p id="p-0028" num="0025"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates the construction of an eyeball uniformity map <b>510</b> using a filter (e.g., filters <b>501</b>-<b>1</b> and <b>501</b>-<b>2</b>, hereinafter, collectively referred to as &#x201c;filters <b>501</b>&#x201d;) and a calibration frame (e.g., calibration frames <b>511</b>-<b>1</b> and <b>511</b>-<b>2</b>, hereinafter collectively referred to as &#x201c;calibration frames <b>511</b>&#x201d;) for multiple eyeball locations in a display, according to some embodiments.</p><p id="p-0029" num="0026">Filters <b>501</b> may include a two-dimensional function having a width to represent an eccentricity weight. In some embodiments, the width is determined by a foveated area from the viewer's eye projected on the headset display. In some embodiments, the filter is a 2D Gaussian filter wherein the width is the sigma (e.g., variance) of the distribution. The specific filter used in the filter is not limiting of different embodiments consistent with the present disclosure. Other examples may include a Lorentzian filter, a Voigt profile, a top-hat profile, or even a Sinc profile.</p><p id="p-0030" num="0027">Calibration frames <b>511</b> may be measured for each eyeball location of a given viewer. Gaze centers <b>503</b>-<b>1</b> and <b>503</b>-<b>2</b> (hereinafter, collectively referred to as &#x201c;gaze centers <b>503</b>&#x201d;) are also illustrated. Accordingly, calibration frames <b>511</b> may be obtained for each of the pixel positions in the headset display, each pixel position being representative of a viewer's eyeball location. A direct multiplication of the filter and the calibration frame results in a filtered map (e.g., filtered maps <b>521</b>-<b>1</b> and <b>521</b>-<b>2</b>, hereinafter, collectively referred to as &#x201c;filtered maps <b>521</b>&#x201d;). A simple average of all the pixels in filtered maps <b>521</b> may be the value used in eyeball uniformity map <b>510</b> corresponding to a pixel centered in the eyeball location.</p><p id="p-0031" num="0028"><figref idref="DRAWINGS">FIG. <b>6</b></figref> compares different uniformity maps <b>610</b>R, <b>610</b>G, and <b>610</b>B (hereinafter, collectively referred to as &#x201c;uniformity maps <b>610</b>&#x201d;) obtained for a fixed pupil location with eyeball uniformity maps for three different pixel colors (e.g., Red, R, Green, G and Blue, B), according to some embodiments. The top three maps <b>611</b>R, <b>611</b>G, and <b>611</b>B (hereinafter, collectively referred to as &#x201c;non-uniformity maps <b>611</b>&#x201d;) in the first row are the non-uniformity maps obtained for red, green, and blue pixels in the headset display, with an eyeball position set at the origin (<b>0</b>,<b>0</b>). Uniformity maps <b>610</b> are the eyeball uniformity maps for the red, green, and blue pixels in the display, using a Gaussian filter with a sigma covering approximately 10&#xb0; of the headset display.</p><p id="p-0032" num="0029"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an eyeball uniformity map <b>710</b> including a foveated area <b>720</b>, according to some embodiments. Eyeball uniformity map <b>710</b> indicates an almost homogeneous correction factor for the foveated portion of the display for an eyeball location <b>705</b>.</p><p id="p-0033" num="0030"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow chart illustrating steps in a method <b>800</b> for providing dynamic uniformity compensation in a VR/AR headset, according to some embodiments. The VR/AR headset may include a display including multiple pixels and a controller to adjust the intensity of each of the pixels via software commands stored in a memory and executed by a processor. A method consistent with the present disclosure may include at least one of the steps in method <b>800</b>, or two or more steps in method <b>800</b> performed in a different order, simultaneously, quasi-simultaneously, or overlapping in time.</p><p id="p-0034" num="0031">Step <b>802</b> includes identifying an eyeball position within an image frame in a display of a VR/AR headset, wherein the display includes multiple pixels in a two-dimensional array.</p><p id="p-0035" num="0032">Step <b>804</b> includes forming a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a pre-selected width. In some embodiments, step <b>804</b> includes selecting the width based on a projection of the image frame on a fovea of a user of the VR/AR headset.</p><p id="p-0036" num="0033">Step <b>806</b> includes collecting a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame.</p><p id="p-0037" num="0034">Step <b>808</b> includes generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame.</p><p id="p-0038" num="0035">Step <b>810</b> includes obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map. In some embodiments, step <b>810</b> includes generating an average of pixel values from the filtered map.</p><p id="p-0039" num="0036">Step <b>812</b> includes generating an eyeball uniformity map including the uniformity correction factor for multiple pixels in the VR/AR display. In some embodiments, step <b>812</b> includes updating the eyeball uniformity map upon identifying a change in the eyeball position within the image frame. In some embodiments, step <b>812</b> includes adjusting an intensity of light emitted by each of the pixels in the display based on the eyeball uniformity map.</p><heading id="h-0008" level="2">Hardware Overview</heading><p id="p-0040" num="0037"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an exemplary computer system <b>900</b> with which a VR/AR headset, and method <b>800</b> can be implemented, according to some embodiments. In certain aspects, computer system <b>900</b> may be implemented using hardware or a combination of software and hardware, either in a dedicated server, or integrated into another entity, or distributed across multiple entities. Computer system <b>900</b> may include a desktop computer, a laptop computer, a tablet, a phablet, a smartphone, a feature phone, a server computer, or otherwise. A server computer may be located remotely in a data center or be stored locally.</p><p id="p-0041" num="0038">Computer system <b>900</b> includes a bus <b>908</b> or other communication mechanism for communicating information, and a processor <b>902</b> coupled with bus <b>908</b> for processing information. By way of example, the computer system <b>900</b> may be implemented with one or more processors <b>902</b>. Processor <b>902</b> may be a general-purpose microprocessor, a microcontroller, a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), a Programmable Logic Device (PLD), a controller, a state machine, gated logic, discrete hardware components, or any other suitable entity that can perform calculations or other manipulations of information.</p><p id="p-0042" num="0039">Computer system <b>900</b> can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them stored in an included memory <b>904</b>, such as a Random Access Memory (RAM), a flash memory, a Read-Only Memory (ROM), a Programmable Read-Only Memory (PROM), an Erasable PROM (EPROM), registers, a hard disk, a removable disk, a CD-ROM, a DVD, or any other suitable storage device, coupled with bus <b>908</b> for storing information and instructions to be executed by processor <b>902</b>. The processor <b>902</b> and the memory <b>904</b> can be supplemented by, or incorporated in, special purpose logic circuitry.</p><p id="p-0043" num="0040">The instructions may be stored in the memory <b>904</b> and implemented in one or more computer program products, e.g., one or more modules of computer program instructions encoded on a computer-readable medium for execution by, or to control the operation of, the computer system <b>900</b>, and according to any method well known to those of skill in the art, including, but not limited to, computer languages such as data-oriented languages (e.g., SQL, dBase), system languages (e.g., C, Objective-C, C++, Assembly), architectural languages (e.g., Java, .NET), and application languages (e.g., PHP, Ruby, Perl, Python). Instructions may also be implemented in computer languages such as array languages, aspect-oriented languages, assembly languages, authoring languages, command line interface languages, compiled languages, concurrent languages, curly-bracket languages, dataflow languages, data-structured languages, declarative languages, esoteric languages, extension languages, fourth-generation languages, functional languages, interactive mode languages, interpreted languages, iterative languages, list-based languages, little languages, logic-based languages, machine languages, macro languages, metaprogramming languages, multiparadigm languages, numerical analysis, non-English-based languages, object-oriented class-based languages, object-oriented prototype-based languages, off-side rule languages, procedural languages, reflective languages, rule-based languages, scripting languages, stack-based languages, synchronous languages, syntax handling languages, visual languages, wirth languages, and xml-based languages. Memory <b>904</b> may also be used for storing temporary variable or other intermediate information during execution of instructions to be executed by processor <b>902</b>.</p><p id="p-0044" num="0041">A computer program as discussed herein does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, subprograms, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.</p><p id="p-0045" num="0042">Computer system <b>900</b> further includes a data storage device <b>906</b> such as a magnetic disk or optical disk, coupled with bus <b>908</b> for storing information and instructions. Computer system <b>900</b> may be coupled via input/output module <b>910</b> to various devices. Input/output module <b>910</b> can be any input/output module. Exemplary input/output modules <b>910</b> include data ports such as USB ports. The input/output module <b>910</b> is configured to connect to a communications module <b>912</b>. Exemplary communications modules <b>912</b> include networking interface cards, such as Ethernet cards and modems. In certain aspects, input/output module <b>910</b> is configured to connect to a plurality of devices, such as an input device <b>914</b> and/or an output device <b>916</b>. Exemplary input devices <b>914</b> include a keyboard and a pointing device, e.g., a mouse or a trackball, by which a consumer can provide input to the computer system <b>900</b>. Other kinds of input devices <b>914</b> can be used to provide for interaction with a consumer as well, such as a tactile input device, visual input device, audio input device, or brain-computer interface device. For example, feedback provided to the consumer can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the consumer can be received in any form, including acoustic, speech, tactile, or brain wave input. Exemplary output devices <b>916</b> include display devices, such as an LCD (liquid crystal display) monitor, for displaying information to the consumer.</p><p id="p-0046" num="0043">According to one aspect of the present disclosure, wearable devices can be implemented, at least partially, using a computer system <b>900</b> in response to processor <b>902</b> executing one or more sequences of one or more instructions contained in memory <b>904</b>. Such instructions may be read into memory <b>904</b> from another machine-readable medium, such as data storage device <b>906</b>. Execution of the sequences of instructions contained in main memory <b>904</b> causes processor <b>902</b> to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in memory <b>904</b>. In alternative aspects, hard-wired circuitry may be used in place of or in combination with software instructions to implement various aspects of the present disclosure. Thus, aspects of the present disclosure are not limited to any specific combination of hardware circuitry and software.</p><p id="p-0047" num="0044">Various aspects of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical consumer interface or a Web browser through which a consumer can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. The communication network can include, for example, any one or more of a LAN, a WAN, the Internet, and the like. Further, the communication network can include, but is not limited to, for example, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, or the like. The communications modules can be, for example, modems or Ethernet cards.</p><p id="p-0048" num="0045">Computer system <b>900</b> can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. Computer system <b>900</b> can be, for example, and without limitation, a desktop computer, laptop computer, or tablet computer. Computer system <b>900</b> can also be embedded in another device, for example, and without limitation, a mobile telephone, a PDA, a mobile audio player, a Global Positioning System (GPS) receiver, a video game console, and/or a television set top box.</p><p id="p-0049" num="0046">The term &#x201c;machine-readable storage medium&#x201d; or &#x201c;computer-readable medium&#x201d; as used herein refers to any medium or media that participates in providing instructions to processor <b>902</b> for execution. Such a medium may take many forms, including, but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media include, for example, optical or magnetic disks, such as data storage device <b>906</b>. Volatile media include dynamic memory, such as memory <b>904</b>. Transmission media include coaxial cables, copper wire, and fiber optics, including the wires forming bus <b>908</b>. Common forms of machine-readable media include, for example, floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, DVD, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, an EPROM, a FLASH EPROM, any other memory chip or cartridge, or any other medium from which a computer can read. The machine-readable storage medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter affecting a machine-readable propagated signal, or a combination of one or more of them.</p><p id="p-0050" num="0047">The subject technology is illustrated, for example, according to various aspects described below. Various examples of aspects of the subject technology are described as numbered claims (claim <b>1</b>, <b>2</b>, etc.) for convenience. These are provided as examples, and do not limit the subject technology.</p><p id="p-0051" num="0048">In one aspect, a method may be an operation, an instruction, or a function and vice versa. In one aspect, a claim may be amended to include some or all of the words (e.g., instructions, operations, functions, or components) recited in either one or more claims, one or more words, one or more sentences, one or more phrases, one or more paragraphs, and/or one or more claims.</p><p id="p-0052" num="0049">To illustrate the interchangeability of hardware and software, items such as the various illustrative blocks, modules, components, methods, operations, instructions, and algorithms have been described generally in terms of their functionality. Whether such functionality is implemented as hardware, software, or a combination of hardware and software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application.</p><p id="p-0053" num="0050">As used herein, the phrase &#x201c;at least one of&#x201d; preceding a series of items, with the terms &#x201c;and&#x201d; or &#x201c;or&#x201d; to separate any of the items, modifies the list as a whole, rather than each member of the list (e.g., each item). The phrase &#x201c;at least one of&#x201d; does not require selection of at least one item; rather, the phrase allows a meaning that includes at least one of any one of the items, and/or at least one of any combination of the items, and/or at least one of each of the items. By way of example, the phrases &#x201c;at least one of A, B, and C&#x201d; or &#x201c;at least one of A, B, or C&#x201d; each refer to only A, only B, or only C; any combination of A, B, and C; and/or at least one of each of A, B, and C.</p><p id="p-0054" num="0051">The word &#x201c;exemplary&#x201d; is used herein to mean &#x201c;serving as an example, instance, or illustration.&#x201d; Any embodiment described herein as &#x201c;exemplary&#x201d; is not necessarily to be construed as preferred or advantageous over other embodiments. Phrases such as an aspect, the aspect, another aspect, some aspects, one or more aspects, an implementation, the implementation, another implementation, some implementations, one or more implementations, an embodiment, the embodiment, another embodiment, some embodiments, one or more embodiments, a configuration, the configuration, another configuration, some configurations, one or more configurations, the user technology, the disclosure, the present disclosure, other variations thereof and alike are for convenience only and do not imply that a disclosure relating to such phrase(s) is essential to the user technology or that such disclosure applies to all configurations of the user technology. A disclosure relating to such phrase(s) may apply to all configurations, or one or more configurations. A disclosure relating to such phrase(s) may provide one or more examples. A phrase such as an aspect or some aspects may refer to one or more aspects and vice versa, and this applies similarly to other foregoing phrases.</p><p id="p-0055" num="0052">A reference to an element in the singular is not intended to mean &#x201c;one and only one&#x201d; unless specifically stated, but rather &#x201c;one or more.&#x201d; Pronouns in the masculine (e.g., his) include the feminine and neuter gender (e.g., her and its) and vice versa. The term &#x201c;some&#x201d; refers to one or more. Underlined and/or italicized headings and subheadings are used for convenience only, do not limit the user technology, and are not referred to in connection with the interpretation of the description of the user technology. Relational terms such as first and second and the like may be used to distinguish one entity or action from another without necessarily requiring or implying any actual such relationship or order between such entities or actions. All structural and functional equivalents to the elements of the various configurations described throughout this disclosure that are known or later come to be known to those of ordinary skill in the art are expressly incorporated herein by reference and intended to be encompassed by the user technology. Moreover, nothing disclosed herein is intended to be dedicated to the public regardless of whether such disclosure is explicitly recited in the above description. No claim element is to be construed under the provisions of 35 U.S.C. &#xa7; 112, sixth paragraph, unless the element is expressly recited using the phrase &#x201c;means for&#x201d; or, in the case of a method claim, the element is recited using the phrase &#x201c;step for.&#x201d;</p><p id="p-0056" num="0053">While this specification contains many specifics, these should not be construed as limitations on the scope of what may be described, but rather as descriptions of particular implementations of the user matter. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially described as such, one or more features from a described combination can, in some cases, be excised from the combination, and the described combination may be directed to a subcombination or variation of a subcombination.</p><p id="p-0057" num="0054">The user matter of this specification has been described in terms of particular aspects, but other aspects can be implemented and are within the scope of the following claims. For example, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. The actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the aspects described above should not be understood as requiring such separation in all aspects, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.</p><p id="p-0058" num="0055">The title, background, brief description of the drawings, abstract, and drawings are hereby incorporated into the disclosure and are provided as illustrative examples of the disclosure, not as restrictive descriptions. It is submitted with the understanding that they will not be used to limit the scope or meaning of the claims. In addition, in the detailed description, it can be seen that the description provides illustrative examples and the various features are grouped together in various implementations for the purpose of streamlining the disclosure. The method of disclosure is not to be interpreted as reflecting an intention that the described user matter requires more features than are expressly recited in each claim. Rather, as the claims reflect, inventive user matter lies in less than all features of a single disclosed configuration or operation. The claims are hereby incorporated into the detailed description, with each claim standing on its own as a separately described user matter.</p><p id="p-0059" num="0056">The claims are not intended to be limited to the aspects described herein, but are to be accorded the full scope consistent with the language claims and to encompass all legal equivalents. Notwithstanding, none of the claims are intended to embrace user matter that fails to satisfy the requirements of the applicable patent law, nor should they be interpreted in such a way.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method, comprising:<claim-text>identifying an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array;</claim-text><claim-text>forming a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width;</claim-text><claim-text>collecting a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame;</claim-text><claim-text>generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame;</claim-text><claim-text>obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map; and</claim-text><claim-text>generating an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying an eyeball position within an image frame comprises identifying a pupil location provided by an eye-tracker module, and determining a gaze direction based on a vergence of two pupils from a viewer.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying an eyeball position within an image frame comprises identifying a setting configuration of the headset for a viewer.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein forming a filter for the two-dimensional array comprises selecting the width based on a projection of the image frame on a fovea of a viewer of the headset.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein collecting a calibration frame comprises adjusting the calibration frame based on the eyeball position.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein obtaining a uniformity correction factor for a pixel in the display comprises generating an average of pixel values from the filtered map.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising updating the eyeball uniformity map upon identifying a change in the eyeball position within the image frame.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising adjusting an intensity of light emitted by each of the pixels in the display based on the eyeball uniformity map.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein collecting a calibration frame for the two-dimensional array comprises collecting three calibration frames including a red pixel calibration frame, a green pixel calibration frame, and a blue pixel calibration frame.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising adjusting an intensity of a light emitted by the pixels in the two-dimensional array according to the eyeball uniformity map.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system, comprising:<claim-text>a memory storing multiple instructions; and</claim-text><claim-text>one or more processors configured to execute the instructions to cause the system to:<claim-text>identify an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array,</claim-text><claim-text>form a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width,</claim-text><claim-text>collect a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame,</claim-text><claim-text>generate a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame,</claim-text><claim-text>obtain a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map, and</claim-text><claim-text>generate an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein to identify an eyeball position within an image frame the one or more processors execute instructions to identify a pupil location provided by an eye-tracker module, and to determine a gaze direction based on a vergence of two pupils from a viewer.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein to identify an eyeball position within an image frame the one or more processors execute instructions to identify a setting configuration of the headset for a viewer.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein to form a filter for the two-dimensional array the one or more processors execute instructions to select the width based on a projection of the image frame on a fovea of a viewer of the headset.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein to collect a calibration frame the one or more processors execute instructions to adjust the calibration frame based on the eyeball position.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A non-transitory, computer-readable medium storing instructions which, when executed by a processor in a computer, cause the computer to perform a method, the method comprising:<claim-text>identifying an eyeball position within an image frame in a display of a headset for use in a virtual reality or augmented reality application, wherein the display includes multiple pixels in a two-dimensional array;</claim-text><claim-text>forming a filter for the two-dimensional array, the filter being centered on the eyeball position within the image frame, and having a width;</claim-text><claim-text>collecting a calibration frame for the two-dimensional array, the calibration frame indicative of a uniformity map for multiple pupil locations given the eyeball position within the image frame;</claim-text><claim-text>generating a filtered map associated with the eyeball position within the image frame, using the filter for the two-dimensional array and the calibration frame;</claim-text><claim-text>obtaining a uniformity correction factor for a pixel in the display corresponding to the eyeball position within the image frame, based on the filtered map; and</claim-text><claim-text>generating an eyeball uniformity map including the uniformity correction factor for multiple pixels in the display.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising instructions to identify a pupil location provided by an eye-tracker module, and to determine a gaze direction based on a vergence of two pupils from a viewer.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising instructions to identify a setting configuration of the headset for a viewer.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising instructions to select the width based on a projection of the image frame on a fovea of a viewer of the headset.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory, computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising instructions to adjust the calibration frame based on the eyeball position.</claim-text></claim></claims></us-patent-application>