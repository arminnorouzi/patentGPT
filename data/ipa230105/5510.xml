<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005511A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005511</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17841574</doc-number><date>20220615</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>B</subclass><main-group>27</main-group><subgroup>36</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>B</subclass><main-group>27</main-group><subgroup>36</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DATA TAPE MEDIA QUALITY VALIDATION AND ACTION RECOMMENDATION</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217040</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217032</doc-number><date>20210630</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63217036</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><orgname>Oracle International Corporation</orgname><address><city>Redwood Shores</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Jhatakia</last-name><first-name>Jitesh Bakul</first-name><address><city>Superior</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Wyman</last-name><first-name>Robert Olin</first-name><address><city>Berthoud</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Abbott, Jr.</last-name><first-name>Frank Patrick</first-name><address><city>Brighton</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Luehr</last-name><first-name>Carl William</first-name><address><city>Erie</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Wharton</last-name><first-name>Cathleen Susan</first-name><address><city>Louisville</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Black, III</last-name><first-name>John Mitchell</first-name><address><city>Loveland</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Braun</last-name><first-name>Anthony Joseph</first-name><address><city>Lafayette</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>Ellett</last-name><first-name>Scott Adrian</first-name><address><city>Broomfield</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="08" designation="us-only"><addressbook><last-name>Noble</last-name><first-name>George Edward</first-name><address><city>Boulder</city><state>CO</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Oracle International Corporation</orgname><role>02</role><address><city>Redwood Shores</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Techniques for generating action recommendations for a data tape system are disclosed. A data tape system generates action recommendations for a data tape based on library-based metadata messages as well as a measured data quality value of the data tape. The system initiates an operation resulting in the data tape interacting with a media drive. A data tape library controller generates one or more metadata messages based on a result of a requested operation. The metadata message may include information regarding the type of error and a default recommended course of action. The system generates the recommended action for the data tape using a trained machine learning model.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="183.13mm" wi="158.75mm" file="US20230005511A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="234.95mm" wi="192.02mm" file="US20230005511A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="223.94mm" wi="160.36mm" file="US20230005511A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="177.88mm" wi="135.13mm" file="US20230005511A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="234.95mm" wi="172.30mm" file="US20230005511A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="252.65mm" wi="188.98mm" file="US20230005511A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">BENEFIT CLAIMS; RELATED APPLICATIONS; INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Applications: 63/217,032, filed Jun. 30, 2021; 63/217,036, filed Jun. 30, 2021; and 63/217,040, filed Jun. 30, 2021, each of which are hereby incorporated by reference in their entirety.</p><p id="p-0003" num="0002">The Applicant hereby rescinds any disclaimer of claim scope in the parent application(s) or the prosecution history thereof and advises the USPTO that the claims in this application may be broader than any claim in the parent application(s).</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0004" num="0003">The present disclosure relates to data tape media quality validation and action recommendation. In particular, the present disclosure relates to generating action recommendations for a data tape cartridge based on metadata obtained from a data tape library system as well as based on additional measured quality metrics of the data tape.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0005" num="0004">Magnetic tape storage provides cost and storage density advantages over many other data storage technologies. Data centers often utilize both tape storage and disk storage to complement each other. Tape storage is often used for backup and archival data storage. Disk storage is often used for more frequently accessed data storage.</p><p id="p-0006" num="0005">Magnetic tape data storage (&#x201c;data tape&#x201d;) uses digital recording on magnetic tape to store digital information. Tapes are packed in cartridges or cassettes. A tape drive performs read/write operations from/to the tape. A robotically-accessed tape library houses data tape cartridges to provide large quantities of data storage.</p><p id="p-0007" num="0006">Over time, data tape quality may degrade. Degradation may be a result of physical wear in the data tape or data tape cartridge. Alternatively, the degradation may be a result of media errors, or errors in the data stored on the data tape. Data tape libraries employ monitoring systems to detect errors in read/write operations.</p><p id="p-0008" num="0007">The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">The embodiments are illustrated by way of example and not by way of limitation in the figures of the accompanying drawings. It should be noted that references to &#x201c;an&#x201d; or &#x201c;one&#x201d; embodiment in this disclosure are not necessarily to the same embodiment, and they mean at least one. In the drawings:</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system in accordance with one or more embodiments;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example set of operations for generating a recommendation in data tape system based on a calibration status of a media drive in accordance with one or more embodiments;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example set of operations for training a machine learning model to generate a recommended action for a data tape and/or media drive in accordance with one or more embodiments;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example embodiment; and</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram that illustrates a computer system in accordance with one or more embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding. One or more embodiments may be practiced without these specific details. Features described in one embodiment may be combined with features described in a different embodiment. In some examples, well-known structures and devices are described with reference to a block diagram form in order to avoid unnecessarily obscuring the present invention.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0015">1. GENERAL OVERVIEW</li>        <li id="ul0002-0002" num="0016">2. SYSTEM ARCHITECTURE</li>        <li id="ul0002-0003" num="0017">3. DATA TAPE MEDIA QUALITY VALIDATION AND ACTION RECOMMENDATION</li>        <li id="ul0002-0004" num="0018">4. TRAINING A MACHINE LEARNING MODEL</li>        <li id="ul0002-0005" num="0019">5. EXAMPLE EMBODIMENT</li>        <li id="ul0002-0006" num="0020">6. COMPUTER NETWORKS AND CLOUD NETWORKS</li>        <li id="ul0002-0007" num="0021">7. MISCELLANEOUS; EXTENSIONS</li>        <li id="ul0002-0008" num="0022">8. HARDWARE OVERVIEW</li>    </ul>    </li></ul></p><heading id="h-0006" level="1">1. GENERAL OVERVIEW</heading><p id="p-0016" num="0023">Data tape libraries monitor operations of the data tapes to identify errors and failures in read/write operations from data tapes/to data tapes in the library. A system may perform a media validation of a data tape to verify that the data tape is in good condition for continued use. However, status messages generated by a data tape library in the course of read/write operations may be inadequate to properly verify the operational status of a data tape. As a result, a user may be unable to confidently use a data tape or take corrective action.</p><p id="p-0017" num="0024">One or more embodiments include a data tape system that generates action recommendations for a data tape based on library-based metadata messages as well as a measured data quality value of the data tape. The system initiates an exchange operation resulting in the data tape interacting with a media drive. The operation may be, for example, a read operation to read data from the data tape, a write operation to write data to the data tape, or a validation operation to determine an operational status of the data tape. In a validation operation, a predetermined set of operations is performed on the data tape&#x2014;such as read or write operations. However, unlike read or write operations initiated by a host application, validation operations do not necessarily result in the exchange of read or write data between the media drive and devices external to a data tape library. Instead, the operations are monitored by a data tape library controller to determine the operating status of the data tape. The data tape library controller generates one or more metadata messages based on a result of the requested operation. For example, if the requested operation is a read operation, the data tape library controller may control a robot arm to access the data tape cartridge and provide the data tape cartridge to a media drive. The media drive may attempt to read the data tape. If an error occurs at any stage of the data read process, the data tape library controller may generate a metadata message. The metadata message may include information regarding the type of error and a default recommended action.</p><p id="p-0018" num="0025">In one embodiment, a system generates a recommended action that may be different from the default recommended action. The system-generated recommended action may be based on (1) the metadata message generated by the data tape library controller, and (2) a data tape quality value. The data tape quality value may be a value generated based on previous operations performed on the data tape. For example, the data tape quality value may be based on: (a) a particular data tape error correction value representing a history of errors associated with the data tape, (b) a particular value representing an amount of data processed (read/write operations performed on the data tape) or a length of data tape traversed during data processing operations, and (c) a scaling factor. In one or more embodiments, the data tape quality value is a data tape read quality value indicating a readability of the data tape. The scaling factor represents a relationship between the data tape error correction value, the value representing the amount of data processed in read/write operations of the data tape or the length of data tape traversed in data processing operations, and a degradation level of the data tape.</p><p id="p-0019" num="0026">In one embodiment, the system generates the recommended action for the data tape using a trained machine learning model. The system trains the machine learning model using historical data including historical metadata messages, historical data tape quality values, and historical recommended actions. The historical data may also include information regarding whether the historical recommended actions successfully resolved errors. The system trains the machine learning model to generate recommended actions based on input data sets including a particular set of metadata messages and a particular data quality value for a data tape. In one embodiment, the system generates an expert system including a table of recommended actions corresponding to different combinations of metadata messages and data quality values.</p><p id="p-0020" num="0027">In one embodiment, the system generates a ranking of metadata messages. The system may identify a plurality of received metadata messages and generate a recommendation only based on the highest-ranked metadata message. For example, the data tape library controller generates a first metadata message indicating that a certain number of errors occurred during a read operation. The metadata message may indicate that the errors were corrected using error correction operations. The metadata message may indicate the data tape is usable but should be monitored for an increase in errors. Another metadata message may indicate that a certain number of read errors occurred that could not be corrected by error correction operations. The metadata message may indicate that the data tape should not be used for further write operations. The system may assign a higher weight to the second metadata message based on a severity of the error in the second metadata message.</p><p id="p-0021" num="0028">In one embodiment, the system displays a recommended action on a display device. The system may also display a confidence level associated with the recommended action. The confidence level may be based on the data tape quality value for the data tape that is the subject of the recommendation.</p><p id="p-0022" num="0029">One or more embodiments described in this Specification and/or recited in the claims may not be included in this General Overview section.</p><heading id="h-0007" level="1">2. SYSTEM ARCHITECTURE</heading><p id="p-0023" num="0030"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system <b>100</b> in accordance with one or more embodiments. As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, system <b>100</b> includes a data tape library <b>110</b>, a data tape control engine <b>120</b>, a user interface <b>130</b>, a data tape analysis and action recommendation engine <b>140</b>, and a data repository <b>160</b>.</p><p id="p-0024" num="0031">The data tape control engine <b>120</b> provides commands to the library controller <b>114</b> to perform a read or write operation on the data tape <b>112</b> of the data tape cartridge <b>111</b>. The library controller <b>114</b> controls a robot arm of the data tape library <b>110</b> to access the data tape cartridge <b>111</b> and insert the data tape cartridge <b>111</b> into a media drive <b>113</b> to perform the read or write operation. Once the data tape cartridge <b>111</b> is loaded into the media drive <b>113</b>, the data tape control engine <b>120</b> communicates with the media drive <b>113</b> to perform the read and/or write operations. During a read operation, the media drive <b>113</b> transmits read data from the data tape <b>112</b> to the data tape control engine <b>120</b>. During a write operation, the data tape control engine <b>120</b> transmits write data to the media drive <b>113</b> to write to the data tape <b>112</b>. Upon completion of the read and/or write operations, the library controller <b>114</b> de-mounts the data tape cartridge <b>111</b> from the media drive <b>113</b>. The library controller <b>114</b> detects, upon completion of the read and/or write operations, performance information, such as whether read and/or write operations were successful, error data, and other performance notifications. A data tape monitor <b>121</b> receives from the library controller <b>114</b> the performance information associated with the read and/or write operation. If the operation results in a hard error, such as an inability of the media drive <b>113</b> to write to, or read from, the data tape <b>112</b>, the data tape monitor <b>121</b> receives an alert from the library controller <b>114</b>. The alert may include a recommended action.</p><p id="p-0025" num="0032">The library controller <b>114</b> transmits hard error alert data, advisory alert data, and informational alert data associated with read and/or write operations as metadata to the data tape control engine <b>120</b>. A hard error alert may be any error that prevents read and/or write operations, such as a total loss of the data tape, mechanical malfunction, media corruption, or extreme wear of the data tape.</p><p id="p-0026" num="0033">In one embodiment, the library controller <b>114</b> includes an application or program that analyzes the performance of the media drive <b>113</b> associated with a read and/or write operation and generates hard error alerts, advisory alerts, and informational alerts. The hard error alert may include a recommendation that the data tape should not be used to store data. The hard error alert may also include a notice that the data tape is unusable, and a read/write operation could not be carried out. An advisory alert may indicate that an error occurred during a read/write operation, but that the operation was able to be performed successfully. The advisory alert may also provide a notice that information included in the data tape should be moved to another data tape in the near future. An informational-type alert occurs when a read/write operation occurs without any errors. For example, the library controller <b>114</b> may be configured to generate an informational alert when it determines a particular distance of data tape has been read. For example, if an amount of data written to/read from a data tape corresponds to a full wrap (traversing the tape from one end to the other), the library controller <b>114</b> may generate an informational-type alert. Informational alerts may also indicate a type of data tape cartridge <b>111</b> being read from/written to, that a particular tape has been in use for a particular amount of time, or any other information that does not necessarily include a tape failure or data read/write error.</p><p id="p-0027" num="0034">In addition to generating commands to read from/write to a data tape <b>112</b> in the data tape library <b>110</b>, the data tape control engine <b>120</b> may also control operating modes and monitoring commands of the data tape library <b>110</b>. For example, in a data tape analysis operating mode, the data tape control engine <b>120</b> may issue calibration commands, qualification commands, data tape quality measurement commands, or media quality commands. For example, an operator may access a graphical user interface (GUI) displayed by the user interface <b>130</b> to request a media validation of a particular data tape <b>112</b> in the data tape library <b>110</b>. In the data tape analysis operating mode, the library controller <b>114</b> may return data about the state of the data tape <b>112</b> included in the media validation request without receiving any write data from the data tape control engine <b>120</b> and without transmitting any read data to the data tape control engine <b>120</b>.</p><p id="p-0028" num="0035">The data tape analysis and action recommendation engine <b>140</b> analyzes data generated by the library controller <b>114</b> and the data tape monitor <b>121</b> of the data tape control engine <b>120</b>. The data tape analysis and action recommendation engine <b>140</b> includes a data tape quality value generator <b>141</b>, a data tape quality value tuning engine <b>143</b>, a media drive calibration and qualification engine <b>146</b>, and a data tape media validation engine <b>147</b>.</p><p id="p-0029" num="0036">The data tape quality value generator <b>141</b> generates a data tape quality value based on a data tape quality value algorithm <b>142</b>. The data tape quality value algorithm <b>142</b> includes values representing (a) a particular data tape error correction value, (b) a particular value representing an amount of data processed (read/write), and (c) a scaling factor. In one embodiment, the data tape quality value is a data tape read quality value indicating a readability of the data tape. The data tape read quality value may include data associated with read operations while excluding data associated with write operations. The particular data tape error correction value of the data tape quality value may be a filtered &#x201c;total corrected read errors&#x201d; value. The &#x201c;total corrected read errors&#x201d; value represents a type of read error requiring physical rewinding of the data tape to re-read a portion of the data tape that was previously read, but which resulted in an error. Filtering the total corrected read errors value includes omitting from the value the re-reads that are not necessarily the result of read errors. For example, if a tape drive is known to re-read portions of the data tape when first beginning a read operation, the re-read operations at the beginning of the read operation may be omitted from the filtered &#x201c;total corrected read errors&#x201d; value. Otherwise, the total corrected read errors value may be artificially inflated. The system may track an amount to data read from the data tape in read operations and/or written to the data tape in write operations to obtain the value representing an amount of data processed. Alternatively, the system may derive the value representing the amount of data processed by tracking a length of tape read from or written to, and deriving, based on a known amount of data per distance, the amount of data read from/written to the data tape.</p><p id="p-0030" num="0037">The scaling factor is a numerical value which represents a relationship between the data tape error correction value, the value representing the amount of data processed in read and/or write operations of the data tape, and a degradation level of the data tape. The data tape analysis and action recommendation engine <b>140</b> includes a data tape quality value tuning engine <b>143</b>. The data tape quality value tuning engine <b>143</b> adjusts the scaling factor for a particular data tape or set of data tapes based on data tape attribute data <b>161</b>. Example data tape attribute data <b>161</b> includes: a type of data tape, a brand of data tape, a material making up the data tape, dimensions of the data tape (such as thickness, width, length), media characteristics (such as compression levels, amount of data stored, number of over-writes on the data tape), and environmental attributes (such as humidity, temperature, light levels, and magnetic field strengths of an environment in which the data tape is stored). For example, for a particular brand of data tape, storage at a higher temperature and humidity may cause the data tape to degrade more rapidly when the data tape is frequently accessed for data re-reads and re-writes. In an embodiment in which a machine learning model generates a scaling factor, the data tape quality value tuning engine <b>143</b> provides feedback to the machine learning model engine during training of the model. Based on the feedback, the machine learning model engine updates a training data set and re-trains the model.</p><p id="p-0031" num="0038">In one embodiment, the data tape quality value algorithm <b>142</b> may be represented as:</p><p id="p-0032" num="0039">DTQ=90&#x2212;&#x3b1;*(2*TCREF/WR){circumflex over (&#x2003;)}0, where DTQ is the data tape quality value, &#x3b1; is a degradation co-efficient, TCREF is a filtered total corrected read error value, WR is a &#x201c;wraps read&#x201d; value, corresponding to the value representing the amount of read data tape, and &#x3b2; is the scaling factor.</p><p id="p-0033" num="0040">In the above equation, the value &#x201c;90&#x201d; defines a range of values for the data tape quality value. However, embodiments encompass any range of values. The range of potential values for a data tape quality may be set by a user, for example. The degradation coefficient is a value less than 90 that defines how much the &#x201c;errors per distance&#x201d; calculations (raised to the scaling factor) will increase/reduce the data tape quality value. For example, if the degradation coefficient is set to &#x201c;20,&#x201d; then the final data tape quality value will be calculated as the &#x201c;errors per distance&#x201d; times <b>20</b>. The degradation coefficient may be set by a user, for example, to cause the data tape quality values to fall along a desired range of values.</p><p id="p-0034" num="0041">In one embodiment, the data tape analysis and action recommendation engine <b>140</b> includes a machine learning engine <b>144</b> for training a machine learning model to generate, for a particular set of data tape attributes, a scaling factor value. For example, the machine learning engine <b>144</b> may generate a training data set from the data tape attribute data <b>161</b> to identify sets of data tape attributes and corresponding scaling factor values. The machine learning model may be trained to identify relationships among different data tape attributes and scaling factor values. In an alternative embodiment, the data tape analysis and action recommendation engine <b>140</b> maps a particular data tape attribute or set of attributes to a particular scaling factor using a mapping table <b>145</b>. The mapping table <b>145</b> may include, for example, fields representing ranges of values for data tape attributes and scaling factor values associated with the ranges of values.</p><p id="p-0035" num="0042">The media drive calibration and qualification engine <b>146</b> performs a media drive calibration on a designated media drive <b>113</b> in the data tape library <b>110</b>. For example, a data tape library <b>110</b> may include multiple media drives <b>113</b>. One or more of the media drives may be designated as &#x201c;validation&#x201d; drives. These drives may be calibrated, using a data tape cartridge <b>111</b> having known attributes, to ensure the media drive <b>113</b> designated as a validation drive meets a threshold operation status. In addition, the validation drive may be inaccessible to host applications that read from and write to data tapes <b>112</b> in the data tape library <b>110</b>. Instead, the validation drive may be accessible only by the library controller <b>114</b> for carrying out calibration, qualification (ensuring continued calibration of the media drive), and validation operations. Consequently, when a media validation is requested for a particular data tape <b>112</b>, the library controller <b>114</b> selects, from among the multiple media drives <b>113</b>, the media drive that is calibrated and designated as the validation drive. Since the validation drive has been calibrated, the result of the media validation operation is more likely to accurately reflect a state of the media, and not necessarily a state of the validation drive. In one or more embodiments, the library controller <b>114</b> uses a calibrated media drive <b>113</b> to perform a statistical analysis to generate the data tape quality value.</p><p id="p-0036" num="0043">The data tape media validation engine <b>147</b> determines an operating state of a particular data tape <b>112</b> in the data tape library <b>110</b>. The validation operation may be initiated by a user, by a pre-defined schedule, or by any triggering event detected by the library controller <b>114</b> or the data tape monitor <b>121</b>. For example, a data tape control engine <b>120</b> may store a set of rules for determining when a validation is performed. The set of rules may include one rule to perform a validation of the data tape <b>112</b> after a predetermined number of uses of a data tape <b>112</b>, another rule to perform a validation of the data tape <b>112</b> after a predetermined period of time has elapsed, and another rule to perform a validation of the data tape <b>112</b> after a predetermined number of read/write errors is detected when reading from or writing to the data tape <b>112</b>.</p><p id="p-0037" num="0044">In one embodiment, the data tape analysis and action recommendation engine <b>140</b> includes a recommendation generator and action initiating engine <b>148</b>. The recommendation generator and action initiating engine <b>148</b> makes action recommendations and initiates system actions for a data tape based on (1) data tape attribute data <b>161</b>, (2) data tape quality values <b>162</b>, and (3) library metadata messages <b>165</b>. When calibration and/or qualification operations have been performed, the action recommendations and system actions may further be generated/initiated based on media drive calibration values <b>163</b> and media drive qualification values <b>164</b>.</p><p id="p-0038" num="0045">In one embodiment, the recommendation generator and action initiating engine <b>148</b> generates a recommendation or initiates an action based on a trained machine learning model. The machine learning engine <b>144</b> may train a machine learning model to generate, for a particular data tape, an action recommendation. For example, the machine learning engine <b>144</b> may generate a training data set from the data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and library metadata messages <b>165</b> to identify action recommendations associated with particular sets of data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and library metadata messages <b>165</b>. The machine learning model may be trained to identify relationships among different data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and metadata messages <b>165</b> and action recommendations. In addition, the machine learning engine <b>144</b> may train the machine learning model based on data indicating whether a prescribed action resulted in a successful correction of an error or not. For example, the training data set may include the data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and metadata messages <b>165</b>, as well as an indication of the historical action recommended for the set of data tape attributes and an indication of whether the historical recommended action resulted in successful resolution of a detected error.</p><p id="p-0039" num="0046">In an alternative embodiment, the data tape analysis and action recommendation engine <b>140</b> maps a particular set of data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and metadata messages <b>165</b> to a particular action recommendation using a mapping table <b>145</b>. The mapping table <b>145</b> may include, for example, fields representing ranges of values for data tape attributes and scaling factor values associated with the ranges of values.</p><p id="p-0040" num="0047">In one embodiment, the data tape analysis and action recommendation engine <b>140</b> includes a library metadata message analysis engine <b>149</b>. The library metadata message analysis engine <b>149</b> may analyze a library metadata message <b>165</b> and determine whether to bypass a machine learning engine <b>144</b>. For example, if the data tape control engine <b>120</b> controls the data tape media validation engine <b>147</b> to initiate a media validation of a particular data tape <b>112</b>, the library controller <b>114</b> may generate a hard error metadata message. The hard error metadata message may indicate that the selected data tape is no longer usable by host applications for read or write operations. Based on the particular type of library metadata message, the library metadata message analysis engine <b>149</b> may transmit the library metadata message directly to the recommendation generator and action initiating engine <b>148</b> without applying a machine learning algorithm to an input data set including the library metadata message.</p><p id="p-0041" num="0048">In one embodiment, the recommendation generator and action initiating engine <b>148</b> stores one or more tables indicating prescribed recommendations and actions for particular sets of data tape attributes data <b>161</b>, data tape quality values <b>162</b>, and library metadata messages <b>165</b>. The one or more tables may be generated by a machine learning model trained by the machine learning engine <b>144</b> to function as an expert system. The machine learning engine <b>144</b> may train a machine learning model to analyze historical data including the data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and library metadata messages <b>165</b> associated with previously-encountered or analyzed data tapes. The historical data may also be obtained from additional sources, such as online libraries including historical data tape information. The machine learning engine <b>144</b> trains the machine learning model based on the historical data to generate, for different combinations of input data, corresponding action recommendations. The recommendation generator and action initiating engine <b>148</b> stores the action recommendations in the one or more tables. Upon encountering a particular set of data tape attribute data <b>161</b>, data tape quality values <b>162</b>, and library metadata messages <b>165</b> resulting from a data tape media validation operation, the recommendation generator and action initiating engine <b>148</b> consults the one or more tables to generate a recommendation or to initiate an action.</p><p id="p-0042" num="0049">In one embodiment, one or more of the library metadata messages <b>165</b> may include a default recommendation. For example, the library controller <b>114</b> may generate a library metadata message indicating that a particular read error occurred and recommending cleaning of a media drive. However, the recommendation generator and action initiating engine <b>148</b> may generate a different recommendation by taking into account not only the library metadata message, but also a data tape quality value, a data tape media validation value, and a calibration value of a media drive. A machine learning model may determine that, for the particular set of input data cleaning the media drive would not necessarily resolve the error. Instead, the machine learning model may recommend cleaning a data tape.</p><p id="p-0043" num="0050">Examples of recommendations generated by the recommendation generator and action initiating engine <b>148</b> include: (1) use a different media drive for the requested operation, (2) migrate data from the data tape to another data tape, (3) an end-of-life metric has been detected: migrate data to another data tape, (4) data tape quality is less than quality required for the stored media&#x2014;replace the data tape with one of a higher quality grade, (5) wrong type of data tape detected for requested operation&#x2014;change data tape, (6) data drive is incompatible with data tape&#x2014;change to another data drive and repeat operation, (7) data tape read failure&#x2014;migrate data to another data tape and do not use data tape, (8) recommendation not possible&#x2014;type of error unknown, (9) clean media drive, (10) clean data tape, (11) re-run requested operation, (12) data encryption error encountered&#x2014;re-run requested operation.</p><p id="p-0044" num="0051">In addition to generating recommendations for addressing alerts resulting from data exchanges between the data tape library <b>110</b> and the data tape control engine <b>120</b>, the data tape analysis and action recommendation engine <b>140</b> may further identify a status of a data tape, including whether the data tape is blank and whether the data tape is a virgin data tape (i.e., never written to).</p><p id="p-0045" num="0052">The data tape analysis and action recommendation engine <b>140</b> determines whether a data tape is blank by determining whether any errors were reported in association with a read operation. If any errors were reported, the data tape is not considered blank. If no errors were detected, the data tape analysis and action recommendation engine <b>140</b> next determines how much data has been written to the data tape over the lifetime of the data tape. For example, the library controller <b>114</b> may store, for each data tape in the data tape library <b>110</b>, data indicating how much data was written to each data tape. The data tape analysis and action recommendation engine <b>140</b> determines whether the amount of data written to the data tape over its lifetime is more than an amount of data that is written to data tapes to format the data tapes. If the amount of data written to the data tape over its lifetime is more than an amount of data that is written to data tapes to format the data tapes, the data tape analysis and action recommendation engine <b>140</b> determines that the data tape is not blank. The data tape analysis and action recommendation engine <b>140</b> next determines an amount of unused capacity of the data tape. If the amount of unused capacity is less than a total capacity of the data tape, then the data tape analysis and action recommendation engine <b>140</b> determines that the data tape is not blank. Otherwise, the data tape analysis and action recommendation engine <b>140</b> designates the data tape as &#x201c;blank.&#x201d;</p><p id="p-0046" num="0053">The data tape analysis and action recommendation engine <b>140</b> determines whether a data tape is virgin (or never written to) by determining: (a) whether any errors are reported associated with a read operation, and (b) an amount of data written to the data tape in its lifetime. If no errors are reported, and if no data has ever been written to the data tape, the data tape analysis and action recommendation engine <b>140</b> determines that the data tape is a &#x201c;virgin&#x201d; data tape that has never been written to.</p><p id="p-0047" num="0054">In one or more embodiments, interface <b>130</b> refers to hardware and/or software configured to facilitate communications between a user and the data tape control engine <b>120</b> and data tape analysis and action recommendation engine <b>140</b>. Interface <b>130</b> renders user interface elements and receives input via user interface elements. Examples of interfaces include a graphical user interface (GUI), a command line interface (CLI), a haptic interface, and a voice command interface. Examples of user interface elements include checkboxes, radio buttons, dropdown lists, list boxes, buttons, toggles, text fields, date and time selectors, command lines, sliders, pages, and forms.</p><p id="p-0048" num="0055">In an embodiment, different components of interface <b>130</b> are specified in different languages. The behavior of user interface elements is specified in a dynamic programming language, such as JavaScript. The content of user interface elements is specified in a markup language, such as hypertext markup language (HTML) or XML User Interface Language (XUL). The layout of user interface elements is specified in a style sheet language, such as Cascading Style Sheets (CSS). Alternatively, interface <b>130</b> is specified in one or more other languages, such as Java, C, or C++.</p><p id="p-0049" num="0056">In one or more embodiments, a data repository <b>160</b> is any type of storage unit and/or device (e.g., a file system, database, collection of tables, or any other storage mechanism) for storing data. Further, a data repository <b>160</b> may include multiple different storage units and/or devices. The multiple different storage units and/or devices may or may not be of the same type or located at the same physical site. Further, a data repository <b>160</b> may be implemented or may execute on the same computing system as the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and action recommendation engine <b>140</b>. Alternatively, or additionally, a data repository <b>160</b> may be implemented or executed on a computing system separate from the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and action recommendation engine <b>140</b>. A data repository <b>104</b> may be communicatively coupled to the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and action recommendation engine <b>140</b> via a direct connection or via a network.</p><p id="p-0050" num="0057">Information describing the data tape attribute data <b>161</b>, data tape quality values <b>162</b>, calibration values <b>163</b>, qualification values <b>164</b>, and library metadata messages <b>165</b> may be implemented across any of components within the system <b>100</b>. However, this information is illustrated within the data repository <b>160</b> for purposes of clarity and explanation.</p><p id="p-0051" num="0058">In one or more embodiments, the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and action recommendation engine <b>140</b> refers to hardware and/or software configured to perform operations described herein for managing a data tape library <b>110</b> and analyzing data tapes. Examples of operations for analyzing data tapes of a data tape library are described below with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0052" num="0059">In an embodiment, the data tape control engine <b>120</b>, the data tape library <b>110</b>, or the data tape analysis and action recommendation engine <b>140</b> are implemented on one or more digital devices. The term &#x201c;digital device&#x201d; generally refers to any hardware device that includes a processor. A digital device may refer to a physical device executing an application or a virtual machine. Examples of digital devices include a computer, a tablet, a laptop, a desktop, a netbook, a server, a web server, a network policy server, a proxy server, a generic machine, a function-specific hardware device, a hardware router, a hardware switch, a hardware firewall, a hardware firewall, a hardware network address translator (NAT), a hardware load balancer, a mainframe, a television, a content receiver, a set-top box, a printer, a mobile handset, a smartphone, a personal digital assistant (&#x201c;PDA&#x201d;), a wireless receiver and/or transmitter, a base station, a communication management device, a router, a switch, a controller, an access point, and/or a client device.</p><p id="p-0053" num="0060">In one or more embodiments, the system <b>100</b> may include more or fewer components than the components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be local to or remote from each other. The components illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented in software and/or hardware. Each component may be distributed over multiple applications and/or machines. Multiple components may be combined into one application and/or machine. Operations described with respect to one component may instead be performed by another component.</p><p id="p-0054" num="0061">Additional embodiments and/or examples relating to computer networks are described below in Section <b>5</b>, titled &#x201c;Computer Networks and Cloud Networks.&#x201d;</p><heading id="h-0008" level="1">3. DATA TAPE MEDIA QUALITY VALIDATION AND ACTION RECOMMENDATION</heading><p id="p-0055" num="0062"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example set of operations for generating a data tape quality value in accordance with one or more embodiments. One or more operations illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be modified, rearranged, or omitted all together. Accordingly, the particular sequence of operations illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> should not be construed as limiting the scope of one or more embodiments.</p><p id="p-0056" num="0063">A system performs a data exchange between a data tape and a media drive (Operation <b>200</b>). For example, a data tape library controller may receive instructions from a host to perform a read operation. The data tape library controller controls a robot arm to insert a data cartridge into the media drive. The data tape hosts provides instructions to the media drive to perform the read operation. The media drive outputs read data to the data tape host.</p><p id="p-0057" num="0064">The system obtains one or more metadata messages from the data tape library based on a first set of sensed data (Operation <b>202</b>). The metadata messages include messages generated by the library controller as a result of the data exchange between the media drive and the data tape host. In one embodiment, the metadata messages may be as a result of a media validation request, in which a host requests a current operating status of a particular data tape. The metadata messages do not necessarily include the particular data that is read from or written to the data tape. Instead, the metadata messages include information describing the read, write, or validation operations.</p><p id="p-0058" num="0065">In one or more embodiments, the metadata messages include information regarding: (a) a status of a drive performing the read, write, or validation operation, (b) a status of a media (data tape or data tape cartridge) that is the subject of the read, write, or validation process, (c) a result of the read, write, or validation process (e.g., success or failure), (d) a description of any errors detected, (e) a recommended action to take as a result of the result or a detected error, and (f) additional look-up information, such as a sense key, sense code, or sense code qualifier.</p><p id="p-0059" num="0066">In one embodiment, the system generates and/or receives the metadata messages upon completion of a data exchange between the media drive and the data tape host. For example, upon completion of a read operation in which the media drive performs, or attempts to perform, a read operation to provide read data to a data tape host, the library controller may interface with the media drive to identify any error codes or notifications generated by the media drive as a result of the read operation. According to an alternative embodiment, the system generates and/or receives the metadata messages in real-time, during a read, write, or media validation operation. According to another embodiment, the system may review logs of the metadata messages to identify previously-detected errors or a previous operational status of a data tape or media drive.</p><p id="p-0060" num="0067">In one or more embodiments, the metadata messages include two or more types of messages associated with two or more levels of severity of an identified issue. For example, one type of alert may be a hard error alert. A data tape library generates a hard error alert when a requested read, write, or erasure operation could not be completed on the requested data tape. A hard error alert may be any error that prevents read/write operations, such as a total loss of the data tape, mechanical malfunction, media corruption, or extreme wear of the data tape. The hard error alerts may further include a recommendation to cease requesting use of the data tape for read, write, or erasure operations. Among multiple types of messages, hard error alerts are associated with the highest level of severity. Another type of alert may be an advisory alert. The advisory alert may indicate that an error occurred during a read/write operation, but that the operation was able to be performed successfully. Examples of advisory alerts include an alert that a data tape was write protected, an alert that a media drive failed to eject the data tape after an operation, an alert that read data was corrupted, an alert that a read/write operation completed successfully with one or more unsuccessful attempts, or an alert that an unknown issue prevented successful completion of a read/write operation. The advisory alert may also include one or more recommendations, such as a recommendation to migrate data from a data tape within a certain period of time, a recommendation to clean a data tape, a recommendation to repair a data tape, or a recommendation to perform a validation operation on the data tape. a notice that information included in the data tape should be moved to another data tape in the near future</p><p id="p-0061" num="0068">An informational-type alert occurs when a read/write operation occurs without any errors. For example, a library controller may be configured to generate an informational alert describing an amount of data associated with a read or write operation, an indication whether an operation was successful, a length of data tape traversed in an operation, or a status of a data tape or media drive.</p><p id="p-0062" num="0069">The system determines whether at least one of the metadata messages belongs to a first class of metadata messages among multiple different classes of metadata messages associated, respectively, with different levels of severity (Operation <b>204</b>). The first class may include, for example, a type of message indicating a critical failure of a data tape or data tape drive, rendering the data tape or the data tape drive unusable for future read or write operations.</p><p id="p-0063" num="0070">For example, during a read operation, the data tape library may generate 10 metadata messages. Eight of the messages may correspond to alerts, such as: &#x201c;read failed: data corrupted,&#x201d; &#x201c;read successful,&#x201d; &#x201c;read successful on third attempt,&#x201d; and &#x201c;100 GB read.&#x201d;</p><p id="p-0064" num="0071">One or more of the alerts may be associated with a respective recommendation. For example, the alert associated with the critical failure may be associated with a recommendation to immediately attempt to migrate any data from the data tape to another data tape. The alert associated with the &#x201c;read successful on third attempt&#x201d; message may be associated with a recommendation to clean the data tape. The alert associated with the &#x201c;read failed: data corrupted: message may be associated with a recommendation to perform a validation operation on the data tape.</p><p id="p-0065" num="0072">In one or more embodiments, a data tape library is in communication with a data tape library platform. The data tape library platform includes software and hardware for interfacing with the data tape library. The data tape library platform may correspond, for example, to the data tape analysis and action recommendation engine <b>140</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The data tape library platform may include software and hardware providing functionality to display to a user via a graphical user interface (GUI) information about data tape cartridges, data tapes, media drives, read/write/erasure operations, and recommendations for actions associated with the data tapes and media drives. The data tape library may generate a default recommendation based on software and hardware associated with the data tape library. The data tape library platform may receive the metadata messages from the data tape library. The data tape library platform may analyze the metadata messages and default recommendations from the data tape library to determine whether to present to a user one of the default recommendations or whether to present an alternative recommendation.</p><p id="p-0066" num="0073">Based on determining at least one message belongs to the first class of messages, the system identifies the action recommendation associated with the message (Operation <b>206</b>). For example, if the metadata message indicates the error is associated with a critical failure of a media drive, the system may identify the corresponding recommended action, generated by a data tape library together with the metadata message, to remove the data tape from the media drive, attempt the read, write or validation operation in another media drive, and refrain from using the media drive in future read, write, or validation operations.</p><p id="p-0067" num="0074">The system displays the recommended action on a GUI or automatically initiates the recommended action (Operation <b>208</b>). For example, upon receiving the metadata message and identifying the recommended actions, the system may automatically remove the data tape from the media drive and display a notification on a GUI describing the error and awaiting operator input whether to initiate a read, write, or verification operation on another media drive.</p><p id="p-0068" num="0075">In one or more embodiments, a library controller generates multiple metadata messages associated with the same read, write, or validation operation. The system may identify a weight value associated with each metadata message and initiate or recommend an action only based on the metadata message having the highest weight value. For example, the library controller may generate one metadata message with a recommendation to refrain from writing to a particular data tape and another metadata message with a recommendation to re-run a validation operation on the data tape. The system may identify the former metadata message as having a higher weight value. Consequently, the system may refrain from performing additional write operations to the data tape, and the system may refrain from performing another validation operation on the data tape.</p><p id="p-0069" num="0076">Upon determining that the metadata messages do not include any metadata message associated with the first class of messages, the system obtains a data tape quality value based on a second set of data (Operation <b>210</b>). According to one embodiment, the first class of messages is a high-severity-type error message. If the system determines that the metadata messages include alert-type or informational-type messages that do not include any high-severity-type error messages, the system may obtain the data tape quality value. The system may either retrieve a previously generated data tape quality value or generate a new data tape quality value.</p><p id="p-0070" num="0077">The data tape quality value may be based on: (a) a particular data tape error correction value representing detected errors associated with the data tape, (b) a particular value representing an amount of data processed (read/write operations performed on the data tape), and (c) a scaling factor. The scaling factor represents a relationship between the data tape error correction value, the value representing the amount of data processed in read/write operations of the data tape, and a degradation level of the data tape.</p><p id="p-0071" num="0078">According to one embodiment, the system calculates the data tape quality value based on an algorithm that includes a degradation coefficient. The algorithm may raise a product of (a) the particular data tape error correction value and (b) the particular value representing the amount data processed to an exponent value equal to the scaling factor. The degradation coefficient may be applied to the product of the data tape error correction value and the value representing the amount of data processed to indicate a weight applied to the product to generate the data tape quality value.</p><p id="p-0072" num="0079">In one embodiment, the data tape quality value is a data tape read quality value representing a readability of the data tape. The data tape read quality value may be generated without data representing write operations associated with the data tape. According to an alternative embodiment, the data tape quality value may include write data. A data tape quality value including write data may indicate a ratio of an actual density of recorded data to a maximum recordable density of data.</p><p id="p-0073" num="0080">The system may calculate the particular data tape error correction value based on tracking data tape errors associated with the data tape over time. The system may assign different weights to different types of errors. For example, the system may assign a greater weight to detected read errors that delay a read operation beyond a threshold delay time than to read errors that delay the read operation below the threshold delay time. For example, one read error may result in restarting a read operation, while another read error may be corrected using error correction processes without requiring restarting of the read operation. The system may store values representing types of read/write/erasure errors and a frequency of the errors. The system may calculate the particular data tape error correction value based on the stored information associated with the type and frequency of read, write, and/or erasure errors.</p><p id="p-0074" num="0081">In one embodiment, the particular data tape error correction value is a filtered &#x201c;total corrected read errors&#x201d; value. The &#x201c;total corrected read errors&#x201d; value represents a type of read error requiring physical rewinding of the data tape to re-read a portion of the data tape that was previously read, but which resulted in an error. Filtering the total corrected read errors value includes omitting from the value the re-reads that are not necessarily the result of read errors. For example, if a tape drive is known to re-read portions of the data tape when first beginning a read operation, the re-read operations at the beginning of the read operation may be omitted from the filtered &#x201c;total corrected read errors&#x201d; value. Otherwise, the total corrected read errors value may be artificially inflated.</p><p id="p-0075" num="0082">The system calculates the value representing the amount to data processed by tracking the data tape usage over time. According to one embodiment, the value representing the amount of data processed is measured in units of data, such as bytes (e.g., gigabytes, terabytes, etc.) Alternatively, the system may derive the value representing the amount of data processed by tracking a length of tape read from or written to, and deriving, based on a known amount of data per distance, the amount of data read from/written to the data tape. For example, the system may track read and/or write operations spanning 100 meters over time. It is noted that the tracked read/write distance may be more than, or less than, a total length of the data tape. For example, if a data tape has a length of 10 meters, the system may track a series of operations over time, each of which corresponds to a read/write distance (e.g., the distance of the data tape passing over a read/write head of a media drive) less than 10 meters. The sum of the read/write distances associated with the series of operations may add up to 100 meters.</p><p id="p-0076" num="0083">The system generates the scaling factor by applying a trained machine learning model to attributes of a data tape. The model generates a scaling factor for a particular data tape based on the attributes of the particular data tape. The scaling factor may be set by either a preproduction process (default scaling factor) or later as a sensitivity adjustment by a user or service provider. The scaling factor may also be set by an expert system via machine learning. The system may derive the scaling factor from a set of exchanges between data tapes and media drives. In one embodiment, attributes of data tapes used to define a scaling factor for a particular data tape or set of data tapes is collected at the end of an exchange between a data tape and a media drive.</p><p id="p-0077" num="0084">The system generates a data tape recommendation or initiates an action based on (a) the metadata messages and (b) the data tape quality value (Operation <b>212</b>). In one embodiment, the system generates the recommended action for the data tape using a trained machine learning model. The system trains the machine learning model using historical data including historical metadata messages, historical data tape quality values, and historical recommended actions. The historical data may also include information regarding whether the historical recommended actions successfully resolved errors. The system trains the machine learning model to generate recommended actions based on input data sets including a particular set of metadata messages and a particular data quality value for a data tape. In one embodiment, the system generates an expert system including a table of recommended actions corresponding to different combinations of metadata messages and data quality values.</p><p id="p-0078" num="0085">In one embodiment, the system applies a machine learning model to a data set including: (a) one or more metadata message generated by a data tape library controller and (b) a data tape quality value for the particular data tape. The data set may further include: (c) a media validation value for the data tape and (d) calibration and/or qualification values for a media drive that performed the read, write, or media validation operation.</p><p id="p-0079" num="0086">In another embodiment, the system refers to a table previously-generated using a machine learning model. The table may consider the data inputs (a)-(d), described above. For example, the table may indicate that if the data tape quality value is below a threshold level, generate a first recommendation when a first metadata message is received. The table may indicate that if the data tape quality value is above the threshold level, generate a second recommendation when the first metadata message is received. The table may indicate that when two metadata messages are received based on the same read, write, or validation operation, then the weights assigned to the messages, and the corresponding recommended actions associated with the messages, should depend on one or more additional factors. For example, the system may determine that if the data tape quality value is below a threshold level, a greater weight should be assigned to a first metadata message associated with a first error type than a second metadata message associated with a second error type. The system may further determine that if the data tape quality value is above the threshold level, a greater weight should be assigned to the second metadata message than the first metadata message. In one embodiment, the system generates a recommendation or initiates an action based on only the metadata message having the highest weight.</p><p id="p-0080" num="0087">In one embodiment, metadata messages may include default recommended actions. Based at least on the data tape quality value, the system-generated action recommendations may differ from the default recommended actions. In other words, a data tape library controller may generate a default recommendation based on a detected error. A recommendation engine according to one embodiment receives the metadata message including the detected error and default recommendation. The recommendation engine generates a recommendation different from the default recommendation based on both the metadata message and additional data. The additional data includes, for example the data tape quality value, and one or both of a media validation value and a media drive calibration or qualification value. For example, a library controller may generate one or more metadata messages subsequent to a data tape/media drive exchange indicating that a particular data tape is functioning properly. The library controller may generate a default recommendation to continue using the data tape based on the determination that the data tape is functioning properly. Based on applying the metadata messages and a data tape quality value as input data to a machine learning model, the system may determine that the data tape has reached an end of life specification based on the amount of data written to/read from the data tape. Accordingly, the system may generate an alternative recommendation, different from the default recommendation, to transfer the data from the data tape to a new data tape.</p><p id="p-0081" num="0088">In one or more embodiments, the system generates a recommendation for an action associated with a data tape based on performing a media validation operation. The system may perform the media validation operation and generate the corresponding recommendation only when a minimum amount of data has been processed using the data tape. For example, the system may calculate a &#x201c;wraps read&#x201d; metric. A &#x201c;wrap&#x201d; may be defined as a distance from one end of the data tape to the opposite end and back. The &#x201c;wraps read&#x201d; metric may be measured by measuring a number of rotations of the data tape to determine a distance of data tape that has been read from or written to. Alternatively, the &#x201c;wraps read&#x201d; metric may be calculated based on an amount of data written to and read from the data tape. For example, the system may calculate the &#x201c;wraps read&#x201d; metric by dividing a total amount of storage space on the data tape by an amount of data read from, or written to, the data tape. If the amount of data read from, or written to, the data tape is twice the amount of data storage space on the data tape, the system may determine that an equivalent of &#x201c;one wrap&#x201d; has been read from, or written to, the data tape. In one embodiment, the system only generates a recommendation or initiates an action once a minimum threshold number of wraps has been read. For example, the system may define 0.5 wraps (or an equivalent of a distance from one end of the data tape to the other) as the minimum amount of data read from or written to the data tape that is required to generate a recommendation. If the minimum wraps read threshold has not been met, the system may generate a notification to a display indicating that a media validation operation cannot be performed, and the corresponding recommendation for the data tape cannot be generated.</p><p id="p-0082" num="0089">In one or more embodiments, the system selects a subset of actions to recommend from among a superset of candidate actions. The superset of candidate actions may include recommended actions associated with metadata messages generated by a library controller. For example, upon performing a read/write operation, the library controller may generate 6 different metadata messages associated with 3 different recommended actions, including cleaning a data tape, validating the data tape, and copying the data from the data tape to a new data tape. The system may identify a weight value associated with each recommendation. According to one embodiment, the system calculates the weight value based on a severity of an error associated with a metadata message. For example, an error indicating that a portion of a read request had to be repeated three times prior to achieving a successful read request may be determined to be more severe than an error indicating that a read operation encountered data loss within a threshold amount. Accordingly, the system may assign a greater weight to the recommendation associated with the error indicating that a portion of a read request had to be repeated three times than to the error indicating that a read operation encountered data loss. The system may select as a recommended action the action associated with the greater weight value. For example, the error indicating that a portion of a read request had to be repeated three times may be associated with a recommended action to perform a validation operation on a data tape. The error indicating that a read operation encountered data loss may be associated with a recommended action to clean the data tape. Since the error indicating that a portion of a read request had to be repeated three times is associated with a greater weight value, the system may recommend validating the data tape as an action to perform. The system may refrain from recommending cleaning the data tape as an action to perform. According to one embodiment, the system generates a single recommendation from among the superset of recommendations associated with the metadata messages. The system may select the single recommendation based on its highest weight value among all the candidate recommendations associated with a set of metadata messages. According to an alternative embodiment, the system generates two or more recommendations from among the superset of candidate operations, based on determining that the two or more operations do not conflict. According to yet another embodiment, the system generates a ranked list of two or more recommendations from among the superset of candidate operations, based on determining that the two or more operations do not conflict. In these example embodiments, if two recommendations conflict (e.g., one recommendation is to transfer all the data from one data tape to another and stop using the data tape, and another recommendation is to re-evaluate the data tape after another 10 uses), the system may refrain from presenting the recommendation associated with the lower weight value.</p><p id="p-0083" num="0090">Upon generating an action recommendation, the system transmits the recommendation to a user interface or initiates the recommended action (Operation <b>214</b>). For example, if the recommended action is to begin to migrate data from a particular data tape, the system may generate a notification to a user interface to allow an operator to flag a particular data tape for data migration, to select another data tape to receive the data, and to select a time for data migration. Alternatively, the system may automatically initiate an action. For example, if the recommended action is to clean a media drive, the system may, without intervening user input, clean the media drive. If the recommended action is to re-run a media validation operation, the system may, without intervening user input, re-run the media validation operation a predetermined number of times.</p><p id="p-0084" num="0091">According to one or more embodiments, the system generates a confidence score associated with a recommendation presented to a user. The confidence score may be based on the data tape quality value of the data tape associated with the recommendation. For example, the system may present to the user a highest-ranked recommendation to inspect a data tape. If the associated data tape has a high data tape quality value, the system may provide a low confidence score associated with the recommendation, indicating that based on the high data tape quality value, it is unlikely that a problem detected during a data tape/media drive exchange originated with the data tape. Conversely, if the associated data tape has a low data tape quality value, the system may provide a high confidence score associated with the recommendation, indicating that based on the low data tape quality value, it is likely a problem detected during a data tape/media drive exchange originated with the data tape.</p><p id="p-0085" num="0092">While <figref idref="DRAWINGS">FIG. <b>2</b></figref> describes an embodiment in which a data tape quality value is considered when generating an action recommendation only for a particular class of metadata messages from a data tape library, in one or more embodiments, the system may always consider the data tape quality value when generating recommendations. In other words, in one embodiment, the system receives one or more metadata messages based on a read, write, or validation operation and proceeds to operation <b>210</b> to obtain a data tape quality value for the data tape that is the subject of the read, write, or validation operation.</p><heading id="h-0009" level="1">4. TRAINING A MACHINE LEARNING MODEL</heading><p id="p-0086" num="0093"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example set of operations for training a machine learning model in accordance with one or more embodiments. One or more operations illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be modified, rearranged, or omitted all together. Accordingly, the particular sequence of operations illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> should not be construed as limiting the scope of one or more embodiments.</p><p id="p-0087" num="0094">A system obtains historical data tape attribute data (Operation <b>302</b>). The historical data tape attribute data includes data associated with historical exchanges between data tapes and media drives. For each exchange, the system may identify: (a) a brand of data tape being accessed in a media access operation, (b) particular characteristics of the data tape, such as length, width of tape, tape material, tape thickness, and (c) historical quality information about the data tape. The system may further identify environmental conditions in which the tape is stored, such as temperature, humidity, and electromagnetic activity. Data tape attribute data may be obtained from one or more databases, data repositories, or product specifications. In addition, or in the alternative, data tape attribute data may be measured by the system. The system may collect and store additional data tape attribute data after each exchange between a data tape and a media drive in the system. The system may add the newly-obtained attribute data to the historical data tape attribute data. Examples of data tape attribute data include a number of write operations, amount of write data, tape distance associated with amount of write data, number of read operations, amount of read data, tape distance associated with amount of read data, number of erasure operations, amount of data erased, tape distance associated with amount of data erased, age of data tape, data tape type, data tape material, and data encoding type on data tape.</p><p id="p-0088" num="0095">According to one or more embodiments, the historical data tape attribute data includes metadata messages generated by a data tape library subsequent to performing a read, write, erasure, validation, or calibration operation. The historical data tape attribute data may further include a historical data tape quality value associated with a particular data tape at a particular point in time.</p><p id="p-0089" num="0096">The system generates a training data set (Operation <b>304</b>). The training data set includes a plurality of pairs of (a) historical data tape attribute data for a particular data tape, and (b) a recommended action associated with the data tape attribute data. For example, one data point in the training data set may include a plurality of metadata messages associated with a read/write exchange between a media drive and a data tape, a plurality of candidate recommendations associated, respectively, with the plurality of metadata messages, a data tape quality value associated with the data tape, and a historical recommended action.</p><p id="p-0090" num="0097">The historical data tape attribute data from which the training data set is generated may include the attribute data of other data tapes in a data tape library, of data tapes in other data tape libraries, and other attribute data from data tapes within the system or in other systems. For example, the system may access a database via a network, such as the Internet, to obtain attribute data for other data tapes. The historical scaling factors may be human-generated or machine-generated by machine learning models associated with the historical data tape systems.</p><p id="p-0091" num="0098">The system trains the machine learning model by applying a machine learning algorithm to identify relationships between different data tape attributes and selected recommendations (Operation <b>306</b>). The machine learning algorithm analyzes the training data set to identify data and patterns between sets of data tape attributes and selected recommendations. Examples of types of machine learning models include, but are not limited to, linear regression, logistic regression, linear discriminant analysis, classification and regression trees, na&#xef;ve Bayes, k-nearest neighbors, learning vector quantization, support vector machine, bagging and random forest, boosting, backpropagation, and/or clustering.</p><p id="p-0092" num="0099">In examples of supervised machine learning algorithms, the system may obtain feedback on the recommendations presented for sets of data tape attributes (operation <b>308</b>). The feedback may affirm that a generated recommendation corresponds to the set of data tape attributes. In other examples, the feedback may indicate that a selected recommendation is not valid for a particular set of data tape attributes. In this latter situation, a user may replace a recommended action generated by the machine learning algorithm with an alternative recommended action. Based on the detected similarities and/or feedback, the machine learning training set may be updated, thereby improving its analytical accuracy (Operation <b>310</b>). Once updated, the ML model may be further training by optionally applying it to additional training materials.</p><p id="p-0093" num="0100">Upon completion of the training, the system applies the trained machine learning model to particular sets of attribute data associated with a particular data tapes to generate recommended actions for the particular sets of attribute data.</p><heading id="h-0010" level="1">5. EXAMPLE EMBODIMENT</heading><p id="p-0094" num="0101">A detailed example is described below for purposes of clarity. Components and/or operations described below should be understood as one specific example which may not be applicable to certain embodiments. Accordingly, components and/or operations described below should not be construed as limiting the scope of any of the claims.</p><p id="p-0095" num="0102"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a system <b>400</b> that generates a recommendation for one or both of a data tape and a media drive based on data obtained from a performed operation, according to an example embodiment.</p><p id="p-0096" num="0103">A data tape library <b>410</b> includes a plurality of data tape cartridges <b>411</b>. Upon receiving a request to perform a read/write operation, a library controller <b>414</b> controls a robot arm or other movement mechanism to select a data tape cartridge <b>411</b> and insert the data tape cartridge into a media drive <b>413</b>. The media drive <b>413</b> performs the read/write operation on the data tape <b>412</b>. As the media drive <b>413</b> performs the read/write operation, the library controller <b>414</b> detects events associated with the read/write operation. In the example embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the library controller <b>414</b> detects a set of events associated with an error code and multiple alerts. The library controller <b>414</b> transmits metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>to the data tape control engine <b>420</b> together with read data and/or a confirmation of written data.</p><p id="p-0097" num="0104">The library controller <b>414</b> associates default recommendations with the errors and/or alerts. The default recommendations may be maintained in a table. For example, during operation, the media drive <b>413</b> may output the error code &#x201c;AA1.&#x201d; The error code may not be associated with the specifics of the event associated with the error code. According to an alternative example embodiment, the error code may be a sense code, such as 0x0D, 0x3A, etc. The library controller <b>414</b> consults a table to identify a default recommended action associated with the error code AA1: Inspect Media Drive. The library controller <b>414</b> transmits to the data tape control engine <b>420</b> a metadata message <b>421</b><i>a </i>that specifies the error code AA1 and the corresponding default recommended action. Similarly, during operation, the media drive <b>413</b> outputs another error code. The library controller <b>414</b> consults a table to identify an alert: &#x201c;Multiple re-reads required&#x201d; associated with the error code. The library controller <b>414</b> further consults a table to identify a default recommended action &#x201c;validate data tape&#x201d; associated with the alert. The library controller <b>414</b> transmits to the data tape control engine <b>420</b> a metadata message <b>421</b><i>b </i>including the alert and the default recommended action.</p><p id="p-0098" num="0105">The data tape control engine <b>420</b> feeds the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n</i>, including the associated default recommendations, to the recommendation engine <b>440</b>. The recommendation engine <b>440</b> applies a set of rules to the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>via rules engine <b>441</b> to determine whether to apply the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>to a machine learning model <b>442</b> to generate a recommendation. In particular, the rules engine <b>441</b> determines whether any of the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>is associated with a critical error. The rules engine <b>441</b> applies a set of rules that categorizes error codes and alerts as either &#x201c;critical&#x201d; errors or &#x201c;non-critical&#x201d; errors. A critical-type error may be an error that prevents the media drive <b>413</b> from completing a requested read/write operation. A non-critical error may be an error that is encountered during the read/write operation, but that does not prevent the media drive <b>413</b> from completing the read/write operation.</p><p id="p-0099" num="0106">If the rules engine <b>441</b> determines that one or more metadata messages is associated with a critical-type error, the rules engine <b>441</b> applies a set of rules to (a) rank the critical-type errors, and (b) generate a recommendation based on the ranking. When the rules engine <b>441</b> detects a critical-type error, the recommendation engine <b>440</b> may bypass the machine learning model <b>442</b> to generate a recommended action <b>443</b>. For example, the rules engine <b>441</b> may apply a set of rules specifying that the recommendation engine will generate only one recommended action <b>443</b> based on detecting a plurality of errors and/or alerts. The rules engine <b>441</b> may detect three critical-type errors. The rules engine <b>441</b> ranks the errors according to predefined criteria. For example, the predefined criteria may rank the errors according to a severity of the detected errors. The rules engine <b>441</b> selects only the highest-ranked error to perform a corresponding default recommended action. The recommendation engine <b>440</b> generates the recommended action <b>443</b> based on the default recommended action associated with the highest-ranked error identified by the rules engine <b>441</b>.</p><p id="p-0100" num="0107">In the particular example embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the rules engine determines that none of the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>associated with a particular read/write operation is a critical-type error. In response to determining that none of the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>associated with a particular read/write operation is a critical-type error, the recommendation engine <b>440</b> applies the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>and additional data to the machine learning model <b>442</b> to generate a recommended action <b>443</b>. The additional data includes at least a data tape quality value <b>462</b> for the particular data tape <b>412</b> associated with the read/write operation performed by the data tape library <b>410</b>. The additional data may further include a calibration value <b>463</b> or qualification value <b>464</b> of a media drive <b>413</b> associated with the read/write operation, and/or data tape attribute data <b>461</b>. Example data tape attribute data <b>461</b> includes: a type of data tape, a brand of data tape, a material making up the data tape, dimensions of the data tape (such as thickness, width, length), media characteristics (such as compression levels, amount of data stored, number of over-writes on the data tape), and environmental attributes (such as humidity, temperature, light levels, and magnetic field strengths of an environment in which the data tape is stored). The data tape attribute data <b>461</b>, data tape quality value <b>462</b>, calibration value <b>463</b>, and qualification value <b>464</b> may be stored in a data repository <b>460</b>.</p><p id="p-0101" num="0108">The machine learning model <b>442</b> generates a recommended action <b>443</b> based on (a) the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n</i>, (b) the data tape quality value <b>462</b> of the data tape <b>412</b>, and optionally based on one or more of the calibration value <b>463</b> or qualification value <b>464</b> associated with the media drive <b>413</b> and the data tape attribute data <b>461</b> associated with the data tape <b>412</b>. In the embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the recommendation engine <b>440</b> generates only a single recommended action <b>443</b> in response to receiving as input multiple metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>and multiple different default recommended actions. According to an alternative example embodiment, the recommendation engine <b>440</b> may generate a set of ranked recommended actions. The system <b>400</b> presents the recommended action <b>443</b> to a user via the user interface <b>430</b>.</p><p id="p-0102" num="0109">According to the example embodiment illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the machine learning model <b>442</b> is a trained model that receives as input data an input vector based on (a) the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>and (b) the data tape quality value <b>462</b> for the data tape <b>412</b>. The machine learning model <b>442</b> may also receive as input data vector values associated with a calibration value <b>463</b>, a qualification value <b>464</b>, and/or data tape attribute data <b>461</b>. The machine learning model <b>442</b> runs the input vector through a neural network to generate an output value specifying the recommended action <b>443</b>. For example, an output layer of the machine learning model may comprise twenty neurons, each associated with a different recommended action.</p><p id="p-0103" num="0110">According to an alternative example embodiment, the machine learning model <b>442</b> may generate an expert system. For example, the rules engine <b>441</b> may be embodied as the expert system. The recommendation engine <b>440</b> applies the input data, including the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n</i>, to the expert system to generate the recommended action <b>443</b>. The machine learning model <b>442</b> may be applied to a data set including every known error code and alert generated by the library controller <b>414</b>. The data set may further include media drive calibration values <b>463</b> and qualification values <b>464</b>. The data set may further include data tape quality values <b>462</b> and attribute data <b>461</b>. The machine learning model <b>442</b> generates a set of rules identifying, for each recommended action, a set of (a) metadata messages, (b) data tape attribute data, (c) data tape quality values, (d) calibration values, and (e) qualification values. According to this alternative embodiment, during operation, the recommendation engine <b>440</b> applies the metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>and additional data tape data and media drive data to the expert system. The expert system matches the input metadata messages <b>421</b><i>a</i>-<b>421</b><i>n </i>and additional data tape data and media drive data to a corresponding recommended action <b>443</b>. Instead of applying the input data to a neural network, the recommendation engine <b>440</b> applies a set of rules, generated by a machine learning model, to the input data.</p><heading id="h-0011" level="1">6. COMPUTER NETWORKS AND CLOUD NETWORKS</heading><p id="p-0104" num="0111">In one or more embodiments, a computer network provides connectivity among a set of nodes. The nodes may be local to and/or remote from each other. The nodes are connected by a set of links. Examples of links include a coaxial cable, an unshielded twisted cable, a copper cable, an optical fiber, and a virtual link.</p><p id="p-0105" num="0112">A subset of nodes implements the computer network. Examples of such nodes include a switch, a router, a firewall, and a network address translator (NAT). Another subset of nodes uses the computer network. Such nodes (also referred to as &#x201c;hosts&#x201d;) may execute a client process and/or a server process. A client process makes a request for a computing service (such as, execution of a particular application, and/or storage of a particular amount of data). A server process responds by executing the requested service and/or returning corresponding data.</p><p id="p-0106" num="0113">A computer network may be a physical network, including physical nodes connected by physical links. A physical node is any digital device. A physical node may be a function-specific hardware device, such as a hardware switch, a hardware router, a hardware firewall, and a hardware NAT. Additionally or alternatively, a physical node may be a generic machine that is configured to execute various virtual machines and/or applications performing respective functions. A physical link is a physical medium connecting two or more physical nodes. Examples of links include a coaxial cable, an unshielded twisted cable, a copper cable, and an optical fiber.</p><p id="p-0107" num="0114">A computer network may be an overlay network. An overlay network is a logical network implemented on top of another network (such as, a physical network). Each node in an overlay network corresponds to a respective node in the underlying network. Hence, each node in an overlay network is associated with both an overlay address (to address to the overlay node) and an underlay address (to address the underlay node that implements the overlay node). An overlay node may be a digital device and/or a software process (such as, a virtual machine, an application instance, or a thread) A link that connects overlay nodes is implemented as a tunnel through the underlying network. The overlay nodes at either end of the tunnel treat the underlying multi-hop path between them as a single logical link. Tunneling is performed through encapsulation and decapsulation.</p><p id="p-0108" num="0115">In an embodiment, a client may be local to and/or remote from a computer network. The client may access the computer network over other computer networks, such as a private network or the Internet. The client may communicate requests to the computer network using a communications protocol, such as Hypertext Transfer Protocol (HTTP). The requests are communicated through an interface, such as a client interface (such as a web browser), a program interface, or an application programming interface (API).</p><p id="p-0109" num="0116">In an embodiment, a computer network provides connectivity between clients and network resources. Network resources include hardware and/or software configured to execute server processes. Examples of network resources include a processor, a data storage, a virtual machine, a container, and/or a software application. Network resources are shared amongst multiple clients. Clients request computing services from a computer network independently of each other. Network resources are dynamically assigned to the requests and/or clients on an on-demand basis. Network resources assigned to each request and/or client may be scaled up or down based on, for example, (a) the computing services requested by a particular client, (b) the aggregated computing services requested by a particular tenant, and/or (c) the aggregated computing services requested of the computer network. Such a computer network may be referred to as a &#x201c;cloud network.&#x201d;</p><p id="p-0110" num="0117">In an embodiment, a service provider provides a cloud network to one or more end users. Various service models may be implemented by the cloud network, including but not limited to Software-as-a-Service (SaaS), Platform-as-a-Service (PaaS), and Infrastructure-as-a-Service (IaaS). In SaaS, a service provider provides end users the capability to use the service provider's applications, which are executing on the network resources. In PaaS, the service provider provides end users the capability to deploy custom applications onto the network resources. The custom applications may be created using programming languages, libraries, services, and tools supported by the service provider. In IaaS, the service provider provides end users the capability to provision processing, storage, networks, and other fundamental computing resources provided by the network resources. Any arbitrary applications, including an operating system, may be deployed on the network resources.</p><p id="p-0111" num="0118">In an embodiment, various deployment models may be implemented by a computer network, including but not limited to a private cloud, a public cloud, and a hybrid cloud. In a private cloud, network resources are provisioned for exclusive use by a particular group of one or more entities (the term &#x201c;entity&#x201d; as used herein refers to a corporation, organization, person, or other entity). The network resources may be local to and/or remote from the premises of the particular group of entities. In a public cloud, cloud resources are provisioned for multiple entities that are independent from each other (also referred to as &#x201c;tenants&#x201d; or &#x201c;customers&#x201d;). The computer network and the network resources thereof are accessed by clients corresponding to different tenants. Such a computer network may be referred to as a &#x201c;multi-tenant computer network.&#x201d; Several tenants may use a same particular network resource at different times and/or at the same time. The network resources may be local to and/or remote from the premises of the tenants. In a hybrid cloud, a computer network comprises a private cloud and a public cloud. An interface between the private cloud and the public cloud allows for data and application portability. Data stored at the private cloud and data stored at the public cloud may be exchanged through the interface. Applications implemented at the private cloud and applications implemented at the public cloud may have dependencies on each other. A call from an application at the private cloud to an application at the public cloud (and vice versa) may be executed through the interface.</p><p id="p-0112" num="0119">In an embodiment, tenants of a multi-tenant computer network are independent of each other. For example, a business or operation of one tenant may be separate from a business or operation of another tenant. Different tenants may demand different network requirements for the computer network. Examples of network requirements include processing speed, amount of data storage, security requirements, performance requirements, throughput requirements, latency requirements, resiliency requirements, Quality of Service (QoS) requirements, tenant isolation, and/or consistency. The same computer network may need to implement different network requirements demanded by different tenants.</p><p id="p-0113" num="0120">In one or more embodiments, in a multi-tenant computer network, tenant isolation is implemented to ensure that the applications and/or data of different tenants are not shared with each other. Various tenant isolation approaches may be used.</p><p id="p-0114" num="0121">In an embodiment, each tenant is associated with a tenant ID. Each network resource of the multi-tenant computer network is tagged with a tenant ID. A tenant is permitted access to a particular network resource only if the tenant and the particular network resources are associated with a same tenant ID.</p><p id="p-0115" num="0122">In an embodiment, each tenant is associated with a tenant ID. Each application, implemented by the computer network, is tagged with a tenant ID. Additionally or alternatively, each data structure and/or dataset, stored by the computer network, is tagged with a tenant ID. A tenant is permitted access to a particular application, data structure, and/or dataset only if the tenant and the particular application, data structure, and/or dataset are associated with a same tenant ID.</p><p id="p-0116" num="0123">As an example, each database implemented by a multi-tenant computer network may be tagged with a tenant ID. Only a tenant associated with the corresponding tenant ID may access data of a particular database. As another example, each entry in a database implemented by a multi-tenant computer network may be tagged with a tenant ID. Only a tenant associated with the corresponding tenant ID may access data of a particular entry. However, the database may be shared by multiple tenants.</p><p id="p-0117" num="0124">In an embodiment, a subscription list indicates which tenants have authorization to access which applications. For each application, a list of tenant IDs of tenants authorized to access the application is stored. A tenant is permitted access to a particular application only if the tenant ID of the tenant is included in the subscription list corresponding to the particular application.</p><p id="p-0118" num="0125">In an embodiment, network resources (such as digital devices, virtual machines, application instances, and threads) corresponding to different tenants are isolated to tenant-specific overlay networks maintained by the multi-tenant computer network. As an example, packets from any source device in a tenant overlay network may only be transmitted to other devices within the same tenant overlay network. Encapsulation tunnels are used to prohibit any transmissions from a source device on a tenant overlay network to devices in other tenant overlay networks. Specifically, the packets, received from the source device, are encapsulated within an outer packet. The outer packet is transmitted from a first encapsulation tunnel endpoint (in communication with the source device in the tenant overlay network) to a second encapsulation tunnel endpoint (in communication with the destination device in the tenant overlay network). The second encapsulation tunnel endpoint decapsulates the outer packet to obtain the original packet transmitted by the source device. The original packet is transmitted from the second encapsulation tunnel endpoint to the destination device in the same particular overlay network.</p><heading id="h-0012" level="1">7. MISCELLANEOUS; EXTENSIONS</heading><p id="p-0119" num="0126">Embodiments are directed to a system with one or more devices that include a hardware processor and that are configured to perform any of the operations described herein and/or recited in any of the claims below.</p><p id="p-0120" num="0127">In an embodiment, a non-transitory computer readable storage medium comprises instructions which, when executed by one or more hardware processors, causes performance of any of the operations described herein and/or recited in any of the claims.</p><p id="p-0121" num="0128">Any combination of the features and functionalities described herein may be used in accordance with one or more embodiments. In the foregoing specification, embodiments have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction.</p><heading id="h-0013" level="1">8. HARDWARE OVERVIEW</heading><p id="p-0122" num="0129">According to one embodiment, the techniques described herein are implemented by one or more special-purpose computing devices. The special-purpose computing devices may be hard-wired to perform the techniques, or may include digital electronic devices such as one or more application-specific integrated circuits (ASICs), field programmable gate arrays (FPGAs), or network processing units (NPUs) that are persistently programmed to perform the techniques, or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware, memory, other storage, or a combination. Such special-purpose computing devices may also combine custom hard-wired logic, ASICs, FPGAs, or NPUs with custom programming to accomplish the techniques. The special-purpose computing devices may be desktop computer systems, portable computer systems, handheld devices, networking devices or any other device that incorporates hard-wired and/or program logic to implement the techniques.</p><p id="p-0123" num="0130">For example, <figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram that illustrates a computer system <b>500</b> upon which an embodiment of the invention may be implemented. Computer system <b>500</b> includes a bus <b>502</b> or other communication mechanism for communicating information, and a hardware processor <b>504</b> coupled with bus <b>502</b> for processing information. Hardware processor <b>504</b> may be, for example, a general purpose microprocessor.</p><p id="p-0124" num="0131">Computer system <b>500</b> also includes a main memory <b>506</b>, such as a random access memory (RAM) or other dynamic storage device, coupled to bus <b>502</b> for storing information and instructions to be executed by processor <b>504</b>. Main memory <b>506</b> also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor <b>504</b>. Such instructions, when stored in non-transitory storage media accessible to processor <b>504</b>, render computer system <b>500</b> into a special-purpose machine that is customized to perform the operations specified in the instructions.</p><p id="p-0125" num="0132">Computer system <b>500</b> further includes a read only memory (ROM) <b>508</b> or other static storage device coupled to bus <b>502</b> for storing static information and instructions for processor <b>504</b>. A storage device <b>510</b>, such as a magnetic disk or optical disk, is provided and coupled to bus <b>502</b> for storing information and instructions.</p><p id="p-0126" num="0133">Computer system <b>500</b> may be coupled via bus <b>502</b> to a display <b>512</b>, such as a cathode ray tube (CRT), for displaying information to a computer user. An input device <b>514</b>, including alphanumeric and other keys, is coupled to bus <b>502</b> for communicating information and command selections to processor <b>504</b>. Another type of user input device is cursor control <b>516</b>, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor <b>504</b> and for controlling cursor movement on display <b>512</b>. This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.</p><p id="p-0127" num="0134">Computer system <b>500</b> may implement the techniques described herein using customized hard-wired logic, one or more ASICs or FPGAs, firmware and/or program logic which in combination with the computer system causes or programs computer system <b>500</b> to be a special-purpose machine. According to one embodiment, the techniques herein are performed by computer system <b>500</b> in response to processor <b>504</b> executing one or more sequences of one or more instructions contained in main memory <b>506</b>. Such instructions may be read into main memory <b>506</b> from another storage medium, such as storage device <b>510</b>. Execution of the sequences of instructions contained in main memory <b>506</b> causes processor <b>504</b> to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions.</p><p id="p-0128" num="0135">The term &#x201c;storage media&#x201d; as used herein refers to any non-transitory media that store data and/or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non-volatile media and/or volatile media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device <b>510</b>. Volatile media includes dynamic memory, such as main memory <b>506</b>. Common forms of storage media include, for example, a floppy disk, a flexible disk, hard disk, solid state drive, magnetic tape, or any other magnetic data storage medium, a CD-ROM, any other optical data storage medium, any physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, NVRAM, any other memory chip or cartridge, content-addressable memory (CAM), and ternary content-addressable memory (TCAM).</p><p id="p-0129" num="0136">Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example, transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus <b>502</b>. Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.</p><p id="p-0130" num="0137">Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor <b>504</b> for execution. For example, the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system <b>500</b> can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus <b>502</b>. Bus <b>502</b> carries the data to main memory <b>506</b>, from which processor <b>504</b> retrieves and executes the instructions. The instructions received by main memory <b>506</b> may optionally be stored on storage device <b>510</b> either before or after execution by processor <b>504</b>.</p><p id="p-0131" num="0138">Computer system <b>500</b> also includes a communication interface <b>518</b> coupled to bus <b>502</b>. Communication interface <b>518</b> provides a two-way data communication coupling to a network link <b>520</b> that is connected to a local network <b>522</b>. For example, communication interface <b>518</b> may be an integrated services digital network (ISDN) card, cable modem, satellite modem, or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface <b>518</b> may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface <b>518</b> sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.</p><p id="p-0132" num="0139">Network link <b>520</b> typically provides data communication through one or more networks to other data devices. For example, network link <b>520</b> may provide a connection through local network <b>522</b> to a host computer <b>524</b> or to data equipment operated by an Internet Service Provider (ISP) <b>526</b>. ISP <b>526</b> in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the &#x201c;Internet&#x201d; <b>528</b>. Local network <b>522</b> and Internet <b>528</b> both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link <b>520</b> and through communication interface <b>518</b>, which carry the digital data to and from computer system <b>500</b>, are example forms of transmission media.</p><p id="p-0133" num="0140">Computer system <b>500</b> can send messages and receive data, including program code, through the network(s), network link <b>520</b> and communication interface <b>518</b>. In the Internet example, a server <b>530</b> might transmit a requested code for an application program through Internet <b>528</b>, ISP <b>526</b>, local network <b>522</b> and communication interface <b>518</b>.</p><p id="p-0134" num="0141">The received code may be executed by processor <b>504</b> as it is received, and/or stored in storage device <b>510</b>, or other non-volatile storage for later execution.</p><p id="p-0135" num="0142">In the foregoing specification, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A non-transitory computer readable medium comprising instructions which, when executed by one or more hardware processors, causes performance of operations comprising:<claim-text>training a machine learning model to generate action recommendations for data tape cartridges;</claim-text><claim-text>obtaining, for a data tape cartridge, at least one metadata message based on a first set of sensed data associated with an interaction of the data tape cartridge with a first media drive;</claim-text><claim-text>obtaining a data tape quality value based on a second set of sensed data associated with the data tape cartridge, the second set of sensed data based on additional interactions of the data tape cartridge with one or more media drives, including the first media drive; and</claim-text><claim-text>applying the machine learning model to (1) attribute data from the at least one metadata message, and (2) the data tape quality value, to generate a first action recommendation for the data tape cartridge.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one metadata message comprises a plurality of metadata messages,<claim-text>wherein the machine learning model is configured to identify a particular metadata message among the plurality of metadata messages as having a priority over each other metadata message among the plurality of metadata messages, and</claim-text><claim-text>wherein the machine learning model is configured to generate the first action recommendation based on a recommendation mapped to the particular metadata message.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the first action recommendation comprises:<claim-text>mapping to a second action recommendation, by the machine learning model, a data set including (1) the attribute data from the at least one metadata message, and (2) the data tape quality value,</claim-text><claim-text>wherein the at least one metadata message includes a default action recommendation,</claim-text><claim-text>wherein the first action recommendation is selected, by the machine learning model, from among a set of action recommendations including the default action recommendation, and</claim-text><claim-text>wherein the first action recommendation is different from the default action recommendation.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The medium of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the at least one metadata message is a metadata message indicating the data tape cartridge is at an end-of-life,<claim-text>wherein the default action recommendation is to migrate data from the data tape cartridge to another data tape cartridge, and</claim-text><claim-text>wherein, based on the data tape quality value indicating the data tape cartridge is in usable condition, the first action recommendation does not include migrating the data from the data tape cartridge to another data tape cartridge.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>providing the first action recommendation to a graphical user interface (GUI); and</claim-text><claim-text>providing to the GUI, together with the first action recommendation, a confidence score associated with the first action recommendation, the confidence score based on the data tape quality value.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The medium of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the confidence score is further based on at least one of: (a) a calibration score associated with the first media drive, and (b) a qualification score associated with the first media drive.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first action recommendation includes at least one of:<claim-text>(1) use a different media drive to perform the operation,</claim-text><claim-text>(2) migrate data from the data tape cartridge to another data tape cartridge,</claim-text><claim-text>(3) replace the data tape with another data tape having a higher quality grade,</claim-text><claim-text>(4) replace the data tape with another data tape compatible with the first media drive, and repeat the operation</claim-text><claim-text>(5) migrate data to another data tape cartridge and do not use the data tape cartridge,</claim-text><claim-text>(6) type of error unknown, no recommendation is possible</claim-text><claim-text>(7) clean the first media drive,</claim-text><claim-text>(8) clean a data tape of the data tape cartridge,</claim-text><claim-text>(9) operation failure&#x2014;re-run the operation.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein training the machine learning model comprises:<claim-text>obtaining historical metadata message attribute data and historical data tape quality values;</claim-text><claim-text>generating training data sets, each training data set comprising:</claim-text><claim-text>a set of one or more metadata messages associated with a particular exchange between a particular data tape and a particular media drive;</claim-text><claim-text>a particular data tape quality value of the particular data tape;</claim-text><claim-text>a particular action performed by a system responsive to the set of one or more metadata messages, and</claim-text><claim-text>an indication of a success or failure of the particular action performed by the system; and</claim-text><claim-text>training a machine learning algorithm using the training data sets.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A non-transitory computer readable medium comprising instructions which, when executed by one or more hardware processors, causes performance of operations comprising:<claim-text>obtaining, for a data tape cartridge, a plurality of metadata messages based on a first set of sensed data associated with an interaction of the data tape cartridge with a media drive;</claim-text><claim-text>obtaining a data tape quality value based on a second set of sensed data associated with the data tape cartridge;</claim-text><claim-text>identifying a first metadata message among the plurality of metadata messages having a highest weight value; and</claim-text><claim-text>generating, for the data tape cartridge, a first action recommendation based on the first metadata message,</claim-text><claim-text>wherein generating the first action recommendation includes looking up the first metadata message on a table mapping the first metadata message to the first action, and</claim-text><claim-text>wherein the first action recommendation includes a confidence level value based on the data tape quality value.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A method, comprising:<claim-text>training a machine learning model to generate action recommendations for data tape cartridges;</claim-text><claim-text>obtaining, for a data tape cartridge, at least one metadata message based on a first set of sensed data associated with an interaction of the data tape cartridge with a first media drive;</claim-text><claim-text>obtaining a data tape quality value based on a second set of sensed data associated with the data tape cartridge, the second set of sensed data based on additional interactions of the data tape cartridge with one or more media drives, including the first media drive; and</claim-text><claim-text>applying the machine learning model to (1) attribute data from the at least one metadata message, and (2) the data tape quality value to generate a first action recommendation for the data tape cartridge.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the at least one metadata message comprises a plurality of metadata messages, and<claim-text>wherein the machine learning model is configured to identify a particular metadata message among the plurality of metadata messages as having a priority over each other metadata message among the plurality of metadata messages, and</claim-text><claim-text>wherein the machine learning model is configured to generate the first action recommendation based on a recommendation mapped to the particular metadata message.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein generating the first action recommendation comprises:<claim-text>mapping to a second action recommendation, by the machine learning model, a data set including (1) the attribute data from the at least one metadata message, and (2) the data tape quality value,</claim-text><claim-text>wherein the at least one metadata message includes a default action recommendation,</claim-text><claim-text>wherein the first action recommendation is selected, by the machine learning model, from among a set of action recommendations including the default action recommendation, and</claim-text><claim-text>wherein the first action recommendation is different from the default action recommendation.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the at least one metadata message is a metadata message indicating the data tape cartridge is at an end-of-life,<claim-text>wherein the default action recommendation is to migrate data from the data tape cartridge to another data tape cartridge, and</claim-text><claim-text>wherein, based on the data tape quality value indicating the data tape cartridge is in usable condition, the first action recommendation does not include migrating the data from the data tape cartridge to another data tape cartridge.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>providing the first action recommendation to a graphical user interface (GUI); and</claim-text><claim-text>providing to the GUI, together with the first action recommendation, a confidence score associated with the first action recommendation, the confidence score based on the data tape quality value.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the confidence score is further based on at least one of: (a) a calibration score associated with the first media drive, and (b) a qualification score associated with the first media drive.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A system, comprising:<claim-text>one or more processors; and</claim-text><claim-text>memory storing instructions that, when executed by the one or more processors, cause the system to perform operations comprising:</claim-text><claim-text>training a machine learning model to generate action recommendations for data tape cartridges;</claim-text><claim-text>obtaining, for a data tape cartridge, at least one metadata message based on a first set of sensed data associated with an interaction of the data tape cartridge with a first media drive;</claim-text><claim-text>obtaining a data tape quality value based on a second set of sensed data associated with the data tape cartridge, the second set of sensed data based on additional interactions of the data tape cartridge with one or more media drives, including the first media drive; and</claim-text><claim-text>applying the machine learning model to (1) attribute data from the at least one metadata message, and (2) the data tape quality value to generate a first action recommendation for the data tape cartridge.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the at least one metadata message comprises a plurality of metadata messages,<claim-text>wherein the machine learning model is configured to identify a particular metadata message among the plurality of metadata messages as having a priority over each other metadata message among the plurality of metadata messages, and</claim-text><claim-text>wherein the machine learning model is configured to generate the first action recommendation based on a recommendation mapped to the particular metadata message.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein generating the first action recommendation comprises:<claim-text>mapping to a second action recommendation, by the machine learning model, a data set including (1) the attribute data from the at least one metadata message, and (2) the data tape quality value,</claim-text><claim-text>wherein the at least one metadata message includes a default action recommendation,</claim-text><claim-text>wherein the first action recommendation is selected, by the machine learning model, from among a set of action recommendations including the default action recommendation, and</claim-text><claim-text>wherein the first action recommendation is different from the default action recommendation.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the at least one metadata message is a metadata message indicating the data tape cartridge is at an end-of-life,<claim-text>wherein the default action recommendation is to migrate data from the data tape cartridge to another data tape cartridge, and</claim-text><claim-text>wherein, based on the data tape quality value indicating the data tape cartridge is in usable condition, the first action recommendation does not include migrating the data from the data tape cartridge to another data tape cartridge.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the operations further comprise:<claim-text>providing the first action recommendation to a graphical user interface (GUI); and</claim-text><claim-text>providing to the GUI, together with the first action recommendation, a confidence score associated with the first action recommendation, the confidence score based on the data tape quality value.</claim-text></claim-text></claim></claims></us-patent-application>