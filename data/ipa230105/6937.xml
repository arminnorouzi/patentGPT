<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006938A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006938</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17745240</doc-number><date>20220516</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>47</main-group><subgroup>25</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>47</main-group><subgroup>25</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">SYSTEM AND METHOD FOR PERFORMING RATE ADAPTATION AND MULTIPLEXING OF CONSTANT BIT RATE (CBR) CLIENT DATA FOR TRANSMISSION OVER A METRO TRANSPORT NETWORK (MTN)</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63326989</doc-number><date>20220404</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63216938</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Microchip Technology Inc.</orgname><address><city>Chandler</city><state>AZ</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>GORSHE</last-name><first-name>Steven Scott</first-name><address><city>Beaverton</city><state>OR</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Mok</last-name><first-name>Winston</first-name><address><city>Vancouver</city><country>CA</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Microchip Technology Inc.</orgname><role>02</role><address><city>Chandler</city><state>AZ</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system and method for performing rate adaptation and multiplexing of constant bit rate (CBR) client data for transmission over a Metro Transport Network (MTN) by defining a plurality of plurality of generic mapping procedure (GMP) thread frames for a respective stream of two or more streams of 64B/66B-encoded blocks of CR client data, defining a plurality of pseudo-Ethernet packets, mapping the plurality of GMP thread frames into consecutive pseudo-Ethernet packets, assembling a stream of GMP multiplexing frames comprising the consecutive pseudo-Ethernet packets, inserting a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames and inserting an MTN path overhead (POH) frame into the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="152.40mm" wi="158.75mm" file="US20230006938A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="188.21mm" wi="178.31mm" file="US20230006938A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="210.74mm" wi="81.36mm" orientation="landscape" file="US20230006938A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="237.07mm" wi="160.61mm" orientation="landscape" file="US20230006938A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="231.99mm" wi="172.13mm" file="US20230006938A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="192.11mm" wi="178.31mm" file="US20230006938A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="158.41mm" wi="178.73mm" file="US20230006938A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="227.84mm" wi="130.98mm" file="US20230006938A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="213.02mm" wi="155.79mm" file="US20230006938A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="216.24mm" wi="177.21mm" file="US20230006938A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="149.86mm" wi="177.38mm" file="US20230006938A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="166.96mm" wi="156.72mm" file="US20230006938A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="215.73mm" wi="177.29mm" file="US20230006938A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="158.50mm" wi="170.26mm" file="US20230006938A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="201.93mm" wi="118.36mm" orientation="landscape" file="US20230006938A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="137.08mm" wi="165.78mm" file="US20230006938A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="153.50mm" wi="172.72mm" file="US20230006938A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="240.71mm" wi="173.14mm" orientation="landscape" file="US20230006938A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="175.85mm" wi="176.45mm" file="US20230006938A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="237.24mm" wi="168.32mm" file="US20230006938A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="208.20mm" wi="168.32mm" file="US20230006938A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="247.40mm" wi="168.32mm" file="US20230006938A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="221.32mm" wi="168.32mm" file="US20230006938A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="236.39mm" wi="168.83mm" file="US20230006938A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="242.82mm" wi="178.56mm" file="US20230006938A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="236.14mm" wi="178.56mm" file="US20230006938A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="97.96mm" wi="168.32mm" file="US20230006938A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="236.47mm" wi="174.33mm" file="US20230006938A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority to U.S. Provisional Patent Application No. 63/216,938, filed Jun. 30, 2021 and U.S. Provisional Patent Application No. 63/326,989, filed Apr. 4, 2022, and is related to U.S. Non-Provisional Patent Application titled &#x201c;SYSTEM AND METHOD FOR PERFORMING RATE ADAPTATION OF CONSTANT BIT RATE (CBR) CLIENT DATA WITH A FIXED NUMBER OF IDLE BLOCKS FOR TRANSMISSION OVER A METRO TRANSPORT NETWORK (MTN)&#x201d; and U.S. Non-Provisional Patent Application titled &#x201c;SYSTEM AND METHOD FOR PERFORMING RATE ADAPTATION OF CONSTANT BIT RATE (CBR) CLIENT DATA WITH A VARIABLE NUMBER OF IDLE BLOCKS FOR TRANSMISSION OVER A METRO TRANSPORT NETWORK (MTN)&#x201d; that are filed on the same date and have the same inventors as the present application, each of which are herein incorporated by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0003" num="0002">Generic Mapping Procedure (GMP) is an International Telecommunication Union Telecommunication Standardization Sector (ITU-T) method for mapping a constant bit rate (CBR) digital client signal of a given bit rate into the payload of a telecom network server layer channel. In operation, the source node uses the GMP overhead in each GMP window, which is located in the overhead of the server layer channel, to send a count value (Cm) to tell the sink node how many payload data words it will send in the next GMP window. The source node uses a modulo arithmetic algorithm based on the count value (Cm) to insert pad words to fill any channel bandwidth not required by the client signal. The sink node uses the same modulo arithmetic algorithm to recover the data. However, the server layer channel for an ITU-T G.8312 standard Metro Transport Network (MTN) project does not provide for GMP overhead.</p><p id="p-0004" num="0003">As defined by the ITU-T G.709 (OTN), GMP requires a consistent fixed length between the beginning of each GMP window, i.e., a fixed number of server layer bits per GMP window, since the GMP overhead is in the server layer. The server channel is point-to-point such that the GMP is terminated at the ingress to an intermediate node and generated again at an egress port of the intermediate node. Since the MTN server channel for the MTN lacks GMP overhead, it would be desirable to move the GMP function into the &#x201c;Path&#x201d; overhead (POH) of the MTN server layer channel that is added to the client signal stream, which passes through intermediate nodes without modification. The problem with using GMP in the POH is that an intermediate node has a different clock domain than the source node, which makes it impossible to maintain a constant fixed number of server layer bits for each GMP window. GMP adjusts the amount of payload information sent per GMP window but the time period for the window is set by the source node, based on the source node's reference clock (REFCLK).</p><p id="p-0005" num="0004">There are three categories of previous solutions for transporting CBR client signals over a network, including an MTN. One category creates a CBR Path signal containing the client and some additional Path overhead. It then uses overhead in the server signal to accommodate the difference between the path signal rate and the server payload channel rate. While there are various approaches within this category, the ITU-T Generic Mapping Procedure (GMP) is a commonly used solution. A disadvantage is that it requires section layer overhead, which must be processed at each node along the path layer.</p><p id="p-0006" num="0005">The second category operates in the packet domain. Segments of the CBR Client signal stream are periodically encapsulated into regular standard Ethernet or Internet Protocol (IP)/Multi-Protocol Layer Switching (MPLS) packets sent from source to sink as the path signal. The sink then extracts the client data from the packets to reconstruct the client signal. Differences in clock domains along the path are accommodated by inserting or removing inter-packet idle characters and may also use packet time stamps. There is no explicit rate-related information transmitted in either the path or server overhead. One drawback is the large amount of overhead bandwidth required for the regular Ethernet packet encapsulation. Another drawback is that packet processing along the path creates jitter due to irregular inter-packet arrival times at the sink. This adds significant complexity to the process of deriving the client signal rate at the sink, since average packet arrival time is the main information available for it, and time stamps, if used, are complex to process. Also, using packets adds undesirable latency at the source and sink nodes.</p><p id="p-0007" num="0006">The third category combines GMP and an Ethernet idle mapping procedure (IMP) into an Ethernet block structure based on an ordered set to mark the frame boundaries, but without Ethernet packets. The main drawback to this approach is that it may not be transparent to intermediate nodes that expect to see Ethernet packets at the physical coding sublayer (PCS).</p><p id="p-0008" num="0007">Accordingly, there is a need for a method and apparatus that overcomes the problems associated with the intermediate node clock domain in the transmission of CBR client signals over a Metro Transport Network (MTN).</p><heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0009" num="0008">The present examples provide a system and method for performing rate adaptation and multiplexing of constant bit rate (CBR) client data for transmission over a Metro Transport Network (MTN) that overcomes problems associated with the intermediate node clock domain in the transmission of CBR client data over the MTN by incorporating Generic Mapping Procedure (GMP) overhead into the CBR client data stream at a source node.</p><p id="p-0010" num="0009">In one example, a method for performing rate adaptation and multiplexing is provided. The method includes, receiving two or more streams of 64B/66B-encoded blocks of constant bit rate (CBR) client data at a source node, defining a respective plurality of generic mapping procedure (GMP) thread frames for a respective stream of the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein the respective plurality of GMP thread frames comprise a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead (OH) for a respective stream of 64B/66B encoded blocks of CBR client data, defining a plurality of pseudo-Ethernet packets, wherein the respective plurality of pseudo-Ethernet packets comprise a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved GMP overhead (OH) data payload blocks, mapping the respective plurality of thread frames into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks, assembling a stream of GMP multiplexing frames comprising the consecutive pseudo-Ethernet packets, inserting a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames and inserting an MTN path overhead (POH) frame that is aligned to the plurality of GMP multiplexing frames into the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames.</p><p id="p-0011" num="0010">In another example, a method for performing rate adaptation of two or more streams of client data for transmission over a Metro Transport Network (MTN) is provided which includes, receiving two or more streams of 64B/66B-encoded blocks of constant bit rate (CBR) client data at a source node, defining a plurality of generic mapping procedure (GMP) thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein each of the plurality of GMP thread frames comprises a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead (OH) for a respective stream of 64B/66B encoded blocks of CBR client data, defining a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved generic mapping procedure (GMP) overhead (OH) data payload blocks, mapping the plurality of thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks, assembling a stream of (GMP) multiplexing frames comprising the consecutive pseudo-Ethernet packets, inserting a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames, inserting an MTN path overhead (POH) frame that is aligned to the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames. The example method further includes, transmitting the stream of GMP multiplexing rate adapted frames, including the fixed number of idle blocks over the MTN, receiving the stream of GMP multiplexing rate adapted frames and the fixed number of idle blocks at a first intermediate node of the MTN performing idle mapping procedure (IMP) rate adaptation of the stream of rate adapted GMP multiplexing rate adapted frames received at the first intermediate node to modify the fixed number of idle blocks, transmitting the stream of GMP multiplexing rate adapted frames and the modified fixed number of idle blocks from the intermediate node to a sink node of the MTN, receiving the stream of rate adapted GMP multiplexing rate adapted frames and the modified fixed number of idle blocks at the sink node determining, for each interleaved thread, a corresponding client data stream rate from the GMP overhead and a difference between the fixed number of idle blocks inserted into the stream GMP multiplexing frames by the source node and the modified number of idle blocks received at the sink node and extracting the two or more streams of 64B/66B-encoded blocks of CBR client data from the stream of GMP multiplexing rate adapted frames using the corresponding client data stream rate for the interleaved thread.</p><p id="p-0012" num="0011">In an additional example, a source node is provided for transmitting a client data stream over a Metro Transport Network (MTN). The source node includes circuitry to receive two or more streams of 64B/66B-encoded blocks of client data, define a plurality of generic mapping procedure (GMP) thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein each of the plurality of GMP thread frames comprises a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead (OH) for a respective stream of 64B/66B encoded blocks of CBR client data, define a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved generic mapping procedure (GMP) overhead (OH) data payload blocks, map the plurality of thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks, assemble a stream of (GMP) multiplexing frames comprising the consecutive pseudo-Ethernet packets, insert a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames and insert an MTN path overhead (POH) frame that is aligned to the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames.</p><p id="p-0013" num="0012">Accordingly, in various examples a method and apparatus is provided that overcomes the problems associated with the intermediate node clock domain in the transmission of multiple CBR client signals over a Metro Transport Network (MTN).</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0014" num="0013">For a fuller understanding reference should be made to the following detailed description, taken in connection with the accompanying drawings, in which:</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an example diagram illustrating a basic network using GMP for adapting a path stream to a source node server channel.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example GMP frame.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> illustrates an example pseudo-Ethernet packet format having client data and GMP pad blocks placed into data blocks of the packet.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> illustrates an example pseudo-Ethernet packet format having client data and GMP pad blocks placed into data blocks and packet start control blocks /S/ of the packet.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example pattern for MTN path overhead (POH) insertion opportunities in an MTN frame.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates an example of six pseudo-Ethernet 2730-block packets.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates an example of three pseudo-Ethernet 5460-block packets.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> illustrates an example of thirty pseudo-Ethernet 2730-block packets, resulting from six packets per calendar slot in an MTN section layer consisting of five calendar slots.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> illustrates an example of JC1-JC6 in the GMP overhead.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> illustrates an example of the JC1-JC3 definitions within the GMP overhead.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>6</b>C</figref> illustrates an example of the JC4-JC6 definitions within the GMP overhead.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> illustrates an example of functional blocks for the source node and the sink node in a first option for performing rate adaptation.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> illustrates an example termination control block /T/ in the GMP frame for the first option shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> illustrates an example block diagram of a source node for implementing the first option shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> illustrates an example block diagram of a source node for implementing the first option shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and which additionally provides for multiplexing of the 64B/66B-encoded blocks of CBR client data streams.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>8</b>A</figref> illustrates an example of functional blocks for the source node and the sink node in a second option for performing rate adaptation.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>8</b>B</figref> illustrates an example termination control block /T/ in the GMP frame for the second option shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>8</b>C</figref> illustrates an example block diagram of a source node for implementing the second option shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an example block diagram of a sink node for implementation with either the first option of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> or the second option of <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an example block diagram of the circuitry in the source node for implementing multiplexing of two or more CBR client data streams.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> illustrates an example multiplexed 2730 block packet for multiplexing multiple CBR clients.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>11</b>B</figref> illustrates an example of the positioning of the GMP thread frames in the MTN path GMP frame for multiplexed CBR clients.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>12</b>A</figref> illustrates an example of multiplexed threads within a single 3-packet GMP frame.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>12</b>B</figref> illustrates an example of multiplexed threads spread across an extended GMP frame consisting of 3-packet groups.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates an example of 2730-block packets for multiples of 32 multiplexing threads.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> is an example flow diagram illustrating a method performed by a source node in accordance with the first option of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> for performing rate adaptation of CBR client data for transmission over an MTN.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>14</b>B</figref> is an example flow diagram illustrating additional details of the method performed by the source node in accordance with the first option of <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> for performing rate adaptation of CBR client data for transmission over an MTN.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>15</b>A</figref> is an example flow diagram illustrating a method performed by a source node in accordance with the second option of <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> for performing rate adaptation of CBR client data for transmission over an MTN.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>15</b>B</figref> is a flow diagram illustrating additional details of the example method performed by the source node in accordance with the second option of <figref idref="DRAWINGS">FIG. <b>15</b>A</figref> for performing rate adaptation of CBR client data for transmission over an MTN.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>16</b>A</figref> is an example flow diagram illustrating a method for performing rate adaption at an intermediate node of the MTN for the first option as illustrated in <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>16</b>B</figref> is an example flow diagram illustrating a method for performing data extraction at a sink node of the MTN for the first option as illustrated in <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>17</b>A</figref> is an example flow diagram illustrating a method for performing rate adaption at an intermediate node of the MTN for the second option as illustrated in <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>17</b>B</figref> is an example flow diagram illustrating a method for performing data extraction at a sink node of the MTN for the second option illustrated in as <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>18</b>A</figref> is an example flow diagram illustrating a method for performing rate adaptation and multiplexing of two or more client data streams at a source node for transmission over an MTN.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>18</b>B</figref> is an example flow diagram illustrating additional details of the method performed by the source node in accordance with <figref idref="DRAWINGS">FIG. <b>18</b>A</figref> for performing rate adaptation and multiplexing of two or more client data streams for transmission over an MTN.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>19</b>A</figref> is an example flow diagram illustrating a method for performing rate adaption at an intermediate node of the MTN for the method as illustrated in <figref idref="DRAWINGS">FIG. <b>18</b>B</figref>.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>19</b>B</figref> is an example flow diagram illustrating a method for performing data extraction at a sink node of the MTN for the method as illustrated in <figref idref="DRAWINGS">FIG. <b>18</b>B</figref>.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><p id="p-0052" num="0051">Reference will now be made in detail to various examples, examples of which are illustrated in the accompanying drawings. While various examples are discussed herein, it will be understood that they are not intended to be limiting. On the contrary, the presented examples are intended to cover alternatives, modifications, and equivalents, which may be included within the spirit and scope of the various examples as defined by the appended claims. Furthermore, in this Detailed Description of the Invention, numerous specific details are set forth in order to provide a thorough understanding. However, examples may be practiced without one or more of these specific details. In other instances, well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the described examples.</p><p id="p-0053" num="0052">It will be understood that, although the terms first, second, third, without limitation, may be used herein to describe various elements, components, regions, layers, and/or sections, these elements, components, regions, layers, and/or sections should not be limited by these terms. These terms are only used to distinguish one element, component, region, layer, or section from another region, layer, or section. Thus, a first element, component, region, layer, or section discussed below could be termed a second element, component, region, layer, or section without departing from the teachings of the present invention.</p><p id="p-0054" num="0053">Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skill in the art to which the present invention belongs. It will be further understood that terms, such as those defined in commonly used dictionaries, should be interpreted as having a meaning that is consistent with their meaning in the context of the relevant art and will not be interpreted in an idealized or overly formal sense unless expressly so defined herein.</p><p id="p-0055" num="0054">In various examples, the present examples provide a novel system and method for carrying constant bit rate (CBR) client signals, which are based upon 64B/66B block coded Ethernet streams, through an ITU-T G.8312 Metro Transport Network (MTN).</p><p id="p-0056" num="0055">The present examples overcome the intermediate clock domain problem by adding a mechanism that preserves a constant GMP window with respect to the path layer packets, but is variable in the server layer, where inter-packet idle blocks can be inserted or removed. This mechanism eliminates the need to terminate the GMP at the ingress to an intermediate node and to regenerate it at the intermediate node's egress port.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a basic reference network, including a high-level illustration of the relevant network element (NE) functions. The CBR client data stream is encoded into a stream of IEEE 802.3 Ethernet-compliant encoded blocks of CBR client data. In a specific example, the encoded blocks of the CBR client data are 64B/66B-encoded blocks of CBR client data, however this is not intended to be limiting and other encoding methods for the blocks are within the scope. MTN nodes perform rate adaptation between a CBR client data stream rate of the stream of 64B/66B-encoded blocks of CBR client data and the server channel rate via IMP (i.e., inserting or removing idle blocks from the inter-packet gap (IPG) region between Ethernet packets). MTN communicates its Path overhead in ordered set (OS) blocks that are inserted into the Ethernet inter-packet gap (IPG) on a nominal interval of once per 2<sup>14 </sup>blocks. The examples use a fixed minimum number of idle blocks between its Ethernet packets such that they will pass transparently through MTN nodes performing IMP and allow IMP to handle the potential rate adjustment range, which may be on the order of 200 ppm. The examples also use GMP to distribute the client information within the packets, and in one option to also provide rate adaptation.</p><p id="p-0058" num="0057">One key benefit of GMP is that it uses a modulo arithmetic algorithm to spread the GMP pads blocks among the client data blocks with a consistent spacing. If only IMP is used, the sink node could receive relatively large numbers of idle characters between groups of client data characters, which increases the sink node buffer and latency, and either reduces the jitter performance and/or complicates the implementation of the sink phase locked loop (PLL) for recovering the client clock. Note that the GMP word size is assumed to be one 64B/66B block, independent of the number of 5 Gbit/s CalSlots used by the client. FlexE calendar slots (CalSlots) implement a technique using a calendar slot switch, as is known in the art. Persons of ordinary skill in the art will appreciate that the clock timing concepts for data transmission disclosed herein reflect the calendar slot timing employed in the FlexE technique, which will be referred to as needed for an understanding of the examples, however this is not meant to be limiting in any way.</p><p id="p-0059" num="0058">Alternatively, the word size could be N 64B/66B blocks for a client using N CalSlots. The application is primarily for carrying CBR client signals rather than a general-purpose Ethernet packet-multiplexed interface that combines packet and CBR clients, although it is not limited thereto. Consequently, it is possible to use pseudo-Ethernet packets that include GMP overhead instead of carrying GMP overhead through OS blocks and data blocks in known locations. Specifically, the present examples encapsulate CBR client data into pseudo-Ethernet packets with the GMP overhead carried in one of the packet's control blocks, preferably the /T/ block at the end of the packet.</p><p id="p-0060" num="0059">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a system <b>100</b> for transmitting a constant bit rate (CBR) client data stream over a Metro Transport Network (MTN) includes a source node <b>105</b> comprising circuitry to receive a stream of 64B/66B-encoded blocks of CBR client data <b>120</b> encoded from a CBR client data stream. Circuitry of the source node <b>105</b> defines a plurality of pseudo-Ethernet packets at <b>125</b>, each pseudo-Ethernet packet having a packet start control block (/S/) comprising a respective plurality of bytes, a plurality of data payload blocks and a packet termination control block (/T/) comprising a respective plurality of bytes. The plurality of data payload blocks includes N&#x2212;2 64B/66B-encoded data blocks, wherein N is the total number of 64B/66B-encoded data blocks in a pseudo-Ethernet packet.</p><p id="p-0061" num="0060">Following the defining of the plurality of pseudo-Ethernet packets at <b>125</b>, the circuitry of the source node <b>105</b> then performs rate adaptation using GMP within the pseudo-Ethernet packets and idle insertion and/or removal (I/R) <b>130</b> between the pseudo-Ethernet packets. In particular, in performing the rate adaptation at <b>130</b>, the circuitry of the source node <b>105</b> assembles a Generic Mapping Procedure (GMP) frame stream comprising a plurality of GMP frames by mapping a plurality of blocks of the stream of 64B/66B-encoded blocks of CBR client data, a plurality of pad blocks, and GMP overhead into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets and inserting a number of idle blocks into the GMP frame stream between the pseudo-Ethernet packets. As such, the plurality of pseudo-Ethernet packets defined by the source node <b>105</b> are filled with a number of 64B/66B-encoded blocks of CBR client data as determined by a GMP engine, which will be described in more detail below with reference to <figref idref="DRAWINGS">FIG. <b>7</b>C</figref>.</p><p id="p-0062" num="0061">Following the rate adaptation at <b>130</b>, the circuitry of the source node <b>105</b> uses the identification of the beginning of the GMP frame to align the plurality of GMP frames with the MTN path overhead (POH) frame by inserting an MTN path overhead (POH) frame that is aligned to the beginning of the GMP frames to generate a stream of rate adapted GMP frames, at <b>135</b>. The stream of CBR rate adapted GMP frames, including the number of idle blocks, are then transmitted to an intermediate node <b>115</b> of the MTN.</p><p id="p-0063" num="0062">There are two logical path representations used to carry the CBR client data stream through the MTN network. The MTN path layer <b>145</b> extends end-to-end, wherein the stream of 64B/66B-encoded blocks of CBR client data <b>120</b> enters the MTN network at the source node <b>105</b>, passes through one or more intermediate nodes <b>115</b> and exits the MTN at the sink node <b>110</b>. A first MTN section layer <b>140</b> connects the source node <b>105</b> to the intermediate node <b>115</b> and a second MTN section layer <b>142</b> connects the intermediate node <b>115</b> to the sink node <b>110</b>. The MTN path layer <b>145</b> utilizes the first MTN section layer <b>140</b> as its server layer and provides configurable connection-oriented connectivity. The server layer for the first MTN section layer <b>140</b> is provided through various Ethernet interfaces. As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, communication between the source node <b>105</b> and the intermediate node <b>115</b> and between the intermediate node <b>115</b> and the sink node <b>110</b> occurs over the respective MTN section layers <b>140</b>, <b>145</b> to establish the communication between the source node <b>105</b> and the sink node <b>110</b> over the MTN path layer <b>145</b>. As such, the GMP overhead used to perform the CBR client signal rate adaptation is placed into the MTN path layer <b>145</b> by the source node <b>105</b> to adapt the stream of 64B/66B-encoded blocks of CBR client data <b>120</b> over the MTN path layer <b>145</b> to the sink node <b>110</b> such that it can pass through the intermediate node(s) <b>115</b> that use Ethernet idle rate adaptation and provide the sink node <b>110</b> with the rate (frequency/phase) information that it can use to recover the stream of 64B/66B-encoded blocks of CBR client data <b>120</b>.</p><p id="p-0064" num="0063">The intermediate node <b>115</b> is typically connected to multiple source nodes <b>105</b> and multiple sink nodes <b>110</b>. The stream of CBR rate adapted GMP frames from the stream of 64B/66B-encoded blocks of CBR client data <b>120</b> are switched by the intermediate node <b>115</b> onto an appropriate egress link that identifies the sink node <b>110</b> as the destination for the stream of 64B/66B-encoded blocks of CBR client data <b>120</b> or identifies the next node along the path to the sink node <b>110</b>. The switching by the intermediate node <b>115</b> is typically performed using a FlexE calendar slot (CalSlot) technique using a calendar slot switch, as is known in the art. Persons of ordinary skill in the art will appreciate that the clock timing concepts for data transmission disclosed herein reflect the calendar slot timing employed in the FlexE technique, which will be referred to as needed for an understanding of the examples, however this is not meant to be limiting in any way.</p><p id="p-0065" num="0064">In the intermediate node <b>115</b> the stream of CBR rate adapted GMP frames sent by the source node <b>105</b> are adapted to the clock rate of the intermediate node <b>115</b> using per-client idle insertion and/or removal (I/R) rate adaptation <b>155</b>, wherein circuitry of the intermediate node <b>115</b> inserts or deletes idle 64B/66B blocks to/from the stream of CBR rate adapted GMP frames as necessary to match the CBR rate adapted GMP frames rate to the clock rate of the intermediate node <b>115</b>. As such, the intermediate node <b>115</b> inserts additional idle blocks into the stream of CBR rate adapted GMP frames when the rate of the stream of CBR rate adapted GMP frames is slower than the rate in the intermediate node <b>115</b> and deletes idle blocks from the stream of CBR rate adapted GMP frames when the rate of the stream of CBR rate adapted GMP frames is faster than the rate in the intermediate node <b>115</b>. Following the distribution by the calendar slot switch <b>150</b>, the stream of CBR rate adapted GMP frames having a modified number of idle blocks is further modified using per-client idle I/R rate adaptation <b>160</b> to adapt the clock rate of the intermediate node <b>115</b> to the link rate of the second MTN section layer <b>142</b>. The stream of CBR rate adapted GMP frames having the twice modified number of idle blocks in then transmitted to the sink node <b>110</b> over the second MTN section layer <b>142</b> at the respective link rate.</p><p id="p-0066" num="0065">The stream of CBR rate adapted GMP frames having the twice modified number of idle blocks are received at the sink node <b>110</b>. Circuitry at the sink node <b>110</b> is used to recover the CBR client data stream rate from the received stream of CBR rate adapted GMP frames and the twice modified number of idle blocks at <b>165</b> and to recover the stream of encoded blocks of CBR client data from the packets of the CBR rate adapted GMP frames at <b>170</b>.</p><p id="p-0067" num="0066">The GMP frames of the stream of CBR rate adapted GMP frames consist of Ethernet-compliant 64B/66B blocks of CBR client data assembled into pseudo-Ethernet packets by the source node <b>105</b>. The packets are &#x201c;pseudo-Ethernet&#x201d; packets in the sense that they follow the Ethernet basic PCS packet syntax, beginning with the /S/ start control block and ending with a /T/ terminate control block. This syntax ensures that all intermediate MTN node <b>115</b> implementations can correctly identify the Ethernet inter-packet gap (IPG) for idle (I/R) rate adaptation. However, since the packets are not processed by an Ethernet MAC, they may omit the Ethernet packet MAC overhead and the 32-bit cyclic redundancy check frame check sequence (CRC-32 FCS). Also, the pseudo-Ethernet packet lengths may be made much longer than the allowable Ethernet packet size in order to provide higher bandwidth efficiency for this application.</p><p id="p-0068" num="0067">An example of the format of the pseudo-Ethernet packet is illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, wherein three consecutive pseudo-Ethernet packets <b>205</b>, <b>210</b>, <b>215</b> are included in a GMP frame <b>200</b>. As shown, each of the pseudo-Ethernet packets <b>205</b>, <b>210</b>, <b>215</b> includes GMP overhead <b>235</b> in the packet termination control block (/T/) <b>230</b> at the end of the packet. The /T/ block <b>230</b> also includes the control block type <b>245</b>. The 64B/66B-encoded blocks of CBR client data <b>240</b> are mapped into the data blocks <b>225</b> of the consecutive pseudo-Ethernet packets <b>205</b>, <b>210</b>, <b>215</b>. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, bytes of the /S/ block and the /T/ block are used for this application, with the /T/ block preferably carrying the GMP overhead <b>235</b>. While the format of the pseudo-Ethernet packet illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows the GMP overhead <b>235</b> placed in the packet termination control block /T/ <b>230</b>, this is not intended to be limiting and it is within the scope of the present examples to place the GMP overhead <b>235</b> in either of the control blocks (/S/ or //T/) of the pseudo-Ethernet packet, including the packet start control block /S/ <b>220</b> or the packet termination control block /T/ <b>230</b>.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>3</b>B</figref> further illustrate example pseudo-Ethernet packets. In <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> the blocks of the 64B/66B-encoded CBR client data <b>300</b> only occupy the 64B/66B data blocks (/D/) <b>305</b> of the pseudo-Ethernet packets. In a second example shown in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, for added efficiency, the blocks of the 64B/66B-encoded CBR client data and GMP pad blocks <b>300</b>, in addition to occupying the 64B/66B data blocks (/D/) <b>305</b> of the pseudo-Ethernet packets, the CBR client data and GMP pad blocks <b>300</b> may also occupy some of the bytes in the packet start control block (/S/) <b>310</b> and the packet termination control block (/T/) block <b>325</b>. As shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, the bytes of the idle count overhead <b>335</b> and the GMP overhead <b>330</b> occupy respective portions of the packet termination control block (/T/) <b>325</b>. While in this example, the idle count overhead <b>335</b> is shown in the packet termination control block (/T/) <b>325</b>, this is not intended to be limiting and, in another example, the idle count overhead <b>335</b> may be placed in the packet start control block (/S/) <b>315</b>.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates the frame format for MTN path overhead (POH) insertion opportunities in accordance with ITU-T Rec. G.8312 MTN, wherein &#x201c;16K&#x201d; is nominally 16384 and &#x201c;32K&#x201d; is nominally 32768 and &#x201c;n&#x201d; is the number of 5 Gbit/s MTN section calendar slots used by the client data stream. B, A and L are different types of POH ordered set blocks in accordance with the ITU-T Rec. G.8312 MTN standard. The locations of the B, A and L POH blocks are also illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and <figref idref="DRAWINGS">FIG. <b>13</b></figref>. The MTN POH frame begins with the B POH block located in the position prior to the appearance of the A POH block position. Note that in accordance ITU-T G.8312, there may be times when no POH is transmitted in the L or A POH block positions. Consequently, it is understood in the descriptions below that the pair of B POH blocks provide the reference points in the MTN POH frame, with the L or A blocks inserted into their respective positions within the MTN POH frame when they are applicable. If no A or L block is transmitted in that respective MTN POH position, an idle block may occupy that position without loss of generality.</p><p id="p-0071" num="0070">MTN POH blocks are nominally separated by n*16384 64B/66B blocks, where n represents the number of MTN Section layer 5 Gbit/s calendars slots carrying the MTN Path. For compatibility with the MTN POH period requirements shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the pseudo-Ethernet packet length is chosen such that an IPG occurs at each regular n*16384 block spacing point for MTN POH insertion. The pseudo-Ethernet packet length is also chosen such that it makes more efficient use of the interval between MTN POH blocks and provides sufficient idle blocks for IMP. For implementation convenience, the pseudo-Ethernet packet length may be chosen such that an integer number of GMP frames appear between each MTN POH block.</p><p id="p-0072" num="0071">As shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, choosing to fill 16380 of the 64B/66B blocks with pseudo-Ethernet packets of length 2730 64B/66B blocks leaves 4 64B/66B blocks in which the source node can insert idle blocks, which covers the required (16384)&#xd7;(200&#xd7;10<sup>&#x2212;6</sup>)=3.3 block rate difference in the case where the source clock is a full 200 ppm faster than the sink node or an intermediate node. Since 16380=4&#xd7;9&#xd7;5&#xd7;7&#xd7;13, it is possible to divide 16380 of the 64B/66B blocks into either three 5460-block packets, as shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, or six 2730-block packets as shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, giving the desired integer number of GMP frames. Since MTN nodes switch streams of 64B/66B blocks, they do not buffer entire Ethernet packets, and hence are largely independent of Ethernet packet length. While 5460-block packets are more efficient, 2730-block packets may be preferred for compatibility with existing MTN implementations. Note that in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>5</b>C</figref>, the location of the idle blocks in the stream of GMP frames is not intended to be limiting. The source node provides the sink node with adequate knowledge of the number of idle blocks that have been inserted into an interval of the stream of GMP frames. In one example, the interval may be an MTN POH frame, as shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>.</p><p id="p-0073" num="0072">As shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, GMP overhead <b>600</b> is typically divided into three segments (JC1 <b>605</b>+JC4 <b>610</b>, JC2 <b>615</b>+JC5 <b>620</b> and JC3 <b>625</b>+JC6 <b>630</b>), which are sufficiently separated to avoid error bursts impacting more than one segment. Consequently, as illustrated in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>6</b>C</figref>, a GMP frame consisting of a 3-packet group is created, with each packet of the group carrying one segment of the GMP overhead. The payload areas of the 3-packet group are treated by GMP as a single combined payload area. Specifically, the GMP fields of each GMP frame communicate how many 64B/66B blocks within the payload area of the next 3-packet group GMP frame will carry client data. The 6-byte GMP overhead format is illustrated in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, wherein three rows of the GMP overhead are placed into the /T/ block of three consecutive packets, i.e., JC1 <b>605</b> and JC4 <b>610</b> are placed in respective first packets, JC2 <b>615</b> and JC5 <b>620</b> are placed in respective second packets, and JC3 <b>625</b> and JC6 <b>630</b> are placed in respective third packets, which respective first, second and third packets constitute a respective GMP frame. The fields labeled &#x201c;R&#x201d; indicate a reserved field, such as a bit, byte, set of bytes or a data block that is reserved for potential future use. Unlike ITU-T G.709, which relies on a section layer framing pattern and fixed spacing for finding the GMP overhead, the present examples use the MTN POH frame to periodically identify the beginning of the GMP frame that embodies a GMP window. As shown in <figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>C</figref>, the first packet after an MTN POH frame is the beginning of a GMP frame. Referring back to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the source node <b>105</b> uses the identification of the beginning of the GMP frame to align the plurality of GMP frames with the MTN path overhead (POH) frame by inserting an MTN path overhead (POH) frame that is aligned to the beginning of the GMP frames to generate a stream of rate adapted GMP frames at <b>135</b>.</p><p id="p-0074" num="0073">A more detailed explanation for performing the rate adaptation using GMP within the plurality of pseudo-Ethernet packets and idle block insertion, as performed by the source node <b>105</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, is provided with reference to the two different options illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, respectively.</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> illustrates a first option for implementing the combination of Generic Mapping Procedure (GMP) and Idle Mapping Procedure (IMP) and <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> illustrates a second option. In these two options, the clock source used to derive the path signal rate results in differences in the relative roles of the GMP and IMP. Both options use an integer number of groups of three fixed-length packets between MTN POH block positions.</p><p id="p-0076" num="0075">In the option shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, the source node <b>705</b> receives a stream of 64B/66B-encoded blocks of CBR client data at <b>710</b>. The source node <b>705</b> also defines a plurality of pseudo-Ethernet packets having a packet start control block (/S/), a packet termination control block (/T/) and N&#x2212;2 64B/66B data block payload at <b>715</b>. The source node <b>705</b> derives a MTN path signal rate relative to the reference clock rate at the source node <b>705</b> and derives a CBR client data stream rate from the received stream of 64B/66B-encoded blocks of CBR client data at <b>720</b>. The GMP frame rate is set by the source node <b>705</b> such that transmitting the MTN path signal frame and a predetermined fixed number of idle characters per frame will fill the server channel bandwidth, on average. The idle insertion locations may vary between each MTN POH block, resulting in the average characters per frame to fill the server channel bandwidth. The source node <b>705</b> then performs rate adaptation using GMP within the plurality of pseudo-Ethernet Packets and idle I/R at <b>725</b>. The source node performs GMP by mapping a variable number of blocks of the stream of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets and mapping a variable number of pad blocks into the consecutive pseudo-Ethernet packets at <b>725</b>. Note that while GMP is described in terms of bytes, the CBR client data bytes and pad blocks are each preferably grouped into 64B/66B client data blocks and 64B/66B pad blocks, respectively, and inserted as blocks. The variable number of blocks of 64B/66B-encoded blocks of CBR client data and the variable number of pad blocks are based upon the path signal rate derived from the MTN path layer and the CBR client data stream rate. The source node <b>705</b> inserts an average of the variable number of blocks of 64B/66B-encoded blocks of CBR client data arriving during a number of previous GMP frame periods as GMP overhead (GMP OH) into the packet termination control block of a current GMP frame at <b>730</b> to generate a stream of GMP frames. The source node <b>705</b> then inserts a fixed number of idle blocks into the stream of GMP frames at <b>735</b> to generate a stream of CBR rate adapted GMP frames. The fixed number of idle blocks is selected as a minimum number of idle blocks needed by downstream IMP processes to accommodate the maximum 200 ppm clock offset between different FlexE clock domains. Inserting this minimum number of idle blocks improves the server channel bandwidth available for carrying the CBR client signal. The source node <b>705</b> then transmits the stream of CBR rate adapted GMP frames, including the number of idle blocks, over the MTN to one or more intermediate nodes, and eventually to a sink node <b>740</b>.</p><p id="p-0077" num="0076">When the stream of CBR rate adapted GMP frames are received at an intermediate node of the MTN, the intermediate node performs idle mapping procedure (IMP) rate adaptation of the stream of CBR rate adapted GMP frames to modify the number of idle blocks within the stream of CBR rate adapted GMP frames and then transmits the stream of CBR rate adapted GMP frames having the modified number of idle blocks to a next node of the MTN, which may be another intermediate node or a sink node. Persons of ordinary skill in the art will appreciate that the intermediate node may be configured and provided in a conventional manner. As described above, the intermediate node inserts or deletes 64B/66B idle blocks to synchronize the data flow timing between its input and output rates without regard to the contents of the 64B/66B blocks of CBR client data and 64B/66B POH blocks.</p><p id="p-0078" num="0077">When the sink node <b>740</b> receives the stream of CBR rate adapted GMP frames having the modified number of idle blocks from the intermediate node over the MTN, at <b>745</b>, the sink node <b>740</b> performs IMP to adapt the stream of CBR rate adapted GMP frames to a local reference clock at the sink node <b>740</b>. The sink node <b>740</b> then determines the CBR client data stream rate from the GMP overhead and the difference between the fixed number of idle blocks inserted by the source node, which is known in advance, and the modified number of idle blocks received at the sink node at <b>750</b>. The sink node <b>740</b> then extracts the CBR client data stream from the stream of CBR rate adapted GMP frames using the determined CBR client data stream rate at <b>755</b> to recover the original 64B/66B encoded client signal <b>760</b>. As such, the CBR client data stream transmitted over the MTN in the example shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is phase-locked to the Cal Slot clock by the source node <b>705</b> and the sink node <b>740</b> determines the original client signal data rate by examining a combination of the dynamic GMP overhead information and the average number of idle blocks it receives as compared to the known number inserted by the source node <b>705</b>. The operation of a phase-locked loop (PLL), such as the PLL <b>1130</b> shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, is an inherent part of clock recovery circuits, as known to one skilled in the art.</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> illustrates an example packet termination control block (/T/) <b>775</b> of the stream of CBR rate adapted GMP frames generated by the source node <b>705</b> at <b>730</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> by placing the GMP overhead in the packet termination control block /T/. The GMP overhead of the packet termination control block <b>775</b> provides a count value (GMP Cm) <b>785</b> to notify the sink node <b>705</b> how many 64B/66B-encoded blocks of CBR client data the source node <b>705</b> will send in the next window and may indicate the number of bytes remaining in a buffer (GMP CnD) <b>780</b> at the source node <b>705</b>. As such, the GMP overhead provides the beneficial feature of indicating the number of remaining bits or bytes in a buffer (CnD) at the source node <b>705</b> that could not be transmitted in the next frame due to being a fraction of a word or a 64B/66B-encoded block, respectively. This information provides the sink node <b>740</b> with higher precision (i.e., bit-level rather than character level) information about the CBR client data rate.</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>7</b>C</figref> provides a block diagram illustrating an example of a source node <b>900</b> in accordance with the first option described above, wherein a variable number of data bytes and pad blocks are mapped into consecutive pseudo-Ethernet packets to provide a stream of GMP frames and a fixed number of idle blocks are inserted into the stream of GMP frames. In this example the number of GMP pad blocks is varied to fill a GMP frame having a fixed period. If the 64B/66B-encoded client signal is slow, more pad blocks are added. If the 64B/66B-encoded client signal is fast, fewer pad blocks are added.</p><p id="p-0081" num="0080">With reference to <figref idref="DRAWINGS">FIG. <b>7</b>C</figref>, a GMP frame reference <b>940</b> and an MTN section frame reference <b>935</b> are generated by a reference generator <b>905</b> in response to a reference clock <b>910</b>. The GMP frame reference <b>940</b> is provided to a GMP engine <b>930</b> and to a pseudo-Ethernet packet maker <b>950</b> of the source node <b>900</b>. The reference clock <b>910</b> is also provided to a client rate measuring circuit <b>925</b>, and is used by the client rate measuring circuit <b>925</b> to measure the clock rate of the received stream of 64B/66B encoded blocks of CBR client data <b>915</b> received at the source node <b>900</b> so as to derive the CBR client data stream rate from the received stream of 64B/66B encoded blocks of CBR client data <b>915</b>. The received stream of 64B/66B encoded blocks of CBR client data <b>915</b> is provided to a first in first out (FIFO) buffer <b>920</b>. The measured clock rate is provided by client rate measuring circuit <b>925</b> to the GMP engine <b>930</b>. The GMP engine <b>930</b> utilizes the measured clock rate from the client rate measuring circuit <b>925</b> and the GMP frame reference <b>940</b> to determine the variable number of CBR client data 64B/66B encoded blocks and the variable number of pad blocks to be mapped into the consecutive pseudo-Ethernet packets. The GMP engine <b>930</b> provides an indicator of the variable number of CBR client data 64B/66B encoded blocks (Cm) <b>945</b> to the pseudo-Ethernet packet maker <b>950</b>. The pseudo-Ethernet packet maker <b>950</b> defines the pseudo-Ethernet packets with a /S/, a /T/ and N&#x2212;2 64B/66B data block payload based upon the Cm indicator <b>945</b> and inserts the number of CBR client data 64B/66B encoded blocks <b>915</b>, with the Cm indicator <b>945</b> indicating the number of CBR client data 64B/66B encoded blocks <b>915</b>, provided by the FIFO buffer <b>920</b> in response to a read signal from the pseudo-Ethernet packet maker <b>950</b>, into the pseudo-Ethernet packets to generate a stream of GMP frames <b>952</b>. The pseudo-Ethernet packet maker <b>950</b> provides the pseudo-Ethernet packets to a multiplexer <b>970</b>, which is controlled by a multiplexer controller <b>955</b>. The multiplexer controller <b>955</b> is controlled by pseudo-Ethernet packet maker <b>950</b> and the MTN section frame reference <b>935</b> to direct the multiplexer <b>970</b> to select among the pseudo-Ethernet packets from the pseudo-Ethernet packet maker <b>950</b>, the POH blocks from the MTN POH <b>960</b> and the idle blocks from the idle insert <b>965</b> to perform rate adaptation by inserting a fixed number of idle blocks into the stream of GMP frames <b>952</b> to generate the stream of CBR rate adapted GMP frames. The output of the multiplexer <b>970</b> is provided to the MTN section layer <b>975</b>.</p><p id="p-0082" num="0081">As shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>C</figref>, in the first option for implementing GMP and IMP, the number of CBR client data 64B/66B encoded blocks mapped into consecutive pseudo-Ethernet packets is variable and the number of pad blocks mapped into the consecutive pseudo-Ethernet packets is variable, wherein the variable number of CBR client data 64B/66B encoded blocks and the variable number of pad blocks are based on the MTN and the CBR client data stream rate. Additionally, the number of idle blocks inserted into the stream of GMP frames is fixed when implementing this option.</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>7</b>D</figref> provides a block diagram illustrating an example of a source node <b>902</b> in accordance with the first option described above which additionally provides for multiplexing of the 64B/66B-encoded blocks of CBR client data by multiplexing lower rate client data into pseudo-Ethernet packets after MTN mapping has been performed.</p><p id="p-0084" num="0083">With reference to <figref idref="DRAWINGS">FIG. <b>7</b>D</figref>, a GMP frame reference <b>942</b> and an MTN section frame reference <b>937</b> are generated by a reference generator <b>907</b> in response to a reference clock <b>912</b>. The GMP frame reference <b>942</b> is provided to a GMP engine <b>932</b> and to a thread interleaver and pseudo-Ethernet packet maker <b>924</b> of the source node <b>902</b>. The reference clock <b>912</b> is also provided to a client rate measuring circuit <b>927</b> and is used by the client rate measuring circuit <b>927</b> to measure the clock rate of the received streams of 64B/66B-encoded blocks of CBR client data <b>917</b>, <b>919</b> received at the source node <b>902</b> so as to derive the CBR client data stream rate from the received streams of 64B/66B-encoded blocks of CBR client data <b>917</b>, <b>919</b>. The received streams of 64B/66B-encoded blocks of CBR client data <b>917</b>, <b>919</b> are provided to a GMP Thread Frame first in first out (FIFO) buffers <b>922</b>. GMP is performed on the streams <b>917</b>, <b>919</b> by the GMP and thread frame FIFO buffers <b>922</b> to define a plurality of GMP thread frames for each of the streams <b>917</b>, <b>919</b> and the plurality of GMP thread frames are buffered by the FIFO buffers of the GMP and thread frame FIFO buffers <b>922</b>. Each of the plurality of GMP thread frames comprise a variable number of encoded blocks of CBR client data and a variable number of pad blocks and GMP OH, as determined by the Cm indicator <b>947</b>, as has been previously described. The buffered GMP thread frames are then provided from the GMP and thread frame FIFO buffers <b>922</b> to a thread interleaver and pseudo-Ethernet packet maker <b>924</b> in response to read signals from the from the thread interleaver and pseudo-Ethernet packet maker <b>924</b> to the GMP and thread frame FIFO buffers <b>922</b>. The thread interleaver and pseudo-Ethernet packet maker <b>925</b> then maps the GMP thread frames into a plurality of consecutive pseudo-Ethernet packets comprising a plurality of data payload blocks that are divided into the plurality of interleaved threads and the plurality of GMP OH data payload blocks. The pseudo-Ethernet packets are then assembled into a stream of GMP multiplexing frames <b>954</b> by thread interleaver and pseudo-Ethernet packet maker <b>924</b>. The measured clock rate is provided by client rate measuring circuit <b>927</b> to the GMP engine <b>932</b>. The GMP engine <b>932</b> utilizes the measured clock rate from the client rate measuring circuit <b>927</b> and the GMP frame reference <b>942</b> to determine the variable number of CBR client data 64B/66B encoded blocks and the variable number of pad blocks to be mapped into the consecutive pseudo-Ethernet packets by GMP and Thread Frame FIFO buffers <b>922</b>. The GMP engine <b>932</b> provides an indicator of the variable number of CBR client data 64B/66B encoded blocks (Cm) <b>947</b> to the thread interleaver and pseudo-Ethernet packet maker <b>924</b>. The thread interleaver and pseudo-Ethernet packet maker <b>924</b> defines the pseudo-Ethernet packets with a /S/, a /T/ and N&#x2212;2 64B/66B data block payload based upon the Cm indicator <b>947</b>. The thread interleaver and pseudo-Ethernet packet maker issues read signals to the GMP and thread frame FIFP buffers <b>922</b> to provide the 64B/66B-encoded CBR client data blocks and inserts the number of 64B/66B-encoded CBR client data blocks <b>926</b> indicated by Cm <b>947</b>, provided by the GMP engine <b>932</b>, into the pseudo-Ethernet packets to generate a stream of GMP multiplexing frames <b>954</b>. The thread interleaver and pseudo-Ethernet packet maker <b>924</b> provides the stream of GMP multiplexing frames <b>954</b> to a multiplexer <b>972</b>, which is controlled by a multiplexer controller <b>957</b>. The multiplexer controller <b>957</b> is controlled by thread interleaver and pseudo-Ethernet packet maker <b>924</b> and the MTN section frame reference <b>937</b> to direct the multiplexer <b>972</b> to select among the GMP multiplexing frames <b>954</b>, the POH blocks from the MTN POH <b>962</b> and the idle blocks from the idle insert <b>967</b> to perform rate adaptation by inserting a fixed number of idle blocks between the pseudo-Ethernet packets of the GMP multiplexing frames <b>954</b> to generate the stream of rate adapted GMP multiplexing frames. The output of the multiplexer <b>972</b> is provided to the MTN section layer <b>977</b>.</p><p id="p-0085" num="0084">The second option for implementing the combination of GMP and IMP is shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, wherein the source node <b>805</b> derives the MTN path signal rate (i.e., Cal Slot rate) from the CBR client data stream rate. In the second option, a predetermined fixed GMP Cm (or defined repeating pattern of Cm values) is used to create a packet stream that does not completely fill the space between MTN POH blocks so as to create a stream of CBR rate adapted GMP frames that is slightly slower than the nominal server channel rate. In this option, GMP provides a smooth delivery of payload CBR client data 64B/66B encoded blocks with the path frame payload at a fixed rate per path frame.</p><p id="p-0086" num="0085">In the option shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, the source node <b>805</b> receives a stream of 64B/66B-encoded blocks of CBR client data at <b>810</b>. The source node <b>805</b> defines a plurality of pseudo-Ethernet empty packets having a packet start control block (/S/), a packet termination control block (/T/) and a data block payload at <b>815</b>. In this option, the data block payload <b>815</b> has a fixed capacity of N&#x2212;2 64B/66B data blocks. A fixed, i.e., static, GMP distribution of 64B/66B-encoded blocks of CBR client data and a fixed GMP distribution of pad blocks in the packet payload are implemented to generate a stream of GMP frames. The source node <b>805</b> places an indication of the fixed number of data blocks into the GMP overhead, referred to as rate adaptation OH, into the packet termination control block /T/ at <b>820</b>. The indication of the fixed number of data blocks is optional because the fixed number is known to the source node <b>805</b> and the sink node <b>840</b>. The source node <b>805</b> then inserts a variable (k) number of idle blocks into the stream of GMP frames at <b>825</b> to generate a stream of CBR rate adapted GMP frames. The source node <b>805</b> inserts the variable number of idle blocks in order to fill the remaining channel bandwidth. An indication of the variable number of idle blocks is placed in the rate adaptation overhead at <b>820</b> to notify the sink node of the number of idle blocks inserted by the source node. Alternately, the indication of the variable number of idle blocks placed in the idle count overhead <b>890</b> may be a running number of idle blocks inserted by the source node since an arbitrary start time (i.e., T=0) with modulo rollover. With this alternative, the sink node determines the number of idle blocks inserted by the source node in an interval by comparing the indication of the variable number of idle blocks in a currently received idle count overhead with the indication of the variable number of idle blocks in a previously received Idle Count overhead. The indication of the number of idle blocks inserted by the source node placed in the idle count overhead may optionally include the fractional portion of the next idle blocks to be sent. The fractional portion of the next idle blocks indicates that the source has some remaining bandwidth to fill, but the bandwidth is not sufficient for inserting another idle block at that point. The idle fraction count information provides the receiver with increased understanding of the source idle insertion rate. The source node <b>805</b> then transmits the stream of CBR rate adapted GMP frames over the MTN to one or more intermediate nodes, and eventually to a sink node <b>840</b>.</p><p id="p-0087" num="0086">When the stream of CBR rate adapted GMP frames are received at an intermediate node of the MTN, the intermediate node performs idle mapping procedure (IMP) rate adaptation of the stream of CBR rate adapted GMP frames to modify the number of idle blocks in the stream of CBR rate adapted GMR frames and then transmits the stream of CBR rate adapted GMP frames having the modified number of idle blocks to a next node of the MTN, which may be another intermediate node or a sink node. The change in number of idle blocks is however not placed in the Idle Count overhead and does not replace the indication of the number of idle blocks inserted by source node <b>805</b>.</p><p id="p-0088" num="0087">When the sink node <b>840</b> receives the stream of CBR rate adapted GMP frames having the modified number of idle blocks over the MTN, at <b>830</b>, the sink node <b>840</b> performs IMP to adapt the stream of CBR rate adapted GMP frames to a local reference clock at the sink node <b>840</b>. At <b>835</b>, the sink node <b>840</b> then determines the CBR client data stream rate of the CBR client stream from the GMP overhead and a difference between an indication of the variable number of idle blocks inserted into the stream of CBR rate adapted GMP frames by the source node <b>805</b> and the modified number of idle blocks received at the sink node <b>840</b>. The sink node <b>840</b> then extracts the CBR client data stream from the stream of CBR rate adapted GMP frames using the determined CBR client data stream rate at 845 to recover the original 64B/66B encoded blocks of CBR client data <b>850</b>. As such, the CBR client data stream transmitted over the MTN in the example shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> is not phase-locked to the Cal Slot bitrate and the sink node <b>840</b> determines the original CBR client data rate based on the number of idle blocks remaining after the IMP process at the sink node <b>840</b> and optionally, the idle count information inserted by the source node <b>805</b>. The Cal Slot clock is a divide down of the local reference clock at the sink node.</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>8</b>B</figref> illustrates an exemplary packet termination control block (/T/) <b>875</b> of the CBR rate adapted GMP frames generated by the source node <b>805</b> at <b>820</b> of <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> by placing the GMP OH <b>880</b>, <b>885</b> and idle count overhead <b>890</b> in the packet termination control block /T. Alternatively, the GMP overhead of the termination control block <b>875</b> may provide a count value (GMP Cm) <b>885</b> to notify the sink node <b>840</b> how many 64B/66B-encoded blocks the source node <b>805</b> will send in the next window and may indicate the number of bytes remaining in the buffer (GMP CnD) <b>880</b> at the source node <b>805</b>. Since these values (Cm and CnD) are predetermined and fixed it is optional to insert them into the GMP overhead. The packet termination control block <b>875</b> additionally includes an idle count <b>890</b> of the variable number of idle blocks inserted by the source node <b>805</b> and, optionally, a count of the fractional amount of an idle to be sent in a next frame <b>895</b> by the source node <b>805</b>.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>8</b>C</figref> provides a block diagram illustrating an example of a source node <b>1000</b> in accordance with the second option described above, wherein a fixed number of data blocks and pad blocks are mapped into consecutive pseudo-Ethernet packets to generate a stream of GMP frames and a variable number of idle blocks are inserted into the stream of GMP frames. In this option, the faster the client rate, the less time it will take to accumulate the payload 64B/66B client data blocks within a GMP frame. The slower the client rate, the longer it will take to accumulate the payload data 64B/66B client data blocks within a GMP frame. Thus, the period of the GMP frame is determined by the bit rate of the incoming 64B/66B-encoded blocks of CBR client data <b>1015</b>.</p><p id="p-0091" num="0090">With reference to <figref idref="DRAWINGS">FIG. <b>8</b>C</figref>, an output <b>1011</b> of a client rate measuring circuit <b>1025</b> is used to clock a reference generator <b>1005</b>. The reference generator <b>1005</b> generates an MTN section frame reference <b>1035</b> using the reference clock <b>1010</b> and generates a GMP frame reference <b>1040</b> using the output <b>1011</b> from the client rate measuring circuit <b>1025</b>. The GMP frame reference <b>1040</b> is provided to a GMP engine <b>1030</b>. The client rate measuring circuit <b>1025</b> is used to measure the clock rate of the 64B/66B-encoded blocks of CBR client data <b>1015</b> received at the source node <b>1000</b>, with 64B/66B-encoded blocks of CBR client data <b>1015</b> is provided to the client rate measuring circuit <b>1025</b> and to a FIFO buffer <b>1020</b>, to derive the CBR client data stream rate from the received 64B/66B-encoded blocks of CBR client data <b>1015</b>. In this example, the measured clock rate may not be provided to the GMP engine <b>1030</b> and the GMP engine <b>1030</b> is considered to be a free-running GMP engine with no external time alignment. The GMP engine <b>1030</b> utilizes the GMP frame reference <b>1040</b> to determine the location of the fixed number of 64B/66B client data blocks <b>1015</b> to be mapped into the consecutive pseudo-Ethernet packets. The GMP engine <b>1030</b> provides an indicator of the fixed number of CBR client data blocks (Cm) <b>1045</b> to a pseudo-Ethernet packet maker <b>1050</b>. The pseudo-Ethernet packet maker <b>1050</b> defines the pseudo-Ethernet packets with a /S/, a /T/ and N&#x2212;2 64B/66B data block payload based upon the Cm indicator <b>1045</b> and inserts a number of CBR client data blocks <b>1015</b> based on the Cm indicator <b>1045</b>, provided by the FIFO buffer <b>1020</b>, into the pseudo-Ethernet packets to generate a stream of GMP frames <b>1052</b>. The pseudo-Ethernet packet maker <b>1050</b> provides the stream of GMP frames <b>1052</b> to the multiplexer <b>1070</b>. A multiplexer controller <b>1055</b> receives the output <b>1052</b> of pseudo-Ethernet packet maker <b>1050</b>, the GMP frame reference <b>1040</b>, the MTN section frame reference <b>1035</b>, and the measured clock rate from the client rate measuring circuit <b>1025</b>, and responsive to those inputs directs the multiplexer <b>1070</b> to select among the stream of GMP frames <b>1052</b> from the pseudo-Ethernet packet maker <b>1050</b>, the POH blocks from the MTN POH <b>1060</b> and the idle blocks from the idle insert <b>1065</b> to perform rate adaptation by inserting a variable number of idle blocks into the stream of GMP frames <b>1052</b> to generate the stream of CBR rate adapted GMP frames. The multiplexer controller <b>1055</b> utilizes the MTN section frame reference <b>1035</b> to determine which input to multiplexer <b>1070</b> will appear at its output for each block. The output of the multiplexer <b>1070</b> is provided to the MTN section layer <b>1075</b>.</p><p id="p-0092" num="0091">The CBR client data stream rate affects the number of idle blocks that will be inserted into the stream of GMP frames to generate the stream of CBR rate adapted GMP frames. For example, if the 64B/66B-encoded blocks of CBR client data is fast, each GMP frame will be assembled in a shorter period of time. As such, there will be more GMP frames per second to accommodate the greater number of CBR client bits in each second. Since the MTN path POH is being used to delimit the GMP frames, the MTN path will be faster to match the CBR client stream data rate and there will be more MTN POH <b>1060</b> needed per second. However, since the MTN frame section is running at the rate of the reference clock <b>1010</b> and there are more MTN POH blocks per second, there will be fewer idle blocks from idle insert <b>1065</b> needed to fill up the MTN section. Conversely, if the 64B/66B-encoded blocks of CBR client data is slow, there will be fewer GMP frames per second. The MTN path is correspondingly slower, leading to fewer MTN POH <b>1060</b> needed per second. More idle blocks from idle insert <b>1065</b> are then needed to fill up the space in the MTN section. The number of idles to be inserted is reported on <b>1035</b> for inclusion in the Idle Count overhead <b>890</b> and the Idle Fraction <b>895</b> of <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>.</p><p id="p-0093" num="0092">As shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>8</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>8</b>C</figref>, in the second option for implementing GMP and IMP the number of CBR client data blocks mapped into consecutive pseudo-Ethernet packets is fixed, the number of pad blocks mapped into the consecutive pseudo-Ethernet packets is fixed and the number of idle blocks inserted into the stream of GMP frames is variable when implementing this option.</p><p id="p-0094" num="0093">In summary, in the first option, the GMP frame rate is determined by the reference clock at the source node, while in the second option, the GMP frame rate is determined by the CBR client signal rate. Consequently, in the first option, the number of idles sent by source is fixed, while in the second option, the number of idles is variable.</p><p id="p-0095" num="0094">In the first option, the GMP frame rate is fixed and is determined by the reference clock at the source. The CBR client data stream rate is variable, and as such, the number of pad blocks inserted into the GMP frames is variable. When the CBR client data stream rate is slow, more pad blocks are inserted and when the CBR client data stream rate is fast, fewer pad blocks are necessary. In the first option, since the MTN path signal rate (i.e., the Cal Slot rate) and the GMP frame rate are both referenced to the same reference clock, the number of idle blocks inserted into the stream of GMP frames is fixed.</p><p id="p-0096" num="0095">In the second option, the GMP frame rate is an inflated version of the CBR client data stream rate. For example, GMP frame rate=(client signal rate)*(66/64)*(total number of blocks in the GMP frame that carry client data)/(total number of blocks in the GMP frame). The GMP frame rate is a constant multiple of the CBR client data stream rate, because the number of pad blocks is fixed. Thus, the GMP frame rate is variable because the CBR client data stream rate is variable. Since the MTN path signal rate is fixed, the number of idle blocks inserted into the stream of GMP frames is variable. An indicator of the number of idle blocks inserted is inserted into the stream of GMP frames to communicate the variable number of idle blocks to the sink node.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an example of a sink node (<b>740</b> of <figref idref="DRAWINGS">FIG. <b>7</b>A or <b>840</b></figref> of <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>) in accordance with either of the first or second options described above to receive the stream of CBR rate adapted GMP frames generated by the source nodes in <figref idref="DRAWINGS">FIG. <b>7</b>C</figref> and/or <figref idref="DRAWINGS">FIG. <b>8</b>C</figref>. The received MTN section signal <b>1105</b> carries the stream of CBR rate adapted GMP frames. The MTN and GMP frames are recovered from the stream of CBR rate adapted GMP frames by the recover MTN and GMP frames circuit <b>1115</b> and provided to the count received idles, recover GMP overhead and recover Idle count overhead circuit <b>1120</b>. When the number of idle blocks inserted into the stream of CBR rate adapted GMP frames by the source node is fixed, as in the first option described with reference to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>7</b>C</figref>, the fixed number of idle blocks is known to the sink node. Alternatively, in the second option described with reference to <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>8</b>C</figref>, the variable number of idle blocks inserted by the source node is reported in the overhead. The actual number of idle blocks received at a sink node is a combination of the number of idle blocks inserted by the source node, modified by the intermediate nodes performing IMP. The MTN path signal rate measuring circuit <b>1110</b> receives the incoming MTN section signal and measures the MTN Path signal bitrate. This measured bitrate is scaled by the DSP engine <b>1125</b> to recover the client payload data rate, as a function of the number of received idle blocks, the idle count recovered from the idle count overhead and the value of Cm:CnD recovered from the GMP overhead, by circuit <b>1120</b>. Using the Cm value from circuit <b>1120</b>, extract client payload block <b>1135</b> identifies the payload and pad blocks within the GMP frames. The pad blocks and idle blocks are discarded while the client payload bits from 64B/66B data blocks are written into the FIFO buffer <b>1140</b>. The phase locked loop (PLL) <b>1130</b> is controlled by the DSP engine <b>1125</b> to read from the FIFO buffer <b>1140</b> at the CBR client data stream rate.</p><p id="p-0098" num="0097">In summary, the first option provides for potential clock recovery performance increase enabled by variable GMP with CnD and the possibility of multiplexing lower rate clients, which will be discussed in more detail below. The main advantage of the second option is that the use of a static GMP simplifies both the source node and the sink node by using a single process rather than using both GMP and IMP.</p><p id="p-0099" num="0098">The first option provides a method for carrying a single CBR client data stream within one of more 5 Gbit/s MTN section layer calendar slots. However, there are applications where it is desirable to carry multiple different lower rate CBR client data streams within a single calendar slot. In order to carry multiple different lower rate CBR client data streams within a single calendar slot, multiplexing capabilities are added to the first option.</p><p id="p-0100" num="0099">The first option for the source node utilizing a variable number of CBR client data blocks, a variable number of pad blocks per GMP frame and a fixed number of idle blocks within MTN Path signal, as described above, also allows the possibility of multiplexing multiple lower rate clients into each pseudo-Ethernet packet by dividing the packet payload data blocks into interleaved sets. The per-set GMP overhead can be carried in additional data blocks at the end of the packet. With this option, since GMP performs the rate adaptation, the number of idle blocks is independent of the multiplexed client streams and can remain fixed.</p><p id="p-0101" num="0100">While it is known in the art to combine lower rate clients into 5 Gb/s MTN channels, the known methods perform multiplexing of the client signals prior to the MTN mapping. In contrast, the present examples provide for multiplexing lower rate client data into pseudo-Ethernet packets after MTN mapping has been performed, as illustrated with reference to the block diagram <b>1200</b> illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0102" num="0101">In general, the multiplexing of multiple 64B/66B-encoded blocks of CBR client data streams <b>1205</b>, <b>1210</b> is performed at a source node by respective GMP blocks <b>1225</b>, <b>1230</b> to define a plurality of respective GMP thread frames <b>1235</b>, <b>1240</b> for each of the streams of 64B/66B-encoded blocks of CBR client data, wherein each of the plurality of GMP thread frames <b>1235</b>, <b>1240</b> comprises a variable number of encoded blocks of CBR client data and a variable number of pad blocks and GMP OH for a respective stream of 64B/66B-encoded blocks of CBR client data. Additionally, the thread interleaver and pseudo-Ethernet packet maker <b>1245</b> defines a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved GMP overhead (OH) data payload blocks. In particular, each of the plurality of interleaved threads may include an integer number of data payload blocks. The variable number of encoded client data blocks and the variable number of pad blocks are then mapped into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and the GMP OH is mapped into the plurality of interleaved GMP OH data payload blocks by thread interleaver and pseudo-Ethernet packet maker <b>1245</b>. A stream of GMP multiplexing frames <b>1250</b> is then assembled by thread interleaver and pseudo-Ethernet packet maker <b>1245</b> comprising the consecutive pseudo-Ethernet packets. The stream of GMP multiplexing frames <b>1250</b> is then provided to IMP block <b>1255</b> which inserts a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames and inserts an MTN path overhead (POH) frame that is aligned to the plurality of GMP multiplexing frames into the stream of GMP multiplexing frames <b>1250</b> to generate a stream of GMP multiplexing rate adapted frames. In particular, the 64B/66B-encoded blocks of CBR client threads <b>1235</b>, <b>1240</b> may be mapped into the plurality of interleaved threads of the consecutive pseudo-Ethernet packets by the thread interleaver and pseudo-Ethernet packet maker <b>1245</b> in a round-robin manner.</p><p id="p-0103" num="0102">Thus, multiple CBR client data streams can be multiplexed into each pseudo-Ethernet packet. In a particular example, the encoded blocks of a CBR client are mapped in a round-robin manner by thread interleaver and pseudo-Ethernet packet maker <b>1245</b> into the interleaved threads of the pseudo-Ethernet packets. Each interleaved thread is then treated as its own channel, including having its own GMP overhead. If a CBR client data stream occupies more than one thread, then the threads are combined to create a higher rate channel and a single block of GMP overhead is used for the multiple threads. As such, each thread provides a channel of less than 5 Gbit/s that can be time-division multiplexed together in the 5 Gbit/s calendar slot.</p><p id="p-0104" num="0103">The multiplexing method illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref> may be modified to be applicable to packet-based client data streams in addition to the 64B/66B-encoded CBR client data streams. In particular, if the 64B/66B-encoded CBR client data streams <b>1205</b>, <b>1210</b> are instead packet-based client data streams, such as Ethernet-based streams, the packet-based client data streams are treated as a stream of bits and are encoded into a plurality of 64B/66B-encoded blocks. Once the packet-based client data streams have been encoded into 64B/66B-encoded blocks, the GMP and IMP blocks <b>1225</b>, <b>1230</b> illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref> then provide an interleaved 64B/66B-encoded packet-based client data streams.</p><p id="p-0105" num="0104">The multiplexing circuitry illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref> may be implemented in the source node <b>705</b>, as shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>7</b>C</figref>. Multiplexing is for implementation with the first option described above because it uses GMP to perform the dynamic rate adaptation for each individual thread within the packets and IMP to perform rate adaptation at the packet level. Since the CBR client of each thread can have a different source clock, it may be more difficult to use IMP within the MTN Path stream for thread-level rate adaptation, as in the second option described above with reference to <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>8</b>C</figref>.</p><p id="p-0106" num="0105">An example of the multiplexing performed by the system <b>1200</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> is illustrated in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, wherein each thread <b>1261</b>, <b>1262</b>, <b>1263</b>, <b>1264</b>, <b>1265</b>, <b>1266</b> of 64B/66B-encoded blocks of CBR client data <b>1260</b> has its own GMP overhead <b>1275</b> for rate adapting the CBR client data into the channel provided by that thread. This GMP overhead <b>1275</b> occupies one or more data block positions at the end of the pseudo-Ethernet packet. If a client occupies k threads, the GMP overhead of the highest thread number may be used, with a resulting BMP granularity of k blocks. As shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, in this case the termination control block /T/ <b>1270</b> at the end of the packets carries information other than GMP overhead, e.g., a multiplexing structure indicator field (MSI) <b>1280</b>. The packet length of 2730 in this example is illustrative of an advantageous packet length when multiplexing is used, as illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, and shown and described with reference to Table 1, below.</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>11</b>B</figref> illustrates the positioning of the GMP thread frames in the MTN path GMP frame for multiplexed CBR clients. In particular, thread frames <b>1287</b> for the 64B/66B-encoded blocks of CBR client data <b>1289</b>, <b>1290</b>, <b>1292</b> are defined, comprising encoded blocks of client data and pad blocks <b>1293</b> and GMP OH <b>1289</b>. The thread interleaver and pseudo-Ethernet packet <b>1296</b> maker defines a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved GMP overhead (OH) data payload blocks. The variable number of encoded blocks and the variable number of pad blocks are then mapped into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and the GMP OH is mapped into the plurality of interleaved GMP OH data payload blocks by thread interleaver and pseudo-Ethernet packet <b>1296</b>. A stream of GMP multiplexing frames <b>1298</b> is then assembled by thread interleaver and pseudo-Ethernet packet <b>1296</b> comprising the consecutive pseudo-Ethernet packets. In this particular example, the stream of GMP multiplexing frames <b>1298</b> comprises 3 pseudo-Ethernet packets that carry 32 GMP thread frames.</p><p id="p-0108" num="0107">When multiplexing is confined to a single 3-packet GMP frame <b>1300</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>12</b>A</figref>, the number of threads may be an integer divisor of the number of blocks in a pseudo-Ethernet packet available for carrying client payload so that each pseudo-Ethernet packet contains the same number of blocks per thread with each pseudo-Ethernet packet <b>1305</b>, <b>1310</b>, <b>1315</b> including GMP overhead <b>1322</b>, <b>1327</b>, <b>1332</b>, respectively, for the payload blocks <b>1320</b>, <b>1325</b>, <b>1330</b>. Consequently, the pseudo-Ethernet packet size <b>1305</b>, <b>1310</b>, <b>1315</b> is chosen such that the number of available payload blocks <b>1320</b>, <b>1325</b>, <b>1330</b> are factored into a convenient and efficient number of threads. The total number of threads can be multiplied by spreading them across multiple GMP frames to form an extended GMP frame, as illustrated in <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>. As shown in <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, an extended GMP frame <b>1350</b> consisting of six pseudo-Ethernet packets (i.e., a set of two 3-packet GMP frames) <b>1360</b>, <b>1362</b>, <b>1364</b> . . . <b>1366</b> to double the number of available threads while still using the same number of GMP overhead bytes <b>1370</b>, <b>1372</b>, <b>1374</b> . . . <b>1376</b> per pseudo-Ethernet packet <b>1360</b>, <b>1362</b>, <b>1364</b> . . . <b>1366</b>. Specifically, <figref idref="DRAWINGS">FIG. <b>12</b>B</figref> uses the same example pseudo-Ethernet packet format as <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>. <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> provides per-packet GMP overhead fields for 32 threads. <figref idref="DRAWINGS">FIG. <b>12</b>B</figref> illustrates extending the GMP Multiplexing frame to six packets in order to accommodate 64 threads. Since an MTN multiframe <b>1380</b> can consist of 24 pseudo-Ethernet packets, as illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, it may be convenient to combine up to eight sets of GMP frames <b>1382</b>, <b>1384</b>, <b>1386</b>, <b>1388</b>, <b>1390</b>, <b>1392</b>, <b>1394</b>, <b>1396</b> into an extended GMP frame to provide eight times as many threads.</p><p id="p-0109" num="0108">Table 1 illustrates some potential advantageous choices for pseudo-Ethernet packet sizes and numbers of threads in both GMP frames and extended GMP frames. Note that it's possible to divide the 5 Gb/s section calendar slots into four sets of interleaved individual 1.25 Gb/s calendar slots and run the MTN path signal at the corresponding 1/4 rate. Table 1 illustrates the resulting thread rates for both calendar slot rates. Note that the thread payload rates in Table 1 are the channel capacity for carrying a client data stream in the 64-bit payload field of the associated 64B/66B blocks. Option A in Table 1 is attractive for three reasons. First, it provides 32 threads. As a power of 2, 32 is consistent with other multiplexing channelization using power of 2 for implementation convenience. Second, its 155.622 Mbit/s capacity is efficient for carrying legacy 155.52 Mb/s SDH VC-4/STM-1 client signals. Third, the resulting packets are of 2730-block length which allows for the insertion of the minimum number of idle blocks to cover the 200 ppm potential clock offset, as shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. As such, it makes efficient use of the available MTN frame bandwidth. Option B of Table 1 preserves these features but has four times as many threads at exactly &#xbc; the rate of Option A. Option C of Table 1 uses slightly less efficient 2695-block pseudo-Ethernet packets and a less convenient number of threads. However, Option C is well suited for carrying Ethernet client signals. For example, a 100 MBASE-R Ethernet client data using native 4B/5B block coding can be efficiently carried in a 131.82 Mb/s channel created from six threads for the 5 Gb/s calendar slot case or 24 threads for the 1.25 Gb/s calendar slot case. Three threads of the 1.25 Gb/s calendar slot case can be combined into a 16.478 Mb/s channel for efficient transport of a 10 MBASE-R Ethernet client data, also assuming the client uses 4B/5B block coding. Note that <figref idref="DRAWINGS">FIG. <b>13</b></figref> uses the 2730-block packet size of Option A and Option B in Table 1.</p><p id="p-0110" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="406pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Potential Thread Multiplexing Configurations</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="11"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="42pt" align="center"/><colspec colname="4" colwidth="35pt" align="center"/><colspec colname="5" colwidth="28pt" align="center"/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="35pt" align="center"/><colspec colname="8" colwidth="49pt" align="center"/><colspec colname="9" colwidth="35pt" align="center"/><colspec colname="10" colwidth="42pt" align="center"/><colspec colname="11" colwidth="49pt" align="center"/><tbody valign="top"><row><entry/><entry/><entry/><entry/><entry/><entry/><entry/><entry/><entry>Total</entry><entry>Thread</entry><entry>Thread</entry></row><row><entry/><entry>Packet</entry><entry>Packet</entry><entry>Packets</entry><entry>Number</entry><entry>GMP</entry><entry>Blocks</entry><entry>GMP JC1-JC3</entry><entry>GMP OH</entry><entry>payload rate</entry><entry>payload rate</entry></row><row><entry/><entry>Size</entry><entry>Payload Size</entry><entry>per GMP</entry><entry>of</entry><entry>OH inst.</entry><entry>per GMP</entry><entry>OH bits per</entry><entry>size per</entry><entry>(Mbit/s) with</entry><entry>(Mbit/s) with</entry></row><row><entry>Option</entry><entry>blocks</entry><entry>(blocks)</entry><entry>frame</entry><entry>Threads</entry><entry>per packet</entry><entry>OH</entry><entry>packet <sup>1</sup></entry><entry>packet <sup>2</sup></entry><entry>5 Gb/s Cal.</entry><entry>1.25 Gb/s Cal.</entry></row><row><entry namest="1" nameend="11" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="11"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="42pt" align="center"/><colspec colname="4" colwidth="35pt" align="char" char="."/><colspec colname="5" colwidth="28pt" align="char" char="."/><colspec colname="6" colwidth="35pt" align="center"/><colspec colname="7" colwidth="35pt" align="center"/><colspec colname="8" colwidth="49pt" align="center"/><colspec colname="9" colwidth="35pt" align="center"/><colspec colname="10" colwidth="42pt" align="char" char="."/><colspec colname="11" colwidth="49pt" align="char" char="."/><tbody valign="top"><row><entry>A</entry><entry>2730</entry><entry>2720 =</entry><entry>3</entry><entry>32</entry><entry>32</entry><entry>85</entry><entry>144-256</entry><entry>7-8</entry><entry>155.6224</entry><entry>38.9056</entry></row><row><entry/><entry/><entry>32 &#xd7; 5 &#xd7; 17</entry></row><row><entry>B</entry><entry>2730</entry><entry>2720 =</entry><entry>24</entry><entry>256</entry><entry>32</entry><entry>85</entry><entry>144-256</entry><entry>7-8</entry><entry>19.4528</entry><entry>4.8632</entry></row><row><entry/><entry/><entry>32 &#xd7; 5 &#xd7; 17</entry></row><row><entry>C</entry><entry>2695</entry><entry>2688 =</entry><entry>24</entry><entry>224</entry><entry>28</entry><entry>96</entry><entry>126-224</entry><entry>6-7</entry><entry>21.9702</entry><entry>5.4926</entry></row><row><entry/><entry/><entry>2<sup>7 </sup>&#xd7; 3 &#xd7; 7 =</entry></row><row><entry/><entry/><entry>4 &#xd7; 7 &#xd7; 96</entry></row><row><entry namest="1" nameend="11" align="center" rowsep="1"/></row><row><entry namest="1" nameend="11" align="left" id="FOO-00001">Notes:</entry></row><row><entry namest="1" nameend="11" align="left" id="FOO-00002"><sup>1 </sup>The number of GMP JC1-JC3 bits depends on the Cm size that is chosen or whether an entire byte is always dedicated to the JC1-JC3 fields.</entry></row><row><entry namest="1" nameend="11" align="left" id="FOO-00003"><sup>2 </sup>It is assumed that a whole byte will be dedicated to the JC4-JC6 CnD field.</entry></row></tbody></tgroup></table></tables></p><p id="p-0111" num="0109">If the MTN path signal occupies k calendar slots of the MTN section, there will be k times as many pseudo-Ethernet packets between MTN POH blocks. Rather than increasing the thread rate by a factor of k, the GMP overhead can be spread over k interleaved GMP multiplexing frames, such that the thread rate remains the same regardless of the value of k.</p><p id="p-0112" num="0110"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> illustrates a flow diagram <b>1400</b> of a method for performing rate adaptation of constant bit rate (CBR) client data stream for transmission over a Metro Transport Network (MTN). The method <b>1400</b> is performed by a source node as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>.</p><p id="p-0113" num="0111">The method <b>1400</b> begins at operation <b>1405</b> by receiving a stream of 64B/66B-encoded blocks of CBR client data at a source node.</p><p id="p-0114" num="0112">At operation <b>1410</b>, the method <b>1400</b> continues by defining a plurality of pseudo-Ethernet packets. In particular, at operation <b>1410</b> the source node creates a plurality of pseudo-Ethernet empty packets having a packet start control block (/S/), a packet termination control block (/T/) and fixed payload capacity of N&#x2212;2 64B/66B data blocks. The method continues at <b>1415</b> by assembling a stream of Generic Mapping Procedure (GMP) frames comprising a plurality of GMP frames by mapping a variable number of blocks of the stream of 64B/66B-encoded blocks of CBR client data, a variable number of pad blocks, and GMP overhead into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets. In a specific example, the number of consecutive pseudo-Ethernet packets of the plurality of GMP frames is equal to three, and mapping GMP overhead into the consecutive pseudo-Ethernet packets may comprise mapping a portion of the GMP overhead into a packet termination control block or a packet start control block of each of the three consecutive pseudo-Ethernet packets. In another example, each of the plurality of pseudo-Ethernet packets comprises a packet start control block comprising a plurality of bytes, a plurality of data payload blocks and a packet termination control block comprising a plurality of bytes and assembling the plurality of GMP frames comprises, mapping the variable number of blocks of the stream of 64B/66B-encoded blocks of CBR client data and the variable number of pad blocks into the plurality of data payload blocks of the consecutive pseudo-Ethernet packets. The GMP overhead may be mapped into the packet start control block or the packet termination control block of the consecutive pseudo-Ethernet packets.</p><p id="p-0115" num="0113">At operation <b>1420</b>, the method <b>1400</b> continues by inserting a fixed number of idle blocks into the stream of GMP frames and the method <b>1400</b> concludes at operation <b>1425</b> by inserting an MTN path overhead (POH) frame that is aligned to the plurality of GMP frames into the stream of GMP frames to generate a stream of CBR rate adapted GMP frames.</p><p id="p-0116" num="0114"><figref idref="DRAWINGS">FIG. <b>14</b>B</figref> illustrates a flow diagram <b>1450</b> of a method for performing rate adaptation of constant bit rate (CBR) client data for transmission over a Metro Transport Network (MTN) performed specifically by source node as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>7</b>C</figref>.</p><p id="p-0117" num="0115">At operation <b>1455</b>, the method begins by deriving an MTN path signal rate based upon a reference clock at a source node and continues at operation <b>1460</b> by deriving a CBR client data stream rate from the stream of 64B/66B-encoded blocks of CBR client data.</p><p id="p-0118" num="0116">The method continues at operation <b>1465</b> by assembling a plurality of Generic Mapping Procedure (GMP) frames by mapping a variable number of blocks of the stream of 64B/66B-encoded blocks of CBR client data, a variable number of pad blocks, and GMP overhead into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, wherein the variable number of blocks of the stream of 64B/66B-encoded blocks of CBR client data and the variable number of pad blocks are based on a difference between the path signal rate derived from the MTN and the CBR client data stream rate.</p><p id="p-0119" num="0117">The method continues at operation <b>1470</b> by inserting a fixed number of idle blocks into the stream of GMP frames and concludes at operation <b>1475</b> by inserting an MTN path overhead (POH) frame that is aligned to the plurality of GMP frames into the stream of GMP frames to generate a stream of CBR rate adapted GMP frames.</p><p id="p-0120" num="0118"><figref idref="DRAWINGS">FIG. <b>15</b>A</figref> illustrates a flow diagram <b>1500</b> of a method for performing rate adaptation of constant bit rate (CBR) client data for transmission over a Metro Transport Network (MTN) performed specifically by source node as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>.</p><p id="p-0121" num="0119">The method <b>1500</b> begins at operation <b>1505</b> by receiving a stream of encoded blocks of CBR client data at a source node.</p><p id="p-0122" num="0120">At operation <b>1510</b>, the method <b>1500</b> continues by defining a plurality of pseudo-Ethernet packets. In particular, at operation <b>1510</b> the source node creates a plurality of pseudo-Ethernet empty packets having a packet start control block (/S/), a packet termination control block (/T/) and fixed payload capacity of N&#x2212;2 data blocks. The method continues at <b>1515</b> by assembling a stream of Generic Mapping Procedure (GMP) frames comprising a plurality of GMP frames by mapping a fixed number of blocks of the stream of encoded blocks of CBR client data, a fixed number of pad blocks, and GMP overhead into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets. In a specific example, the number of consecutive pseudo-Ethernet packets of the plurality of GMP frames is equal to three, and mapping GMP overhead into the consecutive pseudo-Ethernet packets may comprise mapping a portion of the GMP overhead into a packet termination control block of each of the three consecutive pseudo-Ethernet packets. In another example, each of the plurality of pseudo-Ethernet packets comprises a packet start control block comprising a plurality of bytes, a plurality of data payload blocks and a packet termination control block comprising a plurality of bytes and assembling the plurality of GMP frames comprises, mapping the fixed number of blocks of the stream of encoded blocks of CBR client data and the fixed number of pad blocks into the plurality of data payload blocks of the consecutive pseudo-Ethernet packets. The GMP overhead may be mapped into the packet start control block or the packet termination control block of the consecutive pseudo-Ethernet packets.</p><p id="p-0123" num="0121">At operation <b>1520</b>, the method <b>1500</b> continues by inserting a variable number of idle blocks into the stream of GMP frames and inserting an indication of the variable number of idle blocks inserted into the stream of GMP frames. The method <b>1500</b> concludes at operation <b>1525</b> by inserting an MTN path overhead (POH) frame that is aligned to the plurality of GMP frames into the stream of GMP frames to generate a stream of CBR rate adapted GMP frames.</p><p id="p-0124" num="0122"><figref idref="DRAWINGS">FIG. <b>15</b>B</figref> illustrates a flow diagram <b>1550</b> of a method for performing rate adaptation of constant bit rate (CBR) client data for transmission over a Metro Transport Network (MTN) performed specifically by source node as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>-<figref idref="DRAWINGS">FIG. <b>8</b>C</figref>.</p><p id="p-0125" num="0123">At operation <b>1555</b>, the method <b>1550</b> begins by deriving an MTN path layer stream rate based upon a reference clock at the source node and continues at operation <b>1560</b> by deriving a CBR client data stream rate from the stream of 64B/66B-encoded blocks of CBR client data.</p><p id="p-0126" num="0124">The method continues at operation <b>1565</b> by assembling a stream of Generic Mapping Procedure (GMP) frames comprising a plurality of GMP frames by mapping a fixed number of blocks of the stream of encoded blocks of CBR client data, a fixed number of pad blocks, and GMP overhead into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, wherein the fixed number of pad blocks are based on the CBR client data stream rate.</p><p id="p-0127" num="0125">The method continues at operation <b>1570</b> by inserting a variable number of idle blocks into the stream of GMP frames and inserting an indication of the variable number of idle blocks inserted into the stream of GMP frames by the source node, wherein the variable number of idle blocks is based on the difference between the MTN path signal rate and the CBR client data stream rate.</p><p id="p-0128" num="0126">The method concludes at operation <b>1575</b> by mapping an indication of the number of idle blocks inserted into the packet termination control block of the pseudo-Ethernet packet prior to the variable number of idle blocks inserted into the stream of GMP frames by the source node. In an alternative example, the indication of the variable number of idle blocks may be mapped into the packet start control block instead of the packet termination control block. In a particular example, an indication of a fractional remainder of the variable number of idle blocks is inserted into the stream of GMP frames. In another alternative example, the number of idle blocks and fractional idle remainder represent a modulo running count of the number of idle blocks that have been transmitted since an arbitrary start time rather than the number of idles inserted immediately prior to or following the packet containing that overhead. In this example, the receiver determines the number of idle blocks transmitted between packets as the difference between the idle count overhead values in those respective packets.</p><p id="p-0129" num="0127">The flow diagram <b>1600</b> of <figref idref="DRAWINGS">FIG. <b>16</b>A</figref> illustrates a continuation of the method illustrated in <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, following the rate adaptation of the CBR client data. At least a portion of the method <b>1600</b> illustrated in <figref idref="DRAWINGS">FIG. <b>16</b>A</figref> is performed by an intermediate node of the MTN.</p><p id="p-0130" num="0128">At operation <b>1605</b>, the method <b>1600</b> begins by transmitting the stream of CBR rate adapted GMP frames, including the fixed number of idle blocks, over the MTN. The source node illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> may transmit the stream of CBR rate adapted GMP frames over the MTN.</p><p id="p-0131" num="0129">At operation <b>1610</b>, the method continues by receiving the stream of CBR rate adapted GMP frames and the fixed number of idle blocks at a first intermediate node of the MTN. The method continues at operation <b>1615</b> by performing idle mapping procedure (IMP) rate adaptation of the stream of CBR rate adapted GMP frames received at the first intermediate node to modify the number of idle blocks.</p><p id="p-0132" num="0130">At operation <b>1620</b>, the method continues by transmitting the stream of CBR rate adapted GMP frames having the modified number of idle blocks from the first intermediate node to a next node of the MTN. The next node may be a next intermediate node or a sink node. If the next node is an intermediate node, the method continues by performing IMP rate adaptation again, as in operation <b>1615</b>. If the next intermediate node is a sink node, the method continues at <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>.</p><p id="p-0133" num="0131">The flow diagram <b>1650</b> of <figref idref="DRAWINGS">FIG. <b>16</b>B</figref> illustrates a method performed by a sink node of the MTN, as previously described with reference to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0134" num="0132">The method <b>1650</b> beings at operation <b>1655</b> by receiving the stream of CBR rate adapted GMP frames having the modified number of idle blocks at the sink node and continues at operation <b>1657</b> by performing idle mapping procedure (IMP) rate adaptation to adapt the stream of CBR rate adapted GMP frames to a local reference clock at the sink node. The method <b>1650</b> continues at operation <b>1660</b> by determining the CBR client data stream rate of the CBR client data stream from the GMP overhead and a difference between the fixed number of idle blocks inserted into the stream of CBR rate adapted GMP frames by the source node and the modified number of idle blocks received at the sink node. In this example, the fixed number of idle blocks inserted by the source node is known by the sink node.</p><p id="p-0135" num="0133">The method concludes at operation <b>1665</b> by extracting the stream of encoded blocks of CBR client data from the stream of CBR rate adapted GMP frames using the determined CBR client data stream rate.</p><p id="p-0136" num="0134">The flow diagram <b>1700</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> illustrates a continuation of the method illustrated in <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>, following the rate adaptation of the CBR client data. The method <b>1700</b> illustrated in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> is at least partially performed by an intermediate node of the MTN.</p><p id="p-0137" num="0135">At operation <b>1705</b>, the method <b>1700</b> begins by transmitting the stream of CBR rate adapted GMP frames, including the variable number of idle blocks and the indication of the variable number of idle blocks inserted by the source node over the MTN. The source node illustrated in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> may transmit the stream of CBR rate adapted GMP frames over the MTN.</p><p id="p-0138" num="0136">At operation <b>1710</b>, the method continues by receiving the stream of CBR rate adapted GMP frames, the variable number of idle blocks and the indication of the variable number of idle blocks inserted by the source node at an intermediate node of the MTN. The method continues at operation <b>1715</b> by performing idle mapping procedure (IMP) rate adaptation of the stream of CBR rate adapted GMP frames received at the intermediate node to modify the number of idle blocks.</p><p id="p-0139" num="0137">At operation <b>1720</b>, the method continues by transmitting the stream of CBR rate adapted GMP frames having the modified number of idle blocks and the indication of the variable number of idle blocks inserted by the source node from the intermediate node to a next node of the MTN. The next node may be a next intermediate node or a sink node. If the next node is an intermediate node, the method continues by performing IMP rate adaptation again, as in operation <b>1715</b>. If the next intermediate node is a sink node, the method continues at <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>.</p><p id="p-0140" num="0138">The flow diagram <b>1750</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref> illustrates a method performed by a sink node of the MTN, as previously described with reference to <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0141" num="0139">The method <b>1750</b> beings at operation <b>1755</b> by receiving the stream of CBR rate adapted GMP frames having the modified number of idle blocks and the indication of the variable number of idle blocks inserted by the source node at the sink node and continues at operation <b>1757</b> by performing idle mapping procedure (IMP) rate adaptation to adapt the stream of CBR rate adapted GMP frames to a local reference clock at the sink node. The method <b>1750</b> continues at operation <b>1760</b> by determining the CBR client data stream rate of the CBR client data stream from the GMP overhead and a difference between the indication of the variable number of idle blocks inserted by the source node and the modified number of idle blocks received at the sink node.</p><p id="p-0142" num="0140">The method concludes at operation <b>1765</b> by extracting the stream of encoded blocks of CBR client data from the stream of CBR rate adapted GMP frames using the determined CBR client data stream rate.</p><p id="p-0143" num="0141">The flow diagrams of <figref idref="DRAWINGS">FIG. <b>14</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, <figref idref="DRAWINGS">FIG. <b>15</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>, <figref idref="DRAWINGS">FIG. <b>16</b>A</figref>, <figref idref="DRAWINGS">FIG. <b>16</b>B</figref>, <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>17</b>B</figref> assume that the CBR client data stream that is being rate adapted is from a single client data stream. The flow diagram <b>1800</b> illustrated in <figref idref="DRAWINGS">FIG. <b>18</b>A</figref> assumes that the client data stream is from two or more client data streams and that multiplexing is performed, as previously described with reference to <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0144" num="0142">The method <b>1800</b> begins at operation <b>1805</b> by receiving two or more streams of CBR client data at a source node. Each of the two or more streams of CBR client data includes a client payload and any necessary operations, administration and maintenance (OAM) overhead for the client. The two or more streams of CBR client data may be received at substantially the same time or alternatively, the one or more of the streams may be received non-simultaneously.</p><p id="p-0145" num="0143">At operation <b>1810</b>, the method <b>1800</b> continues by defining a respective plurality of GMP thread frames for the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein each of the respective plurality of GMP thread frames comprises a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead for the respective stream of 64B/66B-encoded blocks of CBR client data.</p><p id="p-0146" num="0144">At operation <b>1815</b>, the method <b>1800</b> continues by defining a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved GMP overhead (OH) data payload blocks. Optionally, the number of data payload blocks in each of the plurality of interleaved threads may be an integer number of data payload blocks.</p><p id="p-0147" num="0145">The method continues at operation <b>1820</b> by mapping the respective plurality of thread frames for each of the two or more streams of 64b/66b-encoded blocks of CBR client data into consecutive pseudo-ethernet packets of the plurality of pseudo-ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks. In a particular example, the mapping is performed in a round-robin manner. While round-robin has been described herein, this is not meant to be limiting in any way, other manners may be utilized without exceeding the scope.</p><p id="p-0148" num="0146">At operation <b>1825</b>, the method continues by assembling a stream of GMP multiplexing frames comprising the consecutive pseudo-Ethernet packets.</p><p id="p-0149" num="0147">At operation <b>1830</b>, the method <b>1800</b> continues by inserting a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames. The method <b>1800</b> concludes at operation <b>1835</b> by inserting an MTN path overhead (POH) frame that is aligned to the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames.</p><p id="p-0150" num="0148"><figref idref="DRAWINGS">FIG. <b>18</b>B</figref> illustrates a method <b>1850</b> for rate adapting and multiplexing two or more client data streams. Rate adaptation of the two or more client data streams can be performed by the system illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>D</figref> and the multiplexing of the two or more client data streams can be performed by the system illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0151" num="0149">The method <b>1850</b> begins at operation <b>1855</b> by deriving an MTN path signal rate based upon a reference clock rate at the source node. The method <b>1850</b> continues at operation <b>1860</b> by deriving a client data stream rate for each of the two or more streams of 64B/66B-encoded blocks of CBR client data relative to the reference clock rate, wherein for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, the variable number of encoded blocks of CBR client data and the variable number of pad blocks are based on a difference between the MTN path signal rate and the respective client data stream rate.</p><p id="p-0152" num="0150"><figref idref="DRAWINGS">FIG. <b>19</b>A</figref> illustrates an example method <b>1900</b> for performing rate adaption at an intermediate node of the MTN for the method as illustrated in <figref idref="DRAWINGS">FIG. <b>18</b>B</figref>.</p><p id="p-0153" num="0151">The method <b>1900</b> begins at operation <b>1905</b> by transmitting the stream of GMP multiplexing rate adapted frames and the fixed number of idle blocks over the MTN. The method continues at operation <b>1910</b> by receiving the stream of GMP multiplexing rate adapted frames and the fixed number of idle blocks at a first intermediate node of the MTN.</p><p id="p-0154" num="0152">At the first intermediate node, the method <b>1900</b> continues at operation <b>1915</b> by performing idle mapping procedure (IMP) rate adaptation of the stream of GMP multiplexing rate adapted frames received at the first intermediate node to modify the fixed number of idle blocks. The method <b>1900</b> concludes at operation <b>1920</b> by transmitting the stream of GMP multiplexing rate adapted frames having the modified fixed number of idle blocks from the first intermediate node to a next node of the MTN.</p><p id="p-0155" num="0153"><figref idref="DRAWINGS">FIG. <b>19</b>B</figref> illustrates a method for performing data extraction at a sink node of the MTN for the method as illustrated in <figref idref="DRAWINGS">FIG. <b>18</b>B</figref>.</p><p id="p-0156" num="0154">The method <b>1950</b> of <figref idref="DRAWINGS">FIG. <b>19</b>B</figref> begins at operation <b>1955</b> by receiving the stream of GMP multiplexing rate adapted frames having the modified fixed number of idle blocks at the sink node. At operation <b>1960</b>, the method <b>1950</b> continues by performing IMP to adapt the stream of GMP multiplexing rate adapted frames to a local reference clock at the sink node.</p><p id="p-0157" num="0155">The method <b>1950</b> continues at operation <b>1965</b> by determining, for each interleaved thread, a corresponding client data stream rate from the GMP OH and a difference between the fixed number of idle blocks inserted between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing rate adapted frames by the source node and the modified fixed number of idle blocks received at the sink node. The method <b>1950</b> concludes at operation <b>1970</b> by extracting the two or more 64B/66B-encoded blocks of CBR client data from the stream of GMP multiplexing rate adapted thread frames using the corresponding client data stream rate for the interleaved thread.</p><p id="p-0158" num="0156">Various benefits are provided by the system and methods of the examples, including, but not limited to: (1) The use of GMP within a packet to enhance flexibility and compatibility with potential MTN equipment implementations; (2) Tying the CBR packet-bearing structure to the MTN POH frame, such that the exact G.8312 nominal spacing of MTN overhead blocks can be consistently used; (3) Having the source node indicate the number of idle blocks it inserted after a packet, including the amount of remaining fractional idle blocks for improved IMP rate adaptation performance; (4) Providing the ability to do TDM client multiplexing within the packet, with GMP for the per-client rate adaptation; (5) No need to add new overhead to the MTN Path layer signal; (6) Improved bandwidth efficiency compared to using regular Ethernet packets in a CBR over Ethernet Service (CES) mode; and (7) Carrying CBR client signals in packets that are much longer than Ethernet packets for improved efficiency in an MTNnetwork that operates independent of packet length.</p><p id="p-0159" num="0157">In various examples, portions of the system of the present examples may be implemented in a Field Programmable Gate Array (FPGA) or Application Specific Integrated Circuit (ASIC). As would be appreciated by one skilled in the art, various functions of circuit elements may also be implemented as processing steps in a software program. Such software may be employed in, for example, a digital signal processor, a network processor, a microcontroller or general-purpose computer.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for performing rate adaptation, the method comprising:<claim-text>receiving two or more streams of 64B/66B-encoded blocks of constant bit rate (CBR) client data at a source node;</claim-text><claim-text>defining a respective plurality of generic mapping procedure (GMP) thread frames for a respective stream of the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein the respective plurality of GMP thread frames comprise a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead (OH) for a respective stream of 64B/66B encoded blocks of CBR client data;</claim-text><claim-text>defining a plurality of pseudo-Ethernet packets, wherein the respective plurality of pseudo-Ethernet packets comprise a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved GMP overhead (OH) data payload blocks;</claim-text><claim-text>mapping the respective plurality of thread frames into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks;</claim-text><claim-text>assembling a stream of GMP multiplexing frames comprising the consecutive pseudo-Ethernet packets;</claim-text><claim-text>inserting a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames; and</claim-text><claim-text>inserting an MTN path overhead (POH) frame that is aligned to the plurality of GMP multiplexing frames into the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the two or more streams of 64B/66B-encoded blocks of CBR client data are received substantially simultaneously.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the two or more streams of 64B/66B-encoded blocks of CBR client data are received non-simultaneously.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein mapping the plurality of GMP thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets is performed in a round-robin manner.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the number of payload blocks in each of the plurality of interleaved threads is an integer.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the fixed number of idle blocks inserted between the plurality pseudo-Ethernet packets of the stream of GMP multiplexing frames is known by a sink node of the MTN.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein defining the plurality of GMP thread frames comprises:<claim-text>deriving an MTN path signal rate based upon a reference clock at the source; and</claim-text><claim-text>deriving a client data stream rate for the respective two or more streams of 64B/66B-encoded blocks of CBR client data relative to the reference clock rate,</claim-text><claim-text>wherein, for the respective two or more streams of 64B/66B-encoded blocks of CBR client data, the variable number of encoded blocks of CBR client data and the variable number of pad blocks are based on a difference between the MTN path signal rate and the respective client data stream rate.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising:<claim-text>transmitting the stream of GMP multiplexing rate adapted frames, including the fixed number of idle blocks, over the MTN;</claim-text><claim-text>receiving the stream of GMP multiplexing rate adapted frames and the fixed number of idle blocks at a first intermediate node of the MTN;</claim-text><claim-text>performing idle mapping procedure (IMP) rate adaptation of the stream of GMP multiplexing rate adapted frames received at the first intermediate node to modify the fixed number of idle blocks; and</claim-text><claim-text>transmitting the stream of GMP multiplexing rate adapted frames and the modified fixed number of idle blocks from the first intermediate node to a next node of the MTN.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the next node of the MTN is selected from a next intermediate node and a sink node.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the next node is a sink node, the method comprising:<claim-text>receiving the stream of GMP multiplexing rate adapted frames and the modified fixed number of idle blocks at the sink node;</claim-text><claim-text>determining, for the respective interleaved thread, a corresponding client data stream rate from the GMP overhead and a difference between the fixed number of idle blocks inserted between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing rate adapted frames by the source node and the modified fixed number of idle blocks received at the sink node;</claim-text><claim-text>and</claim-text><claim-text>extracting the two or more streams of 64B/66B-encoded blocks of CBR client data from the stream of GMP multiplexing rate adapted frames using the corresponding client data stream rate for the interleaved thread.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method for performing rate adaptation of two or more streams of client data for transmission over a Metro Transport Network (MTN), the method comprising:<claim-text>receiving two or more streams of 64B/66B-encoded blocks of constant bit rate (CBR) client data at a source node;</claim-text><claim-text>defining a plurality of generic mapping procedure (GMP) thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein each of the plurality of GMP thread frames comprises a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead (OH) for a respective stream of 64B/66B encoded blocks of CBR client data;</claim-text><claim-text>defining a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved generic mapping procedure (GMP) overhead (OH) data payload blocks;</claim-text><claim-text>mapping the plurality of thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks;</claim-text><claim-text>assembling a stream of (GMP) multiplexing frames comprising the consecutive pseudo-Ethernet packets;</claim-text><claim-text>inserting a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames;</claim-text><claim-text>inserting an MTN path overhead (POH) frame that is aligned to the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames;</claim-text><claim-text>transmitting the stream of GMP multiplexing rate adapted frames, including the fixed number of idle blocks, over the MTN;</claim-text><claim-text>receiving the stream of GMP multiplexing rate adapted frames and the fixed number of idle blocks at a first intermediate node of the MTN;</claim-text><claim-text>performing idle mapping procedure (IMP) rate adaptation of the stream of rate adapted GMP multiplexing rate adapted frames received at the first intermediate node to modify the fixed number of idle blocks;</claim-text><claim-text>transmitting the stream of GMP multiplexing rate adapted frames and the modified fixed number of idle blocks from the intermediate node to a sink node of the MTN;</claim-text><claim-text>receiving the stream of rate adapted GMP multiplexing rate adapted frames and the modified fixed number of idle blocks at the sink node;</claim-text><claim-text>determining, for each interleaved thread, a corresponding client data stream rate from the GMP overhead and a difference between the fixed number of idle blocks inserted into the stream GMP multiplexing frames by the source node and the modified number of idle blocks received at the sink node; and</claim-text><claim-text>extracting the two or more streams of 64B/66B-encoded blocks of CBR client data from the stream of GMP multiplexing rate adapted frames using the corresponding client data stream rate for the interleaved thread.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein mapping the plurality of GMP thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets is performed in a round-robin manner.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the number of payload blocks in each of the plurality of interleaved threads is an integer.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the fixed number of idle blocks inserted between the plurality of pseudo-Ethernet packets of the stream of GMP multiplexing frames is known by a sink node of the MTN.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein defining the plurality of GMP thread frames comprises:<claim-text>deriving an MTN path signal rate based upon a reference clock at the source; and</claim-text><claim-text>deriving a client data stream rate from each of the two or more streams of 64B/66B-encoded blocks of CBR client data relative to the reference clock rate,</claim-text><claim-text>wherein, for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, the variable number of encoded blocks of CBR client data and the variable number of pad blocks are based on a difference between the MTN path signal rate and the respective client data stream rate.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A source node for transmitting a client data stream over a Metro Transport Network (MTN), the source node comprising circuitry to:<claim-text>receive two or more streams of 64B/66B-encoded blocks of client data;</claim-text><claim-text>define a plurality of generic mapping procedure (GMP) thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, wherein each of the plurality of GMP thread frames comprises a variable number of encoded blocks of CBR client data, a variable number of pad blocks and GMP overhead (OH) for a respective stream of 64B/66B encoded blocks of CBR client data;</claim-text><claim-text>define a plurality of pseudo-Ethernet packets, wherein each of the plurality of pseudo-Ethernet packets comprises a plurality of data payload blocks divided into a plurality of interleaved threads and a plurality of interleaved generic mapping procedure (GMP) overhead (OH) data payload blocks;</claim-text><claim-text>map the plurality of thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets, by mapping the variable number of encoded blocks and the variable number of pad blocks into one of the plurality of interleaved threads of consecutive pseudo-Ethernet packets and mapping the GMP OH into the plurality of interleaved GMP overhead data payload blocks;</claim-text><claim-text>assemble a stream of (GMP) multiplexing frames comprising the consecutive pseudo-Ethernet packets;</claim-text><claim-text>insert a fixed number of idle blocks between the consecutive pseudo-Ethernet packets of the stream of GMP multiplexing frames; and</claim-text><claim-text>insert an MTN path overhead (POH) frame that is aligned to the stream of GMP multiplexing frames to generate a stream of GMP multiplexing rate adapted frames.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The source node of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the source node circuitry to transmit the stream of GMP multiplexing rate adapted frames, including the fixed number of idle blocks to an intermediate node or to a sink node of the MTN.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The source node of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the source node circuitry to map the plurality of GMP thread frames for each of the two or more streams of 64B/66B-encoded blocks of CBR client data into consecutive pseudo-Ethernet packets of the plurality of pseudo-Ethernet packets is performed in a round-robin manner.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The source node of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the number of payload blocks in each of the plurality of interleaved threads is an integer.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The source node of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the source node circuitry to define the plurality of GMP thread frames:<claim-text>derives an MTN path signal rate based upon a reference clock at the source; and</claim-text><claim-text>derives a client data stream rate from each of the two or more streams of 64B/66B-encoded blocks of CBR client data relative to the reference clock rate,</claim-text><claim-text>wherein, for each of the two or more streams of 64B/66B-encoded blocks of CBR client data, the variable number of encoded blocks of CBR client data and the variable number of pad blocks are based on a difference between the MTN path signal rate and the respective client data stream rate.</claim-text></claim-text></claim></claims></us-patent-application>