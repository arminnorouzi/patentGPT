<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007091A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007091</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942894</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>146</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>566</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>146</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0823</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>566</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR AUTOMATED, CONTROLLERLESS AND STATELESS NETWORK CONNECTION SELECTION BASED ON DISTRIBUTED SERVER INFORMATION</invention-title><us-related-documents><continuation-in-part><relation><parent-doc><document-id><country>US</country><doc-number>17183953</doc-number><date>20210224</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11477276</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942894</doc-number></document-id></child-doc></relation></continuation-in-part></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>IP Technology Labs, LLC</orgname><address><city>Baltimore</city><state>MD</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>MITCHELL</last-name><first-name>Gary</first-name><address><city>Owings Mills</city><state>MD</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>WHITTLE</last-name><first-name>Scott</first-name><address><city>Olney</city><state>MD</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>QUASEBARTH</last-name><first-name>Kurt</first-name><address><city>Baltimore</city><state>MD</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>IP Technology Labs, LLC</orgname><role>02</role><address><city>Baltimore</city><state>MD</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The invention is that of systems and methods for controllerless and distributed network connections to servers on a network by remote clients seeking their services. The invention comprises a central database where servers within a server group identified by a group name may post unique identifiers (UIDs) for retrieval by group clients configured with the group name, which may query the central database for server connection information such as uptime, downtime, and congestion in order to select a server for a preferential connection based on an overall availability profile as determined by the group client. In some embodiments, one server of the group is a &#x201c;dummy server&#x201d; that may aggregate and selectively transmit server information from other servers in the group, or other devices, and posts it to the central database for client access. The methods described herein eliminate a separate controller and thereby a single point of failure (SPOF).</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="111.17mm" wi="158.75mm" file="US20230007091A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="230.89mm" wi="168.49mm" orientation="landscape" file="US20230007091A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation-in-part of U.S. patent application Ser. No. 17/183,953, filed Feb. 24, 2021, the contents of which are hereby incorporated by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?federal-research-statement description="Federal Research Statement" end="lead"?><heading id="h-0002" level="1">STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT</heading><p id="p-0003" num="0002">The invention described in the present application was conceived and reduced to practice without the benefit of federal funding.</p><?federal-research-statement description="Federal Research Statement" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading><p id="p-0004" num="0003">The invention is that of systems and methods for controllerless and distributed network connection reachability, including optimized load balancing and connection traffic engineering leading to high-availability (HA) connection applications on a network.</p><p id="p-0005" num="0004">Current technologies and implementations are based on centrally and collocated services that aim to make a set of servers or services appear as one. Load balancers direct inbound connections to a plurality of backend servers, wherein a load balancer acts as a network traffic controller.</p><p id="p-0006" num="0005">For HA redundancy, state of the art technology involves the assignment of one or more servers into a group, and then virtualizing which server and network interfaces are presented to the wider network. If a server in the group goes down, then another is reconfigured with the virtualization information and takes over. They are grouped together as a physical unit and will present a single service to the network as if from a single server. There is no ability to have various servers operating in different physical and logical locations.</p><p id="p-0007" num="0006">Additionally, a remote application attempting to connect with a server in the group has no information about the server status (e.g., uptime, downtime, impaired, sunset, etc.) and how it might establish a connection to that application (e.g., User Datagram Protocol (UDP), Transmission Control Protocol (TCP) over cellular Port A, Port B, etc.). It would be desirable for a remote application to be equipped with this information so that can intelligently direct where it should connect, when and how.</p><p id="p-0008" num="0007">For example, it may be desirable to perform maintenance on a server, but also desirable to not to disconnect all existing connections but rather wait until they naturally disconnect (e.g., sunset). In that case, it would be beneficial to alert clients that no new connections are available to the server targeted for maintenance, but if a client is connected, to stay connected. Similarly, it may be beneficial to indicate whether traffic to a particular server is congested, in which case a remote application may connect to another server with less congestion based on its needs.</p><p id="p-0009" num="0008">In view of current methods, there is an explicit market need in the art for a method for a logical group of network applications (e.g., servers) to publish information about the reachability of those applications as well as details about how to associate or communicate with them, such as in a database visible to remote clients. Without using an intermediate controller or director, the methods described herein meet this need by distributing all of the available servers and the information contained on each asynchronously, so each individual remote application has full visibility of the list of servers within a group and can use that visible server information to establish connections in the most efficient manner possible.</p><heading id="h-0004" level="1">BRIEF SUMMARY OF THE INVENTION</heading><p id="p-0010" num="0009">The invention of the present disclosure involves the configuring of each of a plurality of applications (&#x201c;servers&#x201d;) with a group name and posting of a unique identifier (UID) for each server to a central database with the group name, along with various status and connection details. In certain embodiments, a &#x201c;dummy server&#x201d; with a UID is configured with the same group name as the plurality of servers and compiles aggregated server connection information comprising the UIDs, server connection information for the plurality of servers configured with the group name, and extrinsic connection information for posting to the central database. Extrinsic server connection information may be obtained from devices outside the server group, and may include information such as geolocation information, meta data, power supply information, temperature information, security information, maintenance information, time of day, environmental quality and bandwidth load. Remote applications (&#x201c;clients&#x201d;) will be configured with the group name only instead of individual server addresses. A client will query the central database and obtain a list of one or more of all the servers in the server group, including the dummy server, that have posted a UID as well as their status and connection details, or in the case of the dummy server, the status and connection details of the other servers in the group, along with extrinsic connection information. Clients will analyze this list and individually make connections based on the client's desired configuration.</p><p id="p-0011" num="0010">It is important to note that the central database does not perform any modification or adjudication of any server's postings, including the dummy server (i.e., the system is controllerless). The database simply receives database entries and updates or provides information for any inquires for a group name. Additionally, all clients configured with a group name will have full visibility to the available resources within that group, and overall reliability is increased as there isn't a central controller as a single point of failure (SPOF) for connecting and obtaining services. Another benefit is that servers in a group do not have to be collocated or grouped together physically or configured as a closed cluster using older redundancy technologies. This and other benefits of the invention of the present disclosure will become evident to one of ordinary skill in the art in view of the disclosure that follows and accompanying drawings and claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a high-level diagram showing the relationship between clients, servers and a database of server information for a given group named as described herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><p id="p-0013" num="0012">The invention is that of systems and methods for controllerless and distributed network connection reachability, including optimized load balancing and connection traffic engineering leading to HA connection profiles on a network. A system according to the present disclosure allows for the configuration of remote clients with a group name for a corresponding group of servers, including a dummy server that aggregates server information of other servers in the group, along with extrinsic connection information, for posting, and a central database containing information on each server within the group, which a client may access in order to direct connection behavior and obtain services more readily based on data traffic congestion levels and other factors affecting connectivity.</p><p id="p-0014" num="0013">In certain embodiments, the invention provides methods for a logical group of servers to publish information about their reachability as well as details about how to associate or communicate with them in a central database corresponding to the group and available to remote clients. A method according to the present invention comprises distribution of all of the available servers and their information asynchronously, so an individual client has full visibility to a list of servers within a group and can direct data traffic to a server with the most suitable connection attributes.</p><p id="p-0015" num="0014">The invention of the present disclosure enables clients to identify suitable connections without prior connection or communication with any server in a group, and without a controller, enables a group of resources to be located physically or logically anywhere in a network and pushes group resource information to all associated remote applications for local decision processing. This eliminates the presence of an SPOF for obtaining services and reduces the possibility of service interruption by housing servers at different physical locations.</p><p id="p-0016" num="0015">A typical application according to a system of the present disclosure would be a collection of servers organized as an administrative unit, identified by a group name, and comprising a dummy server that aggregates server information from other servers in the group. One or more clients may need to connect to one or more of the servers. For load balancing, HA, traffic engineering, or maintenance operations, it is desirable to signal to the clients which server or servers are available and details on the status of each.</p><p id="p-0017" num="0016">It is one object of the invention of the present disclosure to overcome the need for a separate controller to manage load balancing, availability, or traffic engineering. A separate controller is an added expense, another item that must be maintained, and is another possible point-of-failure in the network. It is an object of the present invention to remove the risk associated with a SPOF in favor of multiple distributed connection points.</p><p id="p-0018" num="0017">It is another object of the invention to overcome the need for a headend group of resources to be physically grouped together. Solutions that are currently available require similar devices identified as a group to be collocated with each other. These implementations group a set of appliances together and present a monolithic service to the network. For example, Virtual Router Redundancy Protocols (VRRPs) as are presently known in the art are typically implemented by presenting a group of routers that are physically connected, such as via local Ethernet connections, as a monolithic processing unit, wherein traffic to the primary network device fails over to another associated network device when connectivity to the primary appliance fails.</p><p id="p-0019" num="0018">It is another object of the present invention to overcome the monolithic server approach by distributing server status and connectivity information to endpoints that initiate connections. With the present invention, remote applications can choose selected resources according to the appropriate connection protocols and service availability, and the general status information of the servers housing those services.</p><p id="p-0020" num="0019">A system according to the invention of the present disclosure may include applications that are in a server posture (i.e., waiting for an inbound connection); applications that are in a client posture (i.e., positioned to make an outbound connection to a server); and a central database (repository) wherein a server group is organized by a group name and populated with server UID information and one or more information fields that include details about each server in the group.</p><p id="p-0021" num="0020">In certain embodiments, a server that should be put into a group will be configured with the appropriate group name according to a method of the present invention. The server will then asynchronously update the group name, as contained in the database, with its UID (such as its media access control (MAC) address, for example) and various details about its status, connection profile, or any other information deemed necessary for remote applications to target the server as a connection. The server will only update its own information and for purposes of updating the central database and client connections, and is generally independent of other servers having its same group name. Each update will have a timestamp to indicate its freshness, and thus if a server fails and does not update its entry, it will be evident that this server is stale and not preferred as other servers will have newer timestamps. As a frame of reference, a server can be considered stale if it doesn't update with a defined period of time, e.g., 60 seconds.</p><p id="p-0022" num="0021">When a remote application or client wishes to connect to a specified server, it will query the central database and receive a list of servers and their associated details. It is important to note that this is done without direct communication to the servers or an intermediate controller. The client can then scan the entire list and make a connection to a server based on its requirements.</p><p id="p-0023" num="0022">An illustrative embodiment of a system according to the present disclosure <b>100</b> is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. At the center of the system is a central database <b>101</b> containing a UID for each server within a server group <b>102</b> comprising a plurality of servers (S<b>1</b>-Sn), and a dummy server <b>104</b>, as well as status and connection details, for example. As explained in the figure, each of the plurality of servers S<b>1</b>-Sn posts its own information to the central database <b>101</b> independently of the other servers in the server group <b>102</b>. Alternatively, each server S<b>1</b>-Sn may communicate its server information to the dummy server <b>104</b>, which in turn posts it to the central database. The dummy server <b>104</b> may also interact with each of the plurality of servers S<b>1</b>-Sn in order to obtain extrinsic connection information, such as temperature and local environmental conditions. A dummy server <b>104</b> may be any device equipped with an aggregation module, such as a server, client, or other device so equipped. A dummy server may be programmed to aggregate server information received from the plurality of servers S<b>1</b>-Sn or management monitoring software may be employed to cause the dummy server to aggregate it remotely.</p><p id="p-0024" num="0023">Group clients <b>103</b> C<b>1</b>-Cn are each configured with the group name of the server group <b>102</b> and can use the group name to query the central database <b>101</b> to determine the availability of each server and information relevant to its status, freshness, etc. The central database <b>101</b> does not process or alter any information from servers in the server group <b>102</b>, but the servers may update the posted information at desired intervals, enabling dynamic assessment by group clients <b>103</b> of servers in the server group <b>102</b> to further enable optimal connections and network utilization.</p><p id="p-0025" num="0024">In certain embodiments, the dummy server <b>104</b> may establish bidirectional communications with the plurality of other servers S<b>1</b>-Sn in the server group <b>102</b> in order to ensure presentation of the various server connection information to the central database, such as extrinsic connection information selected from a group consisting of geolocation information, meta data, power supply information, temperature information, security information, maintenance information, time of day, environmental quality and bandwidth load. The extrinsic connection information may also be obtained from devices <b>105</b> outside the server group <b>102</b> but in network communication with the dummy server <b>104</b>. The extrinsic connection information may be useful to clients for determining their preferential server connections, such as meta data indicating that certain servers within the group should only handle certain types of connections.</p><p id="p-0026" num="0025">As discussed above, it is an object of the invention of the present disclosure to enable distributed HA reachability of network services by group clients C<b>1</b>-Cn without making use of a stand-alone controller as is common among state-of-the-art solutions that require configuration, maintenance, replacement, and the like that can lead to reduced availability of network resources and added costs. It is a further object of the invention of the present disclosure to eliminate the requirement of physical collocation of network applications such as servers that is attendant to current solutions, thereby leading to a more dynamic and asynchronous approach to making distributed services available to group clients <b>103</b> of a server group <b>102</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0027" num="0026">These and other embodiments of the systems and methods described and illustrated herein will be understood by one of ordinary skill in the art, the illustrations contained herein representing illustrative embodiments of the invention and not limitations on implementations of the systems and methods as described herein.</p><p id="p-0028" num="0027">Explained another way, the invention of the present disclosure comprises a system for controllerless and distributed network connection reachability, the system comprising a server group, each server in the server group, including a dummy server, having a unique identifier (UID) and a server software module tangibly stored on a nontransitory computer readable medium comprising instructions which when executed by a processor cause the processor to post the UID and server connection information for the plurality of servers (S<b>1</b>-Sn) to a central database <b>101</b> or transmit it to the dummy server <b>104</b> for posting to the central database <b>101</b>; a central database <b>101</b> comprising a UID and server connection information for each of the plurality of servers of the server group <b>102</b>; and one or more group clients, each group client configured with the group name for the server group <b>102</b> and a client software module comprising instructions which when executed by a processor cause the processor to acquire the server connection information. The server connection information may be selected, for example, from the group consisting of status information, uptime, downtime, impaired, congestion and sunset. In certain embodiments, the group client establishes a preferential connection with a server in the server group based on the server connection information.</p><p id="p-0029" num="0028">A UID according to the present disclosure may be selected from the group consisting of a media access control (MAC) address, an X.509 certificate, a common name, an extension, a hash code, an action request, a source Internet Protocol (IP) address, a source port identifier, a source protocol and combinations thereof.</p><p id="p-0030" num="0029">A system according to the present disclosure may enable a method for establishing a controllerless connection to a server in a server group comprising the steps of configuring one or more clients with the group name for the server group and causing a connected microprocessor to acquire the connection information of selected servers within the server group for connection selection by the one or more clients from a central database by executing instructions of a client software module of a client configured with the group name, wherein each server in the server group is configured with a UID, such as but not limited to a UID selected from the group consisting of a MAC address, an X.509 certificate, a common name, an extension, a hash code, an action request, a source IP address, a source port identifier, and a source protocol. In certain embodiments, the connection information is selected from the group consisting of status information, uptime, downtime, impaired, congestion and sunset.</p><p id="p-0031" num="0030">In certain embodiments, a method according to the present disclosure may further comprise a step of causing a connected microprocessor to establish a connection with the server by executing instructions of the client software module.</p><p id="p-0032" num="0031">These and other embodiments are presented as examples and not limitation of the capabilities enabled by the present invention. One of ordinary skill in the art will appreciate the need in the art for improvements in network reachability that are not reliant on controllers, such reliance being well understood in the current state of the art.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system for automated, controllerless and stateless network connection selection, the system comprising:<claim-text>a central database in direct network communication with a plurality of servers in a server group and a plurality of clients in a client group, wherein each server of the plurality of servers comprises a unique identifier;</claim-text><claim-text>wherein the server group further comprises dummy server having a unique identifier and an aggregation module tangibly stored on a nontransitory computer readable medium, comprising instructions which when executed by a first processor cause the first processor to compile aggregated server connection information comprising the unique identifier, the server connection information for each of the plurality of servers and extrinsic connection information, and transmit the aggregated server connection information to the central database;</claim-text><claim-text>a server software module tangibly stored on a nontransitory computer readable medium comprising instructions which when executed by the first processor cause the first processor to:<claim-text>transmit the server connection information for each of the plurality of servers to the central database without any modification or adjudication; and</claim-text><claim-text>selectively transmit the aggregated server connection information to the central database;</claim-text></claim-text><claim-text>wherein each client of the plurality of clients in the client group is configured with a group name for the server group; and</claim-text><claim-text>a client software module comprising instructions which when executed by a second processor cause the second processor to acquire the server connection information for each of the plurality of servers and the aggregated server connection information;</claim-text><claim-text>wherein the server connection information enables each client of the plurality of clients to establish a preferential direct connection with a server in the server group;</claim-text><claim-text>wherein the central database does not reside on any server of the server group, and does not perform any modification or adjudication on the server connection information for each of the plurality of servers or the aggregated server connection information; and</claim-text><claim-text>wherein neither the server connection information for each of the plurality of servers nor the aggregated server connection information is modified or adjudicated by any intermediate device in a communication path between any client of the plurality of clients or any server of the plurality of servers, or the dummy server, and the central database.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the extrinsic connection information is selected from a group consisting of geolocation information, meta data, power supply information, temperature information, security information, maintenance information, time of day, environmental quality and bandwidth load.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the unique identifier is selected from a group consisting of a media access control (MAC) address, an X.509 certificate, a common name, an extension, a hash code, an action request, a source Internet Protocol (IP) address, a source port identifier, a source protocol and combinations thereof.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the unique identifier is selected from a group consisting of a media access control (MAC) address, an X.509 certificate, a common name, an extension, a hash code, an action request, a source Internet Protocol (IP) address, a source port identifier, a source protocol and combinations thereof.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the server connection information for the plurality of servers is selected from a group consisting of status information, uptime, downtime, impaired, congestion and sunset.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the server connection information for the plurality of servers is selected from a group consisting of status information, uptime, downtime, impaired, congestion and sunset.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the aggregation module is manually programmed to compile the aggregated server connection information.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the aggregation module is manually programmed to compile the aggregated server connection information.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the aggregation module is programmed remotely via management monitoring software to compile the aggregated server connection information.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the aggregation module is programmed remotely via management monitoring software to compile the aggregated server connection information.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method for establishing a controllerless connection to a server of a plurality of servers in a server group, the method comprising:<claim-text>configuring a plurality of clients of a client group with a group name for the server group; and</claim-text><claim-text>causing a first processor to execute instructions of a client software module of a client configured with the group name, which when executed by the first processor cause the first processor to acquire unmodified and unadjudicated server connection information of one or more selected servers of the plurality of servers for preferential direct connection selection by the client from a central database;</claim-text><claim-text>wherein each server of the plurality of servers is configured with a unique identifier;</claim-text><claim-text>wherein one of the server group comprises dummy server comprising an aggregation module tangibly stored on a nontransitory computer readable medium, comprising instructions which when executed by a second processor cause the second processor to compile aggregated server connection information comprising the unique identifier, server connection information for the plurality of servers and extrinsic server connection information and transmit the aggregated server connection information to the central database;</claim-text><claim-text>the central database does not reside on any server of the server group and does not perform any modification or adjudication of the server connection information for the plurality of servers or aggregated server connection information; and</claim-text><claim-text>wherein neither the server connection information for the plurality of servers nor the aggregated server information is not modified or adjudicated by any intermediate device in a communication path between any client of the plurality of clients or any server of the server group and the central database.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the extrinsic connection information is selected from a group consisting of geolocation information, meta data, power supply information, temperature information, security information, maintenance information, time of day, environmental quality and bandwidth load.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the unique identifier is selected from a group consisting of a media access control (MAC) address, an X.509 certificate, a common name, an extension, a hash code, an action request, a source Internet Protocol (IP) address, a source port identifier, and a source protocol.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the unique identifier is selected from a group consisting of a media access control (MAC) address, an X.509 certificate, a common name, an extension, a hash code, an action request, a source Internet Protocol (IP) address, a source port identifier, and a source protocol.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the server connection information for the plurality of servers is selected from a group consisting of status information, uptime, downtime, impaired, congestion and sunset.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the server connection information for the plurality of servers is selected from a group consisting of status information, uptime, downtime, impaired, congestion and sunset.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising the step of causing the connected processor to establish a connection with a server of the plurality of servers by executing instructions of the client software module.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising the step of causing the connected processor to establish a connection with a server of the plurality of servers by executing instructions of the client software module.</claim-text></claim></claims></us-patent-application>