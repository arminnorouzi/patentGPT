<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007122A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007122</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363984</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>51</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>5175</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>M</subclass><main-group>3</main-group><subgroup>5183</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>M</subclass><main-group>2203</main-group><subgroup>401</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD AND SYSTEM FOR REAL TIME REPORTING OF METRICS TO FUNGIBLE AGENTS IN OMNICHANNEL CONTACT CENTER</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>JPMorgan Chase Bank, N.A.</orgname><address><city>New York</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>EDAMADAKA</last-name><first-name>Rajeshwari</first-name><address><city>Allentown</city><state>NJ</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>JPMorgan Chase Bank, N.A.</orgname><role>02</role><address><city>New York</city><state>NY</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method and a system for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment are provided. The method includes: receiving a service request call from a customer; determining applications that are usable for responding to the service request call from among a predetermined plurality of applications; monitoring the service request call in order to obtain information relating to call timing and events occurring during the call; when the service request call is completed, determining call-specific metrics such as hold time, number of transfers, and or idle time based on the information obtained during the monitoring; and reporting the metrics to a repository. Additional metrics that are specific to an agent assigned to handle the call may also be determined.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="178.31mm" wi="113.20mm" file="US20230007122A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="143.00mm" wi="157.06mm" file="US20230007122A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="220.30mm" wi="114.05mm" orientation="landscape" file="US20230007122A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="200.58mm" wi="130.89mm" file="US20230007122A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="226.23mm" wi="115.23mm" file="US20230007122A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="238.51mm" wi="173.91mm" orientation="landscape" file="US20230007122A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><heading id="h-0002" level="1">1. Field of the Disclosure</heading><p id="p-0002" num="0001">This technology generally relates to methods and systems for reporting metrics relating to customer calls, and more particularly to methods and systems for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><heading id="h-0003" level="1">2. Background Information</heading><p id="p-0003" num="0002">For a large corporate organization that has many customers, customer service is an important aspect of the business operation. Customers typically expect service requests to be handled in a timely and accurate manner, and if the corporate organization fails to provide such customer service, there may be a negative effect on the reputation of that organization.</p><p id="p-0004" num="0003">Many customer service requests are performed online via the Internet. For such requests, the corporate organization may utilize a contact center that facilitates the provision of various servicing applications from different parts of the organization. However, because of the variety of applications and the scale of the overall operation, software developers may encounter difficulties in integrating newly developed applications with other parts of the software suite that serve the contact center.</p><p id="p-0005" num="0004">Further, in the contact center, fungible agents will take calls from multiple line-of-business servicing applications and, within the same call, shift to service the customer for different servicing applications. When a specialist handles different servicing applications to assist the customer during the same call, it poses a challenge to track metrics regarding the specialist's average handle time, average talk time, etc. for a particular type of servicing application, which is one of many handled by the fungible specialist during the same call. By contrast, typical contact center reporting solutions rely on routing-related information in order to calculate agent and queue statistics; these traditional reporting solutions rely on only one type of servicing application being used to assist the customer which matches the type of call as identified by routing systems. When another type of servicing application is needed, the specialist transfers the customer to another virtual queue with differently skilled specialists. In order to reduce the number of transfers needed and elevate the customer experience, fungible contact center specialists are able to handle different types of servicing requests matching the intent of the customer's query and they can use more than one servicing application.</p><p id="p-0006" num="0005">Accordingly, there is a need for methods and systems for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">The present disclosure, through one or more of its various aspects, embodiments, and/or specific features or sub-components, provides, inter alia, various systems, servers, devices, methods, media, programs, and platforms for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0008" num="0007">According to an aspect of the present disclosure, a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment is provided. The method is implemented by at least one processor. The method includes: receiving, by the at least one processor from a first customer, a service request call; determining, by the at least one processor, at least one application that is usable for responding to the service request call from among a predetermined plurality of applications; monitoring, by the at least one processor, the service request call in order to obtain information relating to a timing of the service request call, at least one event that occurs during the service request call, and at least one output of the at least one application; when the service request call is completed, determining, by the at least one processor, at least one call-specific metric based on the information obtained as a result of the monitoring; and reporting, by the at least one processor, each of the determined at least one call-specific metric to a predetermined destination.</p><p id="p-0009" num="0008">The at least one call-specific metric may include at least one from among a hold time, a talk time, an average handle time, a call intent, a call disposition, a speed to answer, a number of calls abandoned, a number of calls dropped, a number of calls handled, an average after-call work time, a percentage of calls held, an average duration of calls held, an after-call work percentage of average handle time, a number and percentage of calls transferred, a number and percentage of calls conferenced, a combined percentage of transferred or conferenced calls, service level percentages, a number of transfers, an idle time, a call count, a type of servicing application used for each service request during the call per specialist segment and team leader, and a number of call recordings.</p><p id="p-0010" num="0009">The at least one call-specific metric may further include intra-day summations of service levels, average handle times, an average speed to answer, a number of calls offered and a number of calls handled, summations and/or averages of metrics over a predetermined interval, such as, for example, 30 minutes, an eight-hour day, a week, or a month. Both per call and interval reporting have goals and thresholds which are also calculated and displayed to specialist and team leader in real time to monitor and take appropriate action.</p><p id="p-0011" num="0010">The method may further include generating trends from such aggregation, which are subsequently used for work force management and forecasting.</p><p id="p-0012" num="0011">The method may further include identifying an agent that is assigned to handle the service request call, and calculating at least one agent-specific metric based on the determined at least one call-specific metric and previously stored agent-specific metric data.</p><p id="p-0013" num="0012">The method may further include capturing at least one metadata item that relates to the service request call. The at least one metadata item may include at least one from among telephony data, user profile data that relates to the identified agent, an identification of each of the at least one application, and information relating to whether the identified agent performed a search function during the service request call.</p><p id="p-0014" num="0013">The method may further include displaying, on a display associated with the identified agent, a user interface that includes information relating to the service request call and information relating to a historical sequence of interactions that corresponds to the first customer.</p><p id="p-0015" num="0014">The at least one application may include a first application that is usable for responding to a first aspect of the service request call and at least a second application that is usable for responding to a second aspect of the service request call.</p><p id="p-0016" num="0015">The at least one call-specific metric may include a first call-specific metric that relates to the first aspect of the service request call and at least a second call-specific metric that relates to the second aspect of the service request call.</p><p id="p-0017" num="0016">The method may further include using a container application that is designed to facilitate interactions between each of the predetermined plurality of applications for performing the monitoring and the reporting.</p><p id="p-0018" num="0017">Additionally, the container application may show the customer journey in the same calls as the specialist-assisted customer with more than one application matching intent or query of customer together with disposition for each application, and tying it to the historical sequence of interactions for the customer's journey in fulfilling the customer intent.</p><p id="p-0019" num="0018">The at least one call-specific metric may also include an amount of time spent and actions taken within the servicing application for business transactions. These metrics and other data that includes customer's devices, first time usage, etc., may be collected as part of click stream events, which may be sent to a post-analytical big data system with business insight visualization.</p><p id="p-0020" num="0019">According to another exemplary embodiment, a computing apparatus for reporting metrics relating to customer calls is provided. The computing apparatus includes a processor; a memory; and a communication interface coupled to each of the processor and the memory. The processor is configured to: receive, from a first customer via the communication interface, a service request call; determine at least one application that is usable for responding to the service request call from among a predetermined plurality of applications; monitor the service request call in order to obtain information relating to a timing of the service request call, at least one event that occurs during the service request call, and at least one output of the at least one application; when the service request call is completed, determine at least one call-specific metric based on the information obtained as a result of the monitoring; and report each of the determined at least one call-specific metric to a predetermined destination.</p><p id="p-0021" num="0020">The at least one call-specific metric may include at least one from among a hold time, a talk time, an average handle time, a call intent, a call disposition, a speed to answer, a number of calls abandoned, a number of calls dropped, a number of calls handled, an average after-call work time, a percentage of calls held, an average duration of calls held, an after-call work percentage of average handle time, a number and percentage of calls transferred, a number and percentage of calls conferenced, a combined percentage of transferred or conferenced calls, service level percentages, a number of transfers, an idle time, a call count, a type of servicing application used for each service request during the call per specialist segment and team leader, and a number of call recordings.</p><p id="p-0022" num="0021">The processor may be further configured to identify an agent that is assigned to handle the service request call, and to calculate at least one agent-specific metric based on the determined at least one call-specific metric and previously stored agent-specific metric data.</p><p id="p-0023" num="0022">The processor may be further configured to capture at least one metadata item that relates to the service request call. The at least one metadata item may include at least one from among telephony data, user profile data that relates to the identified agent, an identification of each of the at least one application, and information relating to whether the identified agent performed a search function during the service request call.</p><p id="p-0024" num="0023">The processor may be further configured to display, on a display associated with the identified agent, a user interface that includes information relating to the service request call and information relating to a historical sequence of interactions that corresponds to the first customer.</p><p id="p-0025" num="0024">The at least one application may include a first application that is usable for responding to a first aspect of the service request call and at least a second application that is usable for responding to a second aspect of the service request call.</p><p id="p-0026" num="0025">The at least one call-specific metric may include a first call-specific metric that relates to the first aspect of the service request call and at least a second call-specific metric that relates to the second aspect of the service request call.</p><p id="p-0027" num="0026">The processor may be further configured to use a container application that is designed to facilitate interactions between each of the predetermined plurality of applications for performing the monitoring and the reporting.</p><p id="p-0028" num="0027">The container may pass the reporting metrics collected for each set of applications to contact center reporting systems and also attach this as metadata for identifying recordings, as well as for analytics, and use it as metadata to enrich the customer's experience when the customer is transferred or contacts the firm again.</p><p id="p-0029" num="0028">According to yet another exemplary embodiment, a non-transitory computer readable storage medium storing instructions for reporting metrics relating to customer calls is provided. The storage medium includes executable code which, when executed by a processor, causes the processor to: receive, from a first customer, a service request call; determine at least one application that is usable for responding to the service request call from among a predetermined plurality of applications; monitor the service request call in order to obtain information relating to a timing of the service request call, at least one event that occurs during the service request call, and at least one output of the at least one application; when the service request call is completed, determine at least one call-specific metric based on a result of the monitoring; and report each of the determined at least one call-specific metric to a predetermined destination.</p><p id="p-0030" num="0029">The executable code may be further configured to cause the processor to identify an agent that is assigned to handle the service request call, and to calculate at least one agent-specific metric based on the determined at least one call-specific metric and previously stored agent-specific metric data.</p><p id="p-0031" num="0030">The executable code may be further configured to cause the processor to display, on a display associated with the identified agent, a user interface that includes information relating to the service request call and information relating to a historical sequence of interactions that corresponds to the first customer.</p><p id="p-0032" num="0031">The at least one application may include a first application that is usable for responding to a first aspect of the service request call and at least a second application that is usable for responding to a second aspect of the service request call.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0033" num="0032">The present disclosure is further described in the detailed description which follows, in reference to the noted plurality of drawings, by way of non-limiting examples of preferred embodiments of the present disclosure, in which like characters represent like elements throughout the several views of the drawings.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an exemplary computer system.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an exemplary diagram of a network environment.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an exemplary system for implementing a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of an exemplary process for implementing a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an architecture diagram of a system for implementing a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment, according to an exemplary embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0039" num="0038">Through one or more of its various aspects, embodiments and/or specific features or sub-components of the present disclosure, are intended to bring out one or more of the advantages as specifically described above and noted below.</p><p id="p-0040" num="0039">The examples may also be embodied as one or more non-transitory computer readable media having instructions stored thereon for one or more aspects of the present technology as described and illustrated by way of the examples herein. The instructions in some examples include executable code that, when executed by one or more processors, cause the processors to carry out steps necessary to implement the methods of the examples of this technology that are described and illustrated herein.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an exemplary system for use in accordance with the embodiments described herein. The system <b>100</b> is generally shown and may include a computer system <b>102</b>, which is generally indicated.</p><p id="p-0042" num="0041">The computer system <b>102</b> may include a set of instructions that can be executed to cause the computer system <b>102</b> to perform any one or more of the methods or computer-based functions disclosed herein, either alone or in combination with the other described devices. The computer system <b>102</b> may operate as a standalone device or may be connected to other systems or peripheral devices. For example, the computer system <b>102</b> may include, or be included within, any one or more computers, servers, systems, communication networks or cloud environment. Even further, the instructions may be operative in such cloud-based computing environment.</p><p id="p-0043" num="0042">In a networked deployment, the computer system <b>102</b> may operate in the capacity of a server or as a client user computer in a server-client user network environment, a client user computer in a cloud computing environment, or as a peer computer system in a peer-to-peer (or distributed) network environment. The computer system <b>102</b>, or portions thereof, may be implemented as, or incorporated into, various devices, such as a personal computer, a tablet computer, a set-top box, a personal digital assistant, a mobile device, a palmtop computer, a laptop computer, a desktop computer, a communications device, a wireless smart phone, a personal trusted device, a wearable device, a global positioning satellite (GPS) device, a web appliance, or any other machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. Further, while a single computer system <b>102</b> is illustrated, additional embodiments may include any collection of systems or sub-systems that individually or jointly execute instructions or perform functions. The term &#x201c;system&#x201d; shall be taken throughout the present disclosure to include any collection of systems or sub-systems that individually or jointly execute a set, or multiple sets, of instructions to perform one or more computer functions.</p><p id="p-0044" num="0043">As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the computer system <b>102</b> may include at least one processor <b>104</b>. The processor <b>104</b> is tangible and non-transitory. As used herein, the term &#x201c;non-transitory&#x201d; is to be interpreted not as an eternal characteristic of a state, but as a characteristic of a state that will last for a period of time. The term &#x201c;non-transitory&#x201d; specifically disavows fleeting characteristics such as characteristics of a particular carrier wave or signal or other forms that exist only transitorily in any place at any time. The processor <b>104</b> is an article of manufacture and/or a machine component. The processor <b>104</b> is configured to execute software instructions in order to perform functions as described in the various embodiments herein. The processor <b>104</b> may be a general-purpose processor or may be part of an application specific integrated circuit (ASIC). The processor <b>104</b> may also be a microprocessor, a microcomputer, a processor chip, a controller, a microcontroller, a digital signal processor (DSP), a state machine, or a programmable logic device. The processor <b>104</b> may also be a logical circuit, including a programmable gate array (PGA) such as a field programmable gate array (FPGA), or another type of circuit that includes discrete gate and/or transistor logic. The processor <b>104</b> may be a central processing unit (CPU), a graphics processing unit (GPU), or both. Additionally, any processor described herein may include multiple processors, parallel processors, or both. Multiple processors may be included in, or coupled to, a single device or multiple devices.</p><p id="p-0045" num="0044">The computer system <b>102</b> may also include a computer memory <b>106</b>. The computer memory <b>106</b> may include a static memory, a dynamic memory, or both in communication. Memories described herein are tangible storage mediums that can store data as well as executable instructions and are non-transitory during the time instructions are stored therein. Again, as used herein, the term &#x201c;non-transitory&#x201d; is to be interpreted not as an eternal characteristic of a state, but as a characteristic of a state that will last for a period of time. The term &#x201c;non-transitory&#x201d; specifically disavows fleeting characteristics such as characteristics of a particular carrier wave or signal or other forms that exist only transitorily in any place at any time. The memories are an article of manufacture and/or machine component. Memories described herein are computer-readable mediums from which data and executable instructions can be read by a computer. Memories as described herein may be random access memory (RAM), read only memory (ROM), flash memory, electrically programmable read only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), registers, a hard disk, a cache, a removable disk, tape, compact disk read only memory (CD-ROM), digital versatile disk (DVD), floppy disk, blu-ray disk, or any other form of storage medium known in the art. Memories may be volatile or non-volatile, secure and/or encrypted, unsecure and/or unencrypted. Of course, the computer memory <b>106</b> may comprise any combination of memories or a single storage.</p><p id="p-0046" num="0045">The computer system <b>102</b> may further include a display <b>108</b>, such as a liquid crystal display (LCD), an organic light emitting diode (OLED), a flat panel display, a solid state display, a cathode ray tube (CRT), a plasma display, or any other type of display, examples of which are well known to skilled persons.</p><p id="p-0047" num="0046">The computer system <b>102</b> may also include at least one input device <b>110</b>, such as a keyboard, a touch-sensitive input screen or pad, a speech input, a mouse, a remote control device having a wireless keypad, a microphone coupled to a speech recognition engine, a camera such as a video camera or still camera, a cursor control device, a global positioning system (GPS) device, an altimeter, a gyroscope, an accelerometer, a proximity sensor, or any combination thereof. Those skilled in the art appreciate that various embodiments of the computer system <b>102</b> may include multiple input devices <b>110</b>. Moreover, those skilled in the art further appreciate that the above-listed, exemplary input devices <b>110</b> are not meant to be exhaustive and that the computer system <b>102</b> may include any additional, or alternative, input devices <b>110</b>.</p><p id="p-0048" num="0047">The computer system <b>102</b> may also include a medium reader <b>112</b> which is configured to read any one or more sets of instructions, e.g. software, from any of the memories described herein. The instructions, when executed by a processor, can be used to perform one or more of the methods and processes as described herein. In a particular embodiment, the instructions may reside completely, or at least partially, within the memory <b>106</b>, the medium reader <b>112</b>, and/or the processor <b>110</b> during execution by the computer system <b>102</b>.</p><p id="p-0049" num="0048">Furthermore, the computer system <b>102</b> may include any additional devices, components, parts, peripherals, hardware, software or any combination thereof which are commonly known and understood as being included with or within a computer system, such as, but not limited to, a network interface <b>114</b> and an output device <b>116</b>. The output device <b>116</b> may be, but is not limited to, a speaker, an audio out, a video out, a remote-control output, a printer, or any combination thereof.</p><p id="p-0050" num="0049">Each of the components of the computer system <b>102</b> may be interconnected and communicate via a bus <b>118</b> or other communication link. As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the components may each be interconnected and communicate via an internal bus. However, those skilled in the art appreciate that any of the components may also be connected via an expansion bus. Moreover, the bus <b>118</b> may enable communication via any standard or other specification commonly known and understood such as, but not limited to, peripheral component interconnect, peripheral component interconnect express, parallel advanced technology attachment, serial advanced technology attachment, etc.</p><p id="p-0051" num="0050">The computer system <b>102</b> may be in communication with one or more additional computer devices <b>120</b> via a network <b>122</b>. The network <b>122</b> may be, but is not limited to, a local area network, a wide area network, the Internet, a telephony network, a short-range network, or any other network commonly known and understood in the art. The short-range network may include, for example, Bluetooth, Zigbee, infrared, near field communication, ultraband, or any combination thereof. Those skilled in the art appreciate that additional networks <b>122</b> which are known and understood may additionally or alternatively be used and that the exemplary networks <b>122</b> are not limiting or exhaustive. Also, while the network <b>122</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as a wireless network, those skilled in the art appreciate that the network <b>122</b> may also be a wired network.</p><p id="p-0052" num="0051">The additional computer device <b>120</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as a personal computer. However, those skilled in the art appreciate that, in alternative embodiments of the present application, the computer device <b>120</b> may be a laptop computer, a tablet PC, a personal digital assistant, a mobile device, a palmtop computer, a desktop computer, a communications device, a wireless telephone, a personal trusted device, a web appliance, a server, or any other device that is capable of executing a set of instructions, sequential or otherwise, that specify actions to be taken by that device. Of course, those skilled in the art appreciate that the above-listed devices are merely exemplary devices and that the device <b>120</b> may be any additional device or apparatus commonly known and understood in the art without departing from the scope of the present application. For example, the computer device <b>120</b> may be the same or similar to the computer system <b>102</b>. Furthermore, those skilled in the art similarly understand that the device may be any combination of devices and apparatuses.</p><p id="p-0053" num="0052">Of course, those skilled in the art appreciate that the above-listed components of the computer system <b>102</b> are merely meant to be exemplary and are not intended to be exhaustive and/or inclusive. Furthermore, the examples of the components listed above are also meant to be exemplary and similarly are not meant to be exhaustive and/or inclusive.</p><p id="p-0054" num="0053">In accordance with various embodiments of the present disclosure, the methods described herein may be implemented using a hardware computer system that executes software programs. Further, in an exemplary, non-limited embodiment, implementations can include distributed processing, component/object distributed processing, and parallel processing. Virtual computer system processing can be constructed to implement one or more of the methods or functionalities as described herein, and a processor described herein may be used to support a virtual processing environment.</p><p id="p-0055" num="0054">As described herein, various embodiments provide optimized methods and systems for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0056" num="0055">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a schematic of an exemplary network environment <b>200</b> for implementing a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment is illustrated. In an exemplary embodiment, the method is executable on any networked computer platform, such as, for example, a personal computer (PC).</p><p id="p-0057" num="0056">The method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment may be implemented by a Servicing Applications Call Metrics Reporting (SACMR) device <b>202</b>. The SACMR device <b>202</b> may be the same or similar to the computer system <b>102</b> as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The SACMR device <b>202</b> may store one or more applications that can include executable instructions that, when executed by the SACMR device <b>202</b>, cause the SACMR device <b>202</b> to perform actions, such as to transmit, receive, or otherwise process network messages, for example, and to perform other actions described and illustrated below with reference to the figures. The application(s) may be implemented as modules or components of other applications. Further, the application(s) can be implemented as operating system extensions, modules, plugins, or the like.</p><p id="p-0058" num="0057">Even further, the application(s) may be operative in a cloud-based computing environment. The application(s) may be executed within or as virtual machine(s) or virtual server(s) that may be managed in a cloud-based computing environment. Also, the application(s), and even the SACMR device <b>202</b> itself, may be located in virtual server(s) running in a cloud-based computing environment rather than being tied to one or more specific physical network computing devices. Also, the application(s) may be running in one or more virtual machines (VMs) executing on the SACMR device <b>202</b>. Additionally, in one or more embodiments of this technology, virtual machine(s) running on the SACMR device <b>202</b> may be managed or supervised by a hypervisor.</p><p id="p-0059" num="0058">In the network environment <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the SACMR device <b>202</b> is coupled to a plurality of server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) that hosts a plurality of databases <b>206</b>(<b>1</b>)-<b>206</b>(<i>n</i>), and also to a plurality of client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) via communication network(s) <b>210</b>. A communication interface of the SACMR device <b>202</b>, such as the network interface <b>114</b> of the computer system <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, operatively couples and communicates between the SACMR device <b>202</b>, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), and/or the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>), which are all coupled together by the communication network(s) <b>210</b>, although other types and/or numbers of communication networks or systems with other types and/or numbers of connections and/or configurations to other devices and/or elements may also be used.</p><p id="p-0060" num="0059">The communication network(s) <b>210</b> may be the same or similar to the network <b>122</b> as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, although the SACMR device <b>202</b>, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), and/or the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) may be coupled together via other topologies. Additionally, the network environment <b>200</b> may include other network devices such as one or more routers and/or switches, for example, which are well known in the art and thus will not be described herein. This technology provides a number of advantages including methods, non-transitory computer readable media, and SACMR devices that efficiently implement a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0061" num="0060">By way of example only, the communication network(s) <b>210</b> may include local area network(s) (LAN(s)) or wide area network(s) (WAN(s)), and can use TCP/IP over Ethernet and industry-standard protocols, although other types and/or numbers of protocols and/or communication networks may be used. The communication network(s) <b>210</b> in this example may employ any suitable interface mechanisms and network communication technologies including, for example, teletraffic in any suitable form (e.g., voice, modem, and the like), Public Switched Telephone Network (PSTNs), Ethernet-based Packet Data Networks (PDNs), combinations thereof, and the like.</p><p id="p-0062" num="0061">The SACMR device <b>202</b> may be a standalone device or integrated with one or more other devices or apparatuses, such as one or more of the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), for example. In one particular example, the SACMR device <b>202</b> may include or be hosted by one of the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), and other arrangements are also possible. Moreover, one or more of the devices of the SACMR device <b>202</b> may be in a same or a different communication network including one or more public, private, or cloud networks, for example.</p><p id="p-0063" num="0062">The plurality of server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) may be the same or similar to the computer system <b>102</b> or the computer device <b>120</b> as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, including any features or combination of features described with respect thereto. For example, any of the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) may include, among other features, one or more processors, a memory, and a communication interface, which are coupled together by a bus or other communication link, although other numbers and/or types of network devices may be used. The server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) in this example may process requests received from the SACMR device <b>202</b> via the communication network(s) <b>210</b> according to the HTTP-based and/or JavaScript Object Notation (JSON) protocol, for example, although other protocols may also be used.</p><p id="p-0064" num="0063">The server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) may be hardware or software or may represent a system with multiple servers in a pool, which may include internal or external networks. The server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) hosts the databases <b>206</b>(<b>1</b>)-<b>206</b>(<i>n</i>) that are configured to store data that relates to agent-specific call servicing metrics and customer-specific call servicing.</p><p id="p-0065" num="0064">Although the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) are illustrated as single devices, one or more actions of each of the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) may be distributed across one or more distinct network computing devices that together comprise one or more of the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>). Moreover, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) are not limited to a particular configuration. Thus, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) may contain a plurality of network computing devices that operate using a master/slave approach, whereby one of the network computing devices of the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) operates to manage and/or otherwise coordinate operations of the other network computing devices.</p><p id="p-0066" num="0065">The server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>) may operate as a plurality of network computing devices within a cluster architecture, a peer-to peer architecture, virtual machines, or within a cloud architecture, for example. Thus, the technology disclosed herein is not to be construed as being limited to a single environment and other configurations and architectures are also envisaged.</p><p id="p-0067" num="0066">The plurality of client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) may also be the same or similar to the computer system <b>102</b> or the computer device <b>120</b> as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, including any features or combination of features described with respect thereto. For example, the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) in this example may include any type of computing device that can interact with the SACMR device <b>202</b> via communication network(s) <b>210</b>. Accordingly, the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) may be mobile computing devices, desktop computing devices, laptop computing devices, tablet computing devices, virtual machines (including cloud-based computers), or the like, that host chat, e-mail, or voice-to-text applications, for example. In an exemplary embodiment, at least one client device <b>208</b> is a wireless mobile communication device, i.e., a smart phone.</p><p id="p-0068" num="0067">The client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) may run interface applications, such as standard web browsers or standalone client applications, which may provide an interface to communicate with the SACMR device <b>202</b> via the communication network(s) <b>210</b> in order to communicate user requests and information. The client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) may further include, among other features, a display device, such as a display screen or touchscreen, and/or an input device, such as a keyboard, for example.</p><p id="p-0069" num="0068">Although the exemplary network environment <b>200</b> with the SACMR device <b>202</b>, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>), and the communication network(s) <b>210</b> are described and illustrated herein, other types and/or numbers of systems, devices, components, and/or elements in other topologies may be used. It is to be understood that the systems of the examples described herein are for exemplary purposes, as many variations of the specific hardware and software used to implement the examples are possible, as will be appreciated by those skilled in the relevant art(s).</p><p id="p-0070" num="0069">One or more of the devices depicted in the network environment <b>200</b>, such as the SACMR device <b>202</b>, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), or the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>), for example, may be configured to operate as virtual instances on the same physical machine. In other words, one or more of the SACMR device <b>202</b>, the server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), or the client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) may operate on the same physical device rather than as separate devices communicating through communication network(s) <b>210</b>. Additionally, there may be more or fewer SACMR devices <b>202</b>, server devices <b>204</b>(<b>1</b>)-<b>204</b>(<i>n</i>), or client devices <b>208</b>(<b>1</b>)-<b>208</b>(<i>n</i>) than illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0071" num="0070">In addition, two or more computing systems or devices may be substituted for any one of the systems or devices in any example. Accordingly, principles and advantages of distributed processing, such as redundancy and replication also may be implemented, as desired, to increase the robustness and performance of the devices and systems of the examples. The examples may also be implemented on computer system(s) that extend across any suitable network using any suitable interface mechanisms and traffic technologies, including by way of example only teletraffic in any suitable form (e.g., voice and modem), wireless traffic networks, cellular traffic networks, Packet Data Networks (PDNs), the Internet, intranets, and combinations thereof.</p><p id="p-0072" num="0071">The SACMR device <b>202</b> is described and illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> as including a servicing applications call metrics reporting module <b>302</b>, although it may include other rules, policies, modules, databases, or applications, for example. As will be described below, the contact center servicing fabric container module <b>302</b> is configured to implement a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0073" num="0072">An exemplary process <b>300</b> for implementing a mechanism for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment by using the network environment of <figref idref="DRAWINGS">FIG. <b>2</b></figref> is illustrated as being executed in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Specifically, a first client device <b>208</b>(<b>1</b>) and a second client device <b>208</b>(<b>2</b>) are illustrated as being in communication with SACMR device <b>202</b>. In this regard, the first client device <b>208</b>(<b>1</b>) and the second client device <b>208</b>(<b>2</b>) may be &#x201c;clients&#x201d; of the SACMR device <b>202</b> and are described herein as such. Nevertheless, it is to be known and understood that the first client device <b>208</b>(<b>1</b>) and/or the second client device <b>208</b>(<b>2</b>) need not necessarily be &#x201c;clients&#x201d; of the SACMR device <b>202</b>, or any entity described in association therewith herein. Any additional or alternative relationship may exist between either or both of the first client device <b>208</b>(<b>1</b>) and the second client device <b>208</b>(<b>2</b>) and the SACMR device <b>202</b>, or no relationship may exist.</p><p id="p-0074" num="0073">Further, SACMR device <b>202</b> is illustrated as being able to access an agent-specific call metrics data repository <b>206</b>(<b>1</b>) and a customer-specific call servicing database <b>206</b>(<b>2</b>). The servicing applications call metrics reporting module <b>302</b> may be configured to access these databases for implementing a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment.</p><p id="p-0075" num="0074">The first client device <b>208</b>(<b>1</b>) may be, for example, a smart phone. Of course, the first client device <b>208</b>(<b>1</b>) may be any additional device described herein. The second client device <b>208</b>(<b>2</b>) may be, for example, a personal computer (PC). Of course, the second client device <b>208</b>(<b>2</b>) may also be any additional device described herein.</p><p id="p-0076" num="0075">The process may be executed via the communication network(s) <b>210</b>, which may comprise plural networks as described above. For example, in an exemplary embodiment, either or both of the first client device <b>208</b>(<b>1</b>) and the second client device <b>208</b>(<b>2</b>) may communicate with the SACMR device <b>202</b> via broadband or cellular communication. Of course, these embodiments are merely exemplary and are not limiting or exhaustive.</p><p id="p-0077" num="0076">Upon being started, the servicing applications call metrics reporting module <b>302</b> executes a process for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment. An exemplary process for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment is generally indicated at flowchart <b>400</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0078" num="0077">In process <b>400</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, at step S<b>402</b>, the servicing applications call metrics reporting module <b>302</b> receives a service request call from a customer. At step S<b>404</b>, the call is assigned to an agent, and the servicing applications call metrics reporting module <b>302</b> determines an identification of the agent. In an exemplary embodiment, the servicing applications call metrics reporting module <b>302</b> may display a user interface at a workstation associated with the agent, and may include information relating to the call and the customer, such as, for example, information relating to a historical sequence of interactions with the customer. Such information is often referred to as a &#x201c;customer journey.&#x201d;</p><p id="p-0079" num="0078">At step S<b>406</b>, the servicing applications call metrics reporting module <b>302</b> determines which available software applications would be useful for responding to various aspects of the customer's service request. In an exemplary embodiment, a contact center may use a container application that is configured to facilitate interactions among a large number of applications that are used for various functions that are designed to address customer service inquiries. In this regard, the servicing applications call metrics reporting module <b>302</b> may select one or more of the applications that are integrated into the container application for addressing the specific service request presented by the customer. Alternatively, the agent handling the call may simply select which applications would be most helpful. Importantly, in many circumstances, a customer service request call may raise multiple requests and/or may include several aspects that would best be addressed by using different applications.</p><p id="p-0080" num="0079">At step S<b>408</b>, the servicing applications call metrics reporting module <b>302</b> monitors the call. In an exemplary embodiment, the call is monitored with respect to timing, events, and outputs of the applications being used to address each separate aspect of the service request. For example, a beginning time and an ending time of the call may be recorded, and any other timing-related aspects such as hold time and/or idle time may be recorded. As another example, if a customer is transferred from a first agent to a second agent, this event may be recorded. Other events and/or application outputs may vary widely based on the particulars of the service request.</p><p id="p-0081" num="0080">At step S<b>410</b>, the servicing applications call metrics reporting module <b>302</b> determines a set of metrics relating to the customer service request call. The metrics may include call-specific metrics, such as, for example, a hold time, an idle time, a number of transfers, a call count, and/or call recordings. The metrics may also include agent-specific metrics that are calculable with reference to previously stored agent-specific data. For example, an agent-specific average hold time (AHT) may be calculated by combining previously stored agent-specific AHT data with a hold time for the current call, as determined in step S<b>408</b>. In an exemplary embodiment, the metrics may also include metadata items relating to the service request call, such as, for example, telephony data, user profile data relating to the agent, identifications of which applications were used for responding to the service request, and whether or not a search function was performed during the call.</p><p id="p-0082" num="0081">At step S<b>412</b>, the servicing applications call metrics reporting module <b>302</b> reports the metrics to a call center central repository, such that all interested parties within the call center environment may access the metrics. In an exemplary embodiment, the container application may be utilized for routing the metrics to appropriate destinations.</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an architecture diagram <b>500</b> of a system for implementing a method for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment, according to an exemplary embodiment. As illustrated in architecture diagram <b>500</b>, an interaction servicing fabric (ISF) container technology archetype enables fungible reporting through a container, which includes multiple servicing applications.</p><p id="p-0084" num="0083">In an exemplary embodiment, during the same call (1a), a specialist assists a customer with multiple servicing applications, also referred to herein as microfront ends, including: (2a) and (2b) retail accounts; (3) credit card inquiries; and (4) automobile loan related requests. The metrics are continuously updated in (1b). The different products may be launched through hot links from one microfront end to another, or with (5) a holistic view microfront end. The container monitors the activity in each microfront end and sends the raw data to the ISF over web sockets. The Web Socket Notification carries servicing application events from the container to the ISF, and communicates calculated metrics from the ISF to the container.</p><p id="p-0085" num="0084">Metrics for each service application used during the call may include any one or more of the following: hold time, talk time, average handle time, call intent, call disposition, speed to answer, number of calls abandoned, number of calls dropped, number of calls handled, average after-call work time, percentage of calls held, average duration of calls held, after-call work percentage of average handle time, number and percentage of calls transferred, number and percentage of calls conferenced, combined percentage of transferred or conferenced calls, service level percentages, a number of transfers, an idle time, a call count, a type of servicing application used for each service request during the call per specialist segment and team leader, and a number of call recordings.</p><p id="p-0086" num="0085">Interval reporting: This may include any one or more of the following: Intra-day summations of service levels, average handle times, average speed to answer, number of calls offered and number of calls handled summations/averages of metrics over an interval, such as, for example, 30 minutes or 8 hours, one week, or one month, with goals and thresholds which are also calculated and displayed to the specialist and the team leader in real time in order to facilitate monitoring and taking appropriate action.</p><p id="p-0087" num="0086">Trends: ISF can generate trends from such aggregation, which is subsequently used for work force management and forecasting.</p><p id="p-0088" num="0087">Interfaces to other systems&#x2014;Data Lakes, Traditional Reporting Systems, and Analytic Systems: The metrics data and click stream data (i.e., user first time visit, type of device, operating system, time spent, business transaction details, time spent on each click following click stream architecture) is sent to a data lake for historical analytics, business insights, quality, and dashboarding, and also sent to traditional contact center reporting systems. Customer journey visualization can also be drawn through a combination of current call and historical interactions.</p><p id="p-0089" num="0088">Accordingly, with this technology, an optimized process for reporting metrics relating to customer calls for fungible agents that are utilizing multiple servicing applications in a contact center environment is provided.</p><p id="p-0090" num="0089">Although the invention has been described with reference to several exemplary embodiments, it is understood that the words that have been used are words of description and illustration, rather than words of limitation. Changes may be made within the purview of the appended claims, as presently stated and as amended, without departing from the scope and spirit of the present disclosure in its aspects. Although the invention has been described with reference to particular means, materials and embodiments, the invention is not intended to be limited to the particulars disclosed; rather the invention extends to all functionally equivalent structures, methods, and uses such as are within the scope of the appended claims.</p><p id="p-0091" num="0090">For example, while the computer-readable medium may be described as a single medium, the term &#x201c;computer-readable medium&#x201d; includes a single medium or multiple media, such as a centralized or distributed database, and/or associated caches and servers that store one or more sets of instructions. The term &#x201c;computer-readable medium&#x201d; shall also include any medium that is capable of storing, encoding or carrying a set of instructions for execution by a processor or that cause a computer system to perform any one or more of the embodiments disclosed herein.</p><p id="p-0092" num="0091">The computer-readable medium may comprise a non-transitory computer-readable medium or media and/or comprise a transitory computer-readable medium or media. In a particular non-limiting, exemplary embodiment, the computer-readable medium can include a solid-state memory such as a memory card or other package that houses one or more non-volatile read-only memories. Further, the computer-readable medium can be a random-access memory or other volatile re-writable memory. Additionally, the computer-readable medium can include a magneto-optical or optical medium, such as a disk or tapes or other storage device to capture carrier wave signals such as a signal communicated over a transmission medium. Accordingly, the disclosure is considered to include any computer-readable medium or other equivalents and successor media, in which data or instructions may be stored.</p><p id="p-0093" num="0092">Although the present application describes specific embodiments which may be implemented as computer programs or code segments in computer-readable media, it is to be understood that dedicated hardware implementations, such as application specific integrated circuits, programmable logic arrays and other hardware devices, can be constructed to implement one or more of the embodiments described herein. Applications that may include the various embodiments set forth herein may broadly include a variety of electronic and computer systems. Accordingly, the present application may encompass software, firmware, and hardware implementations, or combinations thereof. Nothing in the present application should be interpreted as being implemented or implementable solely with software and not hardware.</p><p id="p-0094" num="0093">Although the present specification describes components and functions that may be implemented in particular embodiments with reference to particular standards and protocols, the disclosure is not limited to such standards and protocols. Such standards are periodically superseded by faster or more efficient equivalents having essentially the same functions. Accordingly, replacement standards and protocols having the same or similar functions are considered equivalents thereof.</p><p id="p-0095" num="0094">The illustrations of the embodiments described herein are intended to provide a general understanding of the various embodiments. The illustrations are not intended to serve as a complete description of all the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure, such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Additionally, the illustrations are merely representational and may not be drawn to scale. Certain proportions within the illustrations may be exaggerated, while other proportions may be minimized. Accordingly, the disclosure and the figures are to be regarded as illustrative rather than restrictive.</p><p id="p-0096" num="0095">One or more embodiments of the disclosure may be referred to herein, individually and/or collectively, by the term &#x201c;invention&#x201d; merely for convenience and without intending to voluntarily limit the scope of this application to any particular invention or inventive concept. Moreover, although specific embodiments have been illustrated and described herein, it should be appreciated that any subsequent arrangement designed to achieve the same or similar purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments. Combinations of the above embodiments, and other embodiments not specifically described herein, will be apparent to those of skill in the art upon reviewing the description.</p><p id="p-0097" num="0096">The Abstract of the Disclosure is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments. Thus, the following claims are incorporated into the Detailed Description, with each claim standing on its own as defining separately claimed subject matter.</p><p id="p-0098" num="0097">The above disclosed subject matter is to be considered illustrative, and not restrictive, and the appended claims are intended to cover all such modifications, enhancements, and other embodiments which fall within the true spirit and scope of the present disclosure. Thus, to the maximum extent allowed by law, the scope of the present disclosure is to be determined by the broadest permissible interpretation of the following claims, and their equivalents, and shall not be restricted or limited by the foregoing detailed description.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for reporting metrics relating to customer calls, the method being implemented by at least one processor, the method comprising:<claim-text>receiving, by the at least one processor and from a first customer, a service request call;</claim-text><claim-text>assigning, by the at least one processor, a single customer service agent to handle the service request call sent by the first customer;</claim-text><claim-text>determining, by the at least one processor, a plurality of software applications that are to be used by the single customer service agent for responding to the service request call, the service request call including a plurality of requests of different types, wherein the plurality of software applications addresses the plurality of requests included in the service request call;</claim-text><claim-text>monitoring, by the at least one processor, the service request call in order to obtain information relating to a timing of the service request call, events that occur during the service request call, and at least one output of the plurality of software applications;</claim-text><claim-text>when the service request call is completed, determining, by the at least one processor and for each of the plurality of software applications used by the single customer service agent during servicing the first customer during the service request call, at least one call-specific metric for a respective software application based on the information obtained as a result of the monitoring; and</claim-text><claim-text>reporting, by the at least one processor and for each of the plurality of software applications used by the single customer service agent during the servicing of the first customer during the service request call, the determined at least one call-specific metric to a central repository.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one call-specific metric includes at least one from among a hold time, a talk time, an average handling time, a call intent, a call disposition, a speed to answer, a number of calls abandoned, a number of calls dropped, a number of calls handled, an average after-call work time, a percentage of calls held, an average duration of calls held, an after-call work percentage of average time, a number and percentage of calls transferred, a number and percentage of calls conferenced, a combined percentage of transferred or conferenced calls, service level percentages, a number of transfers, an idle time, a call count, a type of servicing software application used for each service request during the call per specialist segment and team leader, and a number of call recordings.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising identifying the customer service agent that is assigned to handle the service request call, and calculating at least one agent-specific metric based on the determined at least one call-specific metric and previously stored agent-specific metric data.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising capturing at least one metadata item that relates to the service request call,<claim-text>wherein the at least one metadata item includes at least one from among telephony data, user profile data that relates to the identified agent, an identification of each of the plurality of software applications used by the single customer service agent, and information relating to whether the identified agent performed a search function during the service request call.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising displaying, on a display associated with the identified customer service agent, a user interface that includes information relating to the service request call and information relating to a historical sequence of interactions that corresponds to the first customer.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of software applications includes a first software application that is usable for responding to a first aspect of the service request call and at least a second software application that is usable for responding to a second aspect of the service request call.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the at least one call-specific metric includes a first call-specific metric that relates to the first aspect of the service request call and at least a second call-specific metric that relates to the second aspect of the service request call.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising using a container software application that is designed to facilitate interactions between each of the plurality of software applications for performing the monitoring and the reporting.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A computing apparatus for reporting metrics relating to customer calls, the computing apparatus comprising:<claim-text>a processor;</claim-text><claim-text>a memory; and</claim-text><claim-text>a communication interface coupled to each of the processor and the memory,</claim-text><claim-text>wherein the processor is configured to:<claim-text>receive, from a first customer via the communication interface, a service request call;</claim-text><claim-text>assign a single customer service agent to handle the service request call sent by the first customer;</claim-text><claim-text>determine a plurality of software applications that are to be used by the single customer service agent for responding to the service request call, the service request call including a plurality of requests of different types, wherein the plurality of software applications addresses the plurality of requests included in the service request call;</claim-text><claim-text>monitor the service request call in order to obtain information relating to a timing of the service request call, events that occur during the service request call, and at least one output of the plurality of software applications;</claim-text><claim-text>when the service request call is completed, determine for each of the plurality of software applications used by the single customer service agent during servicing the first customer during the service request call, at least one call-specific metric for a respective software application based on the information obtained as a result of the monitoring; and</claim-text><claim-text>for each of the plurality of software applications used by the single customer service agent during the servicing of the first customer during the service request call, report the determined at least one call-specific metric to a central repository.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computing apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the at least one call-specific metric includes at least one from among a hold time, a talk time, an average handling time, a call intent, a call disposition, a speed to answer, a number of calls abandoned, a number of calls dropped, a number of calls handled, an average after-call work time, a percentage of calls held, an average duration of calls held, an after-call work percentage of average time, a number and percentage of calls transferred, a number and percentage of calls conferenced, a combined percentage of transferred or conferenced calls, service level percentages, a number of transfers, an idle time, a call count, a type of servicing software application used for each service request during the call per specialist segment and team leader, and a number of call recordings.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computing apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the processor is further configured to identify the customer service agent that is assigned to handle the service request call, and to calculate at least one agent-specific metric based on the determined at least one call-specific metric and previously stored agent-specific metric data.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computing apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor is further configured to capture at least one metadata item that relates to the service request call, and<claim-text>wherein the at least one metadata item includes at least one from among telephony data, user profile data that relates to the identified agent, an identification of each of the plurality of software applications used by the single customer service agent, and information relating to whether the identified agent performed a search function during the service request call.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computing apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor is further configured to display, on a display associated with the identified customer service agent, a user interface that includes information relating to the service request call and information relating to a historical sequence of interactions that corresponds to the first customer.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computing apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the plurality of software applications includes a first software application that is usable for responding to a first aspect of the service request call and at least a second software application that is usable for responding to a second aspect of the service request call.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computing apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the at least one call-specific metric includes a first call-specific metric that relates to the first aspect of the service request call and at least a second call-specific metric that relates to the second aspect of the service request call.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computing apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the processor is further configured to use a container software application that is designed to facilitate interactions between each of the plurality of software applications for performing the monitoring and the reporting.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory computer readable storage medium storing instructions for reporting metrics relating to customer calls, the storage medium comprising executable code which, when executed by a processor, causes the processor to:<claim-text>receive, from a first customer, a service request call;</claim-text><claim-text>assign a single customer service agent to handle the service request call sent by the first customer;</claim-text><claim-text>determine a plurality of software applications that are to be used by the single customer service agent for responding to the service request call, the service request call including a plurality of requests of different types, wherein the plurality of software applications addresses the plurality of requests included in the service request call;</claim-text><claim-text>monitor the service request call in order to obtain information relating to a timing of the service request call, events that occur during the service request call, and at least one output of the plurality of software applications;</claim-text><claim-text>when the service request call is completed, for each of the plurality of software applications used by the single customer service agent during servicing the first customer during the service request call, determine at least one call-specific metric for a respective software application based on a result of the monitoring; and</claim-text><claim-text>for each of the plurality of software applications used by the single customer service agent during the servicing of the first customer during the service request call, report the determined at least one call-specific metric to a central repository.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The storage medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the executable code is further configured to cause the processor to identify the customer service agent that is assigned to handle the service request call, and to calculate at least one agent-specific metric based on the determined at least one call-specific metric and previously stored agent-specific metric data.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the executable code is further configured to cause the processor to display, on a display associated with the identified customer service agent, a user interface that includes information relating to the service request call and information relating to a historical sequence of interactions that corresponds to the first customer.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The storage medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the plurality of software applications includes a first software application that is usable for responding to a first aspect of the service request call and at least a second software application that is usable for responding to a second aspect of the service request call.</claim-text></claim></claims></us-patent-application>