<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004716A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004716</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943046</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>279</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>258</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>955</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>134</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>279</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>258</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>9558</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>134</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">COMPUTING SYSTEM FOR ENTITY DISAMBIGUATION AND NOT-IN-LIST ENTITY DETECTION IN A KNOWLEDGE GRAPH</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17352902</doc-number><date>20210621</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11443114</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943046</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Microsoft Technology Licensing, LLC</orgname><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>HE</last-name><first-name>Yujie</first-name><address><city>Bothell</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Xiao</first-name><address><city>Stamford</city><state>CT</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>XU</last-name><first-name>Wenjin</first-name><address><city>Bothell</city><state>WA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computing system obtains computer-readable text comprising an identifier for an entity and an additional word. The computing system computes relevance scores for entries for entities in a computer-implemented knowledge graph upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The computing system determines whether the identifier for the entity is an acronym or a non-acronym. The computing system identifies an entry for the entity in the knowledge graph based upon the relevance scores and whether the identifier for the entity is an acronym or a non-acronym. The computing system generates a link between the identifier for the entity in the text and the entry for the entity in the knowledge graph, where data from the entry for the entity in the knowledge graph is presented to a user upon the link being selected.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="72.31mm" wi="158.75mm" file="US20230004716A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="218.27mm" wi="142.24mm" orientation="landscape" file="US20230004716A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="212.51mm" wi="145.80mm" orientation="landscape" file="US20230004716A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="221.74mm" wi="150.20mm" orientation="landscape" file="US20230004716A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="220.22mm" wi="147.40mm" orientation="landscape" file="US20230004716A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="219.96mm" wi="147.40mm" orientation="landscape" file="US20230004716A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="219.20mm" wi="147.83mm" orientation="landscape" file="US20230004716A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="213.95mm" wi="137.41mm" orientation="landscape" file="US20230004716A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="213.53mm" wi="137.41mm" orientation="landscape" file="US20230004716A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="219.63mm" wi="134.28mm" file="US20230004716A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="219.63mm" wi="152.91mm" file="US20230004716A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="177.29mm" wi="132.76mm" file="US20230004716A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/352,902, filed on Jun. 21, 2021, and entitled &#x201c;COMPUTING SYSTEM FOR ENTITY DISAMBIGUATION AND NOT-IN-LIST ENTITY DETECTION IN A KNOWLEDGE GRAPH,&#x201d; the entirety of which is incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">A knowledge graph is a computer-implemented data structure that relates entities (e.g., persons, places, things, ideas, and events) to attributes of the entities and/or other entities. Knowledge graphs may include general information about a wide variety of topics or may be restricted to a specific domain or enterprise. Knowledge graphs have applications in a variety of areas, including natural language processing (NLP), search engines, and social networks.</p><p id="p-0004" num="0003">As a knowledge graph includes a plethora of information about entities, it is desirable to generate a link (e.g., a hyperlink) between an identifier for an entity referenced in text shown on a display (e.g., an identifier for an entity shown on a web page) and an entry in a knowledge graph assigned to the entity such that data from the entry that pertains to the entity is presented to a user upon the link being selected. Conventional approaches to entity linking assume the knowledge graph is complete and that a single correct entry for an entity referenced in text exists in the knowledge graph. However, conventional approaches to entity linking underperform when applied to incomplete, private, or domain-specific knowledge graphs; that is, conventional approaches may link an identifier for an entity in text to an entry in a knowledge graph that does not correspond to the entity.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">The following is a brief summary of subject matter that is described in greater detail herein. This summary is not intended to be limiting as to the scope of the claims.</p><p id="p-0006" num="0005">Described herein are various technologies pertaining to linking entities referenced in computer-readable text to entries for the entities in a knowledge graph. In an example, a computing system computes relevance scores for entries for entities in a knowledge graph based upon an identifier for an entity (also referred to a mention) in the text, additional words in the text, titles of the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The computing system selects an entry in the knowledge graph based upon a relevance score for the entry and compares the relevance score to different threshold scores depending on whether the identifier for the entity is an acronym or a non-acronym. The computing system generates a link between the identifier for the entity in the text and the entry in the knowledge graph based upon the comparison, where data from the entry in the knowledge graph is presented to a user via a computing device upon the link being selected, and where the data corresponds to the entity.</p><p id="p-0007" num="0006">In another example, a computing system obtains computer-readable text that includes an identifier for an entity and at least one additional word. The computing system recognizes the identifier for the entity in the text. The computing system identifies entries for entities in a knowledge graph (e.g., an enterprise knowledge graph for an enterprise) based upon the identifier for the entity. The computing system computes relevance scores (with respect to the entity referenced in the text) for the entries in the knowledge graph based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The computing system assigns ranks to the entries based upon their respective relevance scores. According to embodiments, a transformer-based encoder, such as a cross-encoder, generates the scores. The computing system selects an entry from amongst the entries based upon the ranks. For instance, the computing system selects the entry that has a highest rank.</p><p id="p-0008" num="0007">According to some embodiments, the computing system determines whether the identifier for the entity in the text is an acronym or a non-acronym. When the identifier for the entity is an acronym, the computing system compares the relevance score for the entry in the knowledge graph to a first threshold score. When the relevance score is greater than or equal to the first threshold score, the entry in the knowledge graph corresponds to the entity referenced in the text and the computing system generates a link between the identifier for the entity in the text and the entry in the knowledge graph. When the relevance score is less than the first threshold score, the computing system identifies the entity referenced in the text as a not-in-list entity, that is, the entity referenced in the text does not have a corresponding entry in the knowledge graph, and hence the computing system does not generate the link. When the identifier for the entity is a non-acronym, the computing system compares the relevance score for the entry in the knowledge graph to a second threshold score that is different than the first threshold score. When the relevance score is greater than or equal to the second threshold score, the computing system generates the link. When the relevance score is less than the second threshold score, the entity referenced in the text is a not-in-list entity and the computing system does not generate the link. In an example, the text is presented on a display and the link is a hyperlink that is embedded in the identifier for the entity in the text. When the link is selected by a user, data from the entry in the knowledge graph is retrieved and presented on the display to the user, where the data pertains to the entity.</p><p id="p-0009" num="0008">The above-described technologies present various advantages over conventional approaches to entity linking. First, unlike conventional approaches which assume a public knowledge graph, the above-described technologies are domain agnostic and can operate on new and unseen knowledge graphs (e.g., private knowledge graphs). Second, the above-described technologies explicitly account for not-in-list entities (e.g., entities that are not referenced in a knowledge graph), whereas conventional technologies assume that a knowledge graph is complete and that mentions of an entity can be linked to an existing entry in the knowledge graph. This is useful for enterprise or domain-specific knowledge graphs, which tend to include less information that public knowledge graphs. Third, unlike conventional approaches, the above-described technologies treat acronym and non-acronym entity linking separately and flexibly, which tends to lead to more accurate entity linking. This is useful for enterprise knowledge graphs, as an acronym used by an enterprise may have a different meaning to the enterprise than to the public at large.</p><p id="p-0010" num="0009">The above summary presents a simplified summary in order to provide a basic understanding of some aspects of the systems and/or methods discussed herein. This summary is not an extensive overview of the systems and/or methods discussed herein. It is not intended to identify key/critical elements or to delineate the scope of such systems and/or methods. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a functional block diagram of an example computing environment that facilitates linking entities referenced in computer-readable text to entries for the entities in knowledge graphs.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is an illustration of an example knowledge graph.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a depiction of an example process performed by a linker application.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a functional block diagram of an example cross-encoder.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a functional block diagram of an example bi-encoder.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a functional block diagram of an example computing environment that facilitates delivering information about an entity referenced in a knowledge graph to a user.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIGS. <b>7</b>A-B</figref> illustrate sequential views of an example graphical user interface (GUI).</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow diagram that illustrates an example methodology performed by a computing system for linking an entity referenced in computer-readable text to an entry for the entity in a knowledge graph.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow diagram that illustrates an example methodology performed by a computing system for determining whether or not to link an entity referenced in computer-readable text to an entry in a knowledge graph.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is an example computing device.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0021" num="0020">Various technologies pertaining to linking an entity referenced in computer-readable text to an entry for the entity in a knowledge graph are now described with reference to the drawings, where like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of one or more aspects. It may be evident, however, that such aspect(s) may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to facilitate describing one or more aspects. Further, it is to be understood that functionality that is described as being carried out by certain system components may be performed by multiple components. Similarly, for instance, a component may be configured to perform functionality that is described as being carried out by multiple components.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0021">As noted above, conventional approaches to linking mentions of entities in text to entries in a knowledge graph suffer from various problems. First, conventional approaches tend to assume that the knowledge graph is complete and that a mention of an entity in text can always be linked to an entry in a knowledge graph. However, this is not always true, particularly in the case of enterprise or domain-specific knowledge graphs, which tend to include less information than publicly available knowledge graphs such as Wikipedia&#xae;. Second, conventional approaches tend not to distinguish between acronym and non-acronym mentions of entities in text. This can be problematic in enterprise contexts in which an acronym used by an enterprise differs from use of the acronym by the public at large. In an example, the acronym &#x201c;CXR&#x201d; stands for &#x201c;Company X Research&#x201d; in the context of Company X, but stands for &#x201c;Chest X-ray&#x201d; in a public context. Furthermore, a knowledge graph may include entries for different entities that share the same name (e.g., a first entry for a first person named &#x201c;Joe Johnson&#x201d; and a second entry for a second person named &#x201c;Joe Johnson&#x201d;) and it is challenging to disambiguate between the different entities.</p><p id="p-0023" num="0022">To address these issues, a computing system is described herein that is configured to generate a link between an identifier for an entity referenced in text and an entry in a knowledge graph that is assigned to the entity. The computing system generates the link by computing, with respect to the entity referenced in the text, relevance scores for entries for entities in the knowledge graph and by selecting an entry from amongst the entries based upon the relevance scores. The computing system utilizes different criteria in determining whether or not to generate the link based upon whether the identifier for the entity in the text is an acronym or a non-acronym. When the link is selected by a user, data from the entry in the knowledge graph is presented on a display to a user, where the data pertains to the entity.</p><p id="p-0024" num="0023">Briefly, a computing system obtains computer-readable text that includes an identifier for an entity and at least one additional word. In an example, the text includes &#x201c;The pace of innovation in computer science is fast and exciting with Company X Research and its collaboration with the academic community.&#x201d; The computing system identifies and selects the identifier for the entity (e.g., &#x201c;Company X Research&#x201d;) in the text. The computing system identifies entries for entities in a knowledge graph (e.g., an enterprise knowledge graph for an enterprise) based upon the identifier for the entity. The computing system computes relevance scores for the entries in the knowledge graph based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph and assigns ranks to the entries based upon their respective relevance scores. According to embodiments, a transformer-based encoder generates the scores. The computing system selects an entry from amongst the entries based upon the rankings. For instance, the computing system selects a highest ranked entry.</p><p id="p-0025" num="0024">According to some embodiments, the computing system determines whether the identifier for the entity in the text is an acronym or a non-acronym. When the identifier for the entity is an acronym, the computing system compares the relevance score for the entry in the knowledge graph to a first threshold score. When the relevance score is greater than or equal to the first threshold score, the entry in the knowledge graph corresponds to the entity referenced in the text and the computing system generates a link between the identifier for the entity in the text and the entry in the knowledge graph. When the relevance score is less than the first threshold score, the computing system identifies the entity referenced in the text as a not-in-list entity, that is, the entity referenced in the text does not have a corresponding entry in the knowledge graph, and hence the computing system does not generate the link. When the identifier for the entity is a non-acronym, the computing system compares the relevance score for the entry in the knowledge graph to a second threshold score that is different than the first threshold score. When the relevance score is greater than or equal to the second threshold score, the computing system generates the link. When the relevance score is less than the second threshold score, the entity referenced in the text is a not-in-list entity and the computing system does not generate the link. When the link is selected by a user, data from the entry in the knowledge graph is retrieved and presented on the display to the user, where the data pertains to the entity.</p><p id="p-0026" num="0025">In an example, the text is presented on a display and the link is a hyperlink that is embedded in the identifier for the entity in the text. When the link is selected by a user, data from the entry in the knowledge graph is retrieved and presented on the display to the user, where the data pertains to the entity. Following the specific example given above with &#x201c;Company X Research&#x201d;, the data includes a description of &#x201c;Company X Research&#x201d;, people associated with &#x201c;Company X Research&#x201d;, websites associated with &#x201c;Company X Research&#x201d;, and so forth.</p><p id="p-0027" num="0026">The above-described technologies present various advantages over conventional approaches to entity linking. First, unlike conventional approaches which assume a public knowledge graph, the above-described technologies are domain agnostic and can operate on new and unseen knowledge graphs (e.g., private knowledge graphs). Second, the above-described technologies explicitly account for not-in-list entities (e.g., entities that are not referenced in a knowledge graph), whereas conventional technologies assume that a knowledge graph is complete and that mentions of an entity can be linked to an existing entry in the knowledge graph. This is useful for enterprise or domain-specific knowledge graphs, which tend to include less information that public knowledge graphs. Third, unlike conventional approaches, the above-described technologies treat acronym and non-acronym entity linking separately and flexibly, which tends to lead to more accurate entity linking. This is useful for enterprise knowledge graphs, as an acronym used by an enterprise may have a different meaning to the enterprise than to the public at large.</p><p id="p-0028" num="0027">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an example computing environment <b>100</b> that facilitates linking entities referenced in computer-readable text to entries for the entities in knowledge graphs is illustrated. The computing environment <b>100</b> includes a computing system <b>102</b>. According to some embodiments, the computing system <b>102</b> is a server computing device. According to other embodiments, the computing system <b>102</b> is a cloud-based computing platform. The computing system <b>102</b> includes a processor <b>104</b>, memory <b>106</b>, and a data store <b>108</b>.</p><p id="p-0029" num="0028">The data store <b>108</b> stores a knowledge graph <b>110</b> (sometimes also referred to as a knowledge base). According to some embodiments, the knowledge graph <b>110</b> is an enterprise knowledge graph for an enterprise (e.g., an organization) or a domain-specific knowledge graph that is specific to a particular domain. According to other embodiments, the knowledge graph <b>110</b> is a public knowledge graph that stores information pertaining to a wide variety topics and that is available to the public. Although not depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, it is to be understood that the data store <b>108</b> may stores many different knowledge graphs.</p><p id="p-0030" num="0029">The knowledge graph <b>110</b> includes nodes and edges connecting the nodes, where the nodes represent entities (e.g., people, places, things, ideas, events, etc.) or attributes of the entities and where the edges are indicative of relationships between the entities themselves or relationships between the entities and the attributes. In an example, a first node in the knowledge graph <b>110</b> represents a research team, a second node in the knowledge graph <b>110</b> represents a researcher, and a first edge in the knowledge graph <b>110</b> that connects the first node and the second node is assigned criteria that indicates that the researcher belongs to the research team. In another example, a third node in the knowledge graph <b>110</b> represents a date, and the second node is connected to the third node in the knowledge graph <b>110</b> via a second edge that is assigned criteria that indicates that the researcher was born on the date. Nodes in the knowledge graph <b>110</b> that represent entities may be assigned unique identifiers so as to disambiguate entities that share the same name. According to some embodiments, nodes and/or edges within the knowledge graph <b>110</b> comprise metadata that enables information about the entities to be retrieved. According to some embodiments, nodes and/or edges within the knowledge graph <b>110</b> store information about the entities.</p><p id="p-0031" num="0030">According to embodiments, an entry for an entity in the knowledge graph <b>110</b> is represented by a node for the entity in the knowledge graph <b>110</b> and nodes (representing other entities and/or attributes) that are connected to the node via edges. The entry for the entity includes a title for the entity (e.g., a name of the entity) and a description of the entity, where the title of the entity and the description of the entity are based upon the node for the entity, the nodes (representing other entities and/or attributes) to which the node is connected, and the edges connecting the node to the nodes. According to embodiments, the description of the entity is a sentence about the entity. In an example, the description of the entity includes identifiers for other entities (represented by nodes connected to the node representing the entity) and relationships of the other entities to the entity (represented by the edges connecting the node to the nodes), as well as attributes of the entity (also represented by nodes connected to the node representing the entity).</p><p id="p-0032" num="0031">Turning now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, an example knowledge graph <b>200</b> is illustrated. The knowledge graph <b>200</b> may be or include the knowledge graph <b>110</b> or the knowledge graph <b>110</b> may be or include the knowledge graph <b>200</b>. The knowledge graph <b>200</b> includes a first node <b>202</b> that represents a first entity. The first node <b>202</b> is connected to a second node <b>204</b> via a first edge <b>206</b>, where the second node <b>204</b> represents a first attribute and where the first edge <b>206</b> is assigned criteria indicating that the first entity has the first attribute. The knowledge graph <b>200</b> further includes a third node <b>208</b> that is connected to the first node <b>202</b> by a second edge <b>210</b>, where the third node <b>208</b> represents a second attribute and where the second edge <b>210</b> is assigned criteria indicating that the first entity has the second attribute. The knowledge graph <b>200</b> further includes a fourth node <b>212</b> that is connected to the first node <b>202</b> by a third edge <b>214</b>, where the fourth node <b>212</b> represents a second entity and where the third edge <b>214</b> is assigned criteria that is indicative of a relationship between the first entity and the second entity. The knowledge graph <b>200</b> further includes a fifth node <b>216</b> that is connected to the fourth node <b>212</b> by a fourth edge <b>218</b>, where the fifth node <b>216</b> represents a third attribute and where the fourth edge <b>218</b> is assigned criteria indicating that the second entity has the third attribute.</p><p id="p-0033" num="0032">Turning back to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the memory <b>106</b> has a linker application <b>112</b> loaded therein. In general, the linker application <b>112</b> is configured to generate a link between an identifier for an entity (also referred to herein as &#x201c;a mention of an entity&#x201d;) in computer-readable text <b>114</b> and an entry for the entity in the knowledge graph <b>110</b>. When the link is selected, data from the entry for the entity in the knowledge graph <b>110</b> is presented to a user. The text <b>114</b> is stored in and/or originates from an electronic source <b>116</b>. According to some embodiments, the electronic source <b>116</b> is the data store <b>108</b>. According to some embodiments, the electronic source <b>116</b> is a server computing device that is in network communication with the computing system <b>102</b>. According to some embodiments, the electronic source <b>116</b> is a computing device operated by a user that is in network communication with the computing system <b>102</b>. According to embodiments, the text <b>114</b> is included in a document, an email, a real-time message, or a web page that is stored in and/or originates from the electronic source <b>116</b>.</p><p id="p-0034" num="0033">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a depiction <b>300</b> of an example process performed by the linker application <b>112</b> is illustrated. The depiction <b>300</b> includes the knowledge graph <b>200</b> described above. The depiction <b>300</b> also includes computer-readable text <b>302</b>. In an example, the text <b>302</b> is the text <b>114</b>. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the text <b>302</b> includes an identifier for an entity (&#x201c;Company X Research&#x201d;) and at least one additional word (&#x201c;The pace of innovation in computer science is fast and exciting with . . . and its collaboration with the academic community&#x201d;). The linker application <b>112</b> is configured to (1) determine which node (e.g., the first node <b>202</b> or the fourth <b>212</b>) in the knowledge graph <b>200</b> represents the entity in the text <b>302</b> and (2) generate a link between the identifier for the entity in the text <b>302</b> and the node in the knowledge graph <b>200</b> that represents the entity. When the knowledge graph <b>200</b> does not include a node representing the entity referenced in the text <b>302</b>, the linker application <b>112</b> is configured to identify the entity in the text <b>302</b> as a not-in-list entity <b>304</b>. When the entity in the text <b>302</b> is a not-in-list entity <b>304</b>, the linker application <b>112</b> does not generate a link between the identifier for the entity in the text <b>302</b> and a node in the knowledge graph <b>200</b>.</p><p id="p-0035" num="0034">In an example, the linker application <b>112</b> determines that &#x201c;Company X Research&#x201d; is represented by the first node <b>202</b> in the knowledge graph <b>200</b> and the linker application <b>112</b> generates a link between &#x201c;Company X Research&#x201d; in the text <b>302</b> and the first node <b>202</b> (represented by a dotted line in <figref idref="DRAWINGS">FIG. <b>3</b></figref>). In an example, the link is a hyperlink that is embedded in &#x201c;Company X Research&#x201d; in the text <b>302</b>. When the link is selected, data from the knowledge graph <b>200</b> pertaining to &#x201c;Company X Research&#x201d; is presented to a user. In an example, the data indicates that &#x201c;Company X Research&#x201d; has the first attribute and the second attribute and that &#x201c;Company X Research&#x201d; has some relation to the second entity.</p><p id="p-0036" num="0035">Turning back to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the linker application <b>112</b> includes an entity recognizer <b>118</b>. The entity recognizer <b>118</b> is configured to recognize and select an identifier for an entity in the text <b>114</b>. According to some embodiments, the entity recognizer <b>118</b> is a computer-implemented machine learning model. In some embodiments, the machine learning model is a transformer model. In some embodiments, the machine learning model is a similarity model configured to measure contextual similarity between entity mentions and entities in the knowledge graph. The linker application <b>112</b> further includes an encoder <b>120</b>. In general, the encoder <b>120</b> is configured to compute a relevance score for an entry in the knowledge graph <b>110</b> based upon the text <b>114</b> (which includes an identifier for an entity and at least one additional word), a title of the entity in the knowledge graph <b>110</b>, and a description of the entity in the knowledge graph <b>110</b>. In general, a relevance score for an entry in the knowledge graph <b>110</b> is indicative of a contextual similarity between the text <b>114</b> (e.g., the identifier for the entity and the at least one additional word) and the entry for the entity (e.g., the title and the description) in the knowledge graph <b>110</b>. A relatively high relevance score for the entry indicates that the entry likely corresponds to the entity referenced in the text <b>114</b>, while a relatively low relevance score for the entry indicates that the entry likely does not correspond to the entity referenced in the text <b>114</b>. According to embodiments, the encoder <b>120</b> is trained using a multi-stage hard negative entity candidates retrieval pipeline.</p><p id="p-0037" num="0036">Turning now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an example cross-encoder <b>400</b> is illustrated. The encoder <b>120</b> may be or include the cross-encoder <b>400</b> or the cross-encoder <b>400</b> may be or include the encoder <b>120</b>. The cross-encoder <b>400</b> generates a concatenation (e.g., a string) of elements from the text <b>114</b>, elements from an entry in the knowledge graph <b>110</b>, and a plurality of tokens and provides the concatenation to a transformer <b>402</b>. The cross-encoder <b>400</b> includes a transformer <b>402</b> that generates a vectorized representation of the text <b>114</b> and the entry based upon the concatenation. In an example, the cross-encoder <b>400</b> generates the concatenation according to equation (I).</p><p id="p-0038" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>concatenation=[CLS]+context_left+[M]mention[/M]+context_right+[SEP]+entity title+[ENT]+entity description &#x2003;&#x2003;(I)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0039" num="0037">In equation (I), [CLS] represents a classifier token, context_left are the word or words in the text <b>114</b> that occur before the identifier for the entity in the text <b>114</b>, [M] represents an opening mention token, mention is the identifier for the entity in the text <b>114</b>, [/M] represents an ending mention token, context_right are the word or words in the text <b>114</b> that occur after the identifier for the entity in the text <b>114</b>, [SEP] represents a separator token that separates the text <b>114</b> from the entry in the knowledge graph <b>110</b>, entity title is the title of an entry in the knowledge graph <b>110</b>, [ENT] is a token representing an entity, and entity description is the description of an entry in the knowledge graph <b>110</b>. In an example, each entry in the vectorized representation is an embedding (e.g., a <b>768</b>-dimension embedding) of an element in equation (I) (e.g., [CLS], context_left (with each word in context-left having a different embedding in the vectorized representation), [M], [/M], and so forth).</p><p id="p-0040" num="0038">The cross-encoder <b>400</b> includes a pooling layer <b>404</b> that reduces dimensionality of the vectorized representation from a first dimensionality to a second dimensionality, where the first dimensionality is greater than the second dimensionality. According to embodiments, the pooling layer <b>404</b> performs mean (also referred to as average) pooling based upon the [M] and [/M] tokens. The cross encoder <b>400</b> also includes a linear layer <b>406</b> that reduces the (reduced) vectorized representation to a scalar value, where the scalar value is the relevance score. According to embodiments, the linear layer <b>406</b> is a neural network.</p><p id="p-0041" num="0039">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, an example bi-encoder <b>500</b> is illustrated. The encoder <b>120</b> may be or include the bi-encoder <b>500</b> or the bi-encoder <b>500</b> may be or include the encoder <b>120</b>. The bi-encoder <b>500</b> generates a first concatenation of elements from the text <b>114</b> and a first plurality of tokens. The bi-encoder <b>600</b> also generates a second concatenation of elements from an entry in the knowledge graph <b>110</b> and a second plurality of tokens. In an example, the bi-encoder <b>500</b> generates the first concatenation and the second concatenation according to equations (II) and (III), respectively.</p><p id="p-0042" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>first concatenation=[CLS]+context left+[M]mention [/M]+context_right &#x2003;&#x2003;(II)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0043" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>second concatenation=[CLS]+entity title+[ENT]+entity description &#x2003;&#x2003;(III)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0044" num="0040">The bi-encoder <b>500</b> includes a first transformer <b>502</b> that generates an embedding u <b>506</b> of the text <b>114</b> based upon the first concatenation and a second transformer <b>504</b> that generates an embedding v <b>508</b> of the entry in the knowledge graph <b>110</b> based upon the second concatenation. The bi-encoder <b>500</b> includes a similarity component <b>510</b> that calculates a similarity metric between the embedding u <b>506</b> and the embedding v <b>508</b>, where the similarity metric may be used as the relevance score for the entry. According to embodiments, the similarity metric is cosine similarity.</p><p id="p-0045" num="0041">According to embodiments, the encoder <b>120</b> is trained based upon publicly available data, that is, data from a public knowledge graph and mentions of entities in text (e.g. Wikipedia). In some embodiments, the publicly available data does not include negative training samples. In an example, negative training samples are generated according to the following procedure. First, the computing system <b>102</b> executes a search over the knowledge graph <b>110</b> based upon an identifier for an entity referenced in text, where the search produces search results that includes entries in the knowledge graph. Second, the computing system <b>102</b> selects a threshold number of the search results (e.g., the top twenty search results). Third, the computing system <b>102</b> utilizes a bi-encoder (trained on an ambiguous data set) to select out negative training samples from amongst the threshold number of search results. The negative training samples may then be used to train the encoder <b>120</b> (in conjunction with training samples from the publicly available data).</p><p id="p-0046" num="0042">With reference generally now to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>5</b></figref>, example operation of the computing environment <b>100</b> is now set forth. The linker application <b>112</b> obtains (e.g., receives or accesses) the text <b>114</b> from the electronic source <b>116</b>. The text <b>114</b> includes an identifier for an entity and at least one additional word. The linker application <b>112</b> utilizes the entity recognizer <b>118</b> to identify and select the identifier for the entity in the text <b>114</b>.</p><p id="p-0047" num="0043">The linker application <b>112</b> executes a search over the knowledge graph <b>110</b> based upon the identifier for the entity in the text <b>114</b>. The search produces search results, where the search results include entries for entities in the knowledge graph <b>110</b>. The search results may or may not include an entry in the knowledge graph <b>110</b> that corresponds to the entity in the text <b>114</b>.</p><p id="p-0048" num="0044">The linker application <b>112</b> computes relevance scores for each of the entries (from the search results) based upon the text <b>114</b>, titles for the entities in the knowledge graph <b>110</b>, and descriptions of the entities in the knowledge graph <b>110</b>. In an example, the linker application <b>112</b> computes a relevance score for an entry in the knowledge graph <b>110</b> by generating a concatenation (e.g., a string) that includes the identifier for the entity from the text <b>114</b>, a word or words in the text <b>114</b> that occur before the identifier for the entity in the text <b>114</b>, a word or words in the text <b>114</b> that occur after the identifier for the entity in the text <b>114</b>, a title of the entry in the knowledge graph <b>110</b>, a description of the entry in the knowledge graph <b>110</b>, and a plurality of tokens. The linker application <b>112</b> provides the concatenation to the encoder <b>120</b>, where the encoder <b>120</b> outputs the relevance score based upon the concatenation.</p><p id="p-0049" num="0045">The linker application <b>112</b> assigns ranks to each of the entries (from the search results) based upon their corresponding relevance scores. The linker application <b>112</b> selects an entry from the entries based upon a relevance score for the entry. In an example, the linker application <b>112</b> selects an entry from amongst the entries that has a highest ranked relevance score from amongst the relevance scores.</p><p id="p-0050" num="0046">According to some embodiments, the linker application <b>112</b> determines whether the identifier for the entity in the text <b>114</b> is an acronym or a non-acronym. According to some embodiments, the linker application <b>112</b> determines whether each character in the identifier for the entity referenced in the text <b>114</b> is capitalized. When each character is capitalized, the linker application <b>112</b> determines that the identifier for the entity in the text <b>114</b> is an acronym. When each character is not capitalized, the linker application <b>112</b> determines that the identifier for the entity in the text <b>114</b> is a non-acronym. According to other embodiments, the linker application <b>112</b> utilizes a dictionary to determine whether the identifier for the entity in the text <b>114</b> is an acronym or a non-acronym.</p><p id="p-0051" num="0047">According to some embodiments, when identifier for the entity in the text <b>114</b> is an acronym, the linker application <b>112</b> compares the relevance score for the entry to a first threshold score. When the relevance score is greater than or equal to the first threshold score, the linker application <b>112</b> generates a link (described in detail below) between the identifier for the entity in the text <b>114</b> and the entry for the entity in the knowledge graph <b>110</b>. When the relevance score is less than the first threshold score, the linker application <b>112</b> identifies the entity referenced in the text <b>114</b> as a not-in-list entity (e.g., the entity referenced in the text <b>114</b> does not have a corresponding entry in the knowledge graph <b>110</b>) and does not generate the link. According to some embodiments, the first threshold score is experimentally determined.</p><p id="p-0052" num="0048">According to some embodiments, when the identifier for the entity in the text <b>114</b> is a non-acronym, the linker application <b>112</b> compares the relevance score for the entry to a second threshold score that is different than the first threshold score. When the relevance score is greater than or equal to the second threshold score, the linker application <b>112</b> generates the link (described in detail below) between the identifier for the entity in the text <b>114</b> and the entry for the entity in the knowledge graph <b>110</b>. When the relevance score is less than the second threshold score, the linker application <b>112</b> identifies the entity referenced in the text <b>114</b> as a not-in-list entity and does not generate the link. According to some embodiments, the second threshold score is experimentally determined. According to some embodiments, when the linker application <b>112</b> identifies the entity referenced in the text <b>114</b> as a not-in-list entity, the linker application <b>112</b> outputs an indication to a computing device indicating that the entity referenced in the text <b>114</b> is not linkable to an entry in the knowledge graph <b>110</b>.</p><p id="p-0053" num="0049">When the link is selected by a user, data from the entry for the entity in the knowledge graph <b>110</b> is presented to the user. In an example, the link is a hyperlink that is embedded in the text <b>114</b> by the linker application <b>112</b>, that is, the hyperlink is embedded in the identifier for the entity in the text <b>114</b>. When the hyperlink is selected, the user is presented with data from the (linked) entry in the knowledge graph <b>110</b>, where the data pertains to the entity. In another example, the link is a graphical icon located proximate to the identifier for the entity in the text <b>114</b>. When the graphical icon is selected, the user is presented with the data from the (linked) entry in the knowledge graph <b>110</b>. According to embodiments, the link includes metadata for the entity referenced in the text <b>114</b>. In an example, the metadata includes an identifier for the knowledge graph <b>110</b>, an identifier for an entry in the knowledge graph <b>110</b> corresponding to the entity referenced in the text <b>114</b>, and so forth.</p><p id="p-0054" num="0050">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, an example computing environment <b>600</b> that facilitates delivering information about an entity in a knowledge graph to a user is illustrated. The computing environment <b>600</b> includes the computing system <b>102</b> described above in the description of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In the computing environment <b>600</b>, the computing system <b>102</b> additionally includes a query application <b>602</b> that is configured to query the knowledge graph <b>110</b> (or other knowledge graphs) and to return data from the knowledge graph <b>110</b> to users.</p><p id="p-0055" num="0051">The computing environment <b>600</b> additionally includes a computing device <b>604</b> that is operated by a user <b>606</b>. In an example, the computing device <b>604</b> is a desktop computing device, a laptop computing device, a tablet computing device, or a smartphone. The computing device <b>604</b> is in communication with the server computing device <b>102</b> by way of a network <b>608</b> (e.g., the Internet, intranet).</p><p id="p-0056" num="0052">The computing device <b>604</b> includes a processor <b>610</b> and memory <b>612</b>, where the memory <b>612</b> has a client application <b>614</b> loaded therein. The client application <b>614</b> is generally configured to present text to the user <b>606</b>, where the text includes an identifier for an entity and where the identifier for the entity has been linked to an entry in the knowledge graph <b>110</b> corresponding to the entity using the processes described above. According to embodiments, the client application <b>614</b> is a web browser that displays a web page that includes the text.</p><p id="p-0057" num="0053">The computing device <b>604</b> further includes input components <b>616</b> that enable the user <b>606</b> to set forth input to the computing device <b>604</b>. In an example, the input components <b>616</b> include a mouse, a keyboard, a trackpad, a scroll wheel, a microphone, a camera, a video camera, a controller, and/or a touchscreen. The computing device <b>604</b> also includes output components <b>618</b> that present information to the user <b>606</b>. The output components <b>618</b> includes a display <b>620</b>, where graphical features <b>622</b> are presented thereon. In an example, the display <b>620</b> is a touchscreen display. In an example, the graphical features <b>622</b> include a graphical user interface (GUI) of the client application <b>614</b>. The output components <b>618</b> may also include a speaker and/or a haptic feedback device (not shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>).</p><p id="p-0058" num="0054">Example operation of the computing environment <b>600</b> is now set forth. It is contemplated that the client application <b>614</b> is displaying text on the display <b>620</b> as part of the graphical features <b>622</b>, where the text includes an identifier for an entity. The text may also include additional words. It is contemplated that the linker application <b>112</b> has performed the above-described processes to generate a link between the identifier for the entity in the text and an entry for the entity in the knowledge graph <b>110</b>. In an example, the link is a hyperlink that is embedded in the identifier for the entity in the text. The client application <b>614</b> receives a selection of the link from the user <b>606</b>. Upon receiving the selection of the link, the client application <b>614</b> transmits a query to the query application <b>602</b>, where the query includes an identifier for the knowledge graph <b>110</b> and an identifier for an entry in the knowledge graph <b>110</b> corresponding to the entity referenced in the text shown on the display <b>620</b>. The query application <b>602</b> identifies the knowledge graph <b>110</b> based upon the identifier for the knowledge graph <b>110</b> included in the query. The query application <b>602</b> searches the knowledge graph <b>110</b> based upon the identifier for the entry to retrieve the entry for the entity. The query application <b>602</b> transmits data from the entry for the entity in the knowledge graph <b>110</b> to the client application <b>614</b>. Upon receiving the data, the client application <b>614</b> presents the data on the display <b>620</b> as part of the graphical features <b>622</b>. According to some embodiments, the data from the entry for the entity is presented concurrently with the text on the display <b>620</b>.</p><p id="p-0059" num="0055"><figref idref="DRAWINGS">FIGS. <b>7</b>A-B</figref> illustrate sequential views of an example graphical user interface (GUI) <b>700</b>. The GUI <b>700</b> is presented on the display <b>620</b> as part of the graphical features <b>622</b> described above in the description of <figref idref="DRAWINGS">FIG. <b>6</b></figref>. Referring specifically now to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>, the GUI <b>700</b> includes the text <b>302</b> (described above in the description of <figref idref="DRAWINGS">FIG. <b>3</b></figref>). The GUI <b>700</b> may also include additional text and/or other graphical data (not shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>). The text <b>302</b> includes an identifier for an entity (e.g., &#x201c;Company X Research&#x201d;). The linker application <b>112</b> has generated a link (indicated in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> by &#x201c;Company X Research&#x201d; being bolded and underlined) between the Company X Research entity in the text <b>302</b> and an entry for Company X Research in the knowledge graph <b>110</b>. The GUI <b>700</b> receives a selection <b>702</b> of the link from the user <b>606</b>.</p><p id="p-0060" num="0056">Turning now to <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, upon the selection <b>702</b> of the link, the knowledge graph <b>110</b> is queried (e.g., by the query application <b>602</b>) and a window <b>704</b> is presented within the GUI <b>700</b> alongside the text <b>302</b>. The window <b>704</b> includes data from the entry for &#x201c;Company X Research&#x201d; in the knowledge graph <b>110</b>, where the data is based upon nodes and edges in the knowledge graph <b>110</b>. As shown in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, the data in the window <b>704</b> includes alternate names (e.g., acronyms) for &#x201c;Company X Research&#x201d;, a description of &#x201c;Company X Research&#x201d;, people related to &#x201c;Company X Research&#x201d;, and websites related to &#x201c;Company X Research&#x201d;. Some or all of the data in the window <b>704</b> is selectable. In an example, when &#x201c;John Doe&#x201d; is selected within the window <b>704</b>, the knowledge graph <b>110</b> is queried based upon an identifier for &#x201c;John Doe&#x201d;, and data pertaining to &#x201c;John Doe&#x201d; from the knowledge graph <b>110</b> is presented to the user <b>606</b> on the display <b>620</b>.</p><p id="p-0061" num="0057">Although the linker application <b>112</b> has been described above as automatically identifying and selecting an identifier for entity in text, other possibilities are contemplated. According to some embodiments, the linker application <b>112</b> receives an indication from a user that an identifier for an entity in text that is currently being displayed to the user is to be linked to an entry in the knowledge graph <b>110</b>.</p><p id="p-0062" num="0058">Although the encoder <b>120</b> has been described above as computing relevance scores for entries for entities in the knowledge graph <b>110</b>, other possibilities are contemplated. According to embodiments, a computer-implemented machine learning model (other than an encoder) computes relevance scores based upon the text <b>114</b> (including the identifier for the entity and the at least one additional word), titles for the entities in the knowledge graph <b>110</b>, and descriptions of the entities in the knowledge graph <b>110</b>.</p><p id="p-0063" num="0059"><figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref> illustrate example methodologies that facilitate linking identifiers for entities in computer-readable text to entries for the entities in a knowledge graph. While the methodologies are shown and described as being a series of acts that are performed in a sequence, it is to be understood and appreciated that the methodologies are not limited by the order of the sequence. For example, some acts can occur in a different order than what is described herein. In addition, an act can occur concurrently with another act. Further, in some instances, not all acts may be required to implement a methodology described herein.</p><p id="p-0064" num="0060">Moreover, the acts described herein may be computer-executable instructions that can be implemented by one or more processors and/or stored on a computer-readable medium or media. The computer-executable instructions can include a routine, a sub-routine, programs, a thread of execution, and/or the like. Still further, results of acts of the methodologies can be stored in a computer-readable medium, displayed on a display device, and/or the like.</p><p id="p-0065" num="0061">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a methodology <b>800</b> performed by a computing system for linking identifiers for entities in computer-readable text to entries for the entities in a knowledge graph is illustrated. The methodology <b>800</b> begins at <b>802</b>, and at <b>804</b>, the computing system obtains computer-readable text that includes an identifier for an entity and an additional word At <b>806</b>, the computing system computes, by way of an encoder, relevance scores for entries for entities in a computer-implemented knowledge graph based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. At <b>808</b>, the computing system determines whether the identifier for the entity is an acronym or a non-acronym. At <b>810</b>, the computing system identifies an entry in the knowledge graph based upon the relevance scores. At <b>812</b>, when a relevance score for the entry is greater than or equal to a threshold score, the computing system generates a link in the text between the identifier for the entity and the entry in the knowledge graph. The threshold score is based upon whether the identifier for the entity is an acronym or a non-acronym. Data from the entry in the knowledge graph is presented on a display to a user upon a computing device operated by the user receiving a selection of the link by the user, where the data corresponds to the entity. The methodology <b>800</b> concludes at <b>814</b>.</p><p id="p-0066" num="0062">Turning now to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a methodology <b>900</b> performed by a computing system for determining whether or not to link an identifier for an entity in computer-readable text to an entry in a knowledge graph is illustrated. The methodology <b>900</b> begins at <b>902</b>, and at <b>904</b>, the computing system computes, by way of an encoder, relevance scores for entries for entities in a knowledge graph based on the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The text includes an identifier for the entity and at least one additional word. At <b>906</b>, the computing system selects a relevance score for an entry in the knowledge graph. In an example, the computing system selects a highest ranked relevance score from amongst the relevance scores.</p><p id="p-0067" num="0063">At <b>908</b>, the computing system determines whether the identifier for the entity in the text is an acronym. At <b>910</b>, when the identifier for the entity in the text is an acronym, the computing system compares the relevance score for the entry in the knowledge graph to a first threshold score. At <b>912</b>, when the relevance score is greater than or equal to the first threshold, the computing system generates a link between the identifier for the entity in the text and the entry in the knowledge graph such that when the link is selected in the text, data from the entry in the knowledge graph is presented to a user. When the relevance score is less than the first threshold score, the computing system does not generate the link. At <b>914</b>, when the identifier for the entity in the text is not an acronym, the computing system compares the relevance score for the entry in the knowledge graph to a second threshold. When the relevance score is greater than or equal to the second threshold score, the computing system generates the link as described in <b>912</b>. When the relevance score is less than the second threshold score, the computing system does not generate the link. The methodology <b>900</b> concludes at <b>916</b>.</p><p id="p-0068" num="0064">Referring now to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, a high-level illustration of an example computing device <b>1000</b> that can be used in accordance with the systems and methodologies disclosed herein is illustrated. In an example, the computing device <b>1000</b> is used in a system that links an identifier for an entity in computer-readable text to an entry in a knowledge graph that is assigned to the entity. By way of another example, the computing device <b>1000</b> is used in a system that presents information from a knowledge graph to a user upon a link in computer-readable text being selected by a user. The computing device <b>1000</b> includes at least one processor <b>1002</b> that executes instructions that are stored in a memory <b>1004</b>. The instructions may be, for instance, instructions for implementing functionality described as being carried out by one or more components discussed above or instructions for implementing one or more of the methods described above. The processor <b>1002</b> may access the memory <b>1004</b> by way of a system bus <b>1006</b>. In addition to storing executable instructions, the memory <b>1004</b> may also store knowledge graphs, computer-readable text, computer-implemented models (e.g., cross-encoders, bi-encoders, entity recognizers), etc.</p><p id="p-0069" num="0065">The computing device <b>1000</b> additionally includes a data store <b>1008</b> that is accessible by the processor <b>1002</b> by way of the system bus <b>1006</b>. The data store <b>1008</b> may include executable instructions, knowledge graphs, computer-readable text, computer-implemented models (e.g., cross-encoders, bi-encoders, entity recognizers), etc. The computing device <b>1000</b> also includes an input interface <b>1010</b> that allows external devices to communicate with the computing device <b>1000</b>. For instance, the input interface <b>1010</b> may be used to receive instructions from an external computer device, from a user, etc. The computing device <b>1000</b> also includes an output interface <b>1012</b> that interfaces the computing device <b>1000</b> with one or more external devices. For example, the computing device <b>1000</b> may display text, images, etc. by way of the output interface <b>1012</b>.</p><p id="p-0070" num="0066">It is contemplated that the external devices that communicate with the computing device <b>1000</b> via the input interface <b>1010</b> and the output interface <b>1012</b> can be included in an environment that provides substantially any type of user interface with which a user can interact. Examples of user interface types include graphical user interfaces, natural user interfaces, and so forth. For instance, a graphical user interface may accept input from a user employing input device(s) such as a keyboard, mouse, remote control, or the like and provide output on an output device such as a display. Further, a natural user interface may enable a user to interact with the computing device <b>1000</b> in a manner free from constraints imposed by input devices such as keyboards, mice, remote controls, and the like. Rather, a natural user interface can rely on speech recognition, touch and stylus recognition, gesture recognition both on screen and adjacent to the screen, air gestures, head and eye tracking, voice and speech, vision, touch, gestures, machine intelligence, and so forth.</p><p id="p-0071" num="0067">Additionally, while illustrated as a single system, it is to be understood that the computing device <b>1000</b> may be a distributed system. Thus, for instance, several devices may be in communication by way of a network connection and may collectively perform tasks described as being performed by the computing device <b>1000</b>.</p><p id="p-0072" num="0068">Various functions described herein can be implemented in hardware, software, or any combination thereof If implemented in software, the functions can be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Computer-readable media includes computer-readable storage media. A computer-readable storage media can be any available storage media that can be accessed by a computer. Such computer-readable storage media can include random-access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), compact disc read-only memory (CD-ROM) or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to store desired program code in the form of instructions or data structures and that can be accessed by a computer. Disk and disc, as used herein, include compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk, and blu-ray disc (BD), where disks usually reproduce data magnetically and discs usually reproduce data optically with lasers. Further, a propagated signal is not included within the scope of computer-readable storage media. Computer-readable media also includes communication media including any medium that facilitates transfer of a computer program from one place to another. A connection can be a communication medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio and microwave are included in the definition of communication medium. Combinations of the above should also be included within the scope of computer-readable media.</p><p id="p-0073" num="0069">Alternatively, or in addition, the functionally described herein can be performed, at least in part, by one or more hardware logic components. For example, and without limitation, illustrative types of hardware logic components that can be used include Field-programmable Gate Arrays (FPGAs), Application-specific Integrated Circuits (ASICs), Application-specific Standard Products (ASSPs), System-on-a-chip systems (SOCs), Complex Programmable Logic Devices (CPLDs), etc.</p><p id="p-0074" num="0070">The present disclosure relates to linking identifiers for entities in computer-readable text to entries for the entities in a knowledge graph according to at least the following examples provided in the section below:</p><p id="p-0075" num="0071">(A1) In one aspect, some embodiments includes a method (e.g., <b>800</b>) executed by a processor (e.g., <b>104</b>) of a computing system (e.g., <b>102</b>). The method includes obtaining (e.g., <b>804</b>) computer-readable text (e.g., <b>114</b>, <b>302</b>) that includes an identifier for an entity and at least one additional word. The method further includes computing (e.g., <b>806</b>), by way of an encoder (e.g., <b>120</b>), relevance scores for entries for entities in a computer-implemented knowledge graph (e.g., <b>110</b>, <b>200</b>) based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The method additionally includes determining (e.g., <b>808</b>) whether the identifier for the entity is an acronym or a non-acronym. The method also includes identifying (e.g., <b>810</b>) an entry in the knowledge graph based upon the relevance scores. The method further includes when a relevance score for the entry is greater than or equal to a threshold score, generating (e.g., <b>812</b>) a link in the text between the identifier for the entity and the entry in the knowledge graph, where the threshold score is based upon whether the identifier for the entity is the acronym or the non-acronym, where data (e.g., <b>704</b>) from the entry in the knowledge graph is presented on a display (e.g., <b>620</b>) to a user (e.g., <b>606</b>) upon a computing device (e.g., <b>604</b>) operated by the user receiving a selection (e.g., <b>702</b>) of the link by the user, and where the data corresponds to the entity.</p><p id="p-0076" num="0072">(A2) In some embodiments of the method of A1, the entry in the knowledge graph has a highest relevance score from amongst the relevance scores.</p><p id="p-0077" num="0073">(A3) In some embodiments of any of the methods of A1-A2, the threshold score is a first threshold score when the identifier for the entity is the acronym and the threshold score is a second threshold score when the identifier for the entity is the non-acronym.</p><p id="p-0078" num="0074">(A4) In some embodiments of any of the methods of A1-A3, obtaining the text includes receiving the text from a second computing device over a network connection.</p><p id="p-0079" num="0075">(A5) In some embodiments of any of the methods of A1-A4, the method further includes when the relevance score for the entry is less than the threshold score, outputting an indication that the identifier for the entity in the text cannot be linked to the entry in the knowledge graph.</p><p id="p-0080" num="0076">(A6) In some embodiments of any of the methods of A1-A5, the at least one additional word includes a first word that occurs before the identifier for the entity in the text and a second word that occurs after the identifier for the entity in the text. Computing the relevance score for the entry includes generating a concatenation of the first word, the identifier for the entity, the second word, a title of the entity in the knowledge graph, a description of the entity in the knowledge graph, and a plurality of tokens, generating a vectorized representation of the text and the entry for the entity based upon the concatenation, and reducing the vectorized representation to a scalar value, where the relevance score is the scalar value.</p><p id="p-0081" num="0077">(A7) In some embodiments of any of the methods of A1-A6, the text is presented on the display and the link is embedded in the identifier for the entity in the text.</p><p id="p-0082" num="0078">(A8) In some embodiments of the method of A7, the data from the entry is presented on the display concurrently with the identifier for the entity in the text.</p><p id="p-0083" num="0079">(B1) In another aspect, some embodiments include a computing system (e.g., <b>102</b>) that includes a processor (e.g., <b>104</b>) and memory (e.g., <b>106</b>). The memory stores instructions that, when executed by the processor, cause the processor to perform any of the methods described herein (e.g., any of A1-A8).</p><p id="p-0084" num="0080">(C1) In yet another aspect, some embodiments include a non-transitory computer-readable storage medium that includes instructions that, when executed by a processor (e.g., <b>104</b>), cause the processor to perform any of the methods described herein (e.g., any of A1-A8).</p><p id="p-0085" num="0081">(D1) In another aspect, some embodiments include a method executed by a computing system (e.g., <b>102</b>) that includes a processor (e.g., <b>104</b>) and memory (e.g., <b>106</b>). The method includes obtaining computer-readable text (e.g., <b>114</b>, <b>302</b>) that includes an identifier for an entity and at least one additional word. The method further includes computing, by way of an encoder (e.g., <b>120</b>), relevance scores for entries for entities in a computer-implemented knowledge graph (e.g., <b>110</b>, <b>200</b>) based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The method additionally includes determining whether the identifier for the entity is an acronym or a non-acronym. The method also includes identifying an entry for the entity in the knowledge graph based upon the relevance scores and whether the identifier for the entity is the acronym or the non-acronym. The method further includes generating a link in the text between the identifier for the entity and the entry for the entity in the knowledge graph, where data (e.g., <b>704</b>) from the entry for the entity in the knowledge graph is presented to a user (e.g., <b>606</b>) upon the link being selected.</p><p id="p-0086" num="0082">(D2) In some embodiments of the method of D1, the at least one additional word includes a first word that occurs before the identifier for the entity in the text and a second word that occurs after the identifier for the entity in the text. Computing a relevance score for the entry for the entity in the knowledge graph includes generating a concatenation of the first word, the identifier for the entity, the second word, a title of the entity in the knowledge graph, a description of the entity in the knowledge graph, and a plurality of tokens, generating a vectorized representation of the text and the entry for the entity based upon the concatenation, and reducing the vectorized representation to a scalar value, where the relevance score is the scalar value.</p><p id="p-0087" num="0083">(D3) In some embodiments of any of the methods of D1-D2, a relevance score of the entry is indicative of a contextual similarity between the text and the entry for the entity in the knowledge graph.</p><p id="p-0088" num="0084">(D4) In some embodiments of any of the methods of D1-D3, the encoder is a cross-encoder (e.g., <b>400</b>).</p><p id="p-0089" num="0085">(D5) In some embodiments of any of the methods of D1-D4, the text is from a web page.</p><p id="p-0090" num="0086">(D6) In some embodiments of any of the methods of D1-D5, identifying the entry for the entity in the knowledge graph includes assigning ranks to the entries for the entities based upon the relevance scores and selecting the entry for the entity based upon the entry for the entity being assigned a highest rank amongst the ranks assigned to the entries.</p><p id="p-0091" num="0087">(D7) In some embodiments of any of the methods of D1-D6, identifying the entry for the entity in the knowledge graph includes when the identifier for the entity in the text is the acronym, comparing a relevance score for the entry for the entity to a first threshold score, where the link is generated between the identifier for the entity in the text and the entry for the entity in the knowledge graph when the relevance score for the entry is greater than or equal to the first threshold score. Identifying the entry for the entity in the knowledge graph further includes when the identifier for the entity in the text is the non-acronym, comparing the relevance score for the entry for the entity to a second threshold score, where the link is generated between the identifier for the entity in the text and the entry for the entity in the knowledge graph when the relevance score for the entry is greater than or equal to the second threshold score.</p><p id="p-0092" num="0088">(D8) In some embodiments of any of the methods of D1-D7, determining whether the identifier for the entity is the acronym or the non-acronym includes determining whether each character in the identifier for the entity is capitalized, when each character in the identifier for the entity is capitalized, determining that the identifier for the entity is the acronym, and when each character in the identifier for the entity is not capitalized, determining that the identifier for the entity is the non-acronym.</p><p id="p-0093" num="0089">(D9) In some embodiments of any of the methods of D1-D8, the method further includes prior to computing the relevance scores and subsequent to obtaining the text, executing a search over the knowledge graph based upon the identifier for the entity. The method also includes identifying the entries for the entities based upon search results for the search.</p><p id="p-0094" num="0090">(D10) In some embodiments of any of the methods of D1-D9, the link in the text between the identifier for the entity and the entry for the entity in the knowledge graph is generated only when a relevance score for the entry is greater than or equal to a threshold value, where the entity is not referenced in the knowledge graph when the relevance score is less than the threshold value.</p><p id="p-0095" num="0091">(D11) In some embodiments of any of the methods of D1-D10, the identifier for the entity in the text is a name of the entity, where the knowledge graph includes a second entry for a second entity, and where the entity and the second entity share the name.</p><p id="p-0096" num="0092">(E1) In another aspect, some embodiments include a computing system (e.g., <b>102</b>) including a processor (e.g., <b>104</b>) and memory (e.g., <b>106</b>). The memory stores instructions that, when executed by the processor, cause the processor to perform any of the methods described herein (e.g., any of D1-D11).</p><p id="p-0097" num="0093">(F1) In yet another aspect, some embodiments include a non-transitory computer-readable storage medium that includes instructions that, when executed by a processor (e.g., <b>104</b>), cause the processor to perform any of the methods described herein (e.g., any of D1-D11).</p><p id="p-0098" num="0094">(G1) In another aspect, some embodiments include a method performed by a computing system (e.g., <b>102</b>) that includes a processor (e.g., <b>104</b>). The method includes obtaining computer-readable text (e.g., <b>114</b>, <b>302</b>) comprising an identifier for an entity and at least one additional word. The method further includes computing, by way of an encoder (e.g., <b>120</b>), relevance scores for entries for entities in a computer-implemented knowledge graph (e.g., <b>110</b>, <b>200</b>) based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph. The method additionally includes assigning ranks to the entries for the entities based upon the relevance scores. The method also includes determining whether the identifier for the entity in the text is an acronym or a non-acronym. When the identifier for the entity is the acronym, the method includes comparing a relevance score for an entry in the knowledge graph having a highest rank to a first threshold score and when the relevance score is greater than or equal to the first threshold score, generating a link in the text between the identifier for the entity and the entry in the knowledge graph. When the identifier for the entity is the non-acronym, the method includes comparing the relevance score for the entry in the knowledge graph having the highest rank to a second threshold score and when the score is greater than or equal to the second threshold score, generating the link in the text between the identifier for the entity and the entry in the knowledge graph. Data (e.g., <b>704</b>) from the entry in the knowledge graph is presented to a user upon the link being selected.</p><p id="p-0099" num="0095">(H1) In another aspect, some embodiments include a computing system (e.g., <b>102</b>) including a processor (e.g., <b>104</b>) and memory (e.g., <b>106</b>). The memory stores instructions that, when executed by the processor, cause the processor to perform any of the methods described herein (e.g., G1).</p><p id="p-0100" num="0096">(I1) In yet another aspect, some embodiments include a non-transitory computer-readable storage medium that includes instructions that, when executed by a processor (e.g., <b>104</b>) of a computing system (e.g., <b>102</b>), cause the processor to perform any of the methods described herein (e.g., G1).</p><p id="p-0101" num="0097">As used herein, the term &#x201c;or&#x201d; is intended to mean an inclusive &#x201c;or&#x201d; rather than an exclusive &#x201c;or.&#x201d; That is, unless specified otherwise, or clear from the context, the phrase &#x201c;X employs A or B&#x201d; is intended to mean any of the natural inclusive permutations. That is, the phrase &#x201c;X employs A or B&#x201d; is satisfied by any of the following instances: X employs A; X employs B; or X employs both A and B. In addition, the articles &#x201c;a&#x201d; and &#x201c;an&#x201d; as used in this application and the appended claims should generally be construed to mean &#x201c;one or more&#x201d; unless specified otherwise or clear from the context to be directed to a singular form.</p><p id="p-0102" num="0098">Further, as used herein, the terms &#x201c;component&#x201d; and &#x201c;system&#x201d; are intended to encompass computer-readable data storage that is configured with computer-executable instructions that cause certain functionality to be performed when executed by a processor. The computer-executable instructions may include a routine, a function, or the like. It is also to be understood that a component or system may be localized on a single device or distributed across several devices. Further, as used herein, the term &#x201c;exemplary&#x201d; is intended to mean serving as an illustration or example of something, and is not intended to indicate a preference.</p><p id="p-0103" num="0099">What has been described above includes examples of one or more embodiments. It is, of course, not possible to describe every conceivable modification and alteration of the above devices or methodologies for purposes of describing the aforementioned aspects, but one of ordinary skill in the art can recognize that many further modifications and permutations of various aspects are possible. Accordingly, the described aspects are intended to embrace all such alterations, modifications, and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term &#x201c;includes&#x201d; is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term &#x201c;comprising&#x201d; as &#x201c;comprising&#x201d; is interpreted when employed as a transitional word in a claim.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computing system, comprising:<claim-text>a processor; and</claim-text><claim-text>memory storing instructions that, when executed by the processor, cause the processor to perform acts comprising:<claim-text>obtaining computer-readable text comprising an identifier for an entity and an additional word;</claim-text><claim-text>determining, by way of an encoder, relevance scores for entries for entities in a computer-implemented knowledge graph based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph;</claim-text><claim-text>identifying an entry for the entity in the knowledge graph based upon the relevance scores; and</claim-text><claim-text>generating a link in the text between the identifier for the entity and the entry for the entity in the knowledge graph, wherein data from the entry for the entity in the knowledge graph is presented to a user upon the link being selected.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the text is included in a document, an e-mail, a real-time message, or a web page accessed by way of a client computing device with which the computing system is in network communication.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer-implemented knowledge graph is a private knowledge graph pertaining to an enterprise.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computing system of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the encoder is trained based upon a public knowledge graph.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the acts further comprising:<claim-text>obtaining second computer-readable text comprising a second identifier for a second entity;</claim-text><claim-text>determining, by way of the encoder, a second set of relevance scores for the entries in the computer-implemented knowledge graph based upon the second text;</claim-text><claim-text>responsive to determining that a relevance score for a second entry in the entries exceeds a threshold, generating, in the second text, a second link between the second identifier for the second entity and the second entry in the entries; and</claim-text><claim-text>responsive to determining that none of the second set of relevance scores exceeds the threshold, failing to generate the second link.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computing system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, the acts further comprising determining whether the second identifier is an acronym or a non-acronym, wherein when the second identifier is determined to be an acronym the threshold is a first threshold, and wherein when the second identifier is determined to be a non-acronym the threshold is a second threshold, wherein the first threshold and the second threshold are different.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the entry for the entity in the knowledge graph comprises:<claim-text>when the identifier for the entity in the text is an acronym, comparing a relevance score for the entry for the entity to a first threshold score, wherein the link is generated between the identifier for the entity in the text and the entry for the entity in the knowledge graph when the relevance score for the entry is greater than or equal to the first threshold score; and</claim-text><claim-text>when the identifier for the entity in the text is the non-acronym, comparing the relevance score for the entry for the entity to a second threshold score, wherein the link is generated between the identifier for the entity in the text and the entry for the entity in the knowledge graph when the relevance score for the entry is greater than or equal to the second threshold score.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the acts further comprising:<claim-text>receiving a query from a client device, the query issued by the client device responsive to the link being selected, the query comprising the identifier for the entity;</claim-text><claim-text>responsive to receipt of the query, providing data included in the entry for the entity to the client device, whereupon the client device displays the data on a display of the client device.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computing system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the client device displays the data on the display of the client device concurrently with the text.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computing system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the data includes alternate identifiers for the entity.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computing system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the data includes identifiers of persons indicated in the knowledge graph as having a relationship to the entity.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computing system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the data includes links to websites indicated in the knowledge graph as having a relationship to the entity.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the encoder is a bi-encoder, wherein bi-encoder is configured to perform second acts comprising:<claim-text>generating a first embedding pertaining to the text;</claim-text><claim-text>generating a second embedding pertaining to the entry; and</claim-text><claim-text>computing a similarity metric between the first embedding and the second embedding, wherein a relevance score for the entry is based upon the similarity metric.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computing system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the encoder is a cross-encoder, wherein the cross-encoder is configured to perform second acts comprising:<claim-text>generating a vectorized representation of the text and the entry, wherein a relevance score for the entry is based upon the vectorized representation.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computing system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, the second acts further comprising:<claim-text>generating, based upon the vectorized representation and by way of a pooling layer, a reduced-dimensionality vectorized representation of the text and the entry, wherein the relevance score for the entry is based upon the reduced-dimensionality vectorized representation.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computing system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the second acts further comprising:<claim-text>generating a scalar value based upon the reduced-dimensionality vectorized representation by way of a linear layer, wherein the scalar value is the relevance score for the entry.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A method, comprising:<claim-text>obtaining computer-readable text comprising an identifier for an entity and an additional word;</claim-text><claim-text>determining, by way of an encoder, relevance scores for entries for entities in a computer-implemented knowledge graph based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph;</claim-text><claim-text>identifying an entry for the entity in the knowledge graph based upon the relevance scores; and</claim-text><claim-text>generating a link in the text between the identifier for the entity and the entry for the entity in the knowledge graph, wherein data from the entry for the entity in the knowledge graph is presented to a user upon the link being selected.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>receiving, from a client computing device on which the text is displayed and in response to the link being selected by a user of the client computing device, an identifier for the entry;</claim-text><claim-text>responsive to receipt of the identifier for the entry in the knowledge graph, transmitting the data from the entry to the client computing device, whereupon the client computing device displays the data from the entry to the user.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A client computing device comprising:<claim-text>a display;</claim-text><claim-text>a processor; and</claim-text><claim-text>memory that stores instructions that, when executed by the processor, cause the processor to perform acts comprising:<claim-text>causing computer-readable text that comprises an identifier for an entity and an additional word to be provided to a server computing device that maintains a computer-implemented knowledge graph, wherein responsive to receipt of the text the server computing device determines relevance scores for entries for entities in the knowledge graph based upon the text, titles for the entities in the knowledge graph, and descriptions of the entities in the knowledge graph and generates a link in the text between the identifier for the entity and an entry in the knowledge graph based upon the relevance scores;</claim-text><claim-text>displaying the text on the display, the text including the link for the identifier for the entity;</claim-text><claim-text>responsive to the link being selected by a user of the client computing device, transmitting a query that comprises an identifier for the entry in the knowledge graph to the server computing device;</claim-text><claim-text>receiving, from the server computing device and in response to the query, data from the entry in the knowledge graph; and</claim-text><claim-text>displaying the data from the entry on the display.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The client computing device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the data from the entry is displayed on the display concurrently with the text.</claim-text></claim></claims></us-patent-application>