<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007016A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007016</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17364168</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>29</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>29</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1416</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1425</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>2804</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>1097</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">PROXY SERVICES FOR THE SECURE UPLOAD OF FILE SYSTEM TREE STRUCTURES</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>MICROSOFT TECHNOLOGY LICENSING, LLC</orgname><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>AZULAY</last-name><first-name>Itamar</first-name><address><city>Mishmar Ayyalon</city><country>IL</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>LEWIN</last-name><first-name>Guy</first-name><address><city>New York</city><state>NY</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LIFSHITS</last-name><first-name>Sharon</first-name><address><city>Tel Aviv</city><country>IL</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The disclosure is directed towards proxy services for the secure uploading of file-system tree structures. A method includes receiving, at a web security service, an indication that client device to upload content to a storage cloud provider. The proxy service performs a security scan of the content while the content is stored on the client device. A security and/or a privacy concern is identified in the content stored on the client device. A security and/or privacy mitigation action is performed in response to identifying the security and/or privacy concern.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="234.95mm" wi="158.16mm" file="US20230007016A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="187.96mm" wi="139.45mm" orientation="landscape" file="US20230007016A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="242.32mm" wi="186.27mm" orientation="landscape" file="US20230007016A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="258.15mm" wi="164.85mm" file="US20230007016A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="227.84mm" wi="126.41mm" file="US20230007016A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="217.17mm" wi="126.32mm" file="US20230007016A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="231.73mm" wi="134.20mm" file="US20230007016A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="199.81mm" wi="146.30mm" file="US20230007016A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Many file systems structure or organize files within hierarchical tree and/or sub-tree structures. The root node of a tree (or sub-tree) structure is often referred to as a root-directory and the sub-nodes of the root-directory may be referred to as sub-directories. That is, each node of a tree corresponds to a directory (or a sub-directory of the root directory). One or more files may be associated with each node in the tree or sub-tree. When a file is associated with a node, the file is said to be located within the directory (or sub-directory) that corresponds to the node. This tree of directories may be a convenient &#x201c;virtual&#x201d; model of the file system's actual or physical structure. The details of the actual structure of most file systems may be significantly more complicated, where data associated with each file may be distributed across a plurality of data blocks. The data blocks for any given file may be distributed across non-consecutive regions of a magnetic or solid-state storage disk. That is, data for files may be physically segmented.</p><p id="p-0003" num="0002">Nevertheless, ever since the early days of the internet, web browsers have enabled users to &#x201c;upload&#x201d; a file to a web service, via the user employing a user interface (UI) of the browser to select a file (located within a directory of their file system). Modern web browsers have advanced to the point where a user may upload an entire tree or sub-tree structure of directories (including all the files located within the root directory and all of the files located in each of the root-directory's sub-folders) via one or more selection mechanisms (e.g., a &#x201c;drag and drop&#x201d; mechanism). Being enabled to upload such hierarchical structures of directories/files presents numerous security issues for both the uploading system and a system that receives the uploaded directory tree.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0004" num="0003">Various aspects of the technology described herein are generally directed to systems, methods, and computer storage media, for among other things, employing proxy services for the secure uploading of file-system tree structures. One exemplary, but non-limiting, method may include receiving, at a proxy service, an indication that a client device is to upload content to a storage cloud provider. Through the proxy service, a security scan of the content may be performed. In some embodiments, the content is scanned while the content is stored on the client device. In other embodiments, the content may be provided to the proxy service, and scanned at the proxy service. A security and/or a privacy concern may be identified within the content on the client device. A security and/or privacy mitigation action may be taken in response to identifying the security and/or privacy concern.</p><p id="p-0005" num="0004">In some embodiments, the security and/or privacy scan includes scanning the content and additional content that is stored in a storage bin (e.g., a file-system tree structure) with the content. The storage bin may be a tree structure that includes a hierarchy of one or more file folders (e.g., file directories and/or sub-directories). In some embodiments, the security and/or privacy concern may not be in the content. For example, the security and/or privacy concern may be in the additional content.</p><p id="p-0006" num="0005">In at least one embodiment, the method further includes communicating the request to the storage cloud provider. A storage cloud provider's website code for a content selection interface may be received. A security service code may be injected into the storage cloud provider's website code, by the proxy service, to create security-injected website code. The security-injected website code may be communicated to the client device. In some embodiments, the security and/or privacy mitigation action may include preventing the content from being uploaded to the storage cloud provider. In other embodiments, the security and/or privacy mitigation action may include providing an indication to the storage cloud provider that the client device poses a security threat.</p><p id="p-0007" num="0006">Some embodiments include a system that includes at least one hardware processor and one or more computer-readable media having executable instructions embodied thereon. When the instructions are executed by the at least one hardware processor, the at least one hardware processor may perform operations that are included in one or more methods. At least one method includes transmitting, from a client device, a request addressed to a storage cloud provider. A security-injected client code for a storage cloud provider's interface may be received at the client device. The security-injected client code may be received from a proxy service. The storage cloud provider's interface may be provided for display (e.g., at the client device). A selection designating a content for upload to the storage cloud provider may be received (e.g., at the client device), through the interface. A security and/or privacy-related mitigation message may be received (e.g., at the client device) from the proxy service.</p><p id="p-0008" num="0007">In some embodiments, the security and/or privacy mitigation message indicates that a security and/or a privacy concern was found in a file folder in which the content is stored. The security and/or privacy concern may not be in the content. The method may further include uploading the content to the storage cloud provider. The method may further include the security-injected client code performing a security scan of the content. The method may further include the security-injected client code performing a security scan of a storage bin in which the content is stored. The security-injected client code may be wrapped.</p><p id="p-0009" num="0008">Some embodiments include computer storage media storing computer-useable instructions. When the instructions are used by at least one computing device, cause the at least one computing device to perform one or more methods. One such example (and non-limiting) method includes injecting, by a proxy service, a security service code into a storage cloud provider's client interface code to create a security-injected client code. The security-injected client code may be communicated to a client device. A request from the client device may be received at the client device. The request may be a request to upload one or more files to a storage cloud provider. A security scan of the content may be performed through the proxy service. The scan may be performed while the content is stored on the client device. In other embodiments, the scan may be performed at the proxy service (e.g., the content may be provided to the security service). A security and/or privacy-based rule violation may be identified and/or detected in content on the client device (or at the proxy service). A security and/or privacy mitigation action may be taken in response to identifying the security concern.</p><p id="p-0010" num="0009">In some embodiments, the security scan may be performed through the security-injected client code. The security scan may include scanning the file and additional content that is stored in a folder with the file. The additional content may be in subfolders within the folder. The security and/or privacy rule violation may be information in the file that violates a privacy policy. The security and/or privacy mitigation action may include preventing the content from being uploaded to the storage cloud provider.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010">The technology described herein is described in detail below with reference to the attached drawing figures, wherein:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a block diagram showing an example operating environment in which some embodiments of the present disclosure may be employed;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a block diagram showing an example web security system in which some embodiments of the present disclosure may be employed;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. <b>3</b>-<b>6</b></figref> provide flow diagrams that illustrate various methods for employing proxy service to secure an upload of a file-system tree structure; and</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of an exemplary computing device for use in implementing aspects of the technology described herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><heading id="h-0005" level="2">Overview of Technical Problems, Technical Solutions, and Technological Improvements</heading><p id="p-0016" num="0015">As used herein, the term &#x201c;set&#x201d; may be employed to refer to an ordered (i.e., sequential) or an unordered (i.e., non-sequential) collection of objects (or elements), such as but not limited to machines (e.g., computer devices), physical and/or logical addresses, graph nodes, graph edges, and the like. A set may include N elements, where N is any non-negative integer. That is, a set may include 0, 1, 2, 3, . . . N objects and/or elements, where N is a positive integer with no upper bound. Therefore, as used herein, a set may be a null set (i.e., an empty set), that includes no elements (e.g., N=0 for the null set). A set may include only a single element. In other embodiments, a set may include a number of elements that is significantly greater than one, two, three, or billions of elements. A set may be an infinite set or a finite set. In some embodiments, &#x201c;a set of objects&#x201d; that is not a null set of the objects may be interchangeably referred to as either &#x201c;one or more objects&#x201d; or &#x201c;at least one object.&#x201d; A set of objects that includes at least two of the objects may be referred to as &#x201c;a plurality of objects.&#x201d;</p><p id="p-0017" num="0016">As used herein, the term &#x201c;subset,&#x201d; is a set that is included in another set. A subset may be, but is not required to be, a proper or strict subset of the other set that the subset is included within. That is, if set B is a subset of set A, then in some embodiments, set B is a proper or strict subset of set A. In other embodiments, set B is a subset of set A, but not a proper or a strict subset of set A. For example, set A and set B may be equal sets, and set B may be referred to as a subset of set A. In such embodiments, set A may also be referred to as a subset of set B. Two sets may be disjoint sets if the intersection between the two sets is the null set.</p><p id="p-0018" num="0017">The various embodiments are directed to employing a proxy session to secure the uploading of a file system's tree structure or a sub-tree structure of a file system. Because a sub-tree structure is inherently a tree structure, as used throughout, a sub-tree structure may be referred to as a tree-structure. Each node in a tree may correspond to a directory and/or a sub-directory. Each directory and/or subdirectory may include one or more data files. Some directories need not include a file and/or a sub-directory. Accordingly, such tree structures may be hierarchical in nature and include a root directory logically located at the top of the tree's hierarchical structure. That is, the root directory corresponds to the tree's root node. Some tree structures may include one or more sub-directories logically positioned below the root directory in the tree's hierarchical structure. One or more of the sub-directories may include one or more other sub-directories logically positioned below the sub-directory in the hierarchical structure, resulting in a cascade of directories. The tree structure may terminate in one or more sub-directories (e.g., corresponding to leaf nodes of the tree). As used throughout, the terms &#x201c;directory&#x201d; and &#x201c;folder&#x201d; may be used interchangeably, as well as the terms &#x201c;sub-directory&#x201d; and &#x201c;sub-folder.&#x201d;</p><p id="p-0019" num="0018">In the embodiments, a web security service may be deployed in the context of a user employing a web browser to upload a tree structure of data files. For instance, a user may employ a web browser to select a tree structure of their device's file system. The web security service may serve as a proxy service that scans at least portions of (if not the entirety of) the data logically located within the tree-structure. For example, each file stored within the hierarchy of directories and sub-directories of the tree-structure may be scanned for potential security threats and potentially sensitive information. If a potential security threat and/or potentially sensitive information is detected, one or more interventions may be employed. Such one or more interventions may include preventing the upload from occurring. Other interventions may include deleting sensitive information and/or insecure portions of the data (e.g., portions of code that may be viral in nature) from the data that is ultimately uploaded. In at least one embodiment, an alert may be provided to a user when a security-related or a sensitivity-related issue with the data to be uploaded is detected. In order to quarantine such issues, the scanning of the data logically located within the tree may be performed within a sandbox of the web browser.</p><p id="p-0020" num="0019">In one non-limiting embodiment, a user may employ a web browser (e.g., a browser) to select a tree structure of a file system to which they have access. The selection of the tree structure may be with the intent to upload all data logically located in the tree structure (e.g., all directories, sub-directories, and files logically located within the directories and sub-directories) to a web server. Prior to initiating the uploading, the web security service (WSS) acting as a proxy service may scan all such data. In at least one embodiment, as a proxy service, the WSS may detect an intention to upload data to a target destination (e.g., a web server). For example, the WSS may intercept one or more upload-related data packets intended for the upload's target destination. In response, the WSS may at least temporarily pause the uploading of data, via one or more application programming interface (API) function calls to the browser. The WSS may gain access to at least a portion of the file system that includes the tree-structure. For instance, when a user selects the tree-structure via their browser, the browser may have access to at least that portion of the file system. The WSS may gain access to that portion via one or more API calls to the web browser. The WSS may scan the associated data within a sandbox of the web browser. If no security and/or sensitivity issues are detected within the scanned data, the WSS may resume the upload to the target destination via one or more API calls. If one or more security issues are detected, the WSS may perform one or more interventions through one or more API calls. For example, the WSS may terminate the upload process, delete portions of data associated with the detected issues from the upload process, and/or provide the user (and/or the target destination) with one or more warnings and/or alerts.</p><p id="p-0021" num="0020">In other embodiments, the scanning of the data may be performed at the WSS. For example, again as a proxy service, the WSS may intercept the uploading of the tree structure (and its data). The WSS may scan the data one or more devices that implement the WSS (e.g., server devices remote from the user's client device). For example, the WSS may implement a sandbox at its implementing server device. The data may be scanned within such a sandbox. If no issues are flagged during the scanning, the WSS may relay the uploaded content to the target destination (e.g., the intended web server). If one or more issues are detected within the uploaded data, then the WSS may perform one or more interventions.</p><heading id="h-0006" level="2">Overview of Environments for the Secure Upload of File-System Tree Structures</heading><p id="p-0022" num="0021">Aspects of the technical solution can be described by way of examples and with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref> and additional illustrations below. <figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a block diagram showing an example operating environment <b>100</b> in which some embodiments of the present disclosure may be employed. It should be understood that this and other arrangements described herein are set forth only as examples. Other arrangements and elements (e.g., machines, interfaces, functions, orders, and groupings of functions) can be used in addition to or instead of those shown, and some elements may be omitted altogether for the sake of clarity. Further, many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location. Various functions described herein as being performed by an entity may be carried out by hardware, firmware, and/or software. For instance, some functions may be carried out by a processor executing instructions stored in memory.</p><p id="p-0023" num="0022">Among other components not shown, example operating environment <b>100</b> includes a number of user devices, such as user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n</i>; a number of data sources, such as data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n</i>; server <b>106</b>; sensors <b>103</b><i>a </i>and <b>107</b>; and communication network <b>110</b>. It should be understood that environment <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is an example of one suitable operating environment. Each of the components shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented via any type of computing device, such as computing device <b>700</b> described in connection to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, for example. These components may communicate with each other via network <b>110</b>, which may include, without limitation, a local area network (LAN) and/or a wide area networks (WAN). In exemplary implementations, network <b>110</b> comprises the Internet and/or a cellular network, amongst any of a variety of possible public and/or private networks.</p><p id="p-0024" num="0023">It should be understood that any number of user devices, servers, and data sources may be employed within operating environment <b>100</b> within the scope of the present disclosure. Each may comprise a single device or multiple devices cooperating in a distributed environment. For instance, server <b>106</b> may be provided via multiple devices arranged in a distributed environment that collectively provide the functionality described herein. Additionally, other components not shown may also be included within the distributed environment.</p><p id="p-0025" num="0024">User devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>can be client devices on the client-side of operating environment <b>100</b>, while server <b>106</b> can be on the server-side of operating environment <b>100</b>. Server <b>106</b> can comprise server-side software designed to work in conjunction with client-side software on user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>to implement any combination of the features and functionalities discussed in the present disclosure. This division of operating environment <b>100</b> is provided to illustrate one example of a suitable environment, and there is no requirement for each implementation that any combination of server <b>106</b> and user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>remain as separate entities.</p><p id="p-0026" num="0025">User devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>may comprise any type of computing device capable of use by a user. For example, in one embodiment, user devices <b>102</b><i>a </i>through <b>102</b><i>n </i>may be the type of computing device described in relation to <figref idref="DRAWINGS">FIG. <b>8</b></figref> herein. By way of example and not limitation, a user device may be embodied as a personal computer (PC), a laptop computer, a mobile or mobile device, a smartphone, a tablet computer, a smart watch, a wearable computer, a personal digital assistant (PDA), a music player or an MP3 player, a global positioning system (GPS) or device, a video player, a handheld communications device, a gaming device or system, an entertainment system, a vehicle computer system, an embedded system controller, a camera, a remote control, a bar code scanner, a computerized measuring device, an appliance, a consumer electronic device, a workstation, or any combination of these delineated devices, or any other suitable computer device.</p><p id="p-0027" num="0026">Data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n </i>may comprise data sources and/or data systems, which are configured to make data available to any of the various constituents of operating environment <b>100</b>; data structures <b>120</b>, <b>140</b>, and <b>160</b> described in connection to system <b>200</b> described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n </i>may be discrete from user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>and server <b>106</b> or may be incorporated and/or integrated into at least one of those components. In one embodiment, of data sources <b>104</b><i>a </i>through <b>104</b><i>n </i>comprise sensors <b>103</b><i>a</i>, <b>107</b>, which may be integrated into or associated with the user device(s) <b>102</b><i>a</i>, <b>102</b><i>b</i>, or <b>102</b><i>n </i>or server <b>106</b>. Examples of sensed user data made available by data sources <b>104</b><i>a </i>through <b>104</b><i>n </i>may include events.</p><p id="p-0028" num="0027">Operating environment <b>100</b> can be utilized to implement a component of the components of an enhanced web security system <b>200</b>, described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, including components for proxy services for the secure upload of file-system tree structures. Operating environment <b>100</b> also can be utilized for implementing aspects of process flows <b>300</b>-<b>600</b> described in conjunction with <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>6</b></figref>.</p><heading id="h-0007" level="2">Overview of Example of Proxy Services for the Secure Upload of File-System Tree Structures</heading><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a block diagram showing an example web security system <b>200</b> in which some embodiments of the present disclosure may be employed. System <b>200</b> may be implemented via one or more components of environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. System <b>200</b> may include web security service (WSS) <b>240</b> implemented by one or more computing devices (e.g., web security server computing device <b>202</b>). System <b>200</b> may additionally include a client computing device <b>206</b> and a web-server computing device <b>204</b>. In some non-limiting embodiments, system <b>200</b> may include a client proxy server <b>208</b>. The web security server computing device <b>202</b>, the web-server computing device <b>204</b>, the client computing device <b>206</b>, and/or the client proxy server <b>208</b> may be communicatively coupled via communication network <b>110</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0030" num="0029">The web-server computing device <b>204</b> may host or otherwise implement a web application (e.g., a cloud-computing application, a web page, and/or a web application). The WSS <b>240</b> may provide web (or cloud) security proxy services to the client computing device <b>206</b>. In embodiments where the application is a cloud application, rather than a web application, the web security server computing device <b>202</b> may be a cloud security server computing device and the WSS may be a cloud security service. Whether the application is a web-based application or a cloud-based, the WSS <b>240</b> may provide security services for the secure upload of file-system tree structures, from the client computing device <b>206</b> to the web-server computing device <b>204</b>.</p><p id="p-0031" num="0030">The client computing device <b>206</b> may have access to a file system <b>220</b>. In some embodiments, the file system <b>220</b> is implemented locally on client computing device <b>206</b>. For example, the file system may manage content stored on a storage device that is local to the client computing device <b>206</b>. In other embodiments, the file system <b>220</b> is remote to the client computing device <b>206</b>. For instance, the file system <b>220</b> may be implemented by another computer device, and the file system <b>220</b> manages content stored on a storage device that is remote to the client computing device <b>206</b>, e.g., a remotely mounted storage device. The file system <b>220</b> may include and/or manage a hierarchical tree structure <b>222</b>. The tree structure <b>222</b> may include a hierarchy (e.g., a tree) of cascading file directories and filed sub-directories, e.g., folders and sub-folders. One of more of the directories and/or sub-directories may include one or more files. Thus, the tree structure <b>222</b> may include a hierarchical set of files. The files may encode content (e.g., data and/or information).</p><p id="p-0032" num="0031">To interact with a cloud-based application, a web-based application, and/or a web page implemented by web-server computing device <b>204</b>, a user may employ the client computing device <b>206</b>. More specifically, the user may employ web browser <b>210</b> implemented by the client computing device <b>206</b> (or another device that client computing device may access via communication network <b>110</b>) to interact with any application or web page implemented by web-server computing device <b>204</b>. In some embodiments, the web browser <b>210</b> may include an uploader agent <b>212</b>. The uploader agent <b>212</b> may enable the user to select at least a portion of the tree structure <b>222</b> to upload to the web-server computing device. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the user has selected sub-tree structure <b>224</b> to upload to web-server computing device <b>204</b>. Uploader agent <b>212</b> is enabled to initiate and perform an upload session with the web-server computing device <b>204</b>. The entirety of the contents of the sub-tree structure <b>224</b> may be uploaded to the web-server computing device <b>204</b> in the upload session. The uploaded contents may include all the directories, sub-directories, and files included in the sub-tree structure <b>224</b>.</p><p id="p-0033" num="0032">In the various embodiments, the WSS <b>240</b> may act as a proxy service to manage the upload session. The client proxy server <b>208</b> may at least enable the WSS <b>240</b> to act as a proxy service to the client computing device <b>206</b>.</p><p id="p-0034" num="0033">The WSS may include a network module <b>242</b> to communicate with each of client proxy server <b>208</b>, client computing device <b>206</b>, and web-server computing device <b>204</b>. The WSS <b>240</b> may additionally include a data security scanner (DSS) <b>244</b>. The DSS <b>244</b> is generally responsible for scanning the contents (e.g., data and/or information) being uploaded from client computing device <b>206</b> to web-server computing device <b>204</b>. More specifically, the WSS <b>240</b> may be deployed in the context of the user employing the web browser <b>210</b> to upload the sub-tree structure that includes a plurality of directories and data files. The WSS <b>240</b> acts as a proxy service that scans at least portions of (if not the entirety of) the data logically located within the sub-tree structure <b>224</b>. For example, each file stored within the hierarchy of directories and sub-directories of the sub-tree structure <b>224</b> may be scanned for potential security threats and potentially sensitive information. If a potential security threat and/or potentially sensitive information is detected, one or more interventions may be employed. Such one or more interventions may include preventing the upload from occurring. Other interventions may include deleting sensitive information and/or insecure portions of the data (e.g., portions of code that may be viral in nature) from the data that is ultimately uploaded. In at least one embodiment, an alert may be provided to a user when a security-related or a sensitivity-related issue with the data to be uploaded is detected. In order to quarantine such issues, the scanning of the data logically located within the sub-tree structure <b>224</b> may be performed within a sandbox of the web browser <b>210</b>.</p><p id="p-0035" num="0034">As noted above, a user may employ the operations of the uploader agent <b>212</b> to select the sub-tree <b>224</b> from the tree structure <b>222</b>. The selection of the sub-tree structure <b>224</b> may be with the intents to upload all data logically located in the sub-tree structure <b>224</b> (e.g., all directories, sub-directories, and files logically located within the directories and sub-directories) to a web server. The WSS may receive an indication of an initiation of the upload session and then scan all such data prior to the data being uploaded to the web-server computing device <b>204</b>. In at least one embodiment, as a proxy service, the WSS <b>240</b> may detect an intention to upload data to a target destination (e.g., a web server). For example, the WSS <b>240</b> may intercept one or more packets indicating an initiation of an upload session (e.g., with a target destination of the web-server computing device <b>204</b>). In response, the WSS <b>240</b> may at least temporarily pause the uploading session, via one or more application programming interface (API) function calls to the browser <b>210</b>. The WSS <b>240</b> may gain access to at least a portion of the file system <b>220</b> that includes the sub-tree structure <b>224</b>. For instance, when a user selects the sub-tree structure <b>224</b> via browser <b>210</b>, the uploader agent <b>212</b> may gain access to at least the portion of the file system <b>220</b> that includes the sub-tree structure <b>224</b>. The DSS <b>244</b> may gain access to that portion of the file system <b>220</b> via one or more API call to the web browser <b>210</b>. The DSS <b>244</b> may scan the associated data within a sandbox of the web browser <b>210</b>. If no security and/or sensitivity issues are detected within the scanned data, the WSS <b>240</b> may resume the upload session and provide the sub-tree structure <b>224</b> (and its associated data) to the upload session's target destination (e.g., web-server computing device <b>204</b>) via one or more API calls. If one or more security (or data sensitivity) issues are detected, the WSS <b>240</b> may perform one or more interventions through one or more API calls. For example, the WSS <b>240</b> may terminate the upload session, delete portions of data associated with the detected issues from the upload process, and/or provide the user (and/or the target destination) with one or more warnings and/or alerts.</p><p id="p-0036" num="0035">In other embodiments, the scanning of the data may be performed at the WSS <b>240</b>. For example, again as a proxy service, the WSS <b>240</b> may intercept the uploading of the sub-tree structure <b>224</b> (and its data). The DSS <b>244</b> may scan the data (at one or more devices that implement the WSS, e.g., the web security server computing device <b>202</b>). For example, the DSS <b>244</b> may implement a sandbox at the web security server computing device <b>202</b>. The data may be scanned within such a sandbox. If no issues are flagged during the scanning, the network module <b>242</b> may relay the uploaded content to the target destination (e.g., the web-server computing device <b>204</b>). If one or more security and/or sensitivity issues are detected within the uploaded data, then the WSS <b>240</b> may perform one or more interventions.</p><heading id="h-0008" level="1">Example Methods for the Secure Upload of File-System Tree Structures</heading><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. <b>3</b>-<b>6</b></figref> provide flow diagrams that illustrate various methods (e.g., methods <b>300</b>-<b>600</b>) for proxy services that secure the uploading of file-system tree structures. Any of methods <b>300</b>-<b>600</b> may be implemented and/or performed by using any of the embodiments of a web security service (WSS), such as but not limited to WSS <b>240</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In embodiments, one or more computer storage media having computer-executable instructions embodied thereon that, when executed, by one or more processors can cause the one or more processors to perform the methods in the storage system. Generally, the flow diagrams of <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>6</b></figref> can be implemented using the architectures described above at least in conjunction with <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>2</b></figref>. For example, any suitable combination of portions of methods <b>300</b>-<b>600</b> may be implemented by WSS <b>240</b>.</p><p id="p-0038" num="0037">Turning to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, <figref idref="DRAWINGS">FIG. <b>3</b></figref> provides a flow diagram that illustrates a non-limiting method <b>300</b> for employing a proxy service to secure the uploading of a file-system tree structure, in accordance with the various embodiments. Initially, method <b>300</b> begins at block <b>302</b>, where an indication (e.g., an upload indication) that a client initiated an upload session with a remote device is received at a web security service (e.g., WSS <b>240</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The upload indication may include an indication of a file-system tree structure (e.g., sub-tree structure <b>224</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) that includes a hierarchical set of files encoding content (e.g., data and/or information). The files may include source code, content for documents, and the like. At block <b>304</b>, in response to receiving the upload indication, the WSS may be employed to at least temporarily suspend the upload session. At block <b>306</b>, the WSS may be employed to access the tree structure. For example, the WSS may issue an API call to a web browser employed by a user of the client to initiate the upload session. At block <b>308</b>, the WSS may be employed to scan the content (accessed at block <b>306</b>). For example, the DSS <b>244</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may scan the data included in the entirety of the files stored in each of the directories/sub-directories included in the tree structure for security issues and/or sensitivity (e.g., data privacy) issues. In some embodiments, the data scan may be directed towards scanning the data to identify portions of the content that include data and/or information that may be correlated with one or more computer and/or network security issues. For example, the content may be scanned via one or more virus scanning methods. The scanning may also be directed towards identifying portions of the content that include sensitive information (e.g., data that may be subject to data privacy issues). In order to quarantine such security and/or privacy issues, the scanning may be performed within a security sandbox of the web browser.</p><p id="p-0039" num="0038">At decision block <b>310</b>, it is determined whether the data scan performed at block <b>308</b> has identified and/or detected any security and/or data sensitivity issues. If any such issues have been detected during the data scan, method <b>300</b> may flow to block <b>312</b>. If no security and/or sensitivity/privacy issues are identified, the method <b>300</b> may flow to decision block <b>314</b>. At block <b>312</b>, in response to identifying one or more security and/or sensitivity issues, one or more interventions, directed at the identified issues, may be performed. Such one or more interventions may include preventing the upload from occurring. Other interventions may include deleting sensitive information and/or insecure portions of the data (e.g., portions of code that may be viral in nature) from the data that is ultimately uploaded. In at least one embodiment, an alert may be provided to a user when a security-related or a sensitivity-related issue with the data to be uploaded is detected. From block <b>312</b>, method <b>300</b> may flow to decision block <b>314</b>.</p><p id="p-0040" num="0039">At decision block <b>314</b>, it is determined whether the scanned content should be updated. If the scanned content is to be updated, method <b>300</b> may flow to block <b>316</b>. If the scanned content is not be updated, then method <b>300</b> may flow to decision block <b>318</b>. At block <b>316</b>, the WSS may update the content to be upload. For example, the WSS may delete portions of the content. In at least some embodiments, the WSS may inject data into the content. For example, the WSS may inject executable code, privacy statements, alerts, warnings, or any of such information into the content to be uploaded. In at least one embodiment, anti-virus software may be injected into the content. Method <b>300</b> may flow to decision block <b>318</b>. At decision block <b>318</b>, it is determined whether to resume the upload session. If the upload session is to be resumed, method <b>300</b> may flow to block <b>320</b>. If the upload session is not be resumed, method <b>300</b> may terminate. At block <b>320</b>, the WSS may be employed to resume the upload session. When the upload session is resumed, the tree structure may be uploaded to the intended target of the upload session. In embodiments where the content is updated, either through the performance of an intervention at block <b>312</b> or an update of the content at block <b>316</b>, the updated content may be uploaded to the intended target destination.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>4</b></figref> provides a flow diagram that illustrates a non-limiting method <b>400</b> for the secure uploading of a content, in accordance with the various embodiments. Initially, method <b>400</b> begins at block <b>402</b>, where a request from a client device is received at a proxy service (e.g., WSS <b>240</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The request may be a request to upload content to a remote device (e.g., a storage cloud provider). The remote device may be a web server (e.g., web-server computing device <b>204</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). In one embodiment, the web-server computing device <b>204</b> may implement cloud storage. Thus, an operator of the web-server computing device <b>204</b> may be a storage cloud provider. The content may be content included in a file-system tree-structure (e.g., sub-tree structure <b>224</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The request may have been received from, or at least originally transmitted by a client device (e.g., client computing device <b>206</b>).</p><p id="p-0042" num="0041">At block <b>404</b>, a security scan of the content is performed by the proxy service. In some embodiments, the DSS of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may scan the content for security and/or data sensitivity/privacy issues. In some embodiments, the content is scanned at the client device. In other embodiments, the content may be scanned at the proxy service (e.g., the content may be uploaded to and scanned at web security server computing device <b>202</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At block <b>406</b>, one or more security and/or privacy concerns may be identified with the content stored on the client device. At block <b>408</b>, one or more security mitigation actions may be performed in response to identifying the security and/or privacy concerns.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>5</b></figref> provides a flow diagram that illustrates a non-limiting method <b>500</b> for the secure uploading of a content, in accordance with the various embodiments. Initially, method <b>500</b> begins at block <b>502</b>, where a client device transmits a request addressed to a remote device (e.g., a device operated by a storage cloud provider). At block <b>504</b>, security-injected client code may be received at the client device. The security-injected code may be received from a proxy service for the client device. The security-injected (executable) code may be for user interface for the storage cloud provider. At block <b>506</b>, the storage cloud provider's interface may be provided for display. For example, the client device may display the interface. At block <b>508</b>, a selection designating content for upload to the storage cloud provider may be received through the interface. At block <b>510</b>, a security mitigation message may be received from the proxy service. For instance, the message may be received at the client device.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>6</b></figref> provides a flow diagram that illustrates a non-limiting method <b>600</b> for the secure uploading of a content, in accordance with the various embodiments. Initially, method <b>600</b> begins at block <b>602</b>, where a proxy service injects a security service code into a storage cloud provider's client device to create security-injected client code. At block <b>604</b>, the security-injected code is communicated to a client device. At block <b>606</b>, a request is received at the proxy service. The request may be from a client device. The request may be a request to upload a file-system tree structure (e.g., a tree that includes one or more directories and/or one or more files) to a storage cloud provider. Accordingly, the request may be a request to upload one or more files to the storage cloud provider. At block <b>608</b>, a security scan may be performed through the proxy service. The scan may be a scan of content included in the one or more files. The scan may be performed while the content is stored on the client device. In other embodiments, the one or more files may be uploaded from the client device to the proxy service. In such embodiments, the scan may be performed while the content is stored at the proxy service. At block <b>610</b>, a security and/or privacy rule violation may be identified and/or detected in the scanned content. At block <b>612</b>, a security mitigation action may be taken in response to identifying the security and/or privacy concern.</p><heading id="h-0009" level="2">Generalized Computing Device</heading><p id="p-0045" num="0044">With reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, computing device <b>700</b> includes a bus <b>710</b> that directly or indirectly couples the following devices: memory <b>712</b>, one or more processors <b>714</b>, one or more presentation components <b>716</b>, one or more input/output (I/O) ports <b>718</b>, one or more I/O components <b>720</b>, and an illustrative power supply <b>722</b>. Bus <b>710</b> represents what may be one or more busses (such as an address bus, data bus, or combination thereof). Although the various blocks of <figref idref="DRAWINGS">FIG. <b>7</b></figref> are shown with lines for the sake of clarity, in reality, these blocks represent logical, not necessarily actual, components. For example, one may consider a presentation component such as a display device to be an I/O component. Also, processors have memory. The inventors hereof recognize that such is the nature of the art and reiterate that the diagram of <figref idref="DRAWINGS">FIG. <b>7</b></figref> is merely illustrative of an exemplary computing device that can be used in connection with one or more embodiments of the present disclosure. Distinction is not made between such categories as &#x201c;workstation,&#x201d; &#x201c;server,&#x201d; &#x201c;laptop,&#x201d; &#x201c;handheld device,&#x201d; etc., as all are contemplated within the scope of <figref idref="DRAWINGS">FIG. <b>7</b></figref> and with reference to &#x201c;computing device.&#x201d;</p><p id="p-0046" num="0045">Computing device <b>700</b> typically includes a variety of computer-readable media. Computer-readable media can be any available media that can be accessed by computing device <b>700</b> and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVDs) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device <b>700</b>. Computer storage media does not comprise signals per se. Communication media typically embodies computer-readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media, such as a wired network or direct-wired connection, and wireless media, such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.</p><p id="p-0047" num="0046">Memory <b>712</b> includes computer storage media in the form of volatile and/or nonvolatile memory. The memory may be removable, non-removable, or a combination thereof. Exemplary hardware devices include solid-state memory, hard drives, optical-disc drives, etc. Computing device <b>700</b> includes one or more processors <b>714</b> that read data from various entities such as memory <b>712</b> or I/O components <b>720</b>. Presentation component(s) <b>716</b> presents data indications to a user or other device. Other examples of presentation components may include a display device, speaker, printing component, vibrating component, and the like.</p><p id="p-0048" num="0047">The I/O ports <b>718</b> allow computing device <b>700</b> to be logically coupled to other devices, including I/O components <b>720</b>, some of which may be built in. Illustrative components include a microphone, joystick, game pad, satellite dish, scanner, printer, wireless device, etc. The I/O components <b>720</b> may provide a natural user interface (NUI) that processes air gestures, voice, or other physiological inputs generated by a user. In some instances, inputs may be transmitted to an appropriate network element for further processing. An NUI may implement any combination of speech recognition, touch and stylus recognition, facial recognition, biometric recognition, gesture recognition both on screen and adjacent to the screen, air gestures, head and eye tracking, and touch recognition associated with displays on the computing device <b>700</b>. The computing device <b>700</b> may be equipped with depth cameras, such as stereoscopic camera systems, infrared camera systems, RGB camera systems, and combinations of these, for gesture detection and recognition. Additionally, the computing device <b>700</b> may be equipped with accelerometers or gyroscopes that enable detection of motion. The output of the accelerometers or gyroscopes may be provided to the display of the computing device <b>700</b> to render immersive augmented reality or virtual reality.</p><p id="p-0049" num="0048">Some embodiments of computing device <b>700</b> may include one or more radio(s) <b>724</b> (or similar wireless communication components). The radio <b>724</b> transmits and receives radio or wireless communications. The computing device <b>700</b> may be a wireless terminal adapted to receive communications and media over various wireless networks. Computing device <b>700</b> may communicate via wireless protocols, such as code division multiple access (&#x201c;CDMA&#x201d;), global system for mobiles (&#x201c;GSM&#x201d;), or time division multiple access (&#x201c;TDMA&#x201d;), as well as others, to communicate with other devices. The radio communications may be a short-range connection, a long-range connection, or a combination of both a short-range and a long-range wireless telecommunications connection. When we refer to &#x201c;short&#x201d; and &#x201c;long&#x201d; types of connections, we do not mean to refer to the spatial relation between two devices. Instead, we are generally referring to short range and long range as different categories, or types, of connections (i.e., a primary connection and a secondary connection). A short-range connection may include, by way of example and not limitation, a Wi-Fi&#xae; connection to a device (e.g., mobile hotspot) that provides access to a wireless communications network, such as a WLAN connection using the 802.11 protocol; a Bluetooth connection to another computing device is a second example of a short-range connection, or a near-field communication connection. A long-range connection may include a connection using, by way of example and not limitation, one or more of CDMA, GPRS, GSM, TDMA, and 802.16 protocols.</p><p id="p-0050" num="0049">Many different arrangements of the various components depicted, as well as components not shown, are possible without departing from the scope of the claims below. Embodiments of the disclosure have been described with the intent to be illustrative rather than restrictive. Alternative embodiments will become apparent to readers of this disclosure after and because of reading it. Alternative means of implementing the aforementioned can be completed without departing from the scope of the claims below. Certain features and sub-combinations are of utility and may be employed without reference to other features and sub-combinations and are contemplated within the scope of the claims.</p><p id="p-0051" num="0050">With reference to the technical solution environment described herein, embodiments described herein support the technical solution described herein. The components of the technical solution environment can be integrated components that include a hardware architecture and a software framework that support constraint computing and/or constraint querying functionality within a technical solution system. The hardware architecture refers to physical components and interrelationships thereof, and the software framework refers to software providing functionality that can be implemented with hardware embodied on a device.</p><p id="p-0052" num="0051">The end-to-end software-based system can operate within the system components to operate computer hardware to provide system functionality. At a low level, hardware processors execute instructions selected from a machine language (also referred to as machine code or native) instruction set for a given processor. The processor recognizes the native instructions and performs corresponding low-level functions relating, for example, to logic, control and memory operations. Low-level software written in machine code can provide more complex functionality to higher levels of software. As used herein, computer-executable instructions includes any software, including low level software written in machine code, higher level software such as application software and any combination thereof. In this regard, the system components can manage resources and provide services for system functionality. Any other variations and combinations thereof are contemplated with embodiments of the present disclosure.</p><p id="p-0053" num="0052">By way of example, the technical solution system can include an Application Programming Interface (API) library that includes specifications for routines, data structures, object classes, and variables may support the interaction between the hardware architecture of the device and the software framework of the technical solution system. These APIs include configuration specifications for the technical solution system such that the different components therein can communicate with each other in the technical solution system, as described herein.</p><p id="p-0054" num="0053">Having identified various components utilized herein, it should be understood that any number of components and arrangements may be employed to achieve the desired functionality within the scope of the present disclosure. For example, the components in the embodiments depicted in the figures are shown with lines for the sake of conceptual clarity. Other arrangements of these and other components may also be implemented. For example, although some components are depicted as single components, many of the elements described herein may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location. Some elements may be omitted altogether. Moreover, various functions described herein as being performed by one or more entities may be carried out by hardware, firmware, and/or software, as described below. For instance, various functions may be carried out by a processor executing instructions stored in memory. As such, other arrangements and elements (e.g., machines, interfaces, functions, orders, and groupings of functions) can be used in addition to or instead of those shown.</p><p id="p-0055" num="0054">Embodiments described in the paragraphs below may be combined with one or more of the specifically described alternatives. In particular, an embodiment that is claimed may contain a reference, in the alternative, to more than one other embodiment. The embodiment that is claimed may specify a further limitation of the subject matter claimed.</p><p id="p-0056" num="0055">Embodiment 1. A computer-implemented method for controlling information. The method comprising receiving, at a proxy service, an indication that a client device to upload content to a storage cloud provider. The method also comprising performing, through the proxy service, a security scan of the content while the content is stored on the client device. The method also comprising identifying a security concern on the client device. The method also comprising taking a security mitigation action in response to identifying the security concern.</p><p id="p-0057" num="0056">Embodiment 2. The method of embodiment 1, wherein the security scan includes scanning the content and additional content that is stored in a storage bin with the content.</p><p id="p-0058" num="0057">Embodiment 3. The method of embodiment 2, wherein the storage bin is a file folder.</p><p id="p-0059" num="0058">Embodiment 4. The method of embodiment 2, wherein the security concern is not in the content and wherein the security concern is in the additional content.</p><p id="p-0060" num="0059">Embodiment 5. The method as in any one of the above embodiments, further comprising communicating the request to the storage cloud provider. The method also comprising receiving a storage cloud provider's website code for a content selection interface. The method also comprising injecting, by the proxy service, a security service code into the storage cloud provider's website code to create security-injected website code. The method also comprising communicating the security-injected website code to the client device.</p><p id="p-0061" num="0060">Embodiment 6. The method as in any one of the above embodiments, wherein the security mitigation action is preventing the content from being uploaded to the storage cloud provider.</p><p id="p-0062" num="0061">Embodiment 7. The method as in any one of the above embodiments, wherein the security mitigation action comprises providing an indication to the storage cloud provider that the client device poses a security threat.</p><p id="p-0063" num="0062">Embodiment 8. A system comprising: at least one hardware processor and one or more computer-readable media having executable instructions embodied thereon, which, when executed by the at least one hardware processor, cause the at least one hardware processor to perform operations comprising transmitting, from a client device, a request addressed to a storage cloud provider. The operations also comprising receiving, at the client device, from a proxy service, a security-injected client code for a storage cloud provider's interface. The operations also comprising outputting the storage cloud provider's interface for display. The operations also comprising receiving, through the interface, a selection designating a content for upload to the storage cloud provider. The operations also comprising receiving a security mitigation message from the proxy service.</p><p id="p-0064" num="0063">Embodiment 9. The system of embodiment 8, wherein the security mitigation message indicates a security concern was found in a file folder in which the content is stored.</p><p id="p-0065" num="0064">Embodiment 10. The system of embodiment 9, wherein the security concern is not in the content.</p><p id="p-0066" num="0065">Embodiment 11. The system of embodiment 10, wherein the method further comprises uploading the content to the storage cloud provider.</p><p id="p-0067" num="0066">Embodiment 12. The system as in any one of embodiment 8, 9, 10, and 11 wherein the method further comprises the security-injected client code performing a security scan of the content.</p><p id="p-0068" num="0067">Embodiment 13. The system as in any one of embodiment 8, 9, 10, 11, and 12, wherein the method further comprises the security-injected client code performing a security scan of a storage bin in which the content is stored.</p><p id="p-0069" num="0068">Embodiment 14. The system as in any one of embodiment 8, 9, 10, 11, 12, and 13, wherein the security-injected client code is wrapped.</p><p id="p-0070" num="0069">Embodiment 15. Computer storage media storing computer-useable instructions that, when used by at least one computing device, cause the at least one computing device to perform actions comprising injecting, by a proxy service, a security service code into a storage cloud provider's client interface code to create a security-injected client code. The method further comprising communicating the security-injected client code to a client device. The method further comprising receiving, at the proxy service, a request from the client device to upload a file to a storage cloud provider. The method further comprising performing, through the proxy service, a security scan of the content while the content is stored on the client device. The method further comprising identifying a security rule violation in content on the client device. The method further comprising taking a security mitigation action in response to identifying the security concern.</p><p id="p-0071" num="0070">Embodiment 16. The media of embodiment 15, wherein the security scan is performed through the security-injected client code.</p><p id="p-0072" num="0071">Embodiment 17. The media of embodiment 15, wherein the security scan includes scanning the file and additional content that is stored in a folder with the file.</p><p id="p-0073" num="0072">Embodiment 18. The media of embodiment 17, wherein the additional content is in subfolders within the folder.</p><p id="p-0074" num="0073">Embodiment 19. The media of embodiment 17, wherein the security rule violation is information in the file that violates a privacy policy.</p><p id="p-0075" num="0074">Embodiment 20. The media of as in any one of embodiments 15, 16, 17, 18, and 19, wherein the security mitigation action is preventing the content from being uploaded to the storage cloud provider.</p><p id="p-0076" num="0075">The subject matter of embodiments of the disclosure is described with specificity herein to meet statutory requirements. However, the description itself is not intended to limit the scope of this patent. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different steps or combinations of steps similar to the ones described in this document, in conjunction with other present or future technologies. Moreover, although the terms &#x201c;step&#x201d; and/or &#x201c;block&#x201d; may be used herein to connote different elements of methods employed, the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described.</p><p id="p-0077" num="0076">For purposes of this disclosure, the word &#x201c;including&#x201d; has the same broad meaning as the word &#x201c;comprising,&#x201d; and the word &#x201c;accessing&#x201d; comprises &#x201c;receiving,&#x201d; &#x201c;referencing,&#x201d; or &#x201c;retrieving.&#x201d; Further, the word &#x201c;communicating&#x201d; has the same broad meaning as the word &#x201c;receiving,&#x201d; or &#x201c;transmitting&#x201d; facilitated by software or hardware-based buses, receivers, or transmitters using communication media described herein. In addition, words such as &#x201c;a&#x201d; and &#x201c;an,&#x201d; unless otherwise indicated to the contrary, include the plural as well as the singular. Thus, for example, the constraint of &#x201c;a feature&#x201d; is satisfied where one or more features are present. Also, the term &#x201c;or&#x201d; includes the conjunctive, the disjunctive, and both (a or b thus includes either a or b, as well as a and b).</p><p id="p-0078" num="0077">For purposes of a detailed discussion above, embodiments of the present disclosure are described with reference to a distributed computing environment; however, the distributed computing environment depicted herein is merely exemplary. Components can be configured for performing novel aspects of embodiments, where the term &#x201c;configured for&#x201d; can refer to &#x201c;programmed to&#x201d; perform particular tasks or implement particular abstract data types using code.</p><p id="p-0079" num="0078">Further, while embodiments of the present disclosure may generally refer to the technical solution environment and the schematics described herein, it is understood that the techniques described may be extended to other implementation contexts.</p><p id="p-0080" num="0079">Embodiments of the present disclosure have been described in relation to particular embodiments which are intended in all respects to be illustrative rather than restrictive. Alternative embodiments will become apparent to those of ordinary skill in the art to which the present disclosure pertains without departing from its scope.</p><p id="p-0081" num="0080">From the foregoing, it will be seen that this disclosure is one well adapted to attain all the ends and objects hereinabove set forth together with other advantages which are obvious and which are inherent to the structure.</p><p id="p-0082" num="0081">It will be understood that certain features and sub-combinations are of utility and may be employed without reference to other features or sub-combinations. This is contemplated by and is within the scope of the claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method for controlling information, the method comprising:<claim-text>receiving, at a proxy service, a request from a client device to upload content to a web device that is remote from the client device;</claim-text><claim-text>employing the proxy service to perform a security scan of the content while the content is stored on the client device;</claim-text><claim-text>identifying a security concern on the client device; and</claim-text><claim-text>taking a security mitigation action in response to identifying the security concern.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the security scan includes scanning the content and additional content that is included in a file system tree structure indicated by the request.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the file system tree structure includes at least one root directory and at least one sub-directory located within the at least one root directory.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the security concern is associated with the additional content and the additional content is located within a sub-directory included file system tree structure.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the web device is operated by a storage cloud provider and the method further comprises:<claim-text>communicating the request to the storage cloud provider;</claim-text><claim-text>receiving a storage cloud provider's website code for a content selection interface;</claim-text><claim-text>injecting, by the proxy service, a security service code into the storage cloud provider's website code to create security-injected website code; and</claim-text><claim-text>communicating the security-injected website code to the client device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the security mitigation action includes preventing the content from being uploaded to the web device.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the security mitigation action comprises providing an indication to the web device that the client device poses a security threat.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system comprising:<claim-text>at least one hardware processor; and</claim-text><claim-text>one or more computer-readable media having executable instructions embodied thereon, which, when executed by the at least one hardware processor, cause the at least one hardware processor to perform operations comprising:<claim-text>transmitting, from a client device, a request addressed to a storage cloud provider;</claim-text><claim-text>receiving, at the client device, from a proxy service, a security-injected client code for a storage cloud provider's interface;</claim-text><claim-text>outputting the storage cloud provider's interface for display;</claim-text><claim-text>receiving, through the interface, a selection designating a content for upload to the storage cloud provider; and</claim-text><claim-text>receiving a security mitigation message from the proxy service.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the security mitigation message indicates a security concern was found in a file folder in which the content is stored.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the security concern is not in the content.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the method further comprises uploading the content to the storage cloud provider.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the method further comprises the security-injected client code performing a security scan of the content.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the method further comprises the security-injected client code performing a security scan of a storage bin in which the content is stored.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the security-injected client code is wrapped.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. Computer storage media storing computer-useable instructions that, when used by at least one computing device, cause the at least one computing device to perform actions comprising:<claim-text>injecting, by a proxy service, a security service code into a storage cloud provider's client interface code to create a security-injected client code;</claim-text><claim-text>communicating the security-injected client code to a client device;</claim-text><claim-text>receiving, at the proxy service, a request from the client device to upload a file to a storage cloud provider;</claim-text><claim-text>performing, through the proxy service, a security scan of the content while the content is stored on the client device;</claim-text><claim-text>identifying a security rule violation in content on the client device; and</claim-text><claim-text>taking a security mitigation action in response to identifying the security concern.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the security scan is performed through the security-injected client code.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the security scan includes scanning the file and additional content that is stored in a folder with the file.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The media of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the additional content is in subfolders within the folder.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The media of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the security rule violation is information in the file that violates a privacy policy.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the security mitigation action is preventing the content from being uploaded to the storage cloud provider.</claim-text></claim></claims></us-patent-application>