<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007475A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007475</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17867511</doc-number><date>20220718</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201810028282.4</doc-number><date>20180111</date></priority-claim><priority-claim sequence="02" kind="national"><country>CN</country><doc-number>201810174626.2</doc-number><date>20180302</date></priority-claim><priority-claim sequence="03" kind="national"><country>CN</country><doc-number>201811082476.9</doc-number><date>20180917</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>0433</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>60</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>037</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>0433</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>085</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>60</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>037</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>84</main-group><subgroup>042</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e98">Method for Performing Verification by Using Shared Key, Method for Performing Verification by Using Public Key and Private Key, and Apparatus</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16924412</doc-number><date>20200709</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11405780</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17867511</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2019/071414</doc-number><date>20190111</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>16924412</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>HUAWEI TECHNOLOGIES CO., LTD.</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>HE</last-name><first-name>Chengdong</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Hua</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method and an apparatus for performing verification using a shared key are disclosed. The method includes: receiving, by a first network element, a registration request message from a second network element, where the registration request message includes a user identifier, first network identifier information, and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, and the shared key is a key used between the first network element and the second network element; verifying, by the first network element, the registration request message by using the shared key; and sending, by the first network element, a registration response message to the second network element. When receiving a registration request from a visited network, a home network verifies the registration request message by using a shared key, to avoid a spoofing attack from the visited network.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="93.98mm" wi="149.35mm" file="US20230007475A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="213.95mm" wi="155.53mm" file="US20230007475A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="182.12mm" wi="152.65mm" file="US20230007475A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="214.46mm" wi="153.08mm" file="US20230007475A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="125.73mm" wi="156.46mm" file="US20230007475A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="214.21mm" wi="154.43mm" file="US20230007475A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="123.11mm" wi="142.92mm" file="US20230007475A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="210.23mm" wi="156.72mm" file="US20230007475A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="152.99mm" wi="150.28mm" file="US20230007475A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="209.47mm" wi="151.81mm" file="US20230007475A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="58.93mm" wi="123.61mm" file="US20230007475A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="202.44mm" wi="55.63mm" orientation="landscape" file="US20230007475A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="206.50mm" wi="51.65mm" orientation="landscape" file="US20230007475A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="198.54mm" wi="153.42mm" file="US20230007475A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="120.40mm" wi="136.91mm" file="US20230007475A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="103.21mm" wi="131.23mm" file="US20230007475A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="189.65mm" wi="142.16mm" file="US20230007475A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="181.02mm" wi="149.52mm" file="US20230007475A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="189.48mm" wi="143.00mm" file="US20230007475A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="201.17mm" wi="147.91mm" file="US20230007475A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="191.09mm" wi="150.28mm" file="US20230007475A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="184.40mm" wi="152.91mm" file="US20230007475A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="191.60mm" wi="147.91mm" file="US20230007475A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="212.34mm" wi="141.99mm" file="US20230007475A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="214.21mm" wi="148.17mm" file="US20230007475A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="215.82mm" wi="151.38mm" file="US20230007475A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="215.05mm" wi="151.64mm" file="US20230007475A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="217.68mm" wi="151.81mm" file="US20230007475A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="125.22mm" wi="144.44mm" file="US20230007475A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="201.93mm" wi="154.43mm" file="US20230007475A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="113.88mm" wi="135.64mm" file="US20230007475A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="167.05mm" wi="155.53mm" file="US20230007475A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="160.27mm" wi="108.63mm" file="US20230007475A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="129.79mm" wi="155.11mm" file="US20230007475A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/924,412, filed on Jul. 9, 2020, which is a continuation of International Patent Application No. PCT/CN2019/071414, filed on Jan. 11, 2019, which claims priority to Chinese Patent Application No. 201811082476.9, filed on Sep. 17, 2018 and Chinese Patent Application No. 201810174626.2, filed on Mar. 2, 2018 and Chinese Patent Application No. 201810028282.4, filed on Jan. 11, 2018. All of the aforementioned patent applications are hereby incorporated by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">This application relates to the field of communications technologies, and in particular, to a method for performing verification by using a shared key, a method for performing verification by using a public key and a private key, and an apparatus.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">As shown in <figref idref="DRAWINGS">FIG. <b>1</b><i>a </i></figref>and <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, a roaming scenario in an architecture of a 5th generation (5G) mobile communications system is defined. When a terminal device registers with a visited network, an access and mobility management function (AMF) entity in the visited network sends an authentication initiation request to an authentication server function (AUSF) entity in a home network. After receiving the authentication initiation request sent by the AMF, the AUSF sends an authentication request message to a unified data management (UDM) entity in the home network, to request an authentication vector. After receiving the authentication request message sent by the AUSF, the UDM selects an authentication method. The UDM generates a corresponding authentication vector based on the authentication method, and sends the authentication vector to the AUSF. After receiving the authentication vector sent by the UDM, the AUSF sends the authentication vector to the AMF. The AMF receives the authentication vector sent by the AUSF, and completes authentication on the terminal device in the visited network.</p><p id="p-0005" num="0004">After the authentication on the terminal device succeeds, the AMF may further send an authentication confirmation message to the AUSF. After receiving the authentication confirmation message sent by the AMF, the AUSF further completes authentication confirmation for the terminal device in the home network, and the AUSF sends an authentication confirmation result to the UDM.</p><p id="p-0006" num="0005">After the authentication and the authentication confirmation succeed, the AMF initiates a registration message to the UDM. After the UDM receives the registration message from the AMF, the UDM records related information of the AMF. If the UDM stores an address of an old AMF, the UDM further sends a deregistration message to the old AMF, to request the old AMF to delete user-related context information.</p><p id="p-0007" num="0006">However, a 5G key architecture shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> lacks a mechanism for performing verification between the AMF in a serving network and the UDM in the home network. Consequently, communication between the AMF in the serving network and the UDM in the home network may be subject to a spoofing attack.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0008" num="0007">This application provides a method for performing verification by using a shared key and an apparatus, to protect a network from a spoofing attack.</p><p id="p-0009" num="0008">According to an aspect of this application, a method for performing verification by using a shared key is provided, including: receiving, by a first network element, a registration request message from a second network element, where the registration request message includes a user identifier, first network identifier information, and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, the shared key is a key used between the first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying, by the first network element, the registration request message by using the shared key; and sending, by the first network element, a registration response message to the second network element. In this aspect, when receiving a registration request message from a visited network, a home network verifies the registration request message by using a shared key, to avoid a spoofing attack from the visited network.</p><p id="p-0010" num="0009">In a possible implementation, the processing the first network identifier information by using a shared key includes any one type of the following processing: performing a message authentication code operation on the first network identifier information and the shared key, performing a message authentication code operation on the first network identifier information, a random number, and the shared key, performing a hash operation on the first network identifier information and the shared key, and performing a hash operation on the first network identifier information, a random number, and the shared key. In this implementation, a plurality of manners of processing network identifier information by using the shared key are provided. If the second network element does not have the shared key or processes the network identifier information by using an incorrect shared key, the verification performed by the first network element on the registration request message does not succeed.</p><p id="p-0011" num="0010">In another possible implementation, the verifying, by the first network element, the registration request message by using the shared key includes: obtaining, by the first network element, third network identifier information based on the first network identifier information by using the shared key; and verifying, by the first network element, the second network identifier information by using the third network identifier information. In this implementation, a ciphertext-based verification manner is provided.</p><p id="p-0012" num="0011">In still another possible implementation, the verifying, by the first network element, the second network identifier information by using the third network identifier information includes: verifying, by the first network element, whether the third network identifier information is consistent with the second network identifier information.</p><p id="p-0013" num="0012">In still another possible implementation, the processing the first network identifier information by using a shared key includes: encrypting the first network identifier information by using the shared key, or encrypting the first network identifier information and a random number by using the shared key.</p><p id="p-0014" num="0013">In still another possible implementation, the verifying, by the first network element, the registration request message by using the shared key includes: obtaining, by the first network element, fourth network identifier information based on the second network identifier information by using the shared key; and verifying, by the first network element, the first network identifier information by using the fourth network identifier information. In this implementation, a plaintext-based verification manner is provided.</p><p id="p-0015" num="0014">In still another possible implementation, the verifying, by the first network element, the first network identifier information by using the fourth network identifier information includes: verifying, by the first network element, whether the fourth network identifier information is consistent with the first network identifier information.</p><p id="p-0016" num="0015">In still another possible implementation, the registration response message is a registration success response message or a registration failure response message, and the sending, by the first network element, a registration response message to the second network element includes: if the verification succeeds, sending, by the first network element, the registration success response message to the second network element; or if the verification fails, sending, by the first network element, the registration failure response message to the second network element.</p><p id="p-0017" num="0016">In still another possible implementation, that the verification succeeds includes: the third network identifier information is consistent with the second network identifier information, or the fourth network identifier information is consistent with the first network identifier information; or that the verification fails includes: the third network identifier information is inconsistent with the second network identifier information, or the fourth network identifier information is inconsistent with the first network identifier information.</p><p id="p-0018" num="0017">In still another possible implementation, before the verifying, by the first network element, the registration request message by using the shared key, the method further includes: searching for, by the first network element based on a correspondence between a shared key and at least one of a user identifier and network identifier information, the shared key corresponding to at least one of the user identifier and the first network identifier information that are included in the registration request message.</p><p id="p-0019" num="0018">Correspondingly, according to another aspect of this application, a first network element is provided. The first network element has a function of implementing behavior of the first network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0020" num="0019">In a possible implementation, the first network element includes: a communications unit, configured to receive a registration request message from a second network element, where the registration request message includes a user identifier, first network identifier information, and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, the shared key is a key used between the first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and a processing unit, configured to verify the registration request message by using the shared key. The communications unit is further configured to send a registration response message to the second network element.</p><p id="p-0021" num="0020">In another possible implementation, the first network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: receiving a registration request message from a second network element through the communications interface, where the registration request message includes a user identifier, first network identifier information, and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, the shared key is a key used between the first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying the registration request message by using the shared key; and controlling the communications interface to send a registration response message to the second network element.</p><p id="p-0022" num="0021">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the first network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0023" num="0022">According to still another aspect of this application, another method for performing verification by using a shared key is provided, including: processing, by a first network element, first network identifier information by using a shared key, to obtain second network identifier information; sending, by the first network element, a deregistration message to a second network element, where the deregistration message includes the first network identifier information and the second network identifier information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and receiving, by the first network element, a deregistration response message from the second network element. In this implementation, when receiving a deregistration message from a home network, a visited network verifies the deregistration message by using a shared key, to avoid a spoofing attack from the home network.</p><p id="p-0024" num="0023">In a possible implementation, the processing first network identifier information by using a shared key includes any one type of the following processing: encrypting the first network identifier information by using the shared key, encrypting the first network identifier information and a random number by using the shared key, performing a message authentication code operation on the first network identifier information and the shared key, performing a message authentication code operation on the first network identifier information, a random number, and the shared key, performing a hash operation on the first network identifier information and the shared key, and performing a hash operation on the first network identifier information, a random number, and the shared key. In this implementation, a plurality of manners of processing network identifier information by using the shared key are provided. If the first network element does not have the shared key or processes the network identifier information by using an incorrect shared key, the verification performed by the second network element on the deregistration message does not succeed.</p><p id="p-0025" num="0024">In another possible implementation, the deregistration response message is a deregistration success response message or a deregistration failure response message.</p><p id="p-0026" num="0025">Correspondingly, according to still another aspect of this application, a first network element is provided. The first network element has a function of implementing behavior of the first network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0027" num="0026">In a possible implementation, the first network element includes: a processing unit, configured to process first network identifier information by using a shared key, to obtain second network identifier information; and a communications unit, configured to send a deregistration message to a second network element, where the deregistration message includes the first network identifier information and the second network identifier information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy. The communications unit is further configured to receive a deregistration response message from the second network element.</p><p id="p-0028" num="0027">In another possible implementation, the first network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: processing first network identifier information by using a shared key, to obtain second network identifier information; controlling the communications interface to send a deregistration message to a second network element, where the deregistration message includes the first network identifier information and the second network identifier information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and receiving a deregistration response message from the second network element through the communications interface.</p><p id="p-0029" num="0028">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the first network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0030" num="0029">With reference to the foregoing aspects, in a possible implementation, if the first network element is a data management network element, the method further includes: receiving, by the first network element, the shared key from an authentication server network element; or if the first network element is a first security edge protection proxy, the method further includes: receiving, by the first network element, the shared key from an authentication server network element or a data management network element. In this implementation, the shared key may be generated by an AUSF, and the AUSF transfers the shared key to a UDM or the first security edge protection proxy.</p><p id="p-0031" num="0030">With reference to the foregoing two aspects, in another possible implementation, the first network element is a data management network element, and the receiving, by the first network element, the shared key from an authentication server network element includes: receiving, by the first network element, an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is generated by the authentication server network element, or the shared key is generated and sent to the authentication server network element by a security anchor network element, or the shared key is generated and sent to the authentication server network element by the second network element, and the second network element is the mobility management network element.</p><p id="p-0032" num="0031">With reference to the foregoing two aspects, in still another possible implementation, if the first network element is a data management network element, the method further includes: receiving, by the first network element, an authentication information request from the authentication server network element, where the authentication information request includes at least one of a user identifier and the first network identifier information; and sending, by the first network element, an authentication vector to the authentication server network element; and the receiving, by the first network element, the shared key from an authentication server network element includes: receiving, by the first network element, an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is determined by the authentication server network element based on the authentication vector.</p><p id="p-0033" num="0032">With reference to the foregoing two aspects, in still another possible implementation, the method further includes: receiving, by the first network element, an authentication information request from the authentication server network element, where the authentication information request includes at least one of the user identifier and the first network identifier information; and sending, by the first network element, an authentication vector to the authentication server network element, so that the authentication server network element sends the authentication vector to a security anchor network element; and the receiving, by the first network element, the shared key from an authentication server network element includes: receiving, by the first network element, an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is determined by the security anchor network element based on the authentication vector and sent by the security anchor network element to the authentication server network element. In this implementation, an SEAF generates the shared key, and transfers the shared key to a UDM by using an AUSF.</p><p id="p-0034" num="0033">With reference to the foregoing two aspects, in still another possible implementation, the method further includes: receiving, by the first network element, an authentication information request from the authentication server network element, where the authentication information request includes at least one of the user identifier and the first network identifier information; and sending, by the first network element, an authentication vector to the authentication server network element, so that the authentication server network element sends the authentication vector to the second network element; and the receiving, by the first network element, the shared key from an authentication server network element includes: receiving, by the first network element, an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is determined by the second network element based on the authentication vector and sent by the second network element to the authentication server network element. In this implementation, an AMF generates the shared key, and transfers the shared key to a UDM by using an AUSF.</p><p id="p-0035" num="0034">With reference to the foregoing two aspects, in still another possible implementation, the authentication confirmation notification response message further includes an authentication result obtained by the authentication server network element by performing authentication on a terminal device.</p><p id="p-0036" num="0035">With reference to the foregoing two aspects, in still another possible implementation, the method further includes: storing, by the first network element, a correspondence between the shared key and at least one of the user identifier and the first network identifier information.</p><p id="p-0037" num="0036">With reference to the foregoing two aspects, in still another possible implementation, the first network identifier information is carried in a public land mobile network identifier parameter or a mobility management network element identifier parameter.</p><p id="p-0038" num="0037">According to still another aspect of this application, still another method for performing verification by using a shared key is provided, including: processing, by a second network element, first network identifier information by using a first shared key, to obtain second network identifier information, where the first shared key is a key used between a first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy; sending, by the second network element, a registration request message to the first network element, where the registration request message includes a user identifier, the first network identifier information, and the second network identifier information; and receiving, by the second network element, a registration response message from the first network element. In this aspect, according to the method for performing verification by using a shared key provided in this embodiment of this application, a visited network processes network identifier information in a registration request message by using a shared key. When receiving the registration request from message the visited network, a home network verifies the registration request message by using the shared key, to avoid a spoofing attack from the visited network.</p><p id="p-0039" num="0038">In a possible implementation, the processing, by a second network element, first network identifier information by using a first shared key includes: encrypting, by the second network element, the first network identifier information by using the shared key; or encrypting, by the second network element, the first network identifier information and a first random number by using the first shared key; or performing, by the second network element, a message authentication code operation on the first network identifier information and the first shared key; or performing, by the second network element, a message authentication code operation on the first network identifier information, a first random number, and the first shared key; or performing, by the second network element, a hash operation on the first network identifier information and the first shared key; or performing, by the second network element, a hash operation on the first network identifier information, a first random number, and the first shared key.</p><p id="p-0040" num="0039">In another possible implementation, if the second network element is the first mobility management network element, the method further includes: receiving, by the second network element, the first shared key from a second mobility management network element.</p><p id="p-0041" num="0040">In still another possible implementation, the method further includes: sending, by the second network element, a context obtaining request to the second mobility management network element; and the receiving, by the second network element, the first shared key from a second mobility management network element includes: receiving, by the second network element, a context obtaining response from the second mobility management network element, where the context obtaining response includes the first shared key.</p><p id="p-0042" num="0041">In still another possible implementation, the first shared key is generated based on a second shared key and at least one of a second random number and a third random number, the second shared key is a key used between the second mobility management network element and the first network element, the second random number is carried in the context obtaining request, and the third random number is generated by the second mobility management network element.</p><p id="p-0043" num="0042">Correspondingly, according to still another aspect of this application, a second network element is provided. The second network element has a function of implementing behavior of the second network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0044" num="0043">In a possible implementation, the second network element includes: a processing unit, configured to process first network identifier information by using a first shared key, to obtain second network identifier information, where the first shared key is a key used between a first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy; and a communications unit, configured to send a registration request message to the first network element, where the registration request message includes a user identifier, the first network identifier information, and the second network identifier information. The communications unit is further configured to receive a registration response message from the first network element.</p><p id="p-0045" num="0044">In another possible implementation, the second network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: processing first network identifier information by using a first shared key, to obtain second network identifier information, where the first shared key is a key used between a first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy; controlling the communications interface to send a registration request message to the first network element, where the registration request message includes a user identifier, the first network identifier information, and the second network identifier information; and receiving a registration response message from the first network element through the communications interface.</p><p id="p-0046" num="0045">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the second network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0047" num="0046">According to still another aspect of this application, still another method for performing verification by using a shared key is provided, where the method includes: receiving, by a second network element, a deregistration message from a first network element, where the deregistration message includes first network identifier information and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, the shared key is a key used between the first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying, by the second network element, the deregistration message by using the shared key; and sending, by the second network element, a deregistration response message to the first network element. In this aspect, a network element in a home network processes network identifier information in a deregistration message by using a shared key. When receiving the deregistration message from the home network, a visited network verifies the deregistration message by using the shared key, to avoid a spoofing attack from the home network.</p><p id="p-0048" num="0047">In a possible implementation, the processing the first network identifier information by using a shared key includes any one type of the following processing: performing a message authentication code operation on the first network identifier information and the shared key, performing a message authentication code operation on the first network identifier information, a random number, and the shared key, performing a hash operation on the first network identifier information and the shared key, and performing a hash operation on the first network identifier information, a random number, and the shared key.</p><p id="p-0049" num="0048">In another possible implementation, the verifying, by the second network element, the deregistration message by using the shared key includes: obtaining, by the second network element, third network identifier information based on the first network identifier information by using the shared key; and verifying, by the second network element, the second network identifier information by using the third network identifier information.</p><p id="p-0050" num="0049">In still another possible implementation, the verifying, by the second network element, the second network identifier information by using the third network identifier information includes: verifying, by the second network element, whether the third network identifier information is consistent with the second network identifier information.</p><p id="p-0051" num="0050">In still another possible implementation, the processing the first network identifier information by using a shared key includes: encrypting the first network identifier information by using the shared key, or encrypting the first network identifier information and a random number by using the shared key.</p><p id="p-0052" num="0051">In still another possible implementation, the verifying, by the second network element, the deregistration message by using the shared key includes: obtaining, by the second network element, fourth network identifier information based on the second network identifier information by using the shared key; and verifying, by the second network element, the first network identifier information by using the fourth network identifier information.</p><p id="p-0053" num="0052">In still another possible implementation, the verifying, by the second network element, the first network identifier information by using the fourth network identifier information includes: verifying, by the second network element, whether the fourth network identifier information is consistent with the first network identifier information.</p><p id="p-0054" num="0053">In still another possible implementation, the deregistration response message is a deregistration success response message or a deregistration failure response message, and the sending, by the second network element, a deregistration response message to the first network element includes: if the verification succeeds, sending, by the second network element, the deregistration success response message to the first network element; or if the verification fails, sending, by the second network element, the deregistration failure response message to the first network element.</p><p id="p-0055" num="0054">In still another possible implementation, that the verification succeeds includes: the third network identifier information is consistent with the second network identifier information, or the fourth network identifier information is consistent with the first network identifier information; or that the verification fails includes: the third network identifier information is inconsistent with the second network identifier information, or the fourth network identifier information is inconsistent with the first network identifier information.</p><p id="p-0056" num="0055">In still another possible implementation, before the verifying, by the second network element, the deregistration message by using the shared key, the method further includes: searching for, by the second network element based on a stored correspondence between a shared key and at least one of a user identifier and network identifier information, the shared key corresponding to at least one of a user identifier and the first network identifier information that are included in the deregistration message.</p><p id="p-0057" num="0056">In still another possible implementation, if the second network element is the mobility management network element, the method further includes: generating, by the second network element, the shared key, and sending the shared key to an authentication server network element, so that the authentication server network element sends the shared key to the first network element; or the method further includes: receiving, by the second network element, the shared key from a security anchor network element or an authentication server network element.</p><p id="p-0058" num="0057">In still another possible implementation, the method further includes: sending, by the second network element, an authentication initiation request to the authentication server network element, where the authentication initiation request includes at least one of the user identifier and the first network identifier information; receiving, by the second network element, an authentication vector from the authentication server network element; and generating, by the second network element, the shared key based on the authentication vector; and the sending, by the second network element, the shared key to an authentication server network element includes: sending, by the second network element, an authentication confirmation message to the authentication server network element, where the authentication confirmation message includes the shared key.</p><p id="p-0059" num="0058">In still another possible implementation, if the second network element is the second security edge protection proxy, the method further includes: receiving, by the second network element, the shared key from a mobility management network element, a security anchor network element, or an authentication server network element.</p><p id="p-0060" num="0059">Correspondingly, according to still another aspect of this application, a second network element is provided. The second network element has a function of implementing behavior of the second network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0061" num="0060">In a possible implementation, the second network element includes: a communications unit, configured to receive a deregistration message from a first network element, where the deregistration message includes first network identifier information and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, the shared key is a key used between the first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and a processing unit, configured to verify the deregistration message by using the shared key. The communications unit is further configured to send a deregistration response message to the first network element.</p><p id="p-0062" num="0061">In another possible implementation, the second network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: receiving a deregistration message from a first network element through the communications interface, where the deregistration message includes first network identifier information and second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using a shared key, the shared key is a key used between the first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying the deregistration message by using the shared key; and controlling the communications interface to send a deregistration response message to the first network element.</p><p id="p-0063" num="0062">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the second network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0064" num="0063">According to still another aspect of this application, a method for performing verification by using a public key and a private key is provided, including: receiving, by a first network element, a request message from a second network element, where the request message includes first network identifier information and second network identifier information, the second network identifier information is obtained based on the first network identifier information by using a private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying, by the first network element, the second network identifier information by using a public key corresponding to the private key; and sending, by the first network element, a response message to the second network element. In this aspect, when a home network receives a request message sent by a visited network, where network identifier information in the request message is signed by a network element in the visited network by using a private key, a network element in the home network verifies the network identifier information in the request message by using a preset public key corresponding to the private key, to protect the network from an attack from the visited network.</p><p id="p-0065" num="0064">In a possible implementation, the method further includes: searching for, by the first network element, the public key based on the first network identifier information.</p><p id="p-0066" num="0065">In another possible implementation, the second network identifier information is obtained by signing the first network identifier information and at least one of a random number and a session identifier by using the private key.</p><p id="p-0067" num="0066">In still another possible implementation, the method further includes: receiving, by the first network element, a registration request message from the second network element; and sending, by the first network element, a registration response message to the second network element, where the registration response message includes the random number.</p><p id="p-0068" num="0067">Correspondingly, according to still another aspect of this application, a first network element is provided. The first network element has a function of implementing behavior of the first network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0069" num="0068">In a possible implementation, the first network element includes: a communications unit, configured to receive a request message from a second network element, where the request message includes first network identifier information and second network identifier information, the second network identifier information is obtained based on the first network identifier information by using a private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and a processing unit, configured to verify the second network identifier information by using a public key corresponding to the private key. The communications unit is further configured to send a response message to the second network element.</p><p id="p-0070" num="0069">In another possible implementation, the first network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: receiving a request message from a second network element through the communications interface, where the request message includes first network identifier information and second network identifier information, the second network identifier information is obtained based on the first network identifier information by using a private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying the second network identifier information by using a public key corresponding to the private key; and controlling the communications interface to send a response message to the second network element.</p><p id="p-0071" num="0070">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the first network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0072" num="0071">In the foregoing two aspects, that the second network identifier information is obtained based on the first network identifier information by using the private key includes one of the following cases:</p><p id="p-0073" num="0072">Case 1: The second network identifier information is obtained based on the first network identifier information only by using the private key. For example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0074" num="0073">Case 2: The second network identifier information is obtained based on the first network identifier information by using the private key and other content. For example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0075" num="0074">In the foregoing case 2, the &#x201c;other content&#x201d; may be at least one of the following: a public key preset in the first network element, a public key in a private-public key pair generated by the first network element, and another parameter that is generated by the first network element and that participates in subsequent key calculation.</p><p id="p-0076" num="0075">According to still another aspect of this application, a method for performing verification by using a public key and a private key is provided, including: obtaining, by a first network element, second network identifier information based on first network identifier information by using a private key, where the first network element is a data management network element or a first security edge protection proxy; sending, by the first network element, a deregistration message to a second network element, where the deregistration message includes the second network identifier information, so that the second network element verifies the second network identifier information by using a public key corresponding to the private key, and the second network element is a mobility management network element or a second security edge protection proxy; and receiving, by the first network element, a deregistration response message from the second network element. In this aspect, when a visited network receives a deregistration message sent by a home network, where network identifier information in the deregistration message is signed by a network element in the home network by using a private key, a network element in the visited network verifies the network identifier information in the deregistration message by using a preset public key corresponding to the private key, to protect the network from an attack from the home network.</p><p id="p-0077" num="0076">In a possible implementation, the obtaining, by a first network element, second network identifier information based on first network identifier information by using a private key includes: obtaining, by the first network element, the second network identifier information by signing the first network identifier information and at least one of a random number and a session identifier by using the private key.</p><p id="p-0078" num="0077">Correspondingly, according to still another aspect of this application, a first network element is provided. The first network element has a function of implementing behavior of the first network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0079" num="0078">In a possible implementation, the first network element includes: a processing unit, configured to obtain second network identifier information based on first network identifier information by using a private key, where the first network element is a data management network element or a first security edge protection proxy; and a communications unit, configured to send a deregistration message to a second network element, where the deregistration message includes the second network identifier information, so that the second network element verifies the second network identifier information by using a public key corresponding to the private key, and the second network element is a mobility management network element or a second security edge protection proxy. The communications unit is further configured to receive a deregistration response message from the second network element.</p><p id="p-0080" num="0079">In another possible implementation, the first network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: obtaining second network identifier information based on first network identifier information by using a private key, where the first network element is a data management network element or a first security edge protection proxy; sending a deregistration message to a second network element through the communications interface, where the deregistration message includes the second network identifier information, so that the second network element verifies the second network identifier information by using a public key corresponding to the private key, and the second network element is a mobility management network element or a second security edge protection proxy; and receiving a deregistration response message from the second network element through the communications interface.</p><p id="p-0081" num="0080">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the first network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0082" num="0081">In the foregoing two aspects, that the second network identifier information is obtained based on the first network identifier information by using the private key includes one of the following cases:</p><p id="p-0083" num="0082">Case 1: The second network identifier information is obtained based on the first network identifier information only by using the private key. For example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0084" num="0083">Case 2: The second network identifier information is obtained based on the first network identifier information by using the private key and other content. For example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0085" num="0084">In the foregoing case 2, the &#x201c;other content&#x201d; may be at least one of the following: a public key preset in the first network element, a public key in a private-public key pair generated by the first network element, and another parameter that is generated by the first network element and that participates in subsequent key calculation.</p><p id="p-0086" num="0085">According to still another aspect of this application, a method for performing verification by using a public key and a private key is provided, including: obtaining, by a second network element, second network identifier information based on first network identifier information by using a private key, where the second network element is a mobility management network element or a second security edge protection proxy; sending, by the second network element, a request message to a first network element, where the request message includes the first network identifier information and the second network identifier information, so that the first network element verifies the second network identifier information by using a public key corresponding to the private key, and the first network element is a data management network element or a first security edge protection proxy; and receiving, by the second network element, a response message from the first network element. In this aspect, when a home network receives a request message sent by a visited network, where network identifier information in the request message is signed by a network element in the visited network by using a private key, a network element in the home network verifies the network identifier information in the request message by using a preset public key corresponding to the private key, to protect the network from an attack from the visited network.</p><p id="p-0087" num="0086">In a possible implementation, the obtaining, by a second network element, second network identifier information based on first network identifier information by using a private key includes: obtaining, by the second network element, the second network identifier information by signing the first network identifier information and at least one of a random number and a session identifier by using the private key.</p><p id="p-0088" num="0087">In another possible implementation, the method further includes: sending, by the second network element, a registration request message to the first network element; and receiving, by the second network element, a registration response message from the first network element, where the registration response message includes the random number.</p><p id="p-0089" num="0088">According to still another aspect of this application, a second network element is provided. The second network element has a function of implementing behavior of the second network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0090" num="0089">In a possible implementation, the second network element includes: a processing unit, configured to obtain second network identifier information based on first network identifier information by using a private key, where the second network element is a mobility management network element or a second security edge protection proxy; and a communications unit, configured to send a request message to a first network element, where the request message includes the first network identifier information and the second network identifier information, so that the first network element verifies the second network identifier information by using a public key corresponding to the private key, and the first network element is a data management network element or a first security edge protection proxy. The communications unit is further configured to receive a response message from the first network element.</p><p id="p-0091" num="0090">In another possible implementation, the second network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: obtaining second network identifier information based on first network identifier information by using a private key, where the second network element is a mobility management network element or a second security edge protection proxy; sending a request message to a first network element through the communications interface, where the request message includes the first network identifier information and the second network identifier information, so that the first network element verifies the second network identifier information by using a public key corresponding to the private key, and the first network element is a data management network element or a first security edge protection proxy; and receiving a response message from the first network element through the communications interface.</p><p id="p-0092" num="0091">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the second network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0093" num="0092">In the foregoing two aspects, that the second network identifier information is obtained based on the first network identifier information by using the private key includes one of the following cases:</p><p id="p-0094" num="0093">Case 1: The second network identifier information is obtained based on the first network identifier information only by using the private key. For example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0095" num="0094">Case 2: The second network identifier information is obtained based on the first network identifier information by using the private key and other content. For example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0096" num="0095">In the foregoing case 2, the &#x201c;other content&#x201d; may be at least one of the following: a public key preset in the first network element, a public key in a private-public key pair generated by the first network element, and another parameter that is generated by the first network element and that participates in subsequent key calculation.</p><p id="p-0097" num="0096">According to still another aspect of this application, a method for performing verification by using a public key and a private key is provided, including: receiving, by a second network element, a deregistration message from a first network element, where the deregistration message includes second network identifier information, the second network identifier information is obtained based on first network identifier information by using a private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying, by the second network element, the second network identifier information by using a public key corresponding to the private key; and sending, by the second network element, a deregistration response message to the first network element based on a verification result of the second network identifier information. In this aspect, when a visited network receives a deregistration message sent by a home network, where network identifier information in the deregistration message is signed by a network element in the home network by using a private key, a network element in the visited network verifies the network identifier information in the deregistration message by using a preset public key corresponding to the private key, to protect the network from an attack from the home network.</p><p id="p-0098" num="0097">According to still another aspect of this application, a second network element is provided. The second network element has a function of implementing behavior of the second network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0099" num="0098">In a possible implementation, the second network element includes: a communications unit, configured to receive a deregistration message from a first network element, where the deregistration message includes second network identifier information, the second network identifier information is obtained based on first network identifier information by using a private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and a processing unit, configured to verify the second network identifier information by using a public key corresponding to the private key. The communications unit is further configured to send a deregistration response message to the first network element based on a verification result of the second network identifier information.</p><p id="p-0100" num="0099">In another possible implementation, the second network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: receiving a deregistration message from a first network element through the communications interface, where the deregistration message includes second network identifier information, the second network identifier information is obtained based on first network identifier information by using a private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying the second network identifier information by using a public key corresponding to the private key; and sending, through the communications interface, a deregistration response message to the first network element based on a verification result of the second network identifier information.</p><p id="p-0101" num="0100">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the second network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0102" num="0101">In the foregoing two aspects, that the second network identifier information is obtained based on the first network identifier information by using the private key includes one of the following cases:</p><p id="p-0103" num="0102">Case 1: The second network identifier information is obtained based on the first network identifier information only by using the private key. For example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of a random number and a session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of a random number and a session identifier, so as to obtain the second network identifier information.</p><p id="p-0104" num="0103">Case 2: The second network identifier information is obtained based on the first network identifier information by using the private key and other content. For example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of a random number and a session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of a random number and a session identifier, so as to obtain the second network identifier information.</p><p id="p-0105" num="0104">In the foregoing case 2, the &#x201c;other content&#x201d; may be at least one of the following: a public key preset in the first network element, a public key in a private-public key pair generated by the first network element, and another parameter that is generated by the first network element and that participates in subsequent key calculation.</p><p id="p-0106" num="0105">According to still another aspect of this application, a method for performing verification by using encryption information is provided, including: receiving, by a first network element, a registration request message from a second network element, where the registration request message includes a user identifier, first network identifier information, and encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying, by the first network element, the registration request message by using the encryption information; and sending, by the first network element, a registration response message to the second network element. In this aspect, when receiving a registration request message from a visited network, a home network verifies the registration request message by using encryption information, to avoid a spoofing attack from the visited network.</p><p id="p-0107" num="0106">Correspondingly, according to still another aspect of this application, a first network element is provided. The first network element has a function of implementing behavior of the first network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0108" num="0107">In a possible implementation, the first network element includes: a communications unit, configured to receive a registration request message from a second network element, where the registration request message includes a user identifier, first network identifier information, and encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and a processing unit, configured to verify the registration request message by using the encryption information. The communications unit is further configured to send a registration response message to the second network element.</p><p id="p-0109" num="0108">In another possible implementation, the first network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: receiving a registration request message from a second network element through the communications interface, where the registration request message includes a user identifier, first network identifier information, and encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying the registration request message by using the encryption information; and controlling the communications interface to send a registration response message to the second network element.</p><p id="p-0110" num="0109">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the first network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0111" num="0110">According to still another aspect of this application, another method for performing verification by using encryption information is provided, including: obtaining, by a first network element, encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or generating, by a first network element, random information as encryption information; sending, by the first network element, a deregistration message to a second network element, where the deregistration message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and receiving, by the first network element, a deregistration response message from the second network element. In this aspect, when sending a deregistration message to a visited network, a home network adds encryption information into the deregistration message, so that the visited network can verify the deregistration message by using the encryption information, to avoid a spoofing attack from the home network.</p><p id="p-0112" num="0111">Correspondingly, according to still another aspect of this application, a first network element is provided. The first network element has a function of implementing behavior of the first network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0113" num="0112">In a possible implementation, the first network element includes: a processing unit, configured to: obtain encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or generate random information as encryption information; and a communications unit, configured to send deregistration message to a second network element, where the deregistration message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy. The communications unit is further configured to receive a deregistration response message from the second network element.</p><p id="p-0114" num="0113">In another possible implementation, the first network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: obtaining encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or generating random information as encryption information; controlling the communications interface to send deregistration message to a second network element, where the deregistration message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and receiving a deregistration response message from the second network element through the communications interface.</p><p id="p-0115" num="0114">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the first network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0116" num="0115">According to still another aspect of this application, still another method for performing verification by using encryption information is provided, including: obtaining, by a second network element, encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or generating, by a second network element, random information as encryption information; sending, by the second network element, a registration request message to a first network element, where the registration request message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy; and receiving, by the second network element, a registration response message from the first network element. In this aspect, when sending a registration request message to a home network, a visited network adds encryption information into the registration request message, so that the home network can verify the registration request message by using the encryption information, to avoid a spoofing attack from the visited network.</p><p id="p-0117" num="0116">Correspondingly, according to still another aspect of this application, a second network element is provided. The second network element has a function of implementing behavior of the second network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0118" num="0117">In a possible implementation, the second network element includes: a processing unit, configured to: obtain encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or generate random information as encryption information; and a communications unit, configured to send a registration request message to a first network element, where the registration request message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy. The communications unit is further configured to receive a registration response message from the first network element.</p><p id="p-0119" num="0118">In another possible implementation, the second network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: obtaining encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or generating random information as encryption information; controlling the communications interface to send a registration request message to a first network element, where the registration request message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy; and receiving a registration response message from the first network element through the communications interface.</p><p id="p-0120" num="0119">Based on a same invention concept, for problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the second network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is provided herein.</p><p id="p-0121" num="0120">According to still another aspect of this application, still another method for performing verification by using encryption information is provided, including: receiving, by a second network element, a deregistration message from a first network element, where the deregistration message includes first network identifier information and encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying, by the second network element, the deregistration message by using the encryption information; and sending, by the second network element, a deregistration response message to the first network element. In this aspect, when receiving a deregistration message from a home network, a visited network verifies the deregistration message by using encryption information, to avoid a spoofing attack from the home network.</p><p id="p-0122" num="0121">Correspondingly, according to still another aspect of this application, a second network element is provided. The second network element has a function of implementing behavior of the second network element in the foregoing method. The function may be implemented by using hardware, or may be implemented by executing corresponding software by hardware. The hardware or the software includes one or more modules corresponding to the function.</p><p id="p-0123" num="0122">In a possible implementation, the second network element includes: a communications unit, configured to receive a deregistration message from a first network element, where the deregistration message includes first network identifier information and encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and a processing unit, configured to verify the deregistration message by using the encryption information. The communications unit is further configured to send a deregistration response message to the first network element.</p><p id="p-0124" num="0123">In another possible implementation, the second network element includes a communications interface, a memory, and a processor. The memory stores a group of program code, and the processor is configured to invoke the program code stored in the memory, to perform the following operations: receiving a deregistration message from a first network element through the communications interface, where the deregistration message includes first network identifier information and encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; verifying the deregistration message by using the encryption information; and controlling the communications interface to send a deregistration response message to the first network element.</p><p id="p-0125" num="0124">For problem-resolving principles and beneficial effects of the apparatus, refer to the foregoing possible method implementations of the second network element and the brought beneficial effects. Therefore, for implementation of the apparatus, refer to implementation of the method. No repeated description is herein.</p><p id="p-0126" num="0125">According to still another aspect of this application, a computer readable storage medium is provided. The computer readable storage medium stores an instruction. When the instruction is run on a computer, the computer is enabled to perform the methods in the foregoing aspects.</p><p id="p-0127" num="0126">According to still another aspect of this application, a computer program product including an instruction is provided. When the computer program product is run on a computer, the computer is enabled to perform the methods in the foregoing aspects.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. <b>1</b><i>a </i></figref>and <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> are schematic architectural diagrams of a 5th generation mobile communications system;</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram of a key architecture of a 5th generation mobile communications system;</p><p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>2</b> are a schematic diagram of a spoofing attack from an AMF in a serving network;</p><p id="p-0131" num="0130"><figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>2</b> are a schematic diagram of a spoofing attack from a UDM in a home network;</p><p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic structural diagram of a communications system according to an embodiment of this application;</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic interaction flowchart of a method for performing verification by using a shared key according to an embodiment of this application;</p><p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. <b>6</b><i>a </i></figref>is a schematic interaction flowchart of an example of a method for performing verification by using a shared key in a scenario in which an AMF does not change when a registration request message is processed according to an embodiment of this application;</p><p id="p-0135" num="0134"><figref idref="DRAWINGS">FIG. <b>6</b><i>b </i></figref>is a schematic interaction flowchart of an example of a method for performing verification by using a shared key in a scenario in which an AMF changes when a registration request message is processed according to an embodiment of this application;</p><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>7</b><i>a </i></figref>to <figref idref="DRAWINGS">FIG. <b>7</b><i>c </i></figref>are schematic structural diagrams of a security edge protection proxy;</p><p id="p-0137" num="0136"><figref idref="DRAWINGS">FIG. <b>8</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>8</b>B</figref> are a schematic interaction flowchart of performing verification by a SEPP2 by using a shared key;</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic interaction flowchart of another method for performing verification by using a shared key according to an embodiment of this application;</p><p id="p-0139" num="0138"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> are a schematic interaction flowchart of generating a shared key by an AUSF according to an embodiment of this application;</p><p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> are a schematic interaction flowchart of generating a shared key by an SEAF according to an embodiment of this application;</p><p id="p-0141" num="0140"><figref idref="DRAWINGS">FIG. <b>12</b>-<b>1</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>1</b>B</figref> are a schematic interaction flowchart of generating a shared key by an AMF according to an embodiment of this application;</p><p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. <b>12</b>-<b>2</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>2</b>B</figref> are a schematic interaction flowchart of generating a shared key by a UDM according to an embodiment of this application;</p><p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>B</figref> are a schematic interaction flowchart of generating encryption information by an AUSF according to an embodiment of this application;</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b>B</figref> are a schematic interaction flowchart of generating encryption information by a UDM according to an embodiment of this application;</p><p id="p-0145" num="0144"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a schematic interaction flowchart of a method for performing verification by using a public key and a private key according to an embodiment of this application;</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a schematic diagram of an example of a complete interaction procedure of protecting registration by using a preset public key and a preset private key in a scenario 1 according to an embodiment of this application;</p><p id="p-0147" num="0146"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a schematic interaction flowchart of another method for performing verification by using a public key and a private key according to an embodiment of this application;</p><p id="p-0148" num="0147"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a schematic diagram of an example of a complete interaction procedure of protecting deregistration by using a preset public key and a preset private key in a scenario 2 according to an embodiment of this application;</p><p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a possible example block diagram of an apparatus according to an embodiment of this application;</p><p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a possible example block diagram of another apparatus according to an embodiment of this application; and</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a schematic interaction flowchart of another method for performing verification by using a PLMN ID according to an embodiment of this application.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0152" num="0151">The following describes the embodiments of this application with reference to the accompanying drawings in the embodiments of this application.</p><p id="p-0153" num="0152">First, an authentication procedure and a registration procedure of UE are described.</p><p id="p-0154" num="0153">When the UE roams to a serving network, the UE registers with a visited network. As shown in <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>2</b> or <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>2</b>, the authentication procedure and the registration procedure of the UE are as follows:</p><p id="p-0155" num="0154">S<b>301</b>. The UE sends a registration request message (registration request) to an AMF, where the registration request includes a user identifier (for example, a SubID or an SUPI).</p><p id="p-0156" num="0155">S<b>302</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to an AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a PLMN ID or an AMF ID) related to the serving network.</p><p id="p-0157" num="0156">S<b>303</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to a UDM, where the authentication information request includes the user identifier and the identifier (for example, the PLMN ID or the AMF ID) related to the serving network.</p><p id="p-0158" num="0157">S<b>304</b>. After receiving the authentication information request message, the UDM selects an authentication method based on configuration, and delivers an authentication vector.</p><p id="p-0159" num="0158">S<b>305</b>. The UE, the AMF, and the AUSF complete a bidirectional authentication process based on a process defined in 3GPP 33.501.</p><p id="p-0160" num="0159">S<b>306</b>. The AUSF performs authentication confirmation in the home network according to an algorithm defined in 3GPP 33.501, and notifies the UDM of an authentication confirmation result, where a message sent by the AUSF to the UDM includes the SUPI, the identifier (for example, the PLMN ID or the AMF ID) related to the serving network, and an authentication result.</p><p id="p-0161" num="0160">S<b>307</b>. The AMF sends a registration message, where the message carries the SUPI and the identifier related to the serving network.</p><p id="p-0162" num="0161">S<b>308</b>. The UDM/ARPF returns a registration result to the AMF.</p><p id="p-0163" num="0162">S<b>309</b>. If the UDM/ARPF has a record of an old AMF, the UDM instructs the old AMF to deregister a user corresponding to the SUPI.</p><p id="p-0164" num="0163">S<b>310</b>. The old AMF deletes an MM context of the user corresponding to the SUPI, and instructs a related SMF to release a PDU session.</p><p id="p-0165" num="0164">This application provides a communications system. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic structural diagram of a communications system <b>400</b> according to an embodiment of this application. The communications system <b>400</b> may include a first network element <b>41</b> and a second network element <b>42</b>. The first network element <b>41</b> is a network element in a visited network, and the second network element <b>42</b> is a network element in a home network. Further, the communications system <b>400</b> may further include a terminal device (not shown). The first network element <b>41</b> may be an access and mobility management network element or a security edge proxy gateway in the visited network. The second network element <b>42</b> may be a unified data management network element or a security edge proxy gateway in the home network. It should be noted that, the access and mobility management network element and the unified data management network element each are only a name, and the name imposes no limitation on the network element. For example, the access and mobility management network element may be replaced with an &#x201c;access and mobility management function&#x201d; or have another name. In addition, the access and mobility management network element may also be corresponding to a network element that includes another function in addition to the access and mobility management function. The unified data management network element may be replaced with a &#x201c;unified data management function&#x201d; or have another name. In addition, the unified data management network element may also be corresponding to a network element that includes another function in addition to the unified data management function. Descriptions are centrally provided herein, and details are not described below again.</p><p id="p-0166" num="0165">In this application, when receiving a registration request message from a visited network, a home network verifies the registration request message by using a shared key, to avoid a spoofing attack from the visited network and avoid a spoofing attack from a network. When receiving a deregistration message from the home network, the visited network verifies the deregistration message by using a shared key, to avoid a spoofing attack from the home network.</p><p id="p-0167" num="0166">As shown in <figref idref="DRAWINGS">FIG. <b>1</b><i>a </i></figref>and <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, a next generation communications system is used as an example. As shown in <figref idref="DRAWINGS">FIG. <b>1</b><i>a</i></figref>, the communications system may include an AMF and a UDM. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the communications system includes an AMF and a UDM, and further includes a security edge protection proxy hSEPP in a home network and a security edge protection proxy vSEPP in a visited network. If the first network element <b>41</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref> is an access and mobility management network element, the first network element <b>41</b> may be an AMF herein. If the first network element <b>41</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a security edge proxy gateway, the first network element <b>41</b> may be a security anchor function (SEAF) entity herein. The second network element <b>42</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref> may be a UDM/authentication credential repository and processing function (ARPF) entity herein. The AMF is mainly responsible for access management of a terminal device. The UDM is responsible for centrally managing subscription data of the terminal device. It should be noted that, the AMF and the SEAF may be separately disposed, and in this case, communication between the AMF and the home network needs to be forwarded by the SEAF, or the AMF and the SEAF may be integrated. The ARPF may be a function entity that is a part of the UDM. The communications system may further include an access network (AN) device or a radio access network (RAN) device (radio), an AUSF, and the like.</p><p id="p-0168" num="0167">In <figref idref="DRAWINGS">FIG. <b>1</b><i>a </i></figref>and <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, another function entity may be further included, and only several function entities in this application are mainly described herein. The entities are connected to each other through an Nx interface (for example, N1 or N2 in the figure). It should be noted that, the access and mobility management function entity and the unified data management function entity each are only a name, and the name imposes no limitation on the entity. For example, the access and mobility management function entity may be replaced with an &#x201c;access and mobility management function&#x201d; or have another name. In addition, the access and mobility management function entity may also be corresponding to an entity that includes another function in addition to the access and mobility management function. The unified data management function entity may be replaced with a &#x201c;unified data management function&#x201d; or have another name. In addition, the unified data management function entity may also be corresponding to an entity that includes another function in addition to the unified data management function. Descriptions are centrally provided herein, and details are not described below again.</p><p id="p-0169" num="0168">In a specific implementation, any function entity or network element in the system shown in <figref idref="DRAWINGS">FIG. <b>1</b><i>a</i></figref>, <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, or <figref idref="DRAWINGS">FIG. <b>4</b></figref> may be implemented by one entity device, or may be jointly implemented by a plurality of entity devices. This is not specifically limited in the embodiments of the present disclosure. To be specific, it may be understood that the any function entity or network element in the system may be a logical function module in an entity device or a logical function module including a plurality of entity devices. This is not specifically limited in the embodiments of the present disclosure.</p><p id="p-0170" num="0169">The terminal device shown in <figref idref="DRAWINGS">FIG. <b>1</b><i>a</i></figref>, <figref idref="DRAWINGS">FIG. <b>1</b><i>b</i></figref>, or <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a device with a wireless receiving/sending function. The terminal device may be deployed on land, and includes an indoor device, an outdoor device, a hand-held device, a wearable device, or a vehicle-mounted device; or may be deployed on the water (for example, on a ship); or may be deployed in the air (for example, on an airplane, a balloon, or a satellite). The terminal device may be a mobile phone), a tablet computer, a computer with a wireless receiving/sending function, a virtual reality (VR) terminal device, an augmented reality (AR) terminal device, a wireless terminal in industrial control, a wireless terminal in self driving, a wireless terminal in telemedicine, a wireless terminal in a smart grid, a wireless terminal in transportation safety, a wireless terminal in a smart city, a wireless terminal in a smart home, or the like. An application scenario is not limited in the embodiments of this application. The terminal device may be sometimes referred to as user equipment (UE), an access terminal device, a UE unit, a UE station, a mobile station a remote station, a remote terminal device, a mobile device, a UE terminal device, a terminal, a wireless communications device, a UE agent, a UE apparatus, or the like.</p><p id="p-0171" num="0170">Network architectures and service scenarios that are described in the embodiments of this application are intended to more clearly describe the technical solutions in the embodiments of this application, but are not intended to limit the technical solutions provided in the embodiments of this application. A person of ordinary skill in the art may know that as the network architectures evolve and a new service scenario emerges, the technical solutions provided in the embodiments of this application are also applicable to a similar technical problem.</p><p id="p-0172" num="0171">It should be noted that, the terms &#x201c;system&#x201d; and &#x201c;network&#x201d; may be used interchangeably in the embodiments of this application. &#x201c;A plurality of&#x201d; means two or more than two, and therefore, &#x201c;a plurality of&#x201d; may also be understood as &#x201c;at least two&#x201d; in the embodiments of this application. The term &#x201c;and/or&#x201d; describes an association relationship for describing associated objects and represents that three relationships may exist. For example, A and/or B may represent the following three cases: Only A exists, both A and B exist, and only B exists. In addition, the character &#x201c;I&#x201d; generally indicates an &#x201c;or&#x201d; relationship between the associated objects unless otherwise specified. In addition, to clearly describe the technical solutions in the embodiments of this application, terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; are used in the embodiments of this application to distinguish between same items or similar items with basically same functions and purposes. A person skilled in the art may understand that the terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; do not limit a quantity or an execution sequence, and the terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; do not mean that objects are definitely different.</p><p id="p-0173" num="0172"><figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>2</b> are a schematic diagram of a spoofing attack from an AMF in a serving network. A malicious AMF in a serving network B may send a registration message to a UDM in a home network at any time (scenario 1). The message carries an SUPI and a PLMN ID A of a serving network A. The UDM finds, by using a table, that authentication on the SUPI succeeds in the serving network A corresponding to the PLMN ID A. Therefore, the UDM instructs an old AMF to deregister a user corresponding to the SUPI. The old AMF deletes an MM context of the user corresponding to the SUPI, and instructs a related SMF to release a PDU session. Consequently, the user is forced to be deregistered. This is equivalent to a denial of service DOS attack. Further, an attacker may send a large quantity of spoofed registration messages, to enable a large quantity of users to be deregistered.</p><p id="p-0174" num="0173">The embodiments of this application provide a method for performing verification by using a shared key and an apparatus. When receiving a registration request message from a visited network, a home network verifies the registration request message by using a shared key, to avoid a spoofing attack from the visited network.</p><p id="p-0175" num="0174"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic interaction flowchart of a method for performing verification by using a shared key according to an embodiment of this application. The method is applied to the scenario 1, and the method may include the following steps.</p><p id="p-0176" num="0175">S<b>501</b>. A second network element processes first network identifier information by using a shared key, to obtain second network identifier information, where the shared key is a key used between a first network element and the second network element, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a first mobility management network element or a second security edge protection proxy.</p><p id="p-0177" num="0176">S<b>502</b>. The second network element sends a registration request message to the first network element, where the registration request message includes a user identifier, the first network identifier information, and the second network identifier information; and the first network element receives the registration request message from the second network element, where the registration request message includes the user identifier, the first network identifier information, and the second network identifier information, and the second network identifier information is obtained by processing the first network identifier information by using the shared key, and the shared key is a key used between the first network element and the second network element.</p><p id="p-0178" num="0177">S<b>503</b>. The first network element verifies the registration request message by using the shared key.</p><p id="p-0179" num="0178">S<b>504</b>. The first network element sends a registration response message to the second network element, and the second network element receives the registration response message from the first network element.</p><p id="p-0180" num="0179">In this embodiment, the first network element may be a data management network element such as a UDM, or the first network element may be a first security edge protection proxy. The second network element is a mobility management network element such as an AMF, or the second network element may be a second security edge protection proxy. For example, the following case may exist: The first network element may be a UDM, and the second network element may be an AMF; or the first network element may be a UDM, and the second network element may be a second security edge protection proxy; or the first network element may be a first security edge protection proxy, and the second network element may be an AMF; or the first network element may be a first security edge protection proxy, and the second network element may be a second security edge protection proxy. The security edge protection proxy is described in detail below. In descriptions of this embodiment, an example in which the first network element is a UDM and the second network element is an AMF is used for description.</p><p id="p-0181" num="0180">To avoid a spoofed registration attack from an AMF in the scenario 1, when UE initially registers with a serving network, a key Kamf-udm is shared between an AMF in the serving network and a UDM in a home network, and the shared key is a key used between the AMF and the UDM. When the AMF subsequently sends a registration request message to the UDM, the AMF calculates a key material by using the shared key and a PLMN ID of the AMF, and sends the key material to the UDM. The UDM verifies the key material based on the shared Kamf-udm. Only after the verification succeeds, a subsequent step can continue to be performed. If the verification fails, a registration procedure is directly terminated, or the AMF is instructed to perform an AKA procedure again. Because an attacker does not know the shared key Kamf-udm, this type of spoofing attack from a network can be effectively prevented.</p><p id="p-0182" num="0181">In specific implementation, before the AMF sends the registration request message to the UDM, the AMF needs to process the first network identifier information by using the shared key. The first network identifier information may be an AMF ID or a PLMN ID.</p><p id="p-0183" num="0182">Therefore, before S<b>501</b>, the AMF needs to obtain the shared key.</p><p id="p-0184" num="0183">In an implementation, the AMF generates the shared key.</p><p id="p-0185" num="0184">In another implementation, if the AMF and an SEAF are separately disposed, and the second network element is the first mobility management network element (namely, the AMF), the method further includes the following: The second network element receives the shared key from a second security anchor function network element (namely, the SEAF).</p><p id="p-0186" num="0185">In still another implementation, the AMF obtains the shared key generated by an AUSF.</p><p id="p-0187" num="0186">Generation and transfer of the shared key are described in detail below.</p><p id="p-0188" num="0187">After obtaining the shared key, the AMF processes the first network identifier information by using the shared key, to obtain the second network identifier information. The first network identifier information may be a PLMN ID or an AMF ID, and the second network identifier information is information obtained by processing the first network identifier information by using the shared key.</p><p id="p-0189" num="0188">Specifically, that a second network element processes first network identifier information by using a first shared key includes the following:</p><p id="p-0190" num="0189">The second network element encrypts the first network identifier information by using the shared key; or</p><p id="p-0191" num="0190">the second network element encrypts the first network identifier information and a first random number by using the shared key; or</p><p id="p-0192" num="0191">the second network element performs a message authentication code operation on the first network identifier information and the first shared key; or</p><p id="p-0193" num="0192">the second network element performs a message authentication code operation on the first network identifier information, a first random number, and the first shared key; or the second network element performs a hash operation on the first network identifier information and the first shared key; or the second network element performs a hash operation on the first network identifier information, a first random number, and the first shared key.</p><p id="p-0194" num="0193">For example, the AMF optionally generates a random number nonce, and uses Kamf-udm and the optional nonce to generate a key Kamf-udm* for one-time use, to protect the PLMN ID. There may be the following three processing methods:</p><p id="p-0195" num="0194">encryption protection: ENC (Kamf-udm*, plmnid, NONCE), where nonce herein is optional;</p><p id="p-0196" num="0195">message authentication code operation (also referred to as &#x201c;verification information protection&#x201d;): MAC (Kamf-udm*, plmnid, NONCE), where nonce herein is optional; and</p><p id="p-0197" num="0196">hash operation (also referred to as &#x201c;digest value protection&#x201d;): hash (Kamf-udm*, plmnid, NONCE), where nonce herein is optional.</p><p id="p-0198" num="0197">The AMF stores Kamf-udm* as Kamf-udm.</p><p id="p-0199" num="0198">The UDM receives the registration request message sent by the AMF. In S<b>503</b>, the UDM verifies the registration request message by using the shared key.</p><p id="p-0200" num="0199">Before performing verification, the UDM needs to obtain the shared key. Further, the UDM pre-stores a correspondence between a shared key and a user identifier and/or network identifier information based on a user identifier and/or network identifier information. In this case, before S<b>503</b>, the method further includes the following:</p><p id="p-0201" num="0200">The first network element searches for, based on the correspondence between a shared key and at least one of a user identifier and network identifier information, the shared key corresponding to at least one of the user identifier and the first network identifier information that are included in the registration request message.</p><p id="p-0202" num="0201">Further, the correspondence further includes the authentication result in <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>2</b> or <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>2</b>. If the UDM finds, based on the user identifier and/or the network identifier information, that the authentication result indicates that authentication fails, the UDM does not need to perform the verification process in S<b>503</b>, but directly notifies the AMF that registration fails or instructs the AMF to perform AKA again.</p><p id="p-0203" num="0202">The UDM obtains the shared key for storage in the following several implementations:</p><p id="p-0204" num="0203">In an implementation, before S<b>501</b>, if the first network element is a data management network element, the method further includes the following:</p><p id="p-0205" num="0204">The first network element receives the shared key from an authentication server network element, or the first network element generates the shared key; or if the first network element is a first security edge protection proxy, the method further includes the following:</p><p id="p-0206" num="0205">The first network element receives the shared key from an authentication server network element or a data management network element.</p><p id="p-0207" num="0206">Specifically, the first network element is a data management network element, and that the first network element receives the shared key from an authentication server network element includes the following:</p><p id="p-0208" num="0207">The first network element receives an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is generated by the authentication server network element, or the shared key is generated and sent to the authentication server network element by a security anchor network element, or the shared key is generated and sent to the authentication server network element by the second network element, and the second network element is the mobility management network element.</p><p id="p-0209" num="0208">If the shared key is generated by the AUSF, and the first network element is a data management network element, the method further includes the following:</p><p id="p-0210" num="0209">The first network element receives an authentication information request from the authentication server network element, where the authentication information request includes at least one of the user identifier and the first network identifier information; and</p><p id="p-0211" num="0210">the first network element sends an authentication vector to the authentication server network element.</p><p id="p-0212" num="0211">That the first network element receives the shared key from an authentication server network element includes the following:</p><p id="p-0213" num="0212">The first network element receives an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is determined by the authentication server network element based on the authentication vector.</p><p id="p-0214" num="0213">If the shared key is generated by the SEAF, the method further includes the following:</p><p id="p-0215" num="0214">The first network element receives an authentication information request from the authentication server network element, where the authentication information request includes at least one of the user identifier and the first network identifier information; and</p><p id="p-0216" num="0215">the first network element sends an authentication vector to the authentication server network element, so that the authentication server network element sends the authentication vector to a security anchor network element.</p><p id="p-0217" num="0216">That the first network element receives the shared key from an authentication server network element includes the following:</p><p id="p-0218" num="0217">The first network element receives an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is determined by the security anchor network element based on the authentication vector and sent by the security anchor network element to the authentication server network element.</p><p id="p-0219" num="0218">If the shared key is generated by the AMF, the method further includes the following:</p><p id="p-0220" num="0219">The first network element receives an authentication information request from the authentication server network element, where the authentication information request includes at least one of the user identifier and the first network identifier information; and</p><p id="p-0221" num="0220">the first network element sends an authentication vector to the authentication server network element, so that the authentication server network element sends the authentication vector to the second network element.</p><p id="p-0222" num="0221">That the first network element receives the shared key from an authentication server network element includes the following:</p><p id="p-0223" num="0222">The first network element receives an authentication confirmation notification response message from the authentication server network element, where the authentication confirmation notification response message includes the shared key, and the shared key is determined by the second network element based on the authentication vector and sent by the second network element to the authentication server network element.</p><p id="p-0224" num="0223">In the foregoing implementation, the authentication confirmation notification response message further includes a result obtained after the authentication server network element authenticates a terminal device.</p><p id="p-0225" num="0224">Generation and transfer processes of the shared key are described in detail below.</p><p id="p-0226" num="0225">Further, the method further includes the following:</p><p id="p-0227" num="0226">The first network element stores a correspondence between the shared key and at least one of the user identifier and the first network identifier information, and adds the correspondence, between the shared key and at least one of the user identifier and the first network identifier information, to the correspondence between a shared key and at least one of a user identifier and network identifier information.</p><p id="p-0228" num="0227">For the verification process, specifically, in an implementation, the processing the first network identifier information by using a shared key includes any one type of the following processing: encrypting the first network identifier information by using the shared key, encrypting the first network identifier information and a random number by using the shared key, performing a message authentication code operation on the first network identifier information and the shared key, performing a message authentication code operation on the first network identifier information, a random number, and the shared key, performing a hash operation on the first network identifier information and the shared key, and performing a hash operation on the first network identifier information, a random number, and the shared key.</p><p id="p-0229" num="0228">In this case, S<b>503</b> specifically includes the following: The first network element obtains third network identifier information based on the first network identifier information by using the shared key; and the first network element verifies the second network identifier information by using the third network identifier information.</p><p id="p-0230" num="0229">This implementation is a ciphertext-based verification manner. If encryption processing is performed, the first network identifier information is plaintext information, the third network identifier information obtained by encrypting the first network identifier information by using the shared key is ciphertext information, and the second network identifier information carried in the registration request message is ciphertext information obtained by the AMF through encryption by using the shared key. If a MAC operation or a hash operation is performed, the third network identifier information is a MAC value or a hash value of the first network identifier information.</p><p id="p-0231" num="0230">That the first network element verifies the second network identifier information by using the third network identifier information specifically includes the following:</p><p id="p-0232" num="0231">The first network element verifies whether the third network identifier information is consistent with the second network identifier information.</p><p id="p-0233" num="0232">If encryption processing is performed, the verification process is to determine, through comparison, whether the second network identifier information obtained by the AMF through encryption is the same as the third network identifier information obtained by the UDM through encryption. If a MAC operation is performed, the verification process is to determine, through comparison, whether the third network identifier information and the second network identifier information that are MAC values are the same. If a hash operation is performed, the verification process is to determine, through comparison, whether the third network identifier information and the second network identifier information that are hash values are the same.</p><p id="p-0234" num="0233">In another implementation, S<b>503</b> specifically includes the following: The first network element obtains fourth network identifier information based on the second network identifier information by using the shared key; and the first network element verifies the first network identifier information by using the fourth network identifier information.</p><p id="p-0235" num="0234">To be specific, the UDM decrypts the second network identifier information (ciphertext information) by using the shared key, to obtain the fourth network identifier information (plaintext information), and compares the fourth network identifier information with the first network identifier information (plaintext information) sent by the AMF.</p><p id="p-0236" num="0235">That the first network element verifies the first network identifier information by using the fourth network identifier information specifically includes the following:</p><p id="p-0237" num="0236">The first network element verifies whether the fourth network identifier information is consistent with the first network identifier information.</p><p id="p-0238" num="0237">To be specific, the verification succeeds if the fourth network identifier information obtained by the UDM through decryption is the same as the first network identifier information sent by the AMF.</p><p id="p-0239" num="0238">After verifying the registration request message, the UDM needs to feed back a registration response message to the AMF. The registration response message is a registration success response message or a registration failure response message. In this case, S<b>504</b> specifically includes the following:</p><p id="p-0240" num="0239">If the verification succeeds, the first network element sends the registration success response message to the second network element; or</p><p id="p-0241" num="0240">if the verification fails, the first network element sends the registration failure response message to the second network element.</p><p id="p-0242" num="0241">Specifically, that the verification succeeds includes: the third network identifier information is consistent with the second network identifier information, or the fourth network identifier information is consistent with the first network identifier information; or</p><p id="p-0243" num="0242">that the verification fails includes: the third network identifier information is inconsistent with the second network identifier information, or the fourth network identifier information is inconsistent with the first network identifier information.</p><p id="p-0244" num="0243">If the AMF receives the registration failure response message, the AMF can perform the authentication procedure again.</p><p id="p-0245" num="0244">The first network identifier information is carried in a public land mobile network identifier parameter or a mobility management network element identifier parameter, or the first network identifier information is carried in a public land mobile network identifier information element or a mobility management network element identifier information element.</p><p id="p-0246" num="0245">The following describes, based on the scenario 1, a procedure of performing verification by using a shared key in case of a spoofing attack from a network.</p><p id="p-0247" num="0246">For the scenario 1, a specific procedure is different according to whether an AMF changes when a registration message and an authentication message are processed. The following separately provides descriptions.</p><p id="p-0248" num="0247">(1) The AMF does not change when a registration request message is processed.</p><p id="p-0249" num="0248">As shown in <figref idref="DRAWINGS">FIG. <b>6</b><i>a</i></figref>, a main procedure is as follows.</p><p id="p-0250" num="0249">S<b>601</b>. UE sends a registration request message and a subsequent message to the AMF. For details, refer to S<b>301</b> and S<b>302</b> in the authentication procedure and the registration procedure of the UE that are shown in <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> or <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b>.</p><p id="p-0251" num="0250">S<b>602</b>. The AMF optionally generates a random number nonce, and uses Kamf-udm and the optional nonce to generate a key Kamf-udm* for one-time use, to protect a PLMN ID. There may be the following three processing methods:</p><p id="p-0252" num="0251">encryption protection: ENC (Kamf-udm*, plmnid, NONCE), where nonce herein is optional;</p><p id="p-0253" num="0252">verification information protection: MAC (Kamf-udm*, plmnid, NONCE), where nonce herein is optional; and</p><p id="p-0254" num="0253">digest value protection: hash (Kamf-udm*, plmnid, NONCE), where nonce herein is optional.</p><p id="p-0255" num="0254">The AMF stores Kamf-udm* as Kamf-udm.</p><p id="p-0256" num="0255">S<b>603</b>. The AMF sends a registration request message (for example, Nudm_UECM_Registration) including the optional nonce and information about the protected PLMN ID to a UDM, where nonce may be alternatively a session ID of a random message, and the information about the protected PLMN ID is, for example, an encrypted PLMN ID, a MAC value of a PLMN ID, or a hash value of a PLMN ID.</p><p id="p-0257" num="0256">S<b>604</b>. After receiving the registration request message, the UDM verifies the registration request message. Specifically, the UDM performs the following operations:</p><p id="p-0258" num="0257">a. finding Kamf-udm based on an SUPI and the PLMN ID in the registration request message;</p><p id="p-0259" num="0258">b. generating Kamf-udm* by using Kamf-udm and nonce;</p><p id="p-0260" num="0259">c. if the registration request message carries the encrypted PLMN ID, the UDM obtains a PLMN ID through decryption by using Kamf-udm*; compares the obtained PLMN ID with the PLMN ID carried in the registration request message; and if the obtained PLMN ID is consistent with the PLMN ID carried in the registration request message, the UDM accepts the current registration request message; or if the obtained PLMN ID is inconsistent with the PLMN ID carried in the registration request message, the UDM gives a rejection response and a rejection cause, so that the AMF can re-initiate an authentication procedure or reject the current registration based on the configuration rejection cause; or</p><p id="p-0261" num="0260">d. if the registration request message carries the MAC value or the hash value, the UDM calculates a MAC/hash value by using Kamf-udm* and nonce according to a same algorithm; compares the calculated MAC/hash value with the MAC/hash value carried in the registration request message; and if the calculated MAC/hash value is consistent with the MAC/hash value carried in the registration request message, the UDM accepts the current registration message; or if the calculated MAC/hash value is inconsistent with the MAC/hash value carried in the registration request message, the UDM gives a rejection response and a rejection cause, so that the AMF can re-initiate an authentication procedure or reject the current registration based on the configuration rejection cause; and</p><p id="p-0262" num="0261">d. updating and storing Kamf-udm* as Kamf-udm.</p><p id="p-0263" num="0262">S<b>605</b>. The UDM returns a registration response message (for example, Nudm_UECM_Registration response) to the SEAF/AMF.</p><p id="p-0264" num="0263">S<b>606</b>. The SEAF/AMF returns a registration response message to the UE.</p><p id="p-0265" num="0264">It should be noted that, when the AMF performs calculation through ENC/MAC/hash in the second step, the PLMN ID may be alternatively replaced with an AMF ID. In this case, when the UDM performing verification through ENC/MAC/hash in the fourth step, the UDM also needs to perform verification based on the AMF ID.</p><p id="p-0266" num="0265">(2) The AMF changes when a registration request message is processed.</p><p id="p-0267" num="0266">After the AMF changes during authentication, a new AMF does not have Kamf-udm, and therefore needs to negotiate with the old AMF about Kamf-udm*. In this case, the method further includes the following:</p><p id="p-0268" num="0267">The second network element sends a context obtaining request to the second mobility management network element.</p><p id="p-0269" num="0268">That the second network element receives the first shared key from a second mobility management network element includes the following:</p><p id="p-0270" num="0269">The second network element receives a context obtaining response from the second mobility management network element, where the context obtaining response includes the first shared key.</p><p id="p-0271" num="0270">The first shared key is generated based on a second shared key and at least one of a second random number and a third random number. The second shared key is a key used between the second mobility management network element and the first network element.</p><p id="p-0272" num="0271">The second random number is generated by the second mobility management network element, or the second random number is carried in the context obtaining request.</p><p id="p-0273" num="0272">Specifically, as shown in <figref idref="DRAWINGS">FIG. <b>6</b><i>b</i></figref>, a main procedure is as follows.</p><p id="p-0274" num="0273">S<b>601</b>&#x2032;. UE initiates a registration request message (Registration Request) and a subsequent message to the AMF. For details, refer to the first step to the seventh step in the prior art.</p><p id="p-0275" num="0274">S<b>602</b>&#x2032;. The new AMF requests a UE context from the old AMF, where the message optionally carries a random number nonce1.</p><p id="p-0276" num="0275">S<b>603</b>&#x2032;. The old AMF optionally generates nonce2, and the old AMF calculates Kamf-udm* by using nonce1, nonce2, and Kamf-udm, where Kamf-udm*=KDF (Kamf-udm, Nonce1, Nonce2).</p><p id="p-0277" num="0276">S<b>604</b>&#x2032;. The old AMF returns a response message of a UE context request message to the new AMF, where the message carries Kamf-udm*.</p><p id="p-0278" num="0277">S<b>605</b>&#x2032; to S<b>608</b>&#x2032;. Subsequent steps are the same as S<b>602</b> to S<b>606</b> existing when the AMF does not change. A difference lies in that a message sent by the AMF to the UDM carries nonce1 and nonce2. When calculating Kamf-udm*, the UDM uses Kamf-udm, nonce1, and nonce2.</p><p id="p-0279" num="0278">It should be noted that, a random number nonce may be generated by both or either of the new AMF and the old AMF. To be specific, a method for generating Kamf-udm* in S<b>603</b>&#x2032; includes the following:</p><p id="p-0280" num="0279">Kamf-udm*=KDF (Kamf-udm, Nonce1, Nonce2);</p><p id="p-0281" num="0280">Kamf-udm*=KDF (Kamf-udm, Nonce1); and</p><p id="p-0282" num="0281">Kamf-udm*=KDF (Kamf-udm, Nonce2).</p><p id="p-0283" num="0282">In conclusion, the AMF generates a key material of the PLMN ID by using Kamf-udm and the optional random number nonce. The UDM verifies the PLMN ID by using Kamf-udm and the key material, to avoid spoofed AMF registration.</p><p id="p-0284" num="0283">In addition, a security edge protection proxy (SEPP) is introduced into a 5G network as a security edge proxy gateway, to implement topology hiding and message filtering. Functions of the AMF and the UDM may also be transferred to the security edge proxy gateway.</p><p id="p-0285" num="0284">Because the SEPP has different deployment forms, for the attack scenario 1, as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, a detection point may be placed at a SEPP2 in a home network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, a detection point may be placed at an IPX2 SEPP closest to a home network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>, a detection point may be placed at a roaming hub SEPP closest to a home network. Therefore, before performing detection, the SEPP2, the IPX2 SEPP, or the roaming hub SEPP needs to obtain Kamf-udm from the UDM.</p><p id="p-0286" num="0285">Therefore, in the foregoing embodiment, the second network element may be an AMF, or may be a SEPP1 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, or an IPX1 SEPP closest to the home network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>. The first network element may be a UDM, or may be the SEPP2 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, or the IPX2 SEPP closest to the serving network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b></figref><i>c. </i></p><p id="p-0287" num="0286"><figref idref="DRAWINGS">FIG. <b>8</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>8</b>B</figref> are a schematic flowchart of performing detection by the SEPP2 for the attack scenario 1. A main procedure is as follows.</p><p id="p-0288" num="0287">S<b>801</b>. UE initiates a registration request message (Registration Request) to an AMF.</p><p id="p-0289" num="0288">S<b>802</b>. The AMF optionally generates a random number nonce, and uses Kamf-udm and the optional nonce to generate a key Kamf-udm* (Kamf-udm=KDF (Kamf-udm, Nonce)) for one-time use, to protect a PLMN ID.</p><p id="p-0290" num="0289">S<b>803</b>. The AMF sends a registration request message (for example, Nudm_UECM_Registration) including the optional nonce and information about the protected PLMN ID to a UDM, where the information about the protected PLMN ID is, for example, an encrypted PLMN, a MAC value of a PLMN, or a hash value of a PLMN.</p><p id="p-0291" num="0290">S<b>804</b>. After receiving the registration request message, the SEPP2 requests Kamf-udm from the UDM/ARPF, where the registration request message carries a user identifier SUPI and the PLMN ID.</p><p id="p-0292" num="0291">S<b>805</b>. After receiving the registration request message, the UDM finds Kamf-udm based on the SUPI and the PLMN ID in the registration request message, and returns Kamf-udm to the SEPP2.</p><p id="p-0293" num="0292">In addition, S<b>804</b> and S<b>805</b> are used as an implementation in which the SEPP2 obtains a shared key from the UDM. In an alternative manner of S<b>804</b> and S<b>805</b>, as shown in step 0 in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>, before receiving the registration request message from the AMF, the SEPP2 may actively obtain, from the UDM, a shared key corresponding to at least one of a plurality of user identifiers and/or network identifier information.</p><p id="p-0294" num="0293">S<b>806</b>. After receiving the registration request message, the SEPP2 performs the following operations:</p><p id="p-0295" num="0294">a. generating Kamf-udm* by using Kamf-udm and nonce; and</p><p id="p-0296" num="0295">b. if the registration request message carries the encrypted PLMN ID, the SEPP2 obtains a PLMN ID through decryption by using Kamf-udm*; compares the obtained PLMN ID with the PLMN ID carried in the registration request message; and if the obtained PLMN ID is consistent with the PLMN ID carried in the registration request message, the SEPP2 accepts the current registration message; or if the obtained PLMN ID is inconsistent with the PLMN ID carried in the registration request message, the SEPP2 gives a rejection response and a rejection cause, so that the AMF can re-initiate an authentication procedure or reject the current registration based on the configuration rejection cause; or</p><p id="p-0297" num="0296">c. if the registration request message carries the MAC value or the hash value, the SEPP2 calculates a MAC/hash value by using Kamf-udm* and nonce according to a same algorithm; compares the calculated MAC/hash value with the MAC/hash value carried in the registration request message; and if the calculated MAC/hash value is consistent with the MAC/hash value carried in the registration request message, the SEPP2 accepts the current registration message; or if the calculated MAC/hash value is inconsistent with the MAC/hash value carried in the registration request message, the SEPP2 gives a rejection response and a rejection cause, so that the AMF can re-initiate an authentication procedure or reject the current registration based on the configuration rejection cause.</p><p id="p-0298" num="0297">S<b>807</b>. After completing PLMN ID verification, the SEPP2 transparently transmits the registration request message (for example, Nudm_UECM_Registration) of the AMF to the UDM.</p><p id="p-0299" num="0298">S<b>808</b>. The UDM returns a registration response message (Nudm_UECM_Registration response) to the SEAF/AMF.</p><p id="p-0300" num="0299">S<b>809</b>. The SEAF/AMF returns a registration response message to the UE.</p><p id="p-0301" num="0300">According to the method for performing verification by using a shared key provided in this embodiment of this application, when receiving a registration request message from a visited network, a home network verifies the registration request message by using a shared key, to avoid a spoofing attack from the visited network.</p><p id="p-0302" num="0301"><figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>2</b> are a schematic diagram of a spoofing attack from a UDM in a home network. A malicious UDM in a network B directly sends a deregistration message to an AMF in a serving network (scenario 2). After the AMF receives the deregistration message, the AMF deletes an MM context of a user corresponding to an SUPI, and instructs a related SMF to release a PDU session. Consequently, the user is forced to be deregistered. This is equivalent to a denial of service DOS attack. Further, an attacker may send a large quantity of messages, to force a large quantity of users to be deregistered.</p><p id="p-0303" num="0302">The embodiments of this application provide another method for performing verification by using a shared key and an apparatus. When receiving a deregistration message from a home network, a visited network verifies the deregistration message by using a shared key, to avoid a spoofing attack from the home network.</p><p id="p-0304" num="0303"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic interaction flowchart of another method for performing verification by using a shared key according to an embodiment of this application. The method is applied to the scenario 2, and the method may include the following steps.</p><p id="p-0305" num="0304">S<b>901</b>. A first network element processes first network identifier information by using a shared key, to obtain second network identifier information.</p><p id="p-0306" num="0305">S<b>902</b>. The first network element sends a deregistration message to a second network element, where the deregistration message includes the first network identifier information and the second network identifier information, the second network identifier information is obtained by processing the first network identifier information by using the shared key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy; and the second network element receives the deregistration message from the first network element.</p><p id="p-0307" num="0306">S<b>903</b>. The second network element verifies the deregistration message by using the shared key.</p><p id="p-0308" num="0307">S<b>904</b>. The second network element sends a deregistration response message to the first network element, and the first network element receives the deregistration response message from the second network element.</p><p id="p-0309" num="0308">In this embodiment, the first network element is a UDM or a first security edge protection proxy, and the second network element is an AMF or a second security edge protection proxy. To be specific, the first network element may be a UDM, and the second network element may be an AMF; or the first network element may be a UDM, and the second network element may be a second security edge protection proxy; or the first network element may be a first security edge protection proxy, and the second network element may be an AMF; or the first network element may be a first security edge protection proxy, and the second network element may be a second security edge protection proxy. The security edge protection proxy is described in detail below. In descriptions of this embodiment, an example in which the first network element is a UDM and the second network element is an AMF is used for description.</p><p id="p-0310" num="0309">To avoid a spoofed deregistration attack from a UDM, when the UDM sends a deregistration message to the AMF, the UDM may calculate a key material by using the shared key and a UDM ID or a PLMN ID of the UDM, and send the key material to the AMF. The AMF verifies the key material based on the shared Kamf-udm. Only after the verification succeeds, a subsequent step can continue to be performed. If the verification fails, a deregistration procedure is directly terminated.</p><p id="p-0311" num="0310">In specific implementation, before sending the deregistration message to the AMF, the UDM first obtains the shared key, and processes the first network identifier information by using the shared key, to obtain the second network identifier information. The first network identifier information may be a UDM ID, and the second network identifier information may be information obtained by processing the UDM ID by using the shared key.</p><p id="p-0312" num="0311">The UDM obtains the shared key, and stores a correspondence between a shared key and at least one of a user identifier and/or network identifier information.</p><p id="p-0313" num="0312">The UDM searches for, based on a user identifier or the first network identifier information that is included in the to-be-sent deregistration message, the shared key corresponding to the user identifier or the first network identifier information that is included in the deregistration message; and processes the first network identifier information in the deregistration message by using the shared key.</p><p id="p-0314" num="0313">Specifically, the processing first network identifier information by using a shared key includes any one type of the following processing: encrypting the first network identifier information by using the shared key, encrypting the first network identifier information and a random number by using the shared key, performing a message authentication code operation on the first network identifier information and the shared key, performing a message authentication code operation on the first network identifier information, a random number, and the shared key, performing a hash operation on the first network identifier information and the shared key, and performing a hash operation on the first network identifier information, a random number, and the shared key. Specifically, the UDM uses Kamf-udm to encrypt the UDM ID or only encrypt a PLMN ID obtained based on the UDM ID, or calculates a MAC/hash value.</p><p id="p-0315" num="0314">Then, the UDM sends the deregistration message to the AMF. The AMF receives the deregistration message. The AMF verifies the deregistration message by using the shared key. The message carries the foregoing encryption value or MAC/hash value.</p><p id="p-0316" num="0315">Further, before S<b>903</b>, the method further includes the following:</p><p id="p-0317" num="0316">The second network element searches for, based on the correspondence between a shared key and at least one of a user identifier and network identifier information, the shared key corresponding to at least one of the user identifier and the first network identifier information that are included in the deregistration message.</p><p id="p-0318" num="0317">The AMF obtains the shared key in the following several implementations:</p><p id="p-0319" num="0318">In an implementation, if the AMF generates the shared key, the method further includes the following:</p><p id="p-0320" num="0319">The second network element generates the shared key, and sends the shared key to an authentication server network element, so that the authentication server network element sends the shared key to the first network element.</p><p id="p-0321" num="0320">Specifically, the method further includes the following:</p><p id="p-0322" num="0321">The second network element sends an authentication initiation request to the authentication server network element, where the authentication initiation request includes at least one of the user identifier and the first network identifier information;</p><p id="p-0323" num="0322">the second network element receives an authentication vector from the authentication server network element; and</p><p id="p-0324" num="0323">the second network element generates the shared key based on the authentication vector.</p><p id="p-0325" num="0324">That the second network element sends the shared key to an authentication server network element includes the following:</p><p id="p-0326" num="0325">The second network element sends an authentication confirmation message to the authentication server network element, where the authentication confirmation message includes the shared key.</p><p id="p-0327" num="0326">In another implementation, if an SEAF, an AUSF, or the UDM generates the shared key, and the SEAF, the AUSF, or the UDM transfers the shared key to the AMF, the method further includes the following:</p><p id="p-0328" num="0327">The second network element receives the shared key from a security anchor network element or a data management network element.</p><p id="p-0329" num="0328">Generation and transfer processes of the shared key are described in detail below.</p><p id="p-0330" num="0329">In an implementation, S<b>903</b> specifically includes the following:</p><p id="p-0331" num="0330">The second network element obtains third network identifier information based on the first network identifier information by using the shared key; and</p><p id="p-0332" num="0331">the second network element verifies the second network identifier information by using the third network identifier information.</p><p id="p-0333" num="0332">This implementation is a ciphertext-based verification manner. If encryption processing is performed, the first network identifier information is plaintext information, the third network identifier information obtained by encrypting the first network identifier information by using the shared key is ciphertext information, and the second network identifier information carried in the deregistration message is ciphertext information obtained by the UDM through encryption by using the shared key. If a MAC operation or a hash operation is performed, the third network identifier information is a MAC value or a hash value of the first network identifier information.</p><p id="p-0334" num="0333">Further, that the second network element verifies the second network identifier information by using the third network identifier information includes the following:</p><p id="p-0335" num="0334">The second network element verifies whether the third network identifier information is consistent with the second network identifier information.</p><p id="p-0336" num="0335">If encryption processing is performed, the verification process is to determine, through comparison, whether the second network identifier information obtained by the UDM through encryption is the same as the third network identifier information obtained by the AMF through encryption. If a MAC operation is performed, the verification process is to determine, through comparison, whether the third network identifier information and the second network identifier information that are MAC values are the same. If a hash operation is performed, the verification process is to determine, through comparison, whether the third network identifier information and the second network identifier information that are hash values are the same.</p><p id="p-0337" num="0336">Specifically, (a) the AMF obtains a UDM-ID or a PLMN ID through decryption based on Kamf-udm, or calculates a corresponding MAC or hash value based on Kamf-udm;</p><p id="p-0338" num="0337">(b) the AMF compares the UDM ID (or the PLMNID obtained based on the UDM ID) in the message with the UDM ID (or a PLMN ID obtained based on the UDM ID) obtained through decryption, or compares the calculated MAC/hash value with the MAC/hash value carried in the message; and</p><p id="p-0339" num="0338">(c) if the UDM ID in the message is consistent with the UDM ID obtained through decryption or the calculated MAC/hash value is consistent with the MAC/hash value carried in the message, the AMF considers that deregistration succeeds and releases a related resource; or if the UDM ID in the message is inconsistent with the UDM ID obtained through decryption or the calculated MAC/hash value is inconsistent with the MAC/hash value carried in the message, the AMF considers that deregistration fails and does not release a related resource.</p><p id="p-0340" num="0339">In another implementation, S<b>903</b> specifically includes the following:</p><p id="p-0341" num="0340">The second network element obtains fourth network identifier information based on the second network identifier information by using the shared key; and</p><p id="p-0342" num="0341">the second network element verifies the first network identifier information by using the fourth network identifier information.</p><p id="p-0343" num="0342">To be specific, the AMF decrypts the second network identifier information (ciphertext information) by using the shared key, to obtain the fourth network identifier information (plaintext information), and compares the fourth network identifier information with the first network identifier information (plaintext information) sent by the UDM.</p><p id="p-0344" num="0343">Further, that the second network element verifies the first network identifier information by using the fourth network identifier information includes the following:</p><p id="p-0345" num="0344">The second network element verifies whether the fourth network identifier information is consistent with the first network identifier information.</p><p id="p-0346" num="0345">To be specific, the verification succeeds if the fourth network identifier information obtained by the AMF through decryption is the same as the first network identifier information sent by the UDM.</p><p id="p-0347" num="0346">After verifying the deregistration message, the AMF needs to feed back a deregistration response message to the UDM. The deregistration response message is a deregistration success response message or a deregistration failure response message. Step <b>904</b> specifically includes the following:</p><p id="p-0348" num="0347">If the verification succeeds, the second network element sends the deregistration success response message to the first network element; or</p><p id="p-0349" num="0348">if the verification fails, the second network element sends the deregistration failure response message to the first network element.</p><p id="p-0350" num="0349">That the verification succeeds includes: the third network identifier information is consistent with the second network identifier information, or the fourth network identifier information is consistent with the first network identifier information; or</p><p id="p-0351" num="0350">that the verification fails includes: the third network identifier information is inconsistent with the second network identifier information, or the fourth network identifier information is inconsistent with the first network identifier information.</p><p id="p-0352" num="0351">The AMF sends the deregistration response message to the UDM, where the message carries deregistration message success or failure, and optionally, carries a failure cause.</p><p id="p-0353" num="0352">In conclusion, in this embodiment of this application, the AUSF/SEAF/AMF generates the shared key Kamf-udm between the AMF and the UDM by using Kausf/Kseaf/Kamf in an existing key architecture and a random number RAND, or the UDM generates the shared key Kamf-udm between the AMF and the UDM, thereby resolving a problem that there is no shared key between the AMF and the UDM in a current key architecture.</p><p id="p-0354" num="0353">The UDM generates a key material of the UDM ID by using Kamf-udm, and the AMF verifies the UDM ID by using Kamf-udm and the key material, to avoid spoofed UDM deregistration.</p><p id="p-0355" num="0354">In addition, functions of the AMF and the UDM may also be transferred to a security edge protection proxy SEPP.</p><p id="p-0356" num="0355">Because the SEPP has different deployment forms, for the attack scenario 2, as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, a detection point may be placed at a SEPP1 in a serving network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, a detection point may be placed at an IPX1 SEPP closest to a serving network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>, a detection point may be placed at a roaming hub SEPP. Therefore, before performing detection, the SEPP1, the IPX1 SEPP, or the roaming hub SEPP needs to obtain Kamf-udm from the AMF.</p><p id="p-0357" num="0356">Therefore, in the foregoing embodiment, the first network element may be a UDM, or may be a SEPP2 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, or an IPX2 SEPP closest to a home network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>. The second network element may be an AMF, or may be the SEPP1 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, or the IPX1 SEPP closest to the serving network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b></figref><i>c. </i></p><p id="p-0358" num="0357">According to the method for performing verification by using a shared key provided in this embodiment of this application, when receiving a deregistration message from a home network, a visited network verifies the deregistration message by using a shared key, to avoid a spoofing attack from the home network.</p><p id="p-0359" num="0358">For generation of a shared key, an AUSF, an SEAF, an AMF, or a UDM may generate the shared key. The following provides detailed descriptions with reference to a specific procedure.</p><p id="p-0360" num="0359">(1) The AUSF generates the shared key between the AMF and the UDM.</p><p id="p-0361" num="0360">As shown in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, a procedure in which the AUSF generates the shared key may include the following steps.</p><p id="p-0362" num="0361">S<b>101</b>. UE sends a registration request message (registration request) to the AMF, where the message includes a user identifier.</p><p id="p-0363" num="0362">S<b>102</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to the AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a PLMN ID) of a serving network. Optionally, if the AUSF previously generates the shared key Kamf-udm between the AMF and the UDM, the AUSF may determine whether the shared key has expired. If the shared key has expired, the AUSF returns an error code to the AMF, to request the AMF to perform an authentication and key agreement (AKA) procedure again.</p><p id="p-0364" num="0363">S<b>103</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to the UDM, where the authentication information request includes the user identifier and the PLMN ID.</p><p id="p-0365" num="0364">S<b>104</b>. The UDM returns an authentication information response to the AUSF, where the response includes an authentication vector, and the authentication vector includes a random number (RAND), AUTN, XRES*, and Kausf.</p><p id="p-0366" num="0365">S<b>105</b>. After receiving the authentication vector, the AUSF performs the following operations:</p><p id="p-0367" num="0366">(a) calculating, based on RAND and XRES* in the authentication vector, HXRES* used by the AMF to authenticate the UE, replacing XRES* in the authentication vector with HXRES*, and calculating Kausf; and</p><p id="p-0368" num="0367">(b) generating the shared key Kamf-udm=KDF (Kausf, RAND) between the AMF and the UDM based on Kausf and the random number RAND in the authentication vector according to a KDF algorithm, where RAND may be alternatively a random number generated by the AUSF.</p><p id="p-0369" num="0368">S<b>106</b>. The AUSF returns an authentication initiation request response to the AMF, where the response includes the authentication vector and the shared key Kamf-udm between the AMF and the UDM (the AUSF may alternatively send Kamf-udm to the SEAF/AMF by using an authentication confirmation response message in S<b>1013</b>).</p><p id="p-0370" num="0369">S<b>107</b>. The AMF sends an authentication request message (authentication request) to the UE, where the message carries AUTN and RAND, and stores another information element in the authentication vector, for example, HXRES*.</p><p id="p-0371" num="0370">S<b>108</b>. The UE authenticates a network based on AUTN, and calculates a response value RES* based on RAND.</p><p id="p-0372" num="0371">S<b>109</b>. The UE returns an authentication request response message (authentication response) to the AMF, where the message carries RES*.</p><p id="p-0373" num="0372">S<b>1010</b>. The AMF calculates HRES* by using RES* according to an algorithm defined in the 3GPP 33.501 specification, and compares HRES* with HXRES* delivered by the AUSF, to complete authentication on a terminal in the serving network.</p><p id="p-0374" num="0373">S<b>1011</b>. After the authentication succeeds, if the response that is previously received by the AMF from the AUSF includes an authentication confirmation identifier, the AMF sends an authentication confirmation request to the AUSF, where the message carries RES*.</p><p id="p-0375" num="0374">S<b>1012</b>. After receiving the authentication confirmation request, the AUSF compares RES* with XRES*, to complete authentication confirmation for the terminal in a home network.</p><p id="p-0376" num="0375">S<b>1013</b>. The AUSF returns an authentication confirmation response to the AMF, where the response carries Kamf-udm.</p><p id="p-0377" num="0376">S<b>1014</b>. After the authentication confirmation succeeds, the AUSF sends an authentication confirmation notification response message to the UDM, where the message carries the shared key Kamf-udm between the AMF and the UDM.</p><p id="p-0378" num="0377">S<b>1015</b>. The UDM records a relationship among an SUPI, the PLMN ID, an authentication result, and Kamf-udm.</p><p id="p-0379" num="0378">It should be noted that, the foregoing is described by using a 5G-AKA procedure as an example. For an improved extensible authentication protocol method for 3rd generation authentication and key agreement (improved extensible authentication protocol method for 3rd generation authentication and key agreement, EAP-AKA&#x2032;), the message in S<b>106</b> to S<b>1013</b> have different names. For details, refer to 6.1.3.1 Authentication procedure for EAP-AKA&#x2032; in 3GPP TS 33401. Kamf-udm may be delivered by using an EAP-Challenge message or by using an EAP-Success message.</p><p id="p-0380" num="0379">(2) The SEAF generates the shared key between the AMF and the UDM.</p><p id="p-0381" num="0380">A procedure in which the SEAF generates the shared key is similar to the main procedure in which the AUSF generates the shared key. As shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>, the procedure is as follows.</p><p id="p-0382" num="0381">S<b>111</b>. UE sends a registration request message to the AMF, where the message includes a user identifier.</p><p id="p-0383" num="0382">S<b>112</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to an AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a PLMN ID) of a serving network.</p><p id="p-0384" num="0383">S<b>113</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to the UDM, where the authentication information request includes the user identifier and the PLMN ID.</p><p id="p-0385" num="0384">S<b>114</b>. The UDM returns an authentication vector to the AUSF, where the authentication vector includes a random number (RAND), AUTN, XRES*, and Kausf.</p><p id="p-0386" num="0385">S<b>115</b>. After receiving the authentication vector, the AUSF calculates, based on RAND and XRES* in the authentication vector, HXRES* used by the AMF to authenticate the UE, replaces XRES* in the authentication vector with HXRES*, calculates Kausf, and derives Kseaf based on Kausf.</p><p id="p-0387" num="0386">S<b>116</b>. The AUSF returns the authentication vector to the AMF/SEAF, where the authentication vector includes RAND, AUTN, Kausf, HXRES*, and Kseaf.</p><p id="p-0388" num="0387">S<b>117</b>. The AMF sends an authentication request message to the UE, where the message carries AUTN and RAND, and stores another information element in the authentication vector, for example, HXRES.</p><p id="p-0389" num="0388">S<b>118</b>. The UE authenticates a network based on AUTN, and calculates a response value RES* based on RAND.</p><p id="p-0390" num="0389">S<b>119</b>. The UE returns an authentication request response message to the AMF, where the message carries RES*.</p><p id="p-0391" num="0390">S<b>1110</b>. The AMF calculates HRES* by using RES* according to an algorithm defined in the 3GPP 33.501 specification, and compares HRES* with HXRES* delivered by the AUSF, to complete authentication on a terminal in the serving network.</p><p id="p-0392" num="0391">S<b>1110</b><i>a</i>. The SEAF generates the shared key Kamf-udm=KDF (Kseaf, RAND) between the AMF and the UDM based on Kseaf and the random number RAND in the authentication vector according to a KDF algorithm, where RAND may be alternatively a random number generated by the SEAF. Step S<b>1110</b><i>a </i>may be completed in any step between step S<b>116</b> and step S<b>1111</b>.</p><p id="p-0393" num="0392">S<b>1111</b>. After the authentication succeeds, if the response that is previously received by the AMF from the AUSF includes an authentication confirmation identifier, the AMF sends an authentication confirmation request to the AUSF, where the message carries RES* and Kamf-udm. In an alternative manner, the SEAF may not send Kamf-udm to the AUSF. Instead, the AUSF generates Kamf-udm based on Kseaf and RAND.</p><p id="p-0394" num="0393">S<b>1112</b>. After receiving the authentication confirmation request, the AUSF compares RES* with XRES*, to complete authentication confirmation for the terminal in a home network.</p><p id="p-0395" num="0394">S<b>1113</b>. The AUSF returns an authentication confirmation response to the AMF.</p><p id="p-0396" num="0395">S<b>1114</b>. After the authentication confirmation succeeds, the AUSF sends an authentication confirmation notification response message to the UDM, where the message carries the shared key Kamf-udm between the AMF and the UDM.</p><p id="p-0397" num="0396">S<b>1115</b>. The UDM records a relationship among an SUPI, the PLMN ID, an authentication result, and Kamf-udm.</p><p id="p-0398" num="0397">In an alternative implementation, corresponding steps in the foregoing procedure in which the SEAF generates the shared key may be replaced with the following steps:</p><p id="p-0399" num="0398">S<b>116</b>. The AUSF generates RAND1, and sends RAND1 to the SEAF.</p><p id="p-0400" num="0399">S<b>1110</b><i>a</i>. The SEAF generates Kamf-udm based on Kseaf and RAND1. Alternatively, the SEAF generates RAND2, and the SEAF generates Kamf-udm based on Kseaf and RAND1/RAND2.</p><p id="p-0401" num="0400">S<b>1111</b>. The SEAF sends Kamf-udm to the AUSF.</p><p id="p-0402" num="0401">In addition, in S<b>1111</b>, the SEAF may not send Kamf-udm to the AUSF. Instead, the AUSF generates Kamf-udm based on Kseaf and RAND1/RAND2.</p><p id="p-0403" num="0402">Compared with the previous implementation, in this alternative implementation, there are mainly three different methods for generating Kamf-udm:</p><p id="p-0404" num="0403">Kamf-udm=KDF (Kseaf, RAND1, RAND2);</p><p id="p-0405" num="0404">Kamf-udm=KDF (Kseaf, RAND1); and</p><p id="p-0406" num="0405">Kamf-udm=KDF (Kseaf, RAND2).</p><p id="p-0407" num="0406">It should be noted that, the foregoing is described by using a 5G-AKA procedure as an example. For an improved extensible authentication protocol method for 3rd generation authentication and key agreement (improved extensible authentication protocol method for 3rd generation authentication and key agreement, EAP-AKA&#x2032;), the message in S<b>116</b> to S<b>1113</b> have different names. For details, refer to 6.1.3.1 Authentication procedure for EAP-AKA&#x2032; in 3GPP TS 33401. In step S<b>1111</b>, Kamf-udm may be transferred to the AUSF by using an EAP-Response/AKA&#x2032;-Challenge message.</p><p id="p-0408" num="0407">(3) The AMF generates the shared key between the AMF and the UDM.</p><p id="p-0409" num="0408">A procedure in which the AMF generates the shared key is similar to the main procedure in which the AUSF generates the shared key. As shown in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>1</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>1</b>B</figref>, the procedure is as follows.</p><p id="p-0410" num="0409">S<b>121</b>. UE sends a registration request message to the AMF, where the message includes a user identifier.</p><p id="p-0411" num="0410">S<b>122</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to an AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a PLMN ID) of a serving network.</p><p id="p-0412" num="0411">S<b>123</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to the UDM, where the authentication information request includes the user identifier and the PLMN ID.</p><p id="p-0413" num="0412">S<b>124</b>. The UDM returns an authentication vector to the AUSF, where the authentication vector includes a random number (RAND), AUTN, XRES*, and Kausf.</p><p id="p-0414" num="0413">S<b>125</b>. After receiving the authentication vector, the AUSF calculates, based on RAND and XRES* in the authentication vector, HXRES* used by the AMF to authenticate the UE, replaces XRES* in the authentication vector with HXRES*, calculates Kausf, and derives Kamf based on Kausf.</p><p id="p-0415" num="0414">S<b>126</b>. The AUSF returns the authentication vector to the AMF/SEAF, where the authentication vector includes RAND, AUTN, Kausf, HXRES*, and Kamf.</p><p id="p-0416" num="0415">S<b>127</b>. The AMF sends an authentication request message to the UE, where the message carries AUTN and RAND, and stores another information element in the authentication vector, for example, HXRES.</p><p id="p-0417" num="0416">S<b>128</b>. The UE authenticates a network based on AUTN, and calculates a response value RES* based on RAND.</p><p id="p-0418" num="0417">S<b>129</b>. The UE returns an authentication request response message to the AMF, where the message carries RES*.</p><p id="p-0419" num="0418">S<b>1210</b>. The AMF calculates HRES* by using RES* according to an algorithm defined in the 3GPP 33.501 specification, and compares HRES* with HXRES* delivered by the AUSF, to complete authentication on a terminal in the serving network.</p><p id="p-0420" num="0419">S<b>1210</b><i>a</i>. The AMF generates the shared key Kamf-udm=KDF (Kamf, RAND) between the AMF and the UDM based on Kamf and the random number RAND in the authentication vector according to a KDF algorithm, where RAND may be alternatively a random number generated by the AMF. Step S<b>1210</b><i>a </i>may be completed in any step between step S<b>126</b> and step S<b>1211</b>.</p><p id="p-0421" num="0420">S<b>1211</b>. After the authentication succeeds, if the response that is previously received by the AMF from the AUSF includes an authentication confirmation identifier, the AMF sends an authentication confirmation request to the AUSF, where the message carries RES* and Kamf-udm. In an alternative manner, the AMF may not send Kamf-udm to the AUSF. Instead, the AUSF generates Kamf-udm based on Kseaf and RAND.</p><p id="p-0422" num="0421">S<b>1212</b>. After receiving the authentication confirmation request, the AUSF compares RES* with XRES*, to complete authentication confirmation for the terminal in a home network.</p><p id="p-0423" num="0422">S<b>1213</b>. The AUSF returns an authentication confirmation response to the AMF.</p><p id="p-0424" num="0423">S<b>1214</b>. After the authentication confirmation succeeds, the AUSF sends an authentication confirmation notification response message to the UDM, where the message carries the shared key Kamf-udm between the AMF and the UDM.</p><p id="p-0425" num="0424">S<b>1215</b>. The UDM records a relationship among an SUPI, the PLMN ID, an authentication result, and Kamf-udm.</p><p id="p-0426" num="0425">In an alternative implementation, corresponding steps in the foregoing procedure in which the AMF generates the shared key may be replaced with the following steps:</p><p id="p-0427" num="0426">S<b>1210</b><i>a</i>. The SEAF and the AMF respectively generate RAND1 and RAND2. Then, the AMF generates Kamf-udm based on Kamf and RAND1/RAND2, and sends Kamf-udm to the SEAF, so that Kamf-udm is sent to the AUSF.</p><p id="p-0428" num="0427">In addition, the AMF may not send Kamf-udm to the SEAF. Instead, the SEAF generates Kamf-udm based on Kamf and RAND1/RAND2, and then sends Kamf-udm to the AUSF.</p><p id="p-0429" num="0428">Compared with the previous implementation, in this alternative implementation, there are mainly three different methods for generating Kamf-udm:</p><p id="p-0430" num="0429">Kamf-udm=KDF (Kamf, RAND1, RAND2);</p><p id="p-0431" num="0430">Kamf-udm=KDF (Kamf, RAND1); and</p><p id="p-0432" num="0431">Kamf-udm=KDF (Kamf, RAND2).</p><p id="p-0433" num="0432">In conclusion, in this embodiment of this application, the AUSF/SEAF/AMF generates the shared key Kamf-udm between the AMF and the UDM by using Kausf/Kseaf/Kamf in an existing key architecture and a random number RAND, thereby resolving a problem that there is no shared key between the AMF and the UDM in a current key architecture.</p><p id="p-0434" num="0433">It should be noted that, the foregoing is described by using a 5G-AKA procedure as an example. For an improved extensible authentication protocol method for 3rd generation authentication and key agreement (improved extensible authentication protocol method for 3rd generation authentication and key agreement, EAP-AKA&#x2032;), the message in S<b>126</b> to S<b>1213</b> have different names. For details, refer to 6.1.3.1 Authentication procedure for EAP-AKA&#x2032; in 3GPP TS 33401. In step S<b>1211</b>, Kamf-udm may be transferred to the AUSF by using an EAP-Response/AKA&#x2032;-Challenge message.</p><p id="p-0435" num="0434">(4) The UDM generates the shared key between the AMF and the UDM.</p><p id="p-0436" num="0435">A procedure in which the UDM generates the shared key is similar to the main procedure in which the AUSF generates the shared key. As shown in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>2</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>2</b>B</figref>, the procedure is as follows.</p><p id="p-0437" num="0436">S<b>121</b>-<b>2</b>. UE sends a registration request message to the AMF, where the message includes a user identifier.</p><p id="p-0438" num="0437">S<b>122</b>-<b>2</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to an AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a PLMN ID) of a serving network.</p><p id="p-0439" num="0438">S<b>123</b>-<b>2</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to the UDM, where the authentication information request includes the user identifier and the PLMN ID.</p><p id="p-0440" num="0439">S<b>124</b>-<b>2</b>. The UDM returns an authentication vector to the AUSF, where the authentication vector includes a random number (RAND), AUTN, XRES*, and Kausf.</p><p id="p-0441" num="0440">S<b>125</b>-<b>2</b>. After receiving the authentication vector, the AUSF calculates, based on RAND and XRES* in the authentication vector, HXRES* used by the AMF to authenticate the UE, replaces XRES* in the authentication vector with HXRES*, calculates Kausf, and derives Kamf based on Kausf.</p><p id="p-0442" num="0441">S<b>126</b>-<b>2</b>. The AUSF returns the authentication vector to the AMF/SEAF, where the authentication vector includes RAND, AUTN, Kausf, HXRES*, and Kamf.</p><p id="p-0443" num="0442">S<b>127</b>-<b>2</b>. The AMF sends an authentication request message to the UE, where the message carries AUTN and RAND, and stores another information element in the authentication vector, for example, HXRES.</p><p id="p-0444" num="0443">S<b>128</b>-<b>2</b>. The UE authenticates a network based on AUTN, and calculates a response value RES* based on RAND.</p><p id="p-0445" num="0444">S<b>129</b>-<b>2</b>. The UE returns an authentication request response message to the AMF, where the message carries RES*.</p><p id="p-0446" num="0445">S<b>1210</b>-<b>2</b>. The AMF calculates HRES* by using RES* according to an algorithm defined in the 3GPP 33.501 specification, and compares HRES* with HXRES* delivered by the AUSF, to complete authentication on a terminal in the serving network.</p><p id="p-0447" num="0446">S<b>1211</b>-<b>2</b>. After the authentication succeeds, if the response that is previously received by the AMF from the AUSF includes an authentication confirmation identifier, the AMF sends an authentication confirmation request to the AUSF, where the message carries RES*.</p><p id="p-0448" num="0447">S<b>1212</b>-<b>2</b>. After receiving the authentication confirmation request, the AUSF compares RES* with XRES*, to complete authentication confirmation for the terminal in a home network.</p><p id="p-0449" num="0448">S<b>1213</b>-<b>2</b>. After the authentication confirmation succeeds, the AUSF sends an authentication result notification message to the UDM.</p><p id="p-0450" num="0449">S<b>1214</b>-<b>2</b>. The UDM generates Kamf-udm, and records a relationship among an SUPI, the PLMN ID, an authentication result, and Kamf-udm.</p><p id="p-0451" num="0450">For example, the UDM may generate Kamf-udm based on at least one of RAND and Kausf in the authentication vector. Alternatively, the UDM may generate Kamf-udm based on at least one of another random number generated by the UDM and a configuration parameter on the UDM.</p><p id="p-0452" num="0451">S<b>1215</b>-<b>2</b>. The UDM sends an authentication result response to the AUSF, where the authentication result response carries Kamf-udm.</p><p id="p-0453" num="0452">S<b>1216</b>-<b>2</b>. The AUSF returns an authentication confirmation response to the AMF, where the authentication confirmation response carries Kamf-udm.</p><p id="p-0454" num="0453">S<b>1217</b>-<b>2</b>. The AMF records a relationship among the SUPI, the PLMN ID, and Kamf-udm.</p><p id="p-0455" num="0454">It should be noted that, the UDM may alternatively generate Kamf-udm in step S<b>124</b>-<b>2</b> and send Kamf-udm to the AUSF. Correspondingly, the AUSF may send Kamf-udm to the AMF/SEAF in step S<b>126</b>-<b>2</b>.</p><p id="p-0456" num="0455">It should be noted that, the foregoing is described by using a 5G-AKA procedure as an example. For an improved extensible authentication protocol method for 3rd generation authentication and key agreement (improved extensible authentication protocol method for 3rd generation authentication and key agreement, EAP-AKA&#x2032;), the message in S<b>126</b>-<b>2</b> to S<b>1216</b>-<b>2</b> have different names. For details, refer to 6.1.3.1 Authentication procedure for EAP-AKA&#x2032; in 3GPP TS 33401. Kamf-udm may be transferred to the AMF by using an EAP-success message in step S<b>1216</b>-<b>2</b>, or may be transferred to the AMF by using an EAP-Request/AKA&#x2032;-Challenge message in step S<b>126</b>-<b>2</b>.</p><p id="p-0457" num="0456">In conclusion, in this embodiment of this application, the UDM generates the shared key Kamf-udm between the AMF and the UDM, thereby resolving a problem that there is no shared key between the AMF and the UDM in a current key architecture.</p><p id="p-0458" num="0457">The foregoing describes a solution for performing verification by using a shared key. In this application, the following further provides a solution for performing verification by using encryption information and a solution for generating encryption information.</p><p id="p-0459" num="0458">This application provides a method for performing verification by using encryption information, and a first network element, a second network element, and a system that are based on the method. The method includes the following: The second network element obtains encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or the second network element generates random information as encryption information; and the second network element sends a registration request message to the first network element, where the registration request message includes a user identifier, the first network identifier information, and the encryption information, the encryption information is information obtained by encrypting, signing, performing MAC processing on, or performing hash processing on the first network identifier information, or the encryption information is random information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy. Correspondingly, the first network element receives the registration request message from the second network element; the first network element verifies the registration request message by using the encryption information; and the first network element sends a registration response message to the second network element. Correspondingly, the second network element receives the registration response message from the first network element.</p><p id="p-0460" num="0459">This application provides another method for performing verification by using encryption information, and a first network element, a second network element, and a system that are based on the method. The method includes the following: The first network element obtains encryption information by encrypting, signing, performing MAC processing on, or performing hash processing on first network identifier information, or the first network element generates random information as encryption information; and the first network element sends a deregistration message to the second network element, where the deregistration message includes the first network identifier information and the encryption information, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy. Correspondingly, the second network element receives the deregistration message from the first network element; the second network element verifies the deregistration message by using the encryption information; and the second network element sends a deregistration response message to the first network element. Correspondingly, the first network element receives the deregistration response message from the second network element.</p><p id="p-0461" num="0460">In this application, the encryption information may be information obtained by encrypting information that includes a serving PLMN ID, or may be information obtained by signing a serving PLMN ID by using a private key, or may be a MAC value or a hash value of information that includes a serving PLMN ID, or may be random information (such as a binary number or a string). It should be noted that, a name of the encryption information is not limited in this application, and the encryption information may also be referred to as token information or have another name.</p><p id="p-0462" num="0461">For generation of the encryption information, an AUSF or a UDM may generate the encryption information. The following provides detailed descriptions with reference to a specific procedure.</p><p id="p-0463" num="0462">(1) The AUSF generates the encryption information.</p><p id="p-0464" num="0463">As shown in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>B</figref>, a solution for performing verification by using encryption information and a solution for generating encryption information by the AUSF may include the following steps. The method in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>B</figref> may include S<b>121</b>-<b>3</b> to S<b>1218</b>-<b>3</b>, or may include S<b>1219</b>-<b>3</b> to S<b>1221</b>-<b>3</b>, or may include S<b>121</b>-<b>3</b> to S<b>1221</b>-<b>3</b>.</p><p id="p-0465" num="0464">S<b>121</b>-<b>3</b>. UE sends a registration request message to an AMF, where the message includes a user identifier.</p><p id="p-0466" num="0465">S<b>122</b>-<b>3</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to the AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a serving PLMN ID) of a serving network.</p><p id="p-0467" num="0466">S<b>123</b>-<b>3</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to a UDM, where the authentication information request includes the user identifier and the PLMN ID.</p><p id="p-0468" num="0467">S<b>124</b>-<b>3</b>. The UDM returns an authentication vector to the AUSF, where the authentication vector includes a random number (RAND), AUTN, XRES*, and Kausf.</p><p id="p-0469" num="0468">S<b>125</b>-<b>3</b>. After receiving the authentication vector, the AUSF calculates, based on RAND and XRES* in the authentication vector, HXRES* used by the AMF to authenticate the UE, replaces XRES* in the authentication vector with HXRES*, calculates Kausf, and derives Kamf based on Kausf.</p><p id="p-0470" num="0469">S<b>126</b>-<b>3</b>. The AUSF returns the authentication vector to the AMF/SEAF, where the authentication vector includes RAND, AUTN, Kausf, HXRES*, and Kamf.</p><p id="p-0471" num="0470">S<b>127</b>-<b>3</b>. The AMF sends an authentication request message to the UE, where the message carries AUTN and RAND, and stores another information element in the authentication vector, for example, HXRES.</p><p id="p-0472" num="0471">S<b>128</b>-<b>3</b>. The UE authenticates a network based on AUTN, and calculates a response value RES* based on RAND.</p><p id="p-0473" num="0472">S<b>129</b>-<b>3</b>. The UE returns an authentication request response message to the AMF, where the message carries RES*.</p><p id="p-0474" num="0473">S<b>1210</b>-<b>3</b>. The AMF calculates HRES* by using RES* according to an algorithm defined in the 3GPP 33.501 specification, and compares HRES* with HXRES* delivered by the AUSF, to complete authentication on a terminal in the serving network.</p><p id="p-0475" num="0474">S<b>1211</b>-<b>3</b>. After the authentication succeeds, if the response that is previously received by the AMF from the AUSF includes an authentication confirmation identifier, the AMF sends an authentication confirmation request to the AUSF, where the message carries RES*.</p><p id="p-0476" num="0475">S<b>1212</b>-<b>3</b>. After receiving the authentication confirmation request, the AUSF compares RES* with XRES*, to complete authentication confirmation for the terminal in a home network.</p><p id="p-0477" num="0476">S<b>1213</b>-<b>3</b>. After the authentication succeeds, the AUSF generates encryption information.</p><p id="p-0478" num="0477">For example, the AUSF may obtain the encryption information by encrypting information that includes the serving PLMN ID, or the AUSF may obtain the encryption information by signing the serving PLMN ID by using a private key of the AUSF, or the AUSF may obtain the encryption information by performing MAC processing or hash processing on information that includes the serving PLMN ID, or the encryption information may be random information (such as a binary number or a string), and the AUSF may randomly generate the encryption information.</p><p id="p-0479" num="0478">S<b>1214</b>-<b>3</b>. The AUSF sends an authentication result notification message to the UDM, where the message carries the encryption information.</p><p id="p-0480" num="0479">S<b>1215</b>-<b>3</b>. The UDM records a relationship among an SUPI, the PLMN ID, an authentication result, and the encryption information.</p><p id="p-0481" num="0480">S<b>1216</b>-<b>3</b>. The UDM sends an authentication result response to the AUSF.</p><p id="p-0482" num="0481">S<b>1217</b>-<b>3</b>. The AUSF returns an authentication confirmation response to the AMF, where the authentication confirmation response carries the encryption information.</p><p id="p-0483" num="0482">S<b>1218</b>-<b>3</b>. The AMF records a relationship among the SUPI, the PLMN ID, and the encryption information.</p><p id="p-0484" num="0483">S<b>1219</b>-<b>3</b>. The AMF sends a Nudm_UECM_Registration message to the UDM, where the message carries the SUPI, the PLMN ID, and the encryption information.</p><p id="p-0485" num="0484">The Nudm_UECM_Registration is a type of registration message, and may be another registration message in practice.</p><p id="p-0486" num="0485">S<b>1220</b>-<b>3</b>. The UDM searches for corresponding encryption information based on the SUPI and the PLMN ID that are carried in the foregoing message, and compares the received encryption information with found stored encryption information.</p><p id="p-0487" num="0486">If the received encryption information is consistent with the found stored encryption information, the verification performed by the UDM on the AMF succeeds.</p><p id="p-0488" num="0487">S<b>1221</b>-<b>3</b>. After the verification on the AMF succeeds, proceed to a subsequent registration procedure.</p><p id="p-0489" num="0488">It should be noted that, the action of generating the encryption information by the AUSF may be completed in any step between step S<b>124</b>-<b>3</b> and step S<b>1214</b>-<b>3</b>. For example, if the AUSF generates the encryption information in step S<b>125</b>-<b>3</b>, the AUSF may send the encryption information to the AMF in step S<b>126</b>-<b>3</b> or S<b>1217</b>-<b>3</b>.</p><p id="p-0490" num="0489">It should be noted that, the foregoing is described by using a 5G-AKA procedure as an example. For an improved extensible authentication protocol method for 3rd generation authentication and key agreement (EAP-AKA&#x2032;), the message in S<b>126</b>-<b>3</b> to S<b>1217</b>-<b>3</b> have different names. For details, refer to 6.1.3.1 Authentication procedure for EAP-AKA&#x2032; in 3GPP TS 33401. The encryption information may be delivered in step S<b>126</b>-<b>3</b> by using an EAP-Request/AKA&#x2032;-Challenge message, or may be delivered in step S<b>1217</b>-<b>3</b> by using an EAP-Success message.</p><p id="p-0491" num="0490">In conclusion, in this embodiment, verification can be performed between the AMF and the UDM by using the encryption information.</p><p id="p-0492" num="0491">(2) The UDM generates the encryption information.</p><p id="p-0493" num="0492">As shown in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b>B</figref>, a solution for performing verification by using encryption information and a solution for generating encryption information by the UDM may include the following steps. The method in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b>B</figref> may include S<b>121</b>-<b>4</b> to S<b>1217</b>-<b>4</b>, or may include S<b>1218</b>-<b>4</b> to S<b>1220</b>-<b>4</b>, or may include S<b>121</b>-<b>4</b> to S<b>1220</b>-<b>4</b>.</p><p id="p-0494" num="0493">S<b>121</b>-<b>4</b>. UE sends a registration request message to an AMF, where the message includes a user identifier.</p><p id="p-0495" num="0494">S<b>122</b>-<b>4</b>. After receiving the registration request message from the UE, the AMF sends an authentication initiation request to an AUSF, where the authentication initiation request includes the user identifier and an identifier (for example, a PLMN ID) of a serving network.</p><p id="p-0496" num="0495">S<b>123</b>-<b>4</b>. After receiving the authentication initiation request, the AUSF sends an authentication information request to the UDM, where the authentication information request includes the user identifier and the PLMN ID.</p><p id="p-0497" num="0496">S<b>124</b>-<b>4</b>. The UDM returns an authentication vector to the AUSF, where the authentication vector includes a random number (RAND), AUTN, XRES*, and Kausf.</p><p id="p-0498" num="0497">S<b>125</b>-<b>4</b>. After receiving the authentication vector, the AUSF calculates, based on RAND and XRES* in the authentication vector, HXRES* used by the AMF to authenticate the UE, replaces XRES* in the authentication vector with HXRES*, calculates Kausf, and derives Kamf based on Kausf.</p><p id="p-0499" num="0498">S<b>126</b>-<b>4</b>. The AUSF returns the authentication vector to the AMF/SEAF, where the authentication vector includes RAND, AUTN, Kausf, HXRES*, and Kamf.</p><p id="p-0500" num="0499">S<b>127</b>-<b>4</b>. The AMF sends an authentication request message to the UE, where the message carries AUTN and RAND, and stores another information element in the authentication vector, for example, HXRES.</p><p id="p-0501" num="0500">S<b>128</b>-<b>4</b>. The UE authenticates a network based on AUTN, and calculates a response value RES* based on RAND.</p><p id="p-0502" num="0501">S<b>129</b>-<b>4</b>. The UE returns an authentication request response message to the AMF, where the message carries RES*.</p><p id="p-0503" num="0502">S<b>1210</b>-<b>4</b>. The AMF calculates HRES* by using RES* according to an algorithm defined in the 3GPP 33.501 specification, and compares HRES* with HXRES* delivered by the AUSF, to complete authentication on a terminal in the serving network.</p><p id="p-0504" num="0503">S<b>1211</b>-<b>4</b>. After the authentication succeeds, if the response that is previously received by the AMF from the AUSF includes an authentication confirmation identifier, the AMF sends an authentication confirmation request to the AUSF, where the message carries RES*.</p><p id="p-0505" num="0504">S<b>1212</b>-<b>4</b>. After receiving the authentication confirmation request, the AUSF compares RES* with XRES*, to complete authentication confirmation for the terminal in a home network.</p><p id="p-0506" num="0505">S<b>1213</b>-<b>4</b>. After the authentication succeeds, the AUSF sends an authentication result notification message to the UDM.</p><p id="p-0507" num="0506">S<b>1214</b>-<b>4</b>. The UDM generates encryption information, and records a relationship among an SUPI, the PLMN ID, an authentication result, and the encryption information.</p><p id="p-0508" num="0507">For example, the UDM may obtain the encryption information by encrypting information that includes the serving PLMN ID, or the UDM may obtain the encryption information by signing the serving PLMN ID by using a private key of the UDM, or the UDM may obtain the encryption information by performing MAC processing or hash processing on information that includes the serving PLMN ID, or the encryption information may be random information (such as a binary number or a string), and the UDM may randomly generate the encryption information.</p><p id="p-0509" num="0508">S<b>1215</b>-<b>4</b>. The UDM sends an authentication result response to the AUSF, where the response carries the encryption information.</p><p id="p-0510" num="0509">S<b>1216</b>-<b>4</b>. The AUSF returns an authentication confirmation response to the AMF, where the authentication confirmation response carries the encryption information.</p><p id="p-0511" num="0510">S<b>1217</b>-<b>4</b>. The AMF records a relationship among the SUPI, the PLMN ID, and the encryption information.</p><p id="p-0512" num="0511">S<b>1218</b>-<b>4</b>. The AMF sends a Nudm_UECM_Registration message to the UDM, where the message carries the SUPI, the PLMN ID, and the encryption information.</p><p id="p-0513" num="0512">S<b>1219</b>-<b>4</b>. The UDM searches for corresponding encryption information based on the SUPI and the PLMN ID that are carried in the foregoing message, and compares the received encryption information with found stored encryption information.</p><p id="p-0514" num="0513">If the received encryption information is consistent with the found stored encryption information, the verification performed by the UDM on the AMF succeeds.</p><p id="p-0515" num="0514">S<b>1220</b>-<b>4</b>. After the verification on the AMF succeeds, proceed to a subsequent registration procedure.</p><p id="p-0516" num="0515">It should be noted that, the action of generating the encryption information by the UDM may be completed in any step between step S<b>123</b>-<b>4</b> and step S<b>1215</b>-<b>4</b>. For example, if the UDM generates the encryption information in step S<b>123</b>-<b>4</b>, the UDM may send the encryption information to the AUSF in step S<b>124</b>-<b>4</b>, and the AUSF sends the encryption information to the AMF in S<b>126</b>-<b>4</b> or S<b>1216</b>-<b>4</b>.</p><p id="p-0517" num="0516">It should be noted that, the foregoing is described by using a 5G-AKA procedure as an example. For an improved extensible authentication protocol method for 3rd generation authentication and key agreement (EAP-AKA&#x2032;), the message in S<b>126</b>-<b>4</b> to S<b>1216</b>-<b>4</b> have different names. For details, refer to 6.1.3.1 Authentication procedure for EAP-AKA&#x2032; in 3GPP TS 33401. The encryption information may be delivered in step S<b>126</b>-<b>4</b> by using an EAP-Request/AKA&#x2032;-Challenge message, or may be delivered in step S<b>1216</b>-<b>4</b> by using an EAP-Success message.</p><p id="p-0518" num="0517">In conclusion, in this embodiment, verification can be performed between the AMF and the UDM by using the encryption information.</p><p id="p-0519" num="0518">The foregoing describes the solution for performing verification by using a shared key and the solution for performing verification by using encryption information. The following describes a solution for performing verification by using a preset public key and a preset private key.</p><p id="p-0520" num="0519"><figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>2</b> are a schematic diagram of a spoofing attack from an AMF in a serving network. A malicious AMF in a serving network B may send a registration message to a UDM in a home network at any time (scenario 1). The message carries an SUPI and a PLMN ID A of a serving network A. The UDM finds, by using a table, that authentication on the SUPI succeeds in the serving network A corresponding to the PLMN ID A. Therefore, the UDM instructs an old AMF to deregister a user corresponding to the SUPI. The old AMF deletes an MM context of the user corresponding to the SUPI, and instructs a related SMF to release a PDU session. Consequently, the user is forced to be deregistered. This is equivalent to a denial of service DOS attack. Further, an attacker may send a large quantity of spoofed registration messages, to enable a large quantity of users to be deregistered.</p><p id="p-0521" num="0520"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a schematic interaction flowchart of a method for performing verification by using a public key and a private key according to an embodiment of this application. The method is applied to the scenario 1, and may include the following steps.</p><p id="p-0522" num="0521">S<b>131</b>. A second network element obtains second network identifier information based on first network identifier information by using a private key, where the second network element is a mobility management network element or a second security edge protection proxy.</p><p id="p-0523" num="0522">S<b>132</b>. The second network element sends a request message to a first network element, and the first network element receives the request message from the second network element, where the request message includes the first network identifier information and the second network identifier information, the second network identifier information is obtained based on the first network identifier information by using the private key, the first network element is a data management network element or a first security edge protection proxy, and the second network element is a mobility management network element or a second security edge protection proxy.</p><p id="p-0524" num="0523">S<b>133</b>. The first network element verifies the second network identifier information by using a public key corresponding to the private key.</p><p id="p-0525" num="0524">S<b>134</b>. The first network element sends a response message to the second network element, and the second network element receives the response message from the first network element.</p><p id="p-0526" num="0525">In this embodiment, the first network element is a UDM or a first security edge protection proxy, and the second network element is an AMF or a second security edge protection proxy. To be specific, the first network element may be a UDM, and the second network element may be an AMF; or the first network element may be a UDM, and the second network element may be a second security edge protection proxy; or the first network element may be a first security edge protection proxy, and the second network element may be an AMF; or the first network element may be a first security edge protection proxy, and the second network element may be a second security edge protection proxy. The security edge protection proxy is described in detail below. In descriptions of this embodiment, an example in which the first network element is a UDM and the second network element is an AMF is used for description.</p><p id="p-0527" num="0526">In this embodiment, a private key is preset on the AMF, and a public key and a relationship between the public key and a PLMN ID are preset on the UDM.</p><p id="p-0528" num="0527">Before the AMF sends the request message to the UDM, the AMF signs the first network identifier information (for example, a PLMN ID) by using the preset private key, to obtain the second network identifier information.</p><p id="p-0529" num="0528">In addition, the AMF may further sign the first network identifier information and at least one of a random number and a session identifier by using the preset private key. In this case, further, S<b>131</b> specifically includes the following:</p><p id="p-0530" num="0529">The second network element obtains the second network identifier information by signing the first network identifier information and at least one of a random number and a session identifier by using the private key.</p><p id="p-0531" num="0530">In a specific implementation, the random number may be a random number delivered by the UDM. In this case, further, the method further includes the following:</p><p id="p-0532" num="0531">The second network element sends a registration request message to the first network element; and the second network element receives a registration response message from the first network element, where the registration response message includes the random number.</p><p id="p-0533" num="0532">In S<b>132</b>, the AMF sends the request message to the UDM, where the request message may be a request message for obtaining user subscription data, a registration request message, or the like. After the UDM receives the request message, further, the method further includes the following:</p><p id="p-0534" num="0533">The first network element searches for the public key based on the first network identifier information.</p><p id="p-0535" num="0534">In this case, in S<b>133</b>, the UDM verifies the second network identifier information by using the found public key.</p><p id="p-0536" num="0535">The second network identifier information is obtained by signing the first network identifier information and at least one of the random number and the session identifier by using the private key. The session identifier may be a &#x3c;Session-Id&#x3e; information element in a header of a Diameter message or a SessionID part in an http(s) message.</p><p id="p-0537" num="0536">After verifying the request message, the UDM returns the response message to the AMF. If the verification fails, the response message may further include a failure cause.</p><p id="p-0538" num="0537">It should be noted that, in the method shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, that the second network identifier information is obtained based on the first network identifier information by using the private key includes one of the following cases:</p><p id="p-0539" num="0538">Case 1: The second network identifier information is obtained based on the first network identifier information only by using the private key. For example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0540" num="0539">Case 2: The second network identifier information is obtained based on the first network identifier information by using the private key and other content. For example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0541" num="0540">In the foregoing case 2, the &#x201c;other content&#x201d; may be at least one of the following: a public key preset in the first network element, a public key in a private-public key pair generated by the first network element, and another parameter that is generated by the first network element and that participates in subsequent key calculation.</p><p id="p-0542" num="0541">With reference to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the following specifically describes a procedure of protecting registration by using a preset public key and a preset private key in the scenario 1. A main procedure is as follows.</p><p id="p-0543" num="0542">S<b>141</b>. Preset a private key on an AMF, and preset a public key and a relationship between the public key and a PLMN ID on a UDM.</p><p id="p-0544" num="0543">S<b>142</b>. UE initiates a registration request message (Registration Request) and a subsequent message to the AMF. For details, refer to S<b>301</b> to S<b>307</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b><i>a</i></figref>-<b>1</b> or <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b>.</p><p id="p-0545" num="0544">S<b>143</b>. The AMF sends the registration request message to the UDM.</p><p id="p-0546" num="0545">S<b>144</b>. The UDM sends a registration response message to the AMF, and adds a random number nonce into the registration response message.</p><p id="p-0547" num="0546">S<b>145</b>. The AMF signs the PLMN ID by using the private key of the AMF. Optionally, the AMF may sign (the PLMN ID, nonce, and/or a session identifier) by using the private key.</p><p id="p-0548" num="0547">S<b>146</b>. The AMF sends a request message to the UDM, for example, sends a message for obtaining user subscription data, where the message carries the signature in S<b>145</b>.</p><p id="p-0549" num="0548">S<b>147</b>. After receiving the message, the UDM searches for a public key of the PLMN ID based on the PLMN ID in the message; verifies the signature in the message by using the public key; and if the verification on the signature succeeds, proceeds to a subsequent procedure; or if the verification fails, returns a rejection message, where the message includes a specific error cause indicating that the verification on the signature fails.</p><p id="p-0550" num="0549">S<b>148</b>. The UDM returns, to the AMF, a response to the message for obtaining user subscription data.</p><p id="p-0551" num="0550">S<b>149</b>. The AMF completes registration of the UE.</p><p id="p-0552" num="0551">Because the SEPP has different deployment forms, for the attack scenario 1, as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, a detection point may be placed at a SEPP2 in a home network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, a detection point may be placed at an IPX2 SEPP closest to a home network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>, a detection point may be placed at a roaming hub SEPP closest to a home network. Therefore, a public key corresponding to a serving network in which the AMF is located and a correspondence between the public key and a PLMN ID of the serving network in which the AMF is located need to be deployed on the SEPP2, the IPX2 SEPP, or the roaming hub SEPP in advance.</p><p id="p-0553" num="0552">According to the method for performing verification by using a public key and a private key provided in this embodiment of this application, when a home network receives a request message sent by a visited network, where network identifier information in the request message is signed by a network element in the visited network by using a private key, a network element in the home network verifies the network identifier information in the request message by using a preset public key corresponding to the private key, to protect the network from an attack from the visited network.</p><p id="p-0554" num="0553"><figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>1</b> and <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>-<b>2</b> are a schematic diagram of a spoofing attack from a UDM in a home network. A malicious UDM in a network B directly sends a deregistration message to an AMF in a serving network (scenario 2). After the AMF receives the deregistration message, the AMF deletes an MM context of a user corresponding to an SUPI, and instructs a related SMF to release a PDU session. Consequently, the user is forced to be deregistered. This is equivalent to a denial of service DOS attack. Further, an attacker may send a large quantity of messages, to force a large quantity of users to be deregistered.</p><p id="p-0555" num="0554"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a schematic interaction flowchart of another method for performing verification by using a public key and a private key according to an embodiment of this application. The method is applied to the scenario 2, and may include the following steps.</p><p id="p-0556" num="0555">S<b>151</b>. A first network element obtains second network identifier information based on first network identifier information by using a private key, where the first network element is a data management network element or a first security edge protection proxy.</p><p id="p-0557" num="0556">S<b>152</b>. The first network element sends a deregistration message to a second network element, and the second network element receives the deregistration message from the first network element, where the deregistration message includes the second network identifier information, so that the second network element verifies the second network identifier information by using a public key corresponding to the private key, and the second network element is a mobility management network element or a second security edge protection proxy.</p><p id="p-0558" num="0557">S<b>153</b>. The second network element verifies the second network identifier information by using the public key corresponding to the private key.</p><p id="p-0559" num="0558">S<b>154</b>. The second network element sends a deregistration response message to the first network element based on a verification result of the second network identifier information, and the first network element receives the deregistration response message from the second network element.</p><p id="p-0560" num="0559">In this embodiment, the first network element is a UDM or a first security edge protection proxy, and the second network element is an AMF or a second security edge protection proxy. To be specific, the first network element may be a UDM, and the second network element may be an AMF; or the first network element may be a UDM, and the second network element may be a second security edge protection proxy; or the first network element may be a first security edge protection proxy, and the second network element may be an AMF; or the first network element may be a first security edge protection proxy, and the second network element may be a second security edge protection proxy. The security edge protection proxy is described in detail below. In descriptions of this embodiment, an example in which the first network element is a UDM and the second network element is an AMF is used for description.</p><p id="p-0561" num="0560">In this embodiment, a public key is preset on the AMF, and a private key is preset on the UDM.</p><p id="p-0562" num="0561">In S<b>151</b>, the first network element obtains the second network identifier information based on the first network identifier information by using the private key.</p><p id="p-0563" num="0562">The UDM may sign the first network identifier information (for example, a UDM ID) by using the private key, or may sign the first network identifier information and at least one of a random number and a session identifier by using the private key. In this case, S<b>151</b> specifically includes the following:</p><p id="p-0564" num="0563">The first network element obtains the second network identifier information by signing the first network identifier information and at least one of a random number and a session identifier by using the private key.</p><p id="p-0565" num="0564">It should be noted that, in the method shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, that the second network identifier information is obtained based on the first network identifier information by using the private key includes one of the following cases:</p><p id="p-0566" num="0565">Case 1: The second network identifier information is obtained based on the first network identifier information only by using the private key. For example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, only the private key is used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0567" num="0566">Case 2: The second network identifier information is obtained based on the first network identifier information by using the private key and other content. For example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information, or to encrypt and perform integrity protection on the first network identifier information, so as to obtain the second network identifier information. For another example, the private key and the other content are used to sign, encrypt, or perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, or to encrypt and perform integrity protection on the first network identifier information and at least one of the random number and the session identifier, so as to obtain the second network identifier information.</p><p id="p-0568" num="0567">In the foregoing case 2, the &#x201c;other content&#x201d; may be at least one of the following: a public key preset in the first network element, a public key in a private-public key pair generated by the first network element, and another parameter that is generated by the first network element and that participates in subsequent key calculation.</p><p id="p-0569" num="0568">With reference to <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the following specifically describes a procedure of protecting deregistration by using a preset public key and a preset private key in the scenario 2. A main procedure is as follows:</p><p id="p-0570" num="0569">S<b>161</b>. Preset a public key on an AMF, and preset a private key on a UDM.</p><p id="p-0571" num="0570">S<b>162</b>. The AMF adds a random number nonce-dereg into a registration message to be sent to the UDM, to perform verification when a deregistration message from the UDM is received.</p><p id="p-0572" num="0571">S<b>163</b>. The UDM stores a relationship among an SUPI, a PLMN ID, and nonce-dereg.</p><p id="p-0573" num="0572">S<b>164</b>. The UDM returns a registration response message to the AMF.</p><p id="p-0574" num="0573">S<b>165</b>. When the UDM is ready to initiate deregistration, the UDM signs a UDM ID by using the private key. Optionally, the UDM may further sign (the UDM ID, nonce-dereg, and/or a session identifier).</p><p id="p-0575" num="0574">S<b>166</b>. When the UDM sends the deregistration message to the AMF, the UDM adds the foregoing signature into the deregistration message.</p><p id="p-0576" num="0575">S<b>167</b>. After receiving the message, the AMF verifies the signature by using the public key; and if the verification on the signature succeeds, proceeds to a subsequent procedure; or if the verification fails, returns a rejection message, where the message includes a specific error cause indicating that the verification on the signature fails.</p><p id="p-0577" num="0576">S<b>168</b>. The AMF returns a deregistration response message to the UDM.</p><p id="p-0578" num="0577">Because the SEPP has different deployment forms, for the attack scenario 2, as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, a detection point may be placed at a SEPP1 in a serving network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, a detection point may be placed at an IPX1 SEPP closest to a serving network, or as shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>, a detection point may be placed at a roaming hub SEPP. Therefore, a public key corresponding to a network in which the UDM is located and a correspondence between the public key and a PLMN ID of the network in which the UDM is located need to be deployed on the SEPP1, the IPX1 SEPP, or the roaming hub SEPP in advance. Therefore, in the foregoing embodiment, the first network element may be a UDM, or may be a SEPP2 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, or an IPX2 SEPP closest to a home network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>. The second network element may be an AMF, or may be the SEPP1 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, or the IPX1 SEPP closest to the serving network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b></figref><i>c. </i></p><p id="p-0579" num="0578">According to the method for performing verification by using a public key and a private key provided in this embodiment of this application, when a visited network receives a deregistration message sent by a home network, where network identifier information in the deregistration message is signed by a network element in the home network by using a private key, a network element in the visited network verifies the network identifier information in the deregistration message by using a preset public key corresponding to the private key, to protect the network from an attack from the home network.</p><p id="p-0580" num="0579">The foregoing describes a solution for performing verification between the AMF and the UDM. In addition, this application further provides a solution for verifying a serving network identifier serving PLMN ID between an AMF in a serving network and an AUSF in a home network. Authentication initiation request message sent by the AMF in the serving network to the AUSF in the home network usually carries the serving PLMN ID. The solution in this application may provide a solution for performing verification between the AMF and the AUSF, to prevent a spoofed serving network identifier attack that may exist between the AMF and the AUSF.</p><p id="p-0581" num="0580">Specifically, the solution for performing verification between the AMF and the AUSF may include the following cases:</p><p id="p-0582" num="0581">(1) When a public key and a private key are used, a private key corresponding to an operator of the AMF may be deployed on the AMF, the serving PLMN ID is signed by using the private key, and then the serving PLMN ID is carried in an authentication initiation request message and sent to the AUSF. Correspondingly, a public key corresponding to the operator of the AMF is deployed on the AUSF, and the foregoing signature is verified by using the public key. If the verification fails, there is a spoofing attack.</p><p id="p-0583" num="0582">(2) When a shared key is used, the AMF encrypts the serving PLMN ID by using the shared key, generates a MAC verification value, or generates a hash value, and then adds the serving PLMN ID, the MAC verification value, or the hash value into an authentication initiation request message to send the serving PLMN ID, the MAC verification value, or the hash value to the AUSF. The AUSF obtains a plaintext through decryption by using the shared key, and compares the plaintext with the serving PLMN ID; or the AUSF calculates a MAC check value, and then compares the calculated MAC check value with the received MAC check value; or the AUSF generates a hash value, and then compares the generated hash value with the received hash value. The verification succeeds if a comparison result is that the plaintext is consistent with the serving PLMN ID, the calculated MAC check value is consistent with the received MAC check value, or the generated hash value is consistent with the received hash value. Otherwise, the verification fails. If the verification fails, there is a spoofing attack.</p><p id="p-0584" num="0583">The foregoing solution for performing verification between the AMF and the AUSF may be independently executed, or may coexist with the solution for performing verification between the AMF and the UDM. For example, the solution for performing verification between the AMF and the AUSF may be applied to S<b>102</b> in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, S<b>112</b> in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>1</b>A</figref>, S<b>122</b>-<b>2</b> in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>2</b>A</figref>, S<b>122</b>-<b>3</b> in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>3</b>A</figref>, and S<b>122</b>-<b>4</b> in <figref idref="DRAWINGS">FIG. <b>12</b>-<b>4</b></figref>.</p><p id="p-0585" num="0584">In addition, this application further provides a solution for verifying a serving network identifier serving PLMN ID between a vSEPP in a serving network and an hSEPP in a home network, or between a vNRF in a serving network and an hNRF in a home network, or between a vSMF in a serving network and an hSMF in a home network, or between a vPCF in a serving network and an hPCF in a home network, or between any network element vNF1 in a serving network and any network element hNF2 in a home network, to prevent a spoofed serving network identifier attack that may exist between the serving network and the home network.</p><p id="p-0586" num="0585">Specifically, the foregoing verification solution may include the following cases:</p><p id="p-0587" num="0586">(1) When a public key and a private key are used, a private key corresponding to a serving operator of the vSEPP, the vNRF, the vSMF, the vPCF, or the any vNF1 in the serving network may be deployed on the vSEPP, the vNRF, the vSMF, the vPCF, or the any vNF1 in the serving network, the serving PLMN ID is signed by using the private key, and then the serving PLMN ID is sent to the hSEPP, the hNRF, the hSMF, the hPCF, or the any hNF2 in the home network. Correspondingly, a public key corresponding to the serving operator of the vSEPP, the vNRF, the vSMF, the vPCF, or the any vNF1 is deployed on the hSEPP, the hNRF, the hSMF, the hPCF, or the any hNF2 in the home network, and the foregoing signature is verified by using the public key. If the verification fails, there is a spoofing attack.</p><p id="p-0588" num="0587">(2) When a shared key is used, the vSEPP, the vNRF, the vSMF, the vPCF, or the any vNF1 in the serving network encrypts the serving PLMN ID by using the shared key, generates a MAC verification value, or generates a hash value, and then sends the serving PLMN ID, the MAC verification value, or the hash value to the hSEPP, the hNRF, the hSMF, the hPCF, or the any hNF2 in the home network. The hSEPP, the hNRF, the hSMF, the hPCF, or the any hNF2 in the home network obtains a plaintext through decryption by using the shared key, and compares the plaintext with the serving PLMN ID; or the hSEPP, the hNRF, the hSMF, the hPCF, or the any hNF2 in the home network calculates a MAC check value, and then compares the calculated MAC check value with the received MAC check value; or the hSEPP, the hNRF, the hSMF, the hPCF, or the any hNF2 in the home network generates a hash value, and then compares the generated hash value with the received hash value. The verification succeeds if a comparison result is that the plaintext is consistent with the serving PLMN ID, the calculated MAC check value is consistent with the received MAC check value, or the generated hash value is consistent with the received hash value. Otherwise, the verification fails. If the verification fails, there is a spoofing attack.</p><p id="p-0589" num="0588"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a schematic interaction flowchart of another method for performing verification by using a PLMN ID according to an embodiment of this application. In <figref idref="DRAWINGS">FIG. <b>19</b></figref>, when a function entity in a first network expects to use a service provided by a network function entity in a second network, the following method may be performed. The first network may be, for example, a serving network, and the second network is a home network. Alternatively, the first network may be, for example, a home network, and the second network is a serving network.</p><p id="p-0590" num="0589">Step <b>1901</b>. A function entity in a first network sends a first message to a SEPP in the first network, where the first message carries a PLMN ID.</p><p id="p-0591" num="0590">The PLMN ID may be carried in a dedicated PLMN ID information element, or may be carried in a serving network name information element that includes a PLMN ID, or may be carried in a network function entity identifier that includes a PLMN ID, or may be carried in a terminal, user, or service identifier that includes a PLMN ID, or may be carried in another format. This is not specifically limited herein.</p><p id="p-0592" num="0591">The function entity in the first network may be any network function node that requires a roaming service in the first network, for example, an AMF, an SMF, or another node. This is not specifically limited herein.</p><p id="p-0593" num="0592">Optionally, when a function entity needs to use a service provided by a function entity in another network, the function entity may send a first message to a SEPP in a network in which the function entity is located. For example, when a function entity (for example, an AMF) in a serving network expects to use a service of a function entity (for example, an AUSF) in a home network, or when a function entity (for example, an AUSF) in a home network expects to use a service of a network function entity (for example, an AMF) in a serving network, the function entity sends a first message to a SEPP in a network in which the function entity is located. Optionally, the first message may be a message in an HTTP format.</p><p id="p-0594" num="0593">Step <b>1902</b>. After receiving the first message, the SEPP in the first network sends an N32 interface message to a SEPP in a second network, where the N32 interface message includes an N32 interface context identifier (N32 context id) and the PLMN ID carried in the first message, and the N32 context ID is used to instruct the SEPP in the second network to search for an N32 connection context (N32 connection context) corresponding to the SEPP in the first network.</p><p id="p-0595" num="0594">Optionally, after receiving the first message, the SEPP in the first network may perform security processing on the first message to convert the first message into an N32 interface message. It should be noted that, the SEPP in the first network may directly send the N32 interface message to the SEPP in the second network, or may indirectly send the N32 interface message to the SEPP in the second network by using an intermediate node.</p><p id="p-0596" num="0595">Optionally, the SEPP in the first network may perform integrity protection on the PLMN ID in the N32 interface message.</p><p id="p-0597" num="0596">Step <b>1903</b>. The SEPP in the second network receives the N32 interface message sent by the SEPP in the first network; obtains, based on the N32 interface context identifier in the N32 interface message, the N32 interface context corresponding to the SEPP in the first network; and determines whether a PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is the same as the PLMN ID in the N32 interface message.</p><p id="p-0598" num="0597">The N32 interface context includes an N32 interface context identifier and a remote PLMN ID (remote PLMN id). In practice, generally, a PLMN ID corresponding to the SEPP in the first network is the same as a PLMN ID corresponding to the function entity in the first network.</p><p id="p-0599" num="0598">If the PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is the same as the PLMN ID in the N32 interface message, it indicates that the PLMN ID is not modified, and step <b>1905</b> is performed. If the PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is different from the PLMN ID in the N32 interface message, step <b>1904</b> is performed.</p><p id="p-0600" num="0599">Optionally, in addition to obtaining the stored PLMN ID from the N32 interface context corresponding to the SEPP in the first network, the SEPP in the second network may further obtain, by using another method, the PLMN ID corresponding to a PLMN in which the SEPP in the first network is located. Specifically, if the PLMN ID that is obtained by the SEPP in the second network and that is corresponding to the PLMN network in which the SEPP in the first network is located is the same as the PLMN ID in the N32 interface message, it indicates that the PLMN ID is not modified, and step <b>1905</b> is performed. If the PLMN ID that is obtained by the SEPP in the second network and that is corresponding to the PLMN network in which the SEPP in the first network is located is different from the PLMN ID in the N32 interface message, step <b>1904</b> is performed. For example, a manner in which the SEPP in the second network determines the PLMN ID corresponding to the PLMN network in which the SEPP in the first network is located specifically includes: determining the PLMN ID based on a correspondence between a PLMN ID and information in a certificate, an IP address, a port, and other information that are corresponding to the SEPP in the first network.</p><p id="p-0601" num="0600">Optionally, if the SEPP in the first network performs integrity protection on the PLMN ID in step <b>1902</b>, before it is determined whether the PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is the same as the PLMN ID in the N32 interface message, integrity verification may be performed first. After the integrity verification succeeds, it is determined whether the PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is the same as the PLMN ID in the N32 interface message.</p><p id="p-0602" num="0601">Step <b>1904</b>. If the PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is different from the PLMN ID in the N32 interface message, the SEPP in the second network performs the following processing:</p><p id="p-0603" num="0602">The SEPP in the second network directly sends, to the SEPP in the first network, an N32 interface response message indicating a failure, or sends, to the SEPP in the first network by using an intermediate node, an N32 interface response message indicating a failure. The response message may or may not carry an error code. The error code may indicate a &#x201c;PLMN ID error&#x201d;, or &#x201c;unauthorized use of a PLMN ID&#x201d;, or another meaning. This is not specifically limited herein.</p><p id="p-0604" num="0603">Alternatively, the SEPP in the second network may not send a response message, but directly discard the received N32 interface message.</p><p id="p-0605" num="0604">Step <b>1905</b>. If the PLMN ID stored in the N32 interface context corresponding to the SEPP in the first network is the same as the PLMN ID in the N32 interface message, the SEPP in the second network performs other security processing on the N32 interface message to obtain a second message, and sends the second message to a network function entity in the second network, where the second message and the first message include same content.</p><p id="p-0606" num="0605">The network function entity in the second network may be any network function node that can provide a roaming service in the second network, for example, an AMF, an SMF, or another node. This is not specifically limited herein.</p><p id="p-0607" num="0606">Optionally, the second message may be a message in the HTTP format.</p><p id="p-0608" num="0607">It should be noted that, the NF in the first network, the SEPP in the first network, the SEPP in the second network, and the NF in the second network in this embodiment may be the first network element or the second network element in the foregoing embodiment. For related descriptions, refer to each other. Details are not described herein again.</p><p id="p-0609" num="0608">The solutions provided in this application are mainly described above from a perspective of interaction between network elements. It may be understood that, to implement the foregoing functions, each network element includes a corresponding hardware structure and/or software module for implementing each function. A person of ordinary skill in the art should be easily aware that, in combination with the examples described in the embodiments disclosed in this specification, units and algorithms steps may be implemented by hardware or a combination of hardware and computer software in this application. Whether a function is performed by hardware or hardware driven by computer software depends on particular applications and design constraints of the technical solutions. A person skilled in the art may use different methods to implement the described functions for each particular application, but it should not be considered that the implementation goes beyond the scope of this application.</p><p id="p-0610" num="0609">In the embodiments of this application, the first network element and the second network element each may be divided into function units based on the foregoing method examples. For example, each function unit may be obtained through division based on a corresponding function, or two or more functions may be integrated into one processing unit. The integrated unit may be implemented in a form of hardware, or may be implemented in a form of a software function unit. It should be noted that, in the embodiments of this application, unit division is an example, is merely a logical function division, and may be other division in actual implementation.</p><p id="p-0611" num="0610">When an integrated unit is used, <figref idref="DRAWINGS">FIG. <b>17</b></figref> is a possible example block diagram of an apparatus <b>1700</b> according to an embodiment of this application. The apparatus <b>1700</b> may exist in a form of software, or may be the foregoing first network element or second network element. The apparatus <b>1700</b> includes a processing unit <b>172</b> and a communications unit <b>173</b>. The processing unit <b>172</b> is configured to control and manage an action of the apparatus <b>1700</b>. The communications unit <b>173</b> is configured to support the apparatus <b>1700</b> in communicating with another network entity (for example, a base station or another mobility management network element). The apparatus <b>1700</b> may further include a storage unit <b>171</b>, configured to store program code and data of the apparatus <b>1700</b>.</p><p id="p-0612" num="0611">The processing unit <b>172</b> may be a processor or a controller, for example, may be a general-purpose central processing unit (CPU), a general purpose processor, a digital signal processor (DSP), an application-specific integrated circuit ASIC), a field programmable gate array (FPGA) or another programmable logical device, a transistor logic device, a hardware component, or a combination thereof. The processing unit <b>172</b> may implement or execute various example logical blocks, modules, and circuits described with reference to content disclosed in this application. Alternatively, the processor may be a combination of processors that implements a computing function, for example, a combination of one or more microprocessors, or a combination of a DSP and a microprocessor. The communications unit <b>173</b> may be a communications interface, a transceiver, a transceiver circuit, or the like. The communications interface is a general term. In specific implementation, the communications interface may include a plurality of interfaces, for example, may include an interface between a mobility management network element and a base station, an interface between a mobility management network element and another mobility management network element, and/or another interface. The storage unit <b>171</b> may be a memory.</p><p id="p-0613" num="0612">The foregoing first network element may be a data management network element, for example, may be the UDM in <figref idref="DRAWINGS">FIG. <b>1</b><i>a </i></figref>or <figref idref="DRAWINGS">FIG. <b>1</b><i>b</i></figref>, or may be a first security edge protection proxy, for example, may be the hSEPP in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the SEPP1 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, the IPX1 SEPP closest to the serving network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b></figref><i>c. </i></p><p id="p-0614" num="0613">When the apparatus <b>1700</b> is the data management network element, the processing unit <b>172</b> may support the apparatus <b>1700</b> in performing an action of the data management network element in the foregoing method examples. For example, the processing unit <b>172</b> is configured to support the apparatus <b>1700</b> in performing step S<b>503</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, step S<b>901</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, step S<b>133</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, and step S<b>151</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, and/or is configured to perform other technical processes described in this specification. The communications unit <b>173</b> may support communication between the apparatus <b>1700</b> and the second network element or another network element. For example, the communications unit <b>173</b> is configured to support the apparatus <b>1700</b> in performing steps S<b>502</b> and S<b>504</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, steps S<b>902</b> and S<b>904</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, steps S<b>132</b> and S<b>134</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, and steps S<b>152</b> and S<b>154</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>.</p><p id="p-0615" num="0614">When the apparatus <b>1700</b> is the first security edge protection proxy, the processing unit <b>172</b> may support the apparatus <b>1700</b> in performing an action of the first security edge protection proxy in the foregoing method examples, for example, performing step S<b>806</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>. The communications unit <b>173</b> may support communication between the apparatus <b>1700</b> and the second network element or another network element. For example, the communications unit <b>173</b> may support the apparatus <b>1700</b> in performing steps S<b>804</b>, S<b>805</b>, S<b>807</b>, and S<b>808</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>.</p><p id="p-0616" num="0615">The foregoing second network element may be a mobility management network element, for example, may be the AMF in <b>1</b><i>a </i>or <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, or may be a second security edge protection proxy, for example, may be the vSEPP in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the SEPP2 in <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, the IPX2 SEPP closest to the serving network in <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, or the roaming hub SEPP in <figref idref="DRAWINGS">FIG. <b>7</b></figref><i>c. </i></p><p id="p-0617" num="0616">When the apparatus <b>1700</b> is the mobility management network element, the processing unit <b>172</b> may support the apparatus <b>1700</b> in performing an action of the mobility management network element in the foregoing method examples. For example, the processing unit <b>172</b> is configured to support the apparatus <b>1700</b> in performing step S<b>501</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, step S<b>903</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, step S<b>131</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, and step S<b>153</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, and/or is configured to perform other technical processes described in this specification. The communications unit <b>173</b> may support communication between the apparatus <b>1700</b> and the first network element or another network element. For example, the communications unit <b>173</b> is configured to support the apparatus <b>1700</b> in performing steps S<b>502</b> and S<b>504</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, steps S<b>902</b> and S<b>904</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, steps S<b>132</b> and S<b>134</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, and steps S<b>152</b> and S<b>154</b> in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>.</p><p id="p-0618" num="0617">When the apparatus <b>1700</b> is the second security edge protection proxy, the processing unit <b>172</b> may support the apparatus <b>1700</b> in performing an action of the second security edge protection proxy in the foregoing method examples.</p><p id="p-0619" num="0618">When the processing unit <b>172</b> is a processor, the communications unit <b>173</b> is a communications interface, and the storage unit <b>171</b> is a memory, the apparatus <b>1700</b> in this embodiment of this application may be an apparatus <b>1800</b> shown in <figref idref="DRAWINGS">FIG. <b>18</b></figref>.</p><p id="p-0620" num="0619">As shown in <figref idref="DRAWINGS">FIG. <b>18</b></figref>, the apparatus <b>1800</b> includes a processor <b>182</b>, a communications interface <b>183</b>, and a memory <b>181</b>. Optionally, the apparatus <b>1800</b> may further include a bus <b>184</b>. The communications interface <b>183</b>, the processor <b>182</b>, and the memory <b>181</b> may be connected to each other by using the bus <b>184</b>. The bus <b>184</b> may be a peripheral component interconnect (PCI) bus, an extended industry standard architecture (EISA) bus, or the like. The bus <b>184</b> may be classified into an address bus, a data bus, a control bus, and the like. For ease of representation, only one thick line is used to represent the bus in <figref idref="DRAWINGS">FIG. <b>18</b></figref>, but it does not indicate that there is only one bus or only one type of bus.</p><p id="p-0621" num="0620">The foregoing embodiments may be all or partially implemented by using software, hardware, firmware, or any combination thereof. When software is used to implement the embodiments, the embodiments may be all or partially implemented in a form of a computer program product. The computer program product includes one or more computer instructions. When the computer program instructions are loaded and executed on a computer, the procedures or functions according to the embodiments of this application are all or partially generated. The computer may be a general-purpose computer, a dedicated computer, a computer network, or another programmable apparatus. The computer instructions may be stored in a computer readable storage medium, or may be transmitted from a computer readable storage medium to another computer readable storage medium. For example, the computer instructions may be transmitted from a website, computer, server, or data center to another website, computer, server, or data center in a wired (for example, a coaxial cable, an optical fiber, or a digital subscriber line (DSL)) or wireless (for example, infrared, radio, or microwave) manner. The computer readable storage medium may be any usable medium accessible by a computer, or a data storage device, such as a server or a data center, integrating one or more usable media. The usable medium may be a magnetic medium (for example, a floppy disk, a hard disk, or a magnetic tape), an optical medium (for example, a DVD), a semiconductor medium (for example, a solid state disk (SSD), or the like.</p><p id="p-0622" num="0621">The various illustrative logical units and circuits described in the embodiments of this application may implement or operate the described functions by using a general purpose processor, a digital signal processor, an application-specific integrated circuit (ASIC), a field programmable gate array (FPGA) or another programmable logical apparatus, a discrete gate or transistor logic, a discrete hardware component, or a design of any combination thereof. The general purpose processor may be a microprocessor. Optionally, the general purpose processor may be any conventional processor, controller, microcontroller, or state machine. The processor may be implemented by a combination of computing apparatuses, such as a digital signal processor and a microprocessor, a plurality of microprocessors, one or more microprocessors with a digital signal processor core, or any other similar configuration.</p><p id="p-0623" num="0622">Steps of the methods or algorithms described in the embodiments of this application may be directly embedded into hardware, a software unit executed by a processor, or a combination thereof. The software unit may be stored in a RAM memory, a flash memory, a ROM memory, an EPROM memory, an EEPROM memory, a register, a hard disk, a removable disk, a CD-ROM, or any other form of storage medium in the art. For example, the storage medium may be connected to a processor, so that the processor can read information from the storage medium and write information to the storage medium. Optionally, the storage medium may be integrated into a processor. The processor and the storage medium may be disposed in an ASIC, and the ASIC may be disposed in a terminal device. Optionally, the processor and the storage medium may be disposed in different components of a terminal device.</p><p id="p-0624" num="0623">These computer program instructions may also be loaded onto a computer or another programmable data processing device, so that a series of operations and steps are performed on the computer or the another programmable device, thereby generating computer-implemented processing. Therefore, the instructions executed on the computer or the another programmable device provide steps for implementing a specific function in one or more processes in the flowcharts and/or in one or more blocks in the block diagrams.</p><p id="p-0625" num="0624">Although this application is described with reference to specific features and the embodiments thereof, apparently, various modifications and combinations may be made to this application without departing from the spirit and scope of this application. Correspondingly, the specification and accompanying drawings are merely example descriptions of this application defined by the accompanying claims, and are considered to cover any or all of modifications, variations, combinations, or equivalents within the scope of this application. Apparently, a person skilled in the art can make various modifications and variations to this application without departing from the spirit and scope of this application. This application is intended to cover these modifications and variations of this application provided that they fall within the scope of protection defined by the following claims and their equivalent technologies.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for performing verification using a public land mobile network identifier (PLMN ID), comprising:<claim-text>receiving, by a first security edge protection proxy in a first network, a first message from a first network function entity in the first network, wherein the first message, comprising a PLMN ID of the first network, requests to use a service provided by a second network function entity in a second network;</claim-text><claim-text>sending, by the first security edge protection proxy, an N32 interface message to a second security edge protection proxy in a second network, wherein the N32 interface message carries an N32 interface context identifier and the PLMN ID of the first network;</claim-text><claim-text>receiving, by the second security edge protection proxy, the N32 interface message;</claim-text><claim-text>determining, by the second security edge protection proxy, whether a remote PLMN ID comprised in an N32 interface context corresponding to the N32 interface context identifier is the same as the PLMN ID carried in the N32 interface message;</claim-text><claim-text>in response to determining that the remote PLMN ID comprised in the N32 interface context is the same as the PLMN ID carried in the N32 interface message, sending, by the second security edge protection proxy, a second message to the second network function entity for requesting the service provided by the second network function entity.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises:<claim-text>receiving, by the first network function entity, a third message from a user equipment (UE); and</claim-text><claim-text>in response to the third message from the UE, sending, by the first network function entity, the first message to the first security edge protection proxy.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the third message is a registration request message.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises:<claim-text>in response to determining that the remote PLMN ID comprised in the N32 interface context is different from the PLMN ID carried in the N32 interface message, sending, by the second security edge protection proxy to the first security edge protection proxy in the first network, an N32 interface response message indicating a failure.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the N32 interface response message comprises an error code indicating a PLMN ID failure.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the PLMN ID in the first message is carried in at least one of the following:<claim-text>a dedicated PLMN ID information element in the first message,<claim-text>a serving network name information element that comprises the PLMN ID,</claim-text><claim-text>a network function entity identifier that comprises the PLMN ID, or</claim-text></claim-text><claim-text>a terminal identifier, a user identifier, or a service identifier, wherein the terminal identifier, the user identifier, or the service identifier comprises the PLMN ID.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first network is a serving network, and the second network is a home network.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A communications system, comprising a first security edge protection proxy in a first network and a second security edge protection proxy in a second network, wherein<claim-text>the first security edge protection proxy comprises:<claim-text>at least one first processor; and</claim-text><claim-text>one or more first memories coupled to the at least one first processor and storing first programming instructions for execution by the at least one first processor to cause the first security edge protection proxy to:<claim-text>receive a first message from a first network function entity in the first network, wherein the first message, comprising a PLMN ID of the first network, requests to use a service provided by a second network function entity in the second network;</claim-text><claim-text>send an N32 interface message to the second security edge protection proxy, wherein the N32 interface message carries an N32 interface context identifier and the PLMN ID of the first network; and</claim-text></claim-text></claim-text><claim-text>the second security edge protection proxy comprises:<claim-text>at least one second processor; and</claim-text><claim-text>one or more second memories coupled to the at least one second processor and storing second programming instructions for execution by the at least one second processor to cause the second security edge protection proxy to:<claim-text>receive the N32 interface message from the first security edge protection proxy;</claim-text><claim-text>determine whether a remote PLMN ID comprised in an N32 interface context corresponding to the N32 interface context identifier is the same as the PLMN ID carried in the N32 interface message; and</claim-text><claim-text>in response to determining that the remote PLMN ID comprised in the N32 interface context is the same as the PLMN ID carried in the N32 interface message, send a second message to a network function entity in the second network for requesting the service provided by the second network function entity.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The communications system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the system further comprises the first network function entity, wherein the first network function entity comprises:<claim-text>at least one third processor; and</claim-text><claim-text>one or more third memories coupled to the at least one third processor and storing third programming instructions for execution by the at least one third processor to cause the first network function entity to:<claim-text>receive a third message from a user equipment (UE); and</claim-text><claim-text>in response to the third message from the UE, send the first message to the first security edge protection proxy.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The communications system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the third message is a registration request message.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The communications system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the second programming instructions, when executed by the at least one second processor, cause the second security edge protection proxy to: in response to determining that the remote PLMN ID comprised in the N32 interface context is different from the PLMN ID carried in the N32 interface message, send, to the first security edge protection proxy in the first network, an N32 interface response message indicating a failure.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The communications system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the N32 interface response message comprises an error code indicating a PLMN ID failure.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The communications system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the PLMN ID in the first message is carried in at least one of the following:<claim-text>a dedicated PLMN ID information element in the first message,<claim-text>a serving network name information element that comprises the PLMN ID,</claim-text><claim-text>a network function entity identifier that comprises the PLMN ID, or</claim-text></claim-text><claim-text>a terminal identifier, a user identifier, or a service identifier, wherein the terminal identifier, the user identifier, or the service identifier comprises the PLMN ID.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The communications system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the first network is a serving network, and the second network is a home network.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer readable storage medium, wherein the computer readable storage medium stores instructions which, when executed on an apparatus, cause the apparatus to:<claim-text>receive an N32 interface message from a first security edge protection proxy in a first network, wherein the N32 interface message carries an N32 interface context identifier and a PLMN ID of the first network;</claim-text><claim-text>determine whether a remote PLMN ID comprised in an N32 interface context corresponding to the N32 interface context identifier is the same as the PLMN ID carried in the N32 interface message; and</claim-text><claim-text>in response to determining that the remote PLMN ID comprised in the N32 interface context is the same as the PLMN ID carried in the N32 interface message, send a second message to a second network function entity in a second network.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the instructions further cause the apparatus to:<claim-text>in response to determining that the remote PLMN ID comprised in the N32 interface context is different from the PLMN ID carried in the N32 interface message, send, to the first security edge protection proxy, an N32 interface response message indicating a failure.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the N32 interface response message comprises an error code indicating a PLMN ID failure.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the PLMN ID carried in the N32 interface message is a PLMN ID carried in a first message from a first network function entity in the first network to the first security edge protection proxy.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the PLMN ID in the first message is carried in a dedicated PLMN ID information element in the first message, is carried in at least one of the following:<claim-text>a dedicated PLMN ID information element in the first message,<claim-text>a serving network name information element that comprises the PLMN ID,</claim-text><claim-text>a network function entity identifier that comprises the PLMN ID, or</claim-text></claim-text><claim-text>a terminal identifier, a user identifier, or a service identifier, wherein the terminal identifier, the user identifier, or the service identifier comprises the PLMN ID.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the first network is a serving network, and the second network is a home network, wherein the second network function entity is a network function entity that provides a roaming service in the home network.</claim-text></claim></claims></us-patent-application>