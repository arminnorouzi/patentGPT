<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004809A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004809</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17780479</doc-number><date>20200723</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201911198187.X</doc-number><date>20191129</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>082</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e61">Method and Device for Model Compression of Neural Network</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Inspur Suzhou Intelligent Technology Co., Ltd.</orgname><address><city>Suzhou</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Guo</last-name><first-name>Shaoyan</first-name><address><city>Suzhou</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2020/103697</doc-number><date>20200723</date></document-id><us-371c12-date><date>20220526</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method and device for model compression of a neural network. The method comprises: recording input and output parameters of each layer of network in a network structure; dividing the network structure into several small networks according to the input and output parameters; setting a pruning flag bit of a first convolutional layer in each small network to be zero to obtain a pruned small network; training each pruned small network to obtain a network weight and a weight mask; recording a pruned channel index number of each convolutional layer of a pruned small network with the weight mask of zero; and carrying out decomposition calculation on each pruned small network according to the pruned channel index number. According to the method, a calculation amount and the size of a model is reduced, and during network deployment, the model can be loaded with one click, thus reducing usage difficulty.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="106.68mm" wi="125.22mm" file="US20230004809A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="119.30mm" wi="127.25mm" file="US20230004809A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority to Chinese Patent Application No. 201911198187.X, filed to the Chinese patent office on Nov. 29, 2019, entitled &#x201c;METHOD AND DEVICE FOR MODEL COMPRESSION OF NEURAL NETWORK&#x201d;, the entire contents of which are incorporated herein by reference.</p><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to the field of computers, and particularly to a method and device for model compression of a neural network.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">A key technology for a deep neural network is widely applied, in conjunction with the acquisition of big data, to the fields such as image classification, object detection, voice recognition and natural language processing. With the continuous performance improvement of a deep neural network model, there are increasing demands on the volume and calculation of the model, which results in dependence on a calculation platform with high power consumption. In order to solve restrictions on storage resources and the memory access bandwidth in a real-time embedded system and the problem that the calculation resources are relatively insufficient, a technology for compressing the deep neural network model for embedded applications has been researched to reduce the volume of the model and the demand on a storage space and optimize a model calculation process.</p><p id="p-0005" num="0004">Existing deep model compression methods are integrated, and they are mainly divided into four types: parameter pruning and sharing, low-rank factorization, transferred/compact convolutional filters and knowledge distillation. The three methods, namely the low-rank factorization, the transferred/compact convolutional filters and the knowledge distillation, are generally involved in the change of a network structure, and therefore, the present disclosure mainly aims at improving the parameter pruning and sharing.</p><p id="p-0006" num="0005">The existing pruning algorithm includes two types, namely non-structural pruning and structural pruning. A pruned model is embodied in a manner that a numerical value of a weight of the pruned model is 0, a numerical value of a weight of an unpruned model is float data except 0, and therefore, the size of the model is essentially unchanged. In an actual application, a model pruned according to the non-structural pruning algorithm generally adopts a method such as data indexing, so that the actual size of the model is changed. As for a model pruned according to the structural pruning algorithm, the parameter of the current convolutional layer is generally required to be reduced according to a pruning ratio, and corresponding convolutional operation is required to be added on the current convolutional layer according to an index number of a pruned channel. However, the model which is pruned to be compressed is low in compression ratio, and when the model is loaded, a specific decompression module is required to be added; and due to the adoption of a network of a shortcut structure, some convolutional layers are excessively pruned.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">For this objective, an embodiment of the present disclosure aims at providing a method for model compression of a neural network. According to the method, a calculation amount can be directly reduced, the size of a model is reduced, and during network deployment, the model can be loaded with one click, thus reducing the usage difficulty.</p><p id="p-0008" num="0007">Based on the above-mentioned objective, one aspect of an embodiment of the present disclosure provides a method for model compression of a neural network, including the following steps:</p><p id="p-0009" num="0008">recording input and output parameters of each layer of network in a network structure;</p><p id="p-0010" num="0009">dividing the network structure into a plurality of small networks according to the input and output parameters;</p><p id="p-0011" num="0010">setting a pruning flag bit of a first convolutional layer in each small network to be 0 to obtain a small pruned network;</p><p id="p-0012" num="0011">training each small pruned network by means of a channel pruning algorithm to obtain a network weight and a weight mask;</p><p id="p-0013" num="0012">recording a pruned channel index number of each convolutional layer of any small pruned network that has a weight mask of 0; and</p><p id="p-0014" num="0013">carrying out decomposition calculation on each small pruned network according to the pruned channel index number.</p><p id="p-0015" num="0014">According to an embodiment of the present disclosure, the step of recording the input and output parameters of each layer of network in the network structure includes:</p><p id="p-0016" num="0015">recording an input count, an output count, an input name and an output name of each layer of network in the network structure.</p><p id="p-0017" num="0016">According to an embodiment of the present disclosure, the step of dividing the network structure into the a plurality of small networks according to the input and output parameters includes:</p><p id="p-0018" num="0017">if both the input count and the output count of the current network layer are 1 and the input name thereof is inconsistent with input name of any other network layer, assigning the current network layer and a previous network layer into the same small network;</p><p id="p-0019" num="0018">if either the input count or the output count of the current network layer is not 1, assigning the current network layer into one small network; and</p><p id="p-0020" num="0019">if both the input count and the output count of the current network layer are 1 and the input name thereof is consistent with input name of one of other network layers, assigning the current network layer into one small network.</p><p id="p-0021" num="0020">According to an embodiment of the present disclosure, the channel pruning algorithm includes a dynamic channel pruning algorithm and a channel pruning algorithm based on automatic machine learning.</p><p id="p-0022" num="0021">According to an embodiment of the present disclosure, the step of carrying out decomposition calculation on each small pruned network according to the pruned channel index number includes:</p><p id="p-0023" num="0022">carrying out sequential traversing from the last layer to the first layer in each small pruned network, and pruning a corresponding index number in an output channel corresponding to a corresponding layer according to the pruned channel index number of the corresponding layer in each small pruned network.</p><p id="p-0024" num="0023">Another aspect of an embodiment of the present disclosure further provides a device for model compression of a neural network, wherein the device includes:</p><p id="p-0025" num="0024">at least one processor; and</p><p id="p-0026" num="0025">a memory, wherein the memory stores program codes that can be run by the processor, and when the program codes are run by the processor, the following steps are carried out:</p><p id="p-0027" num="0026">recording input and output parameters of each layer of network in a network structure;</p><p id="p-0028" num="0027">dividing the network structure into a plurality of small networks according to the input and output parameters;</p><p id="p-0029" num="0028">setting a pruning flag bit of a first convolutional layer in each small network to be 0 to obtain a small pruned network;</p><p id="p-0030" num="0029">training each small pruned network by means of a channel pruning algorithm to obtain a network weight and a weight mask;</p><p id="p-0031" num="0030">recording a pruned channel index number of each convolutional layer of any small pruned network that has a weight mask of 0; and</p><p id="p-0032" num="0031">carrying out decomposition calculation on each small pruned network according to the pruned channel index number.</p><p id="p-0033" num="0032">According to an embodiment of the present disclosure, the step of recording the input and output parameters of each layer of network in the network structure includes:</p><p id="p-0034" num="0033">recording an input count, an output count, an input name and an output name of each layer of network in the network structure.</p><p id="p-0035" num="0034">According to an embodiment of the present disclosure, the step of dividing the network structure into the a plurality of small networks according to the input and output parameters includes:</p><p id="p-0036" num="0035">if both the input count and the output count of the current network layer are 1 and the input name thereof is inconsistent with input name of any other network layer, assigning the current network layer and a previous network layer into the same small network;</p><p id="p-0037" num="0036">if either the input count or the output count of the current network layer is not 1, assigning the current network layer into one small network; and</p><p id="p-0038" num="0037">if both the input count and the output count of the current network layer are 1 and the input name thereof is consistent with input name of one of other network layers, assigning the current network layer into one small network.</p><p id="p-0039" num="0038">According to an embodiment of the present disclosure, the channel pruning algorithm includes a dynamic channel pruning algorithm and a channel pruning algorithm based on automatic machine learning.</p><p id="p-0040" num="0039">According to an embodiment of the present disclosure, the step of carrying out decomposition calculation on each small pruned network according to the pruned channel index number includes:</p><p id="p-0041" num="0040">carrying out sequential traversing from the last layer to the first layer in each small pruned network, and pruning a corresponding index number in an output channel corresponding to a corresponding layer according to the pruned channel index number of the corresponding layer in each small pruned network.</p><p id="p-0042" num="0041">The present disclosure has the following beneficial technical effects: according to the method for model compression of the neural network in accordance with the embodiment of the present disclosure, which adopts the technical solution: recording input and output parameters of each layer of network in a network structure; dividing the network structure into a plurality of small networks according to the input and output parameters; setting a pruning flag bit of a first convolutional layer in each small network to be 0 to obtain a small pruned network; training each small pruned network by means of a channel pruning algorithm to obtain a network weight and a weight mask; recording a pruned channel index number of each convolutional layer of any small pruned network that has a weight mask of 0; and carrying out decomposition calculation on each small pruned network according to the pruned channel index number, a calculation amount can be directly reduced, the size of a model is reduced, and during network deployment, the model can be loaded with one click, thus reducing the usage difficulty.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0043" num="0042">In order to describe the technical solutions in the embodiments of the present disclosure or the prior art more clearly, the accompanying drawings required for describing the embodiments or the prior art will be briefly described below. Apparently, the accompanying drawings in the following description show only some embodiments of the present disclosure, and a person of ordinary skill in the art may still derive other accompanying drawings from these accompanying drawings without creative efforts.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic process diagram of a method for model compression of a neural network in accordance with an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0045" num="0044">In order to make the objectives, technical solutions and advantages of the present disclosure clearer and more understandable. The embodiments of the present disclosure will be further described in detail below in conjunction with specific embodiments and reference to the accompanying drawings.</p><p id="p-0046" num="0045">Based on the above-mentioned objectives, a first aspect of an embodiment of the present disclosure provides an embodiment of a method for model compression of a neutral network. <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a schematic process diagram of the method.</p><p id="p-0047" num="0046">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the method may include the following steps:</p><p id="p-0048" num="0047">S<b>1</b>, input and output parameters of each layer of network in a network structure are recorded, and all the layers may be numbered from the 0<sup>th </sup>layer to the n<sup>th </sup>layer;</p><p id="p-0049" num="0048">S<b>2</b>, the network structure is divided into a plurality of small networks according to the input and output parameters, and a large network with n layers is divided into m small networks according to different parameters;</p><p id="p-0050" num="0049">S<b>3</b>, a pruning flag bit of a first convolutional layer in each small network is set to be 0 to obtain a small pruned network, and pruning flag bits of other layers are all set to be 1, wherein 0 represents non-pruning, and 1 represents pruning;</p><p id="p-0051" num="0050">S<b>4</b>, each small pruned network is trained by means of a channel pruning algorithm to obtain a network weight and a weight mask, in theory, the small pruned network may be trained by adopting any one channel pruning algorithm to obtain many network parameters, we need to use a weight and its mask herein, if the weight is pruned, the mask is 0, otherwise, the mask is 1;</p><p id="p-0052" num="0051">S<b>5</b>, a pruned channel index number of each convolutional layer of any small pruned network that has a weight mask of 0 is recorded, that is, if the channel is pruned, an index number of the channel is recorded; and</p><p id="p-0053" num="0052">S<b>6</b>, decomposition calculation is carried out on each small pruned network according to the pruned channel index number, that is, if there are k layers in the small pruned network, index numbers corresponding to output channels on k-1 layers are pruned according to a channel pruning index number of the k<sup>th </sup>layer until all layers of the small network are traversed. The finally obtained network parameter only include a weight (unpruned). For example, if a weight is 5&#xd7;10&#xd7;3&#xd7;3 and the index number of the k<sup>th </sup>layer is recorded as 0, 1, 2 in a second dimension, the index number recorded as 0, 1, 2 in a first dimension in a weight 10&#xd7;8&#xd7;3&#xd7;2 of the (k-1)<sup>th </sup>layer is pruned.</p><p id="p-0054" num="0053">By means of a compression algorithm for a neural network in accordance with the present disclosure, in a network of a shortcut structure, a network is reasonably pruned, and the performance is guaranteed. It is unnecessary to increase specific convolution operation for the pruned model, the size of a model is directly reduced, and during model reasoning, one-click loading is achieved, and decoding is not needed.</p><p id="p-0055" num="0054">By adopting the above-mentioned technical solution, a calculation amount can be directly reduced, the size of the model is reduced, and during network deployment, the model can be loaded with one click, thus reducing the usage difficulty.</p><p id="p-0056" num="0055">In a preferred embodiment of the present disclosure, the step that the input and output parameters of each layer of network in the network structure are recorded includes:</p><p id="p-0057" num="0056">an input count, an output count, an input name and an output name of each layer of network in the network structure are recorded.</p><p id="p-0058" num="0057">In a preferred embodiment of the present disclosure, the step that the network structure is divided into the a plurality of small networks according to the input and output parameters includes:</p><p id="p-0059" num="0058">if both of the input count and the output count of the current network layer are 1 and the input name thereof is inconsistent with input name of any other network layer, the current network layer and a previous network layer are assigned into the same small network; if either the input count or the output count of the current network layer is not 1, the current network layer is assigned into one small network; and if both the input count and the output count of the current network layer are 1 and the input name thereof is consistent with input name of one of other network layers, the current network layer is assigned into one small network.</p><p id="p-0060" num="0059">In a preferred embodiment of the present disclosure, the channel pruning algorithm includes a dynamic channel pruning algorithm and a channel pruning algorithm based on automatic machine learning. Other channel pruning algorithms may also be used, in theory, any one algorithm may be used.</p><p id="p-0061" num="0060">In a preferred embodiment of the present disclosure, the step that decomposition calculation is carried out on each small pruned network according to the pruned channel index number includes:</p><p id="p-0062" num="0061">sequential traversing is carried out from the last layer to the first layer in each small pruned network, and a corresponding index number in an output channel corresponding to a corresponding layer is pruned according to the pruned channel index number of the corresponding layer (the layer which is currently traversed) in each small pruned network. That is, if there are i layers in the small pruned network, index numbers corresponding to output channels on i-1 layers are pruned according to a channel pruning index number of the i<sup>th </sup>layer until all layers of the small network are traversed. The finally obtained network parameter only include a weight (unpruned). For example, if a weight is 5&#xd7;10&#xd7;3&#xd7;3 and the index number of the i<sup>th </sup>layer is recorded as 0, 1, 2 in a second dimension, the index number recorded as 0, 1, 2 in a first dimension in a weight 10&#xd7;8&#xd7;3&#xd7;2 of the (i-1)<sup>th </sup>layer is pruned.</p><p id="p-0063" num="0062">In the present disclosure, the above-mentioned method may be completed by adding the following two modules in an existing quantization algorithm.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0063">1) A network segmentation module: when channels are pruned, an input channel is selected to be pruned, rather than an output channel, which is due to the fact that: firstly, if the convolutional layer contains bias, it needs to be ensured that the index number of the output channel of the pruned convolutional layer is consistent with the index number of bias; and secondly, a layer adjacent to the convolutional layer is a batchnorm layer (existing network structures are generally cony and batchnorm), during calculation on the batchnorm layer, the pruned channel is restored, thereby making the pruning meaningless. Found in experiments, for a directly-connected network structure, that is, there is only one input and one output on each layer, all convolutional layers may be pruned except the first convolutional layer (for a common CNN having three image input channels, if the channels are directly reduced, it is equivalent to direct reduction of original information of an image). However, for a resnet50 network of the shortcut structure, although all the convolutional layers may be pruned, calculation may not be reduced in practice. The reduction of the input channel of the current convolutional layer is equivalent to the reduction of the output channel of a previous layer (adjacent connection) of the current convolutional layer. When inputs of two convolutional layers come from the same layer, it has to be ensured that the index numbers of the input channels pruned by the two convolutional layers are consistent, however, for two different convolutions, the same index input channels have different importance, and therefore, it is impossible to ensure that the index numbers of the input channels pruned by the two different convolutions are consistent. Therefore, in the shortcut structure, the convolution having single input and single output is only pruned.</li>        <li id="ul0002-0002" num="0064">2) A channel index compression module: the weight of the pruned network is 0 relative to the pruned input channel. In practice, in order to ensure that the pruned channel does not participate in calculation, a convolutional layer is generally added in front of the convolutional layer, and the pruned channel is masked. However, by means of such a manner, the additional convolutional calculation is increased while the calculation amount of the current layer is reduced. Therefore, in order to realize real direct reduction of the calculation amount, the convolutional calculation and a relationship between connected layers are analyzed, and finally, the convolutional calculation is actually reduced. The core concept is that the currently pruned input channel and the output channel connected with the layer (conv and batchnorm) connected with the input channel may also be accordingly pruned. For the resnet50 network, specific steps include: firstly, a network structure is divided into n subnetworks, and there is only one input and one output on each layer of each subnetwork; and secondly, gradually upward decomposition calculation is carried out from the last layer of each subnetwork, that is, index numbers of pruned channels of the n<sup>th </sup>layer are recorded, and output channels of the (n-1)<sup>th </sup>layer are pruned according to the recorded index numbers of channels of the n<sup>th </sup>layer until all the layers are traversed.</li>    </ul>    </li></ul></p><p id="p-0064" num="0065">By adopting the above-mentioned technical solutions, flexible control on the safety level of a system can be achieved, the normal operation of service can be ensured, the same set of storage system can meet various demands on safety levels of users, configured contents are simply processed and are prevented from being tedious, the problem that the users cannot directly amend configuration files in the case that the system does not allow to directly amend the files is solved, safety uniformity and flexible control of various services of the storage system are achieved, and the problem that errors may be caused by direct manual amendment of the configuration files is avoided.</p><p id="p-0065" num="0066">It should be noted that, understood by the ordinary skill in the art, the implementation of all or parts of processes in the methods in the above-mentioned embodiments may be completed by relevant hardware instructed by the computer program, the above-mentioned program may be stored in a computer readable storage medium, and the program may include the processes in all the above-mentioned embodiments of the method when being executed. A storage medium of the program may be a magnetic disk, an optical disk, an ROM (Read-Only Memory) or an RAM (Random Access Memory) and the like. The above-mentioned embodiments of the computer program may achieve the same or similar effects as any one of the above-mentioned corresponding embodiments of the method.</p><p id="p-0066" num="0067">In addition, the method disclosed in accordance with the embodiments of the present disclosure may be further implemented as a computer program executed by a CPU, and the computer program may be stored in a computer readable storage medium. When the computer program is executed by the CPU, the above-mentioned functions limited in the method disclosed in accordance with the embodiments of the present disclosure are executed.</p><p id="p-0067" num="0068">Based on the above-mentioned objectives, a second aspect of an embodiment of the present disclosure provides a device for model compression of a neural network, wherein the device includes:</p><p id="p-0068" num="0069">at least one processor; and</p><p id="p-0069" num="0070">a memory, wherein the memory stores program codes that can be run by the processor, and when the program codes are run by the processor, the following steps are carried out:</p><p id="p-0070" num="0071">input and output parameters of each layer of network in a network structure are recorded;</p><p id="p-0071" num="0072">the network structure is divided into a plurality of small networks according to the input and output parameters;</p><p id="p-0072" num="0073">a pruning flag bit of a first convolutional layer in each small network is set to be 0 to obtain a small pruned network;</p><p id="p-0073" num="0074">each small pruned network is trained by means of a channel pruning algorithm to obtain a network weight and a weight mask;</p><p id="p-0074" num="0075">a pruned channel index number of each convolutional layer of a small pruned network that has a weight mask of 0 is recorded; and</p><p id="p-0075" num="0076">decomposition calculation is carried out on each small pruned network according to the pruned channel index number.</p><p id="p-0076" num="0077">In a preferred embodiment of the present disclosure, the step that the input and output parameters of each layer of network in the network structure are recorded includes:</p><p id="p-0077" num="0078">an input count an output count, an input name and an output name of each layer of network in the network structure are recorded.</p><p id="p-0078" num="0079">In a preferred embodiment of the present disclosure, the step that the network structure is divided into the a plurality of small networks according to the input and output parameters includes:</p><p id="p-0079" num="0080">if both of the input count and the output count of the current network layer are 1 and the input name thereof is inconsistent with input name of any other network layer, the current network layer and a previous network layer are assigned into the same small network; if either the input count or the output count of the current network layer is not 1, the current network layer is assigned into one small network; and if both the input count and the output count of the current network layer are 1 and the input name thereof is consistent with input name of one of other network layers, the current network layer is assigned into one small network.</p><p id="p-0080" num="0081">In a preferred embodiment of the present disclosure, the channel pruning algorithm includes a dynamic channel pruning algorithm and a channel pruning algorithm based on automatic machine learning.</p><p id="p-0081" num="0082">In a preferred embodiment of the present disclosure, the step that decomposition calculation is carried out on each small pruned network according to the pruned channel index number includes:</p><p id="p-0082" num="0083">sequential traversing is carried out from the last layer to the first layer in each small pruned network, and a corresponding index number in an output channel corresponding to a corresponding layer is pruned according to the pruned channel index number of the corresponding layer in each small pruned network.</p><p id="p-0083" num="0084">It should be specifically noted that, in the embodiment of the above-mentioned system, the working processes of various modules are specifically described with the embodiment of the above-mentioned method, and it will be readily envisioned by the skilled in the art that these modules are applied to other embodiments of the above-mentioned method.</p><p id="p-0084" num="0085">In addition, the steps of the above-mentioned method and the units or modules of the system may also be implemented by means of a controller and a computer readable storage medium for storing a computer program enabling the controller to implement the above-mentioned steps or functions of the units or modules.</p><p id="p-0085" num="0086">It should be further understood by those skilled in the art that various exemplary logic blocks, modules, circuits and algorithm steps described in conjunction with the embodiments disclosed herein may be implemented as electronic hardware, computer software or a combination of both. In order to describe such interchangeability of the hardware and the software clearly, general description has been performed according to functions of various schematic components, blocks, modules, circuits and steps. Whether these functions are implemented as hardware or software depends upon specific applications and design constraints applied to the overall system. Those skilled in the art may adopt various methods to achieve the described functions in each specific application, which, however, should not be considered as departing from the scope disclosed by the embodiments of the present disclosure.</p><p id="p-0086" num="0087">The above-mentioned embodiments, particularly any &#x201c;preferred&#x201d; embodiments are implemented possible embodiments and are merely proposed for clearly understanding the principle of the present disclosure. Many variations and modifications may be made to the above-mentioned embodiments without departing the spirit and principle of the technology described herein. All the modifications are intended to be included in the scope of the present disclosure and protected by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for model compression of a neural network, comprising the following steps:<claim-text>recording input and output parameters of each layer of network in a network structure;</claim-text><claim-text>dividing the network structure into a plurality of small networks according to the input and output parameters;</claim-text><claim-text>setting a pruning flag bit of a first convolutional layer in each small network to be 0 to obtain a small pruned network;</claim-text><claim-text>training each small pruned network by means of a channel pruning algorithm to obtain a network weight and a weight mask;</claim-text><claim-text>recording a pruned channel index number of each convolutional layer of any small pruned network that has a weight mask of 0; and</claim-text><claim-text>carrying out decomposition calculation on each small pruned network according to the pruned channel index number.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of recording the input and output parameters of each layer of network in the network structure comprises:<claim-text>recording an input count, an output count, an input name and an output name of each layer of network in the network structure.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the step of dividing the network structure into the plurality of small networks according to the input and output parameters comprises:<claim-text>if both the input count and the output count of the current network layer are 1 and the input name thereof is inconsistent with input name of any other network layer, assigning the current network layer and a previous network layer into the same small network;</claim-text><claim-text>if either the input count or the output count of the current network layer is not 1, assigning the current network layer into one small network; and</claim-text><claim-text>if both the input count and the output count of the current network layer are 1 and the input name thereof is consistent with input name of one of other network layers, assigning the current network layer into one small network.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the channel pruning algorithm comprises a dynamic channel pruning algorithm and a channel pruning algorithm based on automatic machine learning.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of carrying out decomposition calculation on each small pruned network according to the pruned channel index number comprises:<claim-text>carrying out sequential traversing from the last layer to the first layer in each small pruned network, and pruning a corresponding index number in an output channel corresponding to a corresponding layer according to the pruned channel index number of the corresponding layer in each small pruned network.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A device for model compression of a neural network, wherein the device comprises:<claim-text>at least one processor; and</claim-text><claim-text>a memory, wherein the memory stores program codes that can be run by the processor, and when the program codes are run by the processor, the following steps are carried out:</claim-text><claim-text>recording input and output parameters of each layer of network in a network structure;</claim-text><claim-text>dividing the network structure into a plurality of small networks according to the input and output parameters;</claim-text><claim-text>setting a pruning flag bit of a first convolutional layer in each small network to be 0 to obtain a small pruned network;</claim-text><claim-text>training each small pruned network by means of a channel pruning algorithm to obtain a network weight and a weight mask;</claim-text><claim-text>recording a pruned channel index number of each convolutional layer of any small pruned network that has a weight mask of 0; and</claim-text><claim-text>carrying out decomposition calculation on each small pruned network according to the pruned channel index number.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the step of recording the input and output parameters of each layer of network in the network structure comprises:<claim-text>recording an input count, an output count, an input name and an output name of each layer of network in the network structure.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The device of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the step of dividing the network structure into the plurality of small networks according to the input and output parameters comprises:<claim-text>if both the input count and the output count of the current network layer are 1 and the input name thereof is inconsistent with input name of any other network layer, assigning the current network layer and a previous network layer into the same small network;</claim-text><claim-text>if either the input count or the output count of the current network layer is not 1, assigning the current network layer into one small network; and</claim-text><claim-text>if both the input count and the output count of the current network layer are 1 and the input name thereof is consistent with input name of one of other network layers, assigning the current network layer into one small network.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the channel pruning algorithm comprises a dynamic channel pruning algorithm and a channel pruning algorithm based on automatic machine learning.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the step of carrying out decomposition calculation on each small pruned network according to the pruned channel index number comprises:<claim-text>carrying out sequential traversing from the last layer to the first layer in each small pruned network, and pruning a corresponding index number in an output channel corresponding to a corresponding layer according to the pruned channel index number of the corresponding layer in each small pruned network.</claim-text></claim-text></claim></claims></us-patent-application>