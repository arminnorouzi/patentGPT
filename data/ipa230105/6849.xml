<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006850A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006850</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17393042</doc-number><date>20210803</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>18</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>29</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>1831</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>1827</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>65</main-group><subgroup>80</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>7</main-group><subgroup>155</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUTOMATIC REPAIR OF WEB CONFERENCE SESSION RECORDING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2021/103441</doc-number><date>20210630</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17393042</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>CITRIX SYSTEMS, INC.</orgname><address><city>Fort Lauderdale</city><state>FL</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Liu</last-name><first-name>Lei</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Yuan</last-name><first-name>Xiao</first-name><address><city>Nanjing</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for repairing a recording of a web conference session may include generating, at a first client device, a first recording of the web conference session with a second client device. The quality of the data received from the second client device may be monitored. In response to the quality of the data being below a threshold level, a first command to start a second recording of the web conference session at the second client device may be sent to the second client device. The first recording of the web conference session may be sent to a repair engine to enable the repair engine to generate a third recording of the web conference session in which a first portion of the first recording is replaced and/or combined with at least a second portion of the second recording. Related systems and articles of manufacture are also provided.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="67.82mm" wi="158.75mm" file="US20230006850A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="110.91mm" wi="161.63mm" file="US20230006850A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="169.93mm" wi="142.92mm" orientation="landscape" file="US20230006850A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="189.65mm" wi="145.12mm" orientation="landscape" file="US20230006850A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="230.21mm" wi="129.62mm" orientation="landscape" file="US20230006850A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="146.22mm" wi="110.57mm" orientation="landscape" file="US20230006850A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="146.13mm" wi="110.57mm" orientation="landscape" file="US20230006850A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="146.13mm" wi="110.57mm" orientation="landscape" file="US20230006850A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="214.46mm" wi="190.50mm" orientation="landscape" file="US20230006850A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="136.31mm" wi="174.92mm" file="US20230006850A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="118.62mm" wi="174.92mm" file="US20230006850A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="234.36mm" wi="142.16mm" file="US20230006850A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="177.29mm" wi="133.01mm" file="US20230006850A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="217.85mm" wi="157.48mm" orientation="landscape" file="US20230006850A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The subject matter described herein relates generally to web conferencing and more specifically to the repairing a recording of a web conference session.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">A web conferencing application may provide access to a virtual meeting room in which multiple users in different locations may engage in real time audio data and/or video communication. The web conferencing application may support a variety of online communication sessions between two or more web-connected devices including, for example, meetings, training events, lectures, presentations, and/or the like. In some cases, the web conferencing application may also provide various collaborative features such as real time content sharing and editing.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">Methods, systems, and articles of manufacture, including computer program products, are provided for repairing a recording of a web conference session. In one aspect, there is provided a system including at least one data processor and at least one memory. The at least one memory may store instructions, which when executed by the at least one data processor, cause the at least one data processor to at least: generate, at a first client device, a first recording of a web conference session between the first client device and a second client device; monitor a quality of a data received from the second client device; in response to the quality of the data being below a threshold level, send, to the second client device, a first command to start a second recording of the web conference session at the second client device; and send, to a repair engine, the first recording of the web conference session to enable the repair engine to generate a third recording of the web conference session in which a first portion of the first recording is replaced and/or combined with at least a second portion of the second recording.</p><p id="p-0005" num="0004">In some variations, one or more of the features disclosed herein including the following features can optionally be included in any feasible combination. The quality of the data may be monitored by at least monitoring a quality of a network connection between the first client device and the second client device.</p><p id="p-0006" num="0005">In some variations, the quality of the network connection may be monitored by at least measuring a latency, a jitter, and/or a packet loss.</p><p id="p-0007" num="0006">In some variations, the quality of the data may be monitored by at least measuring a signal to noise ratio (SNR) and/or a bit error ratio (BER).</p><p id="p-0008" num="0007">In some variations, the at least one data processor may be further caused to at least: in response to the quality of the data exceeding the threshold level, send, to the second client device, a second command to stop the second recording of the web conference session at the second client device.</p><p id="p-0009" num="0008">In some variations, the first command and/or the second command may be further sent in response to one or more user inputs received at the first client device.</p><p id="p-0010" num="0009">In some variations, the at least one data processor may be further caused to at least: generate context data associated with the second recording of the web conference session; and send, to the repair engine, the context data to enable the repair engine to generate, based at least on the context data, the third recording of the web conference session.</p><p id="p-0011" num="0010">In some variations, the context data may include a starting timestamp and/or an ending timestamp of the second recording.</p><p id="p-0012" num="0011">In some variations, the first portion of the first recording may be replaced with the second portion of the second recording based at least on a first quality of the first portion of the first recording being below threshold and/or less than a second quality of the second portion of the second recording.</p><p id="p-0013" num="0012">In some variations, the data may include an audio data and/or a video data.</p><p id="p-0014" num="0013">In another aspect, there is provided a method for repairing a recording of a web conference session. The method may include: generating, at a first client device, a first recording of a web conference session between the first client device and a second client device; monitoring a quality of a data received from the second client device; in response to the quality of the data being below a threshold level, sending, to the second client device, a first command to start a second recording of the web conference session at the second client device; and sending, to a repair engine, the first recording of the web conference session to enable the repair engine to generate a third recording of the web conference session in which a first portion of the first recording is replaced and/or combined with at least a second portion of the second recording.</p><p id="p-0015" num="0014">In some variations, one or more of the features disclosed herein including the following features can optionally be included in any feasible combination. The quality of the data may be monitored by at least monitoring a quality of a network connection between the first client device and the second client device.</p><p id="p-0016" num="0015">In some variations, the quality of the network connection may be monitored by at least measuring a latency, a jitter, and/or a packet loss.</p><p id="p-0017" num="0016">In some variations, the quality of the data may be monitored by at least measuring a signal to noise ratio (SNR) and/or a bit error ratio (BER).</p><p id="p-0018" num="0017">In some variations, the method may further include: in response to the quality of the data exceeding the threshold level, sending, to the second client device, a second command to stop the second recording of the web conference session at the second client device.</p><p id="p-0019" num="0018">In some variations, the first command and/or the second command may be further sent in response to one or more user inputs received at the first client device.</p><p id="p-0020" num="0019">In some variations, the method may further include: generating context data associated with the second recording of the web conference session; and sending, to the repair engine, the context data to enable the repair engine to generate, based at least on the context data, the third recording of the web conference session.</p><p id="p-0021" num="0020">In some variations, the context data may include a starting timestamp and/or an ending timestamp of the second recording.</p><p id="p-0022" num="0021">In some variations, the first portion of the first recording may be replaced with the second portion of the second recording based at least on a first quality of the first portion of the first recording being below threshold and/or less than a second quality of the second portion of the second recording.</p><p id="p-0023" num="0022">In another aspect, there is provided a computer program product that includes a non-transitory computer readable medium. The non-transitory computer readable medium may store instructions that cause operations when executed by at least one data processor. The operations may include: generating, at a first client device, a first recording of a web conference session between the first client device and a second client device; monitoring a quality of a data received from the second client device; in response to the quality of the data being below a threshold level, sending, to the second client device, a first command to start a second recording of the web conference session at the second client device; and sending, to a repair engine, the first recording of the web conference session to enable the repair engine to generate a third recording of the web conference session in which a first portion of the first recording is replaced and/or combined with at least a second portion of the second recording.</p><p id="p-0024" num="0023">Implementations of the current subject matter can include methods consistent with the descriptions provided herein as well as articles that comprise a tangibly embodied machine-readable medium operable to cause one or more machines (e.g., computers, etc.) to result in operations implementing one or more of the described features. Similarly, computer systems are also described that may include one or more processors and one or more memories coupled to the one or more processors. A memory, which can include a non-transitory computer-readable or machine-readable storage medium, may include, encode, store, or the like one or more programs that cause one or more processors to perform one or more of the operations described herein. Computer implemented methods consistent with one or more implementations of the current subject matter can be implemented by one or more data processors residing in a single computing system or multiple computing systems. Such multiple computing systems can be connected and can exchange data and/or commands or other instructions or the like via one or more connections, including, for example, to a connection over a network (e.g. the Internet, a wireless wide area network, a local area network, a wide area network, a wired network, or the like), via a direct connection between one or more of the multiple computing systems, etc.</p><p id="p-0025" num="0024">The details of one or more variations of the subject matter described herein are set forth in the accompanying drawings and the description below. Other features and advantages of the subject matter described herein will be apparent from the description and drawings, and from the claims. While certain features of the currently disclosed subject matter are described for illustrative purposes in relation to repairing audio data from a web conference session, it should be readily understood that such features are not intended to be limiting. The claims that follow this disclosure are intended to define the scope of the protected subject matter.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> depicts a system diagram illustrating an example of a web conferencing system, in accordance with some example embodiments;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> depicts a block diagram illustrating an example of the architecture of a web conferencing system, in accordance with some example embodiments;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> depicts a schematic diagram illustrating an example of a process for monitoring network quality, in accordance with some example embodiments;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> depicts a schematic diagram illustrating an example of a process for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> depicts a schematic diagram illustrating an example of a technique for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> depicts a schematic diagram illustrating another example of a technique for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b>C</figref> depicts a schematic diagram illustrating another example of a technique for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> depicts a sequence diagram illustrating an example of a process for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> depicts a flowchart illustrating another example of a process for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>4</b>C</figref> depicts a flowchart illustrating another example of a process for repairing a recording of a web conference session, in accordance with some example embodiments;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> depicts a network diagram illustrating an example of a network environment, in accordance with some example embodiments;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> depicts a block diagram illustrating an example of a computing device, in accordance with some example embodiments; and</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> depicts a high-level architecture of an example of a virtualization system for implementing a computing system, in accordance with some example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0039" num="0038">When practical, like reference symbols in the various drawings indicate like elements.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0040" num="0039">A web conferencing application, which provides access to a virtual meeting room in which multiple users in different locations may engage in real time audio data and/or video communication, may further support the recording of the audio data and/or video communication. For example, a web conference session may include a host who schedules the web conference session and one or more attendees who join the web conference session. The host of the web conference session may interact with the web conferencing application to start and end the web conference session. Moreover, the host of the web conference session may interact with the web conferencing application to record the web conference session. The recording of the web conference session may include audio data and/or video data originating from the host and/or the attendees.</p><p id="p-0041" num="0040">In a typical scenario, the recording of the web conference session may be captured at a first device associated with the host. As such, the recording of the web conference session may include a first segment of audio data and/or video data generated locally at the first device, for example, when the host is the presenter contributing audio content and/or video content. Moreover, the recording of the web conference session may include a second segment of audio data and/or video data generated remotely at a second device of a attendee when that attendee is the presenter contributing audio content and/or video content. The second segment of audio data and/or video data may be sent to the first device via a network connection such that the second segment of audio data and/or video data may be captured as part of the recording of the web conference session.</p><p id="p-0042" num="0041">The quality of the recording of the web conference session, when captured entirely at the first device, may be inconsistent at least because the quality of the second segment received at the first device may be poor. A variety of factors may diminish the quality of the second segment of audio data and/or video data received at the first device including, for example, a degradation in the network connection between the first device and the second device. As such, in some example embodiments, at least a portion of the web conference session may be recorded at the second device of the attendee to supplement the recording of the web conference session captured at the first device of the host. When the second segment of audio data and/or video data received at the first device exhibits a below threshold quality, for example, due to a degradation of the network connection between the first device and the second device, the recording of the web conference session may include a first recording of the second segment captured at the second device instead of a second recording of the second segment captured at the first device. The resulting recording, which synthesizes recordings captured at the first device and the second device, may exhibit a more consistent quality than a conventional recording captured entirely at the first device.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> depicts a system diagram illustrating an example of a web conferencing system <b>100</b>, in accordance with some example embodiments. Referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, the web conferencing system <b>100</b> may include a web conference server <b>110</b> including a repair engine <b>115</b> that is communicatively coupled via a network <b>140</b> with one or more client devices <b>130</b> including, for example, a first client device <b>130</b><i>a</i>, a second client device <b>130</b><i>b</i>, and/or the like. The one or more client devices <b>130</b> may be processor-based devices including, for example, a smartphone, a personal computer, a tablet computer, a wearable apparatus, an Internet-of-Things (IoT) appliance, and/or the like. The network <b>140</b> may be a wired network and/or a wireless network including, for example, a local area network (LAN), a virtual local area network (VLAN), a wide area network (WAN), a public land mobile network (PLMN), the Internet, and/or the like.</p><p id="p-0044" num="0043">A web conferencing application <b>135</b> at each of the one or more client devices <b>130</b> may be configured to provide access to a virtual meeting room in which a host <b>150</b> at the first client device <b>130</b><i>a </i>and one or more attendees such as the attendee <b>155</b> at the second client device <b>130</b><i>b </i>may engage in real time audio data and/or video communication. Moreover, the web conferencing application <b>135</b> may support a recording functionality in which a recording is generated of the web conference session between the host <b>150</b> at the first client device <b>130</b><i>a </i>and the attendee <b>155</b> at the second client device <b>130</b><i>b</i>. For example, a recording of the web conference session may be generated in response to the web conferencing application <b>135</b> receiving, from the host <b>150</b> at the first client device <b>130</b><i>a</i>, a request to record the web conference session.</p><p id="p-0045" num="0044">The recording of the web conference session may include a first segment of audio data and/or video data generated at the first client device <b>130</b><i>a</i>, for example, when the host <b>150</b> is the presenter contributing audio content and/or video content. Moreover, the recording of the web conference session may include a second segment of audio data and/or video data generated at the second device <b>130</b><i>b </i>when the attendee <b>155</b> is the presenter contributing audio content and/or video content. Conventionally, the recording of the web conference session may be captured entirely at the first client device <b>130</b><i>a </i>of the host <b>150</b> with the second segment of audio data and/or video data being sent from the second client device <b>130</b><i>b </i>to the first client device <b>130</b><i>a </i>via the network <b>140</b>. However, the quality of the recording of the web conference session captured in this manner may be inconsistent at least because the quality of the second segment of audio data and/or video data received at the first client device <b>130</b><i>a </i>may be degraded when the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b </i>is poor.</p><p id="p-0046" num="0045">In some example embodiments, at least a portion of the web conference session may be recorded at the second client device <b>130</b><i>b </i>to supplement the recording of the web conference session captured at the first device <b>130</b><i>a</i>. Thus, when the second segment of audio data and/or video data received at the first client device <b>130</b><i>a </i>exhibits a below threshold quality, for example, due to a degradation of the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b</i>, the recording of the web conference session may include a first recording of the second segment captured at the second client device <b>130</b><i>b </i>instead of a second recording of the second segment captured at the first client device <b>130</b><i>a. </i></p><p id="p-0047" num="0046">The repair engine <b>115</b> may repair the recording of the web conference session by at least replacing the second recording of the second segment captured at the first client device <b>130</b><i>a </i>with the first recording of the second segment captured at the second client device <b>130</b><i>b</i>. Moreover, the repair engine <b>115</b> may combine the first recording of the second segment captured at the second client device <b>130</b><i>b </i>with a third recording of the first segment captured at the first client device <b>130</b><i>a </i>to generate the recording of the web conference session. The resulting recording, which synthesizes recordings captured at the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b</i>, may exhibit a more consistent quality than a conventional recording captured entirely at the first client device <b>130</b><i>a. </i></p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> depicts a block diagram illustrating an example of the architecture of the web conferencing system <b>100</b>, in accordance with some example embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the repair engine <b>115</b> may include a synthesizer <b>112</b> and a receiver <b>114</b>. Moreover as shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the first client device <b>130</b><i>a</i>, which is associated with the host <b>150</b> of the web conference session being recorded, may include a recording controller <b>132</b>, a monitor <b>134</b>, and an uploader <b>136</b>. The second client device <b>130</b><i>b</i>, which is associated with the attendee <b>155</b> of the web conference session being recorded, may include a recording agent <b>135</b> and a sender <b>137</b>.</p><p id="p-0049" num="0048">The recording controller <b>132</b> may be configured to coordinate the recording of the web conference session between the host <b>150</b> at the first client device <b>130</b><i>a </i>and the attendee <b>155</b> at the second client device <b>130</b><i>b</i>. As noted, in order to maintain consistency in the quality of the recording, at least the first segment of the web conference session may be recorded at the second client device <b>130</b><i>b </i>and combined with the second segment of the web conference session recorded at the first client device <b>130</b><i>a</i>. In the example of the web conferencing system <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the first segment of the web conference session may be recorded at the second client device <b>130</b><i>b </i>when the audio data and/or video data received at the first client device <b>130</b><i>a </i>from the second client device <b>130</b><i>b </i>exhibits a below-threshold quality or when the network connection between the first client device <b>130</b><i>a </i>and the second device <b>130</b><i>b </i>exhibits a below-threshold quality.</p><p id="p-0050" num="0049">Accordingly, as shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the monitor <b>134</b> at the first client device <b>130</b><i>a </i>may be configured to monitor the quality of the data received from the second client device <b>130</b><i>b </i>including, for example, the quality of the audio data, video data, and/or the like. For example, the monitor <b>134</b> may monitor the quality of the data received at the first client device <b>130</b><i>a </i>by at least measuring a signal to noise ratio (SNR), a bit error ratio (BER), and/or the like. Alternatively and/or additionally, the monitor <b>134</b> may monitor the quality of the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b</i>. The monitor <b>134</b> may monitor the quality of the network connection by measuring a latency, a jitter, a packet loss, and/or the like. <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> depicts a schematic diagram illustrating an example of a process <b>200</b> for monitoring network quality, in accordance with some example embodiments. In the example shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, the monitor <b>134</b> may notify the recording controller <b>132</b> of a below-threshold quality network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b </i>when the monitor <b>134</b> determines that the first client device <b>130</b><i>a </i>fails to receive more than a threshold quantity of data packets from the second client device <b>130</b><i>b. </i></p><p id="p-0051" num="0050">In some example embodiments, the recording controller <b>132</b> may be configure to trigger, based at least on the quality of the data received from the second client device <b>130</b><i>b </i>and/or the quality of the network connection between the first client device <b>130</b><i>a </i>and the second device <b>130</b><i>b</i>, a recording of the web conference session at the second client device <b>130</b><i>b</i>. For example, the recording controller <b>132</b> may send, to the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>, a first command to start the recording of the web conference session when the quality of the data received from the second client device <b>130</b><i>b </i>and/or the quality of the network connection between the first client device <b>130</b><i>a </i>and the second device <b>130</b><i>b </i>is below a threshold level. Alternatively and/or additionally, the recording controller <b>132</b> may send, to the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>, a second command to stop the recording of the web conference session when the quality of the data received from the second client device <b>130</b><i>b </i>and/or the quality of the network connection between the first client device <b>130</b><i>a </i>and the second device <b>130</b><i>b </i>exceeds the threshold level.</p><p id="p-0052" num="0051">The recording controller <b>132</b> may also send, to the second client device <b>130</b><i>b</i>, the command to start and/or stop the recording of the web conference session in response to one or more corresponding inputs received at the first client device <b>130</b><i>a</i>. For example, the first client device <b>130</b><i>a </i>may receive, from the host <b>150</b>, a first input indicating that the quality of audio data and/or video data received from the second client device <b>130</b><i>b </i>is below a threshold level. The recording controller <b>132</b> may respond to the first input by sending, to the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>, the first command to start the recording of the web conference session. Alternatively, the first client device <b>130</b><i>a </i>may receive, from the host <b>150</b>, a second input indicating that the quality of audio data and/or video data received from the second client device <b>130</b><i>b </i>is above a threshold level. The recording controller <b>132</b> may respond to the second input by sending, to the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>, the second command to start the recording of the web conference session.</p><p id="p-0053" num="0052">In some example embodiments, the recording controller <b>132</b> may generate context data associated with the recording performed at the second client device <b>130</b><i>b </i>including, for example, a starting timestamp and/or an ending timestamp for the first segment of the web conference session recorded at the second client device <b>130</b><i>b</i>. It should be appreciated that in some cases, instead of and/or in addition to the recording controller <b>132</b> generating the context data, at least a portion of the context data may be generated by the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>. For example, in some cases, the recording controller <b>132</b> may generate the starting timestamp upon triggering the recording of the web conference session at the second client device <b>130</b><i>b </i>whereas the recording agent <b>135</b> may generate the ending timestamp upon stopping the recording of the web conference session at the second client device <b>130</b><i>b. </i></p><p id="p-0054" num="0053">The sender <b>137</b> at the second client device <b>130</b><i>b </i>may send, to the receiver <b>114</b> at the repair engine <b>115</b>, the first segment of the web conference session recorded at the second client device <b>130</b><i>b</i>. The sender <b>137</b> may package, encrypt, and/or compress the first segment of the web conference session before sending the first segment of the web conference session to the repair engine <b>115</b>. Meanwhile, the uploader <b>136</b> at the first client device <b>130</b><i>a </i>may send, to the receiver <b>114</b> at the repair engine <b>115</b>, the second segment of the web conference session recorded at the first client device <b>130</b><i>a</i>. The second segment of the web conference session may also be packaged, encrypted, and/or compressed before being sent to the repair engine <b>115</b>. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, the synthesizer <b>112</b> may be configured to repair the recording of the web conference session by at least combining the first segment of the web conference session recorded at the second client device <b>130</b><i>b </i>with the second segment of the web conference session recorded at the first client device <b>130</b><i>a</i>. In some cases, the repair may further include replacing the first segment of the web conference session recorded at the first client device <b>130</b><i>a</i>, which may exhibit a below-threshold quality, with the first segment of the web conference session recorded at the second client device <b>130</b><i>b. </i></p><p id="p-0055" num="0054">To further illustrate, <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> depicts a schematic diagram illustrating an example of a process <b>250</b> for repairing a recording of a web conference session. As shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, the process <b>250</b> may include the receiver <b>114</b> at the repair engine <b>115</b> receiving Recording A from the first client device <b>130</b><i>a </i>and Recording B from the second client device <b>130</b><i>b</i>. Moreover, <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> shows that prior to repairing the recording of the web conference session, for example, the repair engine <b>115</b> may reconcile the format of Recording A and Recording B such that Recording A and Recording B are in a same format. For example, the repair engine <b>115</b> may convert Recording A from a first format to a second format of Recording B. Alternatively and/or additionally, the repair engine <b>115</b> may convert Recording A from the first format to a third format and Recording B from the second format to the third format.</p><p id="p-0056" num="0055">In some example embodiments, the repair engine <b>115</b> may repair the recording of the web conference session by synthesizing, based at least on context data associated with Recording A and Recording B, Recording A and Recording B. For example, the timestamps associated with a start and/or an end of Recording A and Recording B may enable the repair engine <b>115</b> to identify and align the time periods covered by each recording (or portions thereof). It should be appreciated that Recording A from the first client device <b>130</b><i>a </i>and Recording B from the second client device <b>130</b><i>b </i>may each contain at least a portion of the entire web conference session. The synthesis may include replacing and/or combining at least a first portion of Recording A with at least a second portion of Recording B. The resulting Recording C may include the web conference session in its entirety. Because the replacing and/or combining may be performed based at least on a respective quality of Recording A and Recording B, the resulting Recording C may exhibit a more consistent quality than a recording that is captured entirely at the first client device <b>130</b><i>a </i>or the second client device <b>130</b><i>b. </i></p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIGS. <b>3</b>A-C</figref> depict schematic diagrams illustrating various examples of techniques for repairing a recording of a web conference session, in accordance with some example embodiments. It should be appreciated that the repair engine <b>115</b> may apply any technique (or combination of techniques) to synthesize Recording A from the first client device <b>130</b><i>a </i>and Recording B from the second client device <b>130</b><i>b </i>to generate Recording C of the web conference session.</p><p id="p-0058" num="0057">For example, in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, Recording A from the first client device <b>130</b><i>a </i>may include audio data and/or video data for the entire web conference session while Recording B from the second client device <b>130</b><i>b </i>may include a portion of the audio data and/or video data from the web conference session. As noted, in some example embodiments, the recording agent <b>135</b> at the second client device <b>130</b><i>b </i>may record the web conference session while the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b </i>is below a threshold quality and/or when the audio data and/or video data received at the first client device <b>130</b><i>a </i>from the second client device <b>130</b><i>b </i>is below a threshold quality. In the example of the synthesis technique shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, the repair engine <b>115</b> may replace a portion of Recording A with Recording B in order to generate Recording C.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> depicts another example of a technique to synthesize Recording A and Recording B in which Recording A and Recording B each include the entire web conference session. In this example, the repair engine <b>115</b> may analyze Recording A and Recording B to identify one or more segments where the quality of the data (e.g., audio data, video data, and/or the like) in one recording is below a threshold level and/or inferior to the quality of the other recording. Thus, in the example shown in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, the repair engine <b>115</b> may determine that the quality of a first segment <b>310</b><i>a </i>of Recording A is below a threshold level and/or inferior to the quality of a corresponding second segment <b>310</b><i>b </i>of Recording B. Accordingly, the repair engine <b>115</b> may replace the first segment <b>310</b><i>a </i>of Recording A with the second segment <b>310</b><i>b </i>of Recording B in order to generate Recording C.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>3</b>C</figref> depicts yet another example of a technique to synthesize Recording A and Recording B. In the example shown in <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>, the first client device <b>130</b><i>a </i>may capture audio data and/or video data originating from the host <b>150</b> at the first client device <b>130</b><i>a </i>but not audio data and/or video data originating from the attendee <b>155</b> and sent to the first client device <b>130</b><i>a </i>via the network <b>140</b>. For example, Recording A may include audio data captured by a microphone (or other audio sensors) at the first client device <b>130</b><i>a</i>. Similarly, the second client device <b>130</b><i>b </i>may capture audio data and video data originating from the attendee <b>155</b> at the second client device <b>130</b><i>b</i>, such as audio data captured by a microphone (or other audio sensors) at the second client device <b>130</b><i>b</i>, but not audio data and/or video data originating from the host <b>150</b> at the first client device <b>130</b><i>a </i>and sent to the second client device <b>130</b><i>b </i>via the network <b>140</b>. To generate Recording C, the repair engine <b>115</b> may combine Recording A, which includes the audio data and/or video data associated with the host <b>150</b>, and Recording B, which includes the audio data and/or video associated with the attendee <b>155</b>.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> depicts a sequence diagram illustrating an example of a process <b>400</b> for repairing a recording of a web conference session, in accordance with some example embodiments. At (<b>1</b>) the recording controller <b>132</b> at the first client device <b>130</b><i>a </i>may start the monitoring of the quality of the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b </i>and/or the quality of the data received at the first client device <b>130</b><i>a </i>from the second client device <b>130</b><i>b</i>. For example, as shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, the recording controller <b>132</b> may start the monitoring by sending, to the monitor <b>134</b>, a command to start the monitoring. At (<b>2</b>), the monitor <b>134</b> may respond to the command by monitoring the quality of the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b </i>and/or the quality of the data received at the first client device <b>130</b><i>a </i>from the second client device <b>130</b><i>b</i>. At (<b>3</b>), upon detecting a degradation in the quality of the network connection and/or the quality of the data, the monitor <b>134</b> may send, to the recording controller <b>132</b>, a corresponding notification. At (<b>4</b>), the recording controller <b>132</b> may respond to the notification from the monitor <b>134</b> by sending, to the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>, a command to start recording the web conference session at the second client device <b>130</b><i>b. </i></p><p id="p-0062" num="0061">At (<b>5</b>), the monitor <b>134</b> may send, upon detecting a recovery in the quality of the network connection and/or the quality of the data, a corresponding notification to the recording controller <b>132</b>. In response to receiving the notification from the monitor <b>134</b>, the recording controller <b>132</b> may, at (<b>6</b>), send a command for the recording agent <b>135</b> to stop the recording of the web conference session at the second client device <b>130</b><i>b</i>. It should be appreciated that at (<b>7</b>), the monitor <b>134</b> may continue to monitor the quality of the network connection and/or the quality of the data received from the second client device <b>130</b><i>b</i>. Moreover, at (<b>7</b>), the recording controller <b>132</b> may continue to control the recording of the web conference session at the second client device <b>130</b><i>b </i>based on notifications from the monitor <b>134</b>.</p><p id="p-0063" num="0062">The recording of the web conference session may be completed at (<b>8</b>), for example, when the host <b>150</b> sends, to the web conferencing application <b>135</b> at the first client <b>130</b><i>a</i>, an indication to end the web conference session. At (<b>9</b>), the sender <b>137</b> at the second client device <b>130</b><i>b </i>may send, to the receiver <b>114</b> at the repair engine <b>115</b>, the recording(s) of the web conference session captured at the second client device <b>130</b><i>b</i>. Meanwhile, at (<b>10</b>), the uploader <b>136</b> at the first client device <b>130</b><i>a </i>may send, to the receiver <b>114</b> at the repair engine <b>115</b>, the recording(s) of the web conference session captured at the first client device <b>130</b><i>a. </i></p><p id="p-0064" num="0063">At (<b>11</b>), the synthesizer <b>112</b> at the repair engine <b>115</b> may receive, from the receiver <b>114</b>, the recording(s) captured at each of the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b</i>. Moreover, at (<b>12</b>), the synthesizer <b>112</b> may receiver, from the recording controller <b>132</b>, context data associated with the recording(s) captured at the first client device <b>130</b><i>a </i>and/or the second client device <b>130</b><i>b</i>. This context data may include, for example, a starting timestamp and/or an ending timestamp for the segments of the web conference session recorded at the first client device <b>130</b><i>a </i>and/or the second client device <b>130</b><i>b</i>. At (<b>13</b>), the synthesizer <b>112</b> may repair the recording of the web conference session, for example, by replacing and/or combining at least a first portion of a recording captured at the first client device <b>130</b><i>a </i>with at least a second portion of a recording captured at the second client device <b>130</b><i>b. </i></p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> depicts a flowchart illustrating an example of a process <b>450</b> for repairing a recording of a web conference session, in accordance with some example embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>A-B</figref>, <b>2</b>-B, <b>3</b>A-C, and <b>4</b>B, the process <b>450</b> may be performed at the first client device <b>130</b><i>a </i>in order to generate a recording of a web conference session between the host <b>150</b> at the first client device <b>130</b><i>a </i>and the attendee <b>155</b> at the second client device <b>130</b><i>b. </i></p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> depicts a flowchart illustrating an example of a process <b>450</b> for repairing a recording of a web conference session, in accordance with some example embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>A-B</figref>, <b>2</b>-B, <b>3</b>A-C, and <b>4</b>B, the process <b>450</b> may be performed at the first client device <b>130</b><i>a </i>in order to generate a recording of a web conference session between the host <b>150</b> at the first client device <b>130</b><i>a </i>and the attendee <b>155</b> at the second client device <b>130</b><i>b. </i></p><p id="p-0067" num="0066">At <b>452</b>, the first client device <b>130</b><i>a </i>may record a web conference session. For example, the first client device <b>130</b><i>a </i>may be associated with the host <b>150</b> of the web conference session. As such, a recording of the web conference session may be generated in response to the web conferencing application <b>135</b> receiving, from the host <b>150</b> at the first client device <b>130</b><i>a</i>, a request to record the web conference session.</p><p id="p-0068" num="0067">At <b>454</b>, the first client device <b>130</b><i>a </i>may monitor a quality of a network connection and/or a quality of data received at the first client device <b>130</b><i>a</i>. In some example embodiments, the monitor <b>134</b> at the first client device <b>130</b><i>a </i>may monitor the quality of the network connection between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b </i>including, for example, by measuring a latency, a jitter, a packet loss, and/or the like. Alternatively and/or additionally, the monitor <b>134</b> may monitor the quality of the data, such as audio data, video data, and/or the like, received at the first client device <b>130</b><i>a </i>from the second client device <b>130</b><i>b</i>. The monitor <b>134</b> may monitor the quality of the data received at the first client device <b>130</b><i>a </i>by at least measuring a signal to noise ratio (SNR), a bit error ratio (BER), and/or the like.</p><p id="p-0069" num="0068">At <b>456</b>, the first client device <b>130</b><i>a </i>may trigger a recording at the second client device <b>130</b><i>b</i>. In some example embodiments, the monitor <b>134</b> may send, to the recording controller <b>132</b>, a notification when the quality of the network connection and/or the quality of the data received at the first client device <b>130</b><i>a </i>falls below a threshold level. The recording controller <b>132</b> may respond to the notification by at least sending, to the recording agent <b>135</b> at the second client device <b>130</b><i>b</i>, a command to start recording the web conference session at the second client device <b>130</b><i>b</i>. The monitor <b>134</b> may also detect an improvement in the quality of the network connection and/or the quality of the data received at the first client device <b>130</b><i>a</i>. When the quality of the quality of the network connection and/or the quality of the data received at the first client device <b>130</b><i>a </i>exceeds a threshold level, the monitor <b>134</b> may send a corresponding notification to the recording controller <b>132</b>, which may respond by sending a command for the recording agent <b>135</b> to stop recording the web conference session at the second client device <b>130</b><i>b. </i></p><p id="p-0070" num="0069">At <b>458</b>, the first client device <b>130</b><i>a </i>may send, to the repair engine <b>115</b>, a recording of at least a portion of web conference session. The first client device <b>130</b><i>a </i>may send, to the repair engine <b>115</b>, a first recording of the web conference session captured at the first client device <b>130</b><i>a</i>. The quality of the first recording may be inconsistent at least because of degradation in the quality of the network connection and/or the quality of the data received from the second client device <b>130</b><i>b</i>. As such, in some example embodiments, to repair engine <b>115</b> may replace and/or combine at least a first portion of the first recording captured at the first client device <b>130</b><i>a </i>with at least a second portion of a second recording captured at the second client device <b>130</b><i>b</i>. The resulting recording of the web conference session may include recordings captured at the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b</i>, and may exhibit a more consistent quality than a recording captured entirely at either the first client device <b>130</b><i>a </i>or the second client device <b>130</b><i>b. </i></p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>4</b>C</figref> depicts a flowchart illustrating another example of a process <b>470</b> for repairing a recording of a web conference session, in accordance with some example embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>A-B</figref>, <b>2</b>-B, <b>3</b>A-C, and <b>4</b>C, the process <b>470</b> may be performed at the repair engine <b>115</b> in order to generate a recording of a web conference session between the host <b>150</b> at the first client device <b>130</b><i>a </i>and the attendee <b>155</b> at the second client device <b>130</b><i>b. </i></p><p id="p-0072" num="0071">At <b>472</b>, the repair controller <b>132</b> may receive a first recording of a web conference session captured at the first client device <b>130</b><i>a</i>. For example, as shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, the first client device <b>130</b><i>a </i>may capture Recording A, which may include at least a first portion of the audio data and/or video data associated with the web conference session between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b. </i></p><p id="p-0073" num="0072">At <b>474</b>, the repair controller <b>132</b> may receive a second recording of the web conference session captured at the first client device <b>130</b><i>a</i>. Referring again to the example shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, the second client device <b>130</b><i>b </i>may capture Recording B, which may include at least a first portion of the audio data and/or video data associated with the web conference session between the first client device <b>130</b><i>a </i>and the second client device <b>130</b><i>b. </i></p><p id="p-0074" num="0073">At <b>476</b>, the repair controller <b>132</b> may generate, based at least on the first recording and the second recording, a third recording of the web conference session. For example, the receiver <b>114</b> at the repair controller <b>132</b> may receive Recording A from the uploader <b>136</b> at the first client device <b>130</b><i>a </i>and Recording B from the sender <b>137</b> at the second client device <b>130</b><i>b </i>respectively. <figref idref="DRAWINGS">FIGS. <b>3</b>A-C</figref> depicts various examples of synthesis techniques that the synthesizer <b>112</b> at the repair engine <b>115</b> may apply to generate Recording C. In the example shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, the repair engine <b>115</b> may replace a portion of Recording A with Recording B in order to generate Recording C.</p><p id="p-0075" num="0074">Alternatively, Recording A and Recording B may each include the entire web conference session, in which case the repair engine <b>115</b> may analyze Recording A and Recording B to identify one or more segments where the quality of the data (e.g., audio data, video data, and/or the like) in one recording is below a threshold level and/or inferior to the quality of the other recording. With this synthesis technique, which is shown in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, the repair engine <b>115</b> may replace the first segment <b>310</b><i>a </i>of Recording A with the second segment <b>310</b><i>b </i>of Recording B if the repair engine <b>115</b> determines that the quality of the first segment <b>310</b><i>a </i>of Recording A is below a threshold level and/or inferior to the quality of the corresponding second segment <b>310</b><i>b </i>of Recording B.</p><p id="p-0076" num="0075">In <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>, Recording A and Recording B may each include data originating at one client device but not the other. For example, Recording A may include audio data captured by a microphone (or other audio sensors) at the first client device <b>130</b><i>a </i>while Recording B may include audio data captured by a microphone (or other audio sensors) at the second client device <b>130</b><i>b</i>. To generate Recording C, the repair engine <b>115</b> may combine Recording A, which includes the audio data and/or video data associated with the host <b>150</b>, and Recording B, which includes the audio data and/or video associated with the attendee <b>155</b>.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> depicts a network diagram illustrating an example of a network environment <b>101</b>, in accordance with some example embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b> and <b>5</b>A</figref>, the network environment <b>101</b> in which various aspects of the disclosure may be implemented may include one or more clients <b>120</b><i>a</i>-<b>120</b><i>n</i>, one or more remote machines <b>106</b><i>a</i>-<b>106</b><i>n</i>, one or more networks <b>104</b><i>a </i>and <b>104</b><i>b</i>, and one or more appliances <b>108</b> installed within the network environment <b>101</b>. The clients <b>120</b><i>a</i>-<b>120</b><i>n </i>communicate with the remote machines <b>106</b><i>a</i>-<b>106</b><i>n </i>via the networks <b>104</b><i>a </i>and <b>104</b><i>b. </i></p><p id="p-0078" num="0077">In some example embodiments, the clients <b>120</b><i>a</i>-<b>120</b><i>n </i>may communicate with the remote machines <b>106</b><i>a</i>-<b>106</b><i>n </i>via an appliance <b>108</b>. The illustrated appliance <b>108</b> is positioned between the networks <b>104</b><i>a </i>and <b>104</b><i>b</i>, and may also be referred to as a network interface or gateway. In some example embodiments, the appliance <b>108</b> may operate as an application delivery controller (ADC) to provide clients with access to business applications and other data deployed in a datacenter, the cloud, or delivered as Software as a Service (SaaS) across a range of client devices, and/or provide other functionality such as load balancing and/or the like. In some example embodiments, multiple appliances <b>108</b> may be used, and the appliance(s) <b>108</b> may be deployed as part of the network <b>104</b><i>a </i>and/or <b>104</b><i>b. </i></p><p id="p-0079" num="0078">The clients <b>120</b><i>a</i>-<b>120</b><i>n </i>may be generally referred to as client machines, local machines, clients, client nodes, client computers, client devices, computing devices, endpoints, or endpoint nodes. One or more of the clients <b>120</b><i>a</i>-<b>120</b><i>n </i>may implement, for example, the first client device <b>130</b><i>a</i>, the second client device <b>130</b><i>b</i>, the third client device <b>130</b><i>c</i>, and/or the like. The remote machines <b>106</b><i>a</i>-<b>106</b><i>n </i>may be generally referred to as servers or a server farm. In some example embodiments, a client <b>120</b> may have the capacity to function as both a client node seeking access to resources provided by a server <b>106</b> and as a server <b>106</b> providing access to hosted resources for other clients <b>120</b><i>a</i>-<b>120</b><i>n</i>. The networks <b>104</b><i>a </i>and <b>104</b><i>b </i>may be generally referred to as a network <b>104</b>. The network <b>104</b> including the networks <b>104</b><i>a </i>and <b>104</b><i>b </i>may be configured in any combination of wired and wireless networks.</p><p id="p-0080" num="0079">The servers <b>106</b> may include any server type of servers including, for example: a file server; an application server; a web server; a proxy server; an appliance; a network appliance; a gateway; an application gateway; a gateway server; a virtualization server; a deployment server; a Secure Sockets Layer Virtual Private Network (SSL VPN) server; a firewall; a web server; a server executing an active directory; a cloud server; or a server executing an application acceleration program that provides firewall functionality, application functionality, or load balancing functionality. The servers <b>106</b> may include, for example, the web conference server <b>110</b> and/or the like.</p><p id="p-0081" num="0080">A server <b>106</b> may execute, operate or otherwise provide an application that may be any one of the following: software; a program; executable instructions; a virtual machine; a hypervisor; a web browser; a web-based client; a client-server application; a thin-client computing client; an ActiveX control; a Java applet; software related to voice over internet protocol (VoIP) communications like a soft internet protocol telephone; an application for streaming video and/or audio; an application for facilitating real-time-data communications; a hypertext transfer protocol (HTTP) client; a file transfer protocol (FTP) client; an Oscar client; a Telnet client; or any other set of executable instructions.</p><p id="p-0082" num="0081">In some example embodiments, a server <b>106</b> may execute a remote presentation services program or other program that uses a thin-client or a remote-display protocol to capture display output generated by an application executing on a server <b>106</b> and transmit the application display output to a client <b>120</b>.</p><p id="p-0083" num="0082">In yet other example embodiments, a server <b>106</b> may execute a virtual machine, such as the first virtual machine <b>125</b><i>a </i>and/or the second virtual machine <b>125</b><i>b</i>, to provide, for example, to the user <b>150</b> at the client device <b>130</b>, access to a computing environment such as the application <b>135</b>. The virtual machine may be managed by, for example, a hypervisor (e.g., the first hypervisor <b>165</b><i>a</i>, the second hypervisor <b>165</b><i>b</i>, and/or the like), a virtual machine manager (VMM), or any other hardware virtualization technique within the server <b>106</b>.</p><p id="p-0084" num="0083">In some example embodiments, the network <b>104</b> may be a local-area network (LAN), a metropolitan area network (MAN), a wide area network (WAN), a primary public network, and/or a primary private network. Additional embodiments may include one or more mobile telephone networks that use various protocols to communicate among mobile devices. For short-range communications within a wireless local-area network (WLAN), the protocols may include 802.11, Bluetooth, and Near Field Communication (NFC).</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> depicts a block diagram illustrating an example of a computing device <b>500</b>, in accordance with some example embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b> and <b>5</b>A</figref>-B, the computing device <b>500</b> may be useful for practicing an embodiment of the migration controller <b>132</b> and the client device <b>130</b>.</p><p id="p-0086" num="0085">As shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the computing device <b>500</b> may include one or more processors <b>248</b>, volatile memory <b>270</b> (e.g., RAM), non-volatile memory <b>252</b> (e.g., one or more hard disk drives (HDDs) or other magnetic or optical storage media, one or more solid state drives (SSDs) such as a flash drive or other solid state storage media, one or more hybrid magnetic and solid state drives, and/or one or more virtual storage volumes, such as a cloud storage, or a combination of such physical storage volumes and virtual storage volumes or arrays thereof), a user interface (UI) <b>254</b>, one or more communications interfaces <b>256</b>, and a communication bus <b>258</b>. The user interface <b>254</b> may include a graphical user interface (GUI) <b>260</b> (e.g., a touchscreen, a display, and/or the like) and one or more input/output (I/O) devices <b>262</b> (e.g., a mouse, a keyboard, and/or the like). The non-volatile memory <b>252</b> may store an operating system <b>264</b>, one or more applications <b>266</b>, and data <b>268</b> such that computer instructions of the operating system <b>264</b> and/or applications <b>266</b> are executed by the processor(s) <b>248</b> out of the volatile memory <b>270</b>. Data may be entered using an input device of the GUI <b>260</b> or received from I/O device(s) <b>262</b>. Various elements of the computing device <b>500</b> may communicate via communication the communication bus <b>258</b>. The computing device <b>500</b> as shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is shown merely as an example, as the migration controller <b>132</b> and the client device <b>130</b> may be implemented by any computing or processing environment and with any type of machine or set of machines that may have suitable hardware and/or software capable of operating as described herein.</p><p id="p-0087" num="0086">The processor(s) <b>248</b> may be implemented by one or more programmable processors executing one or more computer programs to perform the functions of the system. As used herein, the term &#x201c;processor&#x201d; describes an electronic circuit that performs a function, an operation, or a sequence of operations. The function, operation, or sequence of operations may be hard coded into the electronic circuit or soft coded by way of instructions held in a memory device. A &#x201c;processor&#x201d; may perform the function, operation, or sequence of operations using digital values or using analog signals. In some example embodiments, the &#x201c;processor&#x201d; can be embodied in one or more application specific integrated circuits (ASICs), microprocessors, digital signal processors, microcontrollers, field programmable gate arrays (FPGAs), programmable logic arrays (PLAs), multi-core processors, or general-purpose computers with associated memory. The &#x201c;processor&#x201d; may be analog, digital or mixed-signal. In some example embodiments, the &#x201c;processor&#x201d; may be one or more physical processors or one or more &#x201c;virtual&#x201d; (e.g., remotely located or &#x201c;cloud&#x201d;) processors.</p><p id="p-0088" num="0087">The communications interfaces <b>256</b> may include one or more interfaces to enable the computing device <b>500</b> to access a computer network such as a local area network (LAN), a wide area network (WAN), a public land mobile network (PLMN), and/or the Internet through a variety of wired and/or wireless or cellular connections.</p><p id="p-0089" num="0088">As noted above, in some example embodiments, one or more computing devices <b>500</b> may execute an application on behalf of a user of a client computing device (e.g., the clients <b>120</b>), may execute a virtual machine, which provides an execution session within which applications execute on behalf of a user or a client computing device (e.g., the clients <b>120</b>), such as a hosted desktop session (e.g., associated with the application <b>135</b>), may execute a terminal services session to provide a hosted desktop environment, or may provide access to a computing environment including one or more of: one or more applications, one or more desktop applications, and one or more desktop sessions in which one or more applications may execute.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> depicts a high-level architecture of an example of a virtualization system, in accordance with some example embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref>, the virtualization system may be a single-server or multi-server system, or a cloud system, including at least one virtualization server <b>301</b> configured to provide virtual desktops and/or virtual applications to one or more client access devices <b>120</b><i>a</i>-<i>c</i>. A desktop (or a virtual desktop) may refer to a graphical environment (e.g., a graphical user interface) or space in which one or more applications may be hosted and/or executed. A desktop may include a graphical shell providing a user interface for an instance of an operating system in which local and/or remote applications can be integrated. Applications may include programs that execute after an instance of an operating system (and, optionally, also the desktop) has been loaded. Each instance of the operating system may be physical (e.g., one operating system per physical device) or virtual (e.g., many instances of an OS running on a single physical device). Each application may be executed on a local device, or executed on a remotely located device (e.g., remoted).</p><p id="p-0091" num="0090">Virtualization server <b>301</b> may be configured as a virtualization server in a virtualization environment, for example, a single-server, multi-server, or cloud computing environment. Virtualization server <b>301</b> illustrated in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref> may be deployed as and/or implemented by one or more embodiments of server <b>106</b> illustrated in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> or by other known computing devices. Included in virtualization server <b>301</b> is hardware layer <b>310</b> that may include one or more physical disks <b>304</b>, one or more physical devices <b>306</b>, one or more physical processors <b>308</b>, and one or more physical memories <b>316</b>. In some embodiments, firmware <b>312</b> may be stored within a memory element in physical memory <b>316</b> and be executed by one or more of physical processors <b>308</b>. Virtualization server <b>301</b> may further include operating system <b>314</b> that may be stored in a memory element in physical memory <b>316</b> and executed by one or more of physical processors <b>308</b>. Still further, hypervisor <b>302</b> may be stored in a memory element in physical memory <b>316</b> and be executed by one or more of physical processors <b>308</b>. Presence of operating system <b>314</b> may be optional such as in a case where the hypervisor <b>302</b> is a Type A hypervisor.</p><p id="p-0092" num="0091">Executing on one or more of physical processors <b>308</b> may be one or more virtual machines <b>332</b>A-C (generally <b>332</b>). Each virtual machine <b>332</b> may have virtual disk <b>326</b>A-C and virtual processor <b>328</b>A-C. In some embodiments, first virtual machine <b>332</b>A may execute, using virtual processor <b>328</b>A, control program <b>320</b> that includes tools stack <b>324</b>. Control program <b>320</b> may be referred to as a control virtual machine, Domain 0, Dom0, or other virtual machine used for system administration and/or control. In some embodiments, one or more virtual machines <b>332</b>B-C may execute, using virtual processor <b>328</b>B-C, guest operating system <b>330</b>A-B (generally <b>330</b>).</p><p id="p-0093" num="0092">Physical devices <b>306</b> may include, for example, a network interface card, a video card, an input device (e.g., a keyboard, a mouse, a scanner, etc.), an output device (e.g., a monitor, a display device, speakers, a printer, etc.), a storage device (e.g., an optical drive), a Universal Serial Bus (USB) connection, a network element (e.g., router, firewall, network address translator, load balancer, virtual private network (VPN) gateway, Dynamic Host Configuration Protocol (DHCP) router, etc.), or any device connected to or communicating with virtualization server <b>301</b>. Physical memory <b>316</b> in hardware layer <b>310</b> may include any type of memory. Physical memory <b>316</b> may store data, and in some embodiments may store one or more programs, or set of executable instructions. <figref idref="DRAWINGS">FIG. <b>5</b>C</figref> illustrates an embodiment where firmware <b>312</b> is stored within physical memory <b>316</b> of virtualization server <b>301</b>. Programs or executable instructions stored in physical memory <b>316</b> may be executed by the one or more processors <b>308</b> of virtualization server <b>301</b>.</p><p id="p-0094" num="0093">Virtualization server <b>301</b> may also include hypervisor <b>302</b>. In some embodiments, hypervisor <b>302</b> may be a program executed by processors <b>308</b> on virtualization server <b>301</b> to create and manage any number of virtual machines <b>332</b>. Hypervisor <b>302</b> may be referred to as a virtual machine monitor, or platform virtualization software. In some embodiments, hypervisor <b>302</b> may be any combination of executable instructions and hardware that monitors virtual machines <b>332</b> executing on a computing machine. Hypervisor <b>302</b> may be a Type 2 hypervisor, where the hypervisor executes within operating system <b>314</b> executing on virtualization server <b>301</b>. Virtual machines may then execute at a layer above hypervisor <b>302</b>. In some embodiments, the Type 2 hypervisor may execute within the context of a user's operating system such that the Type 2 hypervisor interacts with the user's operating system. In other embodiments, one or more virtualization servers <b>301</b> in a virtualization environment may instead include a Type 1 hypervisor (not shown). A Type 1 hypervisor may execute on virtualization server <b>301</b> by directly accessing the hardware and resources within hardware layer <b>310</b>. That is, while Type 2 hypervisor <b>302</b> accesses system resources through host operating system <b>314</b>, as shown, a Type 1 hypervisor may directly access all system resources without host operating system <b>314</b>. A Type 1 hypervisor may execute directly on one or more physical processors <b>308</b> of virtualization server <b>301</b>, and may include program data stored in physical memory <b>316</b>.</p><p id="p-0095" num="0094">Hypervisor <b>302</b>, in some embodiments, may provide virtual resources to guest operating systems <b>330</b> or control programs <b>320</b> executing on virtual machines <b>332</b> in any manner that simulates operating systems <b>330</b> or control programs <b>320</b> having direct access to system resources. System resources can include, but are not limited to, physical devices <b>306</b>, physical disks <b>304</b>, physical processors <b>308</b>, physical memory <b>316</b>, and any other component included in hardware layer <b>310</b> of virtualization server <b>301</b>. Hypervisor <b>302</b> may be used to emulate virtual hardware, partition physical hardware, virtualize physical hardware, and/or execute virtual machines that provide access to computing environments. In still other embodiments, hypervisor <b>302</b> may control processor scheduling and memory partitioning for virtual machine <b>332</b> executing on virtualization server <b>301</b>. Examples of hypervisor <b>302</b> may include those manufactured by VMWare, Inc., of Palo Alto, Calif.; Xen Project&#xae; hypervisor, an open source product whose development is overseen by the open source XenProject.org community; Hyper-V&#xae;, Virtual Server&#xae;, and Virtual PC&#xae; hypervisors provided by Microsoft Corporation of Redmond, Wash.; or others. The virtualization server <b>301</b> may execute hypervisor <b>302</b> that creates a virtual machine platform on which guest operating systems <b>330</b> may execute. When this is the case, virtualization server <b>301</b> may be referred to as a host server. An example of such a virtualization server is Citrix Hypervisor&#xae; provided by Citrix Systems, Inc., of Fort Lauderdale, Fla.</p><p id="p-0096" num="0095">Hypervisor <b>302</b> may create one or more virtual machines <b>332</b>B-C (generally <b>332</b>) in which guest operating systems <b>330</b> execute. In some embodiments, hypervisor <b>302</b> may load a virtual machine image to create virtual machine <b>332</b>. The virtual machine image may refer to a collection of data, states, instructions, etc. that make up an instance of a virtual machine. In other embodiments, hypervisor <b>302</b> may execute guest operating system <b>330</b> within virtual machine <b>332</b>. In still other embodiments, virtual machine <b>332</b> may execute guest operating system <b>330</b>.</p><p id="p-0097" num="0096">In addition to creating virtual machines <b>332</b>, hypervisor <b>302</b> may control the execution of at least one virtual machine <b>332</b>. The hypervisor <b>302</b> may present at least one virtual machine <b>332</b> with an abstraction of at least one hardware resource provided by virtualization server <b>301</b> (e.g., any hardware resource available within hardware layer <b>310</b>). In some implementations, hypervisor <b>302</b> may control the manner in which virtual machines <b>332</b> access physical processors <b>308</b> available in virtualization server <b>301</b>. Controlling access to physical processors <b>308</b> may include determining whether virtual machine <b>332</b> should have access to processor <b>308</b>, and how physical processor capabilities are presented to virtual machine <b>332</b>.</p><p id="p-0098" num="0097">As shown in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref>, the virtualization server <b>301</b> may host or execute one or more virtual machines <b>332</b>. Virtual machine <b>332</b> may be a set of executable instructions and/or user data that, when executed by processor <b>308</b>, may imitate the operation of a physical computer such that virtual machine <b>332</b> can execute programs and processes much like a physical computing device. While <figref idref="DRAWINGS">FIG. <b>5</b>C</figref> illustrates an embodiment where virtualization server <b>301</b> hosts three virtual machines <b>332</b>, in other embodiments virtualization server <b>301</b> may host any number of virtual machines <b>332</b>. Hypervisor <b>302</b> may provide each virtual machine <b>332</b> with a unique virtual view of the physical hardware, including memory <b>316</b>, processor <b>308</b>, and other system resources <b>304</b>, <b>306</b> available to that virtual machine <b>332</b>. The unique virtual view may be based on one or more of virtual machine permissions, application of a policy engine to one or more virtual machine identifiers, a user accessing a virtual machine, the applications executing on a virtual machine, networks accessed by a virtual machine, or any other desired criteria. For instance, hypervisor <b>302</b> may create one or more unsecure virtual machines <b>332</b> and one or more secure virtual machines <b>332</b>. Unsecure virtual machines <b>332</b> may be prevented from accessing resources, hardware, memory locations, and programs that secure virtual machines <b>332</b> may be permitted to access. In other embodiments, hypervisor <b>302</b> may provide each virtual machine <b>332</b> with a substantially similar virtual view of the physical hardware, memory, processor, and other system resources available to virtual machines <b>332</b>.</p><p id="p-0099" num="0098">Each virtual machine <b>332</b> may include virtual disk <b>326</b>A-C (generally <b>326</b>) and virtual processor <b>328</b>A-C (generally <b>328</b>.) Virtual disk <b>326</b> may be a virtualized view of one or more physical disks <b>304</b> of virtualization server <b>301</b>, or a portion of one or more physical disks <b>304</b> of virtualization server <b>301</b>. The virtualized view of physical disks <b>304</b> may be generated, provided, and managed by hypervisor <b>302</b>. In some embodiments, hypervisor <b>302</b> may provide each virtual machine <b>332</b> with a unique view of physical disks <b>304</b>. These particular virtual disk <b>326</b> (included in each virtual machine <b>332</b>) may be unique, when compared with other virtual disks <b>326</b>.</p><p id="p-0100" num="0099">Virtual processor <b>328</b> may be a virtualized view of one or more physical processors <b>308</b> of virtualization server <b>301</b>. The virtualized view of physical processors <b>308</b> may be generated, provided, and managed by hypervisor <b>302</b>. Virtual processor <b>328</b> may have substantially all of the same characteristics of at least one physical processor <b>308</b>. Virtual processor <b>308</b> may provide a modified view of physical processors <b>308</b> such that at least some of the characteristics of virtual processor <b>328</b> are different from the characteristics of the corresponding physical processor <b>308</b>.</p><p id="p-0101" num="0100">One or more aspects or features of the subject matter described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed application-specific integrated circuit (ASIC), field programmable gate arrays (FPGAs) computer hardware, firmware, software, and/or combinations thereof. These various aspects or features can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which can be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device. The programmable system or computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.</p><p id="p-0102" num="0101">These computer programs, which can also be referred to as programs, software, software applications, applications, components, or code, include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the term &#x201c;machine-readable medium&#x201d; refers to any computer program product, apparatus and/or device, such as for example magnetic discs, optical disks, memory, and Programmable Logic Devices (PLDs), used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term &#x201c;machine-readable signal&#x201d; refers to any signal used to provide machine instructions and/or data to a programmable processor. The machine-readable medium can store such machine instructions non-transitorily, such as for example as would a non-transient solid-state memory or a magnetic hard drive or any equivalent storage medium. The machine-readable medium can alternatively or additionally store such machine instructions in a transient manner, such as for example, as would a processor cache or other random access memory associated with one or more physical processor cores.</p><p id="p-0103" num="0102">The subject matter described herein can be embodied in systems, apparatus, methods, and/or articles depending on the desired configuration. The implementations set forth in the foregoing description do not represent all implementations consistent with the subject matter described herein. Instead, they are merely some examples consistent with aspects related to the described subject matter. Although a few variations have been described in detail above, other modifications or additions are possible. In particular, further features and/or variations can be provided in addition to those set forth herein. For example, the implementations described above can be directed to various combinations and subcombinations of the disclosed features and/or combinations and subcombinations of several further features disclosed above. In addition, the logic flows depicted in the accompanying figures and/or described herein do not necessarily require the particular order shown, or sequential order, to achieve desirable results. For example, the logic flows may include different and/or additional operations than shown without departing from the scope of the present disclosure. One or more operations of the logic flows may be repeated and/or omitted without departing from the scope of the present disclosure. Other implementations may be within the scope of the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system, comprising:<claim-text>at least one data processor; and</claim-text><claim-text>at least one memory storing instructions, which when executed by the least one data processor, cause the at least one data processor to at least:<claim-text>generate, at the first client device, a first recording of a web conference session between the first client device and a second client device, the first recording including a first content generated locally at the first client device and the second content generated remotely at the second client device, the first content including a first audio data and/or a first video data captured at the first client device, and the second content including a second audio data and/or a second video data captured at the second client device;</claim-text><claim-text>monitor, while generating the first recording at the web conference session, a quality of the second content the first client device receives from the second client device;</claim-text><claim-text>in response to the quality of the second content degrading below a threshold level, send, to the second client device, a first command to start a second recording of the second content generated locally at the second client device; and</claim-text><claim-text>send, to a repair engine, the first recording of the web conference session to enable the repair engine to generate a third recording of the web conference session in which portion of the first recording corresponding to the second content generated at the second client device is replaced and/or combined with the second recording of the second content generated at the second client device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the quality of the second content is monitored by at least morning a quality of a network connection between the first client device and the second client device.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the quality of the network connection is monitored by at least measuring a latency, a jitter, and/or a packet loss.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the quality of the second content is monitored by at least measuring a signal to noise ratio (SNR) and/or a bit error ratio (BER).</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one data processor is further caused to at least:<claim-text>in response to the quality of the second content received at the first client device improving above the threshold level, send, to the second client device, a second command to stop the second recording of the web conference session at the second client device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the first command and/or the second command is further sent in response to one or more user inputs received at the first client device.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one data processor is further caused to at least:<claim-text>generate context data associated with the second recording of the web conference session; and</claim-text><claim-text>send, to the repair engine, the context data to enable the repair engine to generate, based at least on the context data, the third recording of the web conference session.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the context data includes a starting timestamp and/or an ending timestamp of the second recording.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first portion of the first recording is replaced with the second portion of the second recording based at least on a first quality of the first portion of the first recording being below threshold and/or less than a second quality of the second portion of the second recording.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first content and the second content include an audio data and/or a video data.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computer-implemented method, comprising:<claim-text>generating, at the first client device, a first recording of a web conference session between the first client device and a second client device, the first recording including a first content generated locally at the first client device and the second content generated remotely at the second client device, the first content including a first audio data and/or a first video data captured at the first client device, and the second content including a second audio data and/or a second video data captured at the second client device;</claim-text><claim-text>monitoring, while generating the first recording at the web conference session, a quality of the second content the first client device receives from the second client device;</claim-text><claim-text>in response to the quality of the second content degrading below a threshold level, sending, to the second client device, a first command to start a second recording of the second content generated locally at the second client device; and</claim-text><claim-text>sending, to a repair engine, the first recording of the web conference session to enable the repair engine to generate a third recording of the web conference session in which a portion of the first recording corresponding to the second content generated at the second client device is replaced and/or combined with the second recording of the second content generated at the second client device.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the quality of the second content is monitored by at least morning a quality of a network connection between the first client device and the second client device.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the quality of the network connection is monitored by at least measuring a latency, a jitter, and/or a packet loss.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the quality of the second content is monitored by at least measuring a signal to noise ratio (SNR) and/or a bit error ratio (BER).</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>in response to the quality of the second content the first client device receives from the second client device improving above the threshold level, sending, to the second client device, a second command to stop the second recording of the web conference session at the second client device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the first command and/or the second command is further sent in response to one or more user inputs received at the first client device.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>generating context data associated with the second recording of the web conference session; and</claim-text><claim-text>sending, to the repair engine, the context data to enable the repair engine to generate, based at least on the context data, the third recording of the web conference session.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the context data includes a starting timestamp and/or an ending timestamp of the second recording.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the first portion of the first recording is replaced with the second portion of the second recording based at least on a first quality of the first portion of the first recording being below threshold and/or less than a second quality of the second portion of the second recording.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer readable medium storing instructions, which when executed by at least one data processor, result in operations comprising:<claim-text>generating, at the first client device, a first recording of a web conference session between the first client device and a second client device, the first recording including a first content generated locally at the first client device and the second content generated remotely at the second client device, the first content including a first audio data and/or a first video data captured at the first client device, and the second content including a second audio data and/or a second video data captured at the second client device;</claim-text><claim-text>monitoring, while generating the first recording at the web conference session, a quality of the second content the first client device receives from the second client device;</claim-text><claim-text>in response to the quality of the second content degrading below a threshold level, sending, to the second client device, a first command to start a second recording of the second content generated locally at the second client device; and</claim-text><claim-text>sending, to a repair engine, the first recording of the web conference session to enable the repair engine to generate a third recording of the web conference session in which a portion of the first recording corresponding to the second content generated at the second client device is replaced and/or combined with the second recording of the second content generated at the second client device.</claim-text></claim-text></claim></claims></us-patent-application>