<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007478A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007478</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17903764</doc-number><date>20220906</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>03</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>64</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>03</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>64</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD, APPARATUS, AND SYSTEM FOR VEHICLE-TO-VEHICLE COMMUNICATIONS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2020/079371</doc-number><date>20200313</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17903764</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>HUAWEI TECHNOLOGIES CO., LTD.</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>CHEN</last-name><first-name>Youlei</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>HUAWEI TECHNOLOGIES CO., LTD.</orgname><role>03</role><address><city>Shenzhen</city><country>CN</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In a method for conducting communications, a first terminal device in a vehicle-to-vehicle (V2V) network sends a first request message to a server of the V2V network to request the server to allocate an encryption key corresponding to a first service. The first request message includes an identifier of the first service and an identifier of the first terminal device. The first terminal device receives from the server a first response message that includes an encryption key corresponding to the first service. The first terminal device uses the encryption key to encrypt first information related to the first terminal device in the V2V network, and broadcasts a broadcast message that includes the encrypted first information to the V2V network.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="127.68mm" wi="153.75mm" file="US20230007478A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="139.28mm" wi="155.70mm" file="US20230007478A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="106.09mm" wi="107.87mm" file="US20230007478A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="218.19mm" wi="148.76mm" file="US20230007478A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="101.09mm" wi="148.84mm" file="US20230007478A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="213.28mm" wi="160.36mm" file="US20230007478A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="194.31mm" wi="155.96mm" file="US20230007478A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="157.06mm" wi="159.09mm" file="US20230007478A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="150.88mm" wi="158.24mm" file="US20230007478A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="189.57mm" wi="150.11mm" file="US20230007478A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="190.75mm" wi="153.67mm" file="US20230007478A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="206.08mm" wi="150.96mm" file="US20230007478A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="189.99mm" wi="152.57mm" file="US20230007478A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="206.08mm" wi="150.88mm" file="US20230007478A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="190.67mm" wi="152.57mm" file="US20230007478A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="210.90mm" wi="150.88mm" file="US20230007478A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="216.92mm" wi="155.02mm" file="US20230007478A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="205.82mm" wi="151.13mm" file="US20230007478A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="202.69mm" wi="155.02mm" file="US20230007478A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="205.82mm" wi="151.13mm" file="US20230007478A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="216.75mm" wi="157.31mm" file="US20230007478A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="213.28mm" wi="151.05mm" file="US20230007478A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="216.75mm" wi="156.38mm" file="US20230007478A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="212.77mm" wi="158.16mm" file="US20230007478A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="163.15mm" wi="78.91mm" file="US20230007478A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="90.09mm" wi="129.54mm" file="US20230007478A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of International Application No. PCT/CN2020/079371, filed on Mar. 13, 2020, the disclosure of which is hereby incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Embodiments of this application relate to the field of communication technologies, and in particular, to communications in a vehicle-to-vehicle network.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">In a vehicle-to-vehicle (V2V) scenario, vehicle A may broadcast coordinate data of vehicle A at any time, to form a continuous track. There may be a case in which a malicious vehicle or a specially forged malicious road-side listening device intentionally listens on and collects a broadcast channel of a surrounding vehicle to obtain sensitive data such as coordinate data. Therefore, encrypting the coordinate data that is broadcast by the vehicle in the V2V scenario is a technical problem that urgently needs to be resolved.</p><p id="p-0005" num="0004">However, in the V2V scenario, vehicle A broadcasts the coordinate data to a random object, a receiving vehicle surrounding vehicle A changes at any time, and there is no fixed receiving vehicle. Vehicle A needs to search for a proper broadcast object. After vehicle A finds the broadcast object, it may query a public key of the broadcast object based on an identifier of the broadcast object, to encrypt the coordinate data. However, this requires additional communication and computing overheads, for various purposes, such as identifying a surrounding vehicle, obtaining an identifier or attribute information of the vehicle, and sending an encryption key to the surrounding vehicle. Consequently, computing and storage overheads caused by the foregoing broadcast encryption solution are extremely high.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">Embodiments of this application provide a communications method, apparatus, and system, to reduce load of managing an encryption key by a terminal (for example, a vehicle), and reduce computing and storage overheads of the terminal.</p><p id="p-0007" num="0006">To achieve the foregoing objectives, the embodiments of this application provide the following technical solutions.</p><p id="p-0008" num="0007">According to a first aspect, an embodiment of this application provides a communications method. The method includes: A first terminal device sends, to a server, a first request message used to request the server to allocate an encryption key corresponding to a first service, where the first request message includes an identifier of the first service and an identifier of the first terminal device, and the encryption key is used to encrypt first information.</p><p id="p-0009" num="0008">This embodiment of this application provides a secure communications method. In the method, an encryption key corresponding to a first service is managed by a server. A first terminal device requests, by using a first request message, the server to allocate the encryption key corresponding to the first service, and then receives, from the server, the encryption key that corresponds to the first service and that is used to encrypt first information. In this way, sensitive data such as the first information can be encrypted by using the encryption key in a V2V lane-level assisted driving application scenario, and a process of allocating the encryption key and a process of performing secure communication by using the encryption key can be decoupled. The first terminal device obtains the encryption key from the server, so that computing and storage overheads of the first terminal device can be reduced, a process in which the first terminal device generates the encryption key through calculation can be omitted, a delay can be increased, and a requirement of lane-level assisted driving on a communication delay can be satisfied. The server allocates the encryption key, so that it is more convenient to centrally maintain and update the encryption key, load of managing the encryption key by the first terminal device is reduced, application layer control is facilitated, and promotion and use are also facilitated. In addition, a correspondence between the encryption key and the identifier of the first service may be configured for different application scenarios in V2X.</p><p id="p-0010" num="0009">In a possible implementation, the first request message in this embodiment of this application further includes a metric value of the first terminal device, and the metric value of the first terminal device is used to verify whether the first terminal device is authorized. The metric value of the first terminal device is provided for the server by using the first request message, so that the server determines whether the first terminal is qualified to request the encryption key corresponding to the first service. For example, if first terminal device is authorized, the server determines that the first terminal device is qualified to request the encryption key corresponding to the first service; and if the terminal device is unauthorized, in other words, if the terminal device is unauthorized, the server determines that the first terminal is unqualified to request the encryption key corresponding to the first service. In this way, the encryption key corresponding to the first service can be prevented from being obtained by the unauthorized terminal device.</p><p id="p-0011" num="0010">In a possible implementation, the first request message further includes location information of the first terminal device. Correspondingly, the encryption key is determined based on the location information of the first terminal device and the identifier of the first service. In this way, the encryption key corresponding to the first service can be valid in a specified area.</p><p id="p-0012" num="0011">In a possible implementation, the method provided in this embodiment of this application further includes: The first terminal device receives, from the server, an authorization code corresponding to the encryption key, where the authorization code is used to obtain the encryption key. In this way, the first terminal device can access the encryption key by using the authorization code, to improve security of the encryption key.</p><p id="p-0013" num="0012">In a possible implementation, after the first terminal device receives the first response message, the method provided in this embodiment of this application further includes: The first terminal device stores the encryption key in the first terminal device. The first terminal device stores the encryption key, so that a process in which the first terminal device obtains the encryption key from the server can be separated from a process in which the first terminal device encrypts the first information by using the encryption key. In this way, a problem that the encryption key cannot be obtained online through a network connection in an application phase is resolved.</p><p id="p-0014" num="0013">In a possible implementation, after the first terminal device receives the first response message, the method provided in this embodiment of this application further includes: The first terminal device updates a status of the first service to a first state, where the first state indicates that the first service has the corresponding encryption key. By updating the status of the first service, the first terminal device subsequently determines, in an application phase, that the first service has the corresponding encryption key.</p><p id="p-0015" num="0014">In a possible implementation, the method provided in this embodiment of this application further includes: The first terminal device obtains, based on the identifier of the first service when the status of the first service is the first state, the encryption key from a component that stores the encryption key and that is in the first terminal device. The first terminal device sends a first message, where the first message includes the identifier of the first service and first information encrypted by using the encryption key. In this way, security of the first information can be improved.</p><p id="p-0016" num="0015">In a possible implementation, that the first terminal device obtains, based on the identifier of the first service when the status of the first service is the first state, the encryption key from a component that stores the encryption key and that is in the first terminal device includes: When the status of the first service is the first state, the first terminal device generates a first authorization code based on the metric value of the first terminal device and the identifier of the first terminal device. When the first authorization code is the same as the authorization code corresponding to the encryption key, the first terminal device obtains, based on the identifier of the first service, the encryption key from the component that stores the encryption key and that is in the first terminal device.</p><p id="p-0017" num="0016">In a possible implementation, the authorization code is determined based on the metric value and the identifier of the first terminal device.</p><p id="p-0018" num="0017">In a possible implementation, before the first terminal device sends the first request message to the server, the method provided in this embodiment of this application further includes: The first terminal device sends a second request message to the server, where the second request message is used to request the server to allocate the encryption key corresponding to the first service, and the second request message includes the identifier of the first service and the identifier of the first terminal device. The first terminal device receives, from the server, a second response message used to indicate that the first service has the corresponding encryption key. The first terminal device updates a status of the first service to a first state based on the second response message, where the first state indicates that the first service has the corresponding encryption key. In this solution, key distribution may be delayed. To be specific, the server first generates the encryption key based on the second request message, but in this case, the server does not send the encryption key corresponding to the first service to the first terminal device.</p><p id="p-0019" num="0018">In a possible implementation, before the first terminal device sends the first request message to the server, the method provided in this embodiment of this application further includes: The server determines that the status of the first service is the first state.</p><p id="p-0020" num="0019">In a possible implementation, the method provided in this embodiment of this application further includes: The first terminal device sends the first message that includes the identifier of the first service and the first information encrypted by using the encryption key.</p><p id="p-0021" num="0020">In a possible implementation, the method provided in this embodiment of this application further includes: The first terminal device receives a key update seed from the server, where the key update seed is used to update the encryption key. The first terminal device updates the encryption key based on the key update seed, to obtain an updated encryption key. In this way, the encryption key can be updated in a timely manner, and security of the encryption key can be improved.</p><p id="p-0022" num="0021">In a possible implementation, the method provided in this embodiment of this application further includes: The first terminal device receives version number information from the server, where the version number information is used to identify the updated encryption key. The first terminal device determines a version number of the updated encryption key based on the version number information.</p><p id="p-0023" num="0022">In a possible implementation, before the first terminal device receives the key update seed from the server, the method provided in this embodiment of this application further includes: The first terminal device sends a key update request to the server, where the key update request is used to request to update the encryption key corresponding to the first service.</p><p id="p-0024" num="0023">In a possible implementation, before the first terminal device sends the key update request to the server, the method may further include: The first terminal device determines to update the encryption key corresponding to the first service.</p><p id="p-0025" num="0024">In a possible implementation, that the first terminal device determines to update the encryption key corresponding to the first service includes: The first terminal device determines, according to a key update policy corresponding to the first service, to update the encryption key corresponding to the first service. Alternatively, the first terminal device receives a key update notification request from the server, where the key update notification request is used to indicate the first terminal device to update the encryption key corresponding to the first service. The first terminal device determines, based on the key update notification request, to update the encryption key corresponding to the first service.</p><p id="p-0026" num="0025">In a possible implementation, the first terminal device is a vehicle, the first terminal device is a vehicle-mounted device, or the first terminal device is a chip in the vehicle-mounted device.</p><p id="p-0027" num="0026">According to a second aspect, an embodiment of this application provides a communications method. The method includes: A server receives, from a first terminal device, a first request message used to request the server to allocate an encryption key corresponding to a first service, where the first request message includes an identifier of the first service and an identifier of the first terminal device. The server determines, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service. The server sends a first response message including the encryption key corresponding to the first service to the first terminal device.</p><p id="p-0028" num="0027">In a possible implementation, the first request message further includes a metric value of the first terminal device, and the metric value is used to verify whether the first terminal device is authorized.</p><p id="p-0029" num="0028">In a possible implementation, that the server determines, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service includes: When the server determines, based on the metric value, that the first terminal device is authorized, the server determines, based on the identifier of the first service, the encryption key corresponding to the first service.</p><p id="p-0030" num="0029">In a possible implementation, that the server determines, based on the metric value of the first terminal device, that the first terminal device is authorized includes: If the metric value of the first terminal device is the same as a standard metric value or the metric value of the first terminal device exists in a standard metric list, the server determines that the first terminal device is authorized. If the metric value of the first terminal device is different from a standard metric value or the metric value of the first terminal device does not exist in a standard metric list, the server determines that the first terminal device is unauthorized.</p><p id="p-0031" num="0030">In a possible implementation, the first request message further includes location information of the first terminal device. Correspondingly, the encryption key is determined based on the identifier of the first service and the location information of the first terminal device. For example, the server may determine, based on the identifier of the first service in the following manner, the encryption key corresponding to the first service: When the server determines, based on the identifier of the first terminal device, that the first terminal device meets a condition for enabling the first service, the server determines, based on the identifier of the first service and the location information of the first terminal device, the encryption key corresponding to the first service.</p><p id="p-0032" num="0031">In a possible implementation, the method provided in this embodiment of this application further includes: The server sends an authorization code corresponding to the encryption key to the first terminal device.</p><p id="p-0033" num="0032">In a possible implementation, the authorization code is determined based on one or more of the identifier of the first terminal device and the metric value of the first terminal device.</p><p id="p-0034" num="0033">In a possible implementation, the authorization code is determined based on the identifier of the first terminal device. For example, the server determines, based on the identifier of the first terminal device, the authorization code corresponding to the encryption key.</p><p id="p-0035" num="0034">In a possible implementation, the authorization code is determined based on the identifier of the first terminal device and the metric value of the first terminal device. For example, the server generates, based on the metric value of the first terminal device and the identifier of the first terminal device, the authorization code corresponding to the encryption key.</p><p id="p-0036" num="0035">In a possible implementation, the authorization code is determined based on the metric value of the first terminal device. For example, the server determines the authorization code based on the metric value of the first terminal device.</p><p id="p-0037" num="0036">In a possible implementation, before the server receives the first request message from the first terminal device, the method provided in this embodiment of this application further includes: The server receives, from the first terminal device, a second request message used to request the server to allocate the corresponding encryption key to the first service, where the second request message includes the identifier of the first service and the identifier of the first terminal device. The server sends a second response message to the first terminal device, where the second response message is used to indicate that the first service has the corresponding encryption key.</p><p id="p-0038" num="0037">In a possible implementation, the second request message includes one or more of the metric value of the first terminal device and the location information of the first terminal device.</p><p id="p-0039" num="0038">In a possible implementation, that the server sends the encryption key corresponding to the first service to the first terminal device includes: When the server determines, based on the metric value of the first terminal device, that the first terminal device is authorized, the server sends the encryption key corresponding to the first service to the first terminal device.</p><p id="p-0040" num="0039">In a possible implementation, that the server determines, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service includes: When the server determines, based on the identifier of the first terminal device, that the first terminal device is capable of enabling the first service, the server determines, based on the identifier of the first service, the encryption key corresponding to the first service.</p><p id="p-0041" num="0040">In a possible implementation, that the server determines, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service includes: When the server determines, based on the identifier of the first terminal device, that the first terminal device is capable of enabling the first service, the server determines, based on the identifier of the first service, an encryption key associated with the identifier of the first service as the encryption key corresponding to the first service.</p><p id="p-0042" num="0041">In a possible implementation, the method provided in this embodiment of this application further includes: The server sends a key update seed and/or version number information to the first terminal device, where the key update seed is used to update the encryption key, and the version number information is used to identify an updated encryption key.</p><p id="p-0043" num="0042">In a possible implementation, before the server sends the key update seed and/or the version number information to the first terminal device, the method provided in this embodiment of this application further includes: The server receives a key update request from the first terminal device, where the key update request is used to request to update the encryption key corresponding to the first service. Optionally, the key update request includes indication information x, used to indicate that the first terminal device requests to update the encryption key corresponding to the first service.</p><p id="p-0044" num="0043">In a possible implementation, before the server receives the key update request from the first terminal device, the method provided in this embodiment of this application further includes: The server sends a key update notification request to the first terminal device, where the key update notification request is used to indicate the first terminal device to update the encryption key corresponding to the first service, and the key update notification request may include the identifier of the first service. Optionally, the key update notification request may carry indication information y, used to indicate the first terminal device to update the encryption key corresponding to the first service.</p><p id="p-0045" num="0044">In a possible implementation, the first terminal device is a vehicle, the first terminal device is a vehicle-mounted device, or the first terminal device is a chip in the vehicle-mounted device.</p><p id="p-0046" num="0045">According to a third aspect, an embodiment of this application provides a secure communications method, including: A second terminal device receives, from a first terminal device, a first message that includes an identifier of a first service and encrypted first information. The second terminal device obtains, from a server based on the identifier of the first service, an encryption key corresponding to the first service. The second terminal device processes the encrypted first information based on the encryption key, to obtain first information.</p><p id="p-0047" num="0046">In a possible implementation, that the second terminal device obtains, from a server based on the identifier of the first service, an encryption key corresponding to the first service includes: The second terminal device sends a first request message to the server, where the first request message includes the identifier of the first service. The second terminal device receives a first response message from the server, where the first response message includes the encryption key corresponding to the first service.</p><p id="p-0048" num="0047">In a possible implementation, the first message may further include an authorization code corresponding to the encryption key. Correspondingly, the first request message further includes the authorization code corresponding to the encryption key, and the authorization code is used to obtain the encryption key.</p><p id="p-0049" num="0048">In a possible implementation, the first request message further includes one or more of an identifier of the second terminal device or location information of the second terminal device.</p><p id="p-0050" num="0049">In a possible implementation, the first message may further include a location tag, and the first request message may further include the location tag.</p><p id="p-0051" num="0050">In a possible implementation, the second terminal device is a vehicle, the second terminal device is a vehicle-mounted device, or the second terminal device is a chip in the vehicle-mounted device.</p><p id="p-0052" num="0051">According to a fourth aspect, an embodiment of this application provides a key update method. The method is applied to a first terminal device, and the first terminal device has an encryption key corresponding to a first service. The method includes: The first terminal device receives, from a server, a key update seed corresponding to the first service, where the key update seed is used to update the encryption key. The first terminal device obtains an updated encryption key based on the key update seed and the encryption key.</p><p id="p-0053" num="0052">In a possible implementation, the method provided in this embodiment of this application further includes: The first terminal device obtains version number information corresponding to the first service, where the version number information is used to identify the updated encryption key. Correspondingly, the method provided in this embodiment of this application further includes: The first terminal device determines a version number of the updated encryption key based on the version number information. For example, the version number information may be determined by the first terminal device and then determined by the server, or the version number information is determined through negotiation between the first terminal device and the server, or is predefined in a protocol. Certainly, the version number information may alternatively be sent by the server to the first terminal device.</p><p id="p-0054" num="0053">In a possible implementation, the first terminal device is a vehicle, the first terminal device is a vehicle-mounted device, or the first terminal device is a chip in the vehicle-mounted device.</p><p id="p-0055" num="0054">In a possible implementation, before the first terminal device receives, from the server, the key update seed corresponding to the first service, the method provided in this embodiment of this application may further include: The first terminal device sends a key update request to the server, where the key update request is used to request to update the encryption key corresponding to the first service. For example, the key update request includes an identifier of the first service. Optionally, the key update request includes indication information x, used to indicate that the first terminal device requests to update the encryption key corresponding to the first service.</p><p id="p-0056" num="0055">In a possible implementation, before the first terminal device sends the key update request to the server, the method provided in this embodiment of this application may further include: The first terminal device receives a key update notification request from the server, where the key update notification request is used to indicate the first terminal device to update the encryption key corresponding to the first service, and the key update notification request may include the identifier of the first service. Optionally, the key update notification request may carry indication information y, used to indicate the first terminal device to update the encryption key corresponding to the first service.</p><p id="p-0057" num="0056">According to a fifth aspect, an embodiment of this application provides a key update method. The method includes: A server determines, according to a key update policy, a key update seed corresponding to a first service. The server sends the key update seed corresponding to the first service to a first terminal device.</p><p id="p-0058" num="0057">In a possible implementation, the method may further include: The server determines, based on the key update policy, version number information corresponding to the first service. The server sends the version number information corresponding to the first service to the first terminal device.</p><p id="p-0059" num="0058">In a possible implementation, before the server sends the key update seed corresponding to the first service to the first terminal device, the method provided in this embodiment of this application may further include: The server receives a key update request from the first terminal device, where the key update request is used to request to update an encryption key corresponding to the first service. For example, the key update request includes an identifier of the first service. Optionally, the key update request includes indication information x, used to indicate that the first terminal device requests to update the encryption key corresponding to the first service.</p><p id="p-0060" num="0059">In a possible implementation, the method provided in this embodiment of this application may further include: The server receives a key update notification request from the first terminal device, where the key update notification request is used to indicate the first terminal device to update the encryption key corresponding to the first service, and the key update notification request may include the identifier of the first service. Optionally, the key update notification request may carry indication information y, used to indicate the first terminal device to update the encryption key corresponding to the first service.</p><p id="p-0061" num="0060">According to a sixth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus may be a terminal, or may be a vehicle-mounted device built in the terminal or a component (for example, a chip) of the vehicle-mounted device. The communications apparatus may include a communications unit. The communications apparatus may further include a processing unit and a storage unit. In an example, when the communications apparatus is the terminal, the communications unit may be a transceiver, the storage unit may be a memory, where the storage unit is configured to store instructions, and the processing unit may be a processor. The processing unit executes the instructions stored in the storage unit, so that the terminal implements the communications method according to any one of the first aspect or the possible implementations of the first aspect. In another example, when the communications apparatus is the component (for example, the chip) built in the terminal, the processing unit may be a processor, and the communications unit may be a communications interface. For example, the communications interface in the chip may be an input/output interface, a pin, or a circuit. The processing unit executes instructions stored in the storage unit, so that the communications apparatus implements the communications method according to any one of the first aspect or the possible implementations of the first aspect. The storage unit may be a storage unit (for example, a register or a cache) in the chip, or may be a storage unit (for example, a read-only memory or a random access memory) that is in the terminal and that is located outside the chip.</p><p id="p-0062" num="0061">According to a seventh aspect, an embodiment of this application provides a communications apparatus. The communications apparatus may be a server, or may be a component (for example, a chip) built in the server. The communications apparatus may include a communications unit and a processing unit. Optionally, the communications apparatus may further include a storage unit. In an example, when the communications apparatus is the server, the communications unit may be a communications interface, the storage unit may be a memory, where the storage unit is configured to store instructions, or a first service and an encryption key corresponding to the first service, and the processing unit may be a processor. The processing unit executes the instructions stored in the storage unit, so that the server implements the communications method according to any one of the second aspect or the possible implementations of the second aspect. In another example, when the communications apparatus is the component (for example, the chip) built in the server, the processing unit may be a processor, and the communications unit may be a communications interface. For example, the communications interface in the chip may be an input/output interface, a pin, or a circuit. The processing unit executes instructions stored in the storage unit, so that the communications apparatus implements the communications method according to any one of the second aspect or the possible implementations of the second aspect. The storage unit may be a storage unit (for example, a register or a cache) in the chip, or may be a storage unit (for example, a read-only memory or a random access memory) that is in the server and that is located outside the chip.</p><p id="p-0063" num="0062">According to an eighth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus may be a terminal, or may be a vehicle-mounted device built in the terminal or a component (for example, a chip) of the vehicle-mounted device. The communications apparatus may include a communications unit. The communications apparatus may further include a processing unit and a storage unit. In an example, when the communications apparatus is the terminal, the communications unit may be a transceiver, the storage unit may be a memory, where the storage unit is configured to store instructions, and the processing unit may be a processor. The processing unit executes the instructions stored in the storage unit, so that the terminal implements the secure communications method according to any one of the third aspect or the possible implementations of the third aspect. In another example, when the communications apparatus is the component (for example, the chip) built in the terminal, the processing unit may be a processor, and the communications unit may be a communications interface. For example, the communications interface in the chip may be an input/output interface, a pin, or a circuit. The processing unit executes instructions stored in the storage unit, so that the communications apparatus implements the secure communications method according to any one of the third aspect or the possible implementations of the third aspect. The storage unit may be a storage unit (for example, a register or a cache) in the chip, or may be a storage unit (for example, a read-only memory or a random access memory) that is in the terminal and that is located outside the chip.</p><p id="p-0064" num="0063">According to a ninth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus may be a terminal, or may be a vehicle-mounted device in the terminal or a component (for example, a chip) applied to the vehicle-mounted device. The communications apparatus may include a communications unit. The communications apparatus may further include a processing unit and a storage unit. In an example, when the communications apparatus is the terminal, the communications unit may be a transceiver, the storage unit may be a memory, where the storage unit is configured to store instructions, and the processing unit may be a processor. The processing unit executes the instructions stored in the storage unit, so that the terminal implements the key update method according to any one of the fourth aspect or the possible implementations of the fourth aspect. In another example, when the communications apparatus is the component (for example, the chip) built in the terminal, the processing unit may be a processor, and the communications unit may be a communications interface. For example, the communications interface in the chip may be an input/output interface, a pin, or a circuit. The processing unit executes instructions stored in the storage unit, so that the communications apparatus implements the key update method according to any one of the fourth aspect or the possible implementations of the fourth aspect. The storage unit may be a storage unit (for example, a register or a cache) in the chip, or may be a storage unit (for example, a read-only memory or a random access memory) that is in the terminal and that is located outside the chip.</p><p id="p-0065" num="0064">According to a tenth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus may be a server, or may be a component (for example, a chip) built in the server. The communications apparatus may include a communications unit and a processing unit. Optionally, the communications apparatus may further include a storage unit. In an example, when the communications apparatus is the server, the communications unit may be a communications interface, the storage unit may be a memory, where the storage unit is configured to store instructions, or a first service and a key update seed corresponding to the first service, and the processing unit may be a processor. The processing unit executes the instructions stored in the storage unit, so that the server implements the key update method according to any one of the fifth aspect or the possible implementations of the fifth aspect. In another example, when the communications apparatus is the component (for example, the chip) built in the server, the processing unit may be a processor, and the communications unit may be a communications interface. For example, the communications interface in the chip may be an input/output interface, a pin, or a circuit. The processing unit executes instructions stored in the storage unit, so that the communications apparatus implements the key update method according to any one of the fifth aspect or the possible implementations of the fifth aspect. The storage unit may be a storage unit (for example, a register or a cache) in the chip, or may be a storage unit (for example, a read-only memory or a random access memory) that is in the server and that is located outside the chip.</p><p id="p-0066" num="0065">According to an eleventh aspect, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the communications method according to any one of the first aspect or the possible implementations of the first aspect.</p><p id="p-0067" num="0066">According to a twelfth aspect, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the communications method according to any one of the second aspect or the possible implementations of the second aspect.</p><p id="p-0068" num="0067">According to a thirteenth aspect, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the secure communications method according to any one of the third aspect or the possible implementations of the third aspect.</p><p id="p-0069" num="0068">According to a fourteenth aspect, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the key update method according to any one of the fourth aspect or the possible implementations of the fourth aspect.</p><p id="p-0070" num="0069">According to a fifteenth aspect, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the key update method according to any one of the fifth aspect or the possible implementations of the fifth aspect.</p><p id="p-0071" num="0070">According to a sixteenth aspect, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the communications method according to any possible implementation of the first aspect.</p><p id="p-0072" num="0071">According to a seventeenth aspect, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the communications method according to any possible implementation of the second aspect.</p><p id="p-0073" num="0072">According to an eighteenth aspect, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the secure communications method according to any possible implementation of the third aspect.</p><p id="p-0074" num="0073">According to a nineteenth aspect, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the key update method according to any possible implementation of the fourth aspect.</p><p id="p-0075" num="0074">According to a twentieth aspect, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the key update method according to any possible implementation of the fifth aspect.</p><p id="p-0076" num="0075">According to a twenty-first aspect, an embodiment of this application provides a communications system. The communications system includes the communications apparatus according to any one of the sixth aspect or the possible implementations of the sixth aspect and the communications apparatus according to any one of the seventh aspect or the possible implementations of the seventh aspect.</p><p id="p-0077" num="0076">In a possible implementation, the communications system may further include the communications apparatus according to any one of the eighth aspect or the possible embodiments of the eighth aspect.</p><p id="p-0078" num="0077">According to a twenty-second aspect, an embodiment of this application provides a communications system. The communications system includes the communications apparatus according to any one of the ninth aspect or the possible implementations of the ninth aspect and the communications apparatus according to any one of the tenth aspect or the possible implementations of the tenth aspect.</p><p id="p-0079" num="0078">According to a twenty-third aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes a processor and a storage medium. The storage medium stores instructions, and the instructions are run by the processor, to implement the communications method according to any one of the first aspect or the possible implementations of the first aspect.</p><p id="p-0080" num="0079">According to a twenty-fourth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes a processor and a storage medium. The storage medium stores instructions, and the instructions are run by the processor, to implement the communications method according to any one of the second aspect or the possible implementations of the second aspect.</p><p id="p-0081" num="0080">According to a twenty-fifth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes a processor and a storage medium. The storage medium stores instructions, and the instructions are run by the processor, to implement the secure communications method according to any one of the third aspect or the possible implementations of the third aspect.</p><p id="p-0082" num="0081">According to a twenty-sixth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes a processor and a storage medium. The storage medium stores instructions, and the instructions are run by the processor, to implement the key update method according to any one of the fourth aspect or the possible implementations of the fourth aspect.</p><p id="p-0083" num="0082">According to a twenty-seventh aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes a processor and a storage medium. The storage medium stores instructions, and the instructions are run by the processor, to implement the key update method according to any one of the fifth aspect or the possible implementations of the fifth aspect.</p><p id="p-0084" num="0083">According to a twenty-eighth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes at least one processor. The at least one processor is coupled to a memory, the memory stores a computer program or instructions, and the at least one processor runs the computer program or the instructions stored in the memory, to implement the communications method according to any one of the first aspect or the possible implementations of the first aspect.</p><p id="p-0085" num="0084">According to a twenty-ninth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes at least one processor. The at least one processor is coupled to a memory, the memory stores a computer program or instructions, and the at least one processor runs the computer program or the instructions stored in the memory, to implement the communications method according to any one of the second aspect or the possible implementations of the second aspect.</p><p id="p-0086" num="0085">According to a thirtieth aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes at least one processor. The at least one processor is coupled to a memory, the memory stores a computer program or instructions, and the at least one processor runs the computer program or the instructions stored in the memory, to implement the secure communications method according to any one of the third aspect or the possible implementations of the third aspect.</p><p id="p-0087" num="0086">According to a thirty-first aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes at least one processor. The at least one processor is coupled to a memory, the memory stores a computer program or instructions, and the at least one processor runs the computer program or the instructions stored in the memory, to implement the key update method according to any one of the fourth aspect or the possible implementations of the fourth aspect.</p><p id="p-0088" num="0087">According to a thirty-second aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes at least one processor. The at least one processor is coupled to a memory, the memory stores a computer program or instructions, and the at least one processor runs the computer program or the instructions stored in the memory, to implement the key update method according to any one of the fifth aspect or the possible implementations of the fifth aspect.</p><p id="p-0089" num="0088">In an optional implementation, the communications apparatuses according to the twenty-eighth aspect to the thirty-second aspect each may further include a communications interface.</p><p id="p-0090" num="0089">It should be understood that the memories according to the twenty-eighth aspect to the thirty-second aspect each may be located inside the communications apparatus, or may be located outside the communications apparatus. This is not limited in this embodiment of this application.</p><p id="p-0091" num="0090">It should be noted that when the communications apparatus according to each of the foregoing aspects is applied to a terminal or a server, the communications apparatus may be a chip, a chip system, or a circuit system.</p><p id="p-0092" num="0091">According to a thirty-third aspect, an embodiment of this application provides a communications apparatus. The communications apparatus includes one or more modules, configured to implement the method according to any one of the first aspect, the second aspect, the third aspect, the fourth aspect, or the fifth aspect; and the one or more modules may correspond to steps in the method according to any one of the first aspect, the second aspect, the third aspect, the fourth aspect, or the fifth aspect.</p><p id="p-0093" num="0092">According to a thirty-fourth aspect, an embodiment of this application provides a chip. The chip includes a processor and a communications interface. The communications interface is coupled to the processor, and the processor is configured to run a computer program or instructions, to implement the communications method according to any one of the first aspect or the possible implementations of the first aspect. The communications interface is configured to communicate with another module outside the chip.</p><p id="p-0094" num="0093">According to a thirty-fifth aspect, an embodiment of this application provides a chip. The chip includes a processor and a communications interface. The communications interface is coupled to the processor, and the processor is configured to run a computer program or instructions, to implement the communications method according to any one of the second aspect or the possible implementations of the second aspect. The communications interface is configured to communicate with another module outside the chip.</p><p id="p-0095" num="0094">According to a thirty-sixth aspect, an embodiment of this application provides a chip. The chip includes a processor and a communications interface. The communications interface is coupled to the processor, and the processor is configured to run a computer program or instructions, to implement the secure communications method according to any one of the third aspect or the possible implementations of the third aspect. The communications interface is configured to communicate with another module outside the chip.</p><p id="p-0096" num="0095">According to a thirty-seventh aspect, an embodiment of this application provides a chip. The chip includes a processor and a communications interface. The communications interface is coupled to the processor, and the processor is configured to run a computer program or instructions, to implement the key update method according to any one of the fourth aspect or the possible implementations of the fourth aspect. The communications interface is configured to communicate with another module outside the chip.</p><p id="p-0097" num="0096">According to a thirty-eighth aspect, an embodiment of this application provides a chip. The chip includes a processor and a communications interface. The communications interface is coupled to the processor, and the processor is configured to run a computer program or instructions, to implement the key update method according to any one of the fifth aspect or the possible implementations of the fifth aspect. The communications interface is configured to communicate with another module outside the chip.</p><p id="p-0098" num="0097">Specifically, the chip provided in the embodiments of this application further includes a memory, configured to store the computer program or the instructions.</p><p id="p-0099" num="0098">Any apparatus, computer storage medium, computer program product, chip, or communications system provided above is configured to perform the corresponding method provided above. Therefore, for beneficial effects that can be achieved by the apparatus, computer storage medium, computer program product, chip, or communications system, refer to beneficial effects of a corresponding solution in the corresponding method provided above. Details are not described herein again.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an architectural diagram of a communications system according to an embodiment of this application;</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram of key distribution according to an embodiment of this application;</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is another schematic diagram of key distribution according to an embodiment of this application;</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic structural diagram of a communications device according to an embodiment of this application;</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic interaction diagram of a communications method according to an embodiment of this application;</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic interaction diagram of another communications method according to an embodiment of this application;</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> are a schematic interaction diagram of still another communications method according to an embodiment of this application;</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic interaction diagram of a key update method according to an embodiment of this application;</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> are a schematic diagram <b>1</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> are a schematic diagram <b>2</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> are a schematic diagram <b>3</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. <b>12</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>B</figref> are a schematic diagram <b>4</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> are a schematic diagram <b>5</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> are a schematic diagram <b>6</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0114" num="0113"><figref idref="DRAWINGS">FIG. <b>15</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>15</b>B</figref> are a schematic diagram <b>7</b> of a specific embodiment of a secure communications method according to an embodiment of this application;</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a schematic diagram of a specific embodiment of a key update method according to an embodiment of this application;</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a schematic structural diagram of a communications apparatus according to an embodiment of this application;</p><p id="p-0117" num="0116"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a schematic structural diagram of another communications apparatus according to an embodiment of this application; and</p><p id="p-0118" num="0117"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a schematic structural diagram of a chip according to an embodiment of this application.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0119" num="0118">Before the embodiments of this application are described, related terms in the embodiments of this application are explained as follows:</p><p id="p-0120" num="0119">(1) Metric value (which may also be referred to as integrity measurement (integrity measurement)): The metric value is obtained by a client (for example, a terminal device) by performing trusted measurement. The trusted measurement includes: A server side (for example, a server) performs integrity verification on a running environment and a key application program that used by the client (for example, a terminal). The client calculates hash values for the current running environment (for example, kernel code, a module, and a service) and the key application program (for example, an application program that uses a broadcast key) to form a hash chain. The metric value may include a value of the hash chain. The server side queries and compares standard metric values that are consistent with the running environment and the application program that are used by the client. An implementation of the trusted measurement is using a remote attestation protocol of a trusted computing group (TCG) standard, or using other lightweight runtime integrity measurement (RIM).</p><p id="p-0121" num="0120">The hash chain means that a plurality of different hash values are combined, and then hash calculation is performed.</p><p id="p-0122" num="0121">(2) Standard metric value: The standard metric value includes an integrity value (for example, an MD5 value of operating system code) that is used in a main running environment (for example, an operating system version in which an autonomous driving program runs) of the terminal and that is preconfigured based on an identifier of the terminal (for example, a vehicle) or an identifier of a vehicle-mounted communications module.</p><p id="p-0123" num="0122">To clearly describe the technical solutions in the embodiments of this application, terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; are used in the embodiments of this application to distinguish between same items or similar items that have basically same functions and purposes. For example, a first terminal device and a second terminal device are merely intended to distinguish between different terminal devices, and are not intended to limit a sequence thereof. A person skilled in the art may understand that the terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; do not intend to limit a quantity or an execution sequence, and the terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; do not indicate a definite difference.</p><p id="p-0124" num="0123">It should be noted that in this application, the term such as &#x201c;example&#x201d; or &#x201c;for example&#x201d; is used to represent giving an example, an illustration, or descriptions. Any embodiment or design scheme described as an &#x201c;example&#x201d; or &#x201c;for example&#x201d; in this application should not be explained as being more preferred or having more advantages than another embodiment or design scheme. Exactly, use of the word such as &#x201c;example&#x201d; or &#x201c;for example&#x201d; is intended to present a related concept in a specific manner.</p><p id="p-0125" num="0124">A network architecture and a service scenario described in the embodiments of this application are intended to describe the technical solutions in the embodiments of this application more clearly, and do not constitute a limitation on the technical solutions provided in the embodiments of this application. A person of ordinary skill in the art may know that with evolution of the network architecture and emergence of a new service scenario, the technical solutions provided in the embodiments of this application are also applicable to similar technical problems.</p><p id="p-0126" num="0125">In this application, &#x201c;at least one&#x201d; means one or more, and &#x201c;a plurality of&#x201d; means two or more. The term &#x201c;and/or&#x201d; describes an association relationship between associated objects and represents that three relationships may exist. For example, A and/or B may represent the following cases: Only A exists, both A and B exist, and only B exists, where A and B may be singular or plural. The character &#x201c;I&#x201d; usually indicates an &#x201c;or&#x201d; relationship between the associated objects. &#x201c;At least one of the following&#x201d; or a similar expression thereof indicates any combination of the following, and includes any combination of one or more of the following. For example, at least one of a, b, or c may indicate: a, b, c, a and b, a and c, b and c, or a, b, and c, where a, b, and c may be singular or plural.</p><p id="p-0127" num="0126">A system architecture and a service scenario described in the embodiments of this application are intended to describe the technical solutions in the embodiments of this application more clearly, and do not constitute a limitation on the technical solutions provided in the embodiments of this application. A person of ordinary skill in the art may know that with evolution of a network architecture and emergence of a new service scenario, the technical solutions provided in the embodiments of this application are also applicable to similar technical problems. In the embodiments of this application, an example in which a provided method is applied to a new radio (NR) system or a 5th generation (5G) network is used for description.</p><p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a communications system according to an embodiment of this application. The communications system includes a server <b>10</b>, a terminal <b>20</b>, and a plurality of other terminals <b>30</b>. In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example, the terminal <b>20</b> and the plurality of other terminals <b>30</b> are vehicles.</p><p id="p-0129" num="0128">The server <b>10</b> may manage one or more encryption keys corresponding to one or more services (for example, a first service) deployed on the server <b>10</b>, and verify whether the terminal <b>20</b> and the plurality of other terminals <b>30</b> have permission to obtain the one or more encryption keys corresponding to the one or more services. For example, the server <b>10</b> may be a V2V application server or a V2X application server.</p><p id="p-0130" num="0129">That the server <b>10</b> manages one or more services deployed on the server <b>10</b> may mean that the server <b>10</b> generates the one or more encryption keys corresponding to the one or more services, the server <b>10</b> updates the one or more encryption keys corresponding to the one or more services, or the server deletes the one or more encryption keys corresponding to the one or more services. This is not limited in this embodiment of this application.</p><p id="p-0131" num="0130">In a possible implementation, the server <b>10</b> in this embodiment of this application includes at least a key management module and a verification service module. The key management module is configured to manage the one or more encryption keys corresponding to the one or more services (for example, the first service) deployed on the server <b>10</b>. The verification service module is configured to verify, based on an identifier of the terminal <b>20</b>, whether the terminal <b>20</b> has permission to obtain the one or more encryption keys corresponding to the one or more services.</p><p id="p-0132" num="0131">In this embodiment of this application, the terminal <b>20</b> and some of the plurality of other terminals <b>30</b> may request the server <b>10</b> to generate an encryption key corresponding to the first service, and obtain, from the server <b>10</b>, the encryption key corresponding to the first service. Then, the terminal <b>20</b> may encrypt, by using the obtained encryption key, first information sent to the another terminal <b>30</b>. This is not limited in this embodiment of this application.</p><p id="p-0133" num="0132">In this embodiment of this application, there is a communication connection (for example, a secure connection (which may also be referred to as a secure channel)) between the server <b>10</b> and the terminal <b>20</b> or between the server <b>10</b> and each of the plurality of terminals <b>20</b>. The secure connection is used for secure communication between the server <b>10</b> and the terminal <b>20</b> or between the server <b>10</b> and the another terminal <b>30</b>. For example, the secure connection may be established by performing two-way authentication between the server <b>10</b> and the terminal <b>20</b> or between the server <b>10</b> and the another terminal <b>30</b> by using the transport layer security (TLS) protocol/secure sockets layer (SSL) protocol.</p><p id="p-0134" num="0133">In this embodiment of this application, a V2X server in a management area into which the terminal is about to move is used as the server. Optionally, the server is deployed on a road-side unit RSU.</p><p id="p-0135" num="0134">In this embodiment of this application, there is a first communications interface between the terminal <b>20</b> and each of the plurality of other terminals <b>30</b>. The first communications interface supports communication between the terminal <b>20</b> and each of the plurality of other terminals <b>30</b>. For example, the first communications interface may be a PC5 interface, and use a dedicated frequency band (for example, 5.9 gigahertz (GHz)) for an internet of vehicles. The PC5 interface is usually used in a vehicle-to-everything (V2X) communication scenario or a device-to-device (D2D) scenario in which direct communication can be performed between devices.</p><p id="p-0136" num="0135">The V2X refers to interconnection between a vehicle and the outside, and is a basic and key technology for a future smart vehicle, autonomous driving, and an intelligent transportation system. In the V2X, a specific application requirement of the V2X is optimized based on an existing D2D technology, to further reduce an access delay of a V2X device and resolve a resource conflict problem.</p><p id="p-0137" num="0136">The V2X specifically further includes several application requirements such as vehicle-to-vehicle (V2V), vehicle-to-infrastructure (V2I), vehicle-to-pedestrian (V2P) direct communication, and vehicle-to-network (V2N) communication. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, V2V refers to communication between vehicles, V2P refers to communication between a vehicle and a person (including a pedestrian, a cyclist, a driver, a passenger, or the like), and V2I refers to communication between a vehicle and a network device. The network device is, for example, a road-side unit (RSU). In addition, V2N may be included in the V2I, and the V2N refers to communication between a vehicle and a base station/network. The RSU may further provide various types of service information and data network access for each terminal in the system. For example, the terminal is a vehicle. For example, the RSU may further provide functions such as electronic toll collection and in-vehicle infotainment for each terminal in the system. This greatly improves traffic intelligence.</p><p id="p-0138" num="0137">The V2P may be used for safety warning for a pedestrian or a non-motor vehicle on a road. A vehicle may communicate, through the V2I, with a road or even another infrastructure such as a traffic light or a road barrier, to obtain road management information such as a traffic light signal time sequence. The V2V may be used for information exchange and reminding between vehicles, and a most typical application is a safety system for anti-collision between vehicles. The V2N is currently a most widely used form of the internet of vehicles, and a main function of the V2N is to enable a vehicle to connect to a cloud server through a mobile network, and use application functions such as navigation, entertainment, and anti-theft provided by the cloud server.</p><p id="p-0139" num="0138">The terminal may be a terminal device including a device that provides a voice and/or data connectivity for a user. Specifically, the terminal device includes a device that provides a voice for the user, includes a device that provides data connectivity for the user, or includes a device that provides a voice and data connectivity for the user. For example, the terminal device may include a handheld device having a wireless connection function, or a processing device connected to a wireless modem. The terminal device may communicate with a core network through a radio access network (RAN), and exchange a voice or data with the RAN, or exchange a voice and data with the RAN. The terminal device may include user equipment (user equipment, UE), a wireless terminal device, a mobile terminal device, a device-to-device (D2D) communication terminal device, a vehicle-to-everything (V2X) terminal device, a machine-to-machine/machine type communication (M2M/MTC) terminal device, an internet of things (IoT) terminal device, a subscriber unit, a subscriber station, a mobile station, a remote station, an access point (AP), a remote terminal, an access terminal, a user terminal, a user agent, a user device, or the like. For example, the terminal device may include a mobile phone (or referred to as a &#x201c;cellular&#x201d; phone), a computer with a mobile terminal device, or a portable, pocket-sized, handheld, or computer built-in mobile apparatus. For example, the terminal device is a device such as a personal communications service (PCS) phone, a cordless phone, a session initiation protocol (SIP) phone, a wireless local loop (WLL) station, or a personal digital assistant (PDA). The terminal device further includes a limited device, for example, a device with low power consumption, a device with a limited storage capability, or a device with a limited computing capability. For example, the terminal device includes an information sensing device, for example, a barcode, a radio frequency identification (RFID) device, a sensor, a global positioning system (GPS), or a laser scanner.</p><p id="p-0140" num="0139">As an example instead of a limitation, in the embodiments of this application, the terminal may alternatively be a wearable device. The wearable device may also be referred to as a wearable intelligent device, an intelligent wearable device, or the like, and is a general term for wearable devices that are developed by applying a wearable technology to intelligent design of daily wear, for example, glasses, gloves, a watch, clothes, and shoes. The wearable device is a portable device that is directly worn on a body or integrated into clothes or an accessory of the user. The wearable device is not only a hardware device, but also implements a powerful function through software support, data exchange, and cloud interaction. In a broad sense, wearable intelligent devices include full-featured and large-sized devices that can implement complete or partial functions without depending on smartphones, such as smart watches or smart glasses, and devices that focus on only one type of application function and need to work with other devices such as smartphones, for example, various smart bands, smart helmets, or smart jewelry for monitoring physical signs.</p><p id="p-0141" num="0140">However, if the various terminals described above are located on a vehicle (for example, placed in the vehicle or installed in the vehicle), the terminals may be considered as vehicle-mounted terminal devices. For example, the vehicle-mounted terminal devices are also referred to as on-board units (OBU).</p><p id="p-0142" num="0141">A method and an apparatus that are provided in the embodiments of this application may be applied to the terminal device or the network device. The terminal device or the network device includes a hardware layer, an operating system layer running above the hardware layer, and an application layer running above the operating system layer. The hardware layer includes hardware such as a central processing unit (CPU), a memory management unit (MMU), and a memory (also referred to as a main memory). The operating system may be any one or more of computer operating systems, for example, a Linux operating system, a Unix operating system, an Android operating system, an iOS operating system, or a Windows operating system, that implement service processing through a process. The application layer includes applications such as a browser, an address book, word processing software, and instant messaging software. In addition, in the embodiments of this application, a specific structure of a body for performing a signal transmission method is not specially limited in the embodiments of this application, provided that the body can run a program recording code of the signal transmission method in the embodiments of this application to perform communication according to the signal transmission method in the embodiments of this application. For example, a wireless communications method in the embodiments of this application may be performed by a terminal device or a network device, or a functional module that can invoke a program and execute the program and that is in the terminal device or the network device.</p><p id="p-0143" num="0142">In addition, aspects or features in the embodiments of this application may be implemented as a method, an apparatus, or a product that uses standard programming and/or engineering technologies. The term &#x201c;product&#x201d; used in this application covers a computer program that can be accessed from any computer readable component, carrier, or medium. For example, the computer readable storage medium may include but is not limited to a magnetic storage device (for example, a hard disk, a floppy disk, or a magnetic tape), an optical disc (for example, a compact disc (CD) or a digital versatile disc (DVD)), or a smart card and a flash memory device (for example, an erasable programmable read-only memory (EPROM), a card, a stick, or a key drive). In addition, various storage media described in this specification may indicate one or more devices and/or other machine readable media that are configured to store information. The &#x201c;machine readable media&#x201d; may include but are not limited to a wireless channel and various other media that can store, include, and/or carry instructions and/or data.</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a scenario according to an embodiment of this application. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example, the terminal <b>20</b> is a vehicle whose identifier is X (vehicle X for short), the another terminal <b>30</b> is a vehicle whose identifier is Y (vehicle Y for short), and the vehicle X communicates with the vehicle Y through V2X. The vehicle X may send, on a sidelink resource, sidelink data (for example, the sidelink data may be coordinate data of the vehicle X) in a dialog box <b>50</b> to the vehicle Y located around the vehicle X. After receiving the coordinate data of the vehicle X, the vehicle Y determines a relative location between the vehicle X and the vehicle Y based on the coordinate data of the vehicle X, and senses and locates a lane and a surrounding object by using a vehicle sensor. In this way, a plurality of functions are implemented, including forward collision warning, blind spot/lane change assistance, emergency braking warning, reverse overtaking collision warning, intersection collision warning, left turn assistance, and the like. Certainly, the vehicle Y may also send coordinate data of the vehicle Y to the vehicle X. In a corresponding V2V scenario, the vehicle X or the vehicle Y needs to broadcast the coordinate data of the vehicle X or the vehicle Y at any time, to form a continuous track. However, there may be a case in which a malicious vehicle (for example, an unauthenticated vehicle in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) or a specially forged malicious road-side listening device intentionally listens on and collects a broadcast channel of a surrounding vehicle to obtain sensitive data such as continuous coordinates. Therefore, in this case, the coordinate data, which is broadcast in V2V network, needs to be protected. The unauthenticated vehicle in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be considered as a vehicle that is not registered with the server <b>10</b>, or a vehicle whose metric value does not comply with a standard metric value.</p><p id="p-0145" num="0144">The scenario shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is merely an example, and the solutions of this application are also applicable to another scenario of communication between terminals.</p><p id="p-0146" num="0145">Before the embodiments of this application are described, the technical background in the embodiments of this application is described first.</p><p id="p-0147" num="0146">Based on a premise that a broadcast center and each terminal (for example, a vehicle) are provided with a public key and a private key corresponding to the public key, the following provides a procedure of an encryption solution, to encrypt coordinate data:</p><p id="p-0148" num="0147">1. Vehicle A generates a broadcast encryption key Ka. 2. Vehicle A encrypts a first message m by using the encryption key Ka, to obtain EKa(m). 3. Vehicle A obtains identifiers of a plurality of vehicles near vehicle A, and vehicle A queries public keys of the plurality of vehicles based on the identifiers of the plurality of vehicles, and generates n (where n represents a quantity of the plurality of vehicles) encrypted messages: Epk1(Ka), Epk2(Ka), Epk3(Ka), . . . , and Epkn(Ka), where each encrypted message includes EKa(m) and a broadcast key Ka encrypted by using a public key of a vehicle at a receive end. 4. Any one of the plurality of vehicles queries an identifier of the vehicle in an encrypted message packet, decrypts Ka by using a private key of the vehicle, and then decrypts EKa(m) by using Ka, to obtain the first message m.</p><p id="p-0149" num="0148">Alternatively, in another broadcast encryption solution, improvements are usually made in aspects such as reducing a quantity of transmitted packets and a quantity of stored parameters. For example, a parameter N is disclosed in advance, a parameter M is sent, and an encryption key is restored by using the parameter N and the parameter M. Only an authorized terminal can restore the encryption key by using the received parameter M and the disclosed parameter N.</p><p id="p-0150" num="0149">However, in the V2V scenario, an object to which vehicle A broadcasts the first message is random, and a receiving vehicle surrounding vehicle A changes at any time. Vehicle A needs to search for a proper broadcast object, and generate a corresponding broadcast message based on an identifier of the broadcast object. This requires additional communication and computing overheads, for example, for identifying a surrounding vehicle, obtaining an identifier or attribute information of the vehicle, and sending an encryption key to the surrounding vehicle. Consequently, computing and storage overheads caused by the encryption solution are extremely high.</p><p id="p-0151" num="0150">Another encryption solution is shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. A coordination server assists in secure data exchange between vehicles, and the coordination server verifies security of the vehicle by using a verification server. The vehicle sends information to the coordination server, where the information includes sensor data, verification data, and a signature for the sensor information or the verification data (the signature for the sensor information or the verification data is generated by using a signature key of a trusted execution environment (TEE) of the vehicle). The coordination server verifies the verification data, and sends the sensor data to a remote vehicle after the verification succeeds. This solution is applicable to remote rescue during which information is sent to a remote rescue vehicle, and point-to-point communication in V2X, but is not applicable to an autonomous driving V2V broadcast scenario. For an autonomous driving V2V application, an original equipment manufacturer (OEM) automotive enterprise expects to minimize dependency on a communications module to avoid an increase in additional costs.</p><p id="p-0152" num="0151">Still another encryption solution is shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Vehicle A initiates a registration request to a server, to obtain a communication key in a V2X scenario. The server generates a communication key a associated with vehicle A. The server stores an association relationship between the communication key a and identification information of vehicle A. The server returns the communication key a to vehicle A. Vehicle A stores the communication key a. In an application phase, vehicle A encrypts a message Q by using the communication key a, and broadcasts an encrypted message Q. After receiving the encrypted message Q, surrounding vehicles B, C, and D each query the communication key a of vehicle A from the server; and the server finds the communication key a of vehicle A from a database based on the identifier information of vehicle A, and separately returns the communication key a of vehicle A to vehicle B, vehicle C, and vehicle D. After obtaining the communication key a of vehicle A, vehicles B, C, and D can decrypt the encrypted message Q to obtain the message Q. In this solution, when one vehicle obtains encrypted messages of a plurality of different vehicles, implementation by the vehicle is complex, and overheads are high; and when there are dense vehicles, storage and computing overheads are high.</p><p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic structural diagram of a communications device according to an embodiment of this application. For structures of a first terminal device and a server in this embodiment of this application, refer to a structure of the communications device shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The communications device includes a processor <b>41</b>, a communications line <b>44</b>, and at least one communications interface (descriptions are provided merely by using an example in which the communications device includes a communications interface <b>43</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>).</p><p id="p-0154" num="0153">Optionally, the communications device may further include a memory <b>42</b>.</p><p id="p-0155" num="0154">The processor <b>41</b> may be a general-purpose central processing unit (CPU), a microprocessor, an application-specific integrated circuit (ASIC), or one or more integrated circuits configured to control program execution of the solutions of this application.</p><p id="p-0156" num="0155">The communications line <b>44</b> may include a channel for transmitting information between the foregoing components.</p><p id="p-0157" num="0156">The communications interface <b>43</b> is configured to exchange information with another apparatus. For example, the communications interface <b>43</b> is any apparatus such as a transceiver, and is configured to communicate with another device or a communications network such as the Ethernet, a radio access network (RAN), or a wireless local area network (WLAN).</p><p id="p-0158" num="0157">The memory <b>42</b> may be a read-only memory (ROM) or another type of static storage device that can store static information and an instruction, or a random access memory (random access memory, RAM) or another type of dynamic storage device that can store information and an instruction. The memory <b>42</b> may alternatively be an electrically erasable programmable read-only memory (EEPROM), a compact disc read-only memory (CD-ROM) or another compact disc storage, an optical disc storage (including a compact disc, a laser disc, an optical disc, a digital versatile disc, a Blu-ray disc, or the like), a magnetic disk storage medium or another magnetic storage device, or any other medium that can be used to carry or store expected program code in a form of an instruction or a data structure and that is accessible by a computer. However, the memory <b>42</b> is not limited thereto. The memory may exist independently, and is connected to the processor through the communications line <b>44</b>. Alternatively, the memory may be integrated into the processor.</p><p id="p-0159" num="0158">The memory <b>42</b> is configured to store computer execution instructions for performing the solutions of this application, and the processor <b>41</b> controls execution of the computer execution instructions. The processor <b>41</b> is configured to execute the computer execution instructions stored in the memory <b>42</b>, to implement a communications method provided in the following embodiments of this application.</p><p id="p-0160" num="0159">Optionally, the computer execution instructions in this embodiment of this application may also be referred to as application program code. This is not specifically limited in this embodiment of this application.</p><p id="p-0161" num="0160">In a specific implementation, in an embodiment, the processor <b>41</b> may include one or more CPUs, for example, a CPU 0 and a CPU 1 in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0162" num="0161">In a specific implementation, in an embodiment, the communications device may include a plurality of processors, for example, the processor <b>41</b> and a processor <b>45</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Each of the processors may be a single-core processor (single-CPU) or a multi-core processor (multi-CPU). The processor herein may be one or more devices, circuits, and/or processing cores configured to process data (for example, computer program instructions).</p><p id="p-0163" num="0162">In the embodiments of this application, a specific structure of a body for performing a communications method is not specially limited in the embodiments of this application, provided that the body can run a program recording code of the communications method in the embodiments of this application to perform communication according to the communications method in the embodiments of this application. The following embodiments are described by using examples in which a communications method is performed by a first terminal device, a second terminal device, and a server.</p><p id="p-0164" num="0163">It should be noted that mutual reference may be made between the embodiments of this application. For example, for same or similar steps, mutual reference may be made between the method embodiments, the apparatus embodiments, or the system embodiments. This is not limited herein.</p><p id="p-0165" num="0164">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an interaction embodiment of a communications method according to an embodiment of this application. The method includes the following steps.</p><p id="p-0166" num="0165">Step <b>501</b>: A first terminal device sends a first request message to a server <b>10</b>, and correspondingly, the server <b>10</b> receives the first request message from the first terminal device. The first request message is used to request the server <b>10</b> to allocate an encryption key corresponding to a first service, and the first request message includes an identifier of the first service and an identifier of the first terminal device.</p><p id="p-0167" num="0166">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example, the first terminal device may be the terminal <b>20</b> or a component (for example, a circuit system in the terminal) that is disposed in the terminal <b>20</b> and that can implement a processing function or a communication function of the terminal <b>20</b>. For example, the first terminal device may be a vehicle, and the vehicle has a communication function. Alternatively, the first terminal device may be a processing apparatus in a vehicle. The processing apparatus may communicate with the server <b>20</b> or a second terminal device by using an interface circuit (for example, a circuit that communicates with the outside) of the vehicle. For example, the interface circuit may be a telematics box (T-BOX). Alternatively, the first terminal device may be a vehicle-mounted device. For example, the vehicle-mounted device may be a telematics box (T-BOX). Alternatively, the first terminal device may be a chip in a T-BOX. In this case, the first terminal device may send a first message, a first request message, a second request message, or the like to an antenna of the chip by using an interface circuit, so that the antenna sends the first message, the first request message, or the second request message. For example, the T-BOX may include a cellular network communications module, a V2X communications module, and a processor. The cellular network communications module may be a communications module in a 2G, 3G, 4G, or 5G network. The V2X communications module may be LTE-V2X or 5G-V2X. In an embodiment, the T-BOX further includes a global navigation satellite system (GNSS) and a dead reckoning (DR) communications module. The T-BOX further communicates with a base station through V2N, and communicates with the server and the second terminal device by using the base station.</p><p id="p-0168" num="0167">Certainly, the server in this embodiment of this application may alternatively be a chip or a component that is applied to the server <b>10</b> and that can implement a server function. This is not limited in this embodiment of this application.</p><p id="p-0169" num="0168">It should be understood that the first service may be deployed on the server <b>10</b>, or although the first service is not deployed on the server <b>10</b>, the server <b>10</b> may manage the encryption key corresponding to the first service.</p><p id="p-0170" num="0169">In a possible implementation, the first request message provided in this embodiment of this application includes indication information a, and the indication information a is used to request the server <b>10</b> to allocate the encryption key corresponding to the first service.</p><p id="p-0171" num="0170">For example, the identifier of the first terminal device is used to identify the first terminal device. For example, the first terminal device is a vehicle. The identifier of the first terminal device may be a vehicle identifier or an identifier of a vehicle-mounted terminal device. The identifier of the first service is used to identify the first service.</p><p id="p-0172" num="0171">Step <b>502</b>: The server <b>10</b> determines, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service. For example, the encryption key is determined based on the identifier of the first service.</p><p id="p-0173" num="0172">Step <b>503</b>: The server <b>10</b> sends a first response message to the first terminal device, and correspondingly, the first terminal device receives the first response message from the server <b>10</b>.</p><p id="p-0174" num="0173">Specifically, step <b>503</b> in this embodiment of this application may be implemented in the following manner: The server <b>10</b> transmits the encryption key corresponding to the first service after encrypting the encryption key by using a session key negotiated between the server <b>10</b> and the first terminal device, or transmits, through a secure connection established between the server <b>10</b> and the first terminal device, the encryption key corresponding to the first service to the first terminal device.</p><p id="p-0175" num="0174">The first response message includes the encryption key corresponding to the first service. For example, the first response message includes the identifier of the first service and the encryption key. Alternatively, the first response message includes the encryption key. This is not limited in this embodiment of this application. That the encryption key corresponds to the first service may be understood as follows: The identifier of the first service or the first service is associated with the encryption key.</p><p id="p-0176" num="0175">In this embodiment of this application, different services may correspond to different encryption keys, a service may correspond to an application scenario, and different services may correspond to different application scenarios. If the service a corresponds to a lane-level assisted driving scenario, and an encryption key a is determined based on an identifier of the service a, one or more terminal devices that use the service a all use the same encryption key a. If another service b corresponds to a fleet cruising driving scenario, and an identifier of the service b is different from the identifier of the service a, the encryption key a corresponding to the service a is different from an encryption key b corresponding to the service b. Different encryption keys may be configured for service scenarios or functions, and therefore flexibility is improved.</p><p id="p-0177" num="0176">It may be understood that in this embodiment of this application, first information may be information that needs to be encrypted by the terminal device in a scenario corresponding to the first service.</p><p id="p-0178" num="0177">An embodiment of this application provides a secure communications method. In the method, an encryption key corresponding to a first service is managed by a server. A first terminal device requests, by using a first request message, the server to allocate the encryption key corresponding to the first service, and then receives, from the server, the encryption key that corresponds to the first service and that is used to encrypt first information. In this way, sensitive data such as the first information can be encrypted by using the encryption key in a V2V lane-level assisted driving application scenario, and a process of allocating the encryption key and a process of performing secure communication by using the encryption key can be decoupled. The first terminal device obtains the encryption key from the server, so that computing and storage overheads of the first terminal device can be reduced, a process in which the first terminal device generates the encryption key through calculation can be omitted, a delay can be increased, and a requirement of lane-level assisted driving on a communication delay can be satisfied. The server allocates the encryption key, so that it is more convenient to centrally maintain and update the encryption key, load of managing the encryption key by the first terminal device is reduced, application layer control is facilitated, and promotion and use are also facilitated. In addition, a correspondence between the encryption key and the identifier of the first service may be configured for different application scenarios in V2X.</p><p id="p-0179" num="0178">In a possible embodiment, before step <b>501</b>, the method provided in this embodiment of this application may further include: The first terminal device registers the first service on the server <b>10</b> and establishes a secure connection to the server <b>10</b>.</p><p id="p-0180" num="0179">In a possible implementation, for a specific implementation in which the first terminal device registers the first service on the server <b>10</b> and establishes the secure connection to the server <b>10</b>, refer to descriptions of step <b>901</b> to step <b>904</b> in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>. Details are not described herein.</p><p id="p-0181" num="0180">In a possible embodiment, the method provided in this embodiment of this application may further include: The server <b>10</b> determines an authorization code corresponding to the encryption key. The server <b>10</b> sends the authorization code corresponding to the encryption key to the first terminal device. Correspondingly, the first terminal device receives, from the server <b>10</b>, the authorization code corresponding to the encryption key.</p><p id="p-0182" num="0181">For example, the authorization code in this embodiment of this application is determined based on one or more of the identifier of the first terminal device and a metric value of the first terminal device.</p><p id="p-0183" num="0182">In an example, the authorization code corresponding to the encryption key in this embodiment of this application is determined based on the identifier of the first terminal device. For example, the server <b>10</b> or a key management apparatus generates, based on the identifier of the first terminal device and a KDF, the authorization code corresponding to the encryption key.</p><p id="p-0184" num="0183">When the key management apparatus generates the authorization code, the server <b>10</b> may obtain, from the key management apparatus in the following Manner a or Manner b, the authorization code corresponding to the encryption key.</p><p id="p-0185" num="0184">Manner a: The server <b>10</b> requests the authorization code from the key management apparatus based on the identifier of the first terminal device, to obtain the authorization code. Manner b: After generating the authorization code, the key management apparatus configures an authorization code mapping relationship between the authorization code and the identifier of the first terminal device on the server <b>10</b>. Subsequently, the server <b>10</b> obtains the authorization code based on the identifier of the first terminal device by querying the authorization code mapping relationship.</p><p id="p-0186" num="0185">For example, Auth_code=KDF (V_ID). The authorization code (Auth_code) corresponding to the encryption key may be considered as a password for accessing or obtaining the encryption key. Herein, Auth_code represents the authorization code, the KDF represents a key derivation function, and V_ID represents the identifier of the first terminal device.</p><p id="p-0187" num="0186">In another example, when the server <b>10</b> has the metric value of the first terminal device, if the first terminal device is authorized, the authorization code corresponding to the encryption key in this embodiment of this application is determined based on the metric value of the first terminal device. For example, the server <b>10</b> or a key management apparatus generates, based on the metric value of the first terminal device and a KDF, the authorization code corresponding to the encryption key. When the key management apparatus generates the authorization code, for a manner in which the server <b>10</b> obtains the authorization code corresponding to the encryption key, reference is made to descriptions of the foregoing Manner a or Manner b.</p><p id="p-0188" num="0187">In still another example, when the server <b>10</b> has the metric value of the first terminal device, if the server <b>10</b> determines, based on the metric value of the first terminal device, that the first terminal device is authorized, the authorization code corresponding to the encryption key in this embodiment of this application may also be determined based on the metric value of the first terminal device and the identifier of the first terminal device. For example, the server <b>10</b> or a key management apparatus generates, based on a KDF, the metric value of the first terminal device, and the identifier of the first terminal device, the authorization code corresponding to the encryption key. For example, Auth_code=KDF (metric value, V_ID).</p><p id="p-0189" num="0188">In a possible implementation, the server <b>10</b> may send, by using the first response message, the authorization code corresponding to the encryption key to the first terminal device, to reduce signaling overheads between the server <b>10</b> and the first terminal device. Certainly, the authorization code corresponding to the encryption key and the encryption key corresponding to the first service may be carried in different messages. This is not limited in this embodiment of this application.</p><p id="p-0190" num="0189">It should be noted that in this embodiment of this application, a KDF for generating the encryption key may be the same as or different from a KDF for generating the authorization code. This is not limited in this embodiment of this application.</p><p id="p-0191" num="0190">In this embodiment of this application, in addition to the identifier of the first terminal device and the identifier of the first service, the first request message may carry another parameter (for example, one or more of the metric value of the first terminal device and location information of the first terminal device), to improve security of the encryption key. Because content of the first request messages is different, processes in which the server determines the encryption key based on the first request messages are different. Therefore, descriptions are separately provided below.</p><p id="p-0192" num="0191">Example 1: The first request message may further carry the metric value of the first terminal device. The metric value is used to verify whether the first terminal device is authorized.</p><p id="p-0193" num="0192">Step <b>502</b> in this embodiment of this application may be implemented in the following manner: When determining, based on the metric value, that the first terminal device is authorized, the server <b>10</b> determines, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service.</p><p id="p-0194" num="0193">For example, if the metric value of the first terminal device is the same as a standard metric value or the metric value of the first terminal device exists in a standard metric list, the server determines that the first terminal device is authorized. That the first terminal device is authorized means that the first terminal device may be successfully verified by the server <b>10</b>, and therefore is qualified to obtain, from the server <b>10</b>, the encryption key corresponding to the first service. The standard metric list in this embodiment of this application may include one or more standard metric values.</p><p id="p-0195" num="0194">It should be understood that the standard metric value or the standard metric list may be configured on the server <b>10</b>.</p><p id="p-0196" num="0195">For example, the standard metric value is a. If the metric value of the first terminal device is also a, it indicates that the first terminal device is authorized. Alternatively, if the standard metric list includes a, b, c, and d, the server <b>10</b> may determine that the first terminal device is authorized.</p><p id="p-0197" num="0196">Certainly, when the standard metric value is a range value, if the metric value of the first terminal device falls within the range of the standard metric value, it indicates that the first terminal device is authorized. If the metric value of the first terminal device is beyond the range of the standard metric value, it indicates that the first terminal device is unauthorized.</p><p id="p-0198" num="0197">If the metric value of the first terminal device is different from a standard metric value or the metric value of the first terminal device does not exist in a standard metric list, the server determines that the first terminal device is unauthorized.</p><p id="p-0199" num="0198">With reference to the foregoing list, if the metric value of the first terminal device is e and does not exist in the standard metric list, it indicates that the first terminal device is unauthorized.</p><p id="p-0200" num="0199">In this embodiment of this application, that the first terminal device is unauthorized means that the first terminal device fails to be verified by the server <b>10</b>. In other words, the first terminal device does not complete registration and authentication on the server <b>10</b> side, or the first terminal device does not have permission to request the encryption key corresponding to the first service.</p><p id="p-0201" num="0200">It may be understood that even if the server <b>10</b> determines, based on the metric value of the first terminal device, that the first terminal device is authorized, only when the first terminal device meets a condition for enabling the first service, the first terminal device can obtain, from the server <b>10</b>, the encryption key corresponding to the first service. In other words, for an authorized terminal device successfully verified by the server <b>10</b>, if the authorized terminal device does not meet the condition for enabling the first service, the server <b>10</b> may also refuse obtaining of the encryption key corresponding to the first service by the first terminal device from the server <b>10</b>. Certainly, for an unauthorized terminal device that fails to be verified by the server <b>10</b>, the server <b>10</b> may refuse to allocate the encryption key corresponding to the first service to the unauthorized terminal device.</p><p id="p-0202" num="0201">It should be noted that an action of determining, based on the metric value, whether the first terminal device is authorized may be performed by the server <b>10</b>, or may be performed by an action other than the server <b>10</b>. When the action other than the server <b>10</b> determines whether the first terminal device is authorized, the server <b>10</b> may send the metric value of the first terminal device to the apparatus, and then the apparatus feeds back, to the server <b>10</b>, a response indicating whether the first terminal device is authorized.</p><p id="p-0203" num="0202">In this embodiment of this application, the metric value of the first terminal device may be carried in the first request message. Certainly, the metric value of the first terminal device may alternatively be independently sent to the server <b>10</b>. This is not limited in this embodiment of this application.</p><p id="p-0204" num="0203">It may be understood that when the first terminal device sends the metric value of the first terminal device to the server <b>10</b>, the method provided in this embodiment of this application may further include: The first terminal device performs trusted measurement, to obtain the metric value of the first terminal device.</p><p id="p-0205" num="0204">In this embodiment of this application, the first terminal device may actively perform the trusted measurement to obtain the metric value of the first terminal device, and send the metric value of the first terminal device to the server <b>10</b>. In addition, the first terminal device may also provide the metric value of the first terminal device for the server <b>10</b> after receiving a trusted environment authentication requirement from the server <b>10</b>, for example, before the first terminal device sends the first request message (for example, after the first terminal device establishes a secure connection to the server <b>10</b>). For another example, after receiving the first request message from the first terminal device, the server <b>10</b> sends the trusted environment authentication requirement to the first terminal device. This is not limited in this embodiment of this application. Certainly, an occasion on which the first terminal device sends the trusted measurement may alternatively be negotiated between the first terminal device and the server <b>10</b> or predefined in a protocol (for example, the first terminal device performs the trusted measurement after or before sending the first request message to the server <b>10</b>). When the occasion on which the first terminal device performs the trusted measurement is negotiated between the first terminal device and the server <b>10</b> or predefined in the protocol, the step in which the server <b>10</b> sends the trusted environment authentication requirement to the first terminal device may be omitted.</p><p id="p-0206" num="0205">Example 2: The first request message may further include the location information of the first terminal device. Correspondingly, the encryption key is determined based on the identifier of the first service and the location information of the first terminal device. In this case, a same service corresponds to different encryption keys in different areas.</p><p id="p-0207" num="0206">For example, the server <b>10</b> determines the encryption key based on the identifier of the first service and the location information of the first terminal device.</p><p id="p-0208" num="0207">For example, in this embodiment of this application, the server <b>10</b> may determine the encryption key based on the identifier of the first service and the location information of the first terminal device in the following manners.</p><p id="p-0209" num="0208">In an implementation, the server <b>10</b> sends the identifier of the first service and the location information of the first terminal device to another apparatus (for example, a key management apparatus), to request the key management apparatus to generate the encryption key based on the identifier of the first service and the location information of the first terminal device. Then, the key management apparatus sends the encryption key corresponding to the first service to the server <b>10</b>.</p><p id="p-0210" num="0209">In another implementation, the server <b>10</b> generates the encryption key based on the identifier of the first service and the location information of the first terminal device.</p><p id="p-0211" num="0210">For example, the encryption key satisfies: kb=KDF (identifier of the first service, location tag).</p><p id="p-0212" num="0211">Specifically, the server <b>10</b> queries, based on the location information of the first terminal device, a location tag corresponding to the first terminal device. Then, the server <b>10</b> generates, based on the identifier of the first service, the location tag, and the KDF, the encryption key corresponding to the first service. It should be noted that the location information of the first terminal is introduced to determine the encryption key corresponding to the first service, so that the encryption key corresponding to the first service can be used within a range indicated by the location tag corresponding to the location information of the first terminal. In this case, the first service may correspond to different encryption keys in different areas.</p><p id="p-0213" num="0212">It should be noted that in this embodiment of this application, the first terminal device has a global positioning system (GPS) or a global navigation satellite system (GNSS), so that the first terminal device can report the location information of the first terminal device. The location information of the first terminal device is used to determine a location of the first terminal device. For example, the location information of the first terminal device may be coordinates in a WGS 84 or coordinates in a GCJ-02. WGS 84, World Geodetic System 1984, is a coordinate system established for use by the global positioning system GPS, namely, a global positioning system (coordinates output from the GNSS).</p><p id="p-0214" num="0213">In a possible implementation, step <b>502</b> in this embodiment of this application may be implemented in the following manner: When the server <b>10</b> determines, based on the identifier of the first terminal device, that the first terminal device meets the condition for enabling the first service, the server <b>10</b> determines, based on the identifier of the first service, the encryption key corresponding to the first service.</p><p id="p-0215" num="0214">In an example, that the server <b>10</b> determines, based on the identifier of the first terminal device, whether the first terminal device meets the condition for enabling the first service is implemented as follows: The server <b>10</b> may query a vehicle type, a version, and a main function of the first terminal device based on the identifier of the first terminal device, and determine, based on whether the function supports an autonomous driving application scenario, whether the first terminal device meets the condition for enabling the first service. For example, if the first terminal device supports the autonomous driving application scenario, the first terminal device meets the condition for enabling the first service.</p><p id="p-0216" num="0215">For example, in this embodiment of this application, the server <b>10</b> may determine, based on the identifier of the first service in Manner 1 or Manner 2, the encryption key corresponding to the first service.</p><p id="p-0217" num="0216">Manner 1: The server <b>10</b> generates, based on a key derivation function (KDF) and the identifier of the first service, the encryption key corresponding to the first service.</p><p id="p-0218" num="0217">For example, the server <b>10</b> generates a nonce (nonce) based on the KDF. The server <b>10</b> generates the encryption key based on the nonce and the identifier of the first service. For example, Encryption key=KDF (APP_ID, nonce). Herein, APP_ID represents the identifier of the first service.</p><p id="p-0219" num="0218">For example, the server <b>10</b> generates the encryption key corresponding to the first service, and establishes a correspondence between the first service and the encryption key corresponding to the first service. For example, the correspondence may exist in a form of a table. A key mapping relationship table refers to a database including one or more records, and each record includes one tuple: (APP_ID, V_ID, kb). Herein, APP_ID represents the identifier of the first service, V_ID represents the identifier of the first terminal device, and kb represents the encryption key.</p><p id="p-0220" num="0219">Manner 2: The server <b>10</b> determines, based on the identifier of the first service and a key mapping relationship table, the encryption key corresponding to the first service.</p><p id="p-0221" num="0220">It may be understood that when the first terminal device requests the encryption key corresponding to the first service, if the server <b>10</b> has the encryption key corresponding to the first service (for example, the server <b>10</b> stores a mapping relationship between the identifier of the first service and the encryption key), the server <b>10</b> may determine, in Manner 2, the encryption key corresponding to the first service. When the first terminal device requests the encryption key corresponding to the first service, if the server <b>10</b> does not have the encryption key corresponding to the first service, the server <b>10</b> may determine, in Manner 3, the encryption key corresponding to the first service.</p><p id="p-0222" num="0221">It should be noted that in this embodiment of this application, the encryption key corresponding to the first service may be generated by the server <b>10</b>, or may be generated by the key management apparatus and then configured on the server <b>10</b>. This is not limited in this embodiment of this application. For example, the server <b>10</b> sends the identifier of the first service to the key management apparatus, to request the key management apparatus to generate the encryption key corresponding to the first service. Then, the server <b>10</b> obtains, from the key management apparatus, the encryption key corresponding to the first service.</p><p id="p-0223" num="0222">It should be noted that if the first terminal device does not meet the condition for enabling the first service, the server <b>10</b> sends a reject request message to the first terminal device. Optionally, the reject request message may further carry a reason why the first terminal device is incapable of enabling the first service.</p><p id="p-0224" num="0223">It should be noted that step <b>501</b> to step <b>503</b> may be applied to different scenarios. For example, step <b>501</b> to step <b>503</b> may be performed after the first terminal device requests the server <b>10</b> to generate the encryption key corresponding to the first service (this corresponds to Scenario 2). Alternatively, step <b>501</b> to step <b>503</b> represent a process in which the first terminal device requests the server <b>10</b> to generate the encryption key corresponding to the first service (this corresponds to Scenario 1). Based on this, descriptions are separately provided below.</p><p id="p-0225" num="0224">Scenario 1:</p><p id="p-0226" num="0225"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows an embodiment according to an embodiment of this application. Step <b>601</b> to step <b>603</b> in this embodiment are the same as step <b>501</b> to step <b>503</b>. In this embodiment, after step <b>603</b>, the method may further include the following steps.</p><p id="p-0227" num="0226">Step <b>604</b>: The first terminal device stores the encryption key in the first terminal device.</p><p id="p-0228" num="0227">To ensure storage security of the encryption key, the first terminal device may store the encryption key in a component (for example, secure storage hardware) that is configured to store the encryption key and that is in the first terminal. The secure storage hardware provides an access control mechanism to ensure that the encryption key cannot be accessed without authorization.</p><p id="p-0229" num="0228">Step <b>605</b>: The first terminal device updates a status of the first service to a first state, where the first state indicates that the first service has the corresponding encryption key.</p><p id="p-0230" num="0229">In this embodiment of this application, the status of the first service may be the first state or a second state, and the second state indicates that the first service does not have the corresponding encryption key.</p><p id="p-0231" num="0230">Updating a status of a service is updating a status flag by changing a flag bit of the status of the service. For example, if the first state is &#x201c;1&#x201d;, it indicates that the first service is available, the first terminal device enables the first service, or the first service has the corresponding encryption key. If the second state may be &#x201c;0&#x201d;, it indicates that the first service is unavailable, the first terminal device enables the first service, or the first service does not have the corresponding encryption key.</p><p id="p-0232" num="0231">In a possible implementation, when the first terminal device needs to send first information, as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, after step <b>605</b>, the method provided in this embodiment of this application may further include the following steps.</p><p id="p-0233" num="0232">Step <b>606</b>: When the status of the first service is the first state, the first terminal device obtains, based on the identifier of the first service, the encryption key from the component that stores the encryption key and that is in the first terminal device.</p><p id="p-0234" num="0233">For example, if the first terminal device obtains an authorization code corresponding to the encryption key, step <b>606</b> in this embodiment of this application may be implemented in the following manner: When the status of the first service is the first state, the first terminal device generates a first authorization code. When the first authorization code is the same as the authorization code corresponding to the encryption key, the first terminal device obtains, based on the identifier of the first service, the encryption key from the module that stores the encryption key and that is in the first terminal device.</p><p id="p-0235" num="0234">For example, the first terminal device may generate the first authorization code in the following manner: For example, the first terminal device generates the first authorization code based on the identifier of the first terminal device and a KDF. For another example, the first terminal device generates the first authorization code based on the identifier of the first terminal device, a metric value of the first terminal device, and a KDF. For still another example, the first terminal device generates the first authorization code based on a metric value of the first terminal device and a KDF.</p><p id="p-0236" num="0235">It may be understood that the server <b>10</b> and the first terminal device side have a same KDF.</p><p id="p-0237" num="0236">The authorization code is generated based on the identifier of the first terminal device; and identifiers of terminal devices are different, that is, a password for accessing the encryption key is configured for each terminal device. Therefore, security of accessing the encryption key by the first terminal device may be improved. In addition, there is no need to implement trusted measurement, so that implementation difficulty is reduced.</p><p id="p-0238" num="0237">Step <b>607</b>: The first terminal device sends a first message, where the first message includes the identifier of the first service and first information encrypted by using the encryption key.</p><p id="p-0239" num="0238">For example, step <b>607</b> in this embodiment of this application may be implemented in the following manner: The first terminal device broadcasts the first message. In this way, one or more other terminal devices (for example, a second terminal device) within a preset distance range (for example, 1 kilometer, 500 meters, or 1.5 kilometers) of the first terminal device can receive the first message.</p><p id="p-0240" num="0239">For example, the second terminal device may be the another terminal <b>30</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, or may be a chip or another component that is disposed in the another terminal <b>30</b> and that can implement a function of the terminal <b>20</b>.</p><p id="p-0241" num="0240">For example, the first information may be location information of the first terminal device. For example, the location information of the first terminal device may be coordinate data of the first terminal device. The first information may further include information about a vehicle speed, turning, lane change, parking, left turning, right turning, or the like of the first terminal device. This is not limited in this embodiment of this application.</p><p id="p-0242" num="0241">Before step <b>607</b>, the method provided in this embodiment of this application may further include: The first terminal device encrypts the first information by using the encryption key. For example, the first information may be encrypted by using a standard symmetric encryption algorithm. It is recommended that a symmetric algorithm approved by the state cryptography administration such as an SM4 algorithm or an international standard symmetric algorithm such as an AES algorithm be actually used.</p><p id="p-0243" num="0242">The first message in this embodiment of this application may be a message for communication between any two vehicles. For example, the first message may be a basic safety message (BSM).</p><p id="p-0244" num="0243">Step <b>608</b>: The second terminal device obtains, from the server <b>10</b> based on the identifier of the first service, the encryption key corresponding to the first service.</p><p id="p-0245" num="0244">For an implementation of step <b>608</b>, refer to a process in which the first terminal device obtains, from the server <b>10</b>, the encryption key corresponding to the first service. Specifically, the first terminal device that performs the process in which the first terminal device requests, from the server <b>10</b>, the encryption key corresponding to the first service is replaced with the second terminal device. Details are not described below.</p><p id="p-0246" num="0245">In a possible implementation, if the encryption key corresponds to the authorization code, the first terminal device may further send the authorization code corresponding to the encryption key to the second terminal device. In this case, in addition to an identifier of the second terminal device and the identifier of the first service, a key request message sent by the second terminal device to the server <b>10</b> may carry the authorization code corresponding to the encryption key.</p><p id="p-0247" num="0246">In a possible implementation, if the encryption key is determined based on the identifier of the first service and the location information of the first terminal device, the first terminal device may further send a location tag corresponding to the first terminal device to the second terminal device. In this case, in addition to an identifier of the second terminal device and the identifier of the first service, a key request message sent by the second terminal device to the server <b>10</b> may carry the location tag corresponding to the first terminal device. Alternatively, in addition to an identifier of the second terminal device and the identifier of the first service, a key request message sent by the second terminal device to the server <b>10</b> may carry location information of the second terminal device. In this way, when the location information of the second terminal device indicates that the second terminal device is located within a range indicated by the location tag, the second terminal device can obtain a correct encryption key from the server <b>10</b>.</p><p id="p-0248" num="0247">Step <b>609</b>: The second terminal device processes the encrypted first information based on the encryption key, to obtain the first information.</p><p id="p-0249" num="0248">For example, the second terminal device decrypts the encrypted first information based on the encryption key, to obtain the first information.</p><p id="p-0250" num="0249">Scenario 2:</p><p id="p-0251" num="0250"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> show an embodiment according to an embodiment of this application. Step <b>707</b> to step <b>709</b> in this embodiment are the same as step <b>501</b> to step <b>503</b>. In this embodiment, before step <b>707</b>, the method may further include step <b>701</b> to step <b>706</b>.</p><p id="p-0252" num="0251">Step <b>701</b>: A first terminal device sends a second request message to a server <b>10</b>, and correspondingly, the server <b>10</b> receives the second request message from the first terminal device.</p><p id="p-0253" num="0252">The second request message is used to request the server <b>10</b> to generate an encryption key corresponding to a first service, and the second request message includes an identifier of the first service and an identifier of the first terminal device.</p><p id="p-0254" num="0253">For example, the second request message includes indication information b, and the indication information b is used to request the server to generate the encryption key corresponding to the first service.</p><p id="p-0255" num="0254">Step <b>702</b>: The server <b>10</b> determines, based on the identifier of the first terminal device, that the first terminal device meets a condition for enabling the first service.</p><p id="p-0256" num="0255">Step <b>703</b>: The server <b>10</b> generates, based on the identifier of the first service, the encryption key corresponding to the first service.</p><p id="p-0257" num="0256">Step <b>704</b>: The server <b>10</b> sends a second response message to the first terminal device, and correspondingly, the first terminal device receives the second response message from the server <b>10</b>, where the second response message is used to indicate that the first service has the corresponding encryption key.</p><p id="p-0258" num="0257">Step <b>705</b>: The first terminal device updates a status of the first service to a first state based on the second response message, where the first state indicates that the first service has the corresponding encryption key.</p><p id="p-0259" num="0258">Step <b>706</b>: The first terminal device determines that the status of the first service is the first state.</p><p id="p-0260" num="0259">In a possible embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>, after step <b>709</b>, the method provided in this embodiment of this application may further include step <b>710</b> to step <b>712</b>. Step <b>710</b> to step <b>712</b>: Same as step <b>607</b> to step <b>609</b>. Details are not described herein again.</p><p id="p-0261" num="0260">The encryption key may be periodically updated, to improve security of the encryption key corresponding to the first service. Based on this, as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, an embodiment of this application provides a key update method. The method includes the following steps.</p><p id="p-0262" num="0261">Step <b>801</b>: A server <b>10</b> determines, according to a key update policy, a key update seed corresponding to a first service, where the key update seed is used to update the encryption key.</p><p id="p-0263" num="0262">The key update policy is specifically defined based on a service, and a key update frequency may be defined based on a quantity of registered services, a registration manner of a service, and a security requirement of the service. For example, a key update period corresponding to a service a is shorter than a key update period corresponding to a service b. A security requirement of the service a is higher than a security requirement of the service b.</p><p id="p-0264" num="0263">The key update seed may be a nonce seed, and is used for KDF input to generate a new encryption key.</p><p id="p-0265" num="0264">Step <b>802</b>: The server <b>10</b> sends the key update seed corresponding to the first service to a first terminal device, and correspondingly, the first terminal device receives, from the server <b>10</b>, the key update seed corresponding to the first service.</p><p id="p-0266" num="0265">In a possible implementation, in this embodiment of this application, the server <b>10</b> may actively send the key update seed and version number information that correspond to the first service to the first terminal device.</p><p id="p-0267" num="0266">In a possible implementation, in this embodiment of this application, the server <b>10</b> may alternatively perform step <b>802</b> at the request of the first terminal device. Based on this, before step <b>802</b>, the method provided in this embodiment of this application may further include: The first terminal device sends a key update request to the server <b>10</b>. Correspondingly, the server <b>10</b> receives the key update request from the first terminal device, where the key update request is used to indicate that the first terminal device requests to update an encryption key corresponding to the first service. For example, the key update request carries an identifier of the first service. Optionally, the key update request may further carry indication information x, and the indication information x is used to indicate that the first terminal device requests to update the encryption key corresponding to the first service.</p><p id="p-0268" num="0267">In this embodiment of this application, before the first terminal device sends the key update request to the server <b>10</b>, the method may further include: The first terminal device determines to update the encryption key corresponding to the first service.</p><p id="p-0269" num="0268">In an example, the first terminal device may determine, in the following manner, to update the encryption key corresponding to the first service: The first terminal device determines, based on a key update period corresponding to the first service, to update the encryption key corresponding to the first service.</p><p id="p-0270" num="0269">In another example, the first terminal device may determine, in the following manner, to update the encryption key corresponding to the first service: The first terminal device receives a key update notification request from the server <b>10</b>, where the key update notification request is used to indicate to update the encryption key corresponding to the first service. The first terminal device determines, based on the key update notification request, to update the encryption key corresponding to the first service.</p><p id="p-0271" num="0270">For example, the server <b>10</b> may send the key update notification request to one or more terminal devices (including the first terminal device) based on a key update period corresponding to the encryption key. Alternatively, the server <b>10</b> may independently determine a period for sending the key update notification request to one or more terminal devices (including the first terminal device).</p><p id="p-0272" num="0271">Step <b>803</b>: The first terminal device obtains an updated encryption key based on the key update seed and the encryption key.</p><p id="p-0273" num="0272">For example, the updated encryption key is determined based on the key update seed, the encryption key, and a KDF. For example, the updated encryption key is determined by the first terminal device. In this case, the first terminal device may determine the updated encryption key according to a formula: Updated kb=KDF (seed, kb_oldversion). Herein, kb_oldversion represents the encryption key before the update.</p><p id="p-0274" num="0273">In a possible embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the method provided in this embodiment of this application may further include the following steps.</p><p id="p-0275" num="0274">Step <b>804</b>: The server <b>10</b> sends the version number information corresponding to the first service to the first terminal device, and correspondingly, the first terminal device receives, from the server <b>10</b>, the version number information corresponding to the first service, where the version number information is used to determine a version number of the updated encryption key.</p><p id="p-0276" num="0275">The version number information may be understood as a number or a version number corresponding to the encryption key, and a version number of each updated encryption key is obtained by adding n (n is an integer greater than or equal to 1) to a version number of each encryption key before the update. For example, if the version number of the encryption key before the update is v1, the version number of the updated encryption key may be v2.</p><p id="p-0277" num="0276">Step <b>805</b>: The first terminal device determines the version number of the updated encryption key based on the version number information corresponding to the first service.</p><p id="p-0278" num="0277">In a possible implementation, when the server <b>10</b> sends, based on a request of the first terminal device, the key update seed corresponding to the first service to the first terminal device, the method provided in this embodiment of this application may further include: The first terminal device sends a metric value of the first terminal device to the server <b>10</b>. Correspondingly, step <b>802</b> in this embodiment of this application may be implemented in the following manner: If the server <b>10</b> determines, based on the metric value, that the first terminal device is authorized, the server <b>10</b> determines, based on the first service, the key update seed corresponding to the first service, and then the server <b>10</b> sends the key update seed corresponding to the first service to the first terminal device.</p><p id="p-0279" num="0278">It should be noted that in this embodiment of this application, the embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> may be used in combination with any one of the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>. For example, step <b>801</b> to step <b>805</b> are performed after step <b>503</b>. Certainly, when the first terminal device has the encryption key corresponding to the first service, step <b>801</b> to step <b>805</b> may alternatively be performed independently.</p><p id="p-0280" num="0279">It should be noted that an example in which the first terminal device updates the encryption key based on the key update seed corresponding to the first service is used in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. Certainly, the server <b>10</b> may alternatively update, based on the key update seed corresponding to the first service, the encryption key that corresponds to the first service and that is stored on the server side <b>10</b>, to ensure that the encryption key that corresponds to the first service and that is on the first terminal device side is the same as the encryption key that corresponds to the first service and that is on the server side <b>10</b>. In addition, if both the first terminal device and the server <b>10</b> update the encryption key corresponding to the first service, the server <b>10</b> may further send the updated encryption key to the first terminal device. A priority of the updated encryption key that corresponds to the first service and that is received by the first terminal device from the server <b>10</b> is higher than a priority of the encryption key that corresponds to the first service and that is on the first terminal device side. Alternatively, a priority of the updated encryption key that corresponds to the first service and that is received by the first terminal device from the server <b>10</b> is higher than a priority of the encryption key that corresponds to the first service and that is updated by the first terminal device.</p><p id="p-0281" num="0280"><figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> show a specific procedure of a secure communications method according to an embodiment of this application by using an example in which a first terminal device is a vehicle 1, a second terminal device is a vehicle 2, a server is a V2V application server, a first service is a service 1, and first information is coordinate data of the vehicle 1. The secure communications method includes a registration phase and an application phase. The registration phase includes step <b>901</b> to step <b>908</b>. The application phase includes step <b>909</b> to step <b>913</b>. The method includes the following steps.</p><p id="p-0282" num="0281">Step <b>901</b>: The vehicle 1 initiates a service registration request message to the V2V application server, and correspondingly, the V2V application server receives the service registration request message from the vehicle 1.</p><p id="p-0283" num="0282">The service registration request message may include identity information of the vehicle 1. For example, the identity information of the vehicle 1 includes one or more pieces of the following information corresponding to the vehicle 1: a vehicle identifier, identity information of a user, or information such a registration code that needs to be provided for registration. The service registration request message is used to request to register the identity information of the vehicle 1 with the V2V application server. The registration code may be a unique identifier built in the vehicle 1.</p><p id="p-0284" num="0283">Step <b>902</b>: After verifying the identity information of the vehicle 1, the V2V application server returns a registration success message to the vehicle 1, and correspondingly, the vehicle 1 receives the registration success message from the V2V application server.</p><p id="p-0285" num="0284">The registration success message indicates that the identity information of the vehicle 1 has been successfully registered with the V2V application server.</p><p id="p-0286" num="0285">Step <b>903</b>: The V2V application server requests to establish a secure connection (for example, a TLS connection or an SSL connection) to the vehicle 1.</p><p id="p-0287" num="0286">For example, step <b>903</b> may be implemented in the following manner: The V2V application server sends a connection establishment request to the vehicle 1, to request to establish the secure connection to the vehicle 1.</p><p id="p-0288" num="0287">It may be understood that step <b>903</b> may alternatively be implemented in the following manner: The vehicle 1 requests to establish a secure connection to the V2V application server, and after the V2V application server agrees to establish the secure connection, the V2V application server sends, to the vehicle 1, a response indicating that the V2V application server agrees to establish the secure connection.</p><p id="p-0289" num="0288">Step <b>904</b>: The vehicle 1 and the V2V application server perform two-way authentication by using TLS/SSL, and establish the secure connection.</p><p id="p-0290" num="0289">The two-way authentication between the V2V application server and the vehicle 1 may be performed in a certificate manner or in a password manner. In the password manner, the vehicle 1 provides the registration code in step <b>901</b> for the V2V application server.</p><p id="p-0291" num="0290">In an example, if the secure connection is established in the certificate manner, the vehicle 1 and the V2V application server establish the secure connection by using a standard TLS security protocol.</p><p id="p-0292" num="0291">In another example, if the secure connection is established in the password manner, the vehicle 1 and the V2V application server negotiate a session key based on a password, and may negotiate, based on a PSK key or a DH key, a session key used for secure communication.</p><p id="p-0293" num="0292">Step <b>905</b>: The vehicle 1 sends a service key application message to the V2V application server, and correspondingly, the V2V application server receives the service key application message from the vehicle 1, where the service key application message includes APP_ID and a device ID.</p><p id="p-0294" num="0293">Herein, APP_ID may uniquely identify the service 1, and the device ID may be an identifier that uniquely identifies the vehicle 1 or an identifier of a vehicle-mounted terminal device located on the vehicle 1. If APP_ID uniquely identifies the vehicle, the device ID may be a vehicle identifier V_ID.</p><p id="p-0295" num="0294">Step <b>906</b>: The V2V application server determines whether the vehicle 1 meets a condition for enabling the service 1.</p><p id="p-0296" num="0295">That the V2V application server determines whether the vehicle 1 meets the condition for enabling the service 1 identified by APP_ID is implemented as follows: The V2V application server may query a vehicle type, a version, and a main function of the vehicle 1 based on the identifier of the vehicle 1, and determine, based on whether the function supports an autonomous driving application scenario, whether the vehicle meets the enabling condition.</p><p id="p-0297" num="0296">Step <b>907</b>: If the vehicle 1 meets the condition for enabling the service 1, the V2V application server generates, based on APP JD, an encryption key kb corresponding to the service 1.</p><p id="p-0298" num="0297">In addition, after the V2V application server generates the encryption key kb, the V2V application server may store the encryption key kb, and establish a key mapping relationship table. The key mapping relationship table refers to a database including one or more records, and each record includes one tuple: (APP_ID, V_ID, kb).</p><p id="p-0299" num="0298">The V2V application server may generate the encryption key kb by using a key derivation function (KDF). For example, the V2V application server selects or pre-configures the KDF, generates a nonce (nonce), and calculates kb, where kb=KDF (APP_ID, nonce).</p><p id="p-0300" num="0299">It should be understood that if the vehicle 1 does not meet the condition for enabling the service 1, the V2V application server sends a reject request message to the vehicle 1. Optionally, the reject request message may further carry a reason why the vehicle 1 does not meet the condition for enabling the service 1.</p><p id="p-0301" num="0300">Step <b>908</b>: The V2V application server sends the encryption key kb to the vehicle 1, and correspondingly, the vehicle 1 receives the encryption key kb.</p><p id="p-0302" num="0301">For example, the V2V application server sends a service key response message to the vehicle 1, where the service key response message includes the encryption key kb, or the service key response message includes APP_ID and the encryption key kb.</p><p id="p-0303" num="0302">Specifically, step <b>908</b> in this embodiment of this application may be implemented in the following manner: The V2V application server transmits the encryption key kb after encrypting the encryption key kb by using the session key that is previously negotiated between the V2V application server and the vehicle 1, or transmits the encryption key kb to the vehicle 1 through the secure connection established between the V2V application server and the vehicle 1.</p><p id="p-0304" num="0303">Step <b>909</b>: The vehicle 1 stores the encryption key kb, and updates a status of the service 1 to a first state.</p><p id="p-0305" num="0304">To ensure storage security of the encryption key kb, the vehicle 1 may store the encryption key kb in secure storage hardware of the vehicle 1.</p><p id="p-0306" num="0305">In a possible embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>, after step <b>909</b>, the method provided in this embodiment of this application may further include the application phase. The application phase corresponds to step <b>910</b> to step <b>916</b>.</p><p id="p-0307" num="0306">Step <b>910</b>: The vehicle 1 first determines, based on APP_ID, whether the status of the service 1 is the first state.</p><p id="p-0308" num="0307">It may be understood that the vehicle 1 performs step <b>910</b> before the vehicle 1 determines to encrypt data by using the encryption key corresponding to the service 1.</p><p id="p-0309" num="0308">Step <b>911</b>: If the status of the service 1 is the first state, the vehicle 1 accesses the secure storage hardware to obtain the encryption key kb, and the secure storage hardware provides an access control mechanism to ensure that the encryption key cannot be accessed without authorization.</p><p id="p-0310" num="0309">It should be noted that if the vehicle 1 determines, in the application phase, that the status of the service 1 is not the first state (for example, a second state), the vehicle 1 performs step <b>901</b> to step <b>908</b> to obtain the encryption key.</p><p id="p-0311" num="0310">Step <b>912</b>: The vehicle 1 encrypts the coordinate data of the vehicle 1 by using the encryption key kb.</p><p id="p-0312" num="0311">For example, the coordinate data of the vehicle 1 may be encrypted by using a standard symmetric encryption algorithm. For example, the vehicle 1 may encrypt the coordinate data of the vehicle 1 by using the encryption key and a symmetric algorithm approved by the state cryptography administration such as an SM4 algorithm or an international standard symmetric algorithm such as an AES algorithm.</p><p id="p-0313" num="0312">Step <b>913</b>: The vehicle 1 broadcasts a V2V message, where the V2V message includes APP_ID and encrypted coordinate data of the vehicle 1, and correspondingly, another vehicle (for example, the vehicle 2) receives the V2V message.</p><p id="p-0314" num="0313">Step <b>914</b>: The vehicle 2 obtains APP_ID in the V2V message, and determines, based on APP_ID, whether the vehicle 2 registers the service 1.</p><p id="p-0315" num="0314">Step <b>915</b>: If the vehicle 2 registers the service 1, the vehicle 2 obtains the encryption key kb from the V2V application server.</p><p id="p-0316" num="0315">A process in which the vehicle 2 obtains the encryption key kb from the V2V application server in step <b>915</b> may be implemented in the following manner: The vehicle 2 sends a third request message to the V2V application server, where the third request message includes an identifier of the service 1 and an identifier of the vehicle 2, and the third request message is used to request the encryption key corresponding to the first service. If the V2V application server determines, based on the identifier of the vehicle 2, that the vehicle 2 meets a condition for enabling the service 1, the V2V application server obtains, from the key mapping relationship table based on the identifier of the service 1, the encryption key kb corresponding to the service 1, and the V2V application server sends the encryption key kb to the vehicle 2.</p><p id="p-0317" num="0316">Step <b>916</b>: The vehicle 2 decrypts the encrypted coordinate data of the vehicle 1 by using the encryption key kb, to obtain the coordinate data of the vehicle 1.</p><p id="p-0318" num="0317">It should be noted that step <b>911</b> to step <b>916</b> may be omitted if the vehicle 1 encrypts, after the registration phase, data without using the encryption key corresponding to the service 1.</p><p id="p-0319" num="0318"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> show a specific procedure of another secure communications method according to an embodiment of this application. A difference between this method and the solution shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> lies in that an authorization code is introduced in this embodiment shown in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>. To be specific, in a registration phase, a process of generating the authorization code is added, and in an application phase, a vehicle 1 needs to provide a valid authorization code to obtain an encryption key kb. The specific procedure of this method is as follows:</p><p id="p-0320" num="0319">Step <b>1001</b> to step <b>1007</b>: Same as step <b>901</b> to step <b>907</b>. Details are not described herein again.</p><p id="p-0321" num="0320">Step <b>1008</b>: The V2V application server obtains, based on the identifier of the vehicle 1, an authorization code (Auth_code) corresponding to the encryption key.</p><p id="p-0322" num="0321">For example, the authorization code is determined based on the identifier of the vehicle 1.</p><p id="p-0323" num="0322">For an implementation of step <b>1008</b> in this embodiment of this application, refer to the descriptions of step <b>703</b>. Details are not described herein again.</p><p id="p-0324" num="0323">Step <b>1009</b>: The V2V application server sends the encryption key kb and the authorization code to the vehicle 1, and correspondingly, the vehicle 1 receives the encryption key kb and the authorization code.</p><p id="p-0325" num="0324">For example, the V2V application server sends a service key response message to the vehicle 1, where the service key response message includes the encryption key kb and the authorization code. Alternatively, the encryption key kb and the authorization code are separately sent to the vehicle 1 by using different messages.</p><p id="p-0326" num="0325">Step <b>1010</b>: The vehicle 1 stores the encryption key kb and the authorization code, and updates a status of the service 1 to a first state.</p><p id="p-0327" num="0326">It may be understood that the vehicle 1 stores a correspondence between the encryption key kb and the authorization code. Subsequently, if the vehicle 1 encrypts data by using the encryption key kb in the application phase, the vehicle 1 needs to provide an authorization code (Auth_code) corresponding to the encryption key kb to obtain the encryption key kb. If the authorization code provided by the vehicle 1 is different from the authorization code (Auth_code) corresponding to the encryption key, the vehicle 1 cannot access the encryption key.</p><p id="p-0328" num="0327">Step <b>1011</b>. Same as step <b>910</b>. Details are not described herein again.</p><p id="p-0329" num="0328">Step <b>1012</b>: If the status of the service 1 is the first state, the vehicle 1 obtains the encryption key kb by using the authorization code corresponding to the encryption key kb.</p><p id="p-0330" num="0329">Step <b>1013</b> to step <b>1017</b>: Same as step <b>912</b> to step <b>916</b>. Details are not described herein again.</p><p id="p-0331" num="0330">In the embodiment shown in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, because the authorization code is generated based on the identifier of the vehicle, and identifiers of vehicles are different, authorization codes generated based on the identifiers of the vehicles are also different, that is, a password for accessing the encryption key is configured for each vehicle. Therefore, security of accessing the encryption key by the vehicle 1 is improved. In addition, there is no need to implement trusted measurement, so that implementation difficulty is reduced.</p><p id="p-0332" num="0331"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> show a specific procedure of another secure communications method according to an embodiment of this application. A difference between this method and the solution shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> lies in that, to improve key access security, this embodiment shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> further includes a process in which a vehicle 1 performs trusted measurement. To be specific, in a registration phase, a V2V application server requests to perform the trusted measurement on a vehicle-mounted communications module or the vehicle 1. If a metric value obtained after the vehicle 1 is requested to perform the trusted measurement is the same as a standard metric value, or a metric value of the first terminal device exists in a standard metric list, the vehicle 1 can obtain, from the V2V application server, an encryption key through key registration application. The specific procedure is as follows:</p><p id="p-0333" num="0332">Step <b>1101</b> to step <b>1104</b>: Same as step <b>901</b> to step <b>904</b>. Details are not described herein again.</p><p id="p-0334" num="0333">Step <b>1105</b>: The V2V application server initiates a trusted environment verification request to the vehicle 1, where the trusted environment verification request is used to indicate the vehicle 1 to perform trusted measurement.</p><p id="p-0335" num="0334">It should be noted that step <b>1105</b> may be omitted if the vehicle 1 and the V2V application server negotiate in advance or a protocol predefines that the vehicle 1 needs to perform the trusted measurement before requesting the encryption key from the V2V application server, or the trusted measurement is independently initiated by the vehicle 1. For example, the trusted environment verification request in this embodiment of this application carries indication information c, used to indicate the vehicle 1 to perform the trusted measurement.</p><p id="p-0336" num="0335">Step <b>1106</b>: The vehicle 1 performs the trusted measurement, to generate a metric value.</p><p id="p-0337" num="0336">Step <b>1107</b>: The vehicle 1 sends a service key application message to the V2V application server, and correspondingly, the V2V application server receives the service key application message from the vehicle 1, where the service key application message includes APP_ID, V_ID, and the metric value.</p><p id="p-0338" num="0337">Step <b>1108</b>: The V2V application server verifies, based on the metric value, whether the vehicle 1 is authorized.</p><p id="p-0339" num="0338">For example, if the metric value of the first terminal device is the same as a standard metric value or the metric value exists in a standard metric list, the V2V application server determines that the vehicle 1 is authorized. If the metric value is different from a standard metric value or the metric value does not exist in a standard metric list, the V2V application server determines that the vehicle 1 is unauthorized.</p><p id="p-0340" num="0339">Optionally, if the vehicle 1 is authorized, the V2V application server further needs to determine whether the vehicle 1 meets a condition for enabling the service 1. When the vehicle 1 meets the condition for enabling the service 1, the V2V application server 1 performs step <b>1109</b>.</p><p id="p-0341" num="0340">Step <b>1109</b>: When determining, based on the metric value, that the vehicle 1 is authorized, the V2V application server generates, based on APP_ID, an encryption key kb corresponding to APP_ID.</p><p id="p-0342" num="0341">Step <b>1110</b> to step <b>1118</b>: Same as step <b>908</b> to step <b>916</b>. Details are not described herein again.</p><p id="p-0343" num="0342">In the solution described in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>, the vehicle 1 first performs the trusted measurement, to generate the metric value of the vehicle 1. In a phase in which the vehicle 1 requests the encryption key, the vehicle 1 provides the identifier of the vehicle 1, the metric value, and the identifier of the first service for the V2V application server. Then, the V2V application server generates the encryption key after verifying, based on the metric value, that the vehicle 1 is authorized and that the vehicle 1 meets the condition for enabling the service 1. This can improve security in a V2V key configuration phase and prevent a malicious program from obtaining the encryption key without authorization.</p><p id="p-0344" num="0343">Performing the trusted measurement by the vehicle 1 is performing integrity verification on a key component such as the service 1 (for example, an application program and a dependency library for running the application program) that accesses the encryption key. Remote verification is initiated by the V2V application server, and requires that the vehicle 1 performs the trusted measurement locally. A trusted measurement result is verified by using a whitelist mechanism (or a trusted value predefined by an application service provider), to ensure security and trustworthiness of programs such as an application program that accesses a key, a running environment, and an interface library, for example, no malicious code is injected or no other suspicious program is run. Therefore, after the remote verification succeeds, security of storing and using the key can be effectively prevented.</p><p id="p-0345" num="0344"><figref idref="DRAWINGS">FIG. <b>12</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>B</figref> show a specific procedure of another secure communications method according to an embodiment of this application. A difference between this method and the solution shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>11</b>B</figref> lies in that, in this embodiment shown in <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, a metric value and an authorization code are used in combination, and the metric value is introduced into a parameter generated based on the authorization code. The specific procedure of this method includes step <b>1201</b> to step <b>1221</b>.</p><p id="p-0346" num="0345">Step <b>1201</b> to step <b>1209</b>: Same as step <b>1101</b> to step <b>1109</b>. Details are not described herein again.</p><p id="p-0347" num="0346">Step <b>1210</b>: The V2V application server determines, based on the metric value and the identifier of the vehicle 1, an authorization code corresponding to the encryption key kb.</p><p id="p-0348" num="0347">For example, in an implementation of step <b>1210</b>, Auth_code=KDF (metric value, V_ID).</p><p id="p-0349" num="0348">Step <b>1210</b> in this embodiment of this application may be implemented in the following manner: A key management apparatus other than the V2V application server may generate the authorization code based on V_ID of the vehicle 1, the metric value, and a key derivation function. Then, the V2V application server requests the authorization code from the key management apparatus based on the identifier of the vehicle 1 and the metric value, to obtain the authorization code. Alternatively, the V2V application server generates the authorization code based on V_ID of the vehicle 1 and the metric value by using a key derivation function. Alternatively, a key management apparatus generates the authorization code based on V_ID of the vehicle 1, the metric value, and a key derivation function, and then configures a mutual mapping relationship between the authorization code, the identifier of the vehicle 1, and the metric value on the V2V application server; and subsequently, the V2V application server obtains the authorization code by querying the mutual mapping relationship based on the identifier of the vehicle 1 and the metric value that are used as indexes.</p><p id="p-0350" num="0349">Step <b>1211</b> to step <b>1213</b>: Same as step <b>1009</b> to step <b>1011</b>. Details are not described herein again.</p><p id="p-0351" num="0350">In a possible embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, after step <b>1213</b>, the method provided in this embodiment of this application may further include step <b>1214</b> to step <b>1221</b>.</p><p id="p-0352" num="0351">Step <b>1214</b>: If the status of the service 1 is the first state, the vehicle 1 performs trusted measurement, to generate the metric value.</p><p id="p-0353" num="0352">Step <b>1215</b>: The vehicle 1 generates a first authorization code based on the metric value and the identifier of the vehicle 1.</p><p id="p-0354" num="0353">Step <b>1216</b>: If the first authorization code is the same as the authorization code corresponding to the encryption key, the vehicle 1 obtains the encryption key kb based on the first authorization code.</p><p id="p-0355" num="0354">Step <b>1217</b> to step <b>1221</b>: Same as step <b>912</b> to step <b>916</b>. Details are not described herein again.</p><p id="p-0356" num="0355">In the embodiment shown in <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, because the authorization code is determined based on the identifier of the vehicle 1 and the metric value of the vehicle 1, that is, the authorization code is bound to the metric value, and metric values of vehicles are different, authorization codes of the vehicles are also different. In addition, the authorization code is related to a security status of the vehicle, and the encryption key can be accessed only when the vehicle is in a secure state. This improves key access security and prevents an unauthorized vehicle from obtaining the encryption key.</p><p id="p-0357" num="0356"><figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> show a specific procedure of another secure communications method according to an embodiment of this application. A difference between this method and the solution shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> lies in that, in this embodiment shown in <figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, location information of a vehicle 1 is introduced, and is used by a V2V application server to generate an encryption key kb. The specific procedure of this method includes step <b>1301</b> to step <b>1316</b>.</p><p id="p-0358" num="0357">Step <b>1301</b> to step <b>1304</b>: Same as step <b>901</b> to step <b>904</b>. Details are not described herein again.</p><p id="p-0359" num="0358">Step <b>1305</b>: The vehicle 1 sends a service key application message to the V2V application server, and correspondingly, the V2V application server receives the service key application message from the vehicle 1, where the service key application message includes APP_ID, a device ID, and location information of the vehicle 1.</p><p id="p-0360" num="0359">It may be understood that step <b>1306</b> is performed if the vehicle 1 determines, based on the identifier of the vehicle 1, that the vehicle 1 meets a condition for enabling the first service.</p><p id="p-0361" num="0360">Step <b>1306</b>: The V2V application server determines, based on the location information of the vehicle 1, a location tag (location tag) corresponding to the vehicle 1.</p><p id="p-0362" num="0361">Step <b>1307</b>: The V2V application server generates an encryption key kb based on the location tag and APP_ID.</p><p id="p-0363" num="0362">For example, when generating the encryption key kb, the V2V application server may query a related location tag (which may also be referred to as a location code or a region code) based on the location information of the vehicle 1, where one type of the location identifier is an ID temporarily allocated to a location. For example, a specific number may be allocated to the Pudong district in Shanghai, or a specific number may be temporarily allocated to the Chaoyang district in Beijing. The location tag is not fixedly specified, and is temporarily allocated and used only during a service validity period. In addition, location tags at a same location may be different for different service APP IDs.</p><p id="p-0364" num="0363">For example, step <b>1307</b> may be implemented in the following manner: The V2V application server generates the encryption key kb based on a KDF, APP_ID, and the location identifier. For example, kb=KDF (APP_ID, location_tag).</p><p id="p-0365" num="0364">Step <b>1308</b> to step <b>1316</b>: Same as step <b>908</b> to step <b>916</b>. Details are not described herein again.</p><p id="p-0366" num="0365">It should be understood that when the location information is introduced to generate the encryption key corresponding to the service 1, the service 1 corresponds to different encryption keys in different areas, and the V2V application server may record the encryption keys respectively corresponding to the service 1 in the different areas. To be specific, the encryption keys corresponding to the same service 1 in the different areas may be associated with one location tag. The location tag is used to indicate an area to which an encryption key associated with the location tag is applicable. When the vehicle 2 registers the service 1, the V2V application server also returns a corresponding encryption key based on geographical location information of the vehicle 2. Therefore, regardless of whether the vehicle 1 or the vehicle 2 is to obtain an encryption key, the vehicle 1 and the vehicle 2 need to carry respective location information, so that the V2V application server can return an encryption key in a corresponding area.</p><p id="p-0367" num="0366">In the solution described in <figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, security of the encryption key can be further improved by introducing the location information of the vehicle 1. Considering that all vehicles that register the same service 1 have the same encryption key, once an encryption key corresponding to the service 1 on a vehicle is leaked, another vehicle is also affected. Therefore, to limit a scope of encryption key leakage, selection of a specific V2V application scenario is added (for example, factors such as compliance requirements for autonomous driving vehicles to use an autonomous driving function in different areas and an enabling condition that is not met at some locations or in some areas need to be considered). In addition, a location identifier or an area identifier is introduced, so that not only a use range of the encryption key is limited, but also the V2V message can be valid in a specified area.</p><p id="p-0368" num="0367">1. A location limitation is added. This is applicable to a scenario in which a V2V application has a specific location requirement. For example, regulatory requirements of different cities impose some limitations in a test phase.</p><p id="p-0369" num="0368">2. Cross-border transmission of sensitive data through V2V can be limited to some extent, to meet a regulatory requirement.</p><p id="p-0370" num="0369">3. Key management security is improved, and impact caused by key leakage is limited.</p><p id="p-0371" num="0370">It should be noted that in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, the service key application message corresponds to the first request message, and the service key response message corresponds to the first response message in the foregoing embodiments.</p><p id="p-0372" num="0371">It should be noted that in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, the authorization code, the metric value, and the location information of the vehicle 1 may be used in combination. This is not limited in this embodiment of this application. For example, in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>12</b>B</figref> or <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>, if the vehicle 1 further provides the location information of the vehicle 1 for the V2V application server, step <b>1209</b> may be implemented in the following manner: When determining, based on the metric value, that the vehicle 1 is authorized, the V2V application server generates, based on APP_ID and the location tag, the encryption key kb corresponding to APP_ID. Step <b>907</b> may be implemented in the following manner: If the vehicle 1 meets the condition for enabling the service 1, the V2V application server generates, based on APP_ID and the location tag, the encryption key kb corresponding to the service 1.</p><p id="p-0373" num="0372">It may be understood that the V2V application server may store a mapping relationship between APP_ID, the location tag, and the encryption key kb. When sending the encryption key to the vehicle 1, the V2V application server may further send the location tag corresponding to the encryption key kb, so that the vehicle 1 determines that the encryption key kb can be adapted to a range corresponding to the location tag <b>1</b>. Then, to help the vehicle 2 successfully obtain the encryption key kb from the V2V application server, the V2V message not only carries the identifier of the service 1 and the encrypted coordinate data of the vehicle 1, but also may carry the location tag corresponding to the encryption key kb. In this way, the vehicle 2 can obtain the encryption key kb from the V2V application server based on the identifier of the service 1 and the location tag corresponding to the encryption key kb.</p><p id="p-0374" num="0373">For example, Table 1 shows encryption keys corresponding to a same service in different ranges, that is, a key mapping relationship table.</p><p id="p-0375" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Example of a key mapping relationship table</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="70pt" align="left"/><colspec colname="2" colwidth="63pt" align="left"/><colspec colname="3" colwidth="70pt" align="left"/><tbody valign="top"><row><entry/><entry>Service identifier</entry><entry>Location tag</entry><entry>Encryption key</entry></row><row><entry/><entry namest="offset" nameend="3" align="center" rowsep="1"/></row><row><entry/><entry>Service 1</entry><entry>location_tag 1</entry><entry>kb 1</entry></row><row><entry/><entry/><entry>location_tag 2</entry><entry>kb 2</entry></row><row><entry/><entry namest="offset" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0376" num="0374">As shown in Table 1, if the location information of the vehicle 1 corresponds to location_tag <b>1</b>, the encryption key that corresponds to the service 1 and that is fed back by the V2V application server to the vehicle 1 is kb 1. Similarly, the V2V application server may send kb 1 to the vehicle 2 based on the service 1 and location_tag <b>1</b> that are provided by the vehicle 2.</p><p id="p-0377" num="0375">It should be noted that in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, after obtaining, from the V2V application server, the encryption key corresponding to the first service, the vehicle 1 stores the encryption key corresponding to the first service in the vehicle 1. Then, in the application phase, even if a secure connection between the V2V application server and the vehicle 1 is interrupted, the vehicle 1 can still obtain the encryption key from the secure storage hardware, to encrypt the first information. This resolves a problem that the encryption key cannot be obtained through network connection in the application phase.</p><p id="p-0378" num="0376"><figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> show a specific implementation procedure of another secure communications method according to an embodiment of this application. A difference between this method and the embodiments shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>13</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> lies in that, in this embodiment shown in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, to reduce a security risk caused by locally storing an encryption key in a vehicle, a delayed key distribution manner is used (that is, in an application phase, a V2V application server sends the encryption key to a vehicle 1 based on a request of the vehicle 1). In addition, the encryption key is temporarily stored, the encryption key is obtained in a vehicle startup phase, and the encryption key is cleared when the vehicle is in a stalled state (an engine is shut down). Specific steps are as follows:</p><p id="p-0379" num="0377">Step <b>1401</b> to step <b>1407</b>: Same as step <b>901</b> to step <b>907</b>. Details are not described herein again.</p><p id="p-0380" num="0378">Step <b>1408</b>: The V2V application server sends a key application success response message to the vehicle 1, and correspondingly, the vehicle 1 receives the key application success response message.</p><p id="p-0381" num="0379">The key application success response message indicates that the vehicle 1 successfully enables the service 1, a service status of the service 1 is available, or the V2V application server has generated the encryption key corresponding to service 1. It may be understood that the key application success response message includes second indication information, and the second indication information is used to indicate that the vehicle 1 successfully enables the service 1, the service status of the service 1 is available, or the V2V application server has generated the encryption key corresponding to the service 1.</p><p id="p-0382" num="0380">Step <b>1409</b>: The vehicle 1 updates a status of the service 1 to a first state.</p><p id="p-0383" num="0381">In a possible embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, after step <b>1409</b>, the method provided in this embodiment of this application may further include the following steps.</p><p id="p-0384" num="0382">Step <b>1410</b>: During startup, the vehicle 1 determines whether the status of the service 1 is the first state.</p><p id="p-0385" num="0383">Step <b>1411</b>: If the service status of the vehicle 1 is the first state, the vehicle 1 and the V2V application server perform two-way authentication and establish a secure connection.</p><p id="p-0386" num="0384">It should be noted that if the secure connection between the vehicle 1 and the V2V application server is interrupted after step <b>1401</b> to step <b>1410</b>, the vehicle 1 and the V2V application server further need to perform two-way authentication and establish the secure connection. Step <b>1411</b> may be omitted if the secure connection between the vehicle 1 and the V2V application server is not interrupted when the vehicle 1 needs to encrypt the first information by using the encryption key after step <b>1401</b> to step <b>1410</b>.</p><p id="p-0387" num="0385">Step <b>1412</b>: The vehicle 1 sends a key distribution request to the V2V application server, and correspondingly, the V2V application server receives the key distribution request from the vehicle 1.</p><p id="p-0388" num="0386">The key distribution request is used to request the encryption key corresponding to the service 1. For example, the key distribution request includes APP_ID and V_ID.</p><p id="p-0389" num="0387">Step <b>1413</b>: The V2V application server determines the encryption key kb from a key mapping relationship table based on APP_ID and V_ID.</p><p id="p-0390" num="0388">For example, if the V2V application server determines, based on V_ID, that the vehicle 1 meets a condition for enabling the service 1, the V2V application server queries the key mapping relationship table based on APP_ID used as an index, and uses an encryption key associated with APP_ID in the key mapping relationship table as the encryption key corresponding to APP_ID.</p><p id="p-0391" num="0389">Step <b>1414</b>: The V2V application server sends a key distribution response to the vehicle 1, and correspondingly, the vehicle 1 receives the key distribution response from the V2V application server.</p><p id="p-0392" num="0390">The key distribution response includes the encryption key kb corresponding to APP_ID.</p><p id="p-0393" num="0391">Step <b>1415</b>: The vehicle 1 temporarily stores the encryption key kb, and encrypts coordinate data of the vehicle 1 by using the encryption key kb.</p><p id="p-0394" num="0392">Step <b>1416</b> to step <b>1419</b>: Same as step <b>913</b> to step <b>916</b>. Details are not described herein again.</p><p id="p-0395" num="0393">It should be noted that in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref>, when requesting the V2V application server to generate the encryption key corresponding to the service 1, the vehicle 1 may also provide location information of the terminal <b>1</b>, so that the V2V application server generates the encryption key based on the identifier of the vehicle 1 and a location tag. Subsequently, the V2V message may further include the location tag. When the encryption key is determined based on the location tag, the vehicle 2 also needs to provide the location tag when obtaining the encryption key from the V2V application server.</p><p id="p-0396" num="0394"><figref idref="DRAWINGS">FIG. <b>15</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>15</b>B</figref> are a schematic flowchart of another secure communications method according to an embodiment of this application. A difference between this method and the embodiment shown in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> lies in that, in this embodiment shown in <figref idref="DRAWINGS">FIG. <b>15</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>, a process of performing trusted measurement is added, to further improve security of locally using a key by a vehicle. To be specific, the trusted measurement is performed in a registration phase. After verification succeeds, a V2V application server generates and stores an encryption key, and returns a key application success response message to a vehicle 1, but does not return the encryption key. In an application phase, the V2V application server sends the encryption key kb to the vehicle 1 only after the trusted measurement succeeds. Specific steps are as follows:</p><p id="p-0397" num="0395">Step <b>1501</b> to step <b>1509</b>: Same as step <b>1101</b> to step <b>1109</b>. Details are not described herein again.</p><p id="p-0398" num="0396">Step <b>1510</b> and step <b>1511</b>: Same as step <b>1408</b> and step <b>1409</b>. Details are not described herein again.</p><p id="p-0399" num="0397">The key application success response message is used to indicate that the vehicle 1 has successfully applied for the encryption key kb corresponding to the service 1. For example, the key application success response message carries APP_ID. In a possible implementation, the key application success response message may further carry indication information or a field used to indicate that the vehicle 1 has successfully applied for the encryption key kb corresponding to the service 1.</p><p id="p-0400" num="0398">In a possible embodiment, as shown in <figref idref="DRAWINGS">FIG. <b>15</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>, after step <b>1511</b>, the method provided in this embodiment of this application may further include the following steps.</p><p id="p-0401" num="0399">Step <b>1512</b> to step <b>1514</b>: Same as step <b>1410</b> to step <b>1412</b>. Details are not described herein again.</p><p id="p-0402" num="0400">Step <b>1515</b>: The vehicle 1 performs the trusted measurement, to obtain the metric value.</p><p id="p-0403" num="0401">It may be understood that after step <b>1514</b>, the vehicle 1 may perform trusted environment verification based on a requirement of the V2V application server, and then the vehicle 1 performs step <b>1515</b>. Alternatively, the vehicle 1 independently determines that step <b>1515</b> needs to be performed. Alternatively, the V2V application server and the vehicle 1 negotiate in advance or a protocol predefines that in an application phase in a key distribution scenario, if the vehicle 1 needs to obtain the encryption key, the vehicle 1 needs to perform the trusted measurement. For the latter two cases, the metric value may be carried in the key distribution request in step <b>1514</b>.</p><p id="p-0404" num="0402">It may be understood that step <b>1515</b> may be performed before step <b>1514</b>. Certainly, the vehicle 1 may alternatively first send the metric value to the V2V application server, and then send the key distribution request. Alternatively, the vehicle 1 may send the metric value and the key distribution request in parallel.</p><p id="p-0405" num="0403">Step <b>1516</b>: The vehicle 1 sends the metric value to the V2V application server, and correspondingly, the V2V application server receives the metric value from the vehicle 1.</p><p id="p-0406" num="0404">Step <b>1517</b>: The V2V application server verifies, based on the metric value of the vehicle 1, whether the vehicle 1 is authorized.</p><p id="p-0407" num="0405">Step <b>1518</b>: When the vehicle 1 is authorized, the V2V application server queries, based on APP_ID, a key mapping relationship table for the encryption key kb corresponding to APP_ID.</p><p id="p-0408" num="0406">Step <b>1519</b> to step <b>1524</b>: Same as step <b>1414</b> to step <b>1419</b>. Details are not described herein again.</p><p id="p-0409" num="0407">It should be noted that in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> or <figref idref="DRAWINGS">FIG. <b>15</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>, the key distribution response corresponds to the first response message in the foregoing embodiments, the key distribution request corresponds to the first request message in the foregoing embodiments, the key application success response message corresponds to the second response message, and the service key application message corresponds to the second request message.</p><p id="p-0410" num="0408">In the embodiment shown in <figref idref="DRAWINGS">FIG. <b>14</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>14</b>B</figref> or <figref idref="DRAWINGS">FIG. <b>15</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>15</b>B</figref>, in the registration phase, the V2V application server may also send an authorization code corresponding to the encryption key to the vehicle 1. Then, in the application phase, the vehicle 1 obtains, from the V2V application server based on the identifier of the service 1 and the authorization code, the encryption key corresponding to the service 1.</p><p id="p-0411" num="0409"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows a specific embodiment of a key update method according to an embodiment of this application. The method includes the following steps.</p><p id="p-0412" num="0410">Step <b>1601</b>: A V2V application server generates, according to a key update policy based on APP_ID, a key update seed and version number information that correspond to APP_ID.</p><p id="p-0413" num="0411">Step <b>1602</b>: The V2V application server sends a key update notification request to one or more vehicles (including a vehicle 1), and correspondingly, the one or more vehicles receive the key update notification request from the V2V application server, where the key update notification request is used to indicate the vehicle to update an encryption key corresponding to a service 1.</p><p id="p-0414" num="0412">It may be understood that the one or more vehicles may be all or some of vehicles that have registered the service 1. Alternatively, the one or more vehicles may be vehicles that have registered the service 1 and that have requested the encryption key corresponding to the service 1.</p><p id="p-0415" num="0413">It should be noted that a vehicle that receives the key update notification request automatically initiates a secure connection during next startup. After vehicle And the V2V application server perform two-way authentication, the vehicle establishes the secure connection to the V2V application server, and performs an encryption key update process.</p><p id="p-0416" num="0414">For example, the V2V application server may send the key update notification request to the one or more vehicles (including the vehicle 1) based on a key update period corresponding to the encryption key. Alternatively, the V2V application server may independently determine a period for sending the key update notification request to the one or more vehicles (including the vehicle 1).</p><p id="p-0417" num="0415">Step <b>1603</b>: The vehicle 1 initiates a key update request to the V2V application server, where the key update request is used to request the V2V application server to update the encryption key corresponding to the service 1.</p><p id="p-0418" num="0416">Step <b>1604</b>: The vehicle 1 performs trusted measurement, to obtain a metric value.</p><p id="p-0419" num="0417">It may be understood that after step <b>1603</b>, the vehicle 1 may perform trusted environment verification based on a requirement of the V2V application server, and then the vehicle 1 performs step <b>1604</b>. Alternatively, the vehicle 1 independently determines that step <b>1604</b> needs to be performed. Alternatively, the V2V application server and the vehicle 1 negotiate in advance or a protocol predefines that in a key update scenario, if the vehicle 1 needs to update the encryption key, the vehicle 1 needs to perform the trusted measurement. For the latter two cases, the metric value may be carried in the key update request in step <b>1603</b>.</p><p id="p-0420" num="0418">Step <b>1605</b>: The vehicle 1 sends the metric value to the V2V application server, and correspondingly, the V2V application server receives the metric value from the vehicle 1.</p><p id="p-0421" num="0419">Step <b>1606</b>: The V2V application server verifies, based on the metric value, whether the vehicle 1 is authorized.</p><p id="p-0422" num="0420">Step <b>1607</b>: When the metric value is authorized, the V2V application server queries, based on APP_ID, the key update seed and the version number information that correspond to APP_ID.</p><p id="p-0423" num="0421">Step <b>1608</b>: The V2V application server sends the key update seed and the version number information that correspond to APP_ID to the vehicle 1, and correspondingly, the vehicle 1 receives, from the V2V application server, the key update seed and the version number information that correspond to APP_ID.</p><p id="p-0424" num="0422">Step <b>1609</b>: The vehicle 1 updates, based on the key update seed corresponding to APP_ID, the encryption key corresponding to APP_ID, to obtain an updated encryption key.</p><p id="p-0425" num="0423">Step <b>1610</b>: The vehicle 1 determines a version number of the updated encryption key based on the version number information.</p><p id="p-0426" num="0424">It should be noted that in a process in which the vehicle 1 updates the encryption key, the V2V application server may also update, based on the key update seed corresponding to APP_ID, the encryption key that corresponds to APP_ID and that is stored on the V2V application server side, to obtain an updated encryption key. In addition, the V2V application server may also determine a version number of the updated encryption key based on the version number information corresponding to APP_ID.</p><p id="p-0427" num="0425">In the embodiment shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref>, after the vehicle 1 obtains the updated encryption key, the method provided in this embodiment of this application may further include: The vehicle 1 sends an update success message to the V2V application server, where the update success message is used by the V2V application server to determine that the vehicle 1 has successfully updated the encryption key corresponding to the service 1.</p><p id="p-0428" num="0426">It should be noted that if a key update period corresponding to each service is configured on the vehicle 1, the vehicle 1 may actively send the key update request to the V2V application server when the key update period corresponding to the service 1 expires. In this case, step <b>1601</b> and step <b>1602</b> may be omitted. In <figref idref="DRAWINGS">FIG. <b>16</b></figref>, for example, the V2V application server notifies the vehicle 1 to update the encryption key. In addition, if the step of updating the encryption key is performed by the V2V application server, step <b>1607</b> to step <b>1610</b> may be replaced with: The V2V application server queries, based on APP_ID, the key update seed and the version number information that correspond to APP_ID. The V2V application server updates, based on the key update seed corresponding to APP_ID, the encryption key corresponding to APP_ID, to obtain an updated encryption key. The V2V application server determines a version number of the updated encryption key based on the version number information. The V2V application server sends the updated encryption key and the version number of the updated encryption key to the vehicle 1.</p><p id="p-0429" num="0427">It may be understood that the updated encryption key obtained after the V2V application server updates the encryption key based on the key update seed is the same as the updated encryption key obtained after the vehicle 1 updates the encryption key based on the key update seed. When both the V2V application server and the vehicle 1 update the encryption key based on the key update seed, if the V2V application server sends the updated encryption key to the vehicle 1, the vehicle 1 determines that a priority of the updated encryption key from the V2V application server is higher than a priority of the updated encryption key obtained by the vehicle 1 based on the key update seed.</p><p id="p-0430" num="0428">For example, the V2V application server or the vehicle may determine the updated encryption key based on the key update seed, the encryption key, and a KDF. For example, updated kb=KDF (seed, kb_oldversion). Herein, kb_oldversion represents the encryption key before the update.</p><p id="p-0431" num="0429">To ensure that vehicles using a same service update the encryption key in a timely manner, the V2V application server reserves a specific update period. A vehicle that has not started for a long time receives the key update notification request from the V2V application server after the vehicle starts, and then sends a key update request to the V2V application server, to update the encryption key to a latest version. Therefore, vehicles that start and go on the road and that have registered the service have a same encryption key.</p><p id="p-0432" num="0430">In the embodiments shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the vehicle 1 corresponds to the first terminal device, the V2V message corresponds to the first message, and the V2V application server corresponds to the server <b>10</b>. APP_ID corresponds to the identifier of the first service, and V_ID corresponds to the identifier of the first terminal device.</p><p id="p-0433" num="0431">The methods provided in the embodiments of this application may be applied to the internet of vehicles field, for example, V2X, V2X in LTE, and V2X or V2V in NR, or may be applied to fields such as D2D, intelligent connected vehicles, unmanned driving, autonomous driving, assisted driving, intelligent driving, connected driving, intelligent connected driving, car sharing, and artificial intelligence.</p><p id="p-0434" num="0432">The foregoing mainly describes the solutions in the embodiments of this application from a perspective of interaction between the network elements. It may be understood that to implement the foregoing functions, each network element such as the server or the first terminal device includes corresponding hardware structures and/or software modules for performing the functions. A person skilled in the art should be easily aware that units, algorithms, and steps in the examples described with reference to the embodiments disclosed in this specification can be implemented by hardware or a combination of hardware and computer software in this application. Whether a function is performed by hardware or hardware driven by computer software depends on particular applications and design constraints of the technical solutions. A person skilled in the art may use different methods to implement the described functions for each particular application, but it should not be considered that the implementation goes beyond the scope of this application.</p><p id="p-0435" num="0433">In the embodiments of this application, the server or the first terminal device may be divided into functional units based on the foregoing method examples. For example, each functional unit may be obtained through division based on each corresponding function, or two or more functions may be integrated into one processing unit. The integrated unit may be implemented in a form of hardware, or may be implemented in a form of a software functional unit. It should be noted that in the embodiments of this application, division into the units is an example and is merely logical function division, and may be other division in an actual implementation.</p><p id="p-0436" num="0434">The foregoing describes the methods in the embodiments of this application with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>16</b></figref>. The following describes communications apparatuses that are provided in the embodiments of this application and that perform the foregoing methods. A person skilled in the art may understand that the method and the apparatus may be mutually combined and referenced. The communications apparatus provided in the embodiments of this application may perform the steps performed by the server in the foregoing communications method or key update method. Alternatively, the communications apparatus may perform the steps performed by the first terminal device in the communications method or the key update method in the foregoing embodiment.</p><p id="p-0437" num="0435">An example in which each functional module is obtained through division based on each corresponding function is used below for description.</p><p id="p-0438" num="0436"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a schematic structural diagram of a communications apparatus according to an embodiment of this application. The communications apparatus may be a first terminal device or a server in this embodiment of this application, or may be a chip or a chip system applied to the server. The communications apparatus includes a processing unit <b>101</b> and a communications unit <b>102</b>. The communications unit <b>102</b> is configured to support the communications apparatus in performing the step of sending or receiving information. The processing unit <b>101</b> is configured to support the communications apparatus in performing the step of processing information.</p><p id="p-0439" num="0437">In an example, the communications apparatus is the server or the chip or the chip system applied to the server. The communications unit <b>102</b> is configured to support the communications apparatus in performing the receiving action performed by the server <b>10</b> in step <b>501</b> in the foregoing embodiment. The processing unit <b>101</b> is configured to support the communications apparatus in performing step <b>502</b> in the foregoing embodiment. The communications unit <b>102</b> is further configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>503</b> in the foregoing embodiment.</p><p id="p-0440" num="0438">In a possible embodiment, the communications unit <b>102</b> is further configured to support the communications apparatus in performing the receiving action performed by the server <b>10</b> in step <b>701</b> in the foregoing embodiment. The processing unit <b>101</b> is further configured to support the communications apparatus in performing step <b>702</b> and step <b>703</b> in the foregoing embodiment. The communications unit <b>102</b> is further configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>704</b> in the foregoing embodiment.</p><p id="p-0441" num="0439">In another example, the communications apparatus is the first terminal device. The communications unit <b>102</b> is configured to support the communications apparatus in performing the sending action performed by the first terminal device in step <b>501</b> in the foregoing embodiment. The communications unit <b>102</b> is configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>503</b> in the foregoing embodiment.</p><p id="p-0442" num="0440">In a possible embodiment, the communications unit <b>102</b> is further configured to support the communications apparatus in performing the sending actions performed by the first terminal device in step <b>607</b> and step <b>701</b> in the foregoing embodiments. The communications unit <b>102</b> is further configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>704</b> in the foregoing embodiment.</p><p id="p-0443" num="0441">The processing unit <b>101</b> is configured to support the communications apparatus in performing the processing actions performed by the first terminal device in step <b>604</b>, step <b>605</b>, step <b>606</b>, step <b>705</b>, and step <b>706</b> in the foregoing embodiments.</p><p id="p-0444" num="0442">In still another example, the communications apparatus is the server or the chip or the chip system applied to the server. The communications unit <b>102</b> is configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>802</b> in the foregoing embodiment. The processing unit <b>101</b> is configured to support the communications apparatus in performing step <b>801</b> in the foregoing embodiment.</p><p id="p-0445" num="0443">In a possible implementation, the communications unit <b>102</b> is further configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>804</b> in the foregoing embodiment.</p><p id="p-0446" num="0444">In still another example, the communications apparatus is the first terminal device. The communications unit <b>102</b> is configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>802</b> in the foregoing embodiment. The processing unit <b>101</b> is configured to support the communications apparatus in performing the processing action performed by the first terminal device in step <b>803</b> in the foregoing embodiment.</p><p id="p-0447" num="0445">In a possible embodiment, the communications unit <b>102</b> is further configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>804</b> in the foregoing embodiment. The processing unit <b>101</b> is further configured to support the communications apparatus in performing the processing action performed by the first terminal device in step <b>805</b> in the foregoing embodiment.</p><p id="p-0448" num="0446">In a possible embodiment, the communications apparatus may further include a storage unit <b>103</b>. The processing unit <b>101</b>, the communications unit <b>102</b>, and the storage unit <b>103</b> are connected through a communications bus.</p><p id="p-0449" num="0447">The storage unit <b>103</b> may include one or more memories. The memory may be a component configured to store a program or data in one or more devices or circuits.</p><p id="p-0450" num="0448">The storage unit <b>103</b> may exist independently, and is connected to the processing unit <b>101</b> of the communications apparatus through the communications bus. The storage unit <b>103</b> may alternatively be integrated into the processing unit.</p><p id="p-0451" num="0449">The communications apparatus may be used in a communications device, a circuit, a hardware component, or a chip.</p><p id="p-0452" num="0450">For example, the communications apparatus may be a chip or a chip system applied to the first terminal or a chip or a chip system applied to the server in the embodiments of this application. In this case, the communications unit <b>102</b> may be an input/output interface, a pin, a circuit, or the like. For example, the storage unit <b>103</b> may store computer execution instructions of the method on the first terminal side and the server side, so that the processing unit <b>101</b> performs the method on the first terminal device side or the server side in the foregoing embodiments. The storage unit <b>103</b> may be a register, a cache, a RAM, or the like. The storage unit <b>103</b> may be integrated into the processing unit <b>101</b>. The storage unit <b>103</b> may be a ROM or another type of static storage device that can store static information and instructions, and the storage unit <b>103</b> may be independent of the processing unit <b>101</b>.</p><p id="p-0453" num="0451">An embodiment of this application provides a communications apparatus. The communications apparatus includes one or more modules, configured to implement the method in step <b>501</b> to step <b>503</b>, step <b>701</b> to step <b>712</b>, step <b>601</b> to step <b>609</b>, or step <b>801</b> to step <b>805</b>; and the one or more modules may correspond to step <b>501</b> to step <b>503</b>, step <b>701</b> to step <b>712</b>, step <b>601</b> to step <b>609</b>, or step <b>801</b> to step <b>805</b>. Specifically, in this embodiment of this application, for each step in the method performed by a server, the server includes a unit or a module that performs each step in the method. For each step in the method performed by a first terminal device, the first terminal device includes a unit or a module that performs each step in the method. For example, a module that controls or processes an action of the communications apparatus may be referred to as a processing module. A module that performs a step of processing a message or data and that is on the communications apparatus side may be referred to as a communications module.</p><p id="p-0454" num="0452">For example, the communications unit <b>102</b> may include a sending unit and a receiving unit. The sending unit is configured to support the communications apparatus in performing a sending action. The receiving unit is configured to support the communications apparatus in performing a receiving action.</p><p id="p-0455" num="0453">It should be understood that, for example, the communications apparatus is a first terminal device. The communications unit <b>102</b> is further configured to perform the receiving or sending actions performed by the vehicle 1 in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>16</b></figref>. The processing unit <b>101</b> is further configured to perform the processing actions performed by the vehicle 1 in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>16</b></figref>.</p><p id="p-0456" num="0454">For example, the communications apparatus is a server. The communications unit <b>102</b> is further configured to perform the receiving or sending actions performed by the V2V application server in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>16</b></figref>. The processing unit <b>101</b> is further configured to perform the processing actions performed by the V2V application server in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>16</b></figref>.</p><p id="p-0457" num="0455">When an integrated unit is used, <figref idref="DRAWINGS">FIG. <b>18</b></figref> is a possible schematic logical structural diagram of a communications apparatus related to the foregoing embodiments. The communications apparatus may be the first terminal device in the foregoing embodiments. Alternatively, the communications apparatus may be the server in the foregoing embodiments. The communications apparatus includes a processing module <b>112</b> and a communications module <b>113</b>. The processing module <b>112</b> is configured to: control and manage an action of the communications apparatus. The communications module <b>113</b> is configured to perform the step of processing a message or data on the communications apparatus side.</p><p id="p-0458" num="0456">Optionally, the communications apparatus may further include a storage module <b>111</b>, configured to store program code and data that are of the communications apparatus.</p><p id="p-0459" num="0457">In an example, the communications apparatus is a server or a chip or a chip system applied to the server. The communications module <b>113</b> is configured to support the communications apparatus in performing the receiving action performed by the server <b>10</b> in step <b>501</b> in the foregoing embodiment. The processing module <b>112</b> is configured to support the communications apparatus in performing step <b>502</b> in the foregoing embodiment. The communications module <b>113</b> is further configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>503</b> in the foregoing embodiment.</p><p id="p-0460" num="0458">In a possible embodiment, the communications module <b>113</b> is further configured to support the communications apparatus in performing the receiving action performed by the server <b>10</b> in step <b>701</b> in the foregoing embodiment. The processing module <b>112</b> is further configured to support the communications apparatus in performing step <b>702</b> and step <b>703</b> in the foregoing embodiment. The communications module <b>113</b> is further configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>704</b> in the foregoing embodiment.</p><p id="p-0461" num="0459">In another example, the communications apparatus is a first terminal device. The communications module <b>113</b> is configured to support the communications apparatus in performing the sending action performed by the first terminal device in step <b>501</b> in the foregoing embodiment. The communications module <b>113</b> is configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>503</b> in the foregoing embodiment.</p><p id="p-0462" num="0460">In a possible embodiment, the communications module <b>113</b> is further configured to support the communications apparatus in performing the sending actions performed by the first terminal device in step <b>607</b> and step <b>701</b> in the foregoing embodiments. The communications module <b>113</b> is further configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>704</b> in the foregoing embodiment.</p><p id="p-0463" num="0461">The processing module <b>112</b> is configured to support the communications apparatus in performing the processing actions performed by the first terminal device in step <b>604</b>, step <b>605</b>, step <b>606</b>, step <b>705</b>, and step <b>706</b> in the foregoing embodiments.</p><p id="p-0464" num="0462">In another example, the communications apparatus is a server or a chip or a chip system applied to the server. The communications module <b>113</b> is configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>802</b> in the foregoing embodiment. The processing module <b>112</b> is configured to support the communications apparatus in performing step <b>801</b> in the foregoing embodiment.</p><p id="p-0465" num="0463">In a possible implementation, the communications module <b>113</b> is further configured to support the communications apparatus in performing the sending action performed by the server <b>10</b> in step <b>804</b> in the foregoing embodiment.</p><p id="p-0466" num="0464">In another example, the communications apparatus is a first terminal device. The communications module <b>113</b> is configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>802</b> in the foregoing embodiment. The processing module <b>112</b> is configured to support the communications apparatus in performing the processing action performed by the first terminal device in step <b>803</b> in the foregoing embodiment.</p><p id="p-0467" num="0465">In a possible embodiment, the communications module <b>113</b> is further configured to support the communications apparatus in performing the receiving action performed by the first terminal device in step <b>804</b> in the foregoing embodiment. The processing module <b>112</b> is further configured to support the communications apparatus in performing the processing action performed by the first terminal device in step <b>805</b> in the foregoing embodiment.</p><p id="p-0468" num="0466">The processing module <b>112</b> may be a processor or a controller, for example, may be a central processing unit, a general-purpose processor, a digital signal processor, an application-specific integrated circuit, a field-programmable gate array or another programmable logic device, a transistor logic device, a hardware component, or any combination thereof. The processing module <b>112</b> may implement or execute various examples of logical blocks, modules, and circuits described with reference to content disclosed in the present invention. Alternatively, the processor may be a combination of processors implementing a computing function, for example, a combination of one or more microprocessors, or a combination of a digital signal processor and a microprocessor. The communications module <b>113</b> may be a communications interface, a transceiver, a transceiver circuit, an interface circuit, or the like. The storage module <b>111</b> may be a memory.</p><p id="p-0469" num="0467">When the processing module <b>112</b> is the processor <b>41</b> or the processor <b>45</b>, the communications module <b>113</b> is the communications interface <b>43</b>, and the storage module <b>111</b> is the memory <b>42</b>, the communications apparatus in this application may be the communications device shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0470" num="0468"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a schematic structural diagram of a chip <b>150</b> according to an embodiment of the present invention. The chip <b>150</b> includes one or more (including two) processors <b>1510</b> and a communications interface <b>1530</b>.</p><p id="p-0471" num="0469">Optionally, the chip <b>150</b> further includes a memory <b>1540</b>. The memory <b>1540</b> may include a read-only memory and a random access memory, and provide operation instructions and data for the processor <b>1510</b>. A part of the memory <b>1540</b> may further include a non-volatile random access memory (NVRAM).</p><p id="p-0472" num="0470">In some implementations, the memory <b>1540</b> stores the following elements: an executable module or a data structure, a subset thereof, or an extension set thereof.</p><p id="p-0473" num="0471">In this embodiment of the present invention, a corresponding operation is performed by invoking the operation instructions stored in the memory <b>1540</b> (where the operation instructions may be stored in an operating system).</p><p id="p-0474" num="0472">In a possible implementation, a first terminal device and a server use a similar chip structure, and different apparatuses may use different chips to implement respective functions.</p><p id="p-0475" num="0473">The processor <b>1510</b> controls operations of the first terminal device and the server, and the processor <b>1510</b> may also be referred to as a central processing unit (CPU). The memory <b>1540</b> may include a read-only memory and a random access memory, and provide instructions and data for the processor <b>1510</b>. A part of the memory <b>1540</b> may further include a non-volatile random access memory (NVRAM). For example, during application, the memory <b>1540</b>, the communications interface <b>1530</b>, and the memory <b>1540</b> are coupled together through a bus system <b>1520</b>. The bus system <b>1520</b> may include a power bus, a control bus, a status signal bus, and the like in addition to a data bus. However, for clear description, various buses are marked as the bus system <b>1520</b> in <figref idref="DRAWINGS">FIG. <b>19</b></figref>.</p><p id="p-0476" num="0474">The foregoing communications unit may be an interface circuit or a communications interface of the apparatus, and is configured to receive a signal from another apparatus. For example, when the apparatus is implemented as a chip, the communications unit is an interface circuit or a communications interface that is on the chip and that is configured to receive a signal from another chip or apparatus or send a signal.</p><p id="p-0477" num="0475">The methods disclosed in the embodiments of the present invention may be applied to the processor <b>1510</b>, or may be implemented by the processor <b>1510</b>. The processor <b>1510</b> may be an integrated circuit chip and has a signal processing capability. In an implementation process, steps in the foregoing method may be implemented by using a hardware integrated logical circuit in the processor <b>1510</b>, or by using an instruction in a form of software. The processor <b>1510</b> may be a general-purpose processor, a digital signal processor (DSP), an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA) or another programmable logic device, a discrete gate or a transistor logic device, or a discrete hardware component. The processor <b>1510</b> may implement or perform the methods, steps, and logical block diagrams that are disclosed in the embodiments of the present invention. The general-purpose processor may be a microprocessor, or the processor may be any conventional processor or the like. The steps of the methods disclosed with reference to the embodiments of the present invention may be directly performed by a hardware decoding processor, or may be performed by using a combination of hardware and software modules in a decoding processor. The software module may be located in a mature storage medium in the art, such as a random access memory, a flash memory, a read-only memory, a programmable read-only memory, an electrically erasable programmable memory, or a register. The storage medium is located in the memory <b>1540</b>, and the processor <b>1510</b> reads information in the memory <b>1540</b> and completes the steps in the foregoing methods in combination with hardware of the processor <b>1510</b>.</p><p id="p-0478" num="0476">In a possible implementation, for example, the chip shown in <figref idref="DRAWINGS">FIG. <b>19</b></figref> is applied to the terminal. In this case, the communications interface <b>1530</b> is configured to perform the sending or receiving steps performed by the first terminal device in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>. The processor <b>1510</b> is configured to perform the processing steps performed by the first terminal device in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0479" num="0477">In a possible implementation, for example, the chip shown in <figref idref="DRAWINGS">FIG. <b>19</b></figref> is applied to the server. In this case, the communications interface <b>1530</b> is configured to perform the sending or receiving steps performed by the server in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>. The processor <b>1510</b> is configured to perform the processing steps performed by the server in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0480" num="0478">In the foregoing embodiments, the instructions that are stored in the memory and that are to be executed by the processor may be implemented in a form of a computer program product. The computer program product may be written into the memory in advance, or may be downloaded in a form of software and installed in the memory.</p><p id="p-0481" num="0479">The computer program product includes one or more computer instructions. When the computer program instructions are loaded and executed on a computer, the procedures or functions according to the embodiments of this application are all or partially generated. The computer may be a general-purpose computer, a dedicated computer, a computer network, or another programmable apparatus. The computer instructions may be stored in a computer readable storage medium or may be transmitted from a computer readable storage medium to another computer readable storage medium. For example, the computer instructions may be transmitted from a website, computer, server, or data center to another website, computer, server, or data center in a wired (for example, a coaxial cable, an optical fiber, or a digital subscriber line (DSL)) or wireless (for example, infrared, radio, or microwave) manner. The computer readable storage medium may be any usable medium accessible by a computer, or a data storage device, such as a server or a data center, integrating one or more usable media. The usable medium may be a magnetic medium (for example, a floppy disk, a hard disk, or a magnetic tape), an optical medium (for example, a DVD), a semiconductor medium (for example, a solid-state drive (SSD)), or the like.</p><p id="p-0482" num="0480">An embodiment of this application further provides a computer readable storage medium. The methods described in the foregoing embodiments may be all or partially implemented by using software, hardware, firmware, or any combination thereof. If the methods are implemented in software, the functions used as one or more instructions or code may be stored in the computer readable storage medium or transmitted on the computer readable storage medium. The computer readable storage medium may include a computer storage medium and a communications medium, and may further include any medium that can transfer a computer program from one place to another. The storage medium may be any target medium that can be accessed by a computer.</p><p id="p-0483" num="0481">In an optional design, the computer readable storage medium may include a RAM, a ROM, an EEPROM, a CD-ROM or another optical disc storage, a magnetic disk storage or another magnetic storage device, or any other medium that is used to carry or store required program code in a form of an instruction or a data structure and that may be accessed by the computer. In addition, any connection is appropriately referred to as a computer readable storage medium. For example, if a coaxial cable, an optical fiber cable, a twisted pair, a digital subscriber line (DSL), or wireless technologies (such as infrared, radio, and microwave) are used to transmit software from a website, a server, or another remote source, the coaxial cable, the optical fiber cable, the twisted pair, the DSL or the wireless technologies such as infrared, radio, and microwave are included in a definition of the medium. Magnetic disks and optical discs used in this specification include a compact disk (CD), a laser disk, an optical disc, a digital versatile disc (DVD), a floppy disk, and a Blu-ray disc. The magnetic disks usually magnetically reproduce data, and the optical discs optically reproduce data by using laser light. The foregoing combination should also be included within the scope of the computer readable storage medium.</p><p id="p-0484" num="0482">In an example, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the actions performed by the first terminal device in the embodiments corresponding to <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0485" num="0483">In an example, an embodiment of this application provides a computer readable storage medium. The computer readable storage medium stores a computer program or instructions. When the computer program or the instructions are run on a computer, the computer is enabled to perform the actions performed by the server in the embodiments corresponding to <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0486" num="0484">In an example, an embodiment of this application provides a communications system. The communications system includes a first terminal device and a server. The server is configured to perform the actions performed by the server in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>. The first terminal device is configured to perform the actions performed by the first terminal device in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>.</p><p id="p-0487" num="0485">In a possible implementation, the communications system may further include a second terminal device, configured to perform the actions performed by the second terminal device in the embodiments shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>.</p><p id="p-0488" num="0486">In an example, an embodiment of this application provides a communications system. The communications system includes a first terminal device and a server. The server is configured to perform the actions performed by the server in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. The first terminal device is configured to perform the actions performed by the first terminal device in the embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0489" num="0487">An embodiment of this application further provides a computer program product. The methods described in the foregoing embodiments may be all or partially implemented by using software, hardware, firmware, or any combination thereof. When the methods are implemented in software, the methods may be all or partially implemented in a form of the computer program product. The computer program product includes one or more computer instructions. When the computer program instructions are loaded and executed on a computer, the procedures or functions described in the foregoing method embodiments are all or partially generated. The computer may be a general-purpose computer, a dedicated computer, a computer network, a base station, a terminal, or another programmable apparatus.</p><p id="p-0490" num="0488">In an example, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the actions performed by the server in the embodiments corresponding to <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0491" num="0489">In an example, an embodiment of this application provides a computer program product including instructions. When the instructions are run on a computer, the computer is enabled to perform the actions performed by the first terminal device in the embodiments corresponding to <figref idref="DRAWINGS">FIG. <b>5</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0492" num="0490">The objectives, technical solutions, and beneficial effects of the present invention are further described in detail in the foregoing specific implementations. It should be understood that the foregoing descriptions are merely specific implementations of the present invention, but are not intended to limit the protection scope of the present invention. Any modification, equivalent replacement, or improvement made based on the technical solutions of the present invention shall fall within the protection scope of the present invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A communication method performed by a first terminal device in a vehicle-to-vehicle (V2V) network, comprising:<claim-text>sending a first request message to a server in the V2V network to request the server to allocate an encryption key corresponding to a first service, the first request message comprising an identifier of the first service and an identifier of the first terminal device;</claim-text><claim-text>receiving, by the first terminal device, a first response message from the server, wherein the first response message comprises the encryption key corresponding to the first service;</claim-text><claim-text>encrypting, using the encryption key, first information regarding the first terminal device, the first information including location information of the first terminal device; and</claim-text><claim-text>broadcasting a first broadcast message containing the encrypted first information to the V2V network.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first request message further comprises a metric value of the first terminal device, and the metric value is for verifying whether the first terminal device is authorized.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first request message further comprises location information of the first terminal device.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving, from the server, an authorization code corresponding to the encryption key, wherein the authorization code is for obtaining the encryption key.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>storing the encryption key in a module of the first terminal device; and</claim-text><claim-text>updating a status of the first service to a first state, he first state indicating that the first service has the corresponding encryption key.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:<claim-text>obtaining, based on the identifier of the first service indicating the status of the first service being the first state, the encryption key from the module of the first terminal device storing the encryption key.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the step of obtaining the encryption key based on the identifier of the first service comprises:<claim-text>generating a first authorization code based on the metric value and the identifier of the first terminal device; and</claim-text><claim-text>when the first authorization code is the same as the authorization code corresponding to the encryption key, obtaining, based on the identifier of the first service, the encryption key from the module of the first terminal device storing the encryption key.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein before the step of sending the first request message to a server, the method further comprises:<claim-text>sending a second request message to the server to request the server to allocate the encryption key corresponding to the first service, and the second request message comprises the identifier of the first service and the identifier of the first terminal device;</claim-text><claim-text>receiving, by the first terminal device, a second response message from the server, wherein the second response message indicates that the first service has the corresponding encryption key; and</claim-text><claim-text>updating, by the first terminal device, the status of the first service to the first state based on the second response message, the first state indicating that the first service has the corresponding encryption key.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the first broadcast message comprises the identifier of the first service and first information encrypted with the encryption key.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A method performed by a server in a vehicle-to-vehicle (V2V) network, comprising:<claim-text>receiving a first request message from a first terminal device in the V2V network, wherein the first request message requests the server to allocate an encryption key corresponding to a first service, and comprises an identifier of the first service and an identifier of the first terminal device;</claim-text><claim-text>determining, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service; and</claim-text><claim-text>sending a first response message to the first terminal device, the first response message comprising the encryption key corresponding to the first service.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the first request message further comprises a metric value of the first terminal device, and wherein the step of determining the encryption key corresponding to the first service comprises:<claim-text>determining, based on the metric value, that the first terminal device is authorized; and</claim-text><claim-text>determining, based on the identifier of the first service and the identifier of the first terminal device, the encryption key corresponding to the first service.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the first request message further comprises location information of the first terminal device, and the step of determining the encryption key determines the encryption key based on the identifier of the first service and the location information of the first terminal device.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>sending an authorization code corresponding to the encryption key to the first terminal device.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein before the step of receiving the first request message from the first terminal device, the method further comprises:<claim-text>receiving a second request message from the first terminal device, wherein the second request message requests the server to allocate the corresponding encryption key to the first service, and comprises the identifier of the first service and the identifier of the first terminal device; and</claim-text><claim-text>sending a second response message to the first terminal device, wherein the second response message indicates that the first service has the corresponding encryption key.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the step of sending the encryption key corresponding to the first service to the first terminal device comprises:<claim-text>receiving the metric value of the first terminal device from the first terminal device;</claim-text><claim-text>determining, based on the metric value of the first terminal device, that the first terminal device is authorized, and</claim-text><claim-text>sending the encryption key corresponding to the first service to the first terminal device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the step of determining the encryption key corresponding to the first service comprises:<claim-text>determining, based on the identifier of the first terminal device, that the first terminal device is capable of enabling the first service; and</claim-text><claim-text>determining, based on the identifier of the first service, the encryption key corresponding to the first service.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A terminal device comprising:<claim-text>a memory storing executable instructions;</claim-text><claim-text>a processor configured to execute the executable instructions to perform operations of:</claim-text><claim-text>sending a first request message to a server in a vehicle-to-vehicle (V2V) network to request the server to allocate an encryption key corresponding to a first service, the first request message comprising an identifier of the first service and an identifier of the first terminal device;</claim-text><claim-text>receiving a first response message from the server, the first response message comprising the encryption key corresponding to the first service;</claim-text><claim-text>encrypting, using the encryption key, first information regarding the terminal device in the V2V network; and</claim-text><claim-text>broadcasting a first message containing the encrypted first information to the V2V network.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The terminal device according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the first request message further comprises a metric value of the first terminal device for verifying whether the first terminal device is authorized.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The terminal device according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the first request message further comprises location information of the first terminal device.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The terminal device according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processor is further configured to perform an operation of:<claim-text>receiving from the server an authorization code corresponding to the encryption key, wherein the authorization code is for obtaining the encryption key.</claim-text></claim-text></claim></claims></us-patent-application>