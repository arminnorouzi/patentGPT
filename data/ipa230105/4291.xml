<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004292A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004292</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17738259</doc-number><date>20220506</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>202110745926.3</doc-number><date>20210701</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0604</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>067</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0655</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD, DEVICE, AND PROGRAM PRODUCT FOR MANAGING STORAGE SYSTEM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>EMC IP Holding Company LLC</orgname><address><city>Hopkinton</city><state>MA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Hu</last-name><first-name>Jun</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Xu</last-name><first-name>Jinqing</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A technique manages a storage system. In particular, multiple cable lists associated with multiple nodes included in the storage system are acquired, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node. A distance between a first node in the multiple nodes and a second node in the multiple nodes is determined based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists. A network structure of the storage system is determined based on the distance between the first node and the second node. Accordingly, the distances between the nodes can be determined in a simple and effective manner, and thus the network structure of the storage system can be determined.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="112.18mm" wi="158.75mm" file="US20230004292A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="133.43mm" wi="164.42mm" file="US20230004292A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="221.83mm" wi="164.76mm" file="US20230004292A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="157.82mm" wi="118.19mm" file="US20230004292A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="113.20mm" wi="167.39mm" file="US20230004292A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="93.64mm" wi="165.44mm" file="US20230004292A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="223.60mm" wi="160.02mm" file="US20230004292A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="125.39mm" wi="140.46mm" file="US20230004292A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims priority to Chinese Patent Application No. CN202110745926.3, on file at the China National Intellectual Property Administration (CNIPA), having a filing date of Jul. 1, 2021, and having &#x201c;METHOD, DEVICE, AND PROGRAM PRODUCT FOR MANAGING STORAGE SYSTEM&#x201d; as a title, the contents and teachings of which are herein incorporated by reference in their entirety.</p><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Implementations of the present disclosure relate to storage systems and, more specifically, to a method, a device, and a computer program product for managing the network structure of a storage system.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">With the development of storage technologies and networking technologies, a current storage system can involve a large number of devices that can be connected via a network and distributed in one or more data centers. New storage devices can be added to the storage system during its operation, and failed storage devices can be removed from the storage system. In addition, the connection relationships between the devices may change. Therefore, for a large storage system including a large number of devices, how to manage the network structure of the storage system more effectively has become a hot topic of research.</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0005" num="0004">Therefore, it is desired to develop and implement a technical solution for managing a storage system in a more effective manner. It is expected that this technical solution can be compatible with existing storage systems and can manage the network structure of a storage system in a more convenient and effective manner.</p><p id="p-0006" num="0005">According to a first aspect of the present disclosure, a method for managing a storage system is provided. In this method, multiple cable lists associated with multiple nodes included in the storage system are acquired, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node. A distance between a first node in the multiple nodes and a second node in the multiple nodes is determined based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists. A network structure of the storage system is determined based on the distance between the first node and the second node.</p><p id="p-0007" num="0006">According to a second aspect of the present disclosure, an electronic device is provided, including: at least one processor; a volatile memory; and a memory coupled to the at least one processor, wherein the memory has instructions stored therein which, when executed by the at least one processor, cause the device to perform the method according to the first aspect of the present disclosure.</p><p id="p-0008" num="0007">According to a third aspect of the present disclosure, a computer program product is provided. The computer program product is tangibly stored on a non-transitory computer-readable medium and includes machine-executable instructions used for performing the method according to the first aspect of the present disclosure.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008">In combination with the accompanying drawings and with reference to the following detailed description, the features, advantages, and other aspects of implementations of the present disclosure will become more apparent, and several implementations of the present disclosure are illustrated here by way of examples rather than limitation. In the accompanying drawings,</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically illustrates a block diagram of an application environment in which example implementations of the present disclosure may be implemented;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically illustrates a block diagram of a storage system according to an example implementation of the present disclosure;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically illustrates a flow chart of a method for managing a storage system according to an example implementation of the present disclosure;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically illustrates a block diagram for acquiring a cable list according to an example implementation of the present disclosure;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically illustrates a block diagram for determining a distance between nodes based on a comparison between cable lists according to an example implementation of the present disclosure;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically illustrates a block diagram of paths in a storage system according to an example implementation of the present disclosure; and</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically illustrates a block diagram of a device for managing a storage system according to an example implementation of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">The individual features of the various embodiments, examples, and implementations disclosed within this document can be combined in any desired manner that makes technological sense. Furthermore, the individual features are hereby combined in this manner to form all possible combinations, permutations and variants except to the extent that such combinations, permutations and/or variants have been explicitly excluded or are impractical. Support for such combinations, permutations and variants is considered to exist within this document.</p><p id="p-0018" num="0017">It should be understood that the specialized circuitry that performs one or more of the various operations disclosed herein may be formed by one or more processors operating in accordance with specialized instructions persistently stored in memory. Such components may be arranged in a variety of ways such as tightly coupled with each other (e.g., where the components electronically communicate over a computer bus), distributed among different locations (e.g., where the components electronically communicate over a computer network), combinations thereof, and so on.</p><p id="p-0019" num="0018">Preferred implementations of the present disclosure will be described in more detail below with reference to the accompanying drawings. Although preferred implementations of the present disclosure are illustrated in the accompanying drawings, it should be understood that the present disclosure may be implemented in various forms and should not be limited by the implementations illustrated herein. Instead, these implementations are provided in order to make the present disclosure more thorough and complete, and to fully convey the scope of the present disclosure to those skilled in the art.</p><p id="p-0020" num="0019">The term &#x201c;include&#x201d; and variants thereof used herein indicate open-ended inclusion, that is, &#x201c;including but not limited to.&#x201d; Unless specifically stated, the term &#x201c;or&#x201d; means &#x201c;and/or.&#x201d; The term &#x201c;based on&#x201d; means &#x201c;based at least in part on.&#x201d; The terms &#x201c;one example implementation&#x201d; and &#x201c;one implementation&#x201d; mean &#x201c;at least one example implementation.&#x201d; The term &#x201c;another implementation&#x201d; means &#x201c;at least one additional implementation.&#x201d; The terms &#x201c;first,&#x201d; &#x201c;second,&#x201d; and the like may refer to different or identical objects. Other explicit and implicit definitions may also be included below.</p><p id="p-0021" num="0020">For ease of description, an application environment according to an example implementation of the present disclosure is first described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. <figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically illustrates a block diagram of application environment <b>100</b> in which example implementations of the present disclosure may be implemented. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, application environment <b>100</b> may include multiple types of nodes, such as storage control node <b>110</b> and storage device node <b>120</b>. Each node may include one or more portions. For example, storage control node <b>110</b> may include control node <b>110</b>A and control node <b>110</b>B, and two control nodes <b>110</b>A and <b>110</b>B can serve data access requests from user devices external to the storage system in parallel. For example, control node <b>110</b>A can serve user device <b>130</b>, and control node <b>110</b>B can serve user device <b>132</b>. Although <figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates only user devices <b>130</b> and <b>132</b>, more user devices can be connected to control nodes <b>110</b>A and <b>110</b>B, respectively.</p><p id="p-0022" num="0021">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, control node <b>110</b>A may include ports <b>112</b> and <b>114</b>, and control node <b>110</b>B may include ports <b>116</b> and <b>118</b>. Similarly, storage device node <b>120</b> may include storage node <b>120</b>A (including ports <b>122</b> and <b>124</b>) and storage node <b>120</b>B (including ports <b>126</b> and <b>128</b>). Storage control node <b>110</b> and storage device node <b>120</b> can be connected to each other via these ports. For example, port <b>122</b> can be connected to port <b>112</b>, and port <b>126</b> can be connected to port <b>116</b>.</p><p id="p-0023" num="0022">It will be understood that since storage control node <b>110</b> is limited in respect of the number of ports and can only be connected to a limited number of storage device nodes, multiple storage device nodes can be connected in a serial manner such that storage control node <b>110</b> can access more storage space. At this point, a complex network structure can exist among multiple nodes (e.g., including one storage control node and multiple storage device nodes) in the storage system.</p><p id="p-0024" num="0023">At present, a technical solution for determining the network structure of various nodes based on the media access control (MAC) address of each port has been proposed. Specifically, at the initial stage of startup of a storage system, the MAC address of each port can be acquired, and probe messages can be sent between the nodes to determine the network structure. However, this technical solution is tightly coupled with port addresses of physical devices of the nodes, and the probe messages will result in additional network loads. Thus, it is expected to provide a technical solution to determine the network structure of a storage system in a more effective manner. Further, it is expected that this technical solution can be compatible with existing storage systems and thus improve the performance of the storage systems.</p><p id="p-0025" num="0024">In order to at least partially eliminate the shortcomings in the technical solution described above, a method for managing a storage system is provided according to an example implementation of the present disclosure. An overview of an example implementation according to the present disclosure is first described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. <figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically illustrates a block diagram of storage system <b>200</b> according to an example implementation of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, multiple storage device nodes <b>120</b>, <b>210</b>, <b>220</b>, <b>230</b> are connected in series with each other and connected to storage control node <b>110</b>. Specifically, storage device node <b>210</b> may include storage node <b>210</b>A (including ports <b>212</b> and <b>214</b>) and storage node <b>210</b>B (including ports <b>216</b> and <b>218</b>), storage device node <b>220</b> may include storage node <b>220</b>A (including ports <b>222</b> and <b>224</b>) and storage node <b>220</b>B (including ports <b>226</b> and <b>228</b>), and storage device node <b>230</b> may include storage node <b>230</b>A (including ports <b>232</b> and <b>234</b>) and storage node <b>230</b>B (including ports <b>236</b> and <b>238</b>).</p><p id="p-0026" num="0025">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the nodes are connected via cables. Ports <b>122</b> and <b>112</b> are connected via cable A, ports <b>126</b> and <b>116</b> are connected via cable B, ports <b>212</b> and <b>124</b> are connected via cable C, ports <b>216</b> and <b>128</b> are connected via cable D, ports <b>222</b> and <b>214</b> are connected via cable E, ports <b>226</b> and <b>218</b> are connected via cable F, ports <b>232</b> and <b>224</b> are connected via cable G, ports <b>236</b> and <b>228</b> are connected via cable H, ports <b>238</b> and <b>114</b> are connected via cable I, and ports <b>234</b> and <b>118</b> are connected via cable J. It will be understood that although <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates only <b>4</b> storage device nodes, according to an example implementation of the present disclosure, storage system <b>200</b> may include more or fewer storage device nodes.</p><p id="p-0027" num="0026">According to an example implementation of the present disclosure, multiple ports of each node can be connected respectively to multiple ports of other nodes. A cable list can be determined for each node, and here, a cable list associated with one node may include an identifier of cable connected to each of the multiple ports of that node. Multiple cable lists associated with the multiple nodes included in the storage system can be acquired respectively. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the cable list for each node may include 4 cables. For example, the cable list for storage control node <b>110</b> may include cables A, B, I, and J, and the cable list for storage device node <b>120</b> may include cables A, B, C, and D.</p><p id="p-0028" num="0027">The above two cable lists can be compared to determine a distance between the two nodes. For example, both of the above cable lists include cables A and B, and thus it can be determined that storage control node <b>110</b> and storage device node <b>120</b> are directly connected (the distance being 1). Further, each pair of cable lists can be processed in order to determine distances between other nodes. Following this, the network structure of the storage system can be determined based on the determined distances.</p><p id="p-0029" num="0028">With the example implementation of the present disclosure, the network structure among the nodes in the storage system can be determined directly based on the identifiers of the cables connected to the storage system without acquiring the MAC address of each port and without sending additional messages. In this way, the network structure of the storage system can be determined in a simpler manner independent of the ports of the physical nodes.</p><p id="p-0030" num="0029">Hereinafter, more details of an example implementation according to the present disclosure are described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically illustrates a flow chart of method <b>300</b> for managing a storage system according to an example implementation of the present disclosure. At block <b>310</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, multiple cable lists associated with multiple nodes included in the storage system are acquired, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node. According to an example implementation of the present disclosure, the nodes can be processed one by one to determine the cable list associated with each node. Specifically, the cable list can be determined based on the manner as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically illustrates block diagram <b>400</b> for acquiring a cable list according to an example implementation of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, storage control node <b>110</b> includes 4 ports <b>112</b>, <b>116</b>, <b>114</b>, and <b>118</b>, and 4 cables A, B, I, and J are connected to the above ports, respectively. At this point, cable list <b>410</b> of storage node <b>110</b> can be determined. This cable list may include multiple fields. In a left-to-right order, the first field can represent the identifier of the node (e.g., storage control node <b>110</b>), and the subsequent 4 fields can each represent the identifier of a cable connected to each port of that node.</p><p id="p-0032" num="0031">It will be understood that cable list <b>410</b> is merely illustrative and that according to an example implementation of the present disclosure, the cable list can be stored in other data structures. For example, the cables in the cable list can be stored in a different order. It will be understood that, for storage control node <b>110</b>, the cables in the cable list can be arranged in other orders: cables A, I, B, J, or cables A, B, J, I, and so on. For another example, relevant cable lists for all of the nodes in storage system <b>200</b> can be stored in the manner of Table 1 below.</p><p id="p-0033" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Cable list</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="77pt" align="left"/><colspec colname="3" colwidth="112pt" align="center"/><tbody valign="top"><row><entry>Serial</entry><entry/><entry/></row><row><entry>number</entry><entry>Node ID</entry><entry>Cable list</entry></row><row><entry namest="1" nameend="3" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="6"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="77pt" align="left"/><colspec colname="3" colwidth="28pt" align="center"/><colspec colname="4" colwidth="28pt" align="center"/><colspec colname="5" colwidth="28pt" align="center"/><colspec colname="6" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>1</entry><entry>Storage control node 110</entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable I</entry><entry>Cable J</entry></row><row><entry>2</entry><entry>Storage device node 120</entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable C</entry><entry>Cable D</entry></row><row><entry>3</entry><entry>Storage device node 210</entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable C</entry><entry>Cable D</entry></row><row><entry>4</entry><entry>Storage device node 220</entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable G</entry><entry>Cable H</entry></row><row><entry>5</entry><entry>Storage device node 230</entry><entry>Cable I</entry><entry>Cable J</entry><entry>Cable G</entry><entry>Cable H</entry></row><row><entry namest="1" nameend="6" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0034" num="0032">In Table 1, the first column shows serial numbers, the second column shows identifiers of the nodes, and the subsequent columns show lists of cables connected to the ports of the nodes. Specifically, as shown in the second row of Table 1, storage device node <b>120</b> is connected to other nodes in storage system <b>200</b> via cables A, B, C, and D, respectively.</p><p id="p-0035" num="0033">According to an example implementation of the present disclosure, the cable list can be read from a Baseboard Management Controller (BMC) associated with one node. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, each control node may have an associated baseboard management controller (BMC <b>420</b> for control node <b>110</b>A and BMC <b>422</b> for control node <b>110</b>B). Identifiers of cables connected to the relevant control nodes can be read respectively from the above BMCs. For example, cable A and cable I can be read from BMC <b>420</b>, and cable B and cable J can be read from BMC <b>422</b>.</p><p id="p-0036" num="0034">With the example implementation of the present disclosure, it is not necessary to know the MAC address of each port, but rather the identifier of each cable can be read directly from the BMC. In this way, once the end of a certain cable is inserted into port <b>112</b>, BMC <b>420</b> can read the identifier of the cable from that end. Similarly, if the other end of the cable is inserted into another port in another node, the BMC used to control that another port can read the identifier of the cable from the other end. In this way, it is not necessary to know the MAC addresses of the ports, and thus relevant cable lists can be determined in a way that is independent of hardware ports of storage control node <b>110</b>.</p><p id="p-0037" num="0035">Return to <figref idref="DRAWINGS">FIG. <b>3</b></figref> to describe further processing for the cable list. At block <b>320</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a distance between a first node in the multiple nodes and a second node in the multiple nodes is determined based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists. In this step, each pair of cable lists in the multiple cable lists can be compared respectively. Specifically, the cable list in row 1 of Table 1 above can be compared with the cable lists in rows 2, 3, 4, and 5, respectively. For another example, the cable list in row 2 in Table 1 above can be compared with the cable lists in rows 3, 4, 5, respectively, and so on.</p><p id="p-0038" num="0036">According to an example implementation of the present disclosure, the distance between two nodes can be determined based on whether there is an intersection between the two cable lists. Specifically, if it is determined that there is an intersection between the first cable list and the second cable list, the distance between the first node and the second node is determined to be 1. Hereinafter, using storage control node <b>110</b> and storage device node <b>120</b> as examples of nodes, a description of how to determine the distance between the two will be provided. <figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically illustrates block diagram <b>500</b> for determining a distance between nodes based on a comparison between cable lists according to an example implementation of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, cable list <b>410</b> of storage control node <b>110</b> includes cables A, B, I, and J, and cable list <b>510</b> of storage device node <b>120</b> includes cables A, B, C, and D. At this point, there is intersection <b>520</b> between the two lists, and thus the distance between storage control node <b>110</b> and storage device node <b>120</b> can be set to 1. For example, the distance between storage control node <b>110</b> and each of the other nodes can be recorded in the table shown in Table 2 below.</p><p id="p-0039" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Distance List</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="112pt" align="left"/><colspec colname="4" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>Serial</entry><entry/><entry/><entry/></row><row><entry>number</entry><entry>Node ID</entry><entry>Cable list</entry><entry>Distance</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="28pt" align="left"/><colspec colname="6" colwidth="28pt" align="left"/><colspec colname="7" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>1</entry><entry>Storage control </entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable I</entry><entry>Cable J</entry><entry>0</entry></row><row><entry/><entry>node 110</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>2</entry><entry>Storage device </entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable C</entry><entry>Cable D</entry><entry>1</entry></row><row><entry/><entry>node 120</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>3</entry><entry>Storage device </entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable C</entry><entry>Cable D</entry><entry/></row><row><entry/><entry>node 210</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>4</entry><entry>Storage device </entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable G</entry><entry>Cable H</entry><entry/></row><row><entry/><entry>node 220</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>5</entry><entry>Storage device </entry><entry>Cable I</entry><entry>Cable J</entry><entry>Cable G</entry><entry>Cable H</entry><entry/></row><row><entry/><entry>node 230</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0040" num="0037">The difference between Table 2 and Table 1 is that the last column of Table 2 shows distances. The distances between storage control node <b>110</b> and other nodes can be determined by using storage control node <b>110</b> as the &#x201c;origin.&#x201d; In this case, the distance between storage control node <b>110</b> and itself can be set to 0. By referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, it can be seen that the distance between storage control node <b>110</b> and storage device node <b>120</b> is 1, so the distance can be set to 1 at the second row in Table 1. Further, other cable lists can be processed in a similar manner. For example, the intersection of the node lists of storage device nodes <b>120</b> and <b>210</b> is cables C and D, and thus the distance between the two is 1. According to an example implementation of the present disclosure, the distance list can be set for other nodes in a similar manner.</p><p id="p-0041" num="0038">It will be understood that Table 2 above is merely schematic, and according to an example implementation of the present disclosure, the distances between the nodes can be recorded in other ways. For example, the distances described above can be represented by an N*N (N being the number of nodes in storage system <b>200</b>) dimensional matrix, where the element at position (i, j) in the matrix represents the distance between the i th node and the j th node.</p><p id="p-0042" num="0039">According to an example implementation of the present disclosure, if there is no direct connection between two nodes (i.e., there is no intersection between two cable lists), whether there is an indirect connection between the two nodes can then be determined, i.e., whether there is a path that includes multiple connections is determined. Specifically, a third node can be selected from the multiple nodes (the distance from this third node to the first node is known). Following that, the distance between the first node and the second node is determined based on a comparison between the first cable list and a third cable list associated with the third node in the multiple cable lists.</p><p id="p-0043" num="0040">Referring to Table 2, assuming that it is desired to determine the distance between storage control node <b>110</b> and storage device node <b>210</b>, and in this case, the cable list of storage control node <b>110</b> includes cables A, B, I, and J, the cable list of storage device node <b>210</b> includes cables E, F, C, and D, and there is no intersection between the two cable lists. At this point, storage device node <b>120</b> can be selected, the distance from this node to storage control node <b>110</b> is known to be 1, and its cable list includes cables A, B, C, and D. Following this, the cable list &#x201c;cables E, F, C, and D&#x201d; of storage device node <b>210</b> can be compared with the cable list &#x201c;A, B, C, and D&#x201d; of storage device node <b>120</b>.</p><p id="p-0044" num="0041">Further, the distance between storage device node <b>210</b> and storage device node <b>120</b> can be determined based on whether there is an intersection between the two cable lists. In this case, there is an intersection of &#x201c;cables C and D&#x201d; between the two cable lists, and then the distance between storage device node <b>210</b> and storage device node <b>120</b> can be determined to be 1. Further, based on the distance of 1 between storage control node <b>110</b> and storage device node <b>120</b> and the distance of 1 between storage device node <b>210</b> and storage device node <b>120</b>, it can be determined that there is an indirect connection between storage control node <b>110</b> and storage device node <b>210</b>, and the distance between the two is 1+1=2. At this point, the distances shown in Table 2 can be updated. Specifically, the distance of &#x201c;2&#x201d; can be added to the third row in Table 2. Updated Table 2 is shown in Table 3 below.</p><p id="p-0045" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 3</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Distance List</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="112pt" align="left"/><colspec colname="4" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>Serial</entry><entry/><entry/><entry/></row><row><entry>number</entry><entry>Node ID</entry><entry>Cable list</entry><entry>Distance</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="28pt" align="left"/><colspec colname="6" colwidth="28pt" align="left"/><colspec colname="7" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>1</entry><entry>Storage control </entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable I</entry><entry>Cable J</entry><entry>0</entry></row><row><entry/><entry>node 110</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>2</entry><entry>Storage device </entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable C</entry><entry>Cable D</entry><entry>1</entry></row><row><entry/><entry>node 120</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>3</entry><entry>Storage device </entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable C</entry><entry>Cable D</entry><entry>2</entry></row><row><entry/><entry>node 210</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>4</entry><entry>Storage device </entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable G</entry><entry>Cable H</entry><entry/></row><row><entry/><entry>node 220</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>5</entry><entry>Storage device </entry><entry>Cable I</entry><entry>Cable J</entry><entry>Cable G</entry><entry>Cable H</entry><entry/></row><row><entry/><entry>node 230</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0046" num="0042">According to an example implementation of the present disclosure, processing can be iteratively performed continuously based on the method described above, and the distance between two nodes with an unknown distance can be determined based on the distances between an intermediate node and the two nodes with an unknown distance. For example, assuming that it is desired to determine the distance between storage control node <b>110</b> and storage device node <b>220</b>, at this point, storage device node <b>210</b> with a known distance to both storage control node <b>110</b> and storage device node <b>220</b> can be selected. Further, the distance between storage control node <b>110</b> and storage device node <b>220</b> is determined based on the distance of 2 between storage control node <b>110</b> and storage control node <b>110</b> and the distance of 1 between storage control node <b>210</b> and storage control node <b>220</b>: 2+1=3.</p><p id="p-0047" num="0043">According to an example implementation of the present disclosure, the cable list associated with each node can be compared with the other cable lists one by one in order to determine all the distances in the network structure. After all the comparison processes have been completed, it can be confirmed that the network structure includes all the connection relationships between the multiple nodes. Specifically, the distance between storage control node <b>110</b> and each storage device node can be determined in a similar manner in order to obtain a distance list as shown in Table 4 below.</p><p id="p-0048" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 4</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Distance List</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="112pt" align="left"/><colspec colname="4" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>Serial</entry><entry/><entry/><entry/></row><row><entry>number</entry><entry>Node ID</entry><entry>Cable list</entry><entry>Distance</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="7"><colspec colname="1" colwidth="28pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="28pt" align="left"/><colspec colname="4" colwidth="28pt" align="left"/><colspec colname="5" colwidth="28pt" align="left"/><colspec colname="6" colwidth="28pt" align="left"/><colspec colname="7" colwidth="28pt" align="center"/><tbody valign="top"><row><entry>1</entry><entry>Storage control </entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable I</entry><entry>Cable J</entry><entry>0</entry></row><row><entry/><entry>node 110</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>2</entry><entry>Storage device </entry><entry>Cable A</entry><entry>Cable B</entry><entry>Cable C</entry><entry>Cable D</entry><entry>1</entry></row><row><entry/><entry>node 120</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>3</entry><entry>Storage device </entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable C</entry><entry>Cable D</entry><entry>2</entry></row><row><entry/><entry>node 210</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>4</entry><entry>Storage device </entry><entry>Cable E</entry><entry>Cable F</entry><entry>Cable G</entry><entry>Cable H</entry><entry>3</entry></row><row><entry/><entry>node 220</entry><entry/><entry/><entry/><entry/><entry/></row><row><entry>5</entry><entry>Storage device </entry><entry>Cable I</entry><entry>Cable J</entry><entry>Cable G</entry><entry>Cable H</entry><entry>4</entry></row><row><entry/><entry>node 230</entry></row><row><entry namest="1" nameend="7" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0049" num="0044">It will be understood that only storage system <b>200</b> as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> is taken as an example above to describe an implementation for determining the distances between nodes. According to an example implementation of the present disclosure, storage system <b>200</b> may include a greater or smaller number of nodes, and in this case, processing can be performed iteratively based on the number of nodes in order to obtain the distances between the nodes. According to an example implementation of the present disclosure, distances between nodes can be determined based on the algorithm as shown in Table 5 below.</p><p id="p-0050" num="0000"><tables id="TABLE-US-00005" num="00005"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 5</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Algorithm for determining distances between nodes</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="left"/><tbody valign="top"><row><entry>Id=1</entry></row><row><entry>Next_Cables_to_check = [Cable-A, Cable-B] # Nodes first Ports</entry></row><row><entry>Last_Cables_to_check = [Cable-I Cable-J] # Nodes last Ports</entry></row><row><entry>while Last_Cables_to_check != Next_Cables_to_check :</entry></row><row><entry>&#x2003;Iterate_Cables_lists: # all cable metrics. iterator each object.</entry></row><row><entry>&#x2003;&#x2003;if Next_Cables_to_check in current_ Cable_list.</entry></row><row><entry># current object cable list</entry></row><row><entry>&#x2003;&#x2003;&#x2003;current_Id = Id++ </entry></row><row><entry>&#x2003;&#x2003;&#x2003;Next_Cables_to_check = current_ Cable_list - Next_Cable_to_check</entry></row><row><entry>&#x2003;&#x2003;&#x2003;Continue</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0051" num="0045">In the algorithm shown in Table 5, the index (ID) of the current node can be set to 1, the next group of cables to be checked (Next_Cables_to_check) can be set to [Cable-A, Cable-B], and the last group of cables to be checked (Last_Cables_to_check) can be set to [Cable-I, Cable-J]. Afterwards, it can be compared to determine whether Next_Cables_to_check is included in the cable list of the current node (current_Cable_list) in the loop operation. If the determination result is &#x201c;Yes,&#x201d; the index of the current node is added by 1, and the next group of cables to be checked in the next round is set to the difference between the cable list of the current node and the next group of cables to be checked (Next_Cables_to_check=current_Cable_list&#x2212;Next_Cables_to_check). The above process can be iteratively performed continuously until the next group of cables to be checked is equal to the last group of cables to be checked. At this point, all the nodes in the storage system have been processed and the distances between the cables can be determined. At this point, each storage node is given an index, and the value of the index indicates the distance between that storage node and the storage control node.</p><p id="p-0052" num="0046">According to an example implementation of the present disclosure, the multiple nodes can be connected in a loop, and at this point, there can be multiple paths between two nodes, and thus there can be multiple distances between the two nodes. In this case, the distances can be updated based on the number of the multiple nodes. <figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically illustrates block diagram <b>600</b> of paths in a storage system according to an example implementation of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, taking only control node <b>110</b>A in storage control node <b>110</b> as an example, there are 2 paths between control node <b>110</b>A and storage node <b>230</b>A: path <b>1</b> (including cable I) as shown by the dotted line, and path <b>2</b> (including cables A, C, E, and G) as shown by the dashed line. In this case, the distance between the two nodes can be updated based on the algorithm shown in Table 6 below.</p><p id="p-0053" num="0000"><tables id="TABLE-US-00006" num="00006"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="14pt" align="center"/><colspec colname="2" colwidth="182pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 6</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>&#x2003;</entry><entry>Algorithm for updating distances between nodes</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="14pt" align="left"/><colspec colname="2" colwidth="182pt" align="left"/><tbody valign="top"><row><entry/><entry/><entry>if index &#x3e; [(maxindex + 1)/2]:</entry></row><row><entry/><entry/><entry>&#x2003;distance = maxIndex+1 &#x2212; index</entry></row><row><entry/><entry/><entry>else:</entry></row><row><entry/><entry/><entry>&#x2003;distance = index</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0054" num="0047">In the above algorithm, if the index of a certain storage device node is greater than [(maxIndex+1)/2] (maxIndex refers to the maximum index, maxIndex=maximum number of nodes&#x2212;1), this index can be updated based on maxIndex+1&#x2212;index. For the example shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the distance between storage control node <b>110</b> and storage device node <b>230</b> determined based on path <b>2</b> is 4. At this point, the above distance can be updated to 4+1&#x2212;4=1 based on the algorithm shown in Table 6, i.e., the distance determined via path <b>1</b>. With the example implementation of the present disclosure, the shortest distance between two nodes can be found from a storage system that includes a loop. In this way, it is easy for the storage control node to access each storage device node via the shortest distance, thereby increasing the access speed and reducing the access latency.</p><p id="p-0055" num="0048">Returning to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, at block <b>330</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the network structure of the storage system is determined based on the distance between the first node and the second node. In the case where the distances between the nodes have been determined based on the process described above, the network structure of storage system <b>200</b> can be represented based on the determined distances. According to an example implementation of the present disclosure, the network structure can be represented based on a graph. In this case, the nodes in the graph can represent storage control nodes/storage device nodes in the storage system, the edges in the graph can represent connections between the storage control nodes/storage device nodes, and the weights of the edges can represent distances. According to an example implementation of the present disclosure, the network structure can be represented based on a matrix manner. In this case, the element at position (i, j) in the matrix represents the distance between the i th node and the j th node.</p><p id="p-0056" num="0049">According to an example implementation of the present disclosure, storage system <b>200</b> can be controlled based on the determined network structure. For example, if an access to a certain storage device node in the multiple storage device nodes is received at storage control node <b>110</b>, a path for accessing the storage device node is determined based on the network structure, and then the storage control node is notified to access the storage device node based on the path. For example, assuming that an access to storage device node <b>230</b> is received at storage control node <b>110</b>, based on the network structure determined above, path <b>1</b> as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> can be found to be the shortest path to access storage device node <b>230</b>. Thus, storage control node <b>110</b> can be notified to access storage device node <b>230</b> via path <b>1</b>.</p><p id="p-0057" num="0050">With the example implementation of the present disclosure, the distances between the nodes can be determined directly based on the cables connecting the nodes in the storage system, and thus the network structure of the storage system can be determined. In this way, the network structure of the storage system can be determined in a simpler and more effective manner without the need to know the physical port addresses of the nodes.</p><p id="p-0058" num="0051">Examples of the method according to the present disclosure have been described in detail above with reference to <figref idref="DRAWINGS">FIGS. <b>2</b> to <b>6</b></figref>, and implementations of a corresponding apparatus will be described below. According to an example implementation of the present disclosure, an apparatus for managing a storage system is provided. This apparatus includes: an acquiring module configured to acquire multiple cable lists associated with multiple nodes included in the storage system, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node; a comparison module configured to determine a distance between a first node in the multiple nodes and a second node in the multiple nodes based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists; and a determination module configured to determine a network structure of the storage system based on the distance between the first node and the second node. According to an example implementation of the present disclosure, this apparatus further includes modules for performing other steps in method <b>300</b> described above.</p><p id="p-0059" num="0052"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically illustrates a block diagram of device <b>700</b> for managing a storage system according to an example implementation of the present disclosure. As shown in the figure, device <b>700</b> includes central processing unit (CPU) <b>701</b> that may perform various appropriate actions and processing according to computer program instructions stored in read-only memory (ROM) <b>702</b> or computer program instructions loaded from storage unit <b>708</b> to random access memory (RAM) <b>703</b>. In RAM <b>703</b>, various programs and data required for the operation of device <b>700</b> may also be stored. CPU <b>701</b>, ROM <b>702</b>, and RAM <b>703</b> are connected to one another through bus <b>704</b>. Input/output (I/O) interface <b>705</b> is also connected to bus <b>704</b>.</p><p id="p-0060" num="0053">Multiple components in device <b>700</b> are connected to I/O interface <b>705</b>, including: input unit <b>706</b>, such as a keyboard and a mouse; output unit <b>707</b>, such as various types of displays and speakers; storage unit <b>708</b>, such as a magnetic disk and an optical disc; and communication unit <b>709</b>, such as a network card, a modem, and a wireless communication transceiver. Communication unit <b>709</b> allows device <b>700</b> to exchange information/data with other devices via a computer network, such as the Internet, and/or various telecommunication networks.</p><p id="p-0061" num="0054">The various processes and processing described above, such as method <b>300</b>, may be performed by processing unit <b>701</b>. For example, in some implementations, method <b>300</b> may be implemented as a computer software program that is tangibly included in a machine-readable medium, such as storage unit <b>708</b>. In some implementations, part or all of the computer program may be loaded and/or installed onto device <b>700</b> via ROM <b>702</b> and/or communication unit <b>709</b>. One or more steps of method <b>300</b> described above may be performed when the computer program is loaded into RAM <b>703</b> and executed by CPU <b>701</b>. Alternatively, in other implementations, CPU <b>701</b> may also be configured in any other suitable manner to implement the above processes/methods.</p><p id="p-0062" num="0055">According to an example implementation of the present disclosure, an electronic device is provided, including: at least one processor; a volatile memory; and a memory coupled to the at least one processor, wherein the memory has instructions stored therein which, when executed by the at least one processor, cause the device to perform a method for managing a storage system. This method includes: acquiring multiple cable lists associated with multiple nodes included in the storage system, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node; determining a distance between a first node in the multiple nodes and a second node in the multiple nodes based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists; and determining a network structure of the storage system based on the distance between the first node and the second node.</p><p id="p-0063" num="0056">According to an example implementation of the present disclosure, determining the distance includes: determining the distance between the first node and the second node to be 1 in response to determining that there is an intersection between the first cable list and the second cable list.</p><p id="p-0064" num="0057">According to an example implementation of the present disclosure, determining the distance includes: in response to determining that there is no intersection between the first cable list and the second cable list, selecting from the multiple nodes a third node with a known distance from the first node; and determining the distance between the first node and the second node based on a comparison between the first cable list and a third cable list associated with the third node in the multiple cable lists.</p><p id="p-0065" num="0058">According to an example implementation of the present disclosure, determining the distance between the first node and the second node based on a comparison between the first cable list and the third cable list includes: determining the distance between the first node and the second node based on the distance between the first node and the third node in response to determining that there is an intersection between the first cable list and the third cable list.</p><p id="p-0066" num="0059">According to an example implementation of the present disclosure, determining the distance between the first node and the second node includes: in response to determining that there is no intersection between the first cable list and the third cable list, selecting from the multiple nodes a fourth node with a known distance from the first node; and determining the distance between the first node and the second node based on a comparison between the first cable list and a fourth cable list associated with the fourth node in the multiple cable lists.</p><p id="p-0067" num="0060">According to an example implementation of the present disclosure, acquiring the multiple cable lists includes: reading the cable lists from a baseboard management controller associated with the node.</p><p id="p-0068" num="0061">According to an example implementation of the present disclosure, determining the distance includes: updating the distance based on the number of the multiple nodes in response to determining that the multiple nodes are connected in a loop.</p><p id="p-0069" num="0062">According to an example implementation of the present disclosure, the storage system includes a storage control node and multiple storage device nodes, the storage control node including a first control node and a second control node, and the storage device nodes including a first storage node and a second storage node.</p><p id="p-0070" num="0063">According to an example implementation of the present disclosure, the method further includes: in response to receiving, at the storage control node, an access to a storage device node in the multiple storage device nodes, determining, based on the network structure, a path for accessing the storage device node; and notifying the storage control node to access the storage device node based on the path.</p><p id="p-0071" num="0064">According to an example implementation of the present disclosure, the node includes multiple ports, and the cable list includes an identifier of cable connected to each of the multiple ports, and determining the network structure includes: in response to determining that a cable list associated with each of the multiple nodes has been compared with another cable list, confirming that the network structure includes all connection relationships between the multiple nodes.</p><p id="p-0072" num="0065">According to an example implementation of the present disclosure, a computer program product is provided, which is tangibly stored on a non-transitory computer-readable medium and includes machine-executable instructions, wherein the machine-executable instructions are used to perform the method according to the present disclosure.</p><p id="p-0073" num="0066">According to an example implementation of the present disclosure, a computer-readable medium is provided. The computer-readable medium stores machine-executable instructions which, when executed by at least one processor, cause the at least one processor to implement the method according to the present disclosure.</p><p id="p-0074" num="0067">The present disclosure may be a method, a device, a system, and/or a computer program product. The computer program product may include a computer-readable storage medium on which computer-readable program instructions for performing various aspects of the present disclosure are loaded.</p><p id="p-0075" num="0068">The computer-readable storage medium may be a tangible device that may hold and store instructions used by an instruction-executing device. For example, the computer-readable storage medium may be, but is not limited to, an electrical storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer-readable storage medium include: a portable computer disk, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disc (DVD), a memory stick, a floppy disk, a mechanical encoding device, for example, a punch card or a raised structure in a groove with instructions stored thereon, and any appropriate combination of the foregoing. The computer-readable storage medium used herein is not to be interpreted as transient signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through waveguides or other transmission media (e.g., light pulses through fiber-optic cables), or electrical signals transmitted through electrical wires.</p><p id="p-0076" num="0069">The computer-readable program instructions described herein may be downloaded from a computer-readable storage medium to various computing/processing devices or downloaded to an external computer or external storage device via a network, such as the Internet, a local area network, a wide area network, and/or a wireless network. The network may include copper transmission cables, fiber optic transmission, wireless transmission, routers, firewalls, switches, gateway computers, and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer-readable program instructions from a network and forwards the computer-readable program instructions for storage in a computer-readable storage medium in each computing/processing device.</p><p id="p-0077" num="0070">The computer program instructions for performing the operations of the present disclosure may be assembly instructions, instruction set architecture (ISA) instructions, machine instructions, machine-related instructions, microcode, firmware instructions, state setting data, or source code or object code written in any combination of one or more programming languages, wherein the programming languages include object-oriented programming languages such as Smalltalk and C++, and conventional procedural programming languages such as the C language or similar programming languages. The computer-readable program instructions may be executed entirely on a user computer, or partly on a user computer, or as a stand-alone software package, or partly on a user computer and partly on a remote computer, or entirely on a remote computer or a server. In a case where a remote computer is involved, the remote computer can be connected to a user computer through any kind of networks, including a local area network (LAN) or a wide area network (WAN), or can be connected to an external computer (for example, connected through the Internet using an Internet service provider). In some implementations, an electronic circuit, for example, a programmable logic circuit, a field programmable gate array (FPGA), or a programmable logic array (PLA), is personalized by utilizing state information of the computer-readable program instructions, wherein the electronic circuit may execute the computer-readable program instructions so as to implement various aspects of the present disclosure.</p><p id="p-0078" num="0071">Various aspects of the present disclosure are described herein with reference to flow charts and/or block diagrams of the method, the apparatus (system), and the computer program product according to implementations of the present disclosure. It should be understood that each block of the flow charts and/or the block diagrams and combinations of blocks in the flow charts and/or the block diagrams may be implemented by computer-readable program instructions.</p><p id="p-0079" num="0072">These computer-readable program instructions may be provided to a processing unit of a general-purpose computer, a special-purpose computer, or a further programmable data processing apparatus, thereby producing a machine, such that these instructions, when executed by the processing unit of the computer or the further programmable data processing apparatus, produce means (e.g., specialized circuitry) for implementing the functions/actions specified in one or more blocks in the flow charts and/or block diagrams. The computer-readable program instructions may also be stored in the computer-readable storage medium. The instructions enable a computer, a programmable data processing apparatus, and/or other devices to operate in a specific manner, so that the computer-readable medium storing the instructions includes an article of manufacture that includes instructions for implementing various aspects of functions/actions specified in one or more blocks in the flow charts and/or the block diagrams.</p><p id="p-0080" num="0073">The computer-readable program instructions may also be loaded onto a computer, other programmable data processing apparatuses, or other devices, such that a series of operational steps are performed on the computer, other programmable data processing apparatuses, or other devices to produce a computer-implemented process. Thus, the instructions executed on the computer, other programmable data processing apparatuses, or other devices implement the functions/actions specified in one or more blocks in the flow charts and/or the block diagrams.</p><p id="p-0081" num="0074">The flow charts and block diagrams in the drawings illustrate the architectures, functions, and operations of possible implementations of the systems, methods, and computer program products according to a plurality of implementations of the present disclosure. In this regard, each block in the flow charts or block diagrams may represent a module, a program segment, or part of an instruction, the module, program segment, or part of an instruction including one or more executable instructions for implementing specified logical functions. In some alternative implementations, functions marked in the blocks may also occur in an order different from that marked in the accompanying drawings. For example, two successive blocks may actually be executed in parallel substantially, or they may be executed in an opposite order sometimes, depending on the functions involved. It should be further noted that each block in the block diagrams and/or flow charts as well as a combination of blocks in the block diagrams and/or flow charts may be implemented using a special hardware-based system that executes specified functions or actions, or using a combination of special hardware and computer instructions.</p><p id="p-0082" num="0075">Various implementations of the present disclosure have been described above. The above description is illustrative and not exhaustive, and is not limited to the various implementations disclosed. Numerous modifications and alterations are apparent to persons of ordinary skill in the art without departing from the scope and spirit of the illustrated implementations. The selection of terms as used herein is intended to best explain principles and practical applications of the various implementations or improvements to technologies on the market, or to enable other persons of ordinary skill in the art to understand the implementations disclosed here.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for managing a storage system, the method including:<claim-text>acquiring multiple cable lists associated with multiple nodes included in the storage system, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node;</claim-text><claim-text>determining a distance between a first node in the multiple nodes and a second node in the multiple nodes based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists; and</claim-text><claim-text>determining a network structure of the storage system based on the distance between the first node and the second node.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the distance includes: determining the distance between the first node and the second node to be <b>1</b> in response to determining that there is an intersection between the first cable list and the second cable list.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein determining the distance includes: in response to determining that there is no intersection between the first cable list and the second cable list,<claim-text>selecting from the multiple nodes a third node with a known distance from the first node; and</claim-text><claim-text>determining the distance between the first node and the second node based on a comparison between the first cable list and a third cable list associated with the third node in the multiple cable lists.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein determining the distance between the first node and the second node based on a comparison between the first cable list and the third cable list includes:<claim-text>determining the distance between the first node and the second node based on the distance between the first node and the third node in response to determining that there is an intersection between the first cable list and the third cable list.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein determining the distance between the first node and the second node includes: in response to determining that there is no intersection between the first cable list and the third cable list,<claim-text>selecting from the multiple nodes a fourth node with a known distance from the first node; and</claim-text><claim-text>determining the distance between the first node and the second node based on a comparison between the first cable list and a fourth cable list associated with the fourth node in the multiple cable lists.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein acquiring the multiple cable lists includes: reading the cable lists from a baseboard management controller associated with the node.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the distance includes: updating the distance based on the number of the multiple nodes in response to determining that the multiple nodes are connected in a loop.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage system includes a storage control node and multiple storage device nodes, the storage control node including a first control node and a second control node, and the storage device nodes including a first storage node and a second storage node.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, further including:<claim-text>in response to receiving, at the storage control node, an access to a storage device node in the multiple storage device nodes, determining, based on the network structure, a path for accessing the storage device node; and</claim-text><claim-text>notifying the storage control node to access the storage device node based on the path.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the node includes multiple ports, and wherein the cable list includes an identifier of cable connected to each of the multiple ports, and wherein determining the network structure includes: in response to determining that a cable list associated with each of the multiple nodes has been compared with another cable list, confirming that the network structure includes all connection relationships between the multiple nodes.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. An electronic device, including:<claim-text>at least one processor;</claim-text><claim-text>a volatile memory; and</claim-text><claim-text>a memory coupled to the at least one processor, the memory having instructions stored therein, wherein the instructions, when executed by the at least one processor, cause the device to execute a method for managing a storage system, the method including:<claim-text>acquiring multiple cable lists associated with multiple nodes included in the storage system, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node;</claim-text><claim-text>determining a distance between a first node in the multiple nodes and a second node in the multiple nodes based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists; and</claim-text><claim-text>determining a network structure of the storage system based on the distance between the first node and the second node.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The device according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the distance includes: determining the distance between the first node and the second node to be <b>1</b> in response to determining that there is an intersection between the first cable list and the second cable list.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The device according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein determining the distance includes: in response to determining that there is no intersection between the first cable list and the second cable list,<claim-text>selecting from the multiple nodes a third node with a known distance from the first node; and</claim-text><claim-text>determining the distance between the first node and the second node based on a comparison between the first cable list and a third cable list associated with the third node in the multiple cable lists.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The device according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein determining the distance between the first node and the second node based on a comparison between the first cable list and the third cable list includes:<claim-text>determining the distance between the first node and the second node based on the distance between the first node and the third node in response to determining that there is an intersection between the first cable list and the third cable list.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The device according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein determining the distance between the first node and the second node includes: in response to determining that there is no intersection between the first cable list and the third cable list,<claim-text>selecting from the multiple nodes a fourth node with a known distance from the first node; and</claim-text><claim-text>determining the distance between the first node and the second node based on a comparison between the first cable list and a fourth cable list associated with the fourth node in the multiple cable lists.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The device according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein acquiring the multiple cable lists includes: reading the cable lists from a baseboard management controller associated with the node; and<claim-text>wherein determining the distance includes: updating the distance based on the number of the multiple nodes in response to determining that the multiple nodes are connected in a loop.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The device according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the storage system includes a storage control node and multiple storage device nodes, the storage control node including a first control node and a second control node, and the storage device nodes including a first storage node and a second storage node.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The device according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the method further includes:<claim-text>in response to receiving, at the storage control node, an access to a storage device node in the multiple storage device nodes, determining, based on the network structure, a path for accessing the storage device node; and</claim-text><claim-text>notifying the storage control node to access the storage device node based on the path.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The device according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the node includes multiple ports, wherein the cable list includes an identifier of cable connected to each of the multiple ports, and wherein determining the network structure includes: in response to determining that a cable list associated with each of the multiple nodes has been compared with another cable list, confirming that the network structure includes all connection relationships between the multiple nodes.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A computer program product having a non-transitory computer readable medium which stores a set of instructions to manage a storage system; the set of instructions, when carried out by computerized circuitry, causing the computerized circuitry to perform a method of:<claim-text>acquiring multiple cable lists associated with multiple nodes included in the storage system, respectively, a cable list including an identifier of cable of at least one cable for connecting a node of the multiple nodes with a node other than the node;</claim-text><claim-text>determining a distance between a first node in the multiple nodes and a second node in the multiple nodes based on a comparison between a first cable list associated with the first node and a second cable list associated with the second node in the multiple cable lists; and</claim-text><claim-text>determining a network structure of the storage system based on the distance between the first node and the second node.</claim-text></claim-text></claim></claims></us-patent-application>