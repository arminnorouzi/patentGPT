<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006684A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006684</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17807452</doc-number><date>20220617</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>FR</country><doc-number>2107062</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>L</subclass><main-group>7</main-group><subgroup>24</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>L</subclass><main-group>7</main-group><subgroup>099</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>1</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>48</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>L</subclass><main-group>7</main-group><subgroup>24</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>L</subclass><main-group>7</main-group><subgroup>0992</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>1</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>4812</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD FOR COMMUNICATING A REFERENCE TIME BASE IN A MICROCONTROLLER, AND CORRESPONDING MICROCONTROLLER INTEGRATED CIRCUIT</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>STMicroelectronics (Rousset) SAS</orgname><address><city>Rousset</city><country>FR</country></address></addressbook><residence><country>FR</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>STMicroelectronics (Grand Ouest) SAS</orgname><address><city>Le Mans</city><country>FR</country></address></addressbook><residence><country>FR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Meunier</last-name><first-name>Laurent</first-name><address><city>Coulaines</city><country>FR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Onde</last-name><first-name>Vincent Pascal</first-name><address><city>Fuveau</city><country>FR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In an embodiment a method includes generating a low-frequency clock signal having a first frequency, in a standby mode and in a run mode of the CPU, generating a high-frequency clock signal having a second frequency higher than the first frequency, in the run mode, updating a value of the reference time base at each period of the low-frequency clock signal in the standby mode, and accessing the counter register with the high-frequency clock signal in the run mode.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="109.22mm" wi="158.75mm" file="US20230006684A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="135.72mm" wi="162.73mm" file="US20230006684A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="134.11mm" wi="161.88mm" file="US20230006684A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="101.43mm" wi="146.05mm" file="US20230006684A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="112.86mm" wi="157.06mm" file="US20230006684A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="155.36mm" wi="118.87mm" file="US20230006684A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="103.72mm" wi="159.60mm" file="US20230006684A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="158.16mm" wi="141.31mm" file="US20230006684A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of French Patent Application No. 2107062, filed on Jun. 30, 2021, which application is hereby incorporated herein by reference.</p><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Embodiments and implementations relate to integrated circuits, in particular microcontrollers and the communication of a reference time base for the operations of microcontrollers.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The operating systems executed by relatively simple application microcontrollers, for example an operating system of a microcontroller of a connected object, are based on hardware clocks for maintaining a reference time of the system.</p><p id="p-0005" num="0004">The hardware clocks are typically formed by a counter incremented, or updated, by the clock cycles of a clock signal.</p><p id="p-0006" num="0005">The operating systems use this reference time of the system as a major element of their planners, to maintain a complete list of execution times of software tasks and the precise instants in the planning of tasks. The operating systems also often read the reference time of the system to adapt to it and to compare it with a theoretical time.</p><p id="p-0007" num="0006">Consequently, there may be significant access to the counter providing the reference time during the software activities of the operating system, which involve numerous (re)-plannings, and therefore significant read access of the counter and significant write access to program interrupts in the comparator registers.</p><p id="p-0008" num="0007">It may be considered that there are typically two categories of hardware clocks, one known as low consumption, the other known as general purpose. Low-consumption clocks are typically clocked by a low-frequency clock signal, for example 32 kHz, and operate continuously, in particular during low consumption, called &#x201c;standby&#x201d;, modes. General-purpose clocks are typically clocked by a high-frequency clock signal, for example of a few MHz, and operate in a run mode, and, in particular, do not operate during standby modes, the oscillator generating the high-frequency clock signal being deactivated in order to reduce the power consumption.</p><p id="p-0009" num="0008">Consequently, the use of the general purpose hardware clock enables rapid access to the counter, but the hardware clock cannot be used in standby mode, so that the time reference is lost during the entry into standby mode and the hardware clock cannot be used to program a wake-up of the system.</p><p id="p-0010" num="0009">The general-purpose hardware clock is therefore conventionally not used to provide the reference time of the system.</p><p id="p-0011" num="0010">The use of the low-consumption hardware clock may for its part be used in standby mode, and be used to program a wake-up of the system, but the access to the counter is slow due to the low frequency of the clock signal that clocks it.</p><p id="p-0012" num="0011">Indeed, typically a plurality of clock cycles are needed to program interrupts in a comparator register, for example three clock cycles at 32 kHz last around one hundred &#x3bc;s. During this time, the central processing unit of the operating system, which operates at high speed (in the order of 100 MHz), sometimes attempts to program a new value of the comparator, which is not possible.</p><p id="p-0013" num="0012">In addition, the planning operations of the operating system may take place in a critical section, that is to say when the interrupts are deactivated. An access to the counter of long duration therefore increases the time spent in critical section. The reactivity of the system is affected. In the worst case, events or data received from certain peripherals may be lost.</p><p id="p-0014" num="0013">Moreover, the resolution of the counter is low because it is based on the low frequency, and therefore the programmed interrupt instant may not be very precise.</p><p id="p-0015" num="0014">Conventionally, to overcome these problems of highly complex and consuming software solutions computing resources are implemented and the throughput of communications with the peripherals is limited below its capacity.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0016" num="0015">Embodiments provide communication of a value of a reference time base that may both operate in a standby mode and not having the problems of reducing the reactivity of the system, of limiting the throughput of communications, by avoiding complex software solutions.</p><p id="p-0017" num="0016">Further embodiments provide a high-speed and low-consumption hardware clock.</p><p id="p-0018" num="0017">According to one embodiment, a method is proposed for communicating a value of a reference time base contained in a counter register accessible by a microcontroller central processing unit that may have an operation in standby mode and in run mode, comprising generating a so-called low-frequency clock signal having a first frequency, in the standby mode and in the run mode, and generating a so-called high-frequency clock signal having a second frequency higher than the first frequency, in the run mode, wherein the value of the reference time base is updated at each period of the low-frequency clock signal in the standby mode, and the access to the counter register is clocked with the high-frequency clock signal in the run mode.</p><p id="p-0019" num="0018">For example, the first frequency is lower than 1 MHz (megahertz) or even lower than 100 kHz (kilohertz), and the second frequency is higher than 1 MHz. In practice, the first frequency may be between 32 kHz and 300 kHz (for example a quartz at 32.768 kHz), and the second frequency may be between 4 MHz and 500 MHz.</p><p id="p-0020" num="0019">In other terms, it is proposed to provide a time base operating both in standby mode and in run mode, with a low-latency (fast) read and write access in the run mode.</p><p id="p-0021" num="0020">For example, the counter register may indeed include a read register read accessible by the central processing unit and containing said value of the reference time base, as well as a comparison register write accessible by the central processing unit and containing a value of a programmed interrupt instant.</p><p id="p-0022" num="0021">According to one implementation, the value of the reference time base is updated by an increment corresponding to the first frequency, at each period of the low-frequency clock signal in the standby mode, and is updated by an increment corresponding to the second frequency, at each period of the high-frequency clock signal in the run mode.</p><p id="p-0023" num="0022">Thus, further to the fast access to the counter register in the run mode, the value of the reference time base benefits from a finer resolution.</p><p id="p-0024" num="0023">Advantageously, the value of the reference time base updated at each period of the high-frequency clock signal in the run mode is realigned on each period of the low-frequency clock signal, the realignment comprising either a jump to the next value equal to a multiple of the ratio of the second frequency to the first frequency at the end of said period of the low-frequency clock signal, or a stop on a value equal to a multiple of said ratio until the end of said period of the low-frequency clock signal.</p><p id="p-0025" num="0024">This corresponds in other terms to a compensation for a possible drift between the first frequency of the low-frequency clock signal and the second frequency of the high-frequency clock signal, in a disciplined manner by the low-frequency clock signal (that is to say that the low-frequency clock signal is taken as reference to compensate for the drift).</p><p id="p-0026" num="0025">According to another implementation, the value of the reference time base of the counter register accessible by the central processing unit is updated at each period of the low-frequency clock signal in the run mode.</p><p id="p-0027" num="0026">In other terms, in the run mode, the counter register is updated slowly at the first frequency, but is rapidly accessible at the second frequency, particularly if applicable during write in the comparison register, due to the clocking of the counter register by the high-frequency clock signal.</p><p id="p-0028" num="0027">Advantageously, a value of the reference time base contained by a root counter register is updated at each period of the low-frequency clock signal in the standby mode and in the run mode, the value of the reference time base of the counter register accessible by the central processing unit being synchronised on the value of the reference time base of the root counter register, at each period of the low-frequency clock signal, in the run mode.</p><p id="p-0029" num="0028">&#x201c;Root counter&#x201d; means in the present scope, a counter that is not directly accessible by an external element (in particular by the central processing unit), but which is used to generate a value intended to be recopied (synchronised) in the counter register accessible by the central processing unit.</p><p id="p-0030" num="0029">In other terms, a low-frequency hardware clock is duplicated in a high-frequency domain to enable rapid access to the counter register. The synchronisation corresponds for example to a copy of the values from one register to the other.</p><p id="p-0031" num="0030">According to another implementation, the counter register accessible by the central processing unit contains high weight bits and low weight bits of the value of the reference time base, and the value of high weight bits is synchronised on the value of the reference time base of the root counter register at each period of the low-frequency clock signal in the run mode, the value of the low weight bits being updated at each period of the high-frequency clock signal in the run mode.</p><p id="p-0032" num="0031">This corresponds in other terms to a hardware clock combining a slow hardware clock always available and a fast hardware clock available in the run mode.</p><p id="p-0033" num="0032">Advantageously, the value of the low weight bits is realigned on each period of the low-frequency clock signal, the realignment comprising either resetting the low weight bits at the end of said period of the low-frequency clock signal, or locking the value of the low weight bits at a limit value equal to the ratio of the second frequency to the first frequency, until the end of said period of the low-frequency clock signal.</p><p id="p-0034" num="0033">Advantageously, the value of the programmed interrupt instant contained in the comparison register belonging to the counter register write accessible by the central processing unit, is synchronised in a comparison register belonging to the root counter register before each transition from the run mode to the standby mode.</p><p id="p-0035" num="0034">According to another embodiment, a microcontroller integrated circuit is also proposed that may have an operation in standby mode and in run mode, comprising a central processing unit, and a time reference circuit including a counter register configured to contain a value of a reference time base and accessible by the central processing unit, a first clock circuit configured to generate a so-called low-frequency clock signal having a first frequency, in the standby mode and in the run mode, and a second clock circuit configured to generate a so-called high-frequency clock signal having a second frequency higher than the first frequency, in the run mode, wherein the time reference circuit is configured to update the value of the reference time base at each period of the low-frequency clock signal in the standby mode, and to clock the access to the counter register with the high-frequency clock signal in the run mode.</p><p id="p-0036" num="0035">For example, the counter register may include a read register read accessible by the central processing unit and containing said value of the reference time base, as well as a comparison register write accessible by the central processing unit and containing a value of a programmed interrupt instant.</p><p id="p-0037" num="0036">According to one embodiment, the time reference circuit includes a logic circuit configured to update the value of the reference time base by an increment corresponding to the first frequency, at each period of the low-frequency clock signal in the standby mode, and to update the value of the reference time base by an increment corresponding to the second frequency, at each period of the high-frequency clock signal in the run mode.</p><p id="p-0038" num="0037">Advantageously, the time reference circuit further includes a drift compensation circuit configured to control the logic circuit in such a way as to realign the value of the reference time base updated at each period of the high-frequency clock signal in the run mode on each period of the low-frequency clock signal, the realignment comprising either a jump to the next value equal to a multiple of the ratio of the second frequency to the first frequency at the end of said period of the low-frequency clock signal, or a stop on a value equal to a multiple of said ratio until the end of said period of the low-frequency clock signal.</p><p id="p-0039" num="0038">According to another embodiment, the time reference circuit is further configured to update the value of the reference time base of the counter register accessible by the central processing unit at each period of the low-frequency clock signal in the run mode.</p><p id="p-0040" num="0039">Advantageously, the time reference circuit further includes a root counter register configured to contain a value of the reference time base updated at each period of the low-frequency clock signal in the standby mode and in the run mode, the time reference circuit being configured to synchronise the value of the reference time base of the counter register accessible by the central processing unit on the value of the reference time base of the root counter register, at each period of the low-frequency clock signal, in the run mode.</p><p id="p-0041" num="0040">According to another embodiment, the counter register accessible by the central processing unit is adapted to contain high weight bits and low weight bits of the value of the reference time base, the time reference circuit is configured to synchronise the value of said high weight bits on the value of the root counter register, at each period of the low-frequency clock signal, in the run mode, and to update the value of said low weight bits of the value of the reference time base at each period of the high-frequency clock signal in the run mode.</p><p id="p-0042" num="0041">Advantageously, the counter register accessible by the central processing unit is configured to realign the value of the low weight bits on the low-frequency clock signal, the realignment comprising either resetting the low weight bits at the end of said period of the low-frequency clock signal, or locking the value of the low weight bits at a limit value equal to the ratio of the second frequency to the first frequency, until the end of said period of the low-frequency clock signal.</p><p id="p-0043" num="0042">Advantageously, the root counter register includes a comparison register, the time reference circuit being configured to synchronise a value of a standby mode programmed interrupt instant in the comparison register of the root counter register, on the value of the programmed interrupt instant contained in the comparison register belonging to the counter register write accessible by the central processing unit, before each transition from the run mode to the standby mode.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0044" num="0043">Other advantages and features of the invention will become apparent upon examination of the detailed description of non-limiting embodiments and implementations, and the appended drawings, wherein:</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an embodiment of a microcontroller;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an embodiment of a time reference circuit such as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an evolution of a value of the reference time base in relation to the real time;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an embodiment of a time reference circuit such as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an operation of the synchronisations between the values contained in the counter register and the root counter register of an embodiment;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates another embodiment of the time reference circuit such as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>; and</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an operation of the synchronisations between the counter register RCNT and the root counter register RCNTR of another embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS</heading><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a microcontroller MCU produced in an integrated manner in an integrated circuit, and for example intended to economically equip a simple appliance APP, of the connected object type (&#x201c;IoT&#x201d; for &#x201c;Internet of Things&#x201d;).</p><p id="p-0053" num="0052">Indeed, the microcontrollers MCU of connected objects, such as for example audio, home automation, or household electrical appliances, implement operating systems having relatively simple functions, particularly in relation to multifunction telephone or computer microcontrollers. The functions implemented in the connected objects are usually the control and the management of peripherals PRPH<b>1</b>-PRPHn of the appliance APP, typically wireless communication peripherals, or also a display device, and the peripherals specific for the primary purpose of the object.</p><p id="p-0054" num="0053">Furthermore, in the connected objects, the energy consumption of the microcontrollers MCU is typically constrained to the economy.</p><p id="p-0055" num="0054">The microcontroller MCU includes a central processing unit CPU, adapted to implement software operations, in particular the operating system.</p><p id="p-0056" num="0055">The operations of the central processing unit may be clocked by an internal clock signal having a frequency in the order of around one hundred MHz (megahertz), and generates output and control signals at frequencies that may be in the order of tens of MHz or more. However, the frequencies of the output and control signals are adapted to communications with the peripherals to which the signals are transmitted, and may be in the order of tens of kHz for the inputs-outputs, of hundreds of kHz for asynchronous serial links (for example a &#x201c;UART&#x201d; for &#x201c;Universal Asynchronous Receiver Transmitter&#x201d; link), and of tens of MHz for fast serial links (for example an &#x201c;SPI&#x201d; for &#x201c;Serial Peripheral Interface&#x201d; link).</p><p id="p-0057" num="0056">The microcontroller MCU may have an operation in standby mode (VEI) and in run mode (ACT), and a distinction is made in this regard to a VEI domain relating to the standby mode, that may be called &#x201c;standby domain&#x201d; or &#x201c;always on domain&#x201d; and an ACT domain relating to the run mode, that may be called &#x201c;run domain&#x201d;.</p><p id="p-0058" num="0057">The standby domain VEI includes a first clock circuit LPTIM, configured to generate a first so-called &#x201c;low frequency&#x201d; clock signal LPclk, having a first frequency. The first clock circuit LPTIM is configured to generate the low-frequency clock signal LPclk in the standby mode as well as in the run mode of the microcontroller MCU. The first clock circuit LPTIM in particularly optimised for a low-energy consumption, and may constitute a stable time reference for the system.</p><p id="p-0059" num="0058">For example, the first frequency is in the order of the kHz (kilohertz), for example 32 kHz.</p><p id="p-0060" num="0059">The run domain ACT includes a second clock circuit HSTIM configured to generate a second so-called &#x201c;high frequency&#x201d; clock signal HSclk, having a second frequency higher than the first frequency. The second clock circuit LPTIM is configured to generate the high-frequency clock signal HSclk in the run mode. The second clock circuit HSTIM consumes more energy than the first clock circuit LPTIM and is particularly deactivated in the standby mode.</p><p id="p-0061" num="0060">For example, the second frequency is in the order of the MHz (megahertz), for example 10 MHz or more.</p><p id="p-0062" num="0061">The microcontroller includes a time reference circuit TMPref including a counter register RCNT configured to contain a value of a reference time base. The counter register RCNT is accessible by the central processing unit CPU, for example via a system bus BSYS adapted for internal communication of the integrated circuit MCU.</p><p id="p-0063" num="0062">Indeed, the operating system from a software point of view, or the central processing unit from a hardware point of view, uses the reference time base to plan its activity, that is to say to maintain the complete list of execution times of software application tasks and the precise instants of the planning of tasks, and also to adapt on the reference time base and compare it to a theoretical time.</p><p id="p-0064" num="0063">The time reference circuit TMPref is configured to update the value of the reference time base contained in the counter register RCNT with the low-frequency clock signal LPclk in the standby mode, and to clock the access to the counter register RCNT with the high-frequency clock signal HSclk in the run mode.</p><p id="p-0065" num="0064">A clear distinction is made between the clocking of the access to the counter register RCNT, that is to say the frequency for refreshing the data contained in the register, and the updating of the value contained in the register, that is to say the incrementation of the value of the time base controlled at a given frequency. Here, the term &#x201c;incrementation&#x201d; means the increase of said value of a quantity corresponding to the passage over time of a period at said given frequency, which is therefore not necessarily unit value of a time measurement unit.</p><p id="p-0066" num="0065">Moreover, in the standby mode VEI, the central processing unit CPU is inactive and in particular does not establish access to the counter register RCNT. Consequently, the clocking of the access to the counter register RCNT during the standby mode VEI does not functionally need to be developed, but it could nevertheless be considered that it would be carried out, as the updating of the value contained, by the low-frequency clock signal LPclk.</p><p id="p-0067" num="0066">Thus, the counter register RCNT is not only updated and running in the standby mode, which makes it possible particularly to be able to generate a programmed interrupt to &#x201c;wake up&#x201d; the microcontroller MCU from the standby mode to the run mode, and is furthermore clocked by the high-frequency clock signal in the run mode, which makes a rapid access possible with a low latency at the counter register RCNT.</p><p id="p-0068" num="0067">For example, as illustrated below in relation to <figref idref="DRAWINGS">FIGS. <b>2</b>, <b>4</b> and <b>6</b></figref>, the counter register includes a read register CNT (<figref idref="DRAWINGS">FIGS. <b>2</b>, <b>4</b>, <b>6</b></figref>) read accessible by the central processing unit CPU and containing said value of the reference time base, as well as a comparison register CMP (<figref idref="DRAWINGS">FIGS. <b>2</b>, <b>4</b>, <b>6</b></figref>) write accessible by the central processing unit CPU and containing a value of a programmed interrupt instant.</p><p id="p-0069" num="0068">The comparison register CMP is thus intended to contain the value of an instant, compared to the current value of the reference time base, making it possible to generate an interrupt when the value of the reference time base reaches or exceeds the value contained in the comparison register CMP.</p><p id="p-0070" num="0069">The interrupt may for example be an interrupt to wake up from the standby mode to the run mode, or the startup of one or more processes (in a multitask context), or the signaling of a &#x201c;timeout&#x201d;.</p><p id="p-0071" num="0070">Finally, the updating of the value of the reference time base contained in the counter register RCNT may be updated in different ways, in particular by the low-frequency clock signal LPclk in the standby mode, and particularly by the high-frequency clock signal HSclk or the low-frequency clock signal LPslk in the run mode.</p><p id="p-0072" num="0071">Examples of embodiments and implementations particularly for the clocking and the updating of the value of the reference time base contained in the counter register RCNT are described below in relation to <figref idref="DRAWINGS">FIGS. <b>2</b> to <b>7</b></figref>.</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of embodiment of the time reference circuit TMPref such as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0074" num="0073">In this example, the time reference circuit TMPref-<b>2</b> includes on the one hand a switching circuit SWT configured to select either the low-frequency clock signal LPclk in the standby mode, or the high-frequency clock signal HSclk in the run mode. The selected clock signal is transmitted as a useful clock signal CLK.</p><p id="p-0075" num="0074">To select the clock signal LPclk, HSclk according to the operating mode of the microcontroller MCU, the switching circuit SWT may be controlled by a hardware control signal PRGhw or by a software control signal PRGsw. The hardware control signal PRGhw is for example physically generated by the microcontroller MCU, to communicate the standby or run operating mode in which it is found. The software control signal PRGsw is for example from the activity of the operating system, and may typically be written in a configuration register CFG belonging to a register bank REG of the time reference circuit TMPref.</p><p id="p-0076" num="0075">The useful clock signal CLK is distributed on the one hand to the counter register RCNT, to clock the access to said counter register RCNT, that is to say the read access of the read register CNT, and the write access of the comparison register CMP.</p><p id="p-0077" num="0076">The useful clock signal CLK is distributed on the other hand to a software circuit LGQ configured to update the value of the reference time base by an increment corresponding to the frequency of the useful clock signal CLK, in a clocked manner by the useful clock signal CLK.</p><p id="p-0078" num="0077">In details, the software circuit LGQ is thus configured to update the value of the reference time base by an increment corresponding to the duration of the period (i.e. the inverse of the frequency) of the low-frequency clock signal LPclk, at each period of the low-frequency clock signal LPclk in the standby mode; and to update the value of the reference time base by an increment corresponding to the duration of the period of the high-frequency clock signal HSclk, at each period of the high-frequency clock signal HSclk in the run mode.</p><p id="p-0079" num="0078">Advantageously, the time reference circuit TMPref-<b>2</b> may further include a drift compensation circuit CPSDR configured to realign the value of the reference time base CNTval (<figref idref="DRAWINGS">FIG. <b>3</b></figref>), updated at each period of the high-frequency clock signal HSclk in the run mode.</p><p id="p-0080" num="0079">The drift compensation circuit CPSDR receives as input the low-frequency clock signal LPclk and the high-frequency clock signal HSclk, and generates an output signal adapted to control the logic circuit LGQ in such a way as to perform the realignment.</p><p id="p-0081" num="0080">In this regard, reference is made to <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates the evolution of the value of the reference time base CNTval, in relation to the real time T, and depending on possible drifts of the second frequency (i.e. the frequency of the high-frequency clock signal HSclk), and the realignment process <b>320</b>, <b>330</b>.</p><p id="p-0083" num="0082">The realignment process, implemented by the drift compensation circuit CPSDR, is disciplined by the low-frequency clock signal LPclk, that is to say that it is considered that the low-frequency clock signal LPclk does not drift, the latter being used as reference if the second frequency HSclk tends to drift.</p><p id="p-0084" num="0083">The drift compensation circuit CPSDR is for example configured to count the number of periods of the high-frequency clock signal HSclk during a period of the low-frequency clock signal LPclk.</p><p id="p-0085" num="0084">If the number of periods is equal to the expected value of the ratio of the second frequency (i.e. the frequency of the high-frequency clock signal HSclk) to the second frequency (i.e. the frequency of the low-frequency clock signal LPclk), then the high-frequency clock signal has not drifted (<b>310</b>). If the number of periods counted is higher than the expected value of the ratio of the second frequency to the first frequency, then the high-frequency clock signal is too fast (<b>320</b>). Conversely, if the number of periods counted is lower than the expected value of the ratio of the second frequency to the second frequency, then the high-frequency clock signal is too slow (<b>330</b>).</p><p id="p-0086" num="0085">For example, if the first frequency LPclk equals 32 kHz, and the second frequency HSclk equals 32 MHz, the ratio of the second frequency to the first frequency equals 1000, and the value of the reference time base CNTval is incremented by 1 at each period of the high-frequency clock signal HSclk.</p><p id="p-0087" num="0086">At the next period of the low-frequency clock signal LPclk, the value of the reference time base CNTval is realigned on a value modulo said ratio of the frequencies (i.e. 1000). &#x201c;A value modulo the ratio&#x201d; means &#x201c;a zero value modulo the ratio&#x201d;, which means &#x201c;a value equal to a multiple integer of the ratio&#x201d;. The values modulo said ratio are shown by the curve in dotted lines.</p><p id="p-0088" num="0087">Thus, when the high-frequency clock signal HSclk is too slow, then the value CNTval jumps <b>330</b> (<figref idref="DRAWINGS">FIG. <b>3</b></figref>) to the next modulo value; and when the high-frequency clock signal HSclk is too fast, the value CNTval stops <b>320</b> (<figref idref="DRAWINGS">FIG. <b>3</b></figref>) at the modulo value.</p><p id="p-0089" num="0088">Thus, the value of the reference time base CNTval is incremented modulo woo by the realignment process, at each period of the low-voltage clock signal LPclk.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of embodiment of the time reference circuit TMPref such as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0091" num="0090">In this example, the time reference circuit TMPref-<b>4</b> is configured to update the value of the reference time base, contained in the counter register RCNT, at each period of the low-frequency clock signal LPclk in the standby mode and in the run mode, while the access to the counter register RCNT is clocked with the high-frequency clock signal HSclk in the run mode.</p><p id="p-0092" num="0091">In this regard, the time reference circuit TMPref-<b>4</b> includes on the one hand a so-called high-frequency register bank HSREG, comprising the counter register RCNT, the access of which is clocked by the high-frequency clock signal HSclk in the run mode. In addition, the time reference circuit TMPref-<b>4</b> includes on the other hand a so-called low-frequency register bank LPREG, comprising a root counter register RCNTR, which is updated and clocked by the low-frequency clock signal LPclk in the run mode and in the standby mode.</p><p id="p-0093" num="0092">The counter register RCNT of the high-frequency register bank HSREG includes, as previously described, a read register HSCNT and intended to contain said value of the reference time base, as well as a comparison register HSCMP containing a value of a programmed interrupt instant, respectively read and write accessible by the central processing unit CPU.</p><p id="p-0094" num="0093">The high-frequency register bank HSREG further contains a configuration register that may contain a software control PRGsw, making it possible to communicate the run or standby state of the microcontroller MCU. A hardware control PRGhw such as previously described in relation to <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be envisaged.</p><p id="p-0095" num="0094">The root counter register RCNTR of the low-frequency register bank LPREG includes in a similar manner a read register LPCNT configured to contain a root value of the reference time base, updated at each period of the low-frequency clock signal LPclk, and a comparison register CMP intended to contain a value of a programmed interrupt instant.</p><p id="p-0096" num="0095">The value of the reference time base of the counter register RCNT accessible by the central processing unit in the run mode, is synchronised with a synchronisation signal sync_cnt on the root value contained in the read register LPCNT of the root counter register RCNTR, in the standby mode and in the run mode.</p><p id="p-0097" num="0096">The value of the programmed interrupt instant contained in the comparison register LPCMP of the root counter register RCNTR, is synchronised with a synchronisation signal sync_cmp on the value of the comparison register HSCMP of the counter register RCNT, in particular in the run mode.</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an organisation chart of the operation of the synchronisations sync_cnt, sync_cmp between the values contained in the counter register RCNT and the root counter register RCNTR.</p><p id="p-0099" num="0098">In the standby mode, the accesses to the root read register LPCNT and to the root comparison register LPCMP are on the one hand clocked by low-frequency clock signal LPclk, and on the other hand, the root value contained by the root read register LPCNT is updated &#x201c;act&#x201d; at each period of the low-frequency clock signal LPclk.</p><p id="p-0100" num="0099">At each period of the low-frequency clock signal LPclk, the root value (LPCNT) is compared with the value of the interrupt instant (LPCMP), and an interrupt intrpt_vei is generated when said values are equal. In standby mode, the interrupt intrpt_vei is typically a wake-up interrupt for a transition of the microcontroller MCU in the run mode.</p><p id="p-0101" num="0100">In the run mode, the high-frequency clock signal HSclk is available and makes it possible to clock the access to the read register HSCNT and to the comparison register HSCMP, while the root read register LPCNT is always clocked and updated &#x201c;act&#x201d; by the low-frequency clock signal LPclk.</p><p id="p-0102" num="0101">The value of the reference time base of the high-frequency read register HSCNT, accessible by the central processing unit CPU, is synchronised sync_cnt on the value of the root counter register RCNTR, for example at each period of the low-frequency clock signal.</p><p id="p-0103" num="0102">The value of the interrupt instant of the high-frequency comparison register HSCMP, may be written (or programmed) by the central processing unit CPU_wrt, at the speed of the clocking by the high-frequency clock signal HSclk.</p><p id="p-0104" num="0103">The programming of a new interrupt instant value may for example last a few periods, for example three periods, of the clock signal clocking the access to the comparison register HSCMP.</p><p id="p-0105" num="0104">The mechanism for generating interrupts intrpt_act in the run mode is implemented in a similar manner, by comparing the value contained in the comparison register HSCMP with the current value of the read register HSCNT, at each period of the high-frequency clock signal HSclk.</p><p id="p-0106" num="0105">Consequently, the central processing unit CPU may rapidly program useful interrupts intrpt_act in the run mode, for example for software applications, without being constrained by the latency of the writing in the comparison register HSCMP.</p><p id="p-0107" num="0106">On the other hand, the value of the interrupt instant of the low-frequency comparison register LPCMP is synchronised sync_cmp on the value of the high-frequency comparison register HSCMP, in particular during an entry into the standby mode.</p><p id="p-0108" num="0107">Synchronisation processes exist between domains clocked at different frequencies, making it possible to avoid conflicts in case of modification of the synchronised value in the high-frequency domain during the transfer, slower, to the low-frequency domain. This is advantageous for synchronising the values of the interrupt instants sync_cmp, given that the synchronisation is carried out from the high-frequency domain to the low-frequency domain, and that the synchronised value may be modified from the high-frequency domain. However, synchronising the values of the reference time base sync_cnt does not encounter the problem of conflict caused by a modification during the transfer, given that the synchronisation is carried out from the low-frequency domain to the high-frequency domain, and that the synchronised value is not modified from the high-frequency domain.</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates another example of embodiment of the time reference circuit TMPref such as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, that can be seen as a variant of the example described in relation to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>. The common elements support the same references and not all will be detailed again.</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an organisation chart of the operation of the synchronisations between the counter register RCNT and the root counter register RCNTR of this variant.</p><p id="p-0111" num="0110">In this variant, the read register HSCNT (belonging to the counter register RCNT located in the high-frequency register bank HSREG) includes a functional separation between the high weight bits HSCNT_msb and the low weight bits HSCNT_lsb of the value of the reference time base.</p><p id="p-0112" num="0111">The time reference circuit TMPref-<b>6</b> is configured to update the value of the high weight bits HSCNT_msb at each period of the low-frequency clock signal LPclk in the standby mode and in the run mode.</p><p id="p-0113" num="0112">The updating of the high weight bits HSCNT_msb is carried out in the same way as described above in relation to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, that is to say by the synchronisation mechanism sync_cnt on the root value of the root read register LPCNT that is clocked and updated &#x201c;act&#x201d; by the low-frequency clock signal LPclk.</p><p id="p-0114" num="0113">The time reference circuit TMPref-<b>6</b> is at the same time configured to update &#x201c;act&#x201d; the value of the low weight bits HSCNT_lsb at each period of the high-frequency clock signal HSclk in the run mode.</p><p id="p-0115" num="0114">For example, it is possible to construct the high-frequency counter register RCNT so that it contains words or data (that is to say the values contained in the read register HSCNT_msb, HSCNT_lsb and in the comparison register HSCMP) having a larger size than the words or data contained in the root counter register RCNTR.</p><p id="p-0116" num="0115">For example, the values contained in the high-frequency counter register RCNT may be coded on 64 bits, with 32 high weight bits HSCNT_msb and 32 low weight bits HSCNT_lsb, while the values contained in the root counter register RCNTR may be coded on 32 bits. A mechanism for coherence between the high weight bits HSCNT_msb and the low weight bits HSCNT_lsb may be provided. Likewise, a mechanism for converting from 64 bits to 32 bits may be provided for the synchronisation sync_cmp of the interrupt instant value from the comparison register HSCMP to the comparison register LPCMP. In practice, the conversion mechanism (sync_cmp) may simply include a copy of high weight bits from the register HSCMP to the register LPCMP.</p><p id="p-0117" num="0116">Alternatively, the values contained in the high-frequency counter register RCNT may be coded on 32 bits, with a breakdown of for example 24 high weight bits HSCNT_msb and 8 low weight bits HSCNT_lsb, or 28 high weight bits HSCNT_msb and 4 low weight bits HSCNT_lsb, for values contained in the root counter register RCNTR coded on 32 bits. A mechanism for converting from 32 bits to 24 bits or 28 bits may there again be provided for the synchronisation sync_cnt of the value of the reference time base of the read register HSCNT, based on the root value of the root read register LPCNT.</p><p id="p-0118" num="0117">The breakdown may advantageously make it possible to modulate a compromise between the dynamics of the high weight bits HSCNT_msb, which tends to be the highest possible, and the precision of the low weight bits HSCNT_lsb, for which the microsecond may be sufficient and the nanosecond superfluous, according to the needs of the software applications.</p><p id="p-0119" num="0118">The breakdown of high weight bits HSCNT_msb and low weight bits HSCNT_lsb may advantageously be programmable during use, according to a specification of the needs of the software applications executed.</p><p id="p-0120" num="0119">Finally, in this variant, a mechanism for realigning the value of the low weight bits HSCNT_lsb on the low-frequency clock signal LPclk similar to the realignment described previously in relation to <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be implemented directly by the counter register RCNT.</p><p id="p-0121" num="0120">Indeed, the counter register RCNT may be configured to implement said realignment, either by resetting the low weight bits HSCNT_lsb at the end of said period of the low-frequency clock signal LPclk, or by locking the value of the low weight bits HSCNT_lsb at a limit value equal to the ratio of the second frequency (i.e. the frequency of the high-frequency clock signal HSclk) to the first frequency (i.e. the frequency of the low-frequency clock signal LPclk), until the end of said period of the low-frequency clock signal LPclk.</p><p id="p-0122" num="0121">This corresponds to a single-shot (as opposed to free-running) operation of the counter register RCNT and reset at each period of the low-frequency clock signal LPclk. In other terms, the counter register RCNT is configured to stop when it reaches a limit value (equal to said ratio between the frequencies, woo in the example given previously in relation to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>) and to restart at o at each period of the low-frequency clock signal LPclk. The central processing unit CPU may periodically update the limit value to minimise the error and compensate for the drift.</p><p id="p-0123" num="0122">In summary, a technique for generating and communicating the value of the reference time base of the microcontroller, in a counter register permanently operating with a low-latency access for reading and programming in run mode has been described. The value of the reference time base may benefit from drift compensations and from a mode transition mechanism that may be automatic or programmable. In examples of embodiments, the counter register may be obtained by means of a counter duplicated in the high-frequency domain, or of a counter in the high-frequency domain based on a combination of a counter updated at high frequency in the run mode and of a counter always available updated at lower frequency.</p><p id="p-0124" num="0123">While this invention has been described with reference to illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications and combinations of the illustrative embodiments, as well as other embodiments of the invention, will be apparent to persons skilled in the art upon reference to the description. It is therefore intended that the appended claims encompass any such modifications or embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for communicating a value of a reference time base stored in a counter register accessible by a central processing unit, the method comprising:<claim-text>generating a low-frequency clock signal, having a first frequency, in a standby mode and in a run mode of the CPU;</claim-text><claim-text>generating a high-frequency clock signal, having a second frequency higher than the first frequency, in the run mode;</claim-text><claim-text>updating the value of the reference time base at each period of the low-frequency clock signal in the standby mode; and</claim-text><claim-text>accessing the counter register with the high-frequency clock signal in the run mode.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the counter register comprises:<claim-text>a read register read accessible by the CPU and storing the value of the reference time base, and</claim-text><claim-text>a comparison register write accessible by the CPU and storing a value of a programmed interrupt instant.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the value of the reference time base is updated by an increment at each period of the low-frequency clock signal in the standby mode, and wherein the value of the reference time base is updated by an increment at each period of the high-frequency clock signal in the run mode.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:<claim-text>realigning the value of the reference time base updated at each period of the high-frequency clock signal in the run mode at each period of the low-frequency clock signal,</claim-text><claim-text>wherein realigning comprises either a jump to a next value equal to a multiple of a ratio of the second frequency to the first frequency at an end of the period of the low-frequency clock signal, or a stop on a value equal to a multiple of a ratio until the end of the period of the low-frequency clock signal.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the value of the reference time base, stored in the counter register accessible by the CPU, is updated at each period of the low-frequency clock signal in the run mode.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>,<claim-text>wherein a value of the reference time base stored in a root counter register is updated at each period of the low-frequency clock signal in the standby mode and in the run mode, and</claim-text><claim-text>wherein a value of the reference time base stored in the counter register, accessible by the CPU, is synchronized to the value of the reference time base of the root counter register at each period of the low-frequency clock signal in the run mode.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref>,<claim-text>wherein the counter register, accessible by the CPU, stores high weight bits and low weight bits of the value of the reference time base,</claim-text><claim-text>wherein the value of the high weight bits is synchronized to the value of the reference time base of the root counter register at each period of the low-frequency clock signal in the run mode, and</claim-text><claim-text>wherein the value of the low weight bits is updated at each period of the high-frequency clock signal in the run mode.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising realigning the value of the low weight bits on each period of the low-frequency clock signal, wherein realigning comprises either resetting the low weight bits at an end of the period of the low-frequency clock signal, or locking the value of the low weight bits at a limit value equal to a ratio of the second frequency to the first frequency until the end of the period of the low-frequency clock signal.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein a value of a programmed interrupt instant stored in a comparison register of the counter register, write accessible by the CPU, is synchronized in a comparison register belonging to the root counter register before each transition from the run mode to the standby mode.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A microcontroller integrated circuit comprising:<claim-text>a central processing unit (CPU);</claim-text><claim-text>a time reference circuit comprising a counter register configured to store a value of a reference time base and to be accessible by the CPU;</claim-text><claim-text>a first clock circuit configured to generate a low-frequency clock signal having a first frequency in a standby mode and in a run mode; and</claim-text><claim-text>a second clock circuit configured to generate a high-frequency clock signal having a second frequency higher than the first frequency in the run mode,</claim-text><claim-text>wherein the time reference circuit is configured to update the value of the reference time base at each period of the low-frequency clock signal in the standby mode, and to clock an access to the counter register with the high-frequency clock signal in the run mode, and</claim-text><claim-text>wherein the integrated circuit is configured to operate in the standby mode and in the run mode.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The integrated circuit according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the counter register comprises a read register read accessible by the CPU and configured to store the value of the reference time base and a comparison register write accessible by the CPU and configured to store a value of a programmed interrupt instant.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The integrated circuit according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the time reference circuit comprises a logic circuit configured to update the value of the reference time base by an increment corresponding to the first frequency, at each period of the low-frequency clock signal in the standby mode, and to update the value of the reference time base by an increment corresponding to the second frequency, at each period of the high-frequency clock signal in the run mode.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The integrated circuit according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the time reference circuit further includes a drift compensation circuit configured to control the logic circuit in such a way as to realign the value of the reference time base updated at each period of the high-frequency clock signal in the run mode at each period of the low-frequency clock signal, the realignment comprising either a jump to the next value equal to a multiple of a ratio of the second frequency to the first frequency at an end of the period of the low-frequency clock signal, or a stop on a value equal to a multiple of a ratio until an end of the period of the low-frequency clock signal.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The integrated circuit according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the time reference circuit is further configured to update the value of the reference time base of the counter register accessible by the CPU at each period of the low-frequency clock signal in the run mode.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The integrated circuit according to <claim-ref idref="CLM-00014">claim 14</claim-ref>,<claim-text>wherein the time reference circuit further includes a root counter register configured to store the value of the reference time base updated at each period of the low-frequency clock signal in the standby mode and in the run mode, and</claim-text><claim-text>wherein the time reference circuit is configured to synchronize the value of the reference time base of the counter register accessible by the CPU to the value of the reference time base of the root counter register at each period of the low-frequency clock signal in the run mode.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The integrated circuit according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the counter register accessible by the CPU is adapted to store high weight bits and low weight bits of the value of the reference time base, and wherein the time reference circuit is configured to synchronize the value of the high weight bits to the value of the root counter register at each period of the low-frequency clock signal in the run mode, and to update the value of the low weight bits of the value of the reference time base at each period of the high-frequency clock signal in the run mode.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The integrated circuit according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the counter register accessible by the CPU is configured to realign the value of the low weight bits of the low-frequency clock signal, the realignment comprising either resetting the low weight bits at an end of the period of the low-frequency clock signal, or locking the value of the low weight bits at a limit value equal to a ratio of the second frequency to the first frequency until an end of the period of the low-frequency clock signal.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The integrated circuit according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the root counter register includes a comparison register, the time reference circuit being configured to synchronize a value of a programmed interrupt instant of the standby mode in a comparison register of the root counter register to a value of a programmed interrupt instant stored in the comparison register of the counter register write accessible by the CPU before each transition from the run mode to the standby mode.</claim-text></claim></claims></us-patent-application>