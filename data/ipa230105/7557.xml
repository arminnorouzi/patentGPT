<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007558A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007558</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943264</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20090101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>36</main-group><subgroup>16</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20180101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>76</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20090101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>40</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20090101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>36</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20180101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>76</main-group><subgroup>15</subgroup><symbol-position>L</symbol-position><classification-value>N</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20090101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>84</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>N</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20090101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>36</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>N</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20180101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>76</main-group><subgroup>23</subgroup><symbol-position>L</symbol-position><classification-value>N</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20090101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>88</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>N</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>36</main-group><subgroup>165</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>76</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>40</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180801</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>36</main-group><subgroup>03</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>76</main-group><subgroup>15</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>84</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>36</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>76</main-group><subgroup>23</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>88</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUTOMATICALLY SWITCHING COMMUNICATION PATHWAYS BETWEEN CONNECTED DEVICES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16542226</doc-number><date>20190815</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11490309</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943264</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15667514</doc-number><date>20170802</date></document-id><parent-status>ABANDONED</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>16542226</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Transform SR Brands LLC</orgname><address><city>Hoffman Estates</city><state>IL</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Shivam</last-name><first-name>Puneet</first-name><address><city>Schaumburg</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Favila</last-name><first-name>Angel Fernando</first-name><address><city>Lake in the Hills</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Shuttleworth</last-name><first-name>Nicholas James</first-name><address><city>Schaumburg</city><state>IL</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods for switching communication pathways between a mobile device and connected &#x201c;Internet of Things&#x201d; (IOT) device are described to improve scalability and communication between devices. An application on the mobile device may determine whether local or virtual local endpoints are available to route communications without using a remote IoT server endpoint. Communications and updates from multiple co-located, but not necessarily user-related connected devices may be aggregated, and sent to a remote IoT server to reduce the peak load scalability requirement of the server.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="193.89mm" wi="119.63mm" file="US20230007558A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="137.08mm" wi="146.73mm" file="US20230007558A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="193.21mm" wi="154.35mm" file="US20230007558A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="173.74mm" wi="152.82mm" file="US20230007558A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="207.60mm" wi="121.67mm" file="US20230007558A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="216.32mm" wi="156.72mm" file="US20230007558A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="212.77mm" wi="150.28mm" orientation="landscape" file="US20230007558A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="190.67mm" wi="160.95mm" orientation="landscape" file="US20230007558A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="197.27mm" wi="151.21mm" orientation="landscape" file="US20230007558A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">In an Internet of Things (IoT) network, a client computing device (e.g., a mobile device) typically sends control and monitoring requests to an IoT server, which communicates the message to an IoT device at a specific location. The IoT device's state can then be altered based upon the client device's original request. For example, an IoT device may be a thermostat, entertainment device, lighting system, fire alarm, or houseware appliance, and the device's power state (i.e., on/off, etc.) may be controlled remotely.</p><p id="p-0003" num="0002">However, this communication pathway contains inherent latencies because communications must pass through the remote IoT server, which is often a remote cloud server. Different types of processing that occur within various clouds may introduce some delays, and unpredictable heavy traffic over the network may contribute to latencies in communicating messages and requests between components. The cloud's location relative to the client computing device and IoT device can also contribute to delays. For example, if the IoT device is in New York, but the cloud server is in San Francisco, communications between the endpoints can typically require at least 2-4 seconds.</p><p id="p-0004" num="0003">Such latencies are not only inconvenient, but they can negatively affect user experience, since the delayed signals may appear to indicate an inefficient or malfunctioning system. Latency issues and heavy traffic are predictable in the current architecture, since each IoT device will be communicating their states and other diagnostic data to the IoT cloud. In addition, future homes and businesses are likely to have networks with even greater numbers of connected IoT devices. As such, faster and more efficient communication pathways will be necessary to handle increased growth and complexities of IoT networks.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0005" num="0004">This disclosure generally relates to managing communication pathways between Internet of Things (IoT) devices and components. The disclosed methods and systems detect whether a mobile client device is on the same network as a connected IoT device (e.g., a local network), or whether an alternative pathway (e.g., a virtual local network) is available. A determination may be made whether these communication pathways are faster than sending communications through a remote cloud server.</p><p id="p-0006" num="0005">In a local communication pathway, the client device and the IoT device can directly communicate to each other over WiFi, or another local network, without routing communications through a remote server endpoint. A virtual local network is identifiable as a local network in a region where the IoT device is directly reachable faster than via the remote cloud server. If neither option is available, then the client computing device may send communications, to the remote server endpoint, which in turn communicates to the IoT device via IoT cloud or local, direct communication. After receiving the client device's communication, the connected IoT device can send state updates and/or diagnostic information to the remote IoT cloud server. The IoT device may aggregate communications over a predetermined time before forwarding them to the IoT cloud server. In one aspect, an IoT device may serve as an IoT Devices Hub/Gateway, which aggregates communications from multiple IoT devices for a predetermined period, and forwards the communications to the IoT cloud server.</p><p id="p-0007" num="0006">In another embodiment, an IoT application can tag previously used locations and the mode of communication at those particular locations. Those saved locations can be used in later determinations for the optimal mode of communication.</p><p id="p-0008" num="0007">The disclosed methods and systems switch communication pathways for faster performance and reduced instantaneous scalability requirements on the IoT server. The present subject matter reduces the capital expenditure of setting up cloud servers at multiple locations for performance, redundancy, and scalability. Inherent latencies are reduced, as local communications can occur in the sub-second range, especially if the user is near the IoT device, and performance and user experience can be vastly improved.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an example general purpose computing environment in which embodiments of the invention may be implemented.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an exemplary system architecture for implementing an automatic switch between the IoT cloud and local communication in an IoT client application.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an exemplary system architecture for aggregating communications from IoT devices to the cloud server.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts an exemplary process for routing communications according to aspects of the present invention.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a process for switching communication pathways for optimal performance.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a sequence diagram for local communication and data aggregation on a master Gateway to the IoT cloud.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a sequence diagram for non-local communication in a conventional IoT system.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic diagram illustrating an example cloud-based server that may be used in accordance with aspects of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0017" num="0016">Various aspects of the present disclosure described herein are generally directed to systems, methods, and computer-readable storage media for, among other things, automatically switching communication pathways between a controlling device (e.g., a mobile device) and a controlled Internet of Things (IoT) device connected to a network. Communication may flow directly between a controlling device to the controlled device via a local or virtual local network, or from the controlling device to the controlled device, via an IoT cloud server, depending on the determined optimal communication pathway. An IoT client application, which runs on the controlling device, may be used to initiate communications.</p><p id="p-0018" num="0017">As used herein, a &#x201c;connected device&#x201d; refers to an addressable device having network connectivity that is configured to communicate with other computing devices via one or more networks. That is, a connected device is capable of serving as an endpoint, connection point, and/or a redistribution point of a communication session communicatively coupling the connected device with another network-connected computing node. In an embodiment, a connected device is an IoT client device (i.e., controlling device) and an IOT device (i.e., controlled device). In contrast, &#x201c;non-connected device&#x201d; refers to a non-addressable device lacking network connectivity that is not configured to communicate with other computing devices via one or more networks.</p><p id="p-0019" num="0018">The present disclosure provides methods and systems to enable the controlling device (i.e., client device) to directly communicate with the controlled device (i.e., IoT device) when the system determines that the devices are on the same network and/or in the same specified region. In an embodiment, when a communication pathway is determined to be more efficient than using the IoT cloud server, the IoT application will automatically switch to the local communication endpoint so the IoT application can communicate directly with the IoT device. The IoT device can then communicate with the IoT cloud server to report its state or other diagnostic data.</p><p id="p-0020" num="0019">In another embodiment, when the IoT client device and the IoT device are not on the same network (e.g., WLAN), the distance (e.g., number of hops) between the devices, and their distances to the IoT cloud server may be considered when determining the optimal communication pathway. For example, a user may be using his/her IoT client device in a neighbor's home, such that the IoT client device connected to the neighbor's network. The IoT device may be connected to the user's home network. If the number of hops between the IoT client device's network and the IoT device's network is less than the number of hops needed to communicate through the IoT cloud server, then the devices may switch to virtual local communication. Virtual local communication can provide a reduction in latency and similar benefits as local, direct communication between devices.</p><p id="p-0021" num="0020">In an embodiment, the switching of communication pathways may be done along with aggregating IoT device communication updates from co-located, but not necessarily related user devices. The IoT cloud server is subsequently updated to reduce the peak load scalability requirement of the IoT cloud server.</p><p id="p-0022" num="0021">According to an aspect of the subject matter, a system is provided for contextual interaction with connected devices. The system includes a client device having a display on which a user interface is presented. The user interface enables access to functionalities provided by the connected devices and the IoT application on the user device. The system monitors, at the mobile device, data representing a current position of the mobile device within a structure. The system also determines, at a first time, that the current position is within a threshold proximity of a first location of the structure. In response to determining that the current position is within the threshold proximity, the system updates the user interface to emphasize a first location interface corresponding to the first location over interfaces corresponding to other locations of the structure.</p><p id="p-0023" num="0022">Having briefly described an overview of embodiments of the invention, an example of a computing environment suitable for implementing aspects of the embodiments is described below. Referring to the figures generally and initially to <figref idref="DRAWINGS">FIG. <b>1</b></figref> in particular, an exemplary computing environment in which embodiments of the present invention is depicted and generally referenced as computing environment <b>100</b>. As utilized herein, the phrase &#x201c;computing system&#x201d; generally refers to a dedicated computing device with processing power and storage memory, which supports operating software that underlies the execution of software, applications, and computer programs thereon. As used herein, an application is a small in storage size, specialized program that is downloaded to the computing system or device. In some cases, the application is downloaded from an &#x201c;App Store&#x201d; such as APPLE's APP STORE or GOOGLE's ANDROID MARKET. After download, the application is generally installed on the computer system or computing device. As shown by <figref idref="DRAWINGS">FIG. <b>1</b></figref>, computing environment <b>100</b> includes bus <b>110</b> that directly or indirectly couples the following components: memory <b>120</b>, one or more processors <b>130</b>, I/O interface <b>140</b>, and network interface <b>150</b>. Bus <b>110</b> is configured to communicate, transmit, and transfer data, controls, and commands between the various components of computing environment <b>100</b>.</p><p id="p-0024" num="0023">Computing environment <b>100</b> typically includes a variety of computer-readable media. Computer-readable media can be any available media that is accessible by computing environment <b>100</b> and includes both volatile and nonvolatile media, removable and non-removable media. Computer-readable media may comprise both computer storage media and communication media. Computer storage media does not comprise, and in fact explicitly excludes, signals per se.</p><p id="p-0025" num="0024">Computer storage media includes volatile and nonvolatile, removable and non-removable, tangible and non-transient media, implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes RAM; ROM; EE-PROM; flash memory or other memory technology; CD-ROMs; DVDs or other optical disk storage; magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices; or other mediums or computer storage devices which can be used to store the desired information and which can be accessed by computing environment <b>100</b>.</p><p id="p-0026" num="0025">Communication media typically embodies computer-readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, communication media includes wired media, such as a wired network or direct-wired connection, and wireless media, such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.</p><p id="p-0027" num="0026">Memory <b>120</b> includes computer-storage media in the form of volatile and/or nonvolatile memory. The memory may be removable, non-removable, or a combination thereof. Memory <b>120</b> may be implemented using hardware devices such as solid-state memory, hard drives, optical-disc drives, and the like. Computing environment <b>100</b> also includes one or more processors <b>130</b> that read data from various entities such as memory <b>120</b>, I/O interface <b>140</b>, and network interface <b>150</b>.</p><p id="p-0028" num="0027">I/O interface <b>140</b> enables computing environment <b>100</b> to communicate with different input devices and output devices. Examples of input devices include a keyboard, a pointing device, a touchpad, a touchscreen, a scanner, a microphone, a joystick, and the like. Examples of output devices include a display device, an audio device (e.g., speakers), a printer, and the like. These and other I/O devices are often connected to processor <b>110</b> through a serial port interface that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port, or universal serial bus (USB). A display device can also be connected to the system bus via an interface, such as a video adapter which can be part of, or connected to, a graphics processor unit. I/O interface <b>140</b> is configured to coordinate I/O traffic between memory <b>120</b>, the one or more processors <b>130</b>, network interface <b>150</b>, and any combination of input devices and/or output devices.</p><p id="p-0029" num="0028">Network interface <b>150</b> enables computing environment <b>100</b> to exchange data with other computing devices (e.g., client device <b>210</b>, connected devices <b>230</b>A-C, and server <b>250</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) via any suitable network (e.g., network <b>250</b>). In a networked environment, program modules depicted relative to computing environment <b>100</b>, or portions thereof, may be stored in a remote memory storage device accessible via network interface <b>150</b>. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an example of a system architecture for use in an IoT network <b>200</b>, and various communication pathways for implementing aspects of the subject matter. In particular, pathways for a user to communicate with an IoT device at a remote location (e.g., a neighbor's home) are depicted. The overall system comprises the IoT cloud server <b>220</b>, the IoT device <b>230</b>, an IoT Devices Hub/Gateway <b>240</b>, and an IoT application on the mobile device <b>260</b>, as described herein. The components may communicate over a local IP network <b>290</b> through communication pathways <b>210</b> and <b>215</b>.</p><p id="p-0031" num="0030">The IoT server <b>220</b> is a communication endpoint in the network that maintains the service set identifier (SSID), the names and IP addresses of the IoT devices, and the IoT Devices Hub/Gateway IP address. In an embodiment, the server <b>220</b> can store a list of tagged locations where the IoT client application has previously identified the server, and maintain the local communication decision making threshold parameters for each location or region, as further described below (see <figref idref="DRAWINGS">FIG. <b>5</b></figref>). Network parameters may be measured at the IoT server, such as thresholds indicative of number of hops, or approximate distance.</p><p id="p-0032" num="0031">Additionally, the IoT server <b>220</b> can regularly provide any of the above information to the IoT client application on the IOT client device, and/or provide the information in response to a fetch request from the client. The server <b>220</b> may accomplish this by sending messages to its IoT client application on the mobile user devices. In this aspect, the server forms an association with the client applications to allow communication with the IoT Devices Hub/Gateway, where the components may, for example, communicate to determine a master component, and master IoT Devices Hub/Gateway. The master device(s) and hub may be determined based on proximity in a specified radius of a geographical location.</p><p id="p-0033" num="0032">The IoT device <b>230</b> communicates to the server to register and identify itself on the network <b>200</b>. After registration, the IoT device sends its current SSID, geo-location, name, IP address, and the IP address of the IoT Devices Hub/Gateway <b>240</b> to the IoT server <b>220</b>. An updated set of information is communicated to the server whenever there is a change in the SSID or the IP address of the IoT device <b>230</b> or IoT Devices Hub/Gateway <b>240</b>. By way of example and not limitation, the IoT device may be a thermostat, medical device, fire alarm, household appliance, or entertainment equipment.</p><p id="p-0034" num="0033">The IoT client application <b>260</b> runs on the IoT client device (e.g., a mobile device) and manages aspects of communication between system components, including threshold parameters for local communication decision making. For example, the IoT application can fetch the required number of hops to the server of IoT device, indicate distance from the IoT cloud server, and communicate network traffic congestion and/or other indicators related to threshold parameters used to determine optimal communication pathways. The IoT application may also utilize the host device's geo-location or IP address to identify these parameters.</p><p id="p-0035" num="0034">The IoT Devices Hub/Gateway <b>240</b> serves as a connection point between system components. The IoT Devices Hub/Gateway <b>240</b> enables packets, requests, and other communications to be relayed between the IoT client device, IoT devices <b>230</b>, and the IoT cloud server <b>220</b>. In an embodiment, the IoT device <b>230</b> may serve as the IoT Devices Hub/Gateway <b>240</b><i>b</i>. Similarly, traditional hubs, gateways, and hardware components able to connect and relay information between the various system components can serve as the Gateway. In another embodiment, a co-located, but not necessarily related device may serve as an IoT Device Hub/Gateway, and aggregate or route communications, in accordance with aspects of the present invention (e.g., Gateway <b>240</b><i>a </i>in the neighbor's home <b>220</b>, or Gateway <b>240</b><i>b </i>in the User's home <b>225</b>). The IoT Devices Hub/Gateway <b>240</b> may be chosen from a group or association of possible IoT Devices Hub/Gateways within the system, as further described below in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0036" num="0035">Under normal circumstances, the client computing device <b>260</b> makes all control and monitoring requests for an IoT device <b>230</b> at a specific location (e.g., the user's home) over an IP network <b>290</b> (e.g., LAN) to an IoT server endpoint <b>220</b>. The IoT server endpoint <b>220</b> has information about local communication endpoints (e.g., IoT Devices Hub/Gateway <b>240</b> and router <b>250</b>) to which the information may be forwarded. The IoT server <b>220</b> then communicates the request over IP network <b>290</b> to the IoT device <b>230</b>. Depending on the request received, the IoT device may, in response, communicate a notification back to the IoT server <b>220</b> updating its state information, or other diagnostic information. In an embodiment, notifications and communications from the IoT device may be aggregated at Gateway <b>240</b><i>b </i>for a period of time, and then forwarded to the IoT server <b>220</b>.</p><p id="p-0037" num="0036">As illustrated by communication pathway <b>210</b>, a user in a neighbor's home <b>220</b> makes a request through an application on a client device <b>260</b>, to alter the state of an IoT device <b>230</b> in the user's home <b>225</b>. For example, a user may request to switch off a light (e.g., the IoT device <b>230</b>). The request may be routed, using router <b>250</b><i>a </i>or a Gateway <b>240</b><i>a</i>, over an IP network <b>290</b> to the IOT server <b>220</b>. The server <b>220</b> then sends the request over an IP network <b>290</b> to the user's home. A router <b>250</b><i>b </i>can direct the request from the IP network to the IoT device <b>230</b> (i.e., the light), which executes the request and turns off. The IoT device <b>230</b> may then send a notification back to the IoT server <b>220</b> indicating that it has been turned off</p><p id="p-0038" num="0037">However, when a client computing device with an IoT application <b>260</b> connects to the same IP network <b>290</b> that has IoT devices, there is a possibility of switching to local communication so that the devices may directly communicate with each other. In an embodiment, the IoT client application <b>260</b> communicates using this local communication pathway <b>215</b> over WiFi direct. As such, local communication endpoints need not be obtained from the server. Local communication allows for faster performance for actions such as monitoring and control requests. This also reduces instantaneous scalability requirements on the IoT server, and reduces the investment in establishing IoT cloud servers in multiple areas. As a result, improved performance and redundancy can provide a highly available system to users. Moreover, when local communication happens with an IoT device, the action response comes directly from the IoT device after completion of the action, which eliminates time delays for notification updates.</p><p id="p-0039" num="0038">An example of this is illustrated by communications pathway <b>215</b>. A user in a neighbor's home <b>220</b> may request to alter the state of an IOT device <b>230</b> in the user's own home <b>225</b>. When the user connects to his/her neighbor's WiFi network, the IoT application may make a determination for a preferred communication pathway to forward the request. This may include determining whether the mobile device and the IoT device are in the same WiFi network, and if not, whether a faster, reachable local network is available without using the remote cloud server endpoint. If a more efficient pathway without the IoT cloud server is found, then requests to alter or monitor the state of the IoT device <b>230</b> in the user's home <b>225</b> are routed through a local network or virtual local network, and sent directly to the IoT device <b>230</b> in the user's home. In this example, both the local and virtual local network scenarios are represented by the IP network <b>290</b>. Subsequently, the IoT device may send state updates directly to the server. As further described in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, updates may also be aggregated at an IoT Devices Hub/Gateway <b>240</b> for a predetermined period, and forwarded the IoT server.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an exemplary architecture for aggregating all user communications to the IoT cloud server at a master IoT Devices Hub/Gateway <b>340</b>, and sending the communications from the master hub/gateway to the IoT cloud server <b>310</b>. This may be particularly useful in homes, buildings, and regions with a number of IoT devices attempting to communicate their states and diagnostic data to the IoT cloud server. An apartment complex or small neighborhood, for example, may have several requests per second going out of that region to the same IoT cloud server, and this method ensures that all requests are efficiently aggregated, in order to reduce peak scalability load of the IoT cloud server.</p><p id="p-0041" num="0040">As discussed above in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, IoT devices may serve as an IoT Devices Hub/Gateway to aggregate and send communication updates to the IoT cloud server about the IoT device and/or other IoT devices on the local network or virtual local network. That is, any IoT device can act as an IoT Devices Hub/Gateway <b>320</b>, <b>330</b>, <b>340</b>, <b>350</b>, <b>360</b> to send communications to the IoT server <b>310</b>. Such communications may include the SSID and IP address of one or more IoT devices to the IoT application using WiFi Direct.</p><p id="p-0042" num="0041">The IoT devices <b>320</b>, <b>330</b>, <b>350</b>, and <b>360</b> forwarding communications to the master <b>340</b> may be unrelated to each other and controlled by separate users (e.g., Users A, B, D, and E). Alternatively, the devices may be operated by a single user, and receive communications from information input on that user's client device and IoT application.</p><p id="p-0043" num="0042">In an embodiment, any device capable of communicating with the IoT server <b>310</b> may become a virtual IoT Devices Hub/Gateway, and perform the same functionality as the IoT Devices Hub/Gateway. For example, a non-IoT device such as a thermostat may serve as the virtual IoT Devices Hub/Gateway, if it can aggregate communications and forward them to the IoT server. The virtual IoT device may also request communications from other IoT devices and receive forwarded communications from those same devices.</p><p id="p-0044" num="0043">In an alternative embodiment, the communications can be aggregated over &#x2018;t&#x2019; time units before being sent to the IoT cloud server. The communications may originate from a single user or plurality of unrelated users within a region. This method can vastly reduce the IoT cloud server's peak load scalability requirements by a single digit or double digit factor, especially if the user is near the IoT device. If the number of connected devices is in the range of millions, or even billions, the scalability required for a service provider may be reduced even more.</p><p id="p-0045" num="0044">Similarly, the server <b>310</b> can aggregate messages and send to several users in a co-located geographical region. The IoT cloud <b>310</b> has the option of sending aggregated messages (e.g., http or any other protocol based messages) for a group of users to the master IoT Devices Hub/Gateway, which further distributes the messages to the respective members of the group.</p><p id="p-0046" num="0045">The IoT cloud server <b>310</b> knows the location of IoT devices, based on either the IP address of the GPS in the IoT Devices Hub/Gateway <b>340</b>, and the respective owner (i.e., client device) controlling those IoT devices. The server <b>310</b> may send a message to the client devices within a selected region, in order to form an association.</p><p id="p-0047" num="0046">For example, the IoT application may receive a message from the IoT server to accept an invitation to form and/or join a group comprising possible IoT Devices Hubs/Gateways. In an embodiment, the IoT cloud server may form a group based on a security protocol. For example, a positive response assuring full privacy of the user may allow that user's IoT device to join a group.</p><p id="p-0048" num="0047">The IoT cloud <b>310</b> can then choose one of the potential IoT Devices Hubs/Gateways to be the master device <b>340</b> to aggregate requests and send the identity (e.g., IP address) of the requesting IoT device to all other users of the group. The master may be selected using a back end algorithm running on the IoT server. In exemplary embodiments, the algorithm determines the master IoT Devices Hub/Gateway based on a time-slicing mechanism, power availability, a round-robin alternation, or number of requests sent out in a particular time slot. That is, the IoT device that has sent out the highest quantity of requests during a particular time period becomes the master IoT Devices Hub/Gateway in the future. Other considerations can include network speed, location, or other efficiency-related criteria to enable optimal communication between components.</p><p id="p-0049" num="0048">The IoT cloud server <b>310</b> instructs the IoT devices <b>320</b>, <b>330</b>, <b>340</b>, <b>350</b>, <b>360</b> to send their updates to the IoT cloud server via the master IoT Devices Hub/Gateway <b>340</b>. The master then aggregates the communication for a designated period of time, and forwards the communications to the IoT cloud server <b>310</b> in a single action.</p><p id="p-0050" num="0049">There can also additional security features protecting communications between each IoT device and the master gateway device. A separate pre-negotiated encryption key can be used by each IoT device to encrypt communication packets sent to the master IoT Devices Hub/Gateway <b>340</b>. The key may be sent to and used by the IoT cloud server <b>310</b> to decrypt the communication packets forwarded from the master device. The encryption key can be changed periodically to ensure greater security, and in an embodiment, either the IoT application, or the IoT device can communicate the encryption key to the IoT cloud server.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart illustrating an embodiment of a process for determining an automatic switch of communication pathways. In box <b>410</b>, the IoT application running on the client device may initiate a check for a local communication pathway and a virtual local communication pathway to communicate with an IoT device. This check can occur before the user requests to communicate with an IoT device, such as when a change of network is detected, or when the request is initiated. To determine if local communication is available, the IoT application can check whether the client and IoT devices are on the same network, and/or whether the IoT device is reachable via WiFi direct.</p><p id="p-0052" num="0051">Virtual local communication may occur if the client device and the IoT are not on the same local network, but they are within a specified region (e.g., a tagged region), wherein communications can occur through local networks, without using the IoT cloud server. For example, if the user operating the client device is at a neighbor's house, a specified region where the device has been tagged, or on local network separate from the IoT device then virtual local communication may be available when the user connects to the neighbor's WiFi network (see <figref idref="DRAWINGS">FIG. <b>2</b></figref>) or another local network.</p><p id="p-0053" num="0052">If neither local nor virtual local communication is available, then the optimal communication pathway will be determined to be IoT cloud server <b>420</b>. In such a case, the requests are then sent to the IoT cloud server <b>440</b>. Otherwise, the IoT application will compare the available options to determine the optimal communication pathway <b>420</b>. In an embodiment, if local or virtual local communication is available, either one may be designated by the IoT application to be automatically selected as the optimal communication pathway. For example, the IoT application may be configured to determine that local communication is the optimal communication pathway, and to automatically route communications to the local communication endpoint <b>430</b>.</p><p id="p-0054" num="0053">The decision to use local communication <b>430</b> or virtual local communication <b>450</b> instead of the IoT cloud server may be determined using one or more combinations of network speed, efficiency, and diagnostic considerations. The number of hops between the controlling device and the IoT device may be factored into the decision making process. The number of hops may be calculated when the user moves into a new location, and even before the IoT application is used. If the number of hops is less than a predetermined amount (e.g., three hops), then local or virtual communication is used.</p><p id="p-0055" num="0054">The parameter information is used to determine optimal communication pathways, either through the IoT cloud server or direct local communication to the IoT device, and may occur during registration of the IoT device on which the IoT client application is used. In an embodiment, if the threshold parameter is not met, then communication will occur locally. For example, if the IoT location is less than the threshold distance from the IoT cloud server, then local, direct communication between the IoT client device and the IoT device occurs locally. If the distance exceeds the threshold, communication is routed through the IoT cloud server. In some situations, due to calculation latency, the IoT cloud server will be used initially, instead of the optimal pathway, as determined by the threshold determination process. In subsequent instances, however, the optimal communication pathway will be taken.</p><p id="p-0056" num="0055">In an embodiment, when the mobile user device disconnects from a known WiFi network, the IoT application on the device may check if the mobile device is still in the same network as the IoT device and whether the IoT device may be reached faster with the local network than via the cloud network. If the connection is not quicker through the local network, then the IoT application may move its IoT application's communication endpoint from the local communication pathway to the IoT server in the cloud. The selection of optimal communication pathways contributes to significantly decreasing communication latency, and enables actions and operations to be performed quicker, to result in an improved user experience.</p><p id="p-0057" num="0056">Once an optimal communication pathway has been determined <b>420</b>, requests are sent from the local communication endpoint <b>430</b>, the IoT cloud server endpoint <b>440</b>, or the virtual local communication endpoint <b>450</b> to the IoT device <b>460</b>.</p><p id="p-0058" num="0057">The IoT cloud communication endpoints may be pre-defined and/or known in the IoT application, and the local IoT device endpoints may be retrieved from the IoT server. Information about the IoT device endpoints may be subject to an authentication process. For example, valid user credentials may be required to access the IoT device endpoints.</p><p id="p-0059" num="0058">Similarly, local communication endpoints for each IoT device are obtained from the server. Each endpoint serves as the routing point for IoT control and monitoring requests for an IoT device. IoT application requests are forwarded to the local communication endpoint for the selected IoT device, and routed to the corresponding IoT device.</p><p id="p-0060" num="0059">The IoT device receives the request and can send an update to the cloud server <b>470</b>. The update may be, for example, information indicative of a state change of the IoT device, diagnostic information, or other information, depending on the request received from the IoT application. Alternatively, the IoT device may also be an IoT Devices Hub/Gateway, and the update information sent to the cloud server may be an aggregation of communications from one or more related or unrelated devices, as further described in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an example embodiment of a process of the present invention, wherein communications are routed through a certain pathway, based on the IoT device's location. The IoT application can record a location point when an optimal communication pathway has been established, and search for optimal communication pathways that have been previously established at that current location. Box <b>510</b> indicates that the IoT application may use its current location, as established by the mobile device's GPS or IP address, to search through a location list stored in the IoT application. The stored list indicates previously identified optimal communication paths at that current location, or within a pre-determined radius of that current location.</p><p id="p-0062" num="0061">In box <b>520</b>, the IoT application determines whether the present location is within the stored list, or within a certain distance range of a location in the list. If the location is identified, then aspects of box <b>515</b> are invoked, wherein the communication endpoint is fetched from the stored list. The communication endpoint may be the IoT device or IoT cloud server, for example. From there, the IoT device connects to that respective endpoint for any control or monitoring communications until a further change in location is identified.</p><p id="p-0063" num="0062">Alternatively, if the IoT application determines that the present location is not within the stored list (i.e., no pre-determined pathway can be identified at that location), the box <b>530</b> is invoked. In this instance, all control and monitoring communication requests continue to be routed through the default communication endpoint (e.g., the IoT cloud server, direct communication, etc.). Simultaneously, a process is initiated, in parallel, to determine an optimal endpoint for the present location. This may occur using the process described in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, for example. Once an optimal communication pathway is determined, the pathway is stored locally, and the list is updated to indicate the optimal pathway for that location. The list may then be sent to the IoT server using any of the methods described herein, in order to update the cloud server. Then, the same optimal communication pathway is used for routing communications until a change of location occurs beyond a threshold amount (e.g., &#x2018;x&#x2019; units). Any changes in the location tag list may be automatically saved, and propagated to the IoT server.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an exemplary sequence diagram for local communication and data aggregation on a master IoT Devices Hub/Gateway, and sending such communications in a batch to the IoT cloud server. The depicted embodiment illustrates a local communication pathway between an IoT application residing on a mobile device, and the IoT device. Communications may travel via WiFi or the Internet, after a determination that the IoT device and IoT control application and mobile device are within close proximity, when compared with the IoT cloud server/provider.</p><p id="p-0065" num="0064">The mobile device running an IoT application <b>620</b> may first determine if the mobile device is closer to the IoT device than the IoT cloud server <b>622</b>. This determination may be made through one or combination of methods described herein, and as illustrated in <figref idref="DRAWINGS">FIGS. <b>4</b>-<b>5</b></figref>. If it is determined that the mobile application is closer to the IoT device than the cloud server, a command to send the communication through direct communication can be initiated and executed <b>660</b>. The IoT device <b>610</b> may then alter an attribute in accordance with the received command, and send a notification back to the mobile device and IoT application through the same communication pathway, to indicate that the attribute has been changed <b>615</b>. Moreover, the IoT device <b>610</b> can send a notification to update the IoT cloud server <b>640</b> that the attribute has changed <b>625</b>. The notification may first go through a Gateway device (e.g., User A) <b>630</b>, where it may be aggregated along with notifications from co-located, but not necessarily related local IoT devices before being forwarded to the IoT cloud server in a batch <b>635</b>.</p><p id="p-0066" num="0065">In another aspect of the embodiment, a second Gateway (e.g., User B) <b>650</b> has information regarding one or more changed attributes of one or more IoT devices. The second Gateway <b>650</b> may be a geographical neighbor of the first Gateway <b>650</b>, or within a predetermined number of hops. Control and monitoring communications and updates from IoT devices within the second Gateway's network may have been received and aggregated in a similar method as described with respect to mobile device IoT application <b>620</b>, IoT device <b>620</b>, attribute change <b>625</b>, and Gateway <b>630</b>. The aggregated communications can be forwarded to the first Gateway <b>630</b>, and from there, sent in a batch <b>635</b> to the IoT cloud server.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a similar sequence diagram, but illustrates an exemplary communication pathway using non-local communication between an IoT application on a mobile device and an IoT device. Such non-local communication is the conventional communication method, and may occur via an IoT cloud service when a determination is made that the IoT application/mobile device and are within closer proximity to an IoT cloud server than the IoT device.</p><p id="p-0068" num="0067">At <b>725</b>, the IoT application on the mobile device <b>720</b> can make a determination that the mobile device is closer to the IoT cloud service than the IoT device. Any of the above methods, or combinations of methods described above (see e.g., <figref idref="DRAWINGS">FIGS. <b>5</b>-<b>6</b></figref>) can be utilized to make that determination. When it is determined that the IoT cloud services (e.g., a cloud server) <b>730</b> are closer in proximity than the IoT device, a command to control or alter the state of an IoT device may be sent to an IoT cloud server <b>740</b>. Then, the IoT cloud services can forward the control command <b>750</b> to the IoT device <b>710</b>.</p><p id="p-0069" num="0068">In response to the received command, the IoT device <b>710</b> can send a notification back to the IoT cloud server <b>730</b> indicating that the attribute has been changed. The server then sends the change attribute notification to the mobile device <b>770</b>, and the IoT application can be updated with the new IoT device information.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic diagram illustrating an example cloud-based server <b>800</b> that may be used in accordance with the present disclosure. A cloud-based server <b>800</b> may provide infrastructure services, platform services, and software application services. In an embodiment, cloud-based server <b>800</b> is used to implement at least a portion of server <b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The infrastructure services may include virtualized resources, such as virtual machines, virtual storage, and so on. The infrastructure services may also include virtualized services, such as database services and others. Each of these infrastructure services may be deployed in an infrastructure service layer <b>820</b>.</p><p id="p-0071" num="0070">The scale and various aspects, such as data, connectivity, and dependency relationships within and between service components, of an infrastructure service deployment are configurable by an administrator user. For instance, the administrator user may submit a configuration specification to cloud-based server <b>800</b> via a frontend interface <b>850</b> and service manager <b>860</b>. The configuration specification can be translated into infrastructure and kernel level APIs calls that create, re-create, move, or delete components such as virtual machines and services, and assign or change attributes of the components.</p><p id="p-0072" num="0071">In addition to the infrastructure services, cloud-based server <b>800</b> may also provide platform services, such as an environment for running virtual machines or a framework for developing and launching a particular type of software applications. The platform services may be implemented in a platform service layer <b>830</b> over the infrastructure service layer <b>820</b>, and may employ one or more infrastructure services configured in a particular manner. Configuration of platform services can be accomplished by program code written according to the APIs of the platform services and, optionally, the APIs of the infrastructure services that are employed in enabling the platform services.</p><p id="p-0073" num="0072">In some examples, cloud-based server <b>800</b> may also provide software application services in an application service layer <b>840</b>. A software application can be installed on one or more virtual machines or deployed in an application framework in the platform service layer <b>830</b>. The software application can also communicate with one or more infrastructure service components, such as databases, in the infrastructure layer <b>820</b>. The installation and configuration of the software application in the application service layer <b>840</b> can be accomplished through APIs of the software itself and the APIs of the underlying platform and infrastructure service components.</p><p id="p-0074" num="0073">Depending on the type of services, a cloud-service user may be granted different levels of control in configuring the services. For example, if a software application service is employed, an administrator user is given control over how the software application is configured. If a platform service is employed, an administrative user is given control over how the platform and/or application frameworks are configured. Similarly, if infrastructure services are employed, an administrative user is given control over the particular infrastructure services employed.</p><p id="p-0075" num="0074">The illustrations of the aspects described herein are intended to provide a general understanding of the structure of the various aspects. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other aspects may be apparent to those of skill in the art upon reviewing the disclosure. Other aspects may be utilized and derived from the disclosure, such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Accordingly, the disclosure and the figures are to be regarded as illustrative rather than restrictive. It is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the illustrations of the aspects described herein are intended as examples of implementing the claims and other equivalent features and acts are intended to be within the scope of the claims.</p><p id="p-0076" num="0075">The techniques, or certain aspects or portions thereof, may, for example, take the form of program code (i.e., instructions) embodied in tangible storage media or memory media implemented as storage devices, such as magnetic or optical media, volatile or non-volatile media, such as RAM (e.g., SDRAM, DDR SDRAM, RDRAM, SRAM, etc.), ROM, etc., that may be included in computing devices or accessible by computing devices. When the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the disclosure. In the case of program code execution on programmable computers, the computing device generally includes a processor, a storage medium readable by the processor (including volatile and non-volatile memory and/or storage elements), at least one input device, and at least one output device. One or more programs that may implement or utilize the processes described in connection with the disclosure, e.g., through the use of an application programming interface (API), reusable controls, or the like. Such programs are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.</p><p id="p-0077" num="0076">It should be understood that the various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. The subject matter presented herein may be implemented as a computer process, a computer-controlled apparatus or a computing system or an article of manufacture, such as a computer-readable storage medium. The terms &#x201c;circuitry&#x201d;, &#x201c;component&#x201d;, or &#x201c;module&#x201d; are used interchangeably throughout and include hardware components such as hardware interrupt controllers, hard drives, network adaptors, graphics processors, hardware based video/audio codecs, and the firmware used to operate such hardware. The terms &#x201c;circuitry&#x201d;, &#x201c;component&#x201d;, or &#x201c;module&#x201d; can also include microprocessors, application specific integrated circuits, and processors, e.g., cores of a multi-core general processing unit that perform the reading and executing of instructions, configured by firmware and/or software. Processor(s) can be configured by instructions loaded from memory, e.g., RAM, ROM, firmware, and/or mass storage, embodying logic operable to configure the processor to perform a function(s).</p><p id="p-0078" num="0077">In an example embodiment, where circuitry includes a combination of hardware and software, an implementer may write source code embodying logic that is subsequently compiled into machine readable code that can be executed by hardware. Since one skilled in the art can appreciate that the state of the art has evolved to a point where there is little difference between hardware implemented functions or software implemented functions, the selection of hardware versus software to effectuate herein described functions is merely a design choice. Put another way, since one of skill in the art can appreciate that a software process can be transformed into an equivalent hardware structure, and a hardware structure can itself be transformed into an equivalent software process, the selection of a hardware implementation versus a software implementation is left to an implementer</p><p id="p-0079" num="0078">Each of the processes, methods and algorithms described in the preceding sections may be embodied in, and fully or partially automated by, code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non-transitory computer-readable medium or computer storage device, such as hard drives, solid state memory, optical disc and/or the like. The processes and algorithms may be implemented partially or wholly in application-specific circuitry. The results of the disclosed processes and various aspects of disclosed processes may be stored, persistently or otherwise, in any type of non-transitory computer storage such as, e.g., volatile or non-volatile storage. The various features and processes described above may be used independently of one another, or may be combined in various ways. All possible combinations and sub combinations are intended to fall within the scope of this disclosure. In addition, certain methods or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence, and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example, described blocks or states may be performed in an order other than that specifically disclosed, or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial, in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example, elements may be added to, removed from or rearranged compared to the disclosed example embodiments.</p><p id="p-0080" num="0079">It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used, and that these items or portions thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively, in other embodiments some or all of the software modules and/or systems may execute in memory on another device and communicate with the illustrated computing systems via inter-computer communication. Furthermore, in some embodiments, some or all of the systems and/or modules may be implemented or provided in other ways, such as at least partially in firmware and/or hardware, including, but not limited to, one or more application-specific integrated circuits (ASICs), standard integrated circuits, controllers (e.g., by executing appropriate instructions, and including microcontrollers and/or embedded controllers), field-programmable gate arrays (FPGAs), complex programmable logic devices (CPLDs), etc. Some or all of the modules, systems and data structures may also be stored (e.g., as software instructions or structured data) on a computer-readable medium, such as a hard disk, a memory, a network or a portable media article to be read by an appropriate drive or via an appropriate connection. For purposes of this specification and the claims, the phrase &#x201c;computer-readable storage medium&#x201d; and variations thereof, does not include waves, signals, and/or other transitory and/or intangible communication media. The systems, modules and data structures may also be transmitted as generated data signals (e.g., as part of a carrier wave or other analog or digital propagated signal) on a variety of computer-readable transmission media, including wireless-based and wired/cable-based media, and may take a variety of forms (e.g., as part of a single or multiplexed analog signal, or as multiple discrete digital packets or frames). Such computer program products may also take other forms in other embodiments. Accordingly, the present disclosure may be practiced with other computer system configurations.</p><p id="p-0081" num="0080">Conditional language used herein, such as, among others, &#x201c;can,&#x201d; &#x201c;could,&#x201d; &#x201c;might,&#x201d; &#x201c;may,&#x201d; &#x201c;e.g.&#x201d; and the like, unless specifically stated otherwise, or otherwise understood within the context as used, is generally intended to convey that certain embodiments include, while other embodiments do not include, certain features, elements, and/or steps. Thus, such conditional language is not generally intended to imply that features, elements and/or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding, with or without author input or prompting, whether these features, elements and/or steps are included or are to be performed in any particular embodiment. The terms &#x201c;comprising,&#x201d; &#x201c;including,&#x201d; &#x201c;having&#x201d; and the like are synonymous and are used inclusively, in an open-ended fashion, and do not exclude additional elements, features, acts, operations and so forth. Also, the term &#x201c;or&#x201d; is used in its inclusive sense (and not in its exclusive sense) so that when used, for example, to connect a list of elements, the term &#x201c;or&#x201d; means one, some or all of the elements in the list.</p><p id="p-0082" num="0081">While certain example embodiments have been described, these embodiments have been presented by way of example only and are not intended to limit the scope of the disclosure. Thus, nothing in the foregoing description is intended to imply that any particular feature, characteristic, step, module or block is necessary or indispensable. Indeed, the novel methods and systems described herein may be embodied in a variety of other forms; furthermore, various omissions, substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the disclosure. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-10" num="01-10"><claim-text><b>1</b>-<b>10</b>. (canceled)</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method for a communication between devices comprising:<claim-text>storing a list of one or more WiFi access points that a mobile device has connected to;</claim-text><claim-text>storing a decision making threshold parameter for each access point of the one or more access points; and</claim-text><claim-text>determining an optimal pathway for the communication from the mobile device to a primary controlled device, wherein:<claim-text>the optimal pathway comprises at least one hop from at least one secondary controlled device,</claim-text><claim-text>the primary controlled device is an Internet of Things (IoT) device, and</claim-text><claim-text>the optimal pathway is determined according to a distance between the IoT device and an IoT cloud server.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein an application operating on the mobile device is operable to generate the optimal pathway.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the method comprises selecting the optimal pathway from a plurality of pathways according to at least one of network traffic, location of the at least one secondary controlled device, and availability of at least one endpoint.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the at least one endpoint comprises a virtual local endpoint.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the method comprises sending the communication from the mobile device to the primary controlled device through the optimal pathway.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the optimal pathway does not include a server.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the optimal pathway comprises a WiFi direct connection.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the optimal pathway is determined according to a number of hops between the mobile device and the primary controlled device.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the method comprises receiving one or more state updates from a plurality of connected devices and routing the one or more state updates to a server.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the method comprises compiling, via the at least one secondary controlled device, one or more state updates for a period of time.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A system for communication comprising:<claim-text>a mobile device configured to:<claim-text>store a list of one or more WiFi access points that the mobile device has connected to;</claim-text><claim-text>store a decision making threshold parameter for each access point of the one or more access points; and</claim-text><claim-text>determine an optimal pathway between the mobile device and a primary controlled device, wherein:<claim-text>the optimal pathway comprises at least one hop from at least one secondary controlled device,</claim-text><claim-text>the primary controlled device is an Internet of Things (IoT) device, and</claim-text><claim-text>the optimal pathway is determined according to a distance between the IoT device and an IoT cloud server.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein an application operating on the mobile device is operable to generate the optimal pathway.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the mobile device is configured to select the optimal pathway from a plurality of pathways according to at least one of network traffic, location of the at least one secondary controlled device, and availability of at least one endpoint.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The system of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the at least one endpoint comprises a virtual local endpoint.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the mobile device is configured to send data from the mobile device to the primary controlled device through the optimal pathway.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the optimal pathway does not include a server.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the optimal pathway comprises a WiFi direct connection.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the optimal pathway is determined according to a number of hops between the mobile device and the primary controlled device.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the mobile device is configured to send one or more state updates from a plurality of connected devices to a server.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein mobile device is configured to receive one or more state updates compiled for a period of time by the at least one secondary controlled device.</claim-text></claim></claims></us-patent-application>