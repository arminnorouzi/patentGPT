<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007303A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007303</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942307</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>60</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>60</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">THREE-DIMENSIONAL DATA ENCODING METHOD, THREE-DIMENSIONAL DATA DECODING METHOD, THREE-DIMENSIONAL DATA ENCODING DEVICE, AND THREE-DIMENSIONAL DATA DECODING DEVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/JP2021/011124</doc-number><date>20210318</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17942307</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Panasonic Intellectual Property Corporation of America</orgname><address><city>Torrance</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>IGUCHI</last-name><first-name>Noritaka</first-name><address><city>Osaka</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>SUGIO</last-name><first-name>Toshiyasu</first-name><address><city>Osaka</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A three-dimensional data encoding method includes: obtaining an attribute information item of a three-dimensional point; executing an encoding process that executes a transform process on a numerical value indicated by the attribute information item and encodes the attribute information item or that encodes the attribute information item without executing the transform process, the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation; and generating a bitstream including the attribute information item encoded and a transform identification information item indicating whether the transform process has been executed.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="121.07mm" wi="158.75mm" file="US20230007303A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="207.69mm" wi="162.14mm" orientation="landscape" file="US20230007303A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="174.24mm" wi="126.75mm" file="US20230007303A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="193.46mm" wi="123.36mm" orientation="landscape" file="US20230007303A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="42.25mm" wi="79.59mm" file="US20230007303A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="201.42mm" wi="92.20mm" orientation="landscape" file="US20230007303A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="41.91mm" wi="80.77mm" file="US20230007303A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="201.68mm" wi="93.56mm" orientation="landscape" file="US20230007303A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="116.67mm" wi="120.65mm" orientation="landscape" file="US20230007303A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="86.53mm" wi="80.26mm" orientation="landscape" file="US20230007303A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="190.58mm" wi="82.04mm" orientation="landscape" file="US20230007303A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="112.78mm" wi="118.28mm" orientation="landscape" file="US20230007303A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="185.34mm" wi="143.59mm" file="US20230007303A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="156.21mm" wi="127.17mm" file="US20230007303A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="112.52mm" wi="133.10mm" file="US20230007303A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="143.59mm" wi="138.60mm" file="US20230007303A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="105.83mm" wi="142.32mm" file="US20230007303A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="41.91mm" wi="82.13mm" file="US20230007303A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="205.32mm" wi="93.90mm" orientation="landscape" file="US20230007303A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="41.91mm" wi="80.77mm" file="US20230007303A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="204.98mm" wi="93.90mm" orientation="landscape" file="US20230007303A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="222.59mm" wi="127.93mm" orientation="landscape" file="US20230007303A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="203.79mm" wi="60.03mm" orientation="landscape" file="US20230007303A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="194.48mm" wi="152.32mm" orientation="landscape" file="US20230007303A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="69.51mm" wi="94.91mm" file="US20230007303A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="117.77mm" wi="101.77mm" file="US20230007303A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="233.43mm" wi="99.74mm" orientation="landscape" file="US20230007303A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="148.67mm" wi="151.05mm" file="US20230007303A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="130.73mm" wi="150.03mm" file="US20230007303A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="183.47mm" wi="122.09mm" orientation="landscape" file="US20230007303A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="173.48mm" wi="124.12mm" orientation="landscape" file="US20230007303A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="192.87mm" wi="112.18mm" file="US20230007303A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="201.25mm" wi="152.15mm" file="US20230007303A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="192.45mm" wi="114.13mm" file="US20230007303A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="230.04mm" wi="115.99mm" file="US20230007303A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="240.20mm" wi="106.00mm" file="US20230007303A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="201.34mm" wi="115.57mm" file="US20230007303A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="234.53mm" wi="103.12mm" file="US20230007303A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="203.62mm" wi="103.97mm" file="US20230007303A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00039" num="00039"><img id="EMI-D00039" he="215.05mm" wi="150.79mm" orientation="landscape" file="US20230007303A1-20230105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00040" num="00040"><img id="EMI-D00040" he="209.72mm" wi="97.11mm" orientation="landscape" file="US20230007303A1-20230105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00041" num="00041"><img id="EMI-D00041" he="176.78mm" wi="145.54mm" file="US20230007303A1-20230105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00042" num="00042"><img id="EMI-D00042" he="207.35mm" wi="153.50mm" orientation="landscape" file="US20230007303A1-20230105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00043" num="00043"><img id="EMI-D00043" he="141.56mm" wi="97.37mm" file="US20230007303A1-20230105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00044" num="00044"><img id="EMI-D00044" he="103.04mm" wi="137.24mm" file="US20230007303A1-20230105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00045" num="00045"><img id="EMI-D00045" he="216.49mm" wi="75.95mm" file="US20230007303A1-20230105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00046" num="00046"><img id="EMI-D00046" he="166.79mm" wi="153.42mm" file="US20230007303A1-20230105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00047" num="00047"><img id="EMI-D00047" he="203.37mm" wi="75.95mm" file="US20230007303A1-20230105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00048" num="00048"><img id="EMI-D00048" he="191.18mm" wi="155.45mm" file="US20230007303A1-20230105-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00049" num="00049"><img id="EMI-D00049" he="223.27mm" wi="143.34mm" file="US20230007303A1-20230105-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00050" num="00050"><img id="EMI-D00050" he="200.41mm" wi="84.67mm" orientation="landscape" file="US20230007303A1-20230105-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00051" num="00051"><img id="EMI-D00051" he="207.18mm" wi="91.86mm" orientation="landscape" file="US20230007303A1-20230105-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00052" num="00052"><img id="EMI-D00052" he="96.35mm" wi="122.26mm" file="US20230007303A1-20230105-D00052.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00053" num="00053"><img id="EMI-D00053" he="78.40mm" wi="124.12mm" file="US20230007303A1-20230105-D00053.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00054" num="00054"><img id="EMI-D00054" he="82.04mm" wi="74.76mm" file="US20230007303A1-20230105-D00054.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00055" num="00055"><img id="EMI-D00055" he="95.59mm" wi="111.84mm" file="US20230007303A1-20230105-D00055.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00056" num="00056"><img id="EMI-D00056" he="88.73mm" wi="103.63mm" file="US20230007303A1-20230105-D00056.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00057" num="00057"><img id="EMI-D00057" he="167.47mm" wi="142.32mm" file="US20230007303A1-20230105-D00057.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00058" num="00058"><img id="EMI-D00058" he="173.82mm" wi="83.14mm" file="US20230007303A1-20230105-D00058.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00059" num="00059"><img id="EMI-D00059" he="58.67mm" wi="157.23mm" file="US20230007303A1-20230105-D00059.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00060" num="00060"><img id="EMI-D00060" he="54.27mm" wi="161.63mm" file="US20230007303A1-20230105-D00060.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00061" num="00061"><img id="EMI-D00061" he="126.83mm" wi="94.57mm" file="US20230007303A1-20230105-D00061.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00062" num="00062"><img id="EMI-D00062" he="110.83mm" wi="84.50mm" file="US20230007303A1-20230105-D00062.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00063" num="00063"><img id="EMI-D00063" he="232.75mm" wi="131.91mm" orientation="landscape" file="US20230007303A1-20230105-D00063.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00064" num="00064"><img id="EMI-D00064" he="125.05mm" wi="159.43mm" file="US20230007303A1-20230105-D00064.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00065" num="00065"><img id="EMI-D00065" he="154.18mm" wi="155.70mm" file="US20230007303A1-20230105-D00065.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00066" num="00066"><img id="EMI-D00066" he="210.06mm" wi="129.62mm" orientation="landscape" file="US20230007303A1-20230105-D00066.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00067" num="00067"><img id="EMI-D00067" he="207.01mm" wi="103.46mm" orientation="landscape" file="US20230007303A1-20230105-D00067.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00068" num="00068"><img id="EMI-D00068" he="216.07mm" wi="99.14mm" file="US20230007303A1-20230105-D00068.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00069" num="00069"><img id="EMI-D00069" he="208.20mm" wi="96.60mm" file="US20230007303A1-20230105-D00069.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00070" num="00070"><img id="EMI-D00070" he="154.18mm" wi="155.70mm" file="US20230007303A1-20230105-D00070.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00071" num="00071"><img id="EMI-D00071" he="180.42mm" wi="132.25mm" orientation="landscape" file="US20230007303A1-20230105-D00071.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00072" num="00072"><img id="EMI-D00072" he="173.14mm" wi="133.60mm" orientation="landscape" file="US20230007303A1-20230105-D00072.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00073" num="00073"><img id="EMI-D00073" he="208.45mm" wi="121.58mm" file="US20230007303A1-20230105-D00073.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00074" num="00074"><img id="EMI-D00074" he="174.50mm" wi="128.86mm" orientation="landscape" file="US20230007303A1-20230105-D00074.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00075" num="00075"><img id="EMI-D00075" he="85.09mm" wi="126.49mm" file="US20230007303A1-20230105-D00075.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00076" num="00076"><img id="EMI-D00076" he="181.44mm" wi="92.88mm" orientation="landscape" file="US20230007303A1-20230105-D00076.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00077" num="00077"><img id="EMI-D00077" he="196.93mm" wi="147.74mm" file="US20230007303A1-20230105-D00077.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00078" num="00078"><img id="EMI-D00078" he="120.99mm" wi="116.76mm" file="US20230007303A1-20230105-D00078.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00079" num="00079"><img id="EMI-D00079" he="183.64mm" wi="152.82mm" orientation="landscape" file="US20230007303A1-20230105-D00079.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00080" num="00080"><img id="EMI-D00080" he="140.63mm" wi="89.92mm" orientation="landscape" file="US20230007303A1-20230105-D00080.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00081" num="00081"><img id="EMI-D00081" he="106.34mm" wi="90.17mm" file="US20230007303A1-20230105-D00081.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00082" num="00082"><img id="EMI-D00082" he="207.43mm" wi="66.55mm" file="US20230007303A1-20230105-D00082.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a U.S. continuation application of PCT International Patent Application Number PCT/JP2021/0111.24 filed on Mar. 18. 2021, claiming the benefit of priority of U.S. Provisional Patent Application Number 62/991918 filed on Mar. 19, 2020, the entire contents of which are hereby incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">1. Technical Field</heading><p id="p-0003" num="0002">The present disclosure relates to a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, and a three-dimensional data decoding device.</p><heading id="h-0004" level="1">2. Description of the Related Art</heading><p id="p-0004" num="0003">Devices or services utilizing three-dimensional data are expected to find their widespread use in a wide range of fields, such as computer vision that enables autonomous operations of cars or robots, map information, monitoring, infrastructure inspection, and video distribution. Three-dimensional data is obtained through various means including a distance sensor such as a rangefinder, as well as a stereo camera and a combination of a plurality of monocular cameras.</p><p id="p-0005" num="0004">Methods of representing three-dimensional data include a method known as a point cloud scheme that represents the shape of a three-dimensional structure by a point cloud in a three-dimensional space. In the point cloud scheme, the positions and colors of a point cloud are stored. While point cloud is expected to be a mainstream method of representing three-dimensional data, a massive amount of data of a point cloud necessitates compression of the amount of three-dimensional data by encoding for accumulation and transmission, as in the case of a two-dimensional moving picture (examples include Moving Picture Experts Group-4 Advanced Video Coding (MPEG-4 AVC) and High Efficiency Video Coding (HEVC) standardized by MPEG).</p><p id="p-0006" num="0005">Meanwhile, point cloud compression is partially supported by, for example, an open-source library (Point Cloud Library) for point cloud-related processing.</p><p id="p-0007" num="0006">Furthermore, a technique for searching for and displaying a facility located in the surroundings of the vehicle by using three-dimensional map data is known (see, for example, Patent Literature (PTL) 1 (International Publication WO 2014/020663)).</p><heading id="h-0005" level="1">SUMMARY</heading><p id="p-0008" num="0007">There has been a demand for encoding three-dimensional data appropriately.</p><p id="p-0009" num="0008">The present disclosure is intended to provide a three-dimensional data. encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, or a three-dimensional data decoding device that is capable of encoding three-dimensional data appropriately. A three-dimensional data encoding method according to one aspect of the present disclosure includes: obtaining an attribute information item of a three-dimensional point; and generating a bitstream including the attribute information item encoded and a transform identification information item for switching whether a value is included in the bitstream, the value being used in at least one of a scaling process or an offset process performed on a numerical value indicated by the attribute information item.</p><p id="p-0010" num="0009">A three-dimensional data decoding method according to one aspect of the present disclosure includes: obtaining a bitstream including an attribute information item of a three-dimensional point encoded and a transform identification information item for switching whether a value is included in the bitstream, the value being used in at least one of a scaling process or an offset process performed on a numerical value indicated by the attribute information item; and switching whether the value is obtained from the bitstream, based on the transform identification information.</p><p id="p-0011" num="0010">The present disclosure provides a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, or a three-dimensional data decoding device that is capable of encoding three-dimensional data appropriately.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0012" num="0011">These and other objects, advantages and features of the disclosure will become apparent from the following description thereof taken in conjunction with the accompanying drawings that illustrate a specific embodiment of the present disclosure.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating a configuration of a three-dimensional data encoding and decoding system according to Embodiment 1.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating a structure example of point cloud data according to Embodiment 1;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating a structure example of a data file indicating the point cloud data according to Embodiment 1;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating types of the point cloud data according to Embodiment 1;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating a structure of a first encoder according to Embodiment 1;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating the first encoder according to Embodiment 1;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a structure of a first decoder according to Embodiment 1;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating the first decoder according to Embodiment 1;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 1;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram showing an example of geometry information according to Embodiment 1;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram showing an example of an octree representation of geometry information according to Embodiment 1;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 1;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram of an attribute information encoder according to Embodiment 1;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram of an attribute information decoder according to Embodiment 1;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a block diagram showing a configuration of the attribute information encoder according to the variation of Embodiment 1;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of the attribute information encoder according to Embodiment 1;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a block diagram showing a configuration of the attribute information decoder according to the variation of Embodiment 1;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a block diagram of the attribute information decoder according to Embodiment 1;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a diagram illustrating a structure of a second encoder according to Embodiment 1;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a block diagram illustrating the second encoder according to Embodiment 1;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram illustrating a structure of a second decoder according to Embodiment 1;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a block diagram illustrating the second decoder according to Embodiment 1;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagram illustrating a protocol stack related to PCC encoded data according to Embodiment 1;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a diagram illustrating structures of an encoder and a multiplexer according to Embodiment 2;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a diagram illustrating a structure example of encoded data according to Embodiment 2;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a diagram illustrating a structure example of encoded data and a NAL unit according to Embodiment 2;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a diagram illustrating a semantics example of pcc_nal_unit_type according to Embodiment 2;</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a diagram illustrating an example of a transmitting order of NAL units according to Embodiment 2;</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is a flowchart of processing performed by a three-dimensional data encoding device according to Embodiment 2;</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a flowchart of processing performed by a three-dimensional data decoding device according to Embodiment 2;</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flowchart of multiplexing processing according to Embodiment 2;</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>32</b></figref> is a flowchart of demultiplexing processing according to Embodiment 2;</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>33</b></figref> is a diagram illustrating an example of three-dimensional points according to Embodiment 3;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a diagram illustrating an example of setting LoDs according to Embodiment 3;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is a diagram illustrating an example of setting LoDs according to Embodiment 3;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a diagram illustrating an example of attribute information to be used for predicted values according to Embodiment 3;</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a diagram illustrating examples of exponential-Golomb codes according to Embodiment 3;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram indicating a process on exponential-Golomb codes according to Embodiment 3;</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram indicating an example of a syntax in attribute header according to Embodiment 3;</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram indicating an example of a syntax in attribute data according to Embodiment 3;</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>41</b></figref> is a flowchart of a three-dimensional data encoding process according to Embodiment 3;</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a flowchart of an attribute information encoding process according to Embodiment 3;</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>43</b></figref> is a diagram indicating processing on exponential-Golomb codes according to Embodiment 3;</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>44</b></figref> is a diagram indicating an example of a reverse lookup table indicating relationships between remaining codes and the values thereof according to Embodiment 3;</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>45</b></figref> is a flowchart of a three-dimensional data decoding process according to Embodiment 3;</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a flowchart of an attribute information decoding process according to Embodiment 3;</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>47</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 3;</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 3;</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>49</b></figref> is a diagram for describing the encoding of the attribute information by using a RAHT according to Embodiment 4;</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a diagram showing an example of setting a quantization scale for each hierarchy according to Embodiment 4;</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is a diagram showing an example of a first code sequence and a second code sequence according to Embodiment 4;</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>52</b></figref> is a diagram showing an example of a truncated unary code according to Embodiment 4;</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>53</b></figref> is a diagram for describing the inverse Haar conversion according to Embodiment 4;</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram showing a syntax example of the attribute information according to Embodiment 4;</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram showing an example of a coding coefficient and ZeroCnt according to Embodiment 4;</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a flowchart of the three-dimensional data encoding processing according to Embodiment 4;</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a flowchart of the attribute information encoding processing according to Embodiment 4;</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a flowchart of the coding coefficient encoding processing according to Embodiment 4;</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a flowchart of the three-dimensional data decoding processing according to Embodiment 4;</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>60</b></figref> is a flowchart of the attribute information decoding processing according to Embodiment 4;</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>61</b></figref> is a flowchart the coding coefficient decoding processing according to Embodiment 4;</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>62</b></figref> is a block diagram of an attribute information encoder according to Embodiment 4;</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>63</b></figref> is a block diagram of an attribute information decoder according to Embodiment 4;</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>64</b></figref> is a block diagram illustrating a configuration of a three-dimensional data encoding device according to Embodiment 5;</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>65</b></figref> is a block diagram illustrating a configuration of a three-dimensional data decoding device according to Embodiment 5;</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram illustrating a first example of a syntax of SPS according to Embodiment 5;</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>67</b></figref> is a diagram illustrating an example configuration of a bitstream according to Embodiment 5;</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>68</b></figref> is a diagram illustrating a second example of the syntax of SPS according to Embodiment 5;</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>69</b></figref> is a diagram illustrating a first example of a syntax of transform information according to Embodiment 5;</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>70</b></figref> is a diagram illustrating a second example of the syntax of the transform information according to Embodiment 5;</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data encoding device according to Embodiment 5;</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>72</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data decoding device according to Embodiment 5;</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a block diagram for describing another example of the process of the three-dimensional data encoding device according to Embodiment 5;</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>74</b></figref> is a block diagram for describing another example of the process of the three-dimensional data decoding device according to Embodiment 5;</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>75</b></figref> i.s a flowchart illustrating a process procedure of the three-dimensional data encoding device according to Embodiment 5;</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>76</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data decoding device according to Embodiment 5.</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>77</b></figref> is a block diagram of a three-dimensional data creation device according to Embodiment 6;</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a flowchart of a three-dimensional data creation method according to Embodiment 6;</p><p id="p-0091" num="0090">FIG. 79 is a diagram showing a structure of a system according to Embodiment 6;</p><p id="p-0092" num="0091">FIG. 80 is a block diagram of a client device according to Embodiment 6;</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>81</b></figref> is a block diagram of a server according to Embodiment 6;</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>82</b></figref> is a flowchart of a three-dimensional data creation process performed by the client device according to Embodiment 6;</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>88</b></figref> is a flowchart of a sensor information transmission process performed by the client device according to embodiment 6;</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>84</b></figref> i.s a flowchart of a three-dimensional data creation process performed by the server according to Embodiment 6;</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>85</b></figref> is a flowchart of a three-dimensional map transmission process performed by the server according to Embodiment 6;</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>86</b></figref> is a diagram showing a structure of a variation of the system according to Embodiment 6;</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>87</b></figref> is a diagram showing a structure of the server and client devices according to Embodiment 6;</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram illustrating a configuration of a server and a client device according to Embodiment 6;</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a flowchart of a process performed by the client device according to Embodiment 6;</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>90</b></figref> i.s a diagram illustrating a configuration of a sensor information collection system according to Embodiment 6;</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram illustrating an example of a system according to Embodiment 6;</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>92</b></figref> is a diagram illustrating a variation of the system according to Embodiment 6;</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>93</b></figref> is a flowchart illustrating an example of an application process according to Embodiment 6;</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>94</b></figref> is a diagram illustrating the sensor range of various sensors according to Embodiment 6;</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>95</b></figref> is a diagram illustrating a configuration example of an automated driving system according to embodiment 6;</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>96</b></figref> is a diagram illustrating a configuration example of a bitstream according to Embodiment 6;</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>97</b></figref> is a flowchart of a point cloud selection process according to Embodiment 6;</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>98</b></figref> is a diagram illustrating a screen example for point cloud. selection process according to Embodiment 6;</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. <b>99</b></figref> is a diagram illustrating a screen example of the point cloud selection process according to Embodiment 6; and</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>100</b></figref> is a diagram illustrating a screen example of the point cloud selection process according to Embodiment 6.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0113" num="0112">A three-dimensional data encoding method according to one aspect of the present disclosure includes: obtaining an attribute information item of a three-dimensional point; executing an encoding process that executes a transform process on a numerical value indicated by the attribute information item and encodes the attribute information item or that encodes the attribute information item without executing the transform process, the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation; and generating a bitstream including the attribute information item encoded and a transform identification information item indicating whether the transform process has been executed.</p><p id="p-0114" num="0113">Some encoders for encoding the attribute information may be unable to process a decimal point and/or a negative value. In view of this, for example, the value indicated by the attribute information can be transformed into a positive value by transforming the attribute information through at least one of scaling and offset. Therefore, according to the three-dimensional data encoding method according to the present disclosure, even if a decimal point and/or a negative value cannot be encoded, for example, the attribute information can be appropriately transformed and encoded, and the three-dimensional data decoding device can be notified that the attribute information has been transformed.</p><p id="p-0115" num="0114">Moreover, for example, when the transform process is executed, the bitstream further including a transform information item is generated in the generating, the transform information item including at least one of a scale information item or an offset information item, the scale information item indicating a value used in the scaling, the offset information item indicating a value used in the offset.</p><p id="p-0116" num="0115">Therefore, the scale value and the offset value need not be determined in advance, the attribute information can be transformed using values appropriate to make the attribute information a positive value, for example, and the three-dimensional data decoding device can be notified of the values used in the transform process.</p><p id="p-0117" num="0116">Furthermore, for example, a plurality of attribute information items each of which is the attribute information item are obtained in the obtaining, in the encoding process, the transform process is executed on each of the plurality of attribute information items and the attribute information item is encoded, or each of the plurality of attribute information items is encoded without executing the transform process, and the bitstream including the plurality of attribute information items encoded and the transform identification information item for each of the plurality of attribute information items is generated in the generating.</p><p id="p-0118" num="0117">Depending on the three-dimensional date, one three-dimensional point may have a plurality of items of attribute information, or a plurality of three-dimensional points having one item of attribute information may be decoded. Even in such a case, each item of the plurality of attribute information can be appropriately transformed and encoded, and the three-dimensional data decoding device can be notified that the attribute information has been transformed.</p><p id="p-0119" num="0118">Moreover, for example, when the transform process is executed and the attribute information item is encoded in the encoding process, the bitstream further including an order information item is generated in the generating, the transform process performing both the scaling and the offset, the order information item indicating an order in which the scaling and the offset are performed.</p><p id="p-0120" num="0119">Therefore, the order of the scaling and the offset need not be determined in advance, the attribute information can be transformed in an order appropriate to make the attribute information a positive value, for example, and the three-dimensional data decoding device can be notified of the order.</p><p id="p-0121" num="0120">Furthermore, for example, the transform identification information item indicates whether the scaling has been performed and whether the offset has been performed.</p><p id="p-0122" num="0121">Therefore, the way of using at least one of scaling and offset need not be determined in advance, the attribute information can be transformed using a transform process appropriate to make the attribute information a positive value, for example, and the three-dimensional data decoding device can be notified of the values used in the transform process.</p><p id="p-0123" num="0122">Moreover, for example, the transform identification information item is stored in an additional information item common to sequences in the generating.</p><p id="p-0124" num="0123">A three-dimensional data decoding method according to one aspect of the present disclosure includes: obtaining a bitstream including an attribute information item of a three-dimensional point encoded and a transform identification information item encoded, the transform identification information item indicating whether a transform process has been executed on the attribute information item, the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation; decoding the attribute information item encoded; and decoding the transform identification information item encoded.</p><p id="p-0125" num="0124">Some decoders for decoding the encoded attribute information may be unable to process a decimal point and/or a negative value. If the attribute information is attribute information transformed through at least one of scaling and offset and encoded, for example, such a decoder can decode the encoded attribute information. In addition, the transform identification information shows whether the value indicated by the attribute Information has been transformed, the decoded attribute information can be appropriately restored to the original value.</p><p id="p-0126" num="0125">Moreover, for example, the three-dimensional data decoding method according to the one aspect of the present disclosure further includes: executing an inverse transform process on a numerical value indicated by the attribute information item decoded, when the transform identification information item indicates that the transform process has been executed on the attribute information item, the inverse transform process performing at least one of inverse scaling or inverse offset, the inverse scaling performing at least one of a multiplication and division operation or a shift operation, the inverse offset performing an addition and subtraction operation.</p><p id="p-0127" num="0126">Therefore, even if the value indicated by the attribute information has been transformed into a positive value and encoded, a transform process inverse to the transform process can be executed based on the transform identification information. Therefore, according to the three-dimensional data decoding method according to the present disclosure, encoded attribute information can be appropriately decoded, and the decoded attribute information can be appropriately transformed (inverse-transformed) to appropriately restore the attribute information to the original value.</p><p id="p-0128" num="0127">Further pore, for example, the bitstream further includes a transform information item including at least one of a scale information item or an offset information, the scale information item indicating a value used in the scaling, the offset information item indicating a value used in the offset, and the inverse transform process is executed based on at least one of the scale information item or the offset information item.</p><p id="p-0129" num="0128">Therefore, the scale value and the offset value need not be determined in advance, and the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0130" num="0129">Moreover, for example, the bitstream includes a plurality of attribute information items encoded each of which is the attribute information item encoded, each of the plurality of attribute information items encoded is decoded in the decoding of the attribute information item, the transform identification information item indicates whether the transform process has been executed on each of the plurality of attribute information items, and the inverse transform process is executed on, among the plurality of attribute information items decoded, an attribute information item for which the transform identification information item indicates that the transform process has been executed.</p><p id="p-0131" num="0130">Depending on the three-dimensional date, one three-dimensional point may have a plurality of items of attribute information, or a plurality of three-dimensional points having one item of attribute information may be decoded. Even in such a case, for each item of the plurality of attribute information, the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0132" num="0131">Furthermore, for example, the bitstream further includes an order information item indicating an order in which the scaling and the offset have been performed, and in the inverse transform process, the inverse scaling and the inverse offset are performed in the order based on the order information item.</p><p id="p-0133" num="0132">Therefore, the order of the scaling and the offset need not be determined in advance, and the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0134" num="0133">Moreover, for example, the transform identification information item indicates whether the scaling has been performed and whether the offset has been performed.</p><p id="p-0135" num="0134">Therefore, the way of using at least one of the scaling or the offset need. not be determined in advance, and the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0136" num="0135">Furthermore, for example, in the bitstream, the transform identification information item is stored in an additional information item common to sequences.</p><p id="p-0137" num="0136">A three-dimensional data encoding device according to one aspect of the present disclosure includes a processor and memory. Using the memory, the processor: obtains an attribute information item of a three-dimensional point; executes an encoding process that executes a transform process on a numerical value indicated by the attribute information item and encodes the attribute information item or that encodes the attribute information item without executing the transform process, the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation; and generates a bitstream including the attribute information item encoded and a transform identification information item indicating whether the transform process has been executed.</p><p id="p-0138" num="0137">Some encoders for encoding the attribute information may be unable to process a decimal point and/or a negative value. In view of this, for example, the value indicated by the attribute information can be transformed into a positive value by transforming the attribute information through at least one of scaling and offset. Therefore, even if the three-dimensional data encoding device according to the present disclosure cannot encode a decimal point and/or a negative value, for example, the three-dimensional data encoding method can appropriately transform and encode the attribute information, and notify the three-dimensional data decoding device that the attribute information has been transformed.</p><p id="p-0139" num="0138">A three-dimensional data decoding device according to one aspect of the present disclosure includes a processor and memory. Using the memory, the processor: obtains a bitstream including an attribute information item of a three-dimensional point encoded and a transform identification information item encoded, the transform identification information item indicating whether a transform process has been executed on the attribute information item, the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation; decodes the attribute information item encoded: and decodes the transform identification information item encoded.</p><p id="p-0140" num="0139">Some decoders for decoding the encoded attribute information may be unable to process a decimal point and/or a negative value. If the attribute information is attribute information transformed through at least one of scaling and offset and encoded, for example, such a decoder can decode the encoded attribute information. In addition, the transform identification information shows whether the value indicated by the attribute information has been transformed, the decoded attribute information can be appropriately restored to the original value.</p><p id="p-0141" num="0140">It is to be noted that these general or specific aspects may be implemented as a system, a method, an integrated circuit, a computer program, or a computer-readable recording medium such as a CD-ROM, or may be implemented as any combination of a system, a method, an integrated circuit, a computer program, and a recording medium.</p><p id="p-0142" num="0141">Hereinafter, embodiments will be specifically described with reference to the drawings. It is to be noted that each of the following embodiments indicate a specific example of the present disclosure. The numerical values, shapes, materials, constituent elements, the arrangement and connection of the constituent elements, steps, the processing order of the steps, etc., indicated in the following embodiments are mere examples, and thus are not intended to limit the present disclosure. Among the constituent elements described in the following embodiments, constituent elements not recited in any one of the independent claims will be described as optional constituent elements.</p><heading id="h-0008" level="1">Embodiment 1</heading><p id="p-0143" num="0142">When using encoded data of a point cloud in a device or for a service in practice, required information for the application is desirably transmitted and received in order to reduce the network bandwidth. However, conventional encoding structures for three-dimensional data have no such a function, and there is also no encoding method for such a function.</p><p id="p-0144" num="0143">Embodiment 1 described below relates to a three-dimensional data encoding method and a three-dimensional data encoding device for encoded data of a three-dimensional point cloud that provides a function of transmitting and receiving required information for an application, a three-dimensional data decoding method and a three-dimensional data decoding device for decoding the encoded data, a three-dimensional data multiplexing method for multiplexing the encoded data, and a three-dimensional data transmission method for transmitting the encoded data.</p><p id="p-0145" num="0144">In particular, at present, a first encoding method and a second encoding method are under investigation as encoding methods (encoding schemes) for point cloud data. However, there is no method defined for storing the configuration of encoded data and the encoded data in a system format. Thus, there is a problem that an encoder cannot perform an MUX process (multiplexing), transmission, or accumulation of data.</p><p id="p-0146" num="0145">In addition, there is no method for supporting a format, that involves two codecs, the first encoding method and the second encoding method, such as point cloud compression (PCC).</p><p id="p-0147" num="0146">With regard to this embodiment, a configuration of PCC-encoded data that involves two codecs, a first encoding method and a second encoding method, and a method of storing the encoded data in a system format will be described.</p><p id="p-0148" num="0147">A configuration of a three-dimensional data (point cloud data) encoding and decoding system according to this embodiment will be first described. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram showing an example of a configuration of the three-dimensional data encoding and decoding system according to this embodiment. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the three-dimensional data encoding and decoding system includes three-dimensional data encoding system <b>4601</b>, three-dimensional data decoding system <b>4602</b>, sensor terminal <b>4603</b>, and external connector <b>4604</b>.</p><p id="p-0149" num="0148">Three-dimensional data encoding system <b>4601</b> generates encoded data or multiplexed data by encoding point cloud data, which is three-dimensional data. Three-dimensional data encoding system <b>4601</b> may be a three-dimensional data encoding device implemented by a single device or a system implemented by a plurality of devices. The three-dimensional data encoding device may include a part of a plurality of processors included in three-dimensional data encoding system <b>4601</b>.</p><p id="p-0150" num="0149">Three-dimensional data encoding system <b>4601</b> includes point cloud data generation system <b>4611</b>, presenter <b>4612</b>, encoder <b>4613</b>, multiplexer <b>4614</b>, input/output unit <b>4615</b>, and controller <b>4616</b>. Point cloud data generation system <b>4611</b> includes sensor information obtainer <b>4617</b>, and point cloud data generator <b>4618</b>.</p><p id="p-0151" num="0150">Sensor information obtainer <b>4617</b> obtains sensor information from sensor terminal <b>4603</b>, and outputs the sensor information to point cloud data generator <b>4618</b>. Point cloud data generator <b>4618</b> generates point cloud data from the sensor information, and outputs the point cloud data to encoder <b>4613</b>.</p><p id="p-0152" num="0151">Presenter <b>4612</b> presents the sensor information or point cloud data to a user. For example, presenter <b>4612</b> displays information or an image based on the sensor information or point cloud data.</p><p id="p-0153" num="0152">Encoder <b>4613</b> encodes (compresses) the point cloud data, and outputs the resulting encoded data, control information (signaling information) obtained in the course of the encoding, and other additional information to multiplexer <b>4614</b>. The additional information includes the sensor information, for example.</p><p id="p-0154" num="0153">Multiplexer <b>4614</b> generates multiplexed data by multiplexing the encoded data, the control information, and the additional information input thereto from encoder <b>4613</b>. A format of the multiplexed data is a file format for accumulation or a packet format for transmission, for example.</p><p id="p-0155" num="0154">Input/output unit <b>4615</b> (a communication unit or interface, for example) outputs the multiplexed data to the outside. Alternatively, the multiplexed data may be accumulated in an accumulator, such as an internal memory. Controller <b>4616</b> (or an application executor) controls each processor. That is, controller <b>4616</b> controls the encoding, the multiplexing, or other processing.</p><p id="p-0156" num="0155">Note that the sensor information may be input to encoder <b>4613</b> or multiplexer <b>4614</b>. Alternatively, input/output unit <b>4615</b> may output the point cloud data or encoded data to the outside as it is.</p><p id="p-0157" num="0156">A transmission signal (multiplexed data) output from three-dimensional data encoding system <b>4601</b> is input to three-dimensional data decoding system <b>4602</b> via external connector <b>4604</b>.</p><p id="p-0158" num="0157">Three-dimensional data decoding system <b>4602</b> generates point cloud data, which is three-dimensional data, by decoding the encoded data or multiplexed data. Note that three-dimensional data decoding system <b>4602</b> may be a three-dimensional data decoding device implemented by a single device or a system implemented by a plurality of devices. The three-dimensional data decoding device may include a part of a plurality of processors included in three-dimensional data decoding system <b>4602</b>.</p><p id="p-0159" num="0158">Three-dimensional data decoding system <b>4602</b> includes sensor information obtainer <b>4621</b>, input/output unit <b>4622</b>, demultiplexer <b>4623</b>, decoder <b>4624</b>, presenter <b>4625</b>, user interface <b>4626</b>, and controller <b>4627</b>.</p><p id="p-0160" num="0159">Sensor information obtainer <b>4621</b> obtains sensor information from sensor terminal <b>4603</b>.</p><p id="p-0161" num="0160">Input/output unit <b>4622</b> obtains the transmission signal, decodes the transmission signal into the multiplexed data (file format or packet), and outputs the multiplexed data to demultiplexer <b>4623</b>.</p><p id="p-0162" num="0161">Demultiplexer <b>4623</b> obtains the encoded data, the control information, and the additional information from the multiplexed data, and outputs the encoded data, the control information, and the additional information to decoder <b>4624</b>.</p><p id="p-0163" num="0162">Decoder <b>4624</b> reconstructs the point cloud data by decoding the encode data.</p><p id="p-0164" num="0163">Presenter <b>4625</b> presents the point cloud data to a user. For example, presenter <b>4625</b> displays information or an image based on the point cloud data. User interface <b>4626</b> Obtains an indication based on a manipulation by the user. Controller <b>4627</b> (or an application executor) controls each processor. That is, controller <b>4627</b> controls the demultiplexing, the decoding, the presentation, or other processing.</p><p id="p-0165" num="0164">Note that input/output unit <b>4622</b> may obtain the point cloud data or encoded data as it is from the outside. Presenter <b>4625</b> may obtain additional information, such as sensor information, and present information based on the additional information. Presenter <b>4625</b> may perform a presentation based on an indication from a user obtained on user interface <b>4626</b>.</p><p id="p-0166" num="0165">Sensor terminal <b>4603</b> generates sensor information, which is information obtained by a sensor. Sensor terminal <b>4603</b> is a terminal provided with a sensor or a camera. For example, sensor terminal <b>4603</b> is a mobile body, such as an automobile, a flying object, such as an aircraft, a mobile terminal, or a camera.</p><p id="p-0167" num="0166">Sensor information that can be generated by sensor terminal <b>4603</b> includes (1) the distance between sensor terminal <b>4603</b> and an object or the reflectance of the object obtained by LiDAR, a millimeter wave radar, or an infrared sensor or (2) the distance between a camera and an object or the reflectance of the object obtained by a plurality of monocular camera images or a stereo-camera image, for example. The sensor information may include the posture, orientation, gyro (angular velocity), position (UPS information or altitude), velocity, or acceleration of the sensor, for example. The sensor information may include air temperature, air pressure, air humidity, or magnetism, for example.</p><p id="p-0168" num="0167">External connector <b>4604</b> is implemented by an integrated circuit (LSI or IC), an external accumulator, communication with a cloud server via the Internet, or broadcasting, for example.</p><p id="p-0169" num="0168">Next, point cloud data be described. <figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing a configuration of point cloud data, <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram showing a configuration example of a data file describing information of the point cloud data.</p><p id="p-0170" num="0169">Point cloud data includes data on a plurality of points. Data on each point includes geometry information (three-dimensional coordinates) and attribute ix formation associated with the geometry information. A set of a plurality of such points is referred to as a point cloud. For example, a point cloud indicates a three-dimensional shape of an object.</p><p id="p-0171" num="0170">Geometry information (position), such as three-dimensional coordinates, may be referred to as geometry. Data on each point may include attribute information (attribute) on a plurality of types of attributes. A type of attribute is color or reflectance, for example.</p><p id="p-0172" num="0171">One item of attribute information (in other words, a piece of attribute information or an attribute information item) may be associated with one item of geometry information (in other words, a piece of geometry information or a geometry information item), or attribute information on a plurality of different types of attributes may be associated with one item of geometry information. Alternatively, items of attribute information on the same type of attribute may be associated with one item of geometry information.</p><p id="p-0173" num="0172">The configuration example of a data file shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is an example in which geometry information and attribute information are associated with each other in a one-to-one relationship, and geometry information and attribute information on N points forming point cloud data are shown.</p><p id="p-0174" num="0173">The geometry information is information on three axes, specifically, an x-axis, a y-axis, and a z-axis, for example. The attribute information is ROB color information, for example. A representative data file is ply file, for example.</p><p id="p-0175" num="0174">Next, types of point cloud data will be described, <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram showing types of point cloud data. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, point cloud data includes a static object and a dynamic object.</p><p id="p-0176" num="0175">The static object is three-dimensional point cloud data at an arbitrary time (a time point). The dynamic object is three-dimensional point cloud data that varies with time. In the following, three-dimensional point cloud data associated with a time point will he referred to as a PCC frame or a frame.</p><p id="p-0177" num="0176">The object may be a point cloud whose range is limited to some extent, such as ordinary video data, or may be a large point cloud whose range is not limited, such as map information.</p><p id="p-0178" num="0177">There are point cloud data having varying densities. There may be sparse point cloud data and dense point cloud data.</p><p id="p-0179" num="0178">In the following, each processor will be described in detail. Sensor information is obtained by various means, including a distance sensor such as LiDAR or a range finder, a stereo camera, or a combination of a plurality of monocular cameras. Point cloud data generator <b>4618</b> generates point cloud data based on the sensor information obtained by sensor information obtainer <b>4617</b>. Point cloud data generator <b>4618</b> generates geometry information as point cloud data, and adds attribute information associated with the geometry information to the geometry information.</p><p id="p-0180" num="0179">When generating geometry information or adding attribute information, point cloud data generator <b>4618</b> may process the point cloud data. For example, point cloud data generator <b>4618</b> may reduce the data amount by omitting a point cloud whose position coincides with the position of another point cloud. Point cloud data generator <b>4618</b> may also convert the geometry information (such as shifting, rotating or normalizing the position) or render the attribute information.</p><p id="p-0181" num="0180">Note that, although <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows point cloud data generation system <b>4611</b> as being included in three-dimensional data encoding system <b>4601</b>, point cloud data generation system <b>4611</b> may be independently provided outside three-dimensional data encoding system <b>4601</b>.</p><p id="p-0182" num="0181">Encoder <b>4613</b> generates encoded data by encoding point cloud data according to an encoding method previously defined. In general, there are the two types of encoding methods described below. One is an encoding method using geometry information, which will be referred to as a first encoding method, hereinafter. The other is an encoding method using a video codec, which will be referred to as a second encoding method, hereinafter. Decoder <b>4624</b> decodes the encoded data into the point cloud data using the encoding method previously defined.</p><p id="p-0183" num="0182">Multiplexer <b>4614</b> generates multiplexed data by multiplexing the encoded data in an existing multiplexing method. The generated multiplexed data is transmitted or accumulated. Multiplexer <b>4614</b> multiplexes not only the PCC-encoded data but also another medium, such as a video, an audio, subtitles, an application, or a file, or reference time information. Multiplexer <b>4614</b> may further multiplex attribute information associated with sensor information or point cloud data.</p><p id="p-0184" num="0183">Multiplexing schemes or file formats include ISOBMFF, MPEG-DASH, which is a transmission scheme based on ISOBMFF, MMT, MPEG-2 TS Systems, or RMP, for example.</p><p id="p-0185" num="0184">Demultiplexer <b>4623</b> extracts PCC-encoded data, other media, time information and the like from the multiplexed data.</p><p id="p-0186" num="0185">Input/output unit <b>4615</b> transmits the multiplexed data in a method suitable for the transmission medium or accumulation medium, such as broadcasting or communication. Input/output unit <b>4615</b> may communicate with another device over the Internet or communicate with an accumulator, such as a cloud server.</p><p id="p-0187" num="0186">As a communication protocol, http, ftp, TCP, LIDP or the like is used. The pull communication scheme or the push communication scheme can be used.</p><p id="p-0188" num="0187">A wired transmission or a wireless transmission can be used. For the wired transmission, Ethernet (registered trademark.), USE, RS-232C, IFIDMI (registered trademark.), or a coaxial cable is used, for example. For the wireless transmission, wireless LAN, Wi-Fi (registered trademark), Bluetooth (registered trademark), or a millimeter wave is used, for example.</p><p id="p-0189" num="0188">As a broadcasting scheme, DVD-T2, DVB-S2, DVB-C2, ATSC3.0, or ISDB-S3 is used, for example.</p><p id="p-0190" num="0189"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram showing a configuration of first encoder <b>4630</b>, which is an example of encoder <b>4613</b> that performs encoding in the first encoding method. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram showing first encoder <b>4630</b>. First encoder <b>4630</b> generates encoded data (encoded stream) by encoding point cloud data in the first encoding method. First encoder <b>4630</b> includes geometry information encoder <b>4631</b>, attribute information encoder <b>4632</b>, additional information encoder <b>4633</b>, and multiplexer <b>4634</b>.</p><p id="p-0191" num="0190">First encoder <b>4630</b> is characterized by performing encoding by keeping a three-dimensional structure in mind. First encoder <b>4630</b> is further characterized in that attribute information encoder <b>4632</b> performs encoding using information obtained from geometry information encoder <b>4631</b>. The first encoding method is referred to also as geometry-based PCC (GPCC:),</p><p id="p-0192" num="0191">Point cloud data is PCC point cloud data like a PLY file or PCC point cloud data generated from sensor information, and includes geometry information (position), attribute information (attribute), and other additional information (metadata). The geometry information is input to geometry information encoder <b>4631</b>, the attribute information is input to attribute information encoder <b>4632</b>, and the additional information is input to additional information encoder <b>4633</b>.</p><p id="p-0193" num="0192">Geometry information encoder <b>4631</b> generates encoded geometry information (compressed geometry), which is encoded data, by encoding geometry information. For example, geometry information encoder <b>4631</b> encodes geometry information using an N-ary tree structure, such as an octree. Specifically, in the case of an octree, a current space (target space) is divided into eight nodes (subspaces), 8-bit information (occupancy code) that indicates whether each node includes a point cloud or not is generated. A node including a point cloud is further divided into eight nodes, and 8-bit information that indicates whether each of the eight nodes includes a point cloud or not is generated. This process is repeated until a predetermined level is reached or the number of the point clouds included in each node becomes equal to or less than a threshold.</p><p id="p-0194" num="0193">Attribute information encoder <b>4632</b> generates encoded attribute information (compressed attribute), which is encoded data, by encoding attribute information using configuration information generated by geometry information encoder <b>4631</b>. For example, attribute information encoder <b>4632</b> determines a reference point (reference node) that is to be referred to in encoding a current point (in other words, a current node or a target node) to be processed.</p><p id="p-0195" num="0194">based on the octree structure generated by geometry information encoder <b>4631</b>. For example, attribute information encoder <b>4632</b> refers to a node whose parent node in the octree is the same as the parent node of the current node, of peripheral nodes or neighboring nodes. Note that the method of determining a reference relationship is not limited to this method.</p><p id="p-0196" num="0195">The process of encoding attribute information may include at least one of a quantization process, a prediction process, and an arithmetic encoding process. In this case, &#x201c;refer to&#x201d; means using a reference node for calculating a predicted value of attribute information or using a state of a reference node (occupancy information that indicates whether a reference node includes a point cloud or not, for example) for determining a parameter of encoding. For example, the parameter of encoding is a quantization parameter in the quantization process or a context or the like in the arithmetic encoding.</p><p id="p-0197" num="0196">Additional information encoder <b>4633</b> generates encoded additional information (compressed metadata), which is encoded data, by encoding compressible data of additional information.</p><p id="p-0198" num="0197">Multiplexer <b>4634</b> generates encoded stream (compressed stream), which is encoded data, by multiplexing encoded geometry information, encoded attribute information, encoded additional information, and other additional information. The generated encoded stream is output to a processor in a system layer (not shown).</p><p id="p-0199" num="0198">Next, first decoder <b>4640</b>, which is an example of decoder <b>4624</b> that performs decoding in the first encoding method, will be described. <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram showing a configuration of first decoder <b>4640</b>. <figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram showing first decoder <b>4640</b>. First decoder <b>4640</b> generates point cloud data by decoding encoded data (encoded stream) encoded in the first encoding method in the first encoding method. First decoder <b>4640</b> includes demultiplexer <b>4641</b>, geometry information decoder <b>4642</b>, attribute information decoder <b>4643</b>, and additional information decoder <b>4644</b>.</p><p id="p-0200" num="0199">An encoded stream (compressed stream), which is encoded data, is input to first decoder <b>4640</b> from a processor in a system layer (not shown).</p><p id="p-0201" num="0200">Demultiplexer <b>4641</b> separates encoded geometry information (compressed geometry), encoded attribute information (compressed attribute), encoded additional information (compressed metadata), and other additional information from the encoded data.</p><p id="p-0202" num="0201">Geometry information decoder <b>4642</b> generates geometry information by decoding the encoded geometry information. For example, geometry information decoder <b>4642</b> restores the geometry information on a point cloud represented by three-dimensional coordinates from encoded geometry information represented by an N-ary structure, such as an octree.</p><p id="p-0203" num="0202">Attribute information decoder <b>4643</b> decodes the encoded attribute information based on configuration information generated by geometry information decoder <b>4642</b>. For example, attribute information decoder <b>4643</b> determines a reference point (reference node) that is to be referred to in decoding a current point (current node) to be processed based on the octree structure generated by geometry information decoder <b>4642</b>. For example, attribute information decoder <b>4643</b> refers to a node whose parent node in the octree is the same as the parent node of the current node, of peripheral nodes or neighboring nodes. Note that the method of determining a reference relationship is not limited to this method.</p><p id="p-0204" num="0203">The process of decor attribute information may include at least one of an inverse quantization process, a prediction process, and an arithmetic decoding process. In this case, &#x201c;refer to&#x201d; means using a reference node for calculating a predicted value of attribute information or using a state of a reference node (occupancy information that indicates whether a reference node includes a point cloud or not, for example) for determining a parameter of decoding. For example, the parameter of decoding is a quantization parameter in the inverse quantization process or a context or the like in the arithmetic decoding.</p><p id="p-0205" num="0204">Additional information decoder <b>4644</b> generates additional information by decoding the encoded additional information. First decoder <b>4640</b> uses additional information required for the decoding process for the geometry information and the attribute information in the decoding, and outputs additional information required for an application to the outside.</p><p id="p-0206" num="0205">Next, an example configuration of a geometry information encoder will be described. <figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of geometry information encoder <b>2700</b> according to this embodiment. Geometry information encoder <b>2700</b> includes octree generator <b>2701</b>, geometry information calculator <b>2702</b>, encoding table selector <b>2703</b>, and entropy encoder <b>2704</b>.</p><p id="p-0207" num="0206">Octree generator <b>2701</b> generates an octree, for example, from input position information, and generates an occupancy code of each node of the octree. Geometry information calculator <b>2702</b> obtains information that indicates whether a neighboring node of a current node (target node) is an occupied node or not. For example, geometry information calculator <b>2702</b> calculates occupancy information on a neighboring node from an occupancy code of a parent node to which a current node belongs (information that indicates whether a neighboring node is an occupied node or not). Geometry information calculator <b>2702</b> may save an encoded node in a list and search the list for a neighboring node. Note that geometry information calculator <b>2702</b> may change neighboring nodes in accordance with the position of the current node in the parent node.</p><p id="p-0208" num="0207">Encoding table selector <b>2703</b> selects an encoding table used for entropy encoding of the current node based on the occupancy information on the neighboring node calculated by geometry information calculator <b>2702</b>. For example, encoding table selector <b>2703</b> may generate a bit sequence based on the occupancy information on the neighboring node and select an encoding table of an index number generated from the bit sequence.</p><p id="p-0209" num="0208">Entropy encoder <b>2704</b> generates encoded geometry information and metadata by entropy-encoding the occupancy code of the current node using the encoding table of the selected index number. Entropy encoder may add, to the encoded geometry information, information that indicates the selected encoding table.</p><p id="p-0210" num="0209">In the following, an octree representation and a scan order for geometry information will be described. Geometry information (geometry data) is transformed into an octree structure (octree transform) and then encoded. The octree structure includes nodes and leaves. Each node has eight nodes or leaves, and each leaf has voxel (VXL) information, <figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram showing an example structure of geometry information including a plurality of voxels. <figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram showing an example in which the geometry information shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> is transformed into an octree structure. Here, of leaves shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, leaves <b>1</b>, <b>2</b>, and <b>3</b> represent voxels VXL<b>1</b>, VXL<b>2</b>, and VXL<b>3</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, respectively, and each represent VXL containing a point cloud (referred to as a valid VXL, hereinafter).</p><p id="p-0211" num="0210">Specifically, node <b>1</b> corresponds to the entire space comprising the geometry information in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The entire space corresponding to node <b>1</b> is divided into eight nodes, and among the eight nodes, a node containing valid VXL is further divided into eight nodes or leaves. This process is repeated for every layer of the tree structure. Here, each node corresponds to a subspace, and has information (occupancy code) that indicates where the next node or leaf is located after division as node information. A block in the bottom layer is designated as a leaf and retains the number of the points contained in the leaf as leaf information.</p><p id="p-0212" num="0211">Next, an example configuration of a geometry information decoder will be described. <figref idref="DRAWINGS">FIG. <b>12</b></figref> is a block diagram of geometry information decoder <b>2710</b> according to this embodiment. Geometry information decoder <b>2710</b> includes octree generator <b>2711</b>, geometry information calculator <b>212</b>, encoding table selector <b>2713</b>, and entropy decoder <b>2714</b>.</p><p id="p-0213" num="0212">Octree generator <b>2711</b> generates an octree of a space (node) based on header information, metadata or the like of a bitstream. For example, octree generator <b>2711</b> generates an octree by generating a large space (root node) based on the sizes of a space in an x-axis direction, a y-axis direction, and a z-axis direction added to the header information and dividing the space into two parts in the x-axis direction, the y-axis direction, and the z-axis direction to generate eight small spaces A (nodes A<b>0</b> to A<b>7</b>). Nodes A<b>0</b> to A<b>7</b> are sequentially designated as a current node.</p><p id="p-0214" num="0213">Geometry information calculator <b>2712</b> obtains occupancy information that indicates whether a neighboring node of a current node is an occupied node or not. For example, geometry information calculator <b>2712</b> calculates occupancy information on a neighboring node from an occupancy code of a parent node to which a current node belongs. Geometry information calculator <b>2712</b> may save a decoded node in a list and search the list for a neighboring node. Note that geometry information calculator <b>2712</b> may change neighboring nodes in accordance with the position of the current node in the parent node.</p><p id="p-0215" num="0214">Encoding table selector <b>271</b>.<b>3</b> selects an encoding table (decoding table) used for entropy decoding of the current node based on the occupancy information on the neighboring node calculated by geometry information calculator <b>2712</b>. For example, encoding table selector <b>2713</b> may generate a bit sequence based on the occupancy information on the neighboring node and select an encoding table of an index number generated from the bit sequence.</p><p id="p-0216" num="0215">Entropy decoder <b>2714</b> generates position information by entropy-decoding the occupancy code of the current node using the selected encoding table. Note that entropy decoder <b>2714</b> may obtain information on the selected encoding table by decoding the bitstream, and entropy-decode the occupancy code of the current node using the encoding table indicated by the information, in the following, configurations of an attribute information encoder and. an attribute information decoder will be described. <figref idref="DRAWINGS">FIG. <b>13</b></figref> is a block diagram showing an example configuration of attribute information encoder A<b>100</b>. The attribute information encoder may include a plurality of encoders that perform different encoding methods. For example, the attribute information encoder may selectively use any of the two methods described below in accordance with the use case.</p><p id="p-0217" num="0216">Attribute information encoder A<b>100</b> includes LoD attribute information encoder A<b>101</b> and transformed-attribute-information encoder A<b>102</b>. LoD attribute information encoder A<b>101</b> classifies three-dimensional points into a plurality of layers based on geometry information on the three-dimensional points, predicts attribute information on three-dimensional points belonging to each layer, and encodes a prediction residual therefor. Here, each layer into which a three-dimensional point is classified is referred to as a level of detail (LoD).</p><p id="p-0218" num="0217">Transformed-attribute-information encoder A<b>102</b> encodes attribute information using region adaptive hierarchical transform (RAHT). Specifically, transformed-attribute-information encoder A<b>102</b> generates a high frequency component and a low frequency component for each layer by applying RAHT or Haar transform to each item of attribute information based on the geometry information on three-dimensional points, and encodes the values by quantization, entropy encoding or the like.</p><p id="p-0219" num="0218"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram showing an example configuration of attribute information decoder A<b>110</b>. The attribute information decoder may include a plurality of decoders that perform different decoding methods. For example, the attribute information decoder may selectively use any of the two methods described below for decoding based on the information included in the header or metadata.</p><p id="p-0220" num="0219">Attribute information decoder A<b>110</b> includes LoD attribute information decoder A<b>111</b> and transformed-attribute-information decoder A<b>112</b> tool) attribute information decoder A<b>111</b> classifies three-dimensional points into a plurality of layers based on the geometry information on the three-dimensional points, predicts attribute information on three-dimensional points belonging to each layer, and decodes attribute values thereof.</p><p id="p-0221" num="0220">Transformed-attribute-information decoder A<b>112</b> decodes attribute information using region adaptive hierarchical transform (RAHT). Specifically, transformed-attribute-information decoder A<b>112</b> decodes each attribute value by applying inverse RAHT or inverse Haar transform to the high frequency component and the low frequency component of the attribute value based on the geometry information on the three-dimensional point.</p><p id="p-0222" num="0221"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a block diagram showing a configuration of attribute information encoder <b>3140</b> that is an example of LoD attribute information encoder A<b>101</b>.</p><p id="p-0223" num="0222">Attribute information encoder <b>3140</b> includes LoD generator <b>3141</b>, periphery searcher <b>3142</b>, predictor <b>3143</b>, prediction residual calculator <b>3144</b>, quantirer <b>3145</b>, arithmetic encoder <b>3146</b>, inverse quantizer <b>3147</b>, decoded value generator <b>3148</b>, and memory <b>3149</b>.</p><p id="p-0224" num="0223">LoD generator <b>3141</b> generates an LoD using geometry information on a three-dimensional point.</p><p id="p-0225" num="0224">Periphery searcher <b>3142</b> searches for a neighboring three-dimensional point neighboring each three-dimensional point using a result of LoD generation by LoD generator <b>3141</b> and distance information indicating distances between three-dimensional points.</p><p id="p-0226" num="0225">Predictor <b>3143</b> generates a predicted value of an item of attribute information on a current (target) three-dimensional point to be encoded.</p><p id="p-0227" num="0226">Prediction residual calculator <b>3144</b> calculates (generates) a prediction residual of the predicted value of the item of the attribute information generated by predictor <b>3143</b>.</p><p id="p-0228" num="0227">Quantizer <b>3145</b> quantizes the prediction residual of the item of attribute information calculated by prediction residual calculator <b>3144</b>.</p><p id="p-0229" num="0228">Arithmetic encoder <b>3146</b> arithmetically encodes the prediction residual quantized by quantizer <b>3145</b>. Arithmetic encoder <b>3146</b> outputs a bitstream including the arithmetically encoded prediction residual to the three-dimensional data decoding device, for example.</p><p id="p-0230" num="0229">The prediction residual may be binarized by quantizer <b>3145</b> before being arithmetically encoded by arithmetic encoder <b>3146</b>.</p><p id="p-0231" num="0230">Arithmetic encoder <b>3146</b> may initialize the encoding table used for the arithmetic encoding before performing the arithmetic encoding. Arithmetic encoder <b>3146</b> may initialize the encoding table used for the arithmetic encoding for each layer. Arithmetic encoder <b>3146</b> may output a bitstream including information that indicates the position of the layer at which the encoding table is initialized.</p><p id="p-0232" num="0231">Inverse quantizer <b>3147</b> inverse-quantizes the prediction residual quantized by quantizer <b>3145</b>.</p><p id="p-0233" num="0232">Decoded value generator <b>3148</b> generates a decoded value by adding the predicted value of the item of attribute information generated by predictor <b>3143</b> and the prediction residual inverse-quantized by inverse quantizer <b>3147</b> together.</p><p id="p-0234" num="0233">Memory <b>3149</b> is a memory that stores a decoded value of an item of attribute information on each three-dimensional point decoded by decoded value generator <b>3148</b>. For example, when generating a predicted value of a three-dimensional point yet to be encoded, predictor <b>3143</b> may generate the predicted value using a decoded value of an item of attribute information on each three-dimensional point stored in memory <b>3149</b>.</p><p id="p-0235" num="0234"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of attribute information encoder <b>6600</b> that is an example of transformation attribute information encoder A<b>102</b>. Attribute information encoder <b>6600</b> includes sorter <b>6601</b>, Haar transformer <b>6602</b>, quantizer <b>6603</b>, inverse quantizer <b>6604</b>, inverse Haar transformer <b>6605</b>, memory <b>6606</b>, and arithmetic encoder <b>6607</b>.</p><p id="p-0236" num="0235">Sorter <b>6601</b> generates the Morton codes by using the geometry information of three-dimensional points, and sorts the plurality of three-dimensional points in the order of the Morton codes. Haar transformer <b>6602</b> generates the coding coefficient by applying the Haar transform to the attribute information. Quantizer <b>6603</b> quantizes the coding coefficient of the attribute information.</p><p id="p-0237" num="0236">Inverse quantizer <b>6604</b> inverse quantizes the coding coefficient after the quantization, Inverse Haar transformer <b>6605</b> applies the inverse Haar transform to the coding coefficient. Memory <b>6606</b> stores the values of items of attribute information of a plurality of decoded three-dimensional points. For example, the attribute information of the decoded three-dimensional points stored in memory <b>6606</b> may be utilized for prediction and the like of an unencoded three-dimensional point.</p><p id="p-0238" num="0237">Arithmetic encoder <b>6607</b> calculates ZeroCnt from the coding coefficient after the quantization, and arithmetically encodes ZeroCnt. Additionally, arithmetic encoder <b>6607</b> arithmetically encodes the non-zero coding coefficient after the quantization. Arithmetic encoder <b>6607</b> may binarize the coding coefficient before the arithmetic encoding. In addition, arithmetic encoder <b>6607</b> may generate and encode various kinds of header information.</p><p id="p-0239" num="0238"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a block diagram showing a configuration of attribute information decoder <b>3150</b> that is an example of LoD attribute information decoder A<b>111</b>.</p><p id="p-0240" num="0239">Attribute information decoder <b>3150</b> includes Lon generator <b>3151</b>, periphery searcher <b>3152</b>, predictor <b>3153</b>, arithmetic decoder <b>3154</b>, inverse quantizer <b>3155</b>, decoded value generator <b>3156</b>, and memory <b>3157</b>.</p><p id="p-0241" num="0240">LoD generator <b>3151</b> generates an LoD using geometry information on a three-dimensional point decoded by the geometry information decoder (not shown in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0242" num="0241">Periphery searcher <b>3152</b> searches for a neighboring three-dimensional point neighboring each three-dimensional point using a result of LoD generation by LoD generator <b>3151</b> and distance information indicating distances between three-dimensional points.</p><p id="p-0243" num="0242">Predictor <b>3153</b> generates a predicted value of attribute information item on a current three-dimensional point to be decoded.</p><p id="p-0244" num="0243">Arithmetic decoder <b>3154</b> arithmetically decodes the prediction residual in the bitstream obtained from attribute information encoder <b>3140</b> shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. Note that arithmetic decoder <b>3154</b> may initialize the decoding table used for the arithmetic decoding. Arithmetic decoder <b>3154</b> initializes the decoding table used for the arithmetic decoding for the layer for which the encoding process has been performed by arithmetic encoder <b>3146</b> shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. Arithmetic decoder <b>3154</b> may initialize the decoding table used for the arithmetic decoding for each layer. Arithmetic decoder <b>3154</b> may initialize the decoding table based on the information included in the bitstream that indicates the position of the layer for which the encoding table has been initialized.</p><p id="p-0245" num="0244">Inverse quantizer <b>3155</b> inverse-quantizes the prediction residual arithmetically decoded by arithmetic decoder <b>3154</b>.</p><p id="p-0246" num="0245">Decoded value generator <b>3156</b> generates a decoded value by adding the predicted value generated by predictor <b>3153</b> and the prediction residual inverse-quantized by inverse quantizer <b>3155</b> together. Decoded value generator <b>3156</b> outputs the decoded attribute information data to another device.</p><p id="p-0247" num="0246">Memory <b>3157</b> is a memory that stores a decoded value of an item of attribute information on each three-dimensional point decoded by decoded value generator <b>3156</b>. For example, when generating a predicted value of a three-dimensional point yet to be decoded, predictor <b>3153</b> generates the predicted value using a decoded value of an item of attribute information on each three-dimensional point stored in memory <b>3157</b>.</p><p id="p-0248" num="0247"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a block diagram of attribute information decoder <b>6610</b> that is an example of transformation attribute information decoder A<b>112</b>. Attribute information decoder <b>6610</b> includes arithmetic decoder <b>6611</b>, inverse quantizer <b>6612</b>, inverse layer transformer <b>6613</b>, and memory <b>6614</b>.</p><p id="p-0249" num="0248">Arithmetic decoder <b>6611</b> arithmetically decodes ZeroCnt and the coding coefficient included in a bitstream. Note that arithmetic decoder <b>6611</b> may decode various kinds of header information.</p><p id="p-0250" num="0249">Inverse quantizer <b>661</b>.<b>2</b> inverse quantizes the arithmetically decoded coding coefficient. Inverse Haar transformer <b>6613</b> applies the inverse Haar transform to the coding coefficient after the inverse quantization. Memory <b>6614</b> stores the values of items of attribute information of a plurality of decoded three-dimensional points. For example, the attribute information of the decoded three-dimensional points stored in memory <b>6614</b> may be utilized for prediction of an undecoded three-dimensional point.</p><p id="p-0251" num="0250">Next, second encoder <b>4650</b>, which is an example of encoder <b>4613</b> that performs encoding in the second encoding method, will be described. <figref idref="DRAWINGS">FIG. <b>19</b></figref> is a diagram showing a configuration of second encoder <b>4650</b>. <figref idref="DRAWINGS">FIG. <b>20</b></figref> is a block diagram showing second encoder <b>4650</b>.</p><p id="p-0252" num="0251">Second encoder <b>4650</b> generates encoded data (encoded stream) by encoding point cloud data in the second encoding method. Second encode <b>4650</b> includes additional information generator <b>4651</b>, geometry image generator <b>4652</b>, attribute image generator <b>4653</b>, video encoder <b>4654</b>, additional information encoder <b>4655</b>, and multiplexer <b>4656</b>.</p><p id="p-0253" num="0252">Second encoder <b>4650</b> is characterized by generating a geometry image and an attribute image by projecting a three-dimensional structure onto a two-dimensional image, and encoding the generated geometry image and attribute image in an existing video encoding scheme. The second encoding method is referred to as video-based PCC (VPCC).</p><p id="p-0254" num="0253">Point cloud data is PCC point cloud data like a PLY file or PCC point cloud data generated from sensor information, and includes geometry information (position), attribute information (attribute), and other additional information (metadata).</p><p id="p-0255" num="0254">Additional information generator <b>4651</b> generates map information on a plurality of two-dimensional images by projecting a three-dimensional structure onto a two-dimensional image.</p><p id="p-0256" num="0255">Geometry image generator <b>4652</b> generates a geometry image based on the geometry information and the map information generated by additional information generator <b>4651</b>. The geometry image is a distance image in which distance (depth) is indicated as a pixel value, for example. The distance image may be an image of a plurality of point clouds viewed from one point of view (an image of a plurality of point clouds projected onto one two-dimensional plane), a plurality of images of a plurality of point clouds viewed from a plurality of points of view, or a single image integrating the plurality of images.</p><p id="p-0257" num="0256">Attribute image generator <b>4658</b> generates an attribute image based on the attribute information and the map information generated by additional information generator <b>4651</b>. The attribute image is an image in which attribute information (color (ROB), for example) is indicated as a pixel value, for example. The image may be an image of a plurality of point clouds viewed from one point of view (an image of a plurality of point clouds projected onto one two-dimensional plane), a plurality of images of a plurality of point clouds viewed from a plurality of points of view, or a single image integrating the plurality of images.</p><p id="p-0258" num="0257">Video encoder <b>4654</b> generates an encoded geometry image (compressed geometry image) and an encoded attribute image (compressed attribute image), which are encoded data, by encoding the geometry image and the attribute image in a video encoding scheme. Note that, as the video encoding scheme, any well-known encoding method can be used. For example, the video encoding scheme is AVC a HEVC.</p><p id="p-0259" num="0258">Additional information encoder <b>4655</b> generates encoded additional information (compressed metadata) by encoding the additional information, the map information and the like included in the point cloud data. Multiplexer <b>4656</b> generates an encoded stream (compressed stream), which is encoded data, by multiplexing the encoded geometry image, the encoded attribute image, the encoded additional information, and other additional information. The generated encoded stream is output to a processor in a system layer (not shown).</p><p id="p-0260" num="0259">Next, second decoder <b>4660</b>, which is an example of decoder <b>4624</b> that performs decoding in the second encoding method, will be described. <figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram showing a configuration of second decoder <b>4660</b>. <figref idref="DRAWINGS">FIG. <b>22</b></figref> is a block diagram showing second decoder <b>4660</b>. Second decoder <b>4660</b> generates point cloud data by decoding encoded data (encoded stream) encoded in the second encoding method in the second encoding method. Second decoder <b>4660</b> includes demultiplexer <b>4661</b>, video decoder <b>4662</b>, additional information decoder <b>4663</b>, geometry information generator <b>4664</b>, and attribute information generator <b>4665</b>.</p><p id="p-0261" num="0260">An encoded stream (compressed stream), which is encoded data, is input to second decoder <b>4660</b> from a processor in a system layer (not shown).</p><p id="p-0262" num="0261">Demultiplexer <b>4661</b> separates an encoded geometry image (compressed geometry image), an encoded attribute image (compressed attribute image), an encoded additional information (compressed metadata), and other additional information from the encoded data.</p><p id="p-0263" num="0262">Video decoder <b>4662</b> generates a geometry image and an attribute image by decoding the encoded geometry image and the encoded attribute image in a video encoding scheme. Note that, as the video encoding scheme, any well-known encoding method can be used. For example, the video encoding scheme is AVC or HEVC.</p><p id="p-0264" num="0263">Additional information decoder <b>4663</b> generates additional information Auding map information or the like by decoding the encoded additional information.</p><p id="p-0265" num="0264">Geometry information generator <b>4664</b> generates geometry information from the geometry image and the map information. Attribute information generator <b>4665</b> generates attribute information from the attribute image and the map information.</p><p id="p-0266" num="0265">Second decoder.<b>1660</b> uses additional information required for decoding in the decoding, and outputs additional information required for an application to the outside.</p><p id="p-0267" num="0266">In the following, a problem with the PCC encoding scheme will be described. <figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagram showing a protocol stack relating to FCC-encoded data. <figref idref="DRAWINGS">FIG. <b>23</b></figref> shows an example in which PCC-encoded data is multiplexed with other medium data, such as a video (HEVC, for example) or an audio, and transmitted or accumulated.</p><p id="p-0268" num="0267">A multiplexing scheme and a file format have a function of multiplexing various encoded data and transmitting or accumulating the data. To transmit or accumulate encoded data, the encoded data has to be converted into a format for the multiplexing scheme. For example, with HEVC, a technique for storing encoded data in a data structure referred to as a NAL unit and storing the NAL unit in ISOBMFF is prescribed.</p><p id="p-0269" num="0268">At present, a first encoding method (Codec<b>1</b>) and a second encoding method (Codec<b>2</b>) are under investigation as encoding methods for point cloud data. However, there is no method defined for storing the configuration of encoded data and the encoded data in a system format. Thus, there is a problem that an encoder cannot perform an MUX process (multiplexing), transmission, or accumulation of data.</p><p id="p-0270" num="0269">Note that, in the following, the term &#x201c;encoding method&#x201d; means any of the first encoding method and the second encoding method unless a particular encoding method is specified.</p><heading id="h-0009" level="1">Embodiment 2</heading><p id="p-0271" num="0270">In this embodiment, types of the encoded data (geometry information (geometry), attribute information (attribute), and additional information (metadata)) generated by first encoder <b>4630</b> or second encoder <b>4650</b> described above, a method of generating additional information (metadata), and a multiplexing process in the multiplexer will be described. The additional information (metadata) may be referred to as a parameter set or control information (signaling information).</p><p id="p-0272" num="0271">In this embodiment, the dynamic object (three-dimensional point cloud data that varies with time) described above with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref> will be described, for example. However, the same method can also be used for the static object (three-dimensional point cloud data associated with an arbitrary time point).</p><p id="p-0273" num="0272"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a diagram showing configurations of encoder <b>4801</b> and multiplexer <b>4802</b> in a three-dimensional data encoding device according to this embodiment. Encoder <b>4801</b> corresponds to first encoder <b>4630</b> or second encoder <b>4650</b> described above, for example. Multiplexer <b>4802</b> corresponds to multiplexer <b>4634</b> or <b>4656</b> described above.</p><p id="p-0274" num="0273">Encoder <b>4801</b> encodes a plurality of PCC (point cloud compression) frames of point cloud data to generate a plurality of pieces of encoded data (multiple compressed data) of geometry information, attribute information, and additional information.</p><p id="p-0275" num="0274">Multiplexer <b>4802</b> integrates a plurality of types of data (geometry information, attribute information, and additional information) into a NAL unit, thereby converting the data into a data configuration that takes data access in the decoding device into consideration.</p><p id="p-0276" num="0275"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a diagram showing a configuration example of the encoded data generated by encoder <b>4801</b>. Arrows in the drawing indicate a dependence involved in decoding of the encoded data. The source of an arrow depends on data of the destination of the arrow. That is, the decoding device decodes the data of the destination of an arrow, and decodes the data of the source of the arrow using the decoded data other words, &#x201c;a first entity depends on a second entity&#x201d; means that data of the second entity is referred to (used) in processing (encoding, decoding, or the like) of data of the first entity.</p><p id="p-0277" num="0276">First, a process of generating encoded data of geometry information <b>1</b> will be described. Encoder <b>4801</b> encodes geometry information of each frame to generate encoded geometry data (compressed geometry data) for each frame. The encoded geometry data is denoted by G(i). i denotes a frame number or a time point of a frame, for example.</p><p id="p-0278" num="0277">Furthermore, encoder <b>4801</b> generates a geometry parameter set (GPS(i)) for each frame. The geometry parameter set includes a parameter that can be used for decoding of the encoded geometry data. The encoded geometry data for each frame depends on an associated geometry parameter set.</p><p id="p-0279" num="0278">The encoded geometry data formed by a plurality of frames is defined as a geometry sequence. Encoder <b>4801</b> generates a geometry sequence parameter set (referred to also as geometry sequence PS or geometry SPS) that stores a parameter commonly used for a decoding process for the plurality of frames in the geometry sequence. The geometry sequence depends on the geometry SPS.</p><p id="p-0280" num="0279">Next, a process of generating encoded data of attribute information will be described. Encoder <b>4801</b> encodes attribute information of each frame to generate encoded attribute data (compressed attribute data.) for each frame. The encoded attribute data is denoted by A(i). <figref idref="DRAWINGS">FIG. <b>25</b></figref> shows an example in which there are attribute X and attribute Y, and encoded attribute data for attribute X is denoted by AX(i), and encoded attribute data for attribute Y is denoted by AY(i).</p><p id="p-0281" num="0280">Furthermore, encoder <b>4801</b> generates an attribute parameter set (APS(i)) for each frame. The attribute parameter set for attribute X is denoted by AXPS(i), and the attribute parameter set for attribute Y is denoted by AYPS(i). The attribute parameter set includes a parameter that can be used for decoding of the encoded attribute information. The encoded attribute data depends on an associated attribute parameter set.</p><p id="p-0282" num="0281">The encoded attribute data formed by a plurality of frames is defined as an attribute sequence. Encoder <b>4801</b> generates an attribute sequence parameter set (referred to also as attribute sequence PS or attribute SPS) that stores a parameter commonly used for a decoding process for the plurality of frames in the attribute sequence. The attribute sequence depends on the attribute SPS.</p><p id="p-0283" num="0282">In the first encoding method, the encoded attribute data depends on the encoded geometry data.</p><p id="p-0284" num="0283"><figref idref="DRAWINGS">FIG. <b>25</b></figref> shows an example in which there are two types of attribute information (attribute X and attribute Y). When there are two types of attribute information, for example, two encoders generate data and metadata for the two types of attribute information. For example, an attribute sequence is defined for each type of attribute information, and an attribute SPS is generated for each type of attribute information.</p><p id="p-0285" num="0284">Note that, although <figref idref="DRAWINGS">FIG. <b>25</b></figref> shows an example in which there is one type of geometry information, and there are two types of attribute information, the present disclosure is not limited thereto. There may be one type of attribute information or three or more types of attribute information. In such cases, encoded data can be generated in the same manner. If the point cloud data has no attribute information, there may be no attribute information. In such a case, encoder <b>4801</b> does not have to generate a parameter set associated with attribute information.</p><p id="p-0286" num="0285">Next, a process of generating encoded data of additional information (metadata) will be described. Encoder <b>4801</b> generates a PCC stream PS (referred to also as PCC stream PS or stream PS), which is a parameter set for the entire PCC stream. Encoder <b>4801</b> stores a parameter that can be commonly used for a decoding process for one or more geometry sequences and one or more attribute sequences in the stream PS. For example, the stream PS includes identification information indicating the codec for the point cloud data and information indicating an algorithm used for the encoding, for example. The geometry sequence and the attribute sequence depend on the stream PS.</p><p id="p-0287" num="0286">Next, an access unit and a GOF will be described. In this embodiment, concepts of access unit (AU) and group of frames (GOF) are newly introduced.</p><p id="p-0288" num="0287">An access unit is a basic unit for accessing data in decoding, and is formed by one or more pieces of data and one or more pieces of metadata. For example, an access unit is formed by geometry information and one or more pieces of attribute information associated with a same time point. A GOF is a random access unit, and is formed by one or more access units.</p><p id="p-0289" num="0288">Encoder <b>4801</b> generates an access unit header (AU header) as identification information indicating the top of an access unit. Encoder <b>4801</b> stores a parameter relating to the access unit in the access unit header. For example, the access unit header includes a configuration of or information on the encoded data included in the access unit. The access unit header further includes a parameter commonly used for the data included in the access unit, such as a parameter relating to decoding of the encoded data.</p><p id="p-0290" num="0289">Note that encoder <b>4801</b> may generate an access unit delimiter that includes no parameter relating to the access unit, instead of the access unit header. The access unit delimiter is used as identification information indicating the top of the access unit. The decoding device identifies the top of the access unit by detecting the access unit header or the access unit delimiter.</p><p id="p-0291" num="0290">Next, generation of identification information for the top of a GOF will be described. As identification information indicating the top of a GOF, encoder <b>4801</b> generates a GOF header. Encoder <b>4801</b> stores a parameter relating to the GOF in the GOF header. For example, the GOF header includes a configuration of or information on the encoded data included in the GOF. The GOF header further includes a parameter commonly used for the data included in the GOF, such as a parameter relating to decoding of the encoded data,</p><p id="p-0292" num="0291">Note that, encoder <b>4801</b> may generate a GOF delimiter that includes no parameter relating to the GOF, instead of the GOF header. The GOF delimiter is used as identification information indicating the top of the GOF. The decoding device identifies the top of the GOF by detecting the GOF header or the GOF delimiter.</p><p id="p-0293" num="0292">In the PCC-encoded data, the access unit is defined as a PCC frame unit, for example. The decoding device accesses a PCC frame based on the identification information for the top of the access unit.</p><p id="p-0294" num="0293">For example, the GOF is defined as one random access unit. The decoding device accesses a random access unit based on the identification information for the top of the GOF. For example, if PCC frames are independent from each other and can be separately decoded, a PCC frame can be defined as a random access unit.</p><p id="p-0295" num="0294">Note that two or more FCC frames may be assigned to one access unit, and a plurality of random access units may be assigned to one GOF.</p><p id="p-0296" num="0295">Encoder <b>4801</b> may define and generate a parameter set or metadata other than those described above. For example, encoder <b>4801</b> may generate supplemental enhancement information (SEI) that stores a parameter (an optional parameter) that is not always used for decoding.</p><p id="p-0297" num="0296">Next, a configuration of encoded data and a method of storing encoded data in a NAL unit will be described.</p><p id="p-0298" num="0297">For example, a data format is defined for each type of encoded data. <figref idref="DRAWINGS">FIG. <b>26</b></figref> is a diagram showing an example of encoded data and a NAL unit.</p><p id="p-0299" num="0298">For example, as shown in <figref idref="DRAWINGS">FIG. <b>26</b></figref>, encoded data includes a header and a payload. The encoded data may include length information indicating the length (data amount) of the encoded data, the header, or the payload. The encoded data may include no header.</p><p id="p-0300" num="0299">The header includes identification information for identifying the data, for example. The identification information indicates a data type or a frame number, for example,</p><p id="p-0301" num="0300">The header includes identification information indicating a reference relationship, for example. The identification information is stored in the header when there is a dependence relationship between data, for example, and allows an entity to refer to another entity. For example, the header of the entity to be referred to includes identification information for identifying the data. The header of the referring entity includes identification information indicating the entity to be referred to.</p><p id="p-0302" num="0301">Note that, when the entity to be referred to or the referring entity can be identified or determined from other information, the identification information for identifying the data or identification information indicating the reference relationship can be omitted.</p><p id="p-0303" num="0302">Multiplexer <b>4802</b> stores the encoded data in the payload of the NAL unit, The NAL unit header includes pcc_nal_unit_type, which is identification information for the encoded data. <figref idref="DRAWINGS">FIG. <b>27</b></figref> is a diagram showing a semantics example of pcc_nal_unit_type.</p><p id="p-0304" num="0303">As shown in <figref idref="DRAWINGS">FIG. <b>27</b></figref>, when pcc_codec_type is codec <b>1</b> (Codec<b>1</b>: first encoding method), values 0 to 10 of pcc_nat_unit_type are assigned to encoded geometry data (Geometry), encoded attribute X data (AttributeX), encoded attribute Y data (AttributeY), geometry PS (Geom. PS), attribute XPS (AttrX S), attribute YIPS (AttrY. PS), geometry SPS (Geometry Sequence PS), attribute X SPS (AttributeX Sequence PS), attribute Y SPS (AtributeY Sequence PS), AU header (AU Header), and GOF header (GOF Header) in codec <b>1</b>. Values of 11 and greater are reserved in codec <b>1</b>.</p><p id="p-0305" num="0304">When pcc_cod.ec_type is codec <b>2</b> (Codec<b>2</b>: second encoding method), values of 0 to 2 of pcc_nal_unit_type are assigned to data A (DataA), metadata A (MetaDataA), and metadata B (MetaDataB) in the codec. Values of 3 and greater are reserved in codec <b>2</b>.</p><p id="p-0306" num="0305">Next, an order of transmission of data will be described. In the following, restrictions on the order of transmission of NAL units will be described,</p><p id="p-0307" num="0306">Multiplexer <b>4802</b> transmits NAL units on a G-OF basis or on an AU basis. Multiplexer <b>4802</b> arranges the GOF header at the top of a GOF, and arranges the AU header at the top of an AU.</p><p id="p-0308" num="0307">In order to allow the decoding device to decode the next AU and the following AUs even when data is lost because of a packet loss or the like, multiplexer <b>4802</b> may arrange a sequence parameter set (SPS) in each AU.</p><p id="p-0309" num="0308">When there is a dependence relationship for decoding between encoded data, the decoding device decodes the data of the entity to be referred to and then decodes the data of the referring entity. In order to allow the decoding device to perform decoding in the order of reception without rearranging the data, multiplexer <b>4802</b> first transmits the data of the entity to be referred to.</p><p id="p-0310" num="0309"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a diagram showing examples of the order of transmission of NAL units, <figref idref="DRAWINGS">FIG. <b>28</b></figref> shows three examples, that is, geometry information-first order, parameter-first order, and data-integrated order.</p><p id="p-0311" num="0310">The geometry information-first order of transmission is an example in which information relating to geometry information is transmitted together, and information relating to attribute information is transmitted together. In the case of this order of transmission, the transmission of the information relating to the geometry information ends earlier than the transmission of the information relating to the attribute information.</p><p id="p-0312" num="0311">For example, according to this order of transmission is used, when the decoding device does not decode attribute information, the decoding device may be able to have an idle time since the decoding device can omit decoding of attribute information. When the decoding device is required to decode geometry information early, the decoding device may be able to decode geometry information earlier since the decoding device obtains encoded data of the geometry information earlier.</p><p id="p-0313" num="0312">Note that, although in <figref idref="DRAWINGS">FIG. <b>28</b></figref> the attribute X SPS and the attribute Y SPS are integrated and shown as the attribute SPS, the attribute X SPS and the attribute Y SPS may be separately arranged.</p><p id="p-0314" num="0313">In the parameter set-first order of transmission, a parameter set is first transmitted, and data is then transmitted.</p><p id="p-0315" num="0314">As described above, as far as the restrictions on the order of transmission of NAL units are met, multiplexer <b>4802</b> can transmit NAL units in any order. For example, order identification information may be defined, and multiplexer <b>4802</b> may have a function of transmitting NAL units in a plurality of orders. For example, the order identification information for NAL units is stored in the stream. PS.</p><p id="p-0316" num="0315">The three-dimensional data decoding device may perform decoding based on the order identification information. The three-dimensional data decoding device may indicate a desired order of transmission to the three-dimensional data encoding device, and the three-dimensional data encoding device (multiplexer <b>4802</b>) may control the order of transmission according to the indicated order of transmission.</p><p id="p-0317" num="0316">Note that multiplexer <b>4802</b> can generate encoded data having a plurality of functions merged to each other as in the case of the data-integrated order of transmission, as far as the restrictions on the order of transmission are met. For example, as shown in <figref idref="DRAWINGS">FIG. <b>28</b></figref>, the GOF header and the. AU header may be integrated, or AXPS and AYPS may be integrated. In such a case, an identifier that indicates data having a plurality of functions is defined in pcc_nal_unit_type.</p><p id="p-0318" num="0317">In the following, variations of this embodiment will be described. There are levels of PSS, such as a frame-level PS, a sequence-level PS, and a PCC sequence-level PS. Provided that the PCC sequence level is a higher level, and the frame level is a lower level, parameters can be stored in the manner described below.</p><p id="p-0319" num="0318">The value of a default PS is indicated in a PS at a higher level. If the value of a PS at a lower level differs from the value of the PS at a higher level, the value of the PS is indicated in the PS at the lower level. Alternatively, the value of the PS is not described in the PS at the higher level but is described in the PS at the lower level. Alternatively, information indicating whether the value of the PS is indicated in the PS at the lower level, at the higher level, or at both the levels is indicated in both or one of the PS at the lower level and the PS at the higher level. Alternatively, the PS at the lower level may be merged with the PS at the higher level. If the PS at the lower level and the PS at the higher level overlap with each other, multiplexer <b>4802</b> may omit transmission of one of the PSs.</p><p id="p-0320" num="0319">Note that encoder <b>4801</b> or multiplexer <b>4802</b> may divide data into slices or tiles and transmit each of the divided slices or tiles as divided data. The divided data includes information for identifying the divided data, and a parameter used for decoding of the divided data is included in the parameter set. In this case, an identifier that indicates that the data is data relating to a tile or slice or data storing a parameter is defined in pcc_nal_unit type.</p><p id="p-0321" num="0320">In the following, a process relating to order identification information will be described. <figref idref="DRAWINGS">FIG. <b>29</b></figref> is a flowchart showing a process performed by the three-dimensional data encoding device (encoder <b>4801</b> and multiplexer <b>4802</b>) that involves the order of transmission of NAL units.</p><p id="p-0322" num="0321">First, the three-dimensional data encoding device determines the order of transmission of NAL units (geometry information-first or parameter set-first) (S<b>4801</b>). For example, the three-dimensional data encoding device determines the order of transmission based on a specification from a user or an external device (the three-dimensional data decoding device, for example).</p><p id="p-0323" num="0322">If the determined order of transmission is geometry information-first (if &#x201c;geometry information-first&#x201d; in S<b>4802</b>), the three-dimensional data encoding device sets the order identification information included in the stream PS to geometry information-first (S<b>4803</b>). That is, in this case, the order identification information indicates that the NAL units are transmitted in the geometry information-first order. The three-dimensional data encoding device then transmits the NAL units in the geometry information-first order (S<b>4804</b>).</p><p id="p-0324" num="0323">On the other hand, if the determined order of transmission is parameter set-first (if &#x201c;parameter set-first&#x201d; in S<b>4802</b>), the three-dimensional data encoding device sets the order identification information included in the stream PS to parameter set-first (S<b>4805</b>). That is, in this case, the order identification information indicates that the NAL units are transmitted in the parameter set-first order. The three-dimensional data encoding device then transmits the NAL units in the parameter set-first order (S<b>4806</b>).</p><p id="p-0325" num="0324"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a flowchart showing a process performed by the three-dimensional data decoding device that involves the order of transmission of NAL units. First, the three-dimensional data decoding device analyzes the order identification information included in the stream PS (S<b>4811</b>).</p><p id="p-0326" num="0325">If the order of transmission indicated by the order identification information is geometry information-first (if &#x201c;geometry information-first&#x201d; in S<b>4812</b>), the three-dimensional data decoding device decodes the NAL units based on the determination that the order of transmission of the NAL units is geometry information-first (S<b>4813</b>).</p><p id="p-0327" num="0326">On the other hand, if the order of transmission indicated by the order identification information is parameter set-first (if &#x201c;parameter set-first&#x201d; in S<b>4812</b>), the three-dimensional data decoding device decodes the NAL units based on the determination that the order of transmission of the NAL units is parameter set-first (S<b>4814</b>).</p><p id="p-0328" num="0327">For example, if the three-dimensional data decoding device does not decode attribute information, in step S<b>4813</b>, the three-dimensional data decoding device does not obtain the entire NAL units but can obtain a part of a NAL unit relating to the geometry information and decode the obtained NAL unit to obtain the geometry information.</p><p id="p-0329" num="0328">Next, a process relating to generation of an AU and a GOF will be described. <figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flowchart showing a process performed by the three-dimensional data encoding device (multiplexer <b>4802</b>) that relates to generation of an AU and a GOF in multiplexing of NAL units.</p><p id="p-0330" num="0329">First, the three-dimensional data encoding device determines the type of the encoded data (S<b>4821</b>). Specifically, the three-dimensional data encoding device determines whether the encoded data to be processed is AU-first data, GOF-first data, or other data.</p><p id="p-0331" num="0330">If the encoded data is GOF-first data (if &#x201c;GOF-first&#x201d; in S<b>4822</b>), the three-dimensional data encoding device generates NAL units by arranging a GOF header and an AU header at the top of the encoded data belonging to the GOF (S<b>4823</b>).</p><p id="p-0332" num="0331">If the encoded data is AU-first data (if &#x201c;AU-first&#x201d; in S<b>4822</b>), the three-dimensional data encoding device generates NAL units by arranging an AU header at the top of the encoded data belonging to the AU (S<b>4824</b>).</p><p id="p-0333" num="0332">If the encoded data is neither GOF-first data nor AU-first data (if &#x201c;other than GOF-first and AU-first&#x201d; in S<b>4822</b>), the three-dimensional data encoding device generates NAL units by arranging the encoded data to follow the AU header of the AU to which the encoded data belongs (S<b>4825</b>).</p><p id="p-0334" num="0333">Next, a process relating to access to an AU and a GOF will be described. <figref idref="DRAWINGS">FIG. <b>32</b></figref> is a flowchart showing a process performed by the three-dimensional data decoding device that involves accessing to an AU and a GOF in demultiplexing of a NAL unit.</p><p id="p-0335" num="0334">First, the three-dimensional data decoding device determines the type of the encoded data included in the NAL unit by analyzing nal_unit_type in the NAL unit (S<b>4831</b>). Specifically, the three-dimensional data decoding device determines whether the encoded data included in the NAL unit is AU-first data, GOF-first data, or other data.</p><p id="p-0336" num="0335">If the encoded data included in the NAL unit is GOF-first data (if &#x201c;G<b>0</b>E-first&#x201d; in S<b>4832</b>), the three-dimensional data decoding device determines that the NAL unit is a start position of random access, accesses the NAL unit, and starts the decoding process (S<b>4833</b>).</p><p id="p-0337" num="0336">If the encoded data included in the NAL unit is AU-first data (if &#x201c;AU-first&#x201d; in S<b>4832</b>), the three-dimensional data decoding device determines that the NAL unit is AU-first, accesses the data included in the NAL unit, and decodes the AU (S<b>4834</b>).</p><p id="p-0338" num="0337">If the encoded data included in the NAL unit is neither <b>00</b>F-first data. nor AU-first data. (if &#x201c;other than GOF-first and AU-first&#x201d; in S<b>4832</b>), the three-dimensional data decoding device does not process the NAL unit.</p><heading id="h-0010" level="1">Embodiment 3</heading><p id="p-0339" num="0338">Information of a three-dimensional point cloud includes geometry information (geometry) and attribute information (attribute). Geometry information includes coordinates (x-coordinate, y-coordinate, z-coordinate) with respect to a certain point. When geometry information is encoded, a method of representing the position of each of three-dimensional points in octree representation and encoding the octree information to reduce a code amount is used instead of directly encoding the coordinates of the three-dimensional point.</p><p id="p-0340" num="0339">On the other hand, attribute information includes information indicating, for example, color information (ROB, YIN, etc.) of each three-dimensional point, a reflectance, and a normal vector. For example, a three-dimensional data encoding device is capable of encoding attribute information using an encoding method different from a method used to encode geometry information.</p><p id="p-0341" num="0340">In the present embodiment, a method of encoding attribute information is explained. It is to be noted that, in the present embodiment, the method is explained based on an example case using integer values as values of attribute information. For example, when each of ROB or YIN color components is of an 8-bit accuracy, the color component is an integer value in a range from 0 to 255. When a reflectance value is of 10-bit accuracy, the reflectance value is an integer in a range from 0 to 1023. It is to be noted that, when the bit accuracy of attribute information is a decimal accuracy, the three-dimensional data encoding device may multiply the value by a scale value to round it to an integer value so that the value of the attribute information becomes an integer value. It is to be noted that the three-dimensional data encoding device may add the scale value to, for example, a header of a bitstream.</p><p id="p-0342" num="0341">As a method of encoding attribute information of a three-dimensional point, it is conceivable to calculate a predicted value of the attribute information of the three-dimensional point and encode a difference (prediction residua between the original value of the attribute information and the predicted value. For example, when the value of attribute information at three-dimensional point p is Ap and a predicted value is Pp, the three-dimensional data encoding device encodes differential absolute value Diffp=|Ap&#xb7;Pp|. In this case, when highly-accurate predicted value Pp can be generated, differential absolute value Diffp is small. Thus, for example, it is possible to reduce the code amount by entropy encoding differential absolute value Diffp using a coding table that reduces an occurrence bit count more when differential absolute value Diffp is smaller.</p><p id="p-0343" num="0342">As a method of generating a prediction value of attribute information, it is conceivable to use attribute information of a reference three-dimensional point that is another three-dimensional point which neighbors a current three-dimensional point to be encoded. Here, a reference three-dimensional point is a three-dimensional point in a range of a predetermined distance from the current three-dimensional point. For example, hen there are current three-dimensional point p=(x<b>1</b>, y<b>1</b>, z<b>1</b>) and three-dimensional point q=(x<b>2</b>, y<b>2</b>, z<b>2</b>), the three-dimensional data encoding device calculates Euclidean distance d (p, q) between three-dimensional point p and three-dimensional point q represented by (Equation A1).</p><p id="p-0344" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>[Math. 1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0345" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>(<i>p,q</i>)=&#x221a;{square root over ((<i>x</i>1<i>&#x2212;y</i>1)<sup>2</sup>+(<i>x</i>2&#x2212;<i>y</i>2)<sup>2</sup>+(<i>x</i>3&#x2212;<i>y</i>3)<sup>2</sup>)}&#x2003;&#x2003;(Equation A1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0346" num="0343">The three-dimensional data encoding device determines that the position of three-dimensional point q is closer to the position of current three-dimensional point p when Euclidean distance d (p, q) is smaller than predetermined threshold value THd, and determines to use the value of the attribute information of three-dimensional point q to generate a predicted value of the attribute information of current three-dimensional point p. It is to be rioted that the method of calculating the distance may be another method, and a Mahalanobis distance or the like may be used. In addition, the three-dimensional data encoding device may determine not to use, in prediction processing, any three-dimensional point outside the predetermined range of distance from the current three-dimensional point. For example, when three-dimensional point r is present, and distance d (p, r.) between current three-dimensional point p and three-dimensional point r is larger than or equal to threshold value THd, the three-dimensional data encoding device may determine not to use three-dimensional point r for prediction. It is to be noted that the three-dimensional data encoding device may add the information indicating threshold value THd to, for example, a header of a bitstream.</p><p id="p-0347" num="0344"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a diagram illustrating an example of three-dimensional points. In this example, distance d (p, q) between current three-dimensional point p and three-dimensional point q is smaller than threshold value THd. Thus, the three-dimensional data encoding device determines that three-dimensional point q is a reference three-dimensional point of current three-dimensional point p, and determines to use the value of attribute information Aq of three-dimensional point q to generate predicted value Pp of attribute information Ap of current three-dimensional point p.</p><p id="p-0348" num="0345">In contrast, distance d r) between current three-dimensional point p and three-dimensional point r is larger than or equal to threshold value THd. Thus, the three-dimensional data encoding device determines that three-dimensional point r is not any reference three-dimensional point of current three-dimensional point p, and determines not to use the value of attribute information Ar of three-dimensional point r to generate predicted value Pp of attribute information Ap of current three-dimensional point p.</p><p id="p-0349" num="0346">In addition, when encoding the attribute information of the current three-dimensional point using a predicted value, the three-dimensional data encoding device uses a three-dimensional point whose attribute information has already been encoded and decoded, as a reference three-dimensional point. Likewise, when decoding the attribute information of a current three-dimensional point to be decoded, the three-dimensional data decoding device uses a three-dimensional point whose attribute information has already been decoded, as a reference three-dimensional point. In this way, it is possible to generate the same predicted value at the time of encoding and decoding. Thus, a bitstream of the three-dimensional point generated by the encoding can be decoded correctly at the decoding side.</p><p id="p-0350" num="0347">Furthermore, when encoding attribute information of each of three-dimensional points, it is conceivable to classify the three-dimensional point into one of a plurality of layers using geometry information of the three-dimensional point and then encode the attribute information. Here, each of the layers classified is referred to as a Level of Detail (LoD). A method of generating LoD is explained with reference to <figref idref="DRAWINGS">FIG. <b>34</b></figref>.</p><p id="p-0351" num="0348">First, the three-dimensional data encoding device selects initial point a<b>0</b> and assigns initial point a<b>0</b> to LoD<b>0</b>. Next, the three-dimensional data encoding device extracts point a<b>1</b> distant from point a<b>0</b> more than threshold value Thres_LoD[<b>0</b>] of LoD<b>0</b> and assigns point a<b>1</b> to LoD<b>0</b>. Next, the three-dimensional data encoding device extracts point a<b>2</b> distant from point al more than threshold value Thres_LoD[<b>0</b>] of LoD<b>0</b> and assigns point a<b>2</b> to LoD<b>0</b>. In this way, the three-dimensional data encoding device configures LoD<b>0</b> in such a manner that the distance between the points in LoD<b>0</b> is larger than threshold value ThresLoD[<b>0</b>].</p><p id="p-0352" num="0349">Next, the three-dimensional data encoding device selects point b<b>0</b> which has not yet been assigned to any LoD and assigns point b<b>0</b> to LoD<b>1</b>. Next, the three-dimensional data encoding device extracts point, hi which is distant from point b<b>0</b> more than threshold value Thres_LoD[<b>1</b>] of LoD<b>1</b> and which has not yet been assigned to any LoD, and assigns point b<b>1</b> to LoD<b>1</b>. Next, the three-dimensional data encoding device extracts point b<b>2</b> which is distant from point b<b>1</b> more than threshold value Thres_LoD[<b>1</b>] LoD<b>1</b> and which has not yet been assigned to any LoD, and assigns point b<b>2</b> to LoD<b>1</b>. In this way, the three-dimensional data encoding device configures LoD<b>1</b> in such a manner that the distance between the points in LoD<b>1</b> is larger than threshold value ThresLoD[<b>1</b>].</p><p id="p-0353" num="0350">Next, the three-dimensional data encoding device selects point c<b>0</b> which has not yet been assigned to any LoD and assigns point c<b>0</b> to LoD<b>2</b>. Next, the three-dimensional data encoding device extracts point c<b>1</b> which is distant from point c<b>0</b> more than threshold value Thres_LoD[<b>2</b>] of LoD<b>2</b> and which has not yet been assigned to any LoD, and assigns point c<b>1</b> to LoD<b>2</b>. Next, the three-dimensional data encoding device extracts point c<b>2</b> which is distant from point c<b>1</b> more than threshold value ThresLoD[<b>2</b>] of LoD<b>2</b> and which has not, vet been assigned to any LoD, and assigns point c<b>2</b> to LoD<b>2</b>. In this way, the three-dimensional data encoding device configures :LoD<b>2</b> in such a mariner that the distance between the points in LoD<b>2</b> is larger than threshold value Thres_LoD[<b>2</b>]. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>35</b></figref>, threshold values Thres_LoD[<b>0</b>]. Thres_LoD[<b>1</b>], and Thres_LoD[<b>2</b>] of respective LoDs are set.</p><p id="p-0354" num="0351">In addition, the three-dimensional data encoding device may add the information indicating the threshold value of each LoD to, for example, a header of a bitstream. For example, in the case of the example illustrated in <figref idref="DRAWINGS">FIG. <b>35</b></figref>, the three-dimensional data encoding device may add threshold values Thres_LoD[<b>0</b>]. Thres_LoDW, and Thres_LoD[<b>2</b>] of respective LoDs to a header.</p><p id="p-0355" num="0352">Alternatively, the three-dimensional data encoding device may assign all three-dimensional points which have not yet been assigned to any LoD in the lowermost-layer LoD. In this case, the three-dimensional data encoding device is capable of reducing the code amount of the header by not assigning the threshold value of the lowermost-layer LoD to the header. For example, in the case of the example illustrated in <figref idref="DRAWINGS">FIG. <b>35</b></figref>, the three-dimensional data encoding device assigns threshold values Thres_LoD[<b>0</b>] and Thres_LoD[<b>1</b>] to the header, and does not assign Thres._LoN[<b>2</b>] to the header. In this case, the three-dimensional data encoding device may estimate value 0 of Thres_LoD[<b>2</b>]. In addition, the three-dimensional data encoding device may add the number of LoDs to a header. In this way, the three-dimensional data encoding device is capable of determining the lowermost-layer LoD using the number of LoDs.</p><p id="p-0356" num="0353">In addition, setting threshold values for the respective layers LoDs in such a manner that a larger threshold value is set to a higher layer makes a higher layer (layer closer to LoD<b>0</b>) to have a sparse point cloud (sparse) in which three-dimensional points are more distant and makes a lower layer to have a dense point cloud (dense) in which three-dimensional points are closer. It is to be noted that, in an example illustrated in <figref idref="DRAWINGS">FIG. <b>35</b></figref>, LoD<b>0</b> is the uppermost layer.</p><p id="p-0357" num="0354">In addition, the method of selecting an initial three-dimensional point at the time of setting each LoD may depend on an encoding order at the time of geometry information encoding. For example, the three-dimensional data encoding device configures LoD<b>0</b> by selecting the three-dimensional point encoded first at the time of the geometry information encoding as initial point a<b>0</b> of LoD<b>0</b>, and selecting point a<b>1</b> and point a<b>2</b> from initial point a<b>0</b> as the origin.</p><p id="p-0358" num="0355">The three-dimensional data encoding device then may select the three-dimensional point whose geometry information has been encoded at the earliest time among three-dimensional points which do not belong to LoD<b>0</b>, as initial point p<b>0</b> of LoD<b>1</b>. In other words, the three-dimensional data encoding device may select the three-dimensional point whose geometry information has been encoded at the earliest time among three-dimensional points which do not belong to layers (LoD<b>0</b> to LoDn&#x2212;<b>1</b>) above LoDn, as initial point n<b>0</b> of LoDn. In this way, the three-dimensional data encoding device is capable of configuring the same LoD as in encoding by using, in decoding, the initial point selecting method similar to the one used in the encoding, which enables appropriate decoding of a bitstream. More specifically, the three-dimensional data encoding device selects the three-dimensional point whose geometry information has been decoded at the earliest time among three-dimensional points which do not belong to layers above LoDn, as initial point n<b>0</b> of LoDn. Hereinafter, a description is given of a method of generating the predicted value of the attribute information of each three-dimensional point using information of LoDs. For example, when encoding three-dimensional points starting with the three-dimensional points included in LoD<b>0</b>, the three-dimensional data encoding device generates current three-dimensional points which are included in LoD<b>1</b> using encoded and decoded (hereinafter also simply referred to as &#x201c;encoded&#x201d;) attribute information included in LoD<b>0</b> and LoD<b>1</b>. In this way, the three-dimensional data encoding device generates a predicted value of attribute information of each three-dimensional point included in LoDn using encoded attribute information included in LoDn&#x2032; (n&#x2032;&#x2264;n). In other words, the three-dimensional data encoding device does not use attribute information of each of three-dimensional points included in any layer below LoDn to calculate a predicted value of attribute information of each of the three-dimensional points included in LoDn.</p><p id="p-0359" num="0356">For example, the three-dimensional data encoding device calculates an average of attribute information of N or less three dimensional points among encoded three-dimensional points surrounding a current three-dimensional point to be encoded, to generate a predicted value of attribute information of the current three-dimensional point. :In addition, the three-dimensional data encoding device may add value N to, for example, a header of a bitstream. It is to be noted that the three-dimensional data encoding device may change value N for each three-dimensional point, and may add value N for each three-dimensional point. This enables selection of appropriate N for each three-dimensional point, which makes it possible to increase the accuracy of the predicted value. Accordingly, it is possible to reduce the prediction residual. Alternatively, the three-dimensional data encoding device may add value N to a header of a bitstream, and may fix the value indicating N in the bitstream. This eliminates the need to encode or decode value N for each three-dimensional point, which makes it possible to reduce the processing amount. In addition, the three-dimensional data encoding device may encode the values of N separately for each LoD. In this way, it is possible to increase the coding efficiency by selecting appropriate N for each LoD.</p><p id="p-0360" num="0357">Alternatively, the three-dimensional data encoding device may calculate a predicted value of attribute information of three-dimensional point based on weighted average values of attribute information of encoded N neighbor three-dimensional points. For example, the three-dimensional data encoding device calculates weights using distance information between a current three-dimensional point and each of N neighbor three-dimensional points.</p><p id="p-0361" num="0358">When encoding value N for each LoD, for example, the three-dimensional data encoding device sets larger value N to a higher layer LoD, and sets smaller value N to a lower layer LoD. The distance between three-dimensional points belonging to a higher layer LoD is large, there is a possibility that it is possible to increase the prediction accuracy by setting large value N, selecting a plurality of neighbor three-dimensional points, and averaging the values. Furthermore, the distance between three-dimensional points belonging to a lower layer LoD is small, it is possible to perform efficient prediction while reducing the processing amount of averaging by setting smaller value N.</p><p id="p-0362" num="0359"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a diagram illustrating an example of attribute information to be used for predicted values. As described above, the predicted value of point P included in LoDN is generated using encoded neighbor point P&#x2032; included in LoD&#x2032; (N&#x2032;&#x2264;N). Here, neighbor point P&#x2032; is selected based on the distance from point P. For example, the predicted value of attribute information of point b<b>2</b> illustrated in <figref idref="DRAWINGS">FIG. <b>36</b></figref> is generated using attribute information of each of points a<b>0</b>, a<b>1</b>, b<b>0</b>, and b<b>1</b>.</p><p id="p-0363" num="0360">Neighbor points to be selected vary depending on the values of N described above. For example, in the case of N=5, a<b>0</b>, a<b>1</b>, a<b>2</b>, b<b>0</b>, and b<b>1</b> are selected as neighbor points. In the case of N=4, a<b>0</b>, a<b>1</b>, a<b>2</b>, and b<b>1</b> are selected based on distance information.</p><p id="p-0364" num="0361">The predicted value is calculated by distance-dependent weighted. averaging. For example, in the example illustrated in <figref idref="DRAWINGS">FIG. <b>36</b></figref>, predicted value a<b>2</b>p of point a<b>2</b> is calculated by weighted averaging of attribute information of each of point a<b>0</b> and a<b>1</b>, as represented by (Equation A2) and (Equation A3). It is to be noted that A<sub>i </sub>is an attribute information value of ai.</p><p id="p-0365" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Math</mi>      <mo>.</mo>      <mtext>   </mtext>      <mn>2</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>a</mi>      <mo>&#x2062;</mo>      <mn>2</mn>      <mo>&#x2062;</mo>      <mi>p</mi>     </mrow>     <mo>=</mo>     <mrow>      <munderover>       <mo>&#x2211;</mo>       <mrow>        <mi>i</mi>        <mo>=</mo>        <mn>0</mn>       </mrow>       <mn>1</mn>      </munderover>      <mrow>       <msub>        <mi>w</mi>        <mi>i</mi>       </msub>       <mo>&#xd7;</mo>       <msub>        <mi>A</mi>        <mi>i</mi>       </msub>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A2</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00001-2" num="00001.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>w</mi>      <mi>i</mi>     </msub>     <mo>=</mo>     <mfrac>      <mfrac>       <mn>1</mn>       <mrow>        <mi>d</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mrow>          <mi>a</mi>          <mo>&#x2062;</mo>          <mn>2</mn>         </mrow>         <mo>,</mo>         <mi>ai</mi>        </mrow>        <mo>)</mo>       </mrow>      </mfrac>      <mrow>       <msubsup>        <mo>&#x2211;</mo>        <mrow>         <mi>j</mi>         <mo>=</mo>         <mn>1</mn>        </mrow>        <mn>1</mn>       </msubsup>       <mfrac>        <mn>1</mn>        <mrow>         <mi>d</mi>         <mo>&#x2061;</mo>         <mo>(</mo>         <mrow>          <mrow>           <mi>a</mi>           <mo>&#x2062;</mo>           <mn>2</mn>          </mrow>          <mo>,</mo>          <mi>aj</mi>         </mrow>         <mo>)</mo>        </mrow>       </mfrac>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A3</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0366" num="0362">In addition, predicted value b<b>2</b>p of point b<b>2</b> is calculated by weighted averaging of attribute information of each of point a<b>0</b>, a<b>1</b>, a<b>2</b>, b<b>0</b>, and b<b>7</b>, as represented by (Equation A4) and (Equation A6). It is to be noted that B<sub>i </sub>is an attribute information value of bi.</p><p id="p-0367" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Math</mi>      <mo>.</mo>      <mtext>   </mtext>      <mn>3</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>b</mi>      <mo>&#x2062;</mo>      <mn>2</mn>      <mo>&#x2062;</mo>      <mi>p</mi>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <msubsup>        <mo>&#x2211;</mo>        <mrow>         <mi>i</mi>         <mo>=</mo>         <mn>0</mn>        </mrow>        <mn>2</mn>       </msubsup>       <mrow>        <msub>         <mi>wa</mi>         <mi>i</mi>        </msub>        <mo>&#xd7;</mo>        <msub>         <mi>A</mi>         <mi>i</mi>        </msub>       </mrow>      </mrow>      <mo>+</mo>      <mrow>       <msubsup>        <mo>&#x2211;</mo>        <mrow>         <mi>i</mi>         <mo>=</mo>         <mn>1</mn>        </mrow>        <mn>1</mn>       </msubsup>       <mrow>        <msub>         <mi>wb</mi>         <mi>i</mi>        </msub>        <mo>&#xd7;</mo>        <msub>         <mi>B</mi>         <mi>i</mi>        </msub>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A4</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00002-2" num="00002.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>wa</mi>      <mi>i</mi>     </msub>     <mo>=</mo>     <mfrac>      <mfrac>       <mn>1</mn>       <mrow>        <mi>d</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mrow>          <mi>b</mi>          <mo>&#x2062;</mo>          <mn>2</mn>         </mrow>         <mo>,</mo>         <mi>ai</mi>        </mrow>        <mo>)</mo>       </mrow>      </mfrac>      <mrow>       <mrow>        <msubsup>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mn>2</mn>        </msubsup>        <mfrac>         <mn>1</mn>         <mrow>          <mi>d</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mrow>            <mi>b</mi>            <mo>&#x2062;</mo>            <mn>2</mn>           </mrow>           <mo>,</mo>           <mi>aj</mi>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>       </mrow>       <mo>+</mo>       <mrow>        <msubsup>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mn>1</mn>        </msubsup>        <mfrac>         <mn>1</mn>         <mrow>          <mi>d</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mrow>            <mi>b</mi>            <mo>&#x2062;</mo>            <mn>2</mn>           </mrow>           <mo>,</mo>           <mi>bj</mi>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>       </mrow>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A5</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00002-3" num="00002.3"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>wb</mi>      <mi>i</mi>     </msub>     <mo>=</mo>     <mfrac>      <mfrac>       <mn>1</mn>       <mrow>        <mi>d</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mrow>          <mi>b</mi>          <mo>&#x2062;</mo>          <mn>2</mn>         </mrow>         <mo>,</mo>         <mi>bi</mi>        </mrow>        <mo>)</mo>       </mrow>      </mfrac>      <mrow>       <mrow>        <msubsup>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mn>2</mn>        </msubsup>        <mfrac>         <mn>1</mn>         <mrow>          <mi>d</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mrow>            <mi>b</mi>            <mo>&#x2062;</mo>            <mn>2</mn>           </mrow>           <mo>,</mo>           <mi>aj</mi>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>       </mrow>       <mo>+</mo>       <mrow>        <msubsup>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mn>1</mn>        </msubsup>        <mfrac>         <mn>1</mn>         <mrow>          <mi>d</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mrow>            <mi>b</mi>            <mo>&#x2062;</mo>            <mn>2</mn>           </mrow>           <mo>,</mo>           <mi>bj</mi>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>       </mrow>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A6</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0368" num="0363">In addition, the three-dimensional data encoding device may calculate a difference value (prediction residual) generated from the value of attribute information of a three-dimensional point and neighbor points, and may quantize the calculated prediction residual. For example, the three-dimensional data encoding device performs quantization by dividing the prediction residual by a quantization scale (also referred to as a quantization step). In this case, an error (quantization error) which may be generated by quantization reduces as the quantization scale is smaller. In the other case where the quantization. scale is larger, the resulting quantization error is larger.</p><p id="p-0369" num="0364">It is to be noted that the three-dimensional data encoding device may change, the quantization scale to be used for each LoD. For example, the three-dimensional data encoding device reduces the quantization scale more for a higher layer, and increases the quantization scale more for a lower layer. The value of attribute information of a three-dimensional point belonging to a higher layer may be used as a predicted value of attribute information of a three-dimensional point belonging to a lower layer. Thus, it is possible to increase the coding efficiency by reducing the quantization scale for the higher layer to reduce the quantization error that can be generated in the higher layer and to increase the prediction accuracy of the predicted value. It is to be noted that the three-dimensional data encoding device may add the quantization scale to be used for each LoD to, for example, a header. In this way, the three-dimensional data encoding device can decode the quantization scale correctly, thereby appropriately decoding the bitstream.</p><p id="p-0370" num="0365">In addition, the three-dimensional data encoding device may convert a signed integer value (signed quantized value) which is a quantized prediction residual into an unsigned integer value (unsigned quantized value). This eliminates the need to consider occurrence of a negative integer when entropy encoding the prediction residual. It is to be noted that the three-dimensional data encoding device does not always need to convert a signed integer value into an unsigned integer value, and, for example, that the three-dimensional data encoding device may entropy encode a sign bit separately.</p><p id="p-0371" num="0366">The prediction residual is calculated by subtracting a prediction value from the original value. For example, as represented by (Equation A7), prediction residual a<b>2</b>r of point a<b>2</b> is calculated by subtracting predicted value a<b>2</b>p of point a<b>2</b> from value A<sub>2 </sub>of attribute information of point a<b>2</b>. As represented by (Equation A8), prediction residual b<b>2</b>r of point b<b>2</b> is calculated by subtracting predicted value b<b>2</b>p of point b<b>2</b> from value B<b>2</b> of attribute information of point b<b>2</b>.</p><p id="p-0372" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>a2r=A<sub>2</sub>&#xb7;a<b>2</b>p &#x2003;&#x2003;(Equation A7)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0373" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>b2r=B<sub>2</sub>&#x2212;b2p &#x2003;&#x2003;(Equation A8)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0374" num="0367">In addition, the prediction residual is quantized by being divided by a Quantization Step (QS). For example, quantized value a<b>2</b>q of point a<b>2</b> is calculated according to (Equation A9). Quantized value b<b>2</b>q of point b<b>2</b> is calculated according to (Equation A<b>10</b>). Here, QS_LoD<b>0</b> is a QS for LoD<b>0</b>, and QS_LoD<b>1</b> is a QS for LoD<b>1</b>. In other words, a QS may be changed according to an LoD.</p><p id="p-0375" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>a2q=a2r/QS_LoD<b>0</b> &#x2003;&#x2003;(Equation A9)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0376" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>b2q=b2r/QS_LoD<b>1</b> &#x2003;&#x2003;(Equation A10)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0377" num="0368">In addition, the three-dimensional data encoding device converts signed integer values which are quantized values as indicated below into unsigned integer values as indicated below. When signed integer value a<b>2</b>q is smaller than 0, the three-dimensional data encoding device sets unsigned integer value a<b>2</b>u to &#x2212;1&#x2212;(2&#xd7;a<b>2</b>q). When signed integer value a<b>2</b>q is 0 or more, the three-dimensional data encoding device sets unsigned integer value a<b>2</b>u to 2&#xd7;a<b>2</b>q.</p><p id="p-0378" num="0369">Likewise, when signed integer value b<b>2</b>q is smaller than 0, the three-dimensional data encoding device sets unsigned integer value b<b>2</b>u to &#x2212;1&#x2212;(2&#xd7;b<b>2</b>q). When signed integer value b<b>2</b>q is 0 or pore, the three-dimensional data encoding device sets unsigned integer value b<b>2</b>u to 2&#xd7;b<b>2</b>q.</p><p id="p-0379" num="0370">In addition, the three-dimensional data encoding device may encode the quantized prediction residual (unsigned integer value) by entropy encoding. For example, the three-dimensional data encoding device may binarize the unsigned integer value and then apply binary arithmetic encoding to the binary value,</p><p id="p-0380" num="0371">It is to be noted that, in this case, the three-dimensional data encoding device may switch binarization methods according to the value of a prediction residual. For example, when prediction residual pu is smaller than threshold value the three-dimensional data encoding device binarizes prediction residual pu using a fixed bit count required for representing threshold value R_TH. In addition, when prediction residual pu is larger than or equal to threshold value R_TH, the three-dimensional data encoding device binarizes the binary data of threshold value and the value of (pu&#x2212;R_TH), using exponential-Golomb coding, or the like.</p><p id="p-0381" num="0372">For example, when threshold value R_TH is 63 and prediction residual pu is smaller than 63, the three-dimensional data encoding device binarizes prediction residual pu using 6 bits. When prediction residual pu is larger than or equal to 63, the three-dimensional data encoding device performs arithmetic encoding by binarizing the binary data (111111) of threshold value R_TH and (pu&#x2212;63) using exponential-Golomb coding.</p><p id="p-0382" num="0373">In a more specific example, when prediction residual pu is 32, the three-dimensional data encoding device generates 6-bit binary data (100000), and arithmetic encodes the bit sequence. In addition, when prediction residual pu is 66, the three-dimensional data encoding device generates binary data. (111111) of threshold value R_TH and a bit sequence (00100) representing value 3 (66-63) using exponential-Golomb coding, and arithmetic encodes the bit sequence (111111+00100).</p><p id="p-0383" num="0374">In this way, the three-dimensional data encoding device can perform encoding while preventing a binary bit count from increasing abruptly in the case where a prediction residual becomes large by switching binarization methods according to the magnitude of the prediction residual. It is to be noted that the three-dimensional data encoding device may add threshold value R_TH to, for example, a header of a bitstream.</p><p id="p-0384" num="0375">For example, in the case where encoding is performed at a high bit rate, that is, when a quantization scale is small, a small quantization error and a high prediction accuracy are obtained. As a result, a prediction residual nay not be large. Thus, in this case, the three-dimensional data encoding device sets large threshold value R_TH. This reduces the possibility that the binary data of threshold value R_TH is encoded, which increases the coding efficiency. In the opposite case where encoding is performed at a low bit rate, that is, when a quantization scale is large, a large quantization error and a low prediction accuracy are obtained. As a result, a prediction residual may be large. Thus, in this case, the three-dimensional data encoding device sets small threshold value R_TH. In this way, it is possible to prevent abrupt increase in bit length of binary data.</p><p id="p-0385" num="0376">In addition, the three-dimensional data encoding device may switch threshold value R_TH for each LoD, and may add threshold value R_TH for each LoD to, for example, a header. In other words, the three-dimensional data encoding device may switch binarization methods for each LoD. For example, since distances between three-dimensional points are large in a higher layer, a prediction accuracy is low, which may increase a prediction residual. Thus, the three-dimensional data encoding device prevents abrupt increase in bit length of binary data by setting small threshold value R_TH to the higher layer. In addition, since distances between three-dimensional points are small in a lower layer, a prediction accuracy is high, which may reduce a prediction residual.</p><p id="p-0386" num="0377">Thus, the three-dimensional data encoding device increases the coding efficiency by setting large threshold value R_TH to the lower layer.</p><p id="p-0387" num="0378"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a diagram indicating examples of exponential-Golomb codes. The diagram indicates the relationships between pre-binarization values (non-binary values) and post-binarization bits (codes). It is to be noted that 0 and 1 indicated in <figref idref="DRAWINGS">FIG. <b>37</b></figref> may be inverted.</p><p id="p-0388" num="0379">The three-dimensional data encoding device applies arithmetic encoding to the binary data of prediction residuals. In this way, the coding efficiency can be increased. It is to be noted that, in the application of the arithmetic encoding, there i.s a possibility that occurrence probability tendencies of 0 and 1 in each bit vary, in binary data, between an n-bit code which is a part binarized by n bits and a remaining code which is a part binarized using exponential-Golomb coding. Thus, the three-dimensional data encoding device may switch methods of applying arithmetic encoding between the n-bit code and the remaining code.</p><p id="p-0389" num="0380">For example, the three-dimensional data encoding device performs arithmetic encoding on the n-bit code using one or more coding tables (probability tables) different for each bit. At this time, the three-dimensional data encoding device may change the number of coding tables to be used for each bit. For example, the three-dimensional data encoding device performs arithmetic encoding using one coding table for first bit b<b>0</b> in an n-bit code. The three-dimensional data encoding device uses two coding tables for the next bit M. The three-dimensional data encoding device switches coding tables to be used for arithmetic encoding of bit b<b>1</b> according to the value (0 or 1) of b<b>0</b>. Likewise, the three-dimensional data encoding device uses four coding tables for the next bit b<b>2</b>. The three-dimensional data encoding device switches coding tables to be used for arithmetic encoding of bit b<b>2</b> according to the values (in a range from 0 to 3) of b<b>0</b> and b<b>1</b>.</p><p id="p-0390" num="0381">In this way, the three-dimensional data encoding device uses 2<sup>n&#x2212;1 </sup>coding tables when arithmetic encoding each bit bn&#x2212;1 in n-bit code. The three-dimensional data encoding device switches coding tables to be used according to the values (occurrence patterns) of bits before bn&#x2212;1. In this way, the three-dimensional data encoding device can use coding tables appropriate for each bit, and thus can increase the coding efficiency.</p><p id="p-0391" num="0382">It is to be noted that the three-dimensional data encoding device may reduce the number of coding tables to be used for each bit. For example, the three-dimensional data encoding device may switch 2<sup>m </sup>coding tables according to the values (occurrence patterns) of m bits (m&#x3c;n&#x2212;1) before bn&#x2212;1 when arithmetic encoding each bit bn&#x2212;1. In this way, it is possible to increase the coding efficiency while reducing the number of coding tables to be used for each bit. It is to be noted that the three-dimensional data encoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred actually. In addition, the three-dimensional data encoding device may fix the occurrence probabilities of 0 and 1 in coding tables for some bit(s). In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount. For example, when an n-bit code is b<b>0</b>, b<b>1</b>, b<b>2</b>, . . , bn&#x2212;1, the coding table for b<b>0</b> is one table (CTb<b>0</b>). Coding tables for b<b>1</b> are two tables (CTb<b>10</b> and CTb<b>11</b>). Coding tables to be used are switched according to the value (0 or 1) of b<b>0</b>. Coding tables for b<b>2</b> are four tables (CTb<b>20</b>, CTb<b>21</b>, CTb<b>22</b>, and CTb<b>23</b>). Coding tables to be used are switched according to the values (in the range from 0 to 3) of b<b>0</b> and b<b>1</b>. Coding tables for b&#x2212;1 are 2<sup>n&#x2212;1 </sup>tables (CTbn<b>0</b>, CTbn<b>1</b>, . . . , CTbn (2<sup>n&#x2212;1</sup>&#x2212;1)). Coding tables to be used are switched according to the values (in a range from 0 to 2<sup>n&#x2212;1</sup>&#x2212;1) of b<b>0</b>, b<b>1</b>, . . . bn&#x2212;2.</p><p id="p-0392" num="0383">It is to be noted that the three-dimensional data encoding device may apply, to an n-bit code, arithmetic encoding (m=2<sup>n</sup>) by m-ary that sets the value in the range from 0 to 2<sup>n&#x2212;1 </sup>without binarization. When the three-dimensional data encoding device arithmetic encodes an n-bit code by an m-ary, the three-dimensional data decoding device may reconstruct the n-bit code by arithmetic decoding the m-ary.</p><p id="p-0393" num="0384"><figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram for illustrating processing in the case where remaining codes are exponential-Golomb codes. As indicated in <figref idref="DRAWINGS">FIG. <b>38</b></figref>, each remaining code which is a part, binarized using exponential-Golomb coding includes a prefix and a suffix. For example, the three-dimensional data encoding device switches coding tables between the prefix and the suffix. In other words, the three-dimensional data encoding device arithmetic encodes each of bits included in the prefix using coding tables for the prefix, and arithmetic encodes each of bits included in the suffix using coding tables for the suffix.</p><p id="p-0394" num="0385">It is to be noted that the three-dimensional data encoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred actually. In addition, the three-dimensional data encoding device may fix the occurrence probabilities of 0 and 1 in one of coding tables. In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount. For example, the three-dimensional data encoding device may update the occurrence probabilities for the prefix, and may fix the occurrence probabilities for the suffix.</p><p id="p-0395" num="0386">In addition, the three-dimensional data encoding device decodes a quantized prediction residual by inverse quantization and reconstruction and uses a decoded value which is the decoded prediction residual for prediction of a current three-dimensional point to be encoded and the following three-dimensional point(s). More specifically, the three-dimensional data encoding device calculates an inverse quantized value by multiplying the quantized prediction residual (quantized value) with a quantization scale, and adds the inverse quantized value and a prediction value to obtain the decoded value (reconstructed value).</p><p id="p-0396" num="0387">For example, quantized value a<b>2</b>iq of point a<b>2</b> is calculated using quantized value a<b>2</b>q of point a<b>2</b> according to (Equation A11). Inverse quantized. value b<b>2</b>iq of point b<b>2</b>q is calculated using quantized value b<b>2</b>q of point b<b>2</b> according to (Equation A12). Here, QS_LoD<b>0</b> is a QS for LOD<b>0</b>, and QS_LoD<b>1</b> is a QS for LoD<b>1</b>. In other words, a QS may be changed according to an LoD.</p><p id="p-0397" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>2<i>iq=a</i>2<i>q&#xd7;QS</i>_LoD0 &#x2003;&#x2003;(Equation A11)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0398" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>2<i>iq=b</i>2<i>q&#xd7;QS</i>_LoD1 &#x2003;&#x2003;(Equation A12)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0399" num="0388">For example, as represented by (Equation A13), decoded value a<b>2</b>rec of point a<b>2</b> is calculated by adding inverse quantization value a<b>2</b>iq of point a<b>2</b> to predicted value a<b>2</b>p of point a<b>2</b>. As represented by (Equation A14), decoded value b<b>2</b>rec of point b<b>2</b> is calculated by adding inverse quantized value b<b>2</b>iq of point b<b>2</b> to predicted value b<b>2</b>p of point b<b>2</b>.</p><p id="p-0400" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>2rec=<i>a</i>2<i>iq+a</i>2<i>p </i>&#x2003;&#x2003;(Equation A13)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0401" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>2rec=<i>b</i>2<i>iq+b</i>2<i>p </i>&#x2003;&#x2003;(Equation A14)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0402" num="0389">Hereinafter, a syntax example of a bitstream according to the present embodiment is described. <figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram indicating the syntax example of an attribute header (attribute_header) according to the present embodiment. The attribute header is header information of attribute information. As indicated in. <figref idref="DRAWINGS">FIG. <b>39</b></figref>, the attribute header includes the number of layers information (NumLoD), the number of three-dimensional points information (NumOfPoint[i], a layer threshold value (Thres_LoD[i]), the number of neighbor points information (NumNeighborPoint[i]), a prediction threshold value (THd[i]), a quantization scale (QS[i]), and a binarization threshold value (R_TH[i]).</p><p id="p-0403" num="0390">The number of layers information NumLoD) indicates the number of LoDs to be used.</p><p id="p-0404" num="0391">The number of three-dimensional points information (NumOfPoint[i]) indicates the number of three-dimensional points belonging to layer i. It is to be noted that the three-dimensional data encoding device may add, to another header, the number of three-dimensional points information indicating the total number of three-dimensional points. In this case, the three-dimensional data encoding device does not need to add, to a header, NumOfPoint [Num LoD&#x2212;1] indicating the number of three-dimensional points belonging to the lowermost layer. In this case, the three-dimensional data decoding device is capable of calculating NumOfPoint [NumLoD&#x2212;1] according to (Equation A15). In this case, it is possible to reduce the code amount of the header.</p><p id="p-0405" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Math</mi>      <mo>.</mo>      <mtext>   </mtext>      <mn>4</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>NumOfPoint</mi>      <mo>[</mo>      <mrow>       <mi>NumLoD</mi>       <mo>-</mo>       <mn>1</mn>      </mrow>      <mo>]</mo>     </mrow>     <mo>=</mo>     <mrow>      <mi>AllNumOfPoint</mi>      <mo>-</mo>      <mrow>       <mover>        <munder>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>1</mn>         </mrow>        </munder>        <mrow>         <mi>NomLoD</mi>         <mo>-</mo>         <mn>2</mn>        </mrow>       </mover>       <mrow>        <mi>NumOfPoint</mi>        <mo>[</mo>        <mi>j</mi>        <mo>]</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A15</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0406" num="0392">The layer threshold value Thres_LoD[i]) is a threshold value to be used to set layer i. The three-dimensional data encoding device and the three-dimensional data decoding device configure LoDi in such a manner that the distance between points in LoDi becomes larger than threshold value Thres_LoD[i]. The three-dimensional data encoding device does not need to add the value of Thres_LoD [NumLoD&#x2212;1] (lowermost layer) to a header. In this case, the three-dimensional data decoding device may estimate 0 as the value of Thres_LoD [NumLoD <b>1</b>]. In this case, it is possible to reduce the code amount of the header.</p><p id="p-0407" num="0393">The number of neighbor points information (NumNeighborPoint[i]) indicates the upper limit value of the number of neighbor points to be used to generate a predicted value of a three-dimensional point belonging to layer i.</p><p id="p-0408" num="0394">The three-dimensional data encoding device may calculate a predicted value using the number of neighbor points M when the number of neighbor points M is smaller than NumNeighborPointin&#x3c;NumNeighborPoint[i]). Furthermore, when there is <b>110</b> need to differentiate the values of NumNeighborPointin for respective LoDs, the three-dimensional data encoding device may add a piece of the number of neighbor points information (NumNeighborPoint) to be used in all LoDs to a header.</p><p id="p-0409" num="0395">The prediction threshold value (THd[i]) indicates the upper limit value of the distance between a current three-dimensional point to be encoded or decoded in layer i and each of neighbor three-dimensional points to be used to predict the current three-dimensional point. The three-dimensional data encoding device and the three-dimensional data decoding device do not use, for prediction, any three-dimensional point distant from the current three-dimensional point over THd[i]. It is to be noted that, when there is no need to differentiate the values of THd[i] for respective LoDs, the three-dimensional data encoding device may add a single prediction threshold value (THd) to be used in all LoDs to a header.</p><p id="p-0410" num="0396">The quantization scale (QS[i]) indicates a quantization scale to be used for quantization and inverse quantization in layer i.</p><p id="p-0411" num="0397">The binarization threshold value (R_TH[i]) is a threshold value for switching binarization methods of prediction residuals of three-dimensional points belonging to layer i. For example, the three-dimensional data encoding device binarizes prediction residual pu using a fixed bit count when a prediction residual is smaller than threshold value R_TH, and binarizes the binary data of threshold value R_TH and the value of (pu&#x2212;R_TH) using exponential-Golomb coding when a prediction residual is larger than or equal to threshold value RTH. It is to be noted that, when there is no need to switch the values of R_TH[i] between LoDs, the three-dimensional data encoding device may add a single binarization threshold value (R_TH) to be used in all LoDs to a header.</p><p id="p-0412" num="0398">It is to he noted that R_TH[i] may he the maximum value which can be represented by n bits. For example, R_TH is 63 in the case of 6 bits, and R_TH is 255 in the case of 8 bits. Alternatively, the three-dimensional data encoding device may encode a hit count instead of encoding the maximum value which can be represented by n bits as a binarization threshold value. For example, the three-dimensional data encoding device may add value 6 in the case of =63 to a header, and may add value 8 in the case of R_TH[i]=255 to a header. Alternatively, the three-dimensional data encoding device may define the minimum value (minimum bit count) representing R_TH[i], and add a relative bit count from the minimum value to a header. For example, the three-dimensional data encoding device may add value 0 to a header when R_TH[i]=63 is satisfied and the minimum bit count is 6, and may add value 2 to a header when RTH[i]=255 is satisfied and the minimum bit count is 6.</p><p id="p-0413" num="0399">Alternatively, the three-dimensional data encoding device may entropy encode at least one of NumLoD. Thres_LoD[i], NumNeighborPoint[i], QS[i], and R_TH[i], and add the entropy encoded one to a header. For example, the three-dimensional data encoding device may binarize each value and perform arithmetic encoding on the binary value. In addition., the three-dimensional data encoding device may encode each value using a fixed length in order to reduce the processing amount.</p><p id="p-0414" num="0400">Alternatively, the three-dimensional data encoding device does not always need to add at least one of NumLoD, Thres_LoD[i], NumNeighbor QS[i], and R_TH[i] to a header. For example, at least one of these values may be defined by a profile or a level in a standard, or the like. In this way, it is possible to reduce the bit amount of the header.</p><p id="p-0415" num="0401"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram indicating the syntax example of attribute data (attribute_data) according to the present embodiment. The attribute data includes encoded data of the attribute information of a plurality of three-dimensional points. As indicated in <figref idref="DRAWINGS">FIG. <b>40</b></figref>, the attribute data includes an n-bit code and a remaining code.</p><p id="p-0416" num="0402">The n-bit code is encoded data of a prediction residual of a value of attribute information or a part of the encoded data. The bit length of the n-bit code depends on value R_TH[i]. For example, the bit length of the n-bit code is 6 bits when the value indicated by R_TH[i] is 63, the bit length of the n-bit code is 8 bits when the value indicated by is 255.</p><p id="p-0417" num="0403">The remaining code is encoded data encoded using exponential-Golomb coding among encoded data of the prediction residual of the value of the attribute information. The remaining code is encoded or decoded when the value of the n-bit code is equal to R_TH[i]. The three-dimensional data decoding device decodes the prediction residual by adding the value of the n-bit code and the value of the remaining code. It is to be noted that the remaining code does not always need to be encoded or decoded when the value of the n-bit code is not equal to R_TH[i].</p><p id="p-0418" num="0404">Hereinafter, a description is given of a flow of processing in the three-dimensional data encoding device. <figref idref="DRAWINGS">FIG. <b>41</b></figref> is a flowchart of a three-dimensional data encoding process performed by the three-dimensional data encoding device.</p><p id="p-0419" num="0405">First, the three-dimensional data encoding device encodes geometry information (geometry) (S<b>3001</b>). For example, the three-dimensional data encoding is performed using octree representation.</p><p id="p-0420" num="0406">When the positions of three-dimensional points changed by quantization, etc., after the encoding of the geometry information, the three-dimensional data encoding device re-assigns attribute information of the original three-dimensional points to the post-change three-dimensional points (S<b>3002</b>). For example, the three-dimensional data encoding device interpolates values of attribute information according to the amounts of change in position to re-assign the attribute information. For example, the three-dimensional data encoding device detects pre-change N three-dimensional points closer to the post-change three-dimensional positions, and performs weighted averaging of the values of attribute information of the N three-dimensional points. For example, the three-dimensional data encoding device determines weights based on distances from the post-change three-dimensional positions to the respective N three-dimensional positions in weighted averaging. The three-dimensional data encoding device then determines the values obtained through the weighted averaging to be the values of the attribute information of the post-change three-dimensional points. When two or more of the three-dimensional points are changed to the same three-dimensional position through quantization, etc., the three-dimensional data encoding device may assign the average value of the attribute information of the pre-change two or more three-dimensional points as the values of the attribute information of the post-change three-dimensional points.</p><p id="p-0421" num="0407">Next, the three-dimensional data encoding device encodes the attribute information (attribute) re-assigned (S<b>3003</b>). For example, when encoding a plurality of kinds of attribute information, the three-dimensional data encoding device may encode the plurality of kinds of attribute information in order. For example, when encoding colors and reflectances as attribute information, the three-dimensional data encoding device may generate a bitstream added with the color encoding results and the reflectance encoding results after the color encoding results. It is to be noted that the order of the plurality of encoding results of attribute information to be added to a bitstream is not limited to the order, and may be any order.</p><p id="p-0422" num="0408">Alternatively, the three-dimensional data encoding device may add, to a header for example, information indicating the start location of encoded data of each attribute information in a bitstream. In this way, the three-dimensional data decoding device is capable of selectively decoding attribute information required to be decoded, and thus is capable of skipping the decoding process of the attribute information not required to be decoded. Accordingly, it is possible to reduce the amount of processing by the three-dimensional data decoding device. Alternatively, the three-dimensional data encoding device may encode a plurality of kinds of attribute information in parallel, and may integrate the encoding results into a single bitstream. In this way, the three-dimensional data encoding device is capable of encoding the plurality of kinds of attribute information at high speed.</p><p id="p-0423" num="0409"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a flowchart of an attribute information encoding process (S<b>3003</b>). First, the three-dimensional data encoding device sets LoDs (S<b>3011</b>). In other words, the three-dimensional data encoding device assigns each of three-dimensional points to any one of the plurality of ON.</p><p id="p-0424" num="0410">Next, the three-dimensional data encoding device starts a loop for each LoD (S<b>3012</b>). :In other words, the three-dimensional data encoding device iteratively performs the processes of Steps from S<b>3013</b> to S<b>3021</b> for each LoD.</p><p id="p-0425" num="0411">Next, the three-dimensional data encoding device starts a loop for each three-dimensional point (S<b>3013</b>). In other words, the three-dimensional data encoding device iteratively performs the processes of Steps from S<b>3014</b> to S<b>3020</b> for each three-dimensional point.</p><p id="p-0426" num="0412">First, the three-dimensional data encoding device searches a plurality of neighbor points which are three-dimensional points present in the neighborhood of a current three-dimensional point to be processed and are to be used to calculate a predicted value of the current three-dimensional point (S<b>3014</b>). Next, the three-dimensional data encoding device calculates the weighted average of the values of attribute information of the plurality of neighbor points, and sets the resulting value to predicted value P (S<b>3015</b>). Next, the three-dimensional data encoding device calculates a prediction residual which is the difference between the attribute information of the current three-dimensional point and the predicted value (S<b>3016</b>). Next, the three-dimensional data encoding device quantizes the prediction residual to calculate a quantized value (S<b>3017</b>). Next, the three-dimensional data encoding device arithmetic encodes the quantized value (S<b>3018</b>).</p><p id="p-0427" num="0413">Next, the three-dimensional data encoding device inverse quantizes the quantized value to calculate an inverse quantized value (S<b>3019</b>). Next, the three-dimensional data encoding device adds a prediction value to the inverse quantized value to generate a decoded value (S<b>3020</b>). Next, the three-dimensional data encoding device ends the loop for each three-dimensional point (S<b>3021</b>). Next, the three-dimensional data encoding device ends the loop for each LoD (S<b>3022</b>).</p><p id="p-0428" num="0414">Hereinafter, a description is given of a three-dimensional data decoding process in the three-dimensional data decoding device which decodes a bitstream generated by the three-dimensional data encoding device.</p><p id="p-0429" num="0415">The three-dimensional data decoding device generates decoded binary data by arithmetic decoding the binary data of the attribute information in the bitstream generated by the three-dimensional data encoding device, according to the method similar to the one performed by the three-dimensional data encoding device. It is to be noted that when methods of applying arithmetic encoding are switched between the part (n-bit code) binarized using n bits and the part (remaining code) binarized using exponential-Golomb coding in the three-dimensional data encoding device, the three-dimensional data decoding device performs decoding in conformity with the arithmetic encoding, when applying arithmetic decoding.</p><p id="p-0430" num="0416">For example, the three-dimensional data decoding device performs arithmetic decoding using coding tables (decoding tables) different for each bit in the arithmetic decoding of the n-bit code. At this time, the three-dimensional data decoding device may change the number of coding tables to be used for each bit. For example, the three-dimensional data decoding device performs arithmetic decoding using one coding table for first bit b<b>0</b> in the n-bit code. The three-dimensional data decoding device uses two coding tables for the next bit b<b>1</b>. The three-dimensional data decoding device switches coding tables to be used for arithmetic decoding of bit hi according to the value (0 or 1) of b<b>0</b>. Likewise, the three-dimensional data decoding device uses four coding tables for the next bit b<b>2</b>. The three-dimensional data decoding device switches coding tables to be used for arithmetic decoding of bit b<b>2</b> according to the, values (in the range from 0 to 3) of b<b>0</b> and b<b>1</b>.</p><p id="p-0431" num="0417">In this way, the three-dimensional data decoding device uses 2<sup>n&#x2212;1 </sup>coding tables when arithmetic decoding each bit bn&#x2212;1 in the n-bit code. The three-dimensional data decoding device switches coding tables to be used according to the values (occurrence patterns) of bits before bn&#x2212;1. In this way, the three-dimensional data decoding device is capable of appropriately decoding a bitstream encoded at an increased coding efficiency using the coding tables appropriate for each bit.</p><p id="p-0432" num="0418">It is to be noted that the three-dimensional data decoding device may reduce the number of coding tables to be used for each bit. For example, the three-dimensional data decoding device may switch 2<sup>m </sup>coding tables according to the values (occurrence patterns) of m bits (m&#x3c;n&#x2212;1) before bn&#x2212;1 when arithmetic decoding each bit bn&#x2212;1. In this way, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at the increased coding efficiency while reducing the number of coding tables to be used for each bit. It is to be noted that the three-dimensional data decoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred actually. In addition, the three-dimensional data decoding device may fix the occurrence probabilities of 0 and 1 in coding tables for some bit(s). In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount.</p><p id="p-0433" num="0419">For example, when an n-bit code is b<b>0</b>, b<b>1</b>, b<b>2</b>, . . . , bn&#x2212;1, the coding table for b<b>0</b> is one (CTb<b>0</b>). Coding tables for b<b>1</b> are two tables (CTb<b>10</b> and CTb<b>11</b>). Coding tables to be used are switched according to the value (0 or 1) of b<b>0</b>. Coding tables for b<b>2</b> are four tables (CM<b>20</b>, CTb<b>21</b>, CTb<b>22</b>, and CTb<b>23</b>). Coding tables to be used according to the values (in the range from 0 to 3) of b<b>0</b> and b<b>1</b>. Coding tables for bn&#x2212;1 are 2<sup>n&#x2212;1 </sup>tables (CTbn<b>0</b>, CTbn<b>1</b>, . . , CTbn (2<sup>n&#x2212;1</sup>)). Coding tables to be used are switched according to the values (in the range from 0 to 2<sup>n&#x2212;1</sup>) of b<b>0</b>, b<b>1</b>, . . . , bn&#x2212;2.</p><p id="p-0434" num="0420"><figref idref="DRAWINGS">FIG. <b>43</b></figref> is a diagram for illustrating processing in the case where remaining codes are exponential-Golomb codes. As indicated in <figref idref="DRAWINGS">FIG. <b>43</b></figref>, the part (remaining part) binarized and encoded by the three-dimensional data encoding device using exponential-Golomb coding includes a prefix and a suffix. For example, the three-dimensional data decoding device switches coding tables between the prefix and the suffix. In other words, the three-dimensional data decoding device arithmetic decodes each of bits included in the prefix using coding tables for the prefix, and arithmetic decodes each of bits included in the suffix using coding tables for the suffix.</p><p id="p-0435" num="0421">It is to be noted that the three-dimensional data decoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred at the time of decoding. In addition, the three-dimensional data decoding device nay fix the occurrence probabilities of <b>0</b> and <b>1</b> in one of coding tables. In this way, it, is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount. For example, the three-dimensional data decoding device may update the occurrence probabilities for the prefix, and may fix the occurrence probabilities for the suffix.</p><p id="p-0436" num="0422">Furthermore, the three-dimensional data decoding device decodes the quantized prediction residual (unsigned integer value) by debinarizing the binary data of the prediction residual arithmetic decoded according to a method in conformity with the encoding method used by the three-dimensional data encoding device. The three-dimensional data decoding device first arithmetic decodes the binary data of an n-bit code to calculate a value of the n-bit code. Next, the three-dimensional data decoding device compares the value of the n-bit code with threshold value R_TH.</p><p id="p-0437" num="0423">In the case where the value of the n-bit code and threshold value RTH match, the three-dimensional data decoding device determines that a bit encoded using exponential-Golomb coding is present next, and arithmetic decodes the remaining code which is the binary data encoded using exponential-Golomb coding. The three-dimensional data decoding device then calculates, from the decoded remaining code, a value of the remaining code using a reverse lookup table indicating the relationship between the remaining code and the value. <figref idref="DRAWINGS">FIG. <b>44</b></figref> is a diagram indicating an example of a reverse lookup table indicating relationships between remaining codes and the values thereof. Next, the three-dimensional data decoding device adds the obtained value of the remaining code to R_TH, thereby obtaining a debinarized quantized prediction residual.</p><p id="p-0438" num="0424">In the opposite case where the value of the n-bit code and threshold value R_TH do not match (the value of the n-bit code is smaller than value R_TH), the three-dimensional data decoding device determines the value of the n-bit code to be the debinarized quantized prediction residual as it is. In this way, the three-dimensional data decoding device is capable of appropriately decoding the bitstream generated while switching the binarization methods according to the values of the prediction residuals by the three-dimensional data encoding device.</p><p id="p-0439" num="0425">It is to be noted that, when threshold value R_TH is added to, for example, a header of a bitstream, the three-dimensional data decoding device may decode threshold value R_TH from the header, and may switch decoding methods using decoded threshold value R_TH. When threshold value R_TH is added to, for example, a header for each LoD, the three-dimensional data decoding device switch decoding methods using threshold value R_TH decoded for each LoD.</p><p id="p-0440" num="0426">For example, when threshold value R_TH is <b>63</b> and the value of the decoded n-bit code is <b>63</b>, the three-dimensional data decoding device decodes the remaining code using exponential-Golomb coding, thereby obtaining the value of the remaining code. For example, in the example indicated in <figref idref="DRAWINGS">FIG. <b>44</b></figref>, the remaining code is 00100, and 3 is obtained as the value of the remaining code. Next, the three-dimensional data decoding device adds 63 that is threshold value R_TH and 3 that is the value of the remaining code, thereby obtaining <b>66</b> that is the value of the prediction residual</p><p id="p-0441" num="0427">In addition, when the value of the decoded n-bit code is 32, the three-dimensional data decoding device sets 32 that is the value of the n-bit code to the value of the prediction residual.</p><p id="p-0442" num="0428">In addition, the three-dimensional data decoding device converts the decoded quantized prediction residual, for example, from an unsigned integer value to a signed integer value, through processing inverse to the processing in the three-dimensional data encoding device. In this way, when entropy decoding the prediction residual, the three-dimensional data decoding device is capable of appropriately decoding the bitstream generated without considering occurrence of a negative integer. It is to be noted that the three-dimensional data decoding device does not always need to convert an unsigned integer value to a signed integer value, and that, for example, the three-dimensional data decoding device may decode a sign bit when decoding a bitstream generated by separately entropy encoding the sign bit.</p><p id="p-0443" num="0429">The three-dimensional data decoding device performs decoding by inverse quantizing and reconstructing the quantized prediction residual after being converted to the signed integer value, to obtain a decoded value. The three-dimensional data decoding device uses the generated decoded value for prediction of a current three-dimensional point to be decoded and the following three-dimensional point(s). More specifically, the three-dimensional data decoding device multiplies the quantized prediction residual by a decoded quantization scale to calculate an inverse quantized value and adds the inverse quantized value and the predicted value to obtain the decoded value.</p><p id="p-0444" num="0430">The decoded unsigned integer value (unsigned quantized value) is converted into a signed integer value through the processing indicated below. When the least significant bit (LSB) of decoded unsigned integer value a<b>2</b>u is 1, the three-dimensional data decoding device sets signed integer value a<b>2</b>q to &#x2212;((a<b>2</b>u+1)&#x3e;&#x3e;1). When the LSB of unsigned integer value a<b>2</b>u is not 1, the three-dimensional data decoding device sets signed integer value a<b>2</b>q to ((a<b>2</b>u &#x3e;&#x3e;1),</p><p id="p-0445" num="0431">Likewise, when an LSB of decoded unsigned integer value b<b>2</b>u is 1, the three-dimensional data decoding device sets signed integer value b<b>2</b>q to &#x2212;((b<b>2</b>u +1&#x3e;&#x3e;1). When the LSI; of decoded unsigned integer value n<b>2</b>u is not 1, the three-dimensional data decoding device sets signed integer value b<b>2</b>q to ((b<b>2</b>u &#x3e;&#x3e;1).</p><p id="p-0446" num="0432">Details of the inverse quantization and reconstruction processing by the three-dimensional data decoding device are similar to the inverse quantization and reconstruction processing in the three-dimensional data encoding device. Hereinafter, a description is given of a flow of processing in the three-dimensional data decoding device. <figref idref="DRAWINGS">FIG. <b>45</b></figref> is a flowchart of a three-dimensional data decoding process performed by the three-dimensional data decoding device. First, the three-dimensional data decoding device decodes geometry information (geometry) from a bitstream (S<b>3031</b>). For example, the three-dimensional data decoding device performs decoding using octree representation.</p><p id="p-0447" num="0433">Next, the three-dimensional data decoding device decodes attribute information (attribute) from the bitstream (S<b>3032</b>). For example, when decoding a plurality of kinds of attribute information, the three-dimensional data decoding device may decode the plurality of kinds of attribute information in order. For example, when decoding colors and reflectances as attribute information, the three-dimensional data decoding device decodes the color encoding results and the reflectance encoding results in order of assignment in the bitstream. For example, when the reflectance encoding results are added after the color encoding results in a bitstream, the three-dimensional data decoding device decodes the color encoding results, and then decodes the reflectance encoding results. It is to be noted that the three-dimensional data decoding device may decode, in any order, the encoding results of the attribute information added to the bitstream.</p><p id="p-0448" num="0434">Alternatively, the three-dimensional data encoding device may add, to a header for example, information indicating the start location of encoded data of each attribute information in a bitstream. In this way, the three-dimensional data decoding device is capable of selectively decoding attribute information required to be decoded, and thus is capable of skipping the decoding process of the attribute information not required to be decoded. Accordingly, it is possible to reduce the amount of processing by the three-dimensional data decoding device. In addition, the three-dimensional data decoding device may decode a plurality of kinds of attribute information in parallel, and may integrate the decoding results into a single three-dimensional point cloud. In this way, the three-dimensional data decoding device is capable of decoding the plurality of kinds of attribute information at high speed.</p><p id="p-0449" num="0435"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a flowchart of an attribute information decoding process (S<b>3032</b>). First, the three-dimensional data decoding device sets LoDs (S<b>3041</b>). In other words, the three-dimensional data decoding device assigns each of three-dimensional points having the decoded geometry information to any one of the plurality of ON. For example, this assignment method is the same as the assignment method used in the three-dimensional data encoding device.</p><p id="p-0450" num="0436">Next, the three-dimensional data decoding device starts a loop for each LoD (S<b>3042</b>). In other words, the three-dimensional data decoding device iteratively performs the processes of Steps from S<b>3043</b> to S<b>3049</b> for each LoD.</p><p id="p-0451" num="0437">Next, the three-dimensional data decoding device starts a loop for each three-dimensional point (S<b>3043</b>). In other words, the three-dimensional data decoding device iteratively performs the processes of Steps from S<b>3044</b> to S<b>3048</b> for each three-dimensional point.</p><p id="p-0452" num="0438">First, the three-dimensional data decoding device searches a plurality of neighbor points which are three-dimensional points present in the neighborhood of a current three-dimensional point to be processed and are to be used to calculate a predicted value of the current three-dimensional point to be processed (S<b>3044</b>). Next, the three-dimensional data decoding device calculates the weighted average of the values of attribute information of the plurality of neighbor points, and sets the resulting value to predicted value P (S<b>3045</b>). It is to be noted that these processes are similar to the processes in the three-dimensional data encoding device.</p><p id="p-0453" num="0439">Next, the three-dimensional data decoding device arithmetic decodes the quantized value from the bitstream (S<b>3046</b>). The three-dimensional data decoding device inverse quantizes the decoded quantized value to calculate an inverse quantized value (S<b>3047</b>). Next, the three-dimensional data decoding device adds a predicted value to the inverse quantized value to generate a decoded value (S<b>3048</b>). Next, the three-dimensional data decoding device ends the loop for each three-dimensional point (S<b>3049</b>). Next, the three-dimensional data encoding device ends the loop for each LoD (S<b>3050</b>).</p><p id="p-0454" num="0440">The following describes configurations of the three-dimensional data encoding device and three-dimensional data decoding device according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>47</b></figref> is a block diagram illustrating a configuration of three-dimensional data encoding device <b>3000</b> according to the present embodiment. Three-dimensional data encoding device <b>3000</b> includes geometry information encoder <b>3001</b>, attribute information re-assigner <b>3002</b>, and attribute information encoder <b>3003</b>.</p><p id="p-0455" num="0441">Attribute information encoder <b>3008</b> encodes geometry information (geometry) of a plurality of three-dimensional points included in an input point cloud. Attribute information re-assigner <b>3002</b> re-assigns the values of attribute information of the plurality of three-dimensional points included in the input point cloud, using the encoding and decoding results of the geometry information. Attribute information encoder <b>3003</b> encodes the re-assigned attribute information (attribute). Furthermore, three-dimensional data encoding device <b>3000</b> generates a bitstream including the encoded geometry information and the encoded attribute information.</p><p id="p-0456" num="0442"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a block diagram illustrating a configuration of three-dimensional data decoding device <b>3010</b> according to the present embodiment. Three-dimensional data decoding device <b>3010</b> includes geometry information decoder <b>3011</b> and attribute information decoder <b>3012</b>.</p><p id="p-0457" num="0443">Geometry information decoder <b>3011</b> decodes the geometry information (geometry) of a plurality of three-dimensional points from a bitstream. Attribute information decoder <b>3012</b> decodes the attribute information (attribute) of the plurality of three-dimensional points from the bitstream. Furthermore, three-dimensional data decoding device <b>3010</b> integrates the decoded geometry information and the decoded attribute information to generate an output point cloud.</p><heading id="h-0011" level="1">Embodiment 4</heading><p id="p-0458" num="0444">Hereinafter, a method using a RAHT (Region Adaptive Hierarchical Transform) will be described as another method of encoding the attribute information of a three-dimensional point. <figref idref="DRAWINGS">FIG. <b>49</b></figref> is a diagram for describing the encoding of the attribute information by using a RAHT.</p><p id="p-0459" num="0445">First, the three-dimensional data encoding device generates Morton codes based on the geometry information of three-dimensional points, and sorts the attribute information of the three-dimensional points in the order of the Morton codes. For example, the three-dimensional data encoding device may perform sorting in the ascending order of the Morton codes. Note that the sorting order is not limited to the order of the Morton codes, and other orders may be used.</p><p id="p-0460" num="0446">Next, the three-dimensional data encoding device generates a high-frequency component and a low-frequency component of the layer L by applying the Haar conversion to the attribute information of two adjacent three-dimensional points in the order of the Morton codes. For example, the three-dimensional data encoding device may use the Haar conversion of 2&#xd7;2 matrices. The generated high-frequency component is included in a coding coefficient as the high-frequency component of the layer L, and the generated low-frequency component is used as the input value for the higher layer L+1 of the layer L.</p><p id="p-0461" num="0447">After generating the high-frequency component of the layer L by using the attribute information of the layer L, the three-dimensional data encoding device subsequently performs processing of the layer L&#x2212;1. In the processing of the layer L&#x2212;1, the three-dimensional data encoding device generates a high-frequency component and a low-frequency component of the layer L+1 by applying the Haar conversion to two low-frequency components obtained by the Haar conversion of the attribute information of the layer L. The generated high-frequency component is included in a coding coefficient as the high-frequency component of the layer L+1, and the generated low-frequency component is used as the input value for the higher layer L+2 of the layer L+1.</p><p id="p-0462" num="0448">The three-dimensional data encoding device repeats such layer processing, and determines that the highest, layer Lmax has been reached at the time when a low-frequency component that is input to a layer becomes one. The three-dimensional data encoding device includes the low-frequency component of the layer Lmax-<b>1</b> that is input to the Layer Lmax in a coding coefficient. Then, the value of the low-frequency component or high-frequency component included in the coding coefficient is quantized, and is encoded by using entropy encoding or the like.</p><p id="p-0463" num="0449">Note that, when only one three-dimensional point exists as two adjacent three-dimensional points at the time of application of the Haar conversion, the three-dimensional data encoding device may use the value of the attribute information of the existing one three-dimensional point as the input value for a higher layer.</p><p id="p-0464" num="0450">In this manner, the three-dimensional data encoding device hierarchically applies the Haar conversion to the input attribute information, generates a high-frequency component and a low-frequency component of the attribute information, and performs encoding by applying quantization described later or the like. Accordingly, the coding efficiency can be improved.</p><p id="p-0465" num="0451">When the attribute information is N dimensional, the three-dimensional data encoding device may independently apply the Haar conversion for each dimension, and may calculate each coding coefficient. For example, when the attribute information is color information (RGB, YUV, or the like), the three-dimensional data encoding device applies the Haar conversion for each component, and calculates each coding coefficient.</p><p id="p-0466" num="0452">The three-dimensional data encoding device may apply the Haar conversion in the order of the .layers L, L+1, . . . , Lmax. The closer to the .<b>1</b>a.yer Lmax, a coding coefficient including the more low-frequency components of the input attribute information is generated.</p><p id="p-0467" num="0453">w<b>0</b> and w<b>1</b> shown in <figref idref="DRAWINGS">FIG. <b>49</b></figref> are the weights assigned to each three-dimensional point. For example, the three-dimensional data encoding device may calculate the weight based on the distance information between two adjacent three-dimensional points to which the Haar conversion is applied, or the like. For example, the three-dimensional data encoding device may improve the coding efficiency such that the closer the distance, the greater the weight. Note that the three-dimensional data encoding device may calculate this weight with another technique, or need not use the weight.</p><p id="p-0468" num="0454">In the example shown in <figref idref="DRAWINGS">FIG. <b>49</b></figref>, the pieces of the input attribute information are a<b>0</b>, a<b>1</b>, a<b>2</b>, a<b>3</b>, a<b>4</b>, and a<b>5</b>. Additionally, Ta<b>1</b>, Ta<b>5</b>, Tb<b>3</b>, Tc<b>1</b>, and d<b>0</b> are encoded among the coding coefficients after the Haar conversion. The other coding coefficients (b<b>0</b>, b<b>2</b>, c<b>0</b> and the like) are medians, and are not encoded.</p><p id="p-0469" num="0455">Specifically, in the example shown in <figref idref="DRAWINGS">FIG. <b>49</b></figref>, the high-frequency component Ta<b>1</b> and the low-frequency component b<b>0</b> are generated by performing the Haar conversion on a<b>0</b> and a<b>1</b>. Here, when the weights w<b>0</b> and w<b>1</b> are equal, the low-frequency component b<b>0</b> is the average value of a<b>0</b> and a<b>1</b>, and the high-frequency component Ta<b>1</b> is the difference between a<b>0</b> and a<b>1</b>.</p><p id="p-0470" num="0456">Since there is no attribute information to be paired with a<b>2</b>, a<b>2</b> is used as b<b>1</b> as is. Similarly, since there is no attribute information to be paired with a<b>3</b>, a<b>3</b> is used as b<b>2</b> as is. Additionally, the high-frequency component Ta<b>5</b> and the low-frequency component b<b>3</b> are generated by performing the Haar conversion on a<b>4</b> and a<b>5</b>.</p><p id="p-0471" num="0457">In the layer L+1, the high-frequency component Tb<b>1</b> and the low-frequency component c<b>0</b> are generated by performing the Haar conversion on b<b>0</b> and b<b>1</b>. Similarly, the high-frequency component Tb<b>3</b> and the low-frequency component c<b>1</b> are generated by performing the Haar conversion on b<b>2</b> and b<b>3</b>.</p><p id="p-0472" num="0458">In the layer Lmax-<b>1</b>, the High-frequency component Tc<b>1</b> and the low-frequency component d<b>0</b> are generated by performing the Haar conversion on c<b>0</b> and c<b>1</b>.</p><p id="p-0473" num="0459">The three-dimensional data encoding device may encode the coding coefficients to which the Haar conversion has been applied, after quantizing the coding coefficients. For example, the three-dimensional data encoding device performs quantization by dividing the coding coefficient by the quantization scale (also called the quantization step (QS)). In this case, the smaller the quantization scale, the smaller the error (quantization error) that may occur due to quantization. Conversely, the larger the quantization scale, the larger the quantization error.</p><p id="p-0474" num="0460">Note that the three-dimensional data encoding device may change the value of the quantization scale for each layer. <figref idref="DRAWINGS">FIG. <b>50</b></figref> is a diagram showing an example of setting the quantization scale for each layer. For example, the three-dimensional data encoding device sets smaller quantization scales to the higher layers, and larger quantization scales to the lower layers. Since the coding coefficients of the three-dimensional points belonging to the higher layers include more low-frequency components than the lower layers, there is a high possibility that the coding coefficients are important components in human visual characteristics and the like. Therefore, by suppressing the quantization error that may occur in the higher layers by making the quantization scales for the higher layers small, visual deterioration can be suppressed, and the coding efficiency can be improved.</p><p id="p-0475" num="0461">Note that the three-dimensional data encoding device may add the quantization scale for each layer to a header or the like. Accordingly, the three-dimensional decoding device can correctly decode the quantization scale, and. can appropriately decode a bitstream.</p><p id="p-0476" num="0462">Additionally, the three-dimensional data encoding device may adaptively switch the value of the quantization scale according to the importance of a current three-dimensional point to be encoded. For example, the three-dimensional data encoding device uses a small quantization scale for three-dimensional point with high importance, and uses a large quantization scale for a three-dimensional point with low importance. For example, the three-dimensional data encoding device may calculate the importance from the weight at the time of the Haar conversion, or the like. For example, the three-dimensional data encoding device may calculate the quantization scale by using the sum of w<b>0</b> and In this manner, by making the quantization scale of a three-dimensional point with high importance small, the quantization error becomes small, and the coding efficiency can be improved.</p><p id="p-0477" num="0463">Additionally, the value of the QS may be made smaller for the higher layers. Accordingly, the higher the layer, the larger the value of the QW, and the prediction efficiency can be improved by suppressing the quantization error of the three-dimensional point.</p><p id="p-0478" num="0464">Here, a coding coefficient Ta<b>1</b>q after quantization of the coding coefficient Ta<b>1</b> of the attribute information al is represented by Ta<b>1</b>/QS_L. Note that QS may be the same value in all the layers or a part of the layers.</p><p id="p-0479" num="0465">The QW (Quantization Weight) is the value that represents the importance of a current three-dimensional point to be encoded. For example, the above-described sum of w<b>0</b> and w<b>1</b> may be used as the QW. Accordingly, the higher the layer, the larger the value of the QW, and the prediction efficiency can be improved by suppressing the quantization error of the three-dimensional point.</p><p id="p-0480" num="0466">For example, the three-dimensional data encoding device may first initialize the values of the QWs of all the three-dimensional points with 1, and may update the QW of each three-dimensional point by using the values of w<b>0</b> and w<b>1</b> at the time of the Haar conversion. Alternatively, the three-dimensional data encoding device may change the initial value according to the layers, without initializing the values of the QWs of all the three-dimensional points with a value of 1. For example, the quantization scales for the higher layers becomes small by setting larger QW initial values for the higher layers.</p><p id="p-0481" num="0467">Accordingly, since the prediction error in the higher layers can be suppressed, the prediction accuracy of the lower layers can be increased, and the coding efficiency can be improved. Note that the three-dimensional data encoding device need not necessarily use the QW.</p><p id="p-0482" num="0468">When using the QW, the quantized value Ta<b>1</b>q of Ta<b>1</b> is calculated by (Equation K1) and (Equation K2).</p><p id="p-0483" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Math</mi>      <mo>.</mo>      <mtext>   </mtext>      <mn>5</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>Ta</mi>      <mo>&#x2062;</mo>      <mn>1</mn>      <mo>&#x2062;</mo>      <mi>q</mi>     </mrow>     <mo>=</mo>     <mrow>      <mfrac>       <mrow>        <mrow>         <mi>Ta</mi>         <mo>&#x2062;</mo>         <mn>1</mn>        </mrow>        <mo>+</mo>        <mfrac>         <mi>QS_L</mi>         <mn>2</mn>        </mfrac>       </mrow>       <mrow>        <mi>QS_LoD</mi>        <mo>&#x2062;</mo>        <mn>1</mn>       </mrow>      </mfrac>      <mo>&#xd7;</mo>      <mi>QWTa</mi>      <mo>&#x2062;</mo>      <mn>1</mn>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>K1</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00004-2" num="00004.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>QWTa</mi>      <mo>&#x2062;</mo>      <mn>1</mn>     </mrow>     <mo>=</mo>     <mrow>      <mn>1</mn>      <mo>+</mo>      <mrow>       <munderover>        <mo>&#x2211;</mo>        <mrow>         <mi>i</mi>         <mo>=</mo>         <mn>0</mn>        </mrow>        <mn>1</mn>       </munderover>       <msub>        <mi>w</mi>        <mi>i</mi>       </msub>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>K2</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0484" num="0469">Additionally, the three-dimensional data encoding device scans and encodes the coding coefficients (unsigned integer values) after quantization in a certain order. For example, the three-dimensional data encoding device encodes a plurality of three-dimensional points from the three-dimensional points included in the higher layers toward the lower layers in order.</p><p id="p-0485" num="0470">For example, in the example shown in <figref idref="DRAWINGS">FIG. <b>49</b></figref>, the three-dimensional data encoding device encodes a plurality of three-dimensional points in the order of Tc<b>1</b>q Tb<b>1</b>q, Tb<b>3</b>q, Ta<b>3</b>q, and Ta<b>1</b>q, from d<b>0</b>q included in the higher layer Lmax. Here, there is a tendency that the lower the layer L, the more likely it is that the coding coefficient after quantization becomes 0. This can be due to the following and the like.</p><p id="p-0486" num="0471">Since the coding coefficient of the lower layer L shows a higher frequency component than the higher layers, there is a tendency that the coding coefficient becomes 0 depending on a current three-dimensional point. Additionally, by switching the quantization scale according to the above-described importance or the like, the lower the layer, the larger the quantization scales, and the more likely it is that the coding coefficient after quantization becomes 0.</p><p id="p-0487" num="0472">In this manner, the lower the layer, the more likely it is that the coding coefficient after quantization becomes 0, and the value 0 consecutively occurs in the first code sequence. <figref idref="DRAWINGS">FIG. <b>51</b></figref> is a diagram showing an example of the first code sequence and the second code sequence.</p><p id="p-0488" num="0473">The three-dimensional data encoding device counts the number of times that the value 0 occurs in the first code sequence, and encodes the number of times that the value 0 consecutively occurs, instead of the consecutive values 0.</p><p id="p-0489" num="0474">That is, the three-dimensional data encoding device generates a second code sequence by replacing the coding coefficient of the consecutive values 0 in the first code sequence with the number of consecutive times (ZeroCnt) of 0. Accordingly, when there are consecutive values 0 of the coding coefficients after quantization, the coding efficiency can be improved by encoding the number of consecutive times of 0, rather than encoding a lot of 0s.</p><p id="p-0490" num="0475">Additionally, the three-dimensional data encoding device may entropy encode the value of ZeroCnt. For example, the three-dimensional data encoding device binarizes the value of ZeroCnt with the truncated unary code of the total number T of the encoded three-dimensional points, and arithmetically encodes each bit after the binarization. <figref idref="DRAWINGS">FIG. <b>52</b></figref> is a diagram showing an example of the truncated unary code in the case where the total number of encoded three-dimensional points is T. At this time, the three-dimensional data encoding device may improve the coding efficiency by using a different coding table for each bit. For example, the three-dimensional data encoding device uses coding table 1. for the first bit, uses coding table 2 for the second bit, and coding table 3 for the subsequent bits. In this manner, the three-dimensional data encoding device can improve the coding efficiency by switching the coding table for each bit.</p><p id="p-0491" num="0476">Additionally, the three-dimensional data encoding device may arithmetically encode ZeroCnt after binarizing ZeroCnt with an Exponential-Golomb. Accordingly, when the value of ZeroCnt easily becomes large, the efficiency can be more improved than the binarized arithmetic encoding with the truncated unary code. Note that the three-dimensional data encoding device may add a flag for switching between using the truncated unary code and using the Exponential-Golomb to a header. Accordingly, the three-dimensional data encoding device can improve the coding efficiency by selecting the optimum binarization method. Additionally, the three-dimensional data decoding device can correctly decode a bitstream by referring to the flag included in the header to switch the binarization method.</p><p id="p-0492" num="0477">The three-dimensional decoding device may convert the decoded coding coefficient after the quantization from an unsigned integer value to a signed integer value with a method contrary to the method performed by the three-dimensional data encoding device. Accordingly, when the coding coefficient is entropy encoded, the three-dimensional decoding device can appropriately decode a bitstream generated without considering the occurrence of a negative integer. Note that the three-dimensional decoding device does not necessarily need to convert the coding coefficient from an unsigned integer value to a signed integer value. For example, when decoding a bitstream including an encoded bit that has been separately entropy encoded, the three-dimensional decoding device may decode the sign bit.</p><p id="p-0493" num="0478">The three-dimensional decoding device decodes the coding coefficient after the quantization converted to the signed integer value, by the inverse quantization and the inverse Haar conversion. Additionally, the three-dimensional decoding device utilizes the coding coefficient after the decoding for the prediction after the current three-dimensional point to be decoded. Specifically, the three-dimensional decoding device calculates the inverse quantized value by multiplying the coding coefficient after the quantization by the decoded quantization scale. Next, the three-dimensional decoding device obtains the decoded value by applying the inverse Haar conversion described later to the inverse quantized value.</p><p id="p-0494" num="0479">For example, the three-dimensional decoding device converts the decoded unsigned integer value to a signed integer value with the following method. When the LSB (least significant bit) of the decoded unsigned integer value a<b>2</b>u is 1, the signed integer value Ta<b>1</b>q is set to &#x2212;((a<b>2</b>u +1&#x3e;&#x3e;1). When the LSB of the decoded unsigned integer value a<b>2</b>u is not 1 (when it is 0), the signed integer value Ta<b>1</b>q is set to (a<b>2</b> &#x3e;&#x3e;1).</p><p id="p-0495" num="0480">Additionally, the inverse quantized value of Ta<b>1</b> is represented by Ta<b>1</b>q&#xd7;QS_L. Here, Ta<b>1</b>q is the quantized value of Ta<b>1</b>. In addition, QS_L is the quantization step for the layer L.</p><p id="p-0496" num="0481">Additionally, the QS may be the same value for all the layers or a part of the layers. In addition, the three-dimensional data encoding device may add the information indicating the QS to a header or the like. Accordingly, the three-dimensional decoding device can correctly perform inverse quantization by using the same QS as the QS used by the three-dimensional data encoding device.</p><p id="p-0497" num="0482">Next, the inverse Haar conversion will be described. <figref idref="DRAWINGS">FIG. <b>53</b></figref> is a diagram for describing the inverse Haar conversion. The three-dimensional decoding device decodes the attribute value of a three-dimensional point by applying the inverse Haar conversion to the coding coefficient after the inverse quantization.</p><p id="p-0498" num="0483">First, the three-dimensional decoding device generates the Morton codes based on the geometry information of three-dimensional points, and sorts the three-dimensional points in the order of the Morton codes. For example, the three-dimensional decoding device may perform the sorting in ascending order of the Morton codes. Note that the sorting order is not limited to the order of the Morton codes, and the other order may be used.</p><p id="p-0499" num="0484">Next, the three-dimensional decoding device restores the attribute information of three-dimensional points that are adjacent to each other in the order of the Morton codes in the layer L, by applying the inverse Haar conversion to the coding coefficient including the low-frequency component of the layer L+1, and the coding coefficient including the high-frequency component of the layer L. For example, the three-dimensional decoding device may use the inverse Haar conversion of a 2&#xd7;2 matrix. The attribute information of the restored layer L is used as the input value for the lower layer L&#x2212;1.</p><p id="p-0500" num="0485">The three-dimensional decoding device repeats such layer processing, and ends the processing when all the attribute information of the bottom layer is decoded. Note that, when only one three-dimensional point exists as two three-dimensional points that are adjacent to each other in the layer L&#x2212;1 at the time of application of the inverse Haar conversion, the three-dimensional decoding device may assign the value of the encoding component of the layer L to the attribute value of the one existing three-dimensional point. Accordingly, the three-dimensional decoding device can correctly decode a bitstream with improved coding efficiency by applying the Haar conversion to all the values of the input attribute information.</p><p id="p-0501" num="0486">When the attribute information is N dimensional, the three-dimensional decoding device may independently apply the inverse Haar conversion for each dimension, and may decode each coding coefficient. For example, when the attribute information is color information (RGB, YIN, or the like), the three-dimensional data decoding device applies the inverse Haar conversion to the coding coefficient for each component, and decodes each attribute value.</p><p id="p-0502" num="0487">The three-dimensional decoding device may apply the inverse Haar conversion in the order of Layers Lmax, L+1, . . . , L. Additionally, w<b>0</b> and w<b>1</b> shown in <figref idref="DRAWINGS">FIG. <b>53</b></figref> are the weights assigned to each three-dimensional point. For example, the three-dimensional data decoding device may calculate the weight based on the distance information between two adjacent three-dimensional points to which the inverse Haar conversion is applied, or the like. For example, the three-dimensional data encoding device may decode a bitstream with improved coding efficiency such that the closer the distance, the greater the weight.</p><p id="p-0503" num="0488">In the example shown in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, the coding coefficients after the inverse quantization are Ta<b>1</b>, Ta<b>5</b>, Tb<b>1</b>, Tb<b>3</b>, Tc<b>1</b>, and d<b>0</b>, and a<b>0</b>, a<b>1</b>, a<b>2</b>, a<b>3</b>, a<b>4</b>, and a<b>5</b> are obtained as the decoded values.</p><p id="p-0504" num="0489"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram showing a syntax example of the attribute information (attribute data). The attribute information (attribute data) includes the number of consecutive zeros (ZeroCnt), the number of attribute dimensions (attribute_dimension), and the coding coefficient (value [j] [i]). The number of consecutive zeros (ZeroCnt) indicates the number of times that the value 0 continues in the coding coefficient after quantization. Note that the three-dimensional data encoding device may arithmetically encode ZeroCnt after binarizing ZeroCnt.</p><p id="p-0505" num="0490">Additionally, as shown in <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the three-dimensional data encoding device may determine whether or not the layer L (layerL) to which the coding coefficient belongs is equal to or more than a predefined threshold value TH_layer, and may switch the information added to a bitstream according to the determination result. For example, when the determination result is true, the three-dimensional data encoding device adds all the coding coefficients of the attribute information to a bitstream. In addition, when the determination result is false, the three-dimensional data encoding device may add a part of the coding coefficients to a bitstream.</p><p id="p-0506" num="0491">Specifically, when the determination result is true, the three-dimensional data encoding device adds the encoded result of the three-dimensional information of the color information RG-B or WV to a bitstream. When the determination result is false, the three-dimensional data encoding device may add a part of information such as G- or Y of the color information to a bitstream, and need not to add the other components to the bitstream. In this manner, the three-dimensional data encoding device can improve the coding efficiency by not adding a part of the coding coefficients of the layer (the layer smaller than TH _layer) including the coding coefficients indicating the high-frequency component with less visually noticeable degradation to a bitstream.</p><p id="p-0507" num="0492">The number of attribute dimensions (attribute dimension) indicates the number of dimensions of the attribute information. For example, when the attribute information is the color information (RGB, YUV, or the like) of a three-dimensional point, since the color information is three-dimensional, the number of attribute dimensions is set, to a value 3. When the attribute information is the reflectance, since the reflectance is one-dimensional, the number of attribute dimensions is set, to a value 1. Note that the number of attribute dimensions may be added to the header of the attribute information of a bit stream or the like.</p><p id="p-0508" num="0493">The coding coefficient (value [j] [i]) indicates the coding coefficient after quantization of the attribute information of the j-th dimension of the i-th three-dimensional point. For example, when the attribute information is color information, value [99] [1] indicates the coding coefficient of the second dimension (for example, the G value) of the 100th three-dimensional point. Additionally, when the attribute information is reflectance information, value [119] [0] indicates the coding coefficient of the first dimension. (for example, the reflectance) of the 120th three-dimensional point.</p><p id="p-0509" num="0494">Note that, when the following conditions are satisfied, the three-dimensional data encoding device may subtract the value 1 from value 41 and may entropy encode the obtained value. In this case, the three-dimensional data decoding device restores the coding coefficient by adding the value 1 to value after entropy decoding.</p><p id="p-0510" num="0495">The above-described conditions are (1) when attribute_dimension=1, or (2) when attribute dimension is 1 or more, and when the values of all the dimensions are equal. For example, when the attribute information is the reflectance, since attribute_dimension=1, the three-dimensional data encoding device subtracts the value 1 from the coding coefficient to calculate value, and encodes the calculated value. The three-dimensional decoding device calculates the coding coefficient by adding the value 1 to the value after decoding.</p><p id="p-0511" num="0496">More specifically, for example, when the coding coefficient of the reflectance is 10, the three-dimensional data encoding device encodes the value 9 obtained by subtracting the value 1 from the value 1.0 of the coding coefficient.</p><p id="p-0512" num="0497">The three-dimensional data decoding device adds the value 1 to the decoded value 9 to calculate the value 10 of the coding coefficient.</p><p id="p-0513" num="0498">Additionally, since attribute_dimension=3 when the attribute information is the color, for example, when the coding coefficient after quantization of each of the components R, G, and B is the same, the three-dimensional data encoding device subtracts the value 1 from each coding coefficient, and encodes the obtained value. The three-dimensional data decoding device adds the value 1 to the value after decoding. More specifically, for example, when the coding coefficient of R, G, and B=(1, 1, 1), the three-dimensional data encoding device encodes (0, 0, 0). The three-dimensional data decoding device adds 1 to each component of (0, 0, 0) to calculate (1, 1, 1). Additionally, when the coding coefficients of R, G, and B=(2, 1, 2), the three-dimensional data encoding device encodes (2, 1, 2) as is. The three-dimensional data decoding device uses the decoded (2, 1, 2) as is as the coding coefficients.</p><p id="p-0514" num="0499">In this manner, by providing ZeroCnt, since the pattern in which all the dimensions are 0 as value is not generated, the value obtained by subtracting 1 from the value indicated by value can be encoded. Therefore, the coding efficiency can be improved.</p><p id="p-0515" num="0500">Additionally, value [0] shown in <figref idref="DRAWINGS">FIG. <b>54</b></figref> indicates the coding coefficient after quantization of the attribute information of the first dimension of the i-th three-dimensional point. As shown in <figref idref="DRAWINGS">FIG. <b>54</b></figref>, when the layer L (layerL) to which the coding coefficient belongs is smaller than the threshold value TH_layer, the code amount may be reduced by adding the attribute information of the first dimension to a bitstream (not adding the attribute information of the second and following dimensions to the bitstream).</p><p id="p-0516" num="0501">The three-dimensional data encoding device may switch the calculation method of the value of ZeroCnt depending on the value of attribute_dimension. For example, when attribute_dimension=3, the three-dimensional data encoding device may count the number of times that the values of the coding coefficients of all the components (dimensions) become 0. <figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram showing an example of the coding coefficient and ZeroCnt in this case. For example, in the case of the color information shown in <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the three-dimensional data encoding device counts the number of the consecutive coding coefficients having 0 for all of the R, G, and B components, and adds the counted number to a bitstream as ZeroCnt. Accordingly, it becomes unnecessary to encode ZeroCnt for each component, and the overhead can be reduced. Therefore, the coding efficiency can be improved. Note that the three-dimensional data encoding device may calculate Zeroent for each dimension even when attribute_dimension is two or more, and may add the calculated ZeroCnt to a bitstream.</p><p id="p-0517" num="0502"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a flowchart of the three-dimensional data encoding processing according to the present embodiment. First, the three-dimensional data encoding device encodes geometry information (geometry) (S<b>6601</b>). For example, the three-dimensional data encoding device performs encoding by using an octree representation.</p><p id="p-0518" num="0503">Next, the three-dimensional data encoding device converts the attribute information (S<b>6602</b>). For example, after the encoding of the geometry information, when the position of a three-dimensional point is changed due to quantization or the like, the three-dimensional data encoding device reassigns the attribute information of the original three-dimensional point to the three-dimensional point after the change. Note that the three-dimensional data encoding device may interpolate the value of the attribute information according to the amount of change of the position to perform the reassignment. For example, the three-dimensional data encoding device detects N three-dimensional points before the change near the three dimensional position after the change, performs the weighted averaging of the value of the attribute information of the N three-dimensional points based on the distance from the three-dimensional position after the change to each of the N three-dimensional points, and sets the obtained value as the value of the attribute information of the three-dimensional point after the change. Additionally, when two or more three-dimensional points are changed to the same three-dimensional position due to quantization or the like, the three-dimensional data encoding device may assign the average value of the attribute information in the two or more three-dimensional points before the change as the value of the attribute information after the change.</p><p id="p-0519" num="0504">Next, the three-dimensional data encoding device encodes the attribute information (S<b>6603</b>). For example, when encoding a plurality of pieces of attribute information, the three-dimensional data encoding device may encode the plurality of pieces of attribute information in order. For example, when encoding the color and the reflectance as the attribute information, the three-dimensional data encoding device generates a bitstream to which the encoding result of the reflectance is added after the encoding result of the color. Note that a plurality of encoding results of the attribute information added to a bitstream may be in any order.</p><p id="p-0520" num="0505">Additionally, the three-dimensional data encoding device may add the information indicating the start location of the encoded data of each attribute information in a bitstream to a header or the like. Accordingly, since the three-dimensional data decoding device can selectively decode the attribute information that needs to be decoded, the decoding processing of the attribute information that does not need to be decoded can be omitted. Therefore, the processing amount for the three-dimensional data decoding device can be reduced. Additionally, the three-dimensional data encoding device may encode a plurality of pieces of attribute information in parallel, and may integrate the encoding results into one bitstream. Accordingly, the three-dimensional data encoding device can encode a plurality of pieces of attribute information at high speed,</p><p id="p-0521" num="0506"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a flowchart of the attribute information encoding processing (S<b>6603</b>). First, the three-dimensional data encoding device generates a coding coefficient from attribute information by the Haar conversion (S<b>6611</b>). Next, the three-dimensional data encoding device applies quantization to the coding coefficient (S<b>6612</b>). Next, the three-dimensional data encoding device generates encoded attribute information (bitstream) by encoding the coding coefficient after the quantization (S<b>6613</b>).</p><p id="p-0522" num="0507">Additionally, the three-dimensional data encoding device applies inverse quantization to the coding coefficient after the quantization (S<b>6614</b>). Next, the three-dimensional decoding device decodes the attribute information by applying the inverse Haar conversion to the coding coefficient after the inverse quantization (S<b>6615</b>). For example, the decoded attribute information is referred to in the following encoding.</p><p id="p-0523" num="0508"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a flowchart of the coding coefficient encoding processing (S<b>6613</b>). First, the three-dimensional data encoding device converts a coding coefficient from a signed integer value to an unsigned integer value (S<b>6621</b>). For example, the three-dimensional data encoding device converts a signed integer value to an unsigned integer value as follows, When signed integer value Ta<b>1</b>q is smaller than 0, the unsigned integer value is set to &#x2212;1&#x2212;(2&#xd7;Ta<b>1</b>q). When the signed integer value Ta<b>1</b>q is equal to or more than 0, the unsigned integer value is set to 2&#xd7;Ta<b>1</b>q. Note that, when the coding coefficient does not become a negative value, the three-dimensional data encoding device may encode the coding coefficient as the unsigned integer value as is.</p><p id="p-0524" num="0509">When not all coding coefficients have been processed (No in S<b>6622</b>), the three-dimensional data encoding device determines whether the value of the coding coefficient to be processed is zero (S<b>6623</b>). When the value of the coding coefficient to be processed is zero (Yes in S<b>6623</b>), the three-dimensional data encoding device increments ZeroCnt by 1 (S<b>6624</b>), and returns to step S<b>6622</b>.</p><p id="p-0525" num="0510">When the value of the coding coefficient to be processed is not zero (No in S<b>6623</b>), the three-dimensional data encoding device encodes ZeroCnt, and resets ZeroCnt to zero (S<b>6625</b>). Additionally, the three-dimensional data encoding device arithmetically encodes the coding coefficient to be processed. (S<b>6626</b>), and returns to step S<b>6622</b>. For example, the three-dimensional data encoding device performs binary arithmetic encoding. In addition, the three-dimensional data encoding device may subtract the value 1 from the coding coefficient, and may encode the obtained value.</p><p id="p-0526" num="0511">Additionally, the processing of steps S<b>6623</b> to S<b>6626</b> is repeatedly performed for each coding coefficient. In addition, when all the coding coefficients have been processed (Yes in S<b>6622</b>), the three-dimensional data encoding device ends the processing.</p><p id="p-0527" num="0512"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a flowchart of the three-dimensional data decoding processing according to the present embodiment. First, the three-dimensional decoding device decodes geometry information (geometry) from a bitstream (S<b>6631</b>). For example, the three-dimensional data decoding device performs decoding by using an octree representation.</p><p id="p-0528" num="0513">Next, the three-dimensional decoding device decodes the attribute information from the bitstream (S<b>6632</b>). For example, when decoding a. plurality of pieces of attribute information, the three-dimensional decoding device may decode the plurality of pieces of attribute information in order. For example, when decoding the color and the reflectance as the attribute information, the three-dimensional data decoding device decodes the encoding result of the color and the encoding result of the reflectance according to the order in which they are added to the bitstream. For example, when the encoding result of the reflectance is added after the encoding result of the color in a bitstream, the three-dimensional data decoding device decodes the encoding result of the color, and thereafter decodes the encoding result of the reflectance. Note that the three-dimensional data decoding device may decode the encoding results of the attribute information added to a bitstream in any order.</p><p id="p-0529" num="0514">Additionally, the three-dimensional decoding device may obtain the information indicating the start location of the encoded data of each attribute information in a bitstream by decoding a header or the like. Accordingly, since the three-dimensional data decoding device can selectively decode the attribute information that needs to be decoded, the decoding processing of the attribute information that does not need to be decoded can be omitted. Therefore, the processing amount of the three-dimensional decoding device can be reduced. Additionally, the three-dimensional data decoding device may decode a plurality of pieces of attribute information in parallel, and may integrate the decoding results into one three-dimensional point cloud. Accordingly, the three-dimensional data decoding device can decode a plurality of pieces of attribute information at high speed.</p><p id="p-0530" num="0515"><figref idref="DRAWINGS">FIG. <b>60</b></figref> is a flowchart of the attribute information decoding processing (S<b>6632</b>). First, the three-dimensional decoding device decodes a coding coefficient from a bitstream (S<b>6641</b>). Next, the three-dimensional decoding device applies the inverse quantization to the coding coefficient (S<b>6642</b>). Next, the three-dimensional decoding device decodes the attribute information by applying the inverse Haar conversion to the coding coefficient after the inverse quantization (S<b>6643</b>).</p><p id="p-0531" num="0516"><figref idref="DRAWINGS">FIG. <b>61</b></figref> is a flowchart of the coding coefficient decoding processing (S<b>6641</b>). First, the three-dimensional decoding device decodes ZeroCnt from a bitstream (S<b>6651</b>). When not all coding coefficients have been processed (No in S<b>6652</b>), the three-dimensional decoding device determines whether ZeroCnt larger than 0 (S<b>6653</b>).</p><p id="p-0532" num="0517">When ZeroCnt is larger than zero (Yes in S<b>6653</b>), the three-dimensional decoding device sets the coding coefficient to be processed to 0 (S<b>6654</b>). Next, the three-dimensional decoding device subtracts 1 from ZeroCnt (S<b>6655</b>), and returns to step S<b>6652</b>.</p><p id="p-0533" num="0518">When ZeroCnt is zero (No in S<b>6653</b>), the three-dimensional decoding device decodes the coding coefficient to be processed (S<b>6656</b>). For example, the three-dimensional decoding device uses binary arithmetic decoding.</p><p id="p-0534" num="0519">Additionally, the three-dimensional decoding device may add the value 1 to the decoded coding coefficient.</p><p id="p-0535" num="0520">Next, the three-dimensional decoding device decodes ZeroCnt, sets the obtained value to ZeroCnt (S<b>6657</b>), and returns to step S<b>6652</b>.</p><p id="p-0536" num="0521">Additionally, the processing of steps S<b>6653</b> to S<b>6657</b> is repeatedly performed for each coding coefficient. In addition, when all the coding coefficients have been processed (Yes in S<b>6652</b>), the three-dimensional data encoding device converts a plurality of decoded coding coefficients from unsigned integer values to signed integer values (S<b>6658</b>). For example, the three-dimensional data decoding device may convert the decoded coding coefficients from unsigned integer values to signed integer values as follows. When the LSB (least significant bit) of the decoded unsigned integer value Talu is 1, the signed integer value Ta<b>1</b>q is set to &#x2212;((Ta<b>1</b>u+1)&#x3e;&#x3e;1). When the LSB of the decoded unsigned integer value Ta<b>1</b>u is not 1 (when it is 0), the signed integer value Ta<b>1</b>q is set to (Ta<b>1</b>u&#x3e;&#x3e;1). Note that, when the coding coefficient does riot become a negative value, the three-dimensional data decoding device may use the decoded coding coefficient as is as the signed integer value.</p><p id="p-0537" num="0522"><figref idref="DRAWINGS">FIG. <b>62</b></figref> is a block diagram of attribute information encoder <b>6600</b> included in the three-dimensional data encoding device. Attribute information encoder <b>6600</b> includes sorter <b>6601</b>, Haar transformer <b>6602</b>, quantizer <b>6603</b>, inverse quantizer <b>6604</b>, inverse Haar converter <b>6605</b>, memory <b>6606</b>, and arithmetic encoder <b>6607</b>.</p><p id="p-0538" num="0523">Sorter <b>6601</b> generates the Morton codes by using the geometry information of three-dimensional points, and sorts the plurality of three-dimensional points in the order of the Morton codes. Haar transformer <b>6602</b> generates the coding coefficient by applying the Haar conversion to the attribute information. Quantizer <b>6603</b> quantizes the coding coefficient of the attribute information.</p><p id="p-0539" num="0524">Inverse quantizer <b>6604</b> inverse quantizes the coding coefficient after the quantization. Inverse Haar converter <b>6605</b> applies the inverse Haar conversion to the coding coefficient. Memory <b>6606</b> stores the values of pieces of attribute information of a plurality of decoded three-dimensional points. For example, the attribute information of the decoded three-dimensional points stored in memory <b>6606</b> may be utilized for prediction and the like of an unencoded three-dimensional point.</p><p id="p-0540" num="0525">Arithmetic encoder <b>6607</b> calculates ZeroCnt from the coding coefficient after the quantization, and arithmetically encodes ZeroCnt. Additionally, arithmetic encoder <b>6607</b> arithmetically encodes the non-zero coding coefficient after the quantization. Arithmetic encoder <b>6607</b> may binarize the coding coefficient before the arithmetic encoding. In addition, arithmetic encoder <b>6607</b> may generate and encode various kinds of header information.</p><p id="p-0541" num="0526"><figref idref="DRAWINGS">FIG. <b>63</b></figref> is a block diagram of attribute information decoder <b>6610</b> included in the three-dimensional decoding device. Attribute information decoder <b>6610</b> includes arithmetic decoder <b>6611</b>, inverse quantizer <b>6612</b>, inverse Haar converter <b>6613</b>, and memory <b>6614</b>.</p><p id="p-0542" num="0527">Arithmetic decoder <b>6611</b> arithmetically decodes ZeroCnt and the coding coefficient included in a bitstream. Note that arithmetic decoder <b>6611</b> may decode various kinds of header information.</p><p id="p-0543" num="0528">Inverse quantizer <b>6612</b> inverse quantizes the arithmetically decoded coding coefficient. Inverse Haar converter <b>6613</b> applies the inverse Haar conversion to the coding coefficient after the inverse quantization. Memory <b>6614</b> stores the values of pieces of attribute information of a plurality of decoded three-dimensional points. For example, the attribute information of the decoded three-dimensional points stored in memory <b>6614</b> may be utilized for prediction of an undcoded three-dimensional point.</p><p id="p-0544" num="0529">Note that, in the above-described embodiment, although the example has been shown in which the three-dimensional points are encoded in the order of the lower layers to the higher layers as the encoding order, it is not necessarily limit to this. For example, a method may be used that scans the coding coefficients after the Haar conversion in the order of the higher layers to the lower layers. Note that, also in this case, the three-dimensional data encoding device may encode the number of consecutive times of the value 0 as ZeroCnt.</p><p id="p-0545" num="0530">Additionally, the three-dimensional data encoding device may switch whether or not to use the encoding method using ZeroCnt described in the present embodiment per WLD, SPC, or volume. In this case, the three-dimensional data encoding device may add the information indicating whether or not the encoding method using ZeroCnt has been applied to the header information. Accordingly, the three-dimensional decoding device can appropriately perform decoding. As an example of the switching method, for example, the three-dimensional data encoding device counts the number of times of occurrence of the coding coefficient having a value of 0 with respect to one volume. When the count value exceeds a predefined threshold value, the three-dimensional data encoding device applies the method using ZeroCnt to the next volume, and when the count value is equal to or less than the threshold value, the three-dimensional data encoding device does not apply the method using ZeroCnt to the next volume. Accordingly, since, the three-dimensional data encoding device can appropriately switch whether or not to apply the encoding method using ZeroCnt according to the characteristic of a current three-dimensional point to be encoded, the coding efficiency can be improved..</p><heading id="h-0012" level="1">Embodiment 5</heading><p id="p-0546" num="0531"><figref idref="DRAWINGS">FIG. <b>64</b></figref> is a block diagram illustrating a configuration of a three-dimensional data encoding device according to this embodiment. Note that, in <figref idref="DRAWINGS">FIG. <b>64</b></figref>, illustration of an encoder that encodes geometry information, which is included in the three-dimensional data encoding device, is omitted.</p><p id="p-0547" num="0532">Three-dimensional data encoding device <b>10600</b> includes transformer <b>10610</b> and encoder <b>10620</b>.</p><p id="p-0548" num="0533">Transformer <b>10610</b> executes a transform process on input attribute information before the attribute information is input to encoder <b>10620</b>. The transform process is at least one of offset (offset process) and scaling (scaling process) described later, for example.</p><p id="p-0549" num="0534">Transformer <b>10610</b> has scaler <b>10611</b> and offset unit <b>10612</b>. Transformer <b>10610</b> has only to have at least one of offset unit <b>10612</b> and scaler <b>10611</b>. For example, transformer <b>10610</b> need not have scaler <b>10611</b>, if transformer <b>10610</b> performs only offset on the attribute information. Scaler <b>10611</b> performs a scaling (multiplication or division), which is an example of the transform process, on the input attribute information, and outputs a scale value (more specifically, scale information that, is information indicating a scale value used for the scaling).</p><p id="p-0550" num="0535">Offset unit <b>10612</b> performs an offset (addition or subtraction), which is another example of the transform process, on the scaled attribute information, and outputs an offset value (more specifically, offset information that is information indicating an offset value used for the offset).</p><p id="p-0551" num="0536">Encoder <b>10620</b> encodes the attribute information transformed by transformer <b>10610</b> (transformed attribute information), and encodes transform information, such as the offset value or the scale value, as additional information (metadata).</p><p id="p-0552" num="0537">Encoder <b>10620</b> includes attribute information encoder <b>10621</b> and. additional information encoder <b>10622</b>.</p><p id="p-0553" num="0538">Attribute information encoder <b>10621</b> encodes the transformed attribute information, which is the attribute information transformed by transformer <b>10610</b>.</p><p id="p-0554" num="0539">Additional information encoder <b>10622</b> encodes additional information output from transformer <b>10610</b>, the additional information including the transform information, such as the scale value or the offset value.</p><p id="p-0555" num="0540">For example, when encoder <b>10620</b> is not capable of encoding of a negative value or is prescribed not to encode a negative value, if the format of the input attribute information has a negative value, transformer <b>10610</b> transforms the attribute information into a positive value by adding an offset value to the attribute information.</p><p id="p-0556" num="0541">For example, when encoder <b>10620</b> does not handle a decimal fraction and a floating-point number but handles an integer or is prescribed not to handle a decimal fraction and a floating-point number but handle an integer, if the format of the input attribute information is not an integer, scaler <b>10611</b> transforms the attribute information into an integer value by multiplying the input attribute information (more specifically, a numerical value indicated by the input attribute information) by a scale value.</p><p id="p-0557" num="0542">For example, when encoder <b>10620</b> is capable of encoding of attribute information in an 8-bit unsigned integer format (positive integer), and the input attribute information is a 32-bit signed floating-point number within a range of [&#x2212;1, 1], the attribute information is first transformed into scaled_value, which is a value in an 8-bit signed integer format within a range of [&#x2212;127, 128], through a process, such as scaling, round-off, truncation., or round-up.</p><p id="p-0558" num="0543">Note that scaled_attribute=round(input_attribute&#xd7;scale). Here, scale is an example of the scale value and is a value by which the value indicated by the attribute information is to be multiplied. For example, scale is 2{circle around (&#x2003;)}(8 bit&#x2212;1), that is, the seventh power of 2=128.</p><p id="p-0559" num="0544">The scaled attribute information is then transformed into an 8-bit unsigned integer format within a range of [0, 255] by offset. Note that offset attribute=scaled_attribute+offset.</p><p id="p-0560" num="0545">Here, offset is an example of the offset value and is a value to be added to the value indicated by the attribute information. For example, offset is 2{circle around (&#x2003;)}(8 bit&#x2212;<b>1</b>)&#x2212;1=127.</p><p id="p-0561" num="0546">The offset value and/or the scale value, which are transform information used for the transform, are input to encoder <b>10620</b> and encoded as additional information.</p><p id="p-0562" num="0547">Note that additional information encoder <b>10622</b> may encode the transform information itself as additional information or encode information from which the transform information can be derived as additional information. information from which the offset value can be derived and information from which the scale value can be derived may be indicated independently or indicated by common information.</p><p id="p-0563" num="0548">For example, in the example described above, the offset value and the scale value are defined in advance, such as offset=2{circle around (&#x2003;)}(N&#x2212;1) and scale=2{circle around (&#x2003;)}(N&#x2212;1)&#x2212;1. In this case, encoder <b>10620</b> stores the value of N (which is an integer equal to or greater than 1) in the additional information and encodes the resulting additional information, or in other words, encodes the additional information indicating the value of N as the transform information.</p><p id="p-0564" num="0549">When the encoder handles the 8-bit unsigned integer format, N may be defined as the number of bits of the unsigned integer format, and N=8 may be set.</p><p id="p-0565" num="0550">Alternatively, N may be defined in advance as indicating the number of bits of the unsigned integer format. In that case, when N is stored as information indicating that N indicates the number of bits of the unsigned integer format in an encoded stream (bitstream), the information indicating that N indicates the number of bits of the unsigned integer format need not be included in the additional information.</p><p id="p-0566" num="0551">Transformer <b>10610</b> may determine each of offset and scale (the offset value and the scale value) based on a value, a characteristic or the like indicated by the attribute information forming the three-dimensional point cloud.</p><p id="p-0567" num="0552">Note that, after scaling the attribute information, scaler <b>10611</b> may round the value of the scaled attribute information through processing, such as round-off, truncation, or round-up.</p><p id="p-0568" num="0553">When the value indicated by the attribute information is a positive integer value or other value that need not be transformed, transformer <b>10610</b> need not transform the attribute information. In that case, transformer <b>10610</b> need not output the scale value and the offset value, or transformer <b>10610</b> may output, as the transform information, information indicating that no transform occurred. In that case, for example, encode <b>10620</b> encodes the attribute information that has not been transformed by transformer <b>10610</b>.</p><p id="p-0569" num="0554"><figref idref="DRAWINGS">FIG. <b>65</b></figref> is a block diagram illustrating a configuration of a three-dimensional data decoding device according to this embodiment. Note that, in <figref idref="DRAWINGS">FIG. <b>65</b></figref>, illustration of a decoder that decodes encoded geometry information, which is included in the three-dimensional data decoding device, is omitted.</p><p id="p-0570" num="0555">Three-dimensional data decoding device <b>10680</b> includes decoder <b>10640</b> and inverse transformer <b>10650</b>.</p><p id="p-0571" num="0556">Decoder <b>10640</b> receives attribute information encoded (encoded. attribute information) and additional information encoded (encoded additional information), and decodes the encoded attribute information and the encoded additional information. Decoder <b>10640</b> has attribute information decoder <b>10641</b> and additional information decoder <b>10642</b>.</p><p id="p-0572" num="0557">Attribute information decoder <b>10641</b> decodes the encoded attribute information to produce decoded attribute information. Additional information decoder <b>10642</b> decodes the encoded additional information to extract transform information or the like that indicates an offset value or a scale value.</p><p id="p-0573" num="0558">Inverse transformer <b>10650</b> executes an inverse transform process on the decoded attribute information based on the transform information. The inverse transform process is at least one of inverse offset (inverse offset process) and inverse scaling (inverse scaling process) described later. Inverse transformer <b>10650</b> has inverse offset unit <b>10651</b> and inverse scaler <b>10652</b>.</p><p id="p-0574" num="0559">Inverse offset unit <b>10651</b> executes an inverse offset, which is an example of the inverse transform process, on the decoded attribute information using the offset value extracted from the transform information. That is, inverse offset unit <b>10651</b> executes, on the decoded attribute information, a transform that is inverse to the transform executed on the attribute information by transformer <b>10610</b> (more specifically, offset unit <b>10612</b>). For example, when transformer <b>10610</b> has added an offset value to the value indicated by the attribute information, inverse offset unit <b>10651</b> subtracts the offset value from the value indicated by the decoded attribute information.</p><p id="p-0575" num="0560">Inverse scaler <b>10652</b> performs an inverse scaling, which is another example of the transform process, on the inverse-offset decoded attribute information using the scale value extracted from the additional information. That is, inverse scaler <b>10652</b> executes, on the decoded attribute information, a transform that is inverse to the transform executed on the attribute information by transformer <b>10610</b> (more specifically, scaler <b>10611</b>). For example, when transformer <b>10610</b> has multiplied the value indicated by the attribute information by a scale value, inverse scaler <b>10652</b> divides the value indicated by the decoded attribute information by the scale value.</p><p id="p-0576" num="0561">For example, provided that the offset value and the scale value extracted from the additional information are offset and scale, respectively, the inverse-offset attribute information is derived as offset attribute=decoded_value&#x2212;offset, and the inverse-scaled attribute information is derived as scaled attribute=offset_attribute/scale.</p><p id="p-0577" num="0562">Note that in the scaling and the inverse scaling, the processing amount can be reduced by expressing the scale value as a power of 2 or the like and thereby using a shift operation (bit shift) rather than the multiplication and/or division. That is, the scaling and the inverse scaling are processes in which at least one of the multiplication and division and the shift operation is performed on the value indicated by the attribute information.</p><p id="p-0578" num="0563">With the configuration described above, inverse transformer <b>10650</b> of three-dimensional data decoding device <b>10630</b> can reproduce the attribute information yet to be transformed by transformer <b>10610</b> of three-dimensional data encoding device <b>10600</b> by executing the inverse transform process based on the transform information included in the encoded data.</p><p id="p-0579" num="0564">Note that three-dimensional data decoding device <b>10630</b> does not necessarily execute the inverse transform process, and may choose whether to execute the inverse transform process depending on the application or use case.</p><p id="p-0580" num="0565">Although transformer <b>10610</b> has been described as being configured to have offset unit <b>10612</b> located after (in the subsequent stage to) scaler <b>10611</b>, and inverse transformer <b>10650</b> has been described as being configured to have inverse scaler <b>10652</b> located after inverse offset unit <b>10651</b>, the present disclosure is not limited to this. For example, transformer <b>10610</b> may be configured to have scaler <b>10611</b> located after offset unit <b>10612</b>, and inverse transformer <b>10650</b> may be configured to have inverse offset unit <b>10651</b> located after inverse scaler <b>10652</b>.</p><p id="p-0581" num="0566">Alternatively, three-dimensional data encoding device <b>10600</b> may choose which configuration is to be used, that is, the order in which the scaling and the offset are performed on the attribute information, based on the type (attribute_type) of the attribute information, store information indicating which configuration is used, that is, information (order information) indicating the order in which the scaling and the offset are performed, in the additional information as a flag or the like, and transmit the resulting additional information to three-dimensional data decoding device <b>10630</b>. Three-dimensional data decoding device <b>10630</b> may choose, based on the order information, the order in which the inverse scaling and the inverse offset are performed, and execute the inverse transform process on the decoded attribute information in the chosen order,</p><p id="p-0582" num="0567"><figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram illustrating a first example of a syntax of a sequence parameter set (SPS) according to this embodiment.</p><p id="p-0583" num="0568">In this embodiment, SPS indicates an identifier of SPS (sps_idx) and additional information concerning the entire sequence (common_information<b>0</b>). For example, for each attribute included in the bitstream, SPS indicates additional information concerning attribute information, such as an identifier of the attribute information (attribute_type), the number of dimensions of the attribute information (num_dimension), and an identifier for differentiation between instances of the same attribute type (instance_id), and other additional information (attribute_info) concerning the attribute information, for example.</p><p id="p-0584" num="0569">Three-dimensional point, cloud data may have no attribute information corresponding to geometry information or have one or more items of attribute information corresponding to geometry information. For example, when three-dimensional data encoding device <b>10600</b> has a plurality of items of attribute information corresponding to one item of geometry information, three-dimensional data encoding device <b>10600</b> generates transform information corresponding to each item of attribute information, and stores the generated transform information in the additional information (or in other words, generates additional information including the transform information). transform_flag is information (flag) that indicates whether additional information for each item of attribute information includes transform information. For example, when including transform information in additional information, three-dimensional data encoding device <b>10600</b> sets transform_flag =1, and sets transform information (offset value and/or scale value). For example, when not including transform information, three-dimensional data encoding device <b>10600</b> sets transform_flag=0.</p><p id="p-0585" num="0570">Note that the number of dimensions of attribute information is one or greater, and when the number of dimensions is two or greater, common transform information may be used for all dimensions. Of course, even when the number of dimensions of attribute information is two or greater, different transform information may be used for each dimension.</p><p id="p-0586" num="0571">For example, when the attribute information is formed by three-dimensional color information and a one-dimension reflectance, common transform information may be used for red (R), green (G), and blue (B) of the color information, and different transform information than that for the color information may be used for the reflectance.</p><p id="p-0587" num="0572">Alternatively, common transform information may be used for a plurality of items of particular attribute information, and the transform information may be stored in additional information common to the plurality of items of particular attribute information.. Alternatively, for example, common transform information may be used for a plurality of instances of the same attribute type (attribute_type), and the transform information may be indicated on a basis of the type of attribute information.</p><p id="p-0588" num="0573">Alternatively, based on the type of attribute, it may be prescribed in advance that no transform information is used and indicated in additional information for a particular attribute type.</p><p id="p-0589" num="0574"><figref idref="DRAWINGS">FIG. <b>67</b></figref> is a diagram illustrating an example configuration of a bitstream according to this embodiment.</p><p id="p-0590" num="0575">The transform information is stored in SPS, for example.</p><p id="p-0591" num="0576">Note that the transform information need not be stored in SPS, and may be stored in a parameter set concerning encoding of the attribute information (attribute parameter set/APS) or other additional information, such as a slice header.</p><p id="p-0592" num="0577">Alternatively, the transform information may be stored in additional information, such as supplemental enhancement information (SK), for example,</p><p id="p-0593" num="0578">instance_id indicates an identifier of the same attribute type. For example, for Color<b>1</b>, attribute_type=color, and instance_id=0. For example, for Color<b>2</b>, attribute_type=color, and instance_id=1.</p><p id="p-0594" num="0579">Note that when the attribute information is color information, no transform information is generated.</p><p id="p-0595" num="0580">When the attribute information is information indicating a normal vector, for example, transform information is generated and included in the bitstream along with SPS, APS or the like.</p><p id="p-0596" num="0581">When Attribute<b>0</b> included in the bitstrearn is color information (Color), which is an example of the attribute information, for example, the flag information (transform_flag) indicating whether transform information is included in the bitstream is set to be 0 (transform_flag=0), thereby indicating that no transform process has been performed on Attribute&#xae;.</p><p id="p-0597" num="0582">On the other hand, when Attribute<b>1</b> included in the bitstream is normal vector information (Normal_Yector), which is another example of the attribute information, for example, transform_flag=1 is set, thereby indicating that a transform process has been performed on Attribute <b>1</b>. In this case, for example, the bitstream includes information indicating the value used for offset (offset value) and information indicating the value used for scaling (scale value), such as offset=A and scale=B.</p><p id="p-0598" num="0583">Note that transform_flag may be replaced with transform_information_type, and based on transform/information_type, combinations indicating the offset value and the scale value or the manners and/or formats indicating the offset value and/or scale value may be changed. In this way, information indicating whether a transform process has been performed (transform identification information), such as transform flag information, such as transform_flag, or transform type information, such as transforin_information_type, i.s included in the bitstream.</p><p id="p-0599" num="0584">FIG.. <b>68</b> is a diagram illustrating a second example of the syntax of SPS according to this embodiment. <figref idref="DRAWINGS">FIG. <b>69</b></figref> is a diagram illustrating a first example of a syntax of the transform information according to this embodiment.</p><p id="p-0600" num="0585">For example, as illustrated i.n <figref idref="DRAWINGS">FIG. <b>69</b></figref>, the manner of indicating the scale value and the offset value may be able to be chosen from among a manner of indicating the values themselves, a manner of indicating the values as a multiplier of 2 (a value calculated according to y=log<b>2</b>(x)), and a predetermined manner determined in advance, for example. For example, a flag of which syntax is to be used may be indicated, and the syntax may be switched based on the flag.</p><p id="p-0601" num="0586">For example, when transform_type=2, the three-dimensional data encoding device obtains offset_log<b>2</b>, and calculates the offset value and the scale value by calculating offset=2{circle around (&#x2003;)}(offset Jog<b>2</b>&#x2212;Y and scale=<b>2</b>{circle around (&#x2003;)}(scale_log<b>2</b>&#x2212;Z).</p><p id="p-0602" num="0587">Note that X, Y, and Z are arbitrary integers. X, Y, and Z may be values determined in advance, or information indicating these values may be included in the bitstream and transmitted from three-dimensional data encoding device <b>10600</b> to three-dimensional data decoding device <b>10630</b>.</p><p id="p-0603" num="0588">In the above calculation, instead of offset_log<b>2</b> and scale_log<b>2</b>, these values minus 1 (such as offset_log<b>2</b>_minus<b>1</b> and scale_log<b>2</b>_minus_<b>1</b>) may be stored in the additional information.</p><p id="p-0604" num="0589">In this way, the number of bits can be reduced.</p><p id="p-0605" num="0590"><figref idref="DRAWINGS">FIG. <b>70</b></figref> is a diagram illustrating a second example of the sytax of the transform information according to this embodiment.</p><p id="p-0606" num="0591">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, based on the type of the attribute information (attribute_type), the syntax is switched between indicating which of the offset value and the scale value is to be indicated, indicating both the values, and not indicating both the values, for example.</p><p id="p-0607" num="0592">Note that when both offset and scaling are to be executed, order information (transform_order) indicating the order of offset unit <b>10612</b> and scaler <b>10611</b> of transformer <b>10610</b> of three-dimensional data encoding device <b>10600</b> may be included in the bitstream as additional information. This allows three-dimensional data decoding device <b>10630</b> to extract a predetermined syntax based on the additional information, such as transform_type, attribute_type, and transform_order, and applies the syntax to inverse transformer <b>10650</b>.</p><p id="p-0608" num="0593"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data encoding device according to this embodiment.</p><p id="p-0609" num="0594">Three-dimensional data encoding device <b>10600</b> first determines whether to transform input attribute information (S<b>10601</b>).</p><p id="p-0610" num="0595">When it is determined to transform input attribute information (Yes in S<b>10601</b>), three-dimensional data encoding device <b>10600</b> executes a transform process on the input attribute information (S<b>10602</b>). For example, three-dimensional data encoding device <b>10600</b> executes offset and scaling on the input attribute information.</p><p id="p-0611" num="0596">Three-dimensional data encoding device <b>10600</b> then stores transform information in additional information, and sets transform_flag=1 (S<b>10603</b>).</p><p id="p-0612" num="0597">For example, information indicating an offset value used for offset and a scale value used for scaling is included in the additional information as the transform information.</p><p id="p-0613" num="0598">Three-dimensional data encoding device <b>10600</b> then encodes the additional information including the transform information and the attribute information on which the transform process is executed (S<b>10604</b>). After step S<b>10604</b>, for example, three-dimensional data encoding device <b>1</b>.<b>0600</b> generates a bitstream including these items of encoded information as encoded data and transmits the bitstream to three-dimensional data decoding device <b>10630</b>.</p><p id="p-0614" num="0599">On the other hand, when it is determined not to transform input attribute information (No in S<b>10601</b>), since no transform process is executed on the input attribute information, three-dimensional data encoding device <b>10600</b> stores no transform information in additional information, and sets transform_flag=<b>0</b> (S<b>10605</b>).</p><p id="p-0615" num="0600">Three-dimensional data encoding device <b>10600</b> then encodes the additional information including no transform information and the attribute information on which no transform process has been executed, that is, the input attribute information (S<b>10606</b>). After step S<b>10606</b>, for example, three-dimensional data encoding device <b>10600</b> generates a bitstream including these items of information as encoded data and transmits the bitstream to three-dimensional data decoding device <b>10630</b>.</p><p id="p-0616" num="0601"><figref idref="DRAWINGS">FIG. <b>72</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data decoding device according to this embodiment.</p><p id="p-0617" num="0602">Three-dimensional data decoding device <b>10630</b> first receives the bitstream transmitted by three-dimensional data encoding device <b>10600</b>, for example, decodes the encoded data included in the received bitstream, and analyzes the additional information included in the decoded encoded data (S<b>10611</b>).</p><p id="p-0618" num="0603">Three-dimensional data decoding device <b>10630</b> then decodes the attribute information of the encoded data included in the bitstream (S<b>10612</b>).</p><p id="p-0619" num="0604">Three-dimensional data decoding device <b>10630</b> then determines whether transform_flag included in the bitstream is set to be 1 (S<b>1061</b>.<b>3</b>). That is, by determining whether transform_flag <b>1</b>, three-dimensional data decoding device <b>10630</b> determines whether a transform process has been executed on the attribute information included in the bitstream.</p><p id="p-0620" num="0605">When it is determined that transform_flag included in the bitstream is set to be 1 (Yes in S<b>10613</b>), three-dimensional data decoding device <b>10630</b> extracts transform information from the additional information, and executes an inverse transform process on the attribute information based on the extracted transform information (S<b>10614</b>).</p><p id="p-0621" num="0606">On the other hand, when it is determined that transform_flag included in the bitstream is not set to be <b>1</b> (No in S<b>1061</b>.<b>3</b>), that is, when transform_flag =0, three-dimensional data decoding device <b>10630</b> executes no inverse transform process and ends the process.</p><p id="p-0622" num="0607">Although the data format of the attribute information input to encoder <b>10620</b> is transformed, and the transform information is included in the bitstream in the example shown above, the present disclosure is not limited to this.</p><p id="p-0623" num="0608"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a block diagram for describing another example of the process of the three-dimensional data encoding device according to this embodiment. <figref idref="DRAWINGS">FIG. <b>74</b></figref> is a block diagram for describing another example of the process of the three-dimensional data decoding device according to this embodiment.</p><p id="p-0624" num="0609">For example, the three-dimensional data encoding device may store format information in the additional information, the format information indicating the data format of the attribute information input to transformer <b>10660</b> and the format of the attribute information to be encoded after transform, and encoder <b>10670</b> may encode the additional information including the format information.</p><p id="p-0625" num="0610">Three-dimensional data decoding device <b>10630</b> can reproduce the attribute information yet to be subjected to the transform process by transformer <b>10660</b> of the three-dimensional data encoding device by inverse transformer <b>10690</b> executing an inverse transform on the decoded attribute information based on the format information extracted by decoder <b>10680</b>.</p><p id="p-0626" num="0611">The format information (data format information) is information indicating the data format, the number of bits, and whether signed or unsigned, for example. For example, the format information is information, such as int<b>8</b>, unit<b>16</b>, or float<b>16</b>. The digit, such as <b>8</b> of int<b>8</b>, indicates the number of bits.</p><p id="p-0627" num="0612">Alternatively, for example, the format information may indicate the file format (such as ply file, pcd file, Las file, txt file, or csv file) of the point cloud. data yet to be subjected to the transform process, or may indicate the file format of the point cloud data subjected to the transform process.</p><p id="p-0628" num="0613">Although the offset and scaling of the attribute information have been described above, the methods described in this embodiment can also be applied to the geometry information.</p><p id="p-0629" num="0614">The transform process, such as offset and scaling, may be executed before the geometry information is encoded, and the inverse transform process may be executed after the geometry information is decoded. In that case, the transform information or the format information may be stored in the additional information, such as SPS.</p><p id="p-0630" num="0615">The three-dimensional data encoding device may have a transformer that executes a transform on at least one or both of the geometry information and the attribute information. Similarly, the three-dimensional data decoding device may have an inverse transformer that executes an inverse transform on any one or both (that is, at least one) of the geometry information and the attribute information. In that case, any one or both (that is, at least one) of the transform information on the geometry information and the transform information on the attribute information may be included in the additional information.</p><p id="p-0631" num="0616">Although offset, scaling, and quantization have been described above as a manner of transforming input point cloud data, the present disclosure is not limited to these manners, and other transform processes can also be used. For example, predetermined linear or nonlinear transform means, such as a transform or an approximation using a predetermined function, may be used in the transform process.</p><p id="p-0632" num="0617">The additional information can include not only information indicating the format of the attribute information but also information indicating the order of data of the point cloud, information indicating the order of sorting, or information on timestamps,</p><p id="p-0633" num="0618">As described above, the three-dimensional data encoding device according to the present embodiment performs the process shown in <figref idref="DRAWINGS">FIG. <b>75</b></figref>.</p><p id="p-0634" num="0619"><figref idref="DRAWINGS">FIG. <b>75</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data encoding device according to this embodiment.</p><p id="p-0635" num="0620">First, the three-dimensional data encoding device obtains an attribute information item of a three-dimensional point (S<b>10621</b>).</p><p id="p-0636" num="0621">Next, the three-dimensional data encoding device executes an encoding process that executes a transform process on a numerical value indicated by the attribute information item and encodes the attribute information item or that encodes the attribute information item without executing the transform process, the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation (S<b>10622</b>). For example, the three-dimensional data encoding device determines whether a format of the attribute information item is a predetermined format, and transforms the attribute information item into a positive value using a predetermined offset value or a predetermined scale value, when the format is the predetermined format.</p><p id="p-0637" num="0622">Then, the three-dimensional data encoding device generates a bitstrea.m including the attribute information encoded and a transform identification information item indicating whether the transform process has been executed (S<b>10623</b>). Transform identification information is information such as above-described transform_flag or transform_information_type. It should be noted that the three-dimensional data encoding device may encode transform identification information and generate a bitstream including the encoded attribute information and the encoded transform identification information.</p><p id="p-0638" num="0623">Some encoders (e.g., encoder <b>10620</b> or <b>10670</b>) for encoding the attribute information may be unable to process a decimal point and/or a negative value. In view of this, for example, the value indicated by the attribute information can be transformed into a positive value by transforming the attribute information through at least one of scaling and offset. Therefore, according to the three-dimensional data encoding method according to the present disclosure, even if a decimal point and/or a negative value cannot be encoded, for example, the attribute information can be appropriately transformed and encoded, and the three-dimensional data decoding device can be notified that the attribute information has been transformed.</p><p id="p-0639" num="0624">Moreover, for example, when the transform process is executed in step S<b>10622</b>, the bitstream further including a transform information item is generated in the generating (S<b>10628</b>), the transform information item including at least one of a scale information item or an offset information item, the scale information item indicating a value (a scale value) used in the scaling, the offset information item indicating a value (an offset value) used in the offset.</p><p id="p-0640" num="0625">Therefore, the scale value and the offset value need not be determined in advance, the attribute information can be transformed using values appropriate to make the attribute information a positive value, for example, and the three-dimensional data decoding device can be notified of the values used in the transform process.</p><p id="p-0641" num="0626">Furthermore, for example, a plurality of attribute information items each of which is the attribute information item are obtained in the obtaining (S<b>10621</b>), in the encoding process (S<b>10622</b>), the transform process is executed on each of the plurality of attribute information items and the attribute information item is encoded, or each of the plurality of attribute information items is encoded without executing the transform process, and the bitstream including the plurality of attribute information items encoded and the transform identification information item for each of the plurality of attribute information items is generated in the generating.</p><p id="p-0642" num="0627">Depending on the three-dimensional data (data indicating a three-dimensional point), one three-dimensional point may have a plurality of items of attribute information, or a plurality of three-dimensional points having one item of attribute information may be decoded. Even in such a case, each item of the plurality of attribute information can be appropriately transformed and encoded, and the three-dimensional data decoding device can be notified that the attribute information has been transformed.</p><p id="p-0643" num="0628">Moreover, for example, when the transform process is executed and the attribute information item is encoded in the encoding process, the bitstrea.m further including an order information item is generated in the generating, the transform process performing both the scaling and the offset, the order information item indicating an order in which the scaling and the offset are performed.</p><p id="p-0644" num="0629">Therefore, the order of tile scaling and the offset need not be determined in advance, the attribute information can be transformed in an order appropriate to make the attribute information a positive value, for example, and the three-dimensional data decoding device can be notified of the order.</p><p id="p-0645" num="0630">Furthermore, for example, the transform identification information item indicates whether the scaling has been performed and whether the offset has been performed,</p><p id="p-0646" num="0631">Therefore, the way of using at least one of scaling or offset need not be determined in advance, the attribute information can be transformed using a transform process appropriate to make the attribute information a positive value, for example, and the three-dimensional data decoding device can be notified of the values used in the transform process.</p><p id="p-0647" num="0632">Moreover, for example, the transform identification information item is stored in an additional information item common to sequences in the generating.</p><p id="p-0648" num="0633">Furthermore, for example, the three-dimensional data encoding device includes a processor and memory. Using the memory, the processor performs the above-described process. A control program for performing the process may be stored in the memory.</p><p id="p-0649" num="0634">As described above, the three-dimensional data decoding device according to the present embodiment performs the process shown in <figref idref="DRAWINGS">FIG. <b>76</b></figref>.</p><p id="p-0650" num="0635"><figref idref="DRAWINGS">FIG. <b>76</b></figref> is a flowchart illustrating a process procedure of the three-dimensional data decoding device according to this embodiment</p><p id="p-0651" num="0636">First, the three-dimensional data decoding device obtains a bitstream including an attribute information item of a three-dimensional point encoded and a transform identification information item encoded, the transform identification information item indicating whether a transform process has been executed on the attribute information item the transform process performing at least one of scaling or offset, the scaling performing at least one of a multiplication and division operation or a shift operation, the offset performing an addition and subtraction operation (S<b>10631</b>).</p><p id="p-0652" num="0637">Next, the three-dimensional data decoding device decodes the attribute information item encoded (S<b>10632</b>).</p><p id="p-0653" num="0638">Then, the three-dimensional data decoding device decodes the transform identification information item encoded (S<b>10633</b>). It should be noted that the three-dimensional data decoding device may obtain a bitstream including attribute information of a three-dimensional point encoded and transform identification information not encoded. In this case, the three-dimensional data decoding device may obtain the transform identification information from the bitstream, and decode the attribute information encoded.</p><p id="p-0654" num="0639">Some decoders (e.g., decoder <b>10640</b> or <b>10680</b>) for decoding the encoded attribute information may be unable to process a decimal point and/or a negative value. If the attribute information is attribute information transformed through at least one of scaling and offset and encoded, for example, such a decoder can decode the encoded attribute information. In addition, the transform identification information shows whether the value indicated by the attribute information has been transformed, the decoded attribute information can be appropriately restored to the original value.</p><p id="p-0655" num="0640">Moreover, for example, the three-dimensional data decoding device according to the present disclosure further executes an inverse transform process on a numerical value indicated by the attribute information item decoded, when the transform identification information item indicates that the transform process has been executed on the attribute information item, the inverse transform process performing at least one of inverse scaling or inverse offset, the inverse scaling performing at least one of a multiplication and division operation or a shift operation, the inverse offset performing an addition and subtraction operation.</p><p id="p-0656" num="0641">Therefore, even if the value indicated by the attribute information has been transformed into a positive value and encoded, a transform process inverse to the transform process can be executed based on the transform identification information. Therefore, according to the three-dimensional data decoding method according to the present disclosure, encoded attribute information can be appropriately decoded, and the decoded attribute information can be appropriately transformed (inverse-transformed) to appropriately restore the attribute information to the original value.</p><p id="p-0657" num="0642">Furthermore, for example, the bitstream further includes a transform information item including at least one of a scale information item or an offset information, the scale information item indicating a value used in the scaling, the offset information item indicating a value used in the offset, and the inverse transform process is executed based on at least one of the scale information item or the offset information item.</p><p id="p-0658" num="0643">Therefore, the scale value and the offset value need not be determined in advance, and the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0659" num="0644">Moreover, for example, the bitstream includes a plurality of attribute information items encoded each of which is the attribute information item encoded, each of the plurality of attribute information items encoded is decoded in the decoding of the attribute information item (S<b>10632</b>), the transform identification information item indicates whether the transform process has been executed on each of the plurality of attribute information items, and the inverse transform process is executed on, among the plurality of attribute information items decoded, an attribute information item for which the transform identification information item indicates that the transform process has been executed.</p><p id="p-0660" num="0645">Depending on the three-dimensional data, one three-dimensional point may have a plurality of items of attribute information, or a plurality of three-dimensional points having one item of attribute information may be decoded. Even in such a case, for each item of the plurality of attribute information, the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0661" num="0646">Furthermore, for example, the bitstream further includes an order information item indicating an order in which the scaling and the offset have been performed, and in the inverse transform process, the inverse scaling and the inverse offset are performed in the order based on the order information item.</p><p id="p-0662" num="0647">Therefore, the order of the scaling and the offset need not be determined in advance, and the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0663" num="0648">Moreover, for example, the transform identification information item indicates whether the scaling has been performed and whether the offset has been performed. In other words, for example, the transform identification information item indicates whether each of the scaling and the offset has been performed.</p><p id="p-0664" num="0649">Therefore, the way of using at least one of the scaling or the offset need not be determined in advance, and the decoded attribute information can be appropriately restored to the original value through the inverse transform process.</p><p id="p-0665" num="0650">Furthermore, for example, in the bitstream, the transform identification information item is stored in an additional information item common to sequences.</p><p id="p-0666" num="0651">Furthermore, for example, the three-dimensional data decoding device includes a processor and memory. Using the memory, the processor performs the above-described process. A control program for performing the process may be stored in the memory.</p><heading id="h-0013" level="1">Embodiment 6</heading><p id="p-0667" num="0652">The following describes the structure of three-dimensional data creation device <b>810</b> according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>77</b></figref> is a block diagram of an exemplary structure of three-dimensional data creation device <b>810</b> according to the present embodiment. Such three-dimensional data creation device <b>810</b> is equipped, for example, in a vehicle. Three-dimensional data creation device <b>810</b> transmits and receives three-dimensional data to and from an external cloud-based traffic monitoring system, a preceding vehicle, or a following vehicle, and creates and stores three-dimensional data.</p><p id="p-0668" num="0653">Three-dimensional data creation device <b>810</b> includes data receiver <b>811</b>, communication unit <b>812</b>, reception controller <b>813</b>, format converter <b>814</b>, a plurality of sensors <b>815</b>, three-dimensional data creator <b>816</b>, three-dimensional data synthesizer <b>817</b>, three-dimensional data storage <b>818</b>, communication unit <b>819</b>, transmission controller <b>820</b>, format converter <b>821</b>, and data transmitter <b>822</b>.</p><p id="p-0669" num="0654">Data receiver <b>811</b> receives three-dimensional data <b>831</b> from a cloud-based traffic monitoring system or a preceding vehicle. Three-dimensional data <b>831</b> includes, for example, information on a region undetectable by sensors <b>815</b> of the own vehicle, such as a point cloud, visible light video, depth information, sensor position information, and speed information.</p><p id="p-0670" num="0655">Communication unit <b>812</b> communicates with the cloud-based traffic monitoring system or the preceding vehicle to transmit a data transmission request, etc. to the cloud-based traffic monitoring system or the preceding vehicle.</p><p id="p-0671" num="0656">Reception controller <b>813</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>812</b> to establish communication with the communications partner.</p><p id="p-0672" num="0657">Format converter <b>814</b> applies format conversion, etc. on three-dimensional data <b>831</b> received by data receiver <b>811</b> to generate three-dimensional data <b>832</b>. Format converter <b>814</b> also decompresses or decodes three-dimensional data <b>831</b> when three-dimensional data <b>831</b> is compressed or encoded.</p><p id="p-0673" num="0658">A plurality of sensors <b>815</b> are a group of sensors, such as visible light cameras and infrared cameras, that obtain information on the outside of the vehicle and generate sensor information <b>833</b>. Sensor information <b>833</b> is, for example, three-dimensional data such as a point cloud (point group data), when sensors <b>815</b> are laser sensors such as LiDARs. Note that a single sensor may serve as a plurality of sensors <b>815</b>.</p><p id="p-0674" num="0659">Three-dimensional data creator <b>816</b> generates three-dimensional data <b>834</b> from sensor information <b>833</b>. Three-dimensional data <b>834</b> includes, for example, information such as a point cloud, visible light video, depth information, sensor position information, and speed information.</p><p id="p-0675" num="0660">Three-dimensional data synthesizer <b>817</b> synthesizes three-dimensional data <b>834</b> created on the basis of sensor information <b>833</b> of the own vehicle with three-dimensional data <b>832</b> created by the cloud-based traffic monitoring system or the preceding vehicle, etc., thereby forming three-dimensional data <b>835</b> of a space that includes the space ahead of the preceding vehicle undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0676" num="0661">Three-dimensional data storage <b>818</b> stores generated three-dimensional data <b>835</b>, etc.</p><p id="p-0677" num="0662">Communication unit <b>819</b> communicates with the cloud-based traffic monitoring system or the following vehicle to transmit a data transmission request, etc. to the cloud-based traffic monitoring system or the following vehicle.</p><p id="p-0678" num="0663">Transmission controller <b>820</b> exchanges information such as information on supported formats with a communications partner via communication unit <b>819</b> to establish communication with the communications partner. Transmission controller <b>820</b> also determines a transmission region, which is a space of the three-dimensional data to be transmitted, on the basis of three-dimensional data formation information on three-dimensional data <b>832</b> generated by three-dimensional data synthesizer <b>817</b> and the data transmission request from the communications partner.</p><p id="p-0679" num="0664">More specifically, transmission controller <b>820</b> determines transmission region that includes the space ahead of the own vehicle undetectable by a sensor of the following vehicle, in response to the data transmission request from the cloud-based traffic monitoring system or the following vehicle. Transmission controller <b>820</b> judges, for example, whether a space is transmittable or whether the already transmitted space includes an update, on the basis of the three-dimensional data formation information to determine a transmission region. For example, transmission controller <b>820</b> determines, as a transmission region, a region that is: a region specified by the data transmission request; and a region, corresponding three-dimensional data <b>835</b> of which is present. Transmission controller <b>820</b> then notifies format converter <b>821</b> of the format supported by the communications partner and the transmission region.</p><p id="p-0680" num="0665">Of three-dimensional data <b>835</b> stored in three-dimensional data storage <b>818</b>, format converter <b>821</b> converts three-dimensional data <b>836</b> of the transmission region into the format supported by the receiver end to generate three-dimensional data <b>837</b>. Note that, format converter <b>821</b> may compress or encode three-dimensional data <b>837</b> to reduce the data amount.</p><p id="p-0681" num="0666">Data transmitter <b>822</b> transmits three-dimensional data <b>837</b> to the cloud-based traffic monitoring system or the following vehicle. Such three-dimensional data <b>837</b> includes, for example, information on a blind spot, which is a region hidden from view of the following vehicle, such as a point cloud ahead of the own vehicle, visible :light video, depth information, and sensor position information.</p><p id="p-0682" num="0667">Note that an example has been described in which format converter <b>81</b>.<b>4</b> and format converter <b>821</b> perform format conversion, etc., but format conversion may not be performed.</p><p id="p-0683" num="0668">With the above structure, three-dimensional data creation device <b>810</b> obtains, from an external device, three-dimensional data <b>831</b> of a region undetectable by sensors <b>815</b> of the own vehicle, and synthesizes three-dimensional data <b>831</b> with three-dimensional data <b>834</b> that is based on sensor information <b>833</b> detected by sensors <b>815</b> of the own vehicle, thereby generating three-dimensional data <b>835</b>. Three-dimensional data creation device <b>810</b> is thus capable of generating three-dimensional data of a range undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0684" num="0669">Three-dimensional data creation device <b>810</b> is also capable of transmitting, to the cloud-based traffic monitoring system or the following vehicle, etc., three-dimensional data of a space that includes the space ahead of the own vehicle undetectable by a sensor of the following vehicle, in response to the data transmission request from the cloud-based traffic monitoring system or the following vehicle.</p><p id="p-0685" num="0670">The following describes the steps performed by three-dimensional data creation device <b>810</b> of transmitting three-dimensional data to a following vehicle.</p><p id="p-0686" num="0671"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a flowchart showing exemplary steps performed by three-dimensional data creation device <b>810</b> of transmitting three-dimensional data to a cloud-based. traffic monitoring system or a following vehicle.</p><p id="p-0687" num="0672">First, three-dimensional data creation device <b>810</b> generates and updates three-dimensional data <b>835</b> of a space that includes space on the road ahead of the own vehicle (S<b>801</b>). More specifically, three-dimensional data creation device <b>810</b> synthesizes three-dimensional data <b>834</b> created on the basis of sensor information <b>833</b> of the own vehicle with three-dimensional data <b>831</b> created by the cloud-based traffic monitoring system or the preceding vehicle, etc., for example, thereby forming three-dimensional data <b>835</b> of a space that also includes the space ahead of the preceding vehicle undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0688" num="0673">Three-dimensional data creation device <b>810</b> then judges whether any change has occurred in three-dimensional data <b>835</b> of the space included in the space already transmitted (S<b>802</b>).</p><p id="p-0689" num="0674">When a change has occurred in three-dimensional data <b>835</b> of the space included in the space already transmitted due to, for example, a vehicle or a person entering such space from outside (Yes in S<b>802</b>), three-dimensional data creation device <b>810</b> transmits, to the cloud-based traffic monitoring system or the following vehicle, the three-dimensional data that includes three-dimensional data <b>835</b> of the space in which the change has occurred (S<b>803</b>).</p><p id="p-0690" num="0675">Three-dimensional data creation device <b>810</b> may transmit three-dimensional data in which a change has occurred, at the same tuningof transmitting three-dimensional data that is transmitted at a predetermined time interval, or may transmit three-dimensional data in which a change has occurred soon after the detection of such change. Stated differently, three-dimensional data creation device <b>810</b> may prioritize the transmission of three-dimensional data of the space in which a change has occurred to the transmission of three-dimensional data that is transmitted at a predetermined time interval.</p><p id="p-0691" num="0676">Also, three-dimensional data creation device <b>810</b> may transmit, as three-dimensional data of a space in which a change has occurred, the whole three-dimensional data of the space in which such change has occurred, or may transmit only a difference in the three-dimensional data (e.g., information on three-dimensional points that have appeared or vanished, or information on the displacement of three-dimensional points).</p><p id="p-0692" num="0677">Three-dimensional data creation device <b>81</b>.<b>0</b> may also transmit, to the following vehicle, meta-data on a risk avoidance behavior of the own vehicle such as hard breaking warning, before transmitting three-dimensional data of the space in which a change has occurred. This enables the following vehicle to recognize at an early stage that the preceding vehicle is to perform hard braking, etc., and thus to start performing a risk avoidance behavior at an early stage such as speed reduction.</p><p id="p-0693" num="0678">When no change has occurred in three-dimensional data <b>835</b> of the space included in the space already transmitted (No in S<b>802</b>), or after step S<b>803</b>, three-dimensional data creation device <b>810</b> transmits, to the cloud-based traffic monitoring system or the following vehicle, three-dimensional data of the space included in the space having a predetermined shape and located ahead of the own vehicle by distance L (S<b>804</b>).</p><p id="p-0694" num="0679">The processes of step S<b>801</b> through step S<b>804</b> are repeated, for example at a predetermined time interval.</p><p id="p-0695" num="0680">When three-dimensional data <b>835</b> of the current space to be transmitted includes no difference from the three-dimensional map, three-dimensional data creation device <b>810</b> may not transmit three-dimensional data <b>837</b> of the space.</p><p id="p-0696" num="0681">In the present embodiment, a client device transmits sensor information obtained through a sensor to a server or another client device.</p><p id="p-0697" num="0682">A structure of a system according to the present embodiment will first be described. <figref idref="DRAWINGS">FIG. <b>79</b></figref> is a diagram showing the structure of a transmission/reception system of a three-dimensional map and sensor information according to the present embodiment. This system includes server <b>901</b>, and client devices <b>902</b>A and <b>902</b>B. Note that client devices <b>902</b>A and <b>902</b>B are also referred to as client device <b>902</b> when no particular distinction is made therebetween.</p><p id="p-0698" num="0683">Client device <b>902</b> is, for example, a vehicle-mounted device equipped in a mobile object such as a vehicle. Server <b>901</b> is, for example, a cloud-based traffic monitoring system, and is capable of communicating with the plurality of client devices <b>902</b>.</p><p id="p-0699" num="0684">Server <b>901</b> transmits the three-dimensional map formed by a point cloud to client device <b>902</b>. Note that a structure of the three-dimensional map is not limited to a point cloud, and may also be another structure expressing three-dimensional data such as a mesh structure.</p><p id="p-0700" num="0685">Client device <b>902</b> transmits the sensor information obtained by client device <b>902</b> to server <b>901</b>. The sensor information includes, for example, at least one of information obtained by LiDAR, a visible light image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0701" num="0686">The data to be transmitted and received between server <b>901</b> and client device <b>902</b> may be compressed in order to reduce data volume, and may also be transmitted uncompressed in order to maintain data precision. When compressing the data, it is possible to use a three-dimensional compression method on the point cloud based on, for example, an octree structure. It is possible to use a two-dimensional image compression method on the visible light image, the infrared image, and the depth image. The two-dimensional image compression method is, for example, MPEG-4 AVG or HEW standardized by MPEG.</p><p id="p-0702" num="0687">Server <b>901</b> transmits the three-dimensional map managed by server <b>901</b> to client device <b>902</b> in response to a transmission request for the three-dimensional map from client device <b>902</b>. Note that server <b>901</b> may also transmit the three-dimensional map without waiting for the transmission request for the three-dimensional map from client device <b>902</b>. For example, server <b>901</b> may broadcast the three-dimensional map to at least one client device <b>902</b> located in a predetermined space. Server <b>901</b> may also transmit the three-dimensional map suited to a position of client device <b>902</b> at fixed time intervals to client device <b>902</b> that has received the transmission request once. Server <b>901</b> may also transmit the three-dimensional map managed by server <b>901</b> to client device <b>902</b> every time the three-dimensional map is updated.</p><p id="p-0703" num="0688">Client device <b>902</b> sends the transmission request for the three-dimensional map to server <b>901</b>. For example, when client device <b>902</b> wants to perform the self-location estimation during traveling, client device <b>902</b> transmits the transmission request for the three-dimensional map to server <b>901</b>.</p><p id="p-0704" num="0689">Note that in the following cases, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b>. Client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when the three-dimensional map stored by client device <b>902</b> is old.</p><p id="p-0705" num="0690">For example, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when a fixed period has passed since the three-dimensional map is obtained by client device <b>902</b>.</p><p id="p-0706" num="0691">Client device <b>902</b> may also send the transmission request for the three-dimensional map to server <b>901</b> before a fixed time when client device <b>902</b> exits a space shown in the three-dimensional map stored by client device <b>902</b>. For example, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when client device <b>902</b> is located within a predetermined distance from a boundary of the space shown in the three-dimensional map stored by client device <b>902</b>, When a movement path and a movement speed of client device <b>902</b> are understood, a time when client device <b>902</b> exits the space shown in the three-dimensional map stored by client device <b>902</b> may be predicted based on the movement path and the movement speed of client device <b>902</b>.</p><p id="p-0707" num="0692">Client device <b>902</b> may also send the transmission request for the three-dimensional map to server <b>901</b> when an error during alignment of the three-dimensional data and the three-dimensional map created from the sensor information by client device <b>902</b> is at least at a fixed level.</p><p id="p-0708" num="0693">Client device <b>902</b> transmits the sensor information to server <b>901</b> in response to a transmission request for the sensor information from server <b>901</b>, Note that client device <b>902</b> may transmit the sensor information to server <b>901</b> without waiting for the transmission request for the sensor information from server <b>901</b>. For example, client device <b>902</b> may periodically transmit the sensor information during a fixed period when client device <b>902</b> has received the transmission request for the sensor information from server <b>901</b> once. Client device <b>902</b> may determine that there is a possibility of a change in the three-dimensional map of a surrounding area of client device <b>902</b> having occurred, and transmit this information and the sensor information to server <b>901</b>, when the error during alignment of the three-dimensional data created by client device <b>902</b> based on the sensor information and the three-dimensional map obtained from server <b>901</b> is at least at the fixed level.</p><p id="p-0709" num="0694">Server <b>901</b> sends a transmission request for the sensor information to client device <b>902</b>. For example, server <b>901</b> receives position information, such as GPS information, about client device <b>902</b> from client device <b>902</b>. Server <b>901</b> sends the transmission request for the sensor information to client device <b>902</b> in order to generate a new three-dimensional map, when it is determined that client device <b>902</b> is approaching a space in which the three-dimensional map managed by server <b>901</b> contains little information, based on the position information about client device <b>902</b>. Server <b>901</b> may also send the transmission request for the sensor information, when wanting to (i) update the three-dimensional map, (ii) check road conditions during snowfall, a disaster, or the like, or (iii) check traffic congestion conditions, accident/incident conditions, or the like.</p><p id="p-0710" num="0695">Client device <b>902</b> may set an amount of data of the sensor information to be transmitted to server <b>901</b> in accordance with communication conditions or bandwidth during reception of the transmission request for the sensor information to be received from server <b>901</b>. Setting the amount of data of the sensor information to be transmitted to server <b>901</b> is, for example, increasing/reducing the data itself or appropriately selecting a compression method.</p><p id="p-0711" num="0696"><figref idref="DRAWINGS">FIG. <b>80</b></figref> is a block diagram showing an example structure of client device <b>902</b>. Client device <b>902</b> receives the three-dimensional map formed by a point cloud and the like from server <b>901</b>, and estimates a self-location of client device <b>902</b> using the three-dimensional map created based on the sensor information of client device <b>902</b>. Client device <b>902</b> transmits the obtained sensor information to server <b>901</b>.</p><p id="p-0712" num="0697">Client device <b>902</b> includes data receiver <b>1011</b>, communication unit <b>1012</b>, reception controller <b>1013</b>, format converter <b>1014</b>, sensors <b>1015</b>, three-dimensional data creator <b>1016</b>, three-dimensional image processor <b>1017</b>, three-dimensional data storage <b>1018</b>, format converter <b>1019</b>, communication unit <b>1020</b>, transmission controller <b>1021</b>, and data transmitter <b>1022</b>.</p><p id="p-0713" num="0698">Data receiver <b>1011</b> receives three-dimensional map <b>1031</b> from server <b>901</b>. Three-dimensional map <b>1031</b> is data that includes a point cloud such as a WLD or a SWLD. Three-dimensional map <b>1031</b> may include compressed data or uncompressed data.</p><p id="p-0714" num="0699">Communication unit <b>1012</b> communicates with server <b>901</b> and transmits a data transmission request (e.g., transmission request for three-dimensional map) to server <b>901</b>.</p><p id="p-0715" num="0700">Reception controller <b>1013</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1012</b> to establish communication with the communications partner.</p><p id="p-0716" num="0701">Format converter <b>1014</b> performs a format conversion and the like on three-dimensional map <b>1031</b> received by data receiver <b>1011</b> to generate three-dimensional map <b>1032</b>. Format converter <b>1014</b> also performs a decompression or decoding process when three-dimensional map <b>1031</b> is compressed or encoded. Note that format converter <b>1014</b> does not perform the decompression or decoding process when three-dimensional map <b>1031</b> is uncompressed data.</p><p id="p-0717" num="0702">Sensors <b>1015</b> are a group of sensors, such as LiDARs, visible light cameras, infrared cameras, or depth sensors that obtain information about the outside of a vehicle equipped with client device <b>902</b>, and generate sensor information <b>1033</b>. Sensor information <b>1033</b> is, for example, three-dimensional data such as a point cloud (point group data) when sensors <b>1</b>.<b>015</b> are laser sensors such as LiDARs. Note that a single sensor may serve as sensors <b>1015</b>.</p><p id="p-0718" num="0703">Three-dimensional data creator <b>1016</b> generates three-dimensional data. <b>1034</b> of a surrounding area of the own vehicle based on sensor information <b>1033</b>. For example, three-dimensional data creator <b>1016</b> generates point cloud data with color information on the surrounding area of the own vehicle using information obtained by LiDAR and visible light video obtained by a visible light camera.</p><p id="p-0719" num="0704">Three-dimensional image processor <b>1017</b> performs a self-location estimation process and the like of the own vehicle, using (i) the received three-dimensional map <b>1032</b> such as a point cloud, and (ii) three-dimensional data. <b>1034</b> of the surrounding area of the own vehicle generated using sensor information <b>1033</b>. Note that three-dimensional image processor <b>1017</b> may generate three-dimensional data <b>1035</b> about the surroundings of the own vehicle by merging three-dimensional map <b>1032</b> and three-dimensional data <b>1034</b>, and may perform the self-location estimation process using the created three-dimensional data <b>1035</b>.</p><p id="p-0720" num="0705">Three-dimensional data storage <b>101</b>.<b>8</b> stores three-dimensional map <b>1032</b>, three-dimensional data <b>1034</b>, three-dimensional data <b>1035</b>, and the like.</p><p id="p-0721" num="0706">Format converter <b>1019</b> generates sensor information <b>1037</b> by converting sensor information <b>1033</b> to a format supported by a receiver end. Note that format converter <b>1019</b> may reduce the amount of data by compressing or encoding sensor information <b>1037</b>. Format converter <b>1019</b> may omit this process when format conversion is not necessary. Format converter <b>1019</b> may also control the amount of data to be transmitted in accordance with a specified transmission range.</p><p id="p-0722" num="0707">Communication unit <b>1020</b> communicates with server <b>901</b> and receives a data transmission request (transmission request for sensor information) and the like from server <b>901</b>.</p><p id="p-0723" num="0708">Transmission controller <b>1021</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1020</b> to establish communication with the communications partner.</p><p id="p-0724" num="0709">Data transmitter <b>1022</b> transmits sensor information <b>1037</b> to server <b>901</b>. Sensor information <b>1037</b> includes, for example, information obtained through sensors <b>1015</b>, such as information obtained by LiDAR, a luminance image obtained by a visible light camera, an infrared image obtained by an infrared camera, a depth image obtained by a depth sensor, sensor position information, and sensor speed information.</p><p id="p-0725" num="0710">A structure of server <b>901</b> be described next. <figref idref="DRAWINGS">FIG. <b>81</b></figref> is a block diagram showing an example structure of server <b>901</b>. Server <b>901</b> transmits sensor information from client device <b>902</b> and creates three-dimensional data based on the received sensor information. Server <b>901</b> updates the three-dimensional map managed by server <b>901</b> using the created three-dimensional data. Server <b>901</b> transmits the updated three-dimensional map to client device <b>902</b> in response to a transmission request for the three-dimensional map from client device <b>902</b>.</p><p id="p-0726" num="0711">Server <b>901</b> includes data receiver <b>1111</b>, communication unit <b>1112</b>, reception controller <b>1113</b>, format converter <b>1114</b>, three-dimensional data creator <b>1116</b>, three-dimensional data merger <b>1117</b>, three-dimensional data storage <b>1118</b>, format converter <b>1119</b>, communication unit <b>1120</b>, transmission controller <b>1121</b>, and data transmitter <b>1122</b>.</p><p id="p-0727" num="0712">Data receiver <b>1111</b> receives sensor information <b>1037</b> from client device <b>902</b>. Sensor information <b>1037</b> includes, for example, information obtained by LiDAR, a luminance image obtained by a visible light camera, an infrared image obtained by an infrared camera, a depth image obtained by a depth sensor, sensor position information, sensor speed information, and the like.</p><p id="p-0728" num="0713">Communication unit <b>1112</b> communicates with client device <b>902</b> and transmits a data transmission request (e.g., transmission request for sensor information) and the like to client device <b>902</b>.</p><p id="p-0729" num="0714">Reception controller <b>1113</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1112</b> to establish communication with the communications partner.</p><p id="p-0730" num="0715">Format converter <b>1114</b> generates sensor information <b>1132</b> by performing a decompression or decoding process when received sensor information <b>1037</b> is compressed or encoded. Note that format converter <b>1114</b> does not perform the decompression or decoding process when sensor information <b>1</b>.<b>037</b> is uncompressed data.</p><p id="p-0731" num="0716">Three-dimensional data creator <b>1116</b> generates three-dimensional data <b>1134</b> of a surrounding area of client device <b>902</b> based on sensor information <b>1132</b>. For example, three-dimensional data creator <b>1116</b> generates point, cloud data with color information on the surrounding area of client device <b>902</b> using information obtained by LiDAR, and visible light video obtained by a visible light camera.</p><p id="p-0732" num="0717">Three-dimensional data merger <b>1117</b> updates three-dimensional map <b>1135</b> by merging three-dimensional data <b>1134</b> created based on sensor information <b>1132</b> with three-dimensional map <b>1135</b> managed by server <b>901</b>.</p><p id="p-0733" num="0718">Three-dimensional data storage <b>1118</b> stores three-dimensional map <b>1135</b> and the like.</p><p id="p-0734" num="0719">Format converter <b>1119</b> generates three-dimensional map <b>1031</b> by converting three-dimensional map <b>1135</b> to a format supported by the receiver end. Note that format converter <b>1119</b> may reduce the amount of data by compressing or encoding three-dimensional map <b>1135</b>. Format converter <b>1119</b> may omit this process when format conversion is not necessary. Format converter <b>1119</b> may also control the amount of data to be transmitted in accordance with a specified transmission range.</p><p id="p-0735" num="0720">Communication unit <b>1120</b> communicates with client device <b>902</b> and receives a data transmission request (transmission request for three-dimensional map) and the like from client device <b>902</b>.</p><p id="p-0736" num="0721">Transmission controller <b>1121</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1120</b> to establish communication with the communications partner.</p><p id="p-0737" num="0722">Data transmitter <b>1122</b> transmits three-dimensional map <b>1031</b> to client device <b>902</b>. Three-dimensional map <b>1031</b> is data that includes a point cloud such as a WLD or a SWLD. Three-dimensional map <b>1031</b> may include one of compressed data and uncompressed data.</p><p id="p-0738" num="0723">An operational flow of client device <b>902</b> will be described next. <figref idref="DRAWINGS">FIG. <b>82</b></figref> is a flowchart of an operation when client device <b>902</b> obtains the three-dimensional map.</p><p id="p-0739" num="0724">Client device <b>902</b> first requests server <b>901</b> to transmit the three-dimensional map (point cloud, etc.) (S<b>1001</b>). At this point, by also transmitting the position information about client device <b>902</b> obtained through UPS and the like, client device <b>902</b> may also request server <b>901</b> to transmit a three-dimensional map relating to this position information.</p><p id="p-0740" num="0725">Client device <b>902</b> next receives the three-dimensional map from server <b>901</b> (S<b>1002</b>). When the received three-dimensional map is compressed data, client device <b>902</b> decodes the received three-dimensional map and generates an uncompressed three-dimensional map (S<b>1003</b>).</p><p id="p-0741" num="0726">Client device <b>902</b> next creates three-dimensional data <b>1034</b> of the surrounding area of client device <b>902</b> using sensor information <b>1033</b> obtained by sensors <b>1015</b> (S<b>1004</b>). Client device <b>902</b> next estimates the self-location of client device <b>902</b> using three-dimensional map <b>1</b>.<b>032</b> received from server <b>901</b> and three-dimensional data <b>1034</b> created using sensor information <b>1033</b> (S<b>1005</b>).</p><p id="p-0742" num="0727"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a flowchart of an operation when client device <b>902</b> transmits the sensor information. Client device <b>902</b> first receives a transmission request for the sensor information from server <b>901</b> (S<b>1011</b>). Client device <b>902</b> that has received the transmission request transmits sensor information <b>1037</b> to server <b>901</b> (S<b>1012</b>). Note that client device <b>902</b> may generate sensor information <b>1037</b> by compressing each piece of information using a compression method suited to each piece of information, when sensor information <b>1033</b> includes a plurality of pieces of information obtained by sensors <b>1015</b>.</p><p id="p-0743" num="0728">An operational flow of server <b>901</b> will be described next. <figref idref="DRAWINGS">FIG. <b>84</b></figref> is a flowchart; of an operation when server <b>901</b> obtains the sensor information Server <b>901</b> first requests client device <b>902</b> to transmit the sensor information (S<b>1021</b>). Server <b>901</b> next receives sensor information <b>1037</b> transmitted from client device <b>902</b> in accordance with the request (S<b>1022</b>). Server <b>901</b> next creates three-dimensional data <b>1134</b> using the received sensor information <b>1037</b> (S<b>1023</b>). Server <b>901</b> next reflects the created three-dimensional data <b>1134</b> in three-dimensional map <b>1135</b> (S<b>1024</b>).</p><p id="p-0744" num="0729"><figref idref="DRAWINGS">FIG. <b>85</b></figref> is a flowchart of an operation when server <b>901</b> transmits the three-dimensional map. Server <b>901</b> first receives a transmission request for the three-dimensional map from client device <b>902</b> (S<b>1031</b>). Server <b>901</b> that has received the transmission request for the three-dimensional map transmits the three-dimensional map to client device <b>902</b> (S<b>1032</b>). At this point, server <b>901</b> may extract a three-dimensional map of a vicinity of client device <b>902</b> along with the position information about client device <b>902</b>, and transmit the extracted three-dimensional map. Server <b>901</b> may compress the three-dimensional map formed by a point cloud using, fir example, an octree structure compression method, and transmit the compressed three-dimensional map.</p><p id="p-0745" num="0730">The following describes variations of the present embodiment.</p><p id="p-0746" num="0731">Server <b>901</b> creates three-dimensional data <b>1134</b> of a vicinity of a position of client device <b>902</b> using sensor information <b>1037</b> received from client device <b>902</b>. Server <b>901</b> next calculates a difference between three-dimensional data <b>1134</b> and three-dimensional map <b>1135</b>, by matching the created three-dimensional data <b>1134</b> with three-dimensional-map <b>1135</b> of the same area managed by server <b>901</b>. Server <b>901</b> determines that a type of anomaly has occurred in the surrounding area of client device <b>902</b>, when the difference is greater than or equal to a predetermined threshold. For example, it is conceivable that a large difference occurs between three-dimensional map <b>1135</b> managed by server <b>901</b> and three-dimensional data <b>1134</b> created based on sensor information <b>1037</b>, when land subsidence and the like occurs due to a natural disaster such as an earthquake.</p><p id="p-0747" num="0732">Sensor information <b>1037</b> may include information indicating at least one of a sensor type, a sensor performance, and a sensor model number. Sensor information <b>1037</b> may also be appended with a class ID and the like in accordance with the sensor performance. For example, when sensor information <b>1037</b> is obtained by LiDAR, it is conceivable to assign identifiers to the sensor performance. A sensor capable of obtaining information with precision in units of several millimeters is class <b>1</b>, a sensor capable of obtaining information with precision in units of several centimeters is class <b>2</b>, and a sensor capable of obtaining information with precision in units of several meters is class <b>3</b>. Server <b>901</b> may estimate sensor performance information and the like from a model number of client device <b>902</b>. For example, when client device <b>902</b> is equipped in a vehicle, server <b>901</b> may determine sensor specification information from a type of the vehicle. In this case, server <b>901</b> may obtain information on the type of the vehicle in advance, and the information may also be included in the sensor information. Server <b>901</b> may change a degree of correction with respect to three-dimensional data <b>1134</b> created using sensor information <b>1037</b>, using obtained sensor information <b>1037</b>. For example, when the sensor performance is high in precision (class <b>1</b>), server <b>901</b> does not correct three-dimensional data <b>1134</b>. When the sensor performance is low in precision (class <b>3</b>), server <b>901</b> corrects three-dimensional data <b>1134</b> in accordance with the precision of the sensor. For example, server <b>901</b> increases the degree (intensity) of correction with a decrease in the precision of the sensor.</p><p id="p-0748" num="0733">Server <b>901</b> may simultaneously send the transmission request for the sensor information to the plurality of client devices <b>902</b> in a certain space. Server <b>901</b> does not need to use all of the sensor information for creating three-dimensional data <b>1134</b> and may, for example, select sensor information to be used in accordance with the sensor performance, when having received a plurality of pieces of sensor information from the plurality of client devices <b>902</b>. For example, when updating three-dimensional map <b>1135</b>, server <b>901</b> may select high-precision sensor information (class <b>1</b>) from among the received plurality of pieces of sensor information, and create three-dimensional data <b>1134</b> using the selected sensor information.</p><p id="p-0749" num="0734">Server <b>901</b> is not limited to only being a server such as a cloud-based traffic monitoring system, and may also be another (vehicle-mounted) client device. <figref idref="DRAWINGS">FIG. <b>86</b></figref> is a diagram of a system structure in this case.</p><p id="p-0750" num="0735">For example, client device <b>902</b>C sends a transmission request for sensor information to client device <b>902</b>A located nearby, and obtains the sensor information from client device <b>902</b>A. Client device <b>902</b>C then creates three-dimensional data using the Obtained sensor information of client device <b>902</b>A, and updates a three-dimensional map of client device <b>902</b>C. This enables client device <b>902</b>C to generate a three-dimensional map of a space that can be obtained from client device <b>902</b>A, and fully utilize the performance of client device <b>902</b>C. For example, such a case is conceivable when client device <b>902</b>C has high performance.</p><p id="p-0751" num="0736">In this case, client device <b>902</b>A that has provided the sensor information is given rights to obtain the high-precision three-dimensional map generated by client device <b>9020</b>. Client device <b>902</b>A receives the high-precision three-dimensional map from client device <b>9020</b> in accordance with these rights.</p><p id="p-0752" num="0737">Server <b>901</b> may send the transmission request for the sensor information to the plurality of client devices <b>902</b> (client device <b>902</b>A and client device <b>902</b>B) located nearby client device <b>9020</b>. When a sensor of client device <b>902</b>A or client device <b>902</b>B has high performance, client device <b>9020</b> is capable of creating the three-dimensional data using the sensor information obtained by this high-performance sensor.</p><p id="p-0753" num="0738"><figref idref="DRAWINGS">FIG. <b>87</b></figref> is a block diagram showing a functionality structure of server <b>901</b> and client device <b>902</b>. Server <b>901</b> includes, for example, three-dimensional map compression/decoding processor <b>1201</b> that compresses and decodes the three-dimensional map and sensor information compression/decoding processor <b>1202</b> that compresses and decodes the sensor information.</p><p id="p-0754" num="0739">Client device <b>902</b> includes three-dimensional map decoding processor <b>1211</b> and sensor information compression processor <b>1212</b>. Three-dimensional map decoding processor <b>1211</b> receives encoded data of the compressed three-dimensional map, decodes the encoded data, and obtains the three-dimensional map, Sensor information compression processor <b>1212</b> compresses the sensor information itself instead of the three-dimensional data created using the obtained sensor information, and transmits the encoded data of the compressed sensor information to server <b>901</b>. With this structure, client device <b>902</b> does not need to internally store a processor that performs a process for compressing the three-dimensional data of the three-dimensional map (point cloud, etc.), as long as client device <b>902</b> internally stores a processor that performs a process for decoding the three-dimensional map (point cloud, etc.). This makes it possible to limit costs, power consumption, and the like of client device <b>902</b>.</p><p id="p-0755" num="0740">As stated above, client device <b>902</b> according to the present embodiment is equipped in the mobile object, and creates three-dimensional data <b>1034</b> of a surrounding area of the mobile object using sensor information <b>1033</b> that is obtained through sensor <b>1015</b> equipped in the mobile object and indicates a surrounding condition of the mobile object. Client device <b>902</b> estimates a self-location of the mobile object using the created three-dimensional data <b>1034</b>. Client device <b>902</b> transmits obtained sensor information <b>1033</b> to server <b>901</b> or another client device <b>902</b>.</p><p id="p-0756" num="0741">This enables client device <b>902</b> to transmit sensor information <b>1033</b> to server <b>901</b> or the like. This makes it possible to further reduce the amount of transmission data compared to when transmitting the three-dimensional data. Since there is no need for client device <b>902</b> to perform processes such as compressing or encoding the three-dimensional data, it is possible to reduce the processing amount of client device <b>902</b>. As such, client device <b>902</b> is capable of reducing the amount of data to be transmitted or simplifying the structure of the device.</p><p id="p-0757" num="0742">Client device <b>902</b> further transmits the transmission request for the three-dimensional map to server <b>901</b> and receives three-dimensional map <b>1031</b> from server <b>901</b>. In the estimating of the self-location, client device <b>902</b> estimates the self-location using three-dimensional data <b>1034</b> and three-dimensional map <b>1032</b>.</p><p id="p-0758" num="0743">Sensor information <b>1033</b> includes at least one of information obtained by a laser sensor, a luminance image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0759" num="0744">Sensor information <b>1033</b> includes information that indicates performance of the sensor.</p><p id="p-0760" num="0745">Client device <b>902</b> encodes or compresses sensor information <b>1033</b>, and in the transmitting of the sensor information, transmits sensor information <b>1037</b> that has been encoded or compressed to server <b>901</b> or another client device <b>902</b>. This enables client device <b>902</b> to reduce the amount of data to be transmitted.</p><p id="p-0761" num="0746">For example, client device <b>902</b> includes a processor and memory. The processor performs the above processes using the memory.</p><p id="p-0762" num="0747">Server <b>901</b> according to the present embodiment is capable of communicating with client device <b>902</b> equipped in the mobile object, and receives sensor information <b>1037</b> that is obtained through sensor <b>1015</b> equipped in the mobile object and indicates a surrounding condition of the mobile object. Server <b>901</b> creates three-dimensional data <b>1134</b> of a surrounding area of the mobile object using received sensor information <b>1037</b>,</p><p id="p-0763" num="0748">With this, server <b>901</b> creates three-dimensional data <b>1134</b> using sensor information <b>1037</b> transmitted from client device <b>902</b>. This makes it possible to further reduce the amount of transmission data compared to when client device <b>902</b> transmits the three-dimensional data.. Since there is no need for client device <b>902</b> to perform processes such as compressing or encoding the three-dimensional data, it is possible to reduce the processing amount of client device <b>902</b>. As such, server <b>901</b> is capable of reducing the amount of data to be transmitted or simplifying the structure of the device.</p><p id="p-0764" num="0749">Server <b>901</b> further transmits a transmission request for the sensor information to client device <b>902</b>.</p><p id="p-0765" num="0750">Server <b>901</b> further updates three-dimensional map <b>1135</b> using the created three-dimensional data <b>1134</b>, and transmits three-dimensional map <b>1135</b> to client device <b>902</b> in response to the transmission request for three-dimensional map <b>1135</b> from client device <b>902</b>.</p><p id="p-0766" num="0751">Sensor information <b>1037</b> includes at least one of information obtained by a laser sensor, a luminance image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0767" num="0752">Sensor information <b>1037</b> includes information that indicates a performance of the sensor.</p><p id="p-0768" num="0753">Server <b>901</b> further corrects the three-dimensional data in accordance with the performance of the sensor. This enables the three-dimensional data creation method to improve the quality of the three-dimensional data.</p><p id="p-0769" num="0754">In the receiving of the sensor information, server <b>901</b> receives a plurality of pieces of sensor information <b>1037</b> received from a plurality of client devices <b>902</b>, and selects sensor information <b>1037</b> to be used in the creating of three-dimensional data <b>1134</b>, based on a plurality of pieces of information that each indicates the performance of the sensor included in the plurality of pieces of sensor information <b>1037</b>. This enables server <b>901</b> to improve the quality of three-dimensional data <b>1134</b>.</p><p id="p-0770" num="0755">Server <b>901</b> decodes or decompresses received sensor information <b>1037</b>, and creates three-dimensional data <b>1134</b> using sensor information <b>1132</b> that has been decoded or decompressed. This enables server <b>901</b> to reduce the amount of data to be transmitted.</p><p id="p-0771" num="0756">For example, server <b>901</b> includes a processor and memory. The processor performs the above processes using the memory.</p><p id="p-0772" num="0757">The following will describe a variation of the present embodiment. <figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram illustrating a configuration of a system according to the present embodiment. The system illustrated in <figref idref="DRAWINGS">FIG. <b>88</b></figref> includes server <b>2001</b>, client device <b>2002</b>A, and client device <b>2002</b>B.</p><p id="p-0773" num="0758">Client device <b>2002</b>A and client device <b>2002</b>B are each provided in a mobile object such as a vehicle, and transmit sensor information to server <b>2001</b>. Server <b>2001</b> transmits a three-dimensional map (a point cloud) to client device <b>2002</b>A and client device <b>2002</b>B.</p><p id="p-0774" num="0759">Client device <b>2002</b>A includes sensor information obtainer <b>2011</b>, storage <b>2012</b>, and data transmission possibility determiner <b>2013</b>. It should be noted that client device <b>2002</b>B has the same configuration. Additionally, when client device <b>2002</b>A and client device <b>20021</b>B are not particularly distinguished below, client, device <b>2002</b>A and client device <b>2002</b>B are also referred to as client device <b>2002</b>.</p><p id="p-0775" num="0760"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a flowchart illustrating operation of client device <b>2002</b> according to the present embodiment.</p><p id="p-0776" num="0761">Sensor information obtainer <b>2011</b> obtains a variety of sensor information using sensors (a group of sensors) provided in a mobile object. In other words, sensor information obtainer <b>2011</b> obtains sensor information obtained by the sensors (the group of sensors) provided in the mobile object and indicating a surrounding state of the mobile object. Sensor information obtainer <b>2011</b> also stores the obtained sensor information into storage <b>2012</b>. This sensor information includes at least one of information obtained by LiDAR, a visible light image, an infrared image, or a depth image. Additionally, the sensor information may include at least one of sensor position information, speed information, obtainment time information, or obtainment location information. Sensor position information indicates a position of a sensor that has obtained sensor information. Speed information indicates a speed of the mobile object when a sensor obtained sensor information. Obtainment time information indicates a tine when a sensor obtained sensor information. Obtainment location information indicates a position of the mobile object or a sensor when the sensor obtained sensor information.</p><p id="p-0777" num="0762">Next, data transmission possibility determiner <b>2013</b> determines whether the mobile object (client device <b>2002</b>) is in an environment in which the mobile object can transmit sensor information to server <b>2001</b> (S<b>2002</b>). For example, data transmission possibility determiner <b>2013</b> may specify a location and a time at which client device <b>2002</b> is present using GPS information etc., and may determine whether data can be transmitted. Additionally, data transmission possibility determiner <b>2013</b> may determine whether data can be transmitted, depending on whether it is possible to connect to a specific access point.</p><p id="p-0778" num="0763">When client device <b>2002</b> determines that the mobile object is in the environment in which the mobile object can transmit the sensor information to server <b>2001</b> (YES in S<b>2002</b>), client device <b>2002</b> transmits the sensor information to server <b>2001</b> (S<b>2003</b>). In other words, when client device <b>2002</b> becomes capable of transmitting sensor information to server <b>2001</b>, client device <b>2002</b> transmits the sensor information held by client device <b>2002</b> to server <b>2001</b>. For example, an access point that enables high-speed communication using millimeter waves is provided in an intersection or the like. When client device <b>2002</b> enters the intersection, client device <b>2002</b> transmits the sensor information held by client device <b>2002</b> to server <b>2001</b> at high speed using the millimeter-wave communication.</p><p id="p-0779" num="0764">Next, client device <b>2002</b> deletes from storage <b>2012</b> the sensor information that has been transmitted to server <b>2001</b> (S<b>2004</b>). It should be noted that when sensor information that has not been transmitted to server <b>2001</b> meets predetermined conditions, client device <b>2002</b> may delete the sensor information. For example, when an obtainment time of sensor information held by client device <b>2002</b> precedes a current time by a certain time, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. In other words, when a difference between the current time and a time when a sensor obtained sensor information exceeds a predetermined time, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. Besides, when an obtainment location of sensor information held by client device <b>2002</b> is separated from a current location by a certain distance, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. In other words, when a difference between a current position of the mobile object or a sensor sand a position of the mobile object or the sensor when the sensor obtained sensor information exceeds a predetermined distance, client device <b>2002</b> may delete the sensor information from storage <b>2012</b>. Accordingly, it is possible to reduce the capacity of storage <b>2012</b> of client device <b>2002</b>.</p><p id="p-0780" num="0765">When client device <b>2002</b> does not finish obtaining sensor information (NO in S<b>2005</b>), client device <b>2002</b> performs step S<b>2001</b> and the subsequent steps again. Further, when client device <b>2002</b> finishes obtaining sensor information (YES in S<b>2005</b>), client device <b>2002</b> completes the process.</p><p id="p-0781" num="0766">Client device <b>2002</b> may select sensor information to be transmitted to server <b>2001</b>, in accordance with communication conditions. For example, when high-speed communication is available, client device <b>2002</b> preferentially transmits sensor information (e.g., information obtained by LiDAR) of which the data size held in storage <b>2012</b> is large. Additionally, when high-speed communication is not readily available, client device <b>2002</b> transmits sensor information (e.g., a visible light image) which has high priority and of which the data size held in storage <b>2012</b> is small. Accordingly, client device <b>2002</b> can efficiently transmit sensor information held in storage <b>2012</b>, in accordance with network conditions.</p><p id="p-0782" num="0767">Client device <b>2002</b> may obtain, from server <b>2001</b>, time information indicating a current time and location information indicating a current location.</p><p id="p-0783" num="0768">Moreover, client device <b>2002</b> may determine an obtainment time and an obtainment location of sensor information based on the obtained time information and location information. In other words, client device <b>2002</b> may obtain time information from server <b>2001</b> and generate obtainment time information using the obtained time information. Client device <b>2002</b> may also obtain location information from server <b>2001</b> and generate obtainment location information using the obtained location information.</p><p id="p-0784" num="0769">For example, regarding time information, server <b>2001</b> and client device <b>2002</b> perform clock synchronization using a means such as the Network Time Protocol (NTP) or the Precision Time Protocol (PTP). This enables client device <b>2002</b> to obtain accurate time information. What's more, since it is possible to synchronize clocks between server <b>2001</b> and client devices <b>2002</b>, it is possible to synchronize times included in pieces of sensor information obtained by separate client devices <b>2002</b>. As a result server <b>2001</b> can handle sensor information indicating a synchronized time. It should be noted that a means of synchronizing clocks may be any means other than the NTP or PTP. In addition, GPS information may be used as the time information and the location information.</p><p id="p-0785" num="0770">Server <b>2001</b> may specify a time or a location and obtain pieces of sensor information from client devices <b>2002</b>. For example, when an accident occurs, in order to search for a client device in the vicinity of the accident, server <b>2001</b> specifies an accident occurrence time and an accident occurrence location and broadcasts sensor information transmission requests to client devices <b>2002</b>. Then, client device <b>2002</b> having sensor information obtained at the corresponding time and location transmits the sensor information to server <b>2001</b>.</p><p id="p-0786" num="0771">In other words, client device <b>2002</b> receives, from server <b>2001</b>, a sensor information transmission request including specification information specifying a location and a time. When sensor information obtained at a location and a time indicated by the specification information is stored in storage <b>2012</b>, and client device <b>2002</b> determines that the mobile object is present in the environment in which the mobile object can transmit the sensor information to server <b>2001</b>, client device <b>2002</b> transmits, to server <b>2001</b>, the sensor information obtained at the location and the time indicated by the specification information. Consequently, server <b>2001</b> can obtain the pieces of sensor information pertaining to the occurrence of the accident from client devices <b>2002</b>, and use the pieces of sensor information for accident analysis etc.</p><p id="p-0787" num="0772">It should be noted that when client device <b>2002</b> receives a sensor information transmission request from server <b>2001</b>, client device <b>2002</b> may refuse to transmit sensor information. Additionally, client device <b>2002</b> may set in advance which pieces of sensor information can be transmitted. Alternatively, server <b>2001</b> may inquire of client device <b>2002</b> each time whether sensor information can be transmitted.</p><p id="p-0788" num="0773">A point may be given to client device <b>2002</b> that has transmitted sensor information to server <b>2001</b>. This point can be used in payment for, for example, gasoline expenses, electric vehicle (EV) charging expenses, a highway toll, or rental car expenses. After obtaining sensor information, server <b>2001</b> may delete information for specifying client device <b>2002</b> that has transmitted the sensor information. For example, this information is a network address of client device <b>2002</b>. Since this enables the anonymization of sensor information, a user of client device <b>2002</b> can securely transmit sensor information from client device <b>2002</b> to server <b>2001</b>. Server <b>2001</b> may include servers. For example, by servers sharing sensor information, even when one of the servers breaks down, the other servers can communicate with client device <b>2002</b>. Accordingly, it is possible to avoid service outage due to a server breakdown.</p><p id="p-0789" num="0774">A specified location specified by a sensor information transmission request indicates an accident occurrence location etc., and may be different from a position of client device <b>2002</b> at a specified time specified by the sensor information transmission request. For this reason, for example, by specifying, as a specified location, a range such as within XX meters of a surrounding area, server <b>2001</b> can request information from client device <b>2002</b> within the range. Similarly, server <b>2001</b> may also specify, as a specified time, a range such as within N seconds before and after a certain time. As a result, server <b>2001</b> can obtain sensor information from client device <b>2002</b> present for a time from t&#x2212;N to t+N and in a location within. XX meters from absolute position S. When client device <b>2002</b> transmits three-dimensional data such as LiDAR, client device <b>2002</b> may transmit data created immediately after time t.</p><p id="p-0790" num="0775">Server <b>2001</b> may separately specify information indicating, as a specified location, a location of client device <b>2002</b> from which sensor information is to be obtained, and a location at which sensor information is desirably obtained. For example, server <b>2001</b> specifies that sensor information including at least a range within YY meters from absolute position S is to be obtained from client device <b>2002</b> present within XX meters from absolute position S. When client device <b>2002</b> selects three-dimensional data to be transmitted, client device <b>2002</b> selects one or more pieces of three-dimensional data so that the one or more pieces of three-dimensional data include at least the sensor information including the specified range. Each of the one or more pieces of three-dimensional data is a random-accessible unit of data in addition, when client device <b>2002</b> transmits a visible light image, client device <b>2002</b> may transmit pieces of temporally continuous image data including at least a frame immediately before or immediately after time t.</p><p id="p-0791" num="0776">When client device <b>2002</b> can use physical networks such as 5G, Wi-Fi, or modes in 5G for transmitting sensor information, client device <b>2002</b> may select a network to be used according to the order of priority notified by server <b>2001</b>. Alternatively, client device <b>2002</b> may select a network that enables client device <b>2002</b> to ensure an appropriate bandwidth based on the size of transmit data. Alternatively, client device <b>2002</b> may select a network to be used, based on data transmission expenses etc. A transmission request from server <b>2001</b> may include information indicating a transmission deadline, for example, performing transmission when client device <b>2002</b> can start transmission by time t. When server <b>2001</b> cannot obtain sufficient sensor information within a time limit, server <b>2001</b> may issue a transmission request again.</p><p id="p-0792" num="0777">Sensor information may include header information indicating characteristics of sensor data along with compressed or uncompressed sensor data. Client device <b>2002</b> may transmit header information to server <b>2001</b> via a physical network or a communication protocol that is different from a physical network or a communication protocol used for sensor data. For example, client device <b>2002</b> transmits header information to server <b>2001</b> prior to transmitting sensor data. Server <b>2001</b> determines whether to obtain the sensor data of client device <b>2002</b>, based on a result of analysis of the header information. For example, header information may include information indicating a point cloud obtainment density, an elevation angle, or a frame rate of LiDAR, or information indicating, for example, a resolution, an SN ratio, or a frame rate of a visible light image. Accordingly, server <b>2001</b> can obtain the sensor information from client device <b>2002</b> having the sensor data of determined quality. As stated above, client device <b>2002</b> is provided in the mobile object, obtains sensor information that has been obtained by a sensor provided in the mobile object and indicates a surrounding state of the mobile object, and stores the sensor information into storage <b>2012</b>. Client device <b>2002</b> determines whether the mobile object is present in an environment in which the mobile object is capable of transmitting the sensor information to server <b>2001</b>, and transmits the sensor information to server <b>2001</b> when the mobile object is determined to be present in the environment in which the mobile object is capable of transmitting the sensor information to server <b>2001</b>.</p><p id="p-0793" num="0778">Additionally, client device <b>2002</b> further creates, from the sensor information, three-dimensional data of a surrounding area of the mobile object, and estimates a self-location of the mobile object using the three-dimensional data created.</p><p id="p-0794" num="0779">Besides, client device <b>2002</b> further transmits a transmission request for a three-dimensional map to server <b>2001</b>, and receives the three-dimensional map from server <b>2001</b>. In the estimating, client device <b>2002</b> estimates the self-location using the three-dimensional data and the three-dimensional map. It should be noted that the above process performed by client device <b>2002</b> may be realized as an information transmission method for use in client device <b>2002</b>.</p><p id="p-0795" num="0780">In addition, client device <b>2002</b> may include a processor and memory. Using the memory, the processor may perform the above process.</p><p id="p-0796" num="0781">Next, a sensor information collection system according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>90</b></figref> is a diagram illustrating a configuration of the sensor information collection system according to the present embodiment. As illustrated in <figref idref="DRAWINGS">FIG. <b>90</b></figref>, the sensor information collection system according to the present embodiment includes terminal <b>2021</b>A, terminal <b>2021</b>B, communication device <b>2022</b>A, communication device <b>2022</b>B, network <b>2023</b>, data collection server <b>2024</b>, map server <b>2025</b>, and client device <b>2026</b>. It should be noted that when terminal <b>2021</b>A and terminal <b>2021</b>B are not particularly distinguished, terminal <b>2021</b>A and terminal <b>2021</b>B are also referred to as terminal <b>2021</b>. Additionally, when communication device <b>2022</b>A and communication device <b>2022</b>B are not particularly distinguished, communication device <b>2022</b>A and communication device <b>2022</b>B are also referred to as communication device <b>2022</b>.</p><p id="p-0797" num="0782">Data collection server <b>2024</b> collects data such as sensor data obtained by a sensor included in terminal <b>2021</b> as position-related data in which the data is associated with a position in a three-dimensional space.</p><p id="p-0798" num="0783">Sensor data is data obtained by, for example, detecting a surrounding state of terminal <b>2021</b> or an internal state of terminal <b>2021</b> using a sensor included in terminal <b>2021</b>. Terminal <b>2021</b> transmits, to data collection server <b>2024</b>, one or more pieces of sensor data collected from one or more sensor devices in locations at which direct communication with terminal <b>2021</b> is possible or at which communication with terminal <b>2021</b> is possible by the same communication system or via one or more relay devices.</p><p id="p-0799" num="0784">Data included in position-related data may include, for example, information indicating an operating state, an operating log, a service use state, etc. of a terminal or a device included in the terminal. In addition, the data include in the position-related data may include, for example, information in which an identifier of terminal <b>2021</b> is associated with a position or a movement path etc. of terminal <b>2021</b>.</p><p id="p-0800" num="0785">Information indicating a position included in position-related data is associated with, for example, information indicating a position in three-dimensional data such as three-dimensional map data. The details of information indicating a position will be described later.</p><p id="p-0801" num="0786">Position-related data may include at least one of the above-described time information or information indicating an attribute of data included in the position-related data or a type (e.g., a model number) of a sensor that has created the data, in addition to position information that is information indicating a position. The position information and the time information may be stored in a header area of the position-related data or a header area of a frame that stores the position-related data. Further, the position information and the time information may be transmitted and/or stored as metadata associated with the position-related data, separately from the position-related data.</p><p id="p-0802" num="0787">Map server <b>2025</b> is connected to, for example, network <b>2023</b>, and transmits three-dimensional data such as three-dimensional map data in response to a request from another device such as terminal <b>2021</b>. Besides, as described in the aforementioned embodiments, map server <b>2025</b> may have, for example, a function of updating three-dimensional data using sensor information transmitted from terminal <b>2021</b>.</p><p id="p-0803" num="0788">Data collection server <b>2024</b> is connected to, for example, network <b>2023</b>, collects position-related data from another device such as terminal <b>2021</b>, and stores the collected position-related data into a storage of data collection server <b>2024</b> or a storage of another server. In addition, data collection server <b>2024</b> transmits, for example, metadata of collected position-related data or three-dimensional data generated based on the position-related data, to terminal <b>2021</b> in response to a request from terminal <b>2021</b>.</p><p id="p-0804" num="0789">Network <b>2023</b> is, for example, a communication network such as the Internet. Terminal <b>2021</b> is connected to network <b>2028</b> via communication device <b>2022</b>. Communication device <b>2022</b> communicates with terminal <b>2021</b> using one communication system or switching between communication systems. Communication device <b>2022</b> is a communication satellite that performs communication using, for example, (1) a base station compliant with Long-Term Evolution (LTE) etc., (2) an access point (AP) for Wi-Fi or millimeter-wave communication etc., (3) a low-power wide-area (LPWA.) network gateway such as SIGFOX, LoRaWAN, or Wi-SUN, or (4) a satellite communication system such as DVB-S<b>2</b>.</p><p id="p-0805" num="0790">It should be noted that a base station may communicate with terminal <b>2021</b> using a system classified as an LPWA network such as Narrowband Internet of Things (NB IoT) or LTE-M, or switching between these systems.</p><p id="p-0806" num="0791">Here, although, in the example given, terminal <b>2021</b> has a function of communicating with communication device <b>2022</b> that uses two types of communication systems, and communicates with map server <b>2025</b> or data collection server <b>2024</b> using one of the communication systems or switching between the communication systems and between communication devices <b>2022</b> to be a direct communication partner; a configuration of the sensor information collection system and terminal <b>2021</b> is not limited to this. For example, terminal <b>2021</b> need not have a function of performing communication using communication systems, and may have a function of performing communication using one of the communication systems. Terminal <b>2021</b> may also support three or more communication systems. Additionally, each terminal <b>2021</b> may support a different communication system.</p><p id="p-0807" num="0792">Terminal <b>2021</b> includes, for example, the configuration of client device <b>902</b> illustrated in <figref idref="DRAWINGS">FIG. <b>80</b></figref>. Terminal <b>2021</b> estimates a self-location etc. using received three-dimensional data. Besides, terminal <b>2021</b> associates sensor data obtained from a sensor and position information obtained by self-location estimation to generate position-related data.</p><p id="p-0808" num="0793">Position information appended to position-related data indicates, for example, a position in a coordinate system used for three-dimensional data.</p><p id="p-0809" num="0794">For example, the position information is coordinate values represented using a value of a latitude and a value of a longitude. Here, terminal <b>2021</b> may include, in the position information, a coordinate system serving as a reference for the coordinate values and information indicating three-dimensional data used for location estimation, along with the coordinate values. Coordinate values may also include altitude information.</p><p id="p-0810" num="0795">The position information may be associated with a data unit or a space unit usable for encoding the above three-dimensional data. Such a unit is, for example, WLD, GOS, SPC, VLM, or VXL. Here, the position information represented by, for example, an identifier for identifying a data unit such as the SPC corresponding to position-related data. It should be noted that the position information may include, for example, information indicating three-dimensional data obtained by encoding a three-dimensional space including a data unit such as the SPC or information indicating a detailed position within the SPC, in addition to the identifier for identifying the data unit such as the SPC. The information indicating the three-dimensional data is, for example, a file name of the three-dimensional data.</p><p id="p-0811" num="0796">As stated above, by generating position-related data associated with position information based on location estimation using three-dimensional data, the system can give more accurate position information to sensor information than when the system appends position information based on a self-location of a client device (terminal <b>2021</b>) obtained using a GPS to sensor information. As a result, even when another device uses the position-related data in another service, there is a possibility of more accurately determining a position corresponding to the position-related data in an actual space, by performing location estimation based on the same three-dimensional data.</p><p id="p-0812" num="0797">It should be noted that although the data transmitted from terminal <b>2021</b> is the position-related data in the example given in the present embodiment, the data transmitted from terminal <b>2021</b> may be data unassociated with position information. In other words, the transmission and reception of three-dimensional data or sensor data described in the other embodiments may be performed via network <b>2023</b> described in the present embodiment.</p><p id="p-0813" num="0798">Next, a different example of position information indicating a position in a three-dimensional or two-dimensional actual space or in a map space will be described. The position information appended to position-related data may be information indicating a relative position relative to a keypoint in three-dimensional data. Here, the keypoint serving as a reference for the position information is encoded as, for example, SWLD, and notified to terminal <b>2021</b> as three-dimensional data.</p><p id="p-0814" num="0799">The information indicating the relative position relative to the keypoint may be, for example, information that is represented by a vector from the keypoint to the point indicated by the position information, and indicates a direction and a distance from the keypoint to the point indicated by the position information. Alternatively, the information indicating the relative position relative to the keypoint may be information indicating an amount of displacement from the keypoint to the point indicated by the position information along each of the x axis, the y axis, and the z axis. Additionally, the information indicating the relative position relative to the keypoint may be information indicating a distance from each of three or more keypoints to the point indicated by the position information. It should be noted that the relative position need not be a relative position of the point indicated by the position information represented using each keypoint as a reference, and may be a relative position of each keypoint represented with respect to the point indicated by the position information. Examples of position information based on a relative position relative to a keypoint include information for identifying a keypoint to be a reference, and information indicating the relative position of the point indicated by the position information and relative to the keypoint. When the information indicating the relative position relative to the keypoint provided separately from three-dimensional data, the information indicating the relative position relative to the keypoint may include, for example, coordinate axes used in deriving the relative position, information indicating a type of the three-dimensional data, and/or information indicating a magnitude per unit amount (e.g., a scale) of a value of the information indicating the relative position.</p><p id="p-0815" num="0800">The position information may include, for each keypoint, information indicating a relative position relative to the keypoint. When the position information is represented by relative positions relative to keypoints, terminal <b>2021</b> that intends to identify a position in an actual space indicated by the position information may calculate candidate points of the position indicated by the position information from positions of the keypoints each estimated from sensor data, and may determine that a point obtained by averaging the calculated candidate points is the point indicated by the position information. Since this configuration reduces the effects of errors when the positions of the keypoints are estimated from the sensor data, it is possible to improve the estimation accuracy for the point in the actual space indicated by the position information. Besides, when the position information includes information indicating relative positions relative to keypoints, if it is possible to detect any one of the keypoints regardless of the presence of keypoints undetectable due to a limitation such as a type or performance of a sensor included in terminal <b>2021</b>, it is possible to estimate a value of the point indicated by the position information.</p><p id="p-0816" num="0801">A point identifiable from sensor data can be used as a keypoint. Examples of the point identifiable from the sensor data include a point or a point within a region that satisfies a predetermined keypoint detection condition, such as the above-described three-dimensional feature or feature of visible light data is greater than or equal to a threshold value.</p><p id="p-0817" num="0802">Moreover, a marker etc. placed in an actual space may be used as a keypoint. In this case, the maker may be detected and located from data obtained using a sensor such as LiDAR or a camera. For example, the marker may be represented by a change in color or luminance value (degree of reflection), or a three-dimensional shape (e.g., unevenness). Coordinate values indicating a position of the marker, or a two-dimensional bar code or a bar code etc. generated from an identifier of the marker may be also used.</p><p id="p-0818" num="0803">Furthermore, a light source that transmits an optical signal may be used as a marker. When a light source of an optical signal is used as a marker, not only information for obtaining a position such as coordinate values or an identifier but also other data may be transmitted using an optical signal. For example, an optical signal may include contents of service corresponding to the position of the marker, an address for obtaining contents such as a URL, or an identifier of a wireless communication device for receiving service, and information indicating a wireless communication system etc. for connecting to the wireless communication device. The use of an optical communication device (a light source) as a marker not only facilitates the transmission of data other than information indicating a position but also makes it possible to dynamically change the data.</p><p id="p-0819" num="0804">Terminal <b>2021</b> finds out a correspondence relationship of keypoints between mutually different data using, for example, a common identifier used.</p><p id="p-0820" num="0805">for the data, or information or a table indicating the correspondence relationship of the keypoints between the data. When there is no information indicating a correspondence relationship between keypoints, terminal <b>2021</b> may also determine that when coordinates of a key-point in three-dimensional data are converted into a position in a space of another three-dimensional data, a keypoint closest to the position is a corresponding keypoint.</p><p id="p-0821" num="0806">When the position information based on the relative position described above is used, terminal <b>2021</b> that uses mutually different three-dimensional data or services can identify or estimate a position indicated by the position information with respect to a common keypoint included in or associated with each three-dimensional data. As a result, terminal <b>2021</b> that uses the mutually different three-dimensional data or the services can identify or estimate the same position with higher accuracy.</p><p id="p-0822" num="0807">Even when map data or three-dimensional data represented using mutually different coordinate systems are used, since it is possible to reduce the effects of errors caused by the conversion of a coordinate system, it is possible to coordinate services based on more accurate position information.</p><p id="p-0823" num="0808">Hereinafter, an example of functions provided by data collection server <b>2024</b> will be described. Data collection server <b>2024</b> may transfer received position-related data to another data server. When there are data servers, data collection server <b>2024</b> determines to which data server received position-related data is to be transferred, and transfers the position-related data to a data server determined as a transfer destination.</p><p id="p-0824" num="0809">Data collection server <b>2024</b> determines a transfer destination based on, for example, transfer destination server determination rules preset to data collection server <b>2024</b>. The transfer destination server determination rules are set by, for example, a transfer destination table in which identifiers respectively associated with terminals <b>2021</b> are associated with transfer destination data servers.</p><p id="p-0825" num="0810">Terminal <b>2021</b> appends an identifier associated with terminal <b>2021</b> to position-related data to be transmitted, and transmits the position-related data to data collection server <b>2024</b>. Data collection server <b>2024</b> determines a transfer destination data server corresponding to the identifier appended to the position-related data, based on the transfer destination server determination rules set out using the transfer destination table etc. and transmits the position-related data to the determined data server. The transfer destination server determination rules may be specified based on a determination condition set using a time, a place, etc. at which position-related data is obtained. Here, examples of the identifier associated with transmission source terminal <b>2021</b> include an identifier unique to each terminal <b>2021</b> or an identifier indicating a group to which terminal <b>2021</b> belongs.</p><p id="p-0826" num="0811">The transfer destination table need not be a table in which identifiers associated with transmission source terminals are directly associated with transfer destination data servers. For example, data collection server <b>2024</b> holds a management table that stores tag information assigned to each identifier unique to terminal <b>2021</b>, and a transfer destination table in which the pieces of tag information are associated with transfer destination data servers. Data collection server <b>2024</b> may determine a transfer destination data server based on tag information, using the management table and the transfer destination table. Here, the tag information is, for example, control information for management or control information for providing service assigned to a type, a model number, an owner of terminal <b>2021</b> corresponding to the identifier, a group to which terminal <b>2021</b> belongs, or another identifier. Moreover, in the transfer destination able, identifiers unique to respective sensors may be used instead of the identifiers associated with transmission source terminals <b>2021</b>. Furthermore, the transfer destination server determination rules may be set by client device <b>2026</b>.</p><p id="p-0827" num="0812">Data collection server <b>2024</b> may determine data servers as transfer destinations, and transfer received position-related data to the data servers. According to this configuration, for example, when position-related data is automatically-backed up or when, in order that position-related data is commonly used by different services, there is a need to transmit the position-related data to a data server for providing each service, it is possible to achieve data transfer as intended by changing a setting of data collection server <b>2024</b>. As a result, it is possible to reduce the number of steps necessary for building and changing a system, compared to when a transmission destination of position-related data is set for each terminal <b>2021</b>.</p><p id="p-0828" num="0813">Data collection server <b>2024</b> may register, as a new transfer destination, a data server specified by a transfer request signal received from a data server; and transmit position-related data subsequently received to the data server, in response to the transfer request signal.</p><p id="p-0829" num="0814">Data collection server <b>2024</b> may store position-related data received from terminal <b>2021</b> into a recording device, and transmit position-related data specified by a transmission request signal received from terminal <b>2021</b> or a data server to request source terminal <b>2021</b> or the data server in response to the transmission request signal.</p><p id="p-0830" num="0815">Data collection server <b>2024</b> may determine whether position-related data is supp liable to a request source data server or terminal <b>2021</b>, and transfer or transmit the position-related data to the request source data server or terminal <b>2021</b> when determining that the position-related data is suppliable. When data collection server <b>2024</b> receives a request for current position-related data from client device <b>2026</b>, even if it is not a timing for transmitting position-related data by terminal <b>2021</b>, data collection server <b>2024</b> may send a transmission request for the current position-related data to terminal <b>2021</b>, and terminal <b>2021</b> may transmit the current position-related data in response to the transmission request,</p><p id="p-0831" num="0816">Although terminal <b>2021</b> transmits position information data to data collection server <b>2024</b> in the above description, data collection server <b>2024</b> may have a function of managing terminal <b>2021</b> such as a function necessary for collecting position-related data from terminal <b>2021</b> or a function used when collecting position-related data from terminal <b>2021</b>.</p><p id="p-0832" num="0817">Data collection server <b>2024</b> may have a function of transmitting, to terminal <b>2021</b>, a data request signal for requesting transmission of position information data, and collecting position-related data.</p><p id="p-0833" num="0818">Management information such as an address for communicating with terminal <b>2021</b> from which data is to be collected or an identifier unique to terminal <b>2021</b> is registered in advance in data collection server <b>2024</b>. Data collection server <b>2024</b> collects position-related data from terminal <b>2021</b> based on the registered management information. Management information may include information such as types of sensors included in terminal <b>2021</b>, the number of sensors included in terminal <b>2021</b>, and communication systems supported by terminal <b>2021</b>.</p><p id="p-0834" num="0819">Data collection server <b>2024</b> may collect information such as an operating state or a current position of terminal <b>2021</b> from terminal <b>2021</b>.</p><p id="p-0835" num="0820">Registration of management information may be instructed by client device <b>2026</b>, or a process for the registration may be started by terminal <b>2021</b> transmitting a registration request to data collection server <b>2024</b>. Data collection server <b>2024</b> may have a function of controlling communication between data collection server <b>2024</b> and terminal <b>2021</b>.</p><p id="p-0836" num="0821">Communication between data collection server <b>2024</b> and terminal <b>2021</b> may be established using a dedicated line provided by a service provider such as a mobile network operator (MNO) or a mobile virtual network operator (MVNO), or a virtual dedicated line based on a virtual private network (VPN). According to this configuration, it is possible to perform secure communication between terminal <b>2021</b> and data collection server <b>2024</b>.</p><p id="p-0837" num="0822">Data collection server <b>2024</b> may have a function of authenticating terminal <b>2021</b> or a function of encrypting data to be transmitted and received between data collection server <b>2024</b> and terminal <b>2021</b>. Here, the authentication of terminal <b>2021</b> or the encryption of data is performed using, for example, an identifier unique to terminal <b>2021</b> or an identifieer unique to a terminal group including terminals <b>2021</b>, which is shared in advance between data collection server <b>2024</b> and terminal <b>2021</b>. Examples of the identifier include an international mobile subscriber identity (IMSI) that is a unique number stored in a subscriber identity module (SIM) card. An identifier for use in authentication and an identifier for use in encryption of data may be identical or different.</p><p id="p-0838" num="0823">The authentication or the encryption of data between data collection server <b>2024</b> and terminal <b>2021</b> is feasible when both data collection server <b>2024</b> and terminal <b>2021</b> have a function of performing the process. The process does not depend on a communication system used by communication device <b>2022</b> that performs relay. Accordingly, since it is possible to perform the common authentication or encryption without considering whether terminal <b>2021</b> uses a communication system, the user's convenience of system architecture is increased. However, the expression &#x201c;does not depend on a communication system used by communication device <b>2022</b> that performs relay&#x201d; means a change according to a communication system is not essential. In other words, in order to improve the transfer efficiency or ensure security, the authentication or the encryption of data between data collection server <b>2024</b> and terminal <b>2021</b> may be changed according to a communication system used by a relay device.</p><p id="p-0839" num="0824">Data collection server <b>2024</b> may provide client device <b>2026</b> with a User Interface (UI) that manages data collection rules such as types of position-related data collected from terminal <b>2021</b> and data collection schedules.</p><p id="p-0840" num="0825">Accordingly, a user can specify, for example, terminal <b>2021</b> from which data is to be collected using client device <b>2026</b>, a data collection time, and a data collection frequency. Additionally, data collection server <b>2024</b> may specify, for example, a region on a map from which data is to be desirably collected, and collect position-related data from terminal <b>2021</b> included in the region.</p><p id="p-0841" num="0826">When the data collection rules are managed on a per terminal <b>2021</b> basis, client device <b>2026</b> presents, on a screen, a list of terminals <b>2021</b> or sensors to be managed. The user sets, for example, a necessity for data collection or a collection schedule for each item in the list.</p><p id="p-0842" num="0827">When a region on a map from which data is to be desirably collected is specified, client device <b>2026</b> presents, on a screen, a two-dimensional or three-dimensional map of a region to be managed. The user selects the region from which data is to be collected on the displayed map. Examples of the region selected on the map include a circular or rectangular region having a point specified on the map as the center, or a circular or rectangular region specifiable by a drag operation. Client device <b>2026</b> may also select a region in a preset unit such as a city, an area or a block in a city, or a main road, etc. Instead of specifying a region using a map, a region may be set by inputting values of a latitude and a longitude, or a region may be selected from a list of candidate regions derived based on inputted text information. Text information is, for example, a name of a region, a city, or a landmark.</p><p id="p-0843" num="0828">Moreover, data may be collected while the user dynamically changes a specified region by specifying one or more terminals <b>2021</b> and setting a condition such as within 100 meters of one or more terminals <b>2021</b>.</p><p id="p-0844" num="0829">When client device <b>2026</b> includes a sensor such as a camera, a region on a map may be specified based on a position of client device <b>2026</b> in an actual space obtained from sensor data. For example, client device <b>2026</b> may estimate a self-location using sensor data, and specify, as a region from which data is to be collected, a region within a predetermined distance from a point on a map corresponding to the estimated location or a region within a distance specified. by the user. Client device <b>2026</b> may also specify, as the region from which the data is to be collected, a sensing region of the sensor, that is, a region corresponding to obtained sensor data. Alternatively, client device <b>2026</b> may specify, as the region from which the data is to be collected, a region based on a location corresponding to sensor data specified by the user. Either client device <b>2026</b> or data collection server <b>2024</b> may estimate a region on a map or a location corresponding to sensor data.</p><p id="p-0845" num="0830">When a region on a map is specified, data collection server <b>2024</b> may specify terminal <b>2021</b> within the specified region by collecting current position information of each terminal <b>2021</b>, and may send a transmission request for position-related data to specified terminal <b>2021</b>. When data collection server <b>2024</b> transmits information indicating a specified region to terminal <b>2021</b>, determines whether terminal <b>2021</b> is present within the specified region, and determines that terminal <b>2021</b> is present within the specified region, rather than specifying terminal <b>2021</b> within the region, terminal <b>2021</b> may transmit position-related data.</p><p id="p-0846" num="0831">Data collection server <b>2024</b> transmits, to client device <b>2026</b>, data such as a list or a map for providing the above-described User Interface (WI) in an application executed by client device <b>2026</b>. Data collection server <b>2024</b> may transmit, to client device <b>2026</b>, not only the data such as the list or the map but also an application program. Additionally, the above UI may be provided as contents created using HTML displayable by a browser. It should be noted that part of data such as map data may be supplied from a server, such as map server <b>2025</b>, other than data collection server <b>2024</b>.</p><p id="p-0847" num="0832">When client device <b>2026</b> receives an input for notifying the completion of an input such as pressing of a setup key by the user, client device <b>2026</b> transmits the inputted information as configuration information to data collection server <b>2024</b>. Data collection server <b>2024</b> transmits, to each terminal <b>2021</b>, a signal for requesting position-related data or notifying position-related. data collection rules, based on the configuration information received from client device <b>2026</b>, and collects the position-related data.</p><p id="p-0848" num="0833">Next, an example of controlling operation of terminal <b>2021</b> based on additional information added to three-dimensional or two-dimensional map data will be described.</p><p id="p-0849" num="0834">In the present configuration, object information that indicates a position of a power feeding part such as a feeder antenna or a feeder coil for wireless power feeding buried under a road or a parking lot is included in or associated with three-dimensional data, and such object information is provided to terminal <b>2021</b> that is a vehicle or a drone.</p><p id="p-0850" num="0835">A vehicle or a drone that has obtained the object information to get charged automatically moves so that a position of a charging part such as a charging antenna or a charging coil included in the vehicle or the drone becomes opposite to a region indicated by the object information, and such vehicle or a drone starts to charge itself. It should be noted that when a vehicle or a drone has no automatic driving function, a direction to move in or an operation to perform is presented to a driver or an operator by using an image displayed on a screen, audio, etc. When a position of a charging part calculated based on an estimated self-location is determined to fall within the region indicated by the object information or a predetermined distance from the region, an image or audio to be presented is changed to a c tent that puts a stop to driving or operating, and the charging is started.</p><p id="p-0851" num="0836">Object information need not be information indicating a position of a. power feeding part, and may be information indicating a region within which placement of a charging part results in a charging efficiency greater than or equal to a predetermined threshold value. A position indicated by object information may be represented by, for example, the central point of a region indicated by the object information, a region or a line within a two-dimensional plane, or a region, a line, or a plane within a three-dimensional space.</p><p id="p-0852" num="0837">According to this configuration, since it is possible to identify the position of the power feeding antenna unidentifiable by sensing data of LiDAR or an image captured by the camera, it is possible to highly accurately align a wireless charging antenna included in terminal <b>2021</b> such as a vehicle with a wireless power feeding antenna buried under a road. As a result, it is possible to increase a charging speed at the time of wireless charging and improve the charging efficiency.</p><p id="p-0853" num="0838">Object information may be an object other than a power feeding antenna.</p><p id="p-0854" num="0839">For example, three-dimensional data includes, for example, a position of an AP for millimeter-wave wireless communication as object information. Accordingly, since terminal <b>2021</b> can identify the position of the AP in advance, terminal <b>2021</b> can steer a directivity of beam to a direction of the object information and start communication. As a result, it is possible to improve communication quality such as increasing transmission rates, reducing the duration of time before starting communication, and extending a communicable period.</p><p id="p-0855" num="0840">Object information may include information indicating a type of an object corresponding to the object information. In addition, when terminal <b>2021</b> is present within a region in an actual space corresponding to a position in three-dimensional data of the object information or within a predetermined distance from the region, the object, information may include information indicating a process to be performed by terminal <b>2021</b>.</p><p id="p-0856" num="0841">Object information may be provided by a server different from a server that provides three-dimensional data. When object information is provided separately from three-dimensional data, object groups in which object information used by the same service is stored may be each provided as separate data according to a type of a target service or a target device.</p><p id="p-0857" num="0842">Three-dimensional data used in combination with object information may be point cloud data of WLD or key-point data of SWLD.</p><p id="p-0858" num="0843">In the three-dimensional data encoding device, when attribute information of a current three-dimensional point to be encoded is layer-encoded using Levels of Detail (LoDs), the three-dimensional data decoding device may decode the attribute information in layers down to LoD required by the three-dimensional data decoding device and need not decode the attribute information in layers not required. For example, when the total number of LoDs for the attribute information in a bitstream generated by the three-dimensional data. encoding device is N, the three-dimensional data decoding device may decode M LoDs (MKN), i.e., layers from the uppermost layer LoD<b>0</b> to LoD(M&#x2212;1), and need not decode the remaining LoDs, i.e., layers down to LoD(N&#x2212;1). With this, while reducing the processing load, the three-dimensional data decoding device can decode the attribute information in layers from LoD<b>0</b> to LoD(M&#x2212;1) required by the three-dimensional data decoding device.</p><p id="p-0859" num="0844"><figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram illustrating the foregoing use case. In the example shown in <figref idref="DRAWINGS">FIG. <b>91</b></figref>, a server stores a three-dimensional map obtained by encoding three-dimensional geometry information and attribute information. The server (the three-dimensional data encoding device) broadcasts the three-dimensional map to client devices (the three-dimensional data decoding devices: for example, vehicles, drones, etc.) in an area managed by the server, and each client device uses the three-dimensional map received from the server to perform a process for identifying the self-position of the client device or a process for displaying map information to a user or the like who operates the client device.</p><p id="p-0860" num="0845">The following describes an example of the operation in this case. First, the server encodes the geometry information of the three-dimensional map using an octree structure or the like. Then, the sever layer-encodes the attribute information of the three-dimensional map using N LoDs established based on the geometry information. The server stores a bitstream of the three-dimensional map obtained by the layer-encoding.</p><p id="p-0861" num="0846">Next, in response to a send request for the map information from the client device in the area managed by the server, the server sends the bitstream of the encoded three-dimensional map to the client device.</p><p id="p-0862" num="0847">The client device receives the bitstream of the three-dimensional map sent from the server, and decodes the geometry information and the attribute information of the three-dimensional map in accordance with the intended use of the client device. For example, when the client device performs highly accurate estimation of the self-position using the geometry information and the attribute information in N LoDs, the client device determines that a decoding result to the dense three-dimensional points is necessary as the attribute information, and decodes all the information in the bitstream.</p><p id="p-0863" num="0848">Moreover, when the client device displays the three-dimensional map information to a user or the like, the client device determines that a decoding result to the sparse three-dimensional points is necessary as the attribute information, and decodes the geometry information and the attribute information in MDs (M&#x3c;N) starting from an upper layer LoD<b>0</b>.</p><p id="p-0864" num="0849">In this way, the processing load of the client device can be reduced by changing LoDs for the attribute information to be decoded in accordance with the intended use of the client, device.</p><p id="p-0865" num="0850">In the example shown in <figref idref="DRAWINGS">FIG. <b>91</b></figref>, for example, the three-dimensional map includes geometry information and attribute information. The geometry information is encoded using the octree. The attribute information is encoded using N LoDs.</p><p id="p-0866" num="0851">Client device A performs highly accurate estimation of the self-position. In this case, client device A determines that all the geometry information and all the attribute information are necessary, and decodes all the geometry information and all the attribute information constructed from N LoDs in the bitstream.</p><p id="p-0867" num="0852">Client device B displays the three-dimensional map to a user. In this case, client device B determines that the geometry information and the attribute information in M LoDs (M&#x3c;N) are necessary, and decodes the geometry information and the attribute information constructed from M LoDs in the bitstream.</p><p id="p-0868" num="0853">It is to be noted that the server may broadcast the three-dimensional map to the client devices, or multicast or unicast the three-dimensional map to the client devices.</p><p id="p-0869" num="0854">The following describes a variation of the system according to the present embodiment. In the three-dimensional data encoding device, when attribute information of a current three-dimensional point to be encoded is layer-encoded using LoDs, the three-dimensional data encoding device may encode the attribute information in layers down to LoD required by the three-dimensional data decoding device and need not encode the attribute information in layers not required. For example, when the total number of LoDs is N, the three-dimensional data encoding device may generate a bitstream by encoding LoDs (M&#x3c;N), i.e., layers from the uppermost layer LoD<b>0</b> to LoD(M&#x2212;1), and not encoding the remaining LoDs, i.e., layers down to LoD(N&#x2212;1). With this, in response to a request from the three-dimensional data decoding device, the three-dimensional data encoding device can provide a bitstream in which the attribute information from LoD<b>0</b> to LoD(M&#x2212;1) required by the three-dimensional data decoding device is encoded.</p><p id="p-0870" num="0855"><figref idref="DRAWINGS">FIG. <b>92</b></figref> is a diagram illustrating the foregoing use case. In the example shown in <figref idref="DRAWINGS">FIG. <b>92</b></figref>, a server stores a three-dimensional map obtained by encoding three-dimensional geometry information and attribute information. The server (the three-dimensional data encoding device) unicasts, in response to a request from the client device, the three-dimensional map to a client device (the three-dimensional data decoding device: for example, a vehicle, a drone, etc.) in an area managed by the server, and the client device uses the three-dimensional map received from the server to perform a process for identifying the self-position of the client device or a process for displaying map information to a user or the like who operates the client device.</p><p id="p-0871" num="0856">The following describes an example of the operation in this case. First, the server encodes the geometry information of the three-dimensional map using an octree structure, or the like. Then, the sever generates a bitstream of three-dimensional map A by layer-encoding the attribute information of the three-dimensional map using N LoDs established based on the geometry information, and stores the generated bitstream in the server. The sever also generates a bitstream of three-dimensional map B by layer-encoding the attribute information of the three-dimensional map using MDs (M&#x3c;N) established based on the geometry information, and stores the generated bitstream in the server.</p><p id="p-0872" num="0857">Next, the client device requests the server to send the three-dimensional map in accordance with the intended use of the client device. For example, when the client device performs highly accurate estimation of the self-position using the geometry information and the attribute information in N LoDs, the client device determines that a decoding result to the dense three-dimensional points is necessary as the attribute information, and requests the server to send the bitstream of three-dimensional map A. Moreover, when the client device displays the three-dimensional map information to a user or the like, the client device determines that a decoding result to the sparse three-dimensional points is necessary as the attribute information, and requests the server to send the bitstream of three-dimensional map B including the geometry information and the attribute information in MDs (M&#x3c;N) starting from an upper layer LoD<b>0</b>. Then, in response to the send request for the map information from the client device, the server sends the bitstream of encoded three-dimensional map A or B to the client device.</p><p id="p-0873" num="0858">The client device receives the bitstream of three-dimensional map A or B sent from the server in accordance with the intended use of the client device, and decodes the received bitstreain. In this way, the server changes a bitstream to be sent, in accordance with the intended use of the client device. With this, it is possible to reduce the processing load of the client device.</p><p id="p-0874" num="0859">In the example shown in <figref idref="DRAWINGS">FIG. <b>92</b></figref>, the server stores three-dimensional map A and three-dimensional map B. The server generates three-dimensional map A by encoding the geometry information of the three-dimensional map using, for example, an octree structure, and encoding the attribute information of the three-dimensional map using N LoDs, in other words, NumLoD included in the bitstream of three-dimensional map A indicates N.</p><p id="p-0875" num="0860">The server also generates three-dimensional map B by encoding the geometry information of the three-dimensional map using, for example, an octree structure, and encoding the attribute information of the three-dimensional map using M LoDs. In other words, NumLoD included in the bitstream of three-dimensional map B indicates M.</p><p id="p-0876" num="0861">Client device A performs highly accurate estimation of the self-position. In this case, client device A determines that all the geometry information and all the attribute information are necessary, and requests the server to send three-dimensional map A including all the geometry information and the attribute information constructed from N LoDs. Client device A receives three-dimensional map A, and decodes all the geometry information and the attribute information constructed from N LoDs.</p><p id="p-0877" num="0862">Client device B displays the three-dimensional map to a user. In this case, client device B determines that all the geometry information and the attribute information in M LoDs (M&#x3c;N) are necessary, and requests the server to send three-dimensional map B including all the geometry information and the attribute information constructed from M LoDs. Client device B receives three-dimensional map B, and decodes all the geometry information and the attribute information constructed from M LoDs.</p><p id="p-0878" num="0863">It is to be noted that in addition to three-dimensional map B, the server (the three-dimensional data encoding device) nay generate three-dimensional map C in which attribute information in the remaining N-M LoDs is encoded, and send three-dimensional map C to client device B in response to the request from client device B. Moreover, client device B may obtain the decoding result of N LoDs using the bitstreams of three-dimensional maps B and C.</p><p id="p-0879" num="0864">Hereinafter, an example of an application process will be described. <figref idref="DRAWINGS">FIG. <b>93</b></figref> is a flowchart illustrating an example of the application process. When an application operation is started, a three-dimensional data demultiplexing device obtains an ISOBMFF file including point cloud data and a plurality of pieces of encoded data (S<b>7301</b>). For example, the three-dimensional data demultiplexing device may obtain the ISOBNIFF file through communication, or may read the ISOMFF file from the accumulated data. Next, the three-dimensional data demultiplexing device analyzes the general configuration information in the ISOBMFF file, and specifies the data to be used for the application (S<b>7302</b>). For example, the three-dimensional data demultiplexing device obtains data that is used for processing, and does not obtain data that is not used for processing.</p><p id="p-0880" num="0865">Next, the three-dimensional data demultiplexing device extracts one or more pieces of data to be used for the application, and analyzes the configuration information on the data (S<b>7303</b>).</p><p id="p-0881" num="0866">When the type of the data is encoded data (encoded data in S<b>7304</b>), the three-dimensional data demultiplexing device converts the ISOBMFF to an encoded stream, and extracts a timestamp (S<b>7305</b>). Additionally, the three-dimensional data demultiplexing device refers to, for example, the flag indicating whether or not the synchronization between data is aligned to determine whether or not the synchronization between data is aligned, and may perform a synchronization process when not aligned.</p><p id="p-0882" num="0867">Next, the three-dimensional data demultiplexing device decodes the data with a predetermined method according to the timestamp and the other instructions, and processes the decoded data (S<b>7306</b>).</p><p id="p-0883" num="0868">On the other hand, when the type of the data is RAW data (RAW data in S<b>7304</b>), the three-dimensional data demultiplexing device extracts the data and timestamp (S<b>7307</b>). Additionally, the three-dimensional data demultiplexing device may refer to, for example, the flag indicating whether or not the synchronization between data is aligned to determine whether or not the synchronization between data is aligned, and may perform a synchronization process when not aligned. Next, the three-dimensional data demultiplexing device processes the data according to the timestamp and the other instructions (S<b>7308</b>).</p><p id="p-0884" num="0869">For example, an example will be described in which the sensor signals obtained by a beam LiDAR, a FLASH LiDAR, and a camera are encoded and multiplexed with respective different encoding schemes. <figref idref="DRAWINGS">FIG. <b>94</b></figref> is a diagram illustrating examples of the sensor ranges of a beam LiDAR, a FLASH LiDAR, and a camera. For example, the beam LiDAR detects all directions in the periphery of a vehicle (sensor), and the FLASH LiDAR and the camera detect the range in one direction (for example, the front) of the vehicle.</p><p id="p-0885" num="0870">In the case of a.n application that integrally handles a LiDAR point cloud, the three-dimensional data demultiplexing device refers to the general configuration information, and extracts and decodes the encoded data of the beam LiDAR and the FLASH LiDAR. Additionally, the three-dimensional data demultiplexing device does not extract camera images.</p><p id="p-0886" num="0871">According to the timestamps of the beam LiDAR and the FLASH LiDAR, the three-dimensional data demultiplexing device simultaneously processes the respective encoded data of the, time of the same timestamp.</p><p id="p-0887" num="0872">For example, the three-dimensional data demultiplexing device may present the processed data with a presentation device, may synthesize the point cloud data of the beam LiDAR and the FLASH LiDAR, or may perform a process such as rendering.</p><p id="p-0888" num="0873">Additionally, in the case of an application that performs calibration between data, the three-dimensional data demultiplexing device may extract sensor geometry information, and use the sensor geometry information in the application.</p><p id="p-0889" num="0874">For example, the three-dimensional data demultiplexing device may select whether to use beam LiDAR information or FLASH LiDAR information in the application, and may switch the process according to the selection result.</p><p id="p-0890" num="0875">In this manner, since it is possible to adaptively change the obtaining of data and the encoding process according to the process of the application, the processing amount and the power consumption can be reduced.</p><p id="p-0891" num="0876">Hereinafter, a use case in automated driving will be described. <figref idref="DRAWINGS">FIG. <b>95</b></figref> is a diagram illustrating a configuration example of an automated driving system. This automated driving system includes cloud server <b>7350</b>, and edge <b>7360</b> such as an in-vehicle device or a mobile device. Cloud server <b>7350</b> includes demultiplexer <b>7351</b>, decoders <b>7352</b>A, <b>7352</b>B, and <b>7355</b>, point cloud data synthesizer <b>7353</b>, large data accumulator <b>7354</b>, comparator <b>7356</b>, and encoder <b>7357</b>. Edge <b>7360</b> includes sensors <b>7361</b>A and <b>7361</b>B, point cloud data generators <b>7362</b>A and <b>7362</b>B, synchronizer <b>7363</b>, encoders <b>7364</b>A and <b>7364</b>B, multiplexer <b>7365</b>, update data accumulator <b>7366</b>, demultiplexer <b>7367</b>, decoder <b>7368</b>, filter <b>7369</b>, self-position estimator <b>7370</b>, and driving controller <b>7371</b>.</p><p id="p-0892" num="0877">In this system, edge <b>7360</b> downloads large data, which is large point-cloud map data accumulated in cloud server <b>7350</b>. Edge <b>7360</b> performs a self-position estimation process of edge <b>7360</b> (a vehicle or a terminal) by matching the large data with the sensor information obtained by edge <b>7360</b>. Additionally, edge <b>7360</b> uploads the obtained sensor information to cloud server <b>7350</b>, and updates the large data to the latest map data.</p><p id="p-0893" num="0878">Additionally, in various applications that handle point cloud data in the system, point cloud data with different encoding methods are handled.</p><p id="p-0894" num="0879">Cloud server <b>7350</b> encodes and multiplexes large data. Specifically, encoder <b>7357</b> performs encoding by using a third encoding method suitable for encoding a large point cloud. Additionally, encoder <b>7357</b> multiplexes encoded data. Large data accumulator <b>7354</b> accumulates the data encoded and multiplexed by encoder <b>7357</b>.</p><p id="p-0895" num="0880">Edge <b>7360</b> performs sensing. Specifically, point cloud data generator <b>7362</b>A generates first point cloud data (geometry information (geometry) and attribute information) by using the sensing information obtained by sensor <b>7361</b>A. Point cloud data generator <b>7362</b>B generates second point cloud data (geometry information and attribute information) by using the sensing information obtained by sensor <b>7361</b>B. The generated first point cloud data and second point cloud data are used for the self-position estimation or vehicle control of automated driving, or for map updating. In each process, a part of information of the first point cloud data and the second point cloud data may be used.</p><p id="p-0896" num="0881">Edge <b>7360</b> performs the self-position estimation. Specifically, edge <b>7360</b> downloads large data from cloud server <b>7350</b>. Demultiplexer <b>7367</b> obtains encoded data by demultiplexing the large data in a file format. Decoder <b>7368</b> obtains large data, which is large point-cloud map data, by decoding the obtained encoded data.</p><p id="p-0897" num="0882">Self-position estimator <b>7370</b> estimates the self-position in the map of a vehicle by matching the obtained large data with the first point cloud data and the second point cloud data generated by point cloud data generators <b>7362</b>A and <b>7362</b>B. Additionally, driving controller <b>7371</b> uses the matching result or the self-position estimation result for driving control.</p><p id="p-0898" num="0883">Note that self-position estimator <b>7370</b> and driving controller <b>7371</b> may extract specific information, such as geometry information, of the large data, and may perform processes by using the extracted information. Additionally, filter <b>7369</b> performs a process such as correction or decimation on the first point cloud data and the second point cloud data. Self-position estimator <b>7870</b> and driving controller <b>7371</b> may use the first point cloud data and second point cloud data on which the process has been performed. Additionally, self-position estimator <b>7370</b> and driving controller <b>7371</b> may use the sensor signals obtained by sensors <b>7361</b>A and <b>7361</b>B.</p><p id="p-0899" num="0884">Synchronizer <b>7363</b> performs time synchronization and geometry correction between a plurality of sensor signals or the pieces of data of a plurality of pieces of point cloud data. Additionally, synchronizer <b>7363</b> may correct the geometry information on the sensor signal or point cloud data to match the large data, based on geometry correction information on the large data and sensor data generated by the self-position estimation process.</p><p id="p-0900" num="0885">Note that synchronization and geometry correction may be performed not by edge <b>7360</b>, but by cloud server <b>7350</b>. In this case, edge <b>7360</b> may multiplex the synchronization information and the geometry information to transmit the synchronization information and the geometry information to cloud server <b>7350</b>.</p><p id="p-0901" num="0886">Edge <b>7360</b> encodes and multiplexes the sensor signal or point cloud data. Specifically, the sensor signal or point cloud data is encoded by using a first encoding method or a second encoding method suitable for encoding each signal. For example, encoder <b>7364</b>A generates first encoded data by encoding first point cloud data by using the first encoding method. Encoder <b>7364</b>B generates second encoded data by encoding second point cloud data by using the second encoding method.</p><p id="p-0902" num="0887">Multiplexer <b>7365</b> generates a multiplexed signal by multiplexing the first encoded data, the second encoded data, the synchronization information, and the like. Update data accumulator <b>7366</b> accumulates the generated multiplexed signal. Additionally, update data accumulator <b>7366</b> uploads the multiplexed signal to cloud server <b>7350</b>.</p><p id="p-0903" num="0888">Cloud server <b>7350</b> synthesizes the point cloud data. Specifically, demultiplexer <b>7351</b> obtains the first encoded data and the second encoded data by demultiplexing the multiplexed signal uploaded to cloud server <b>7350</b>. Decoder <b>7352</b>A obtains the first point cloud data (or sensor signal) by decoding the first encoded data. Decoder <b>7352</b>B obtains the second point cloud data (or sensor signal) by decoding the second encoded data.</p><p id="p-0904" num="0889">Point cloud data synthesizer <b>7353</b> synthesizes the first point cloud data and the second point cloud data with a predetermined method. When the synchronization information and the geometry correction information are multiplexed in the multiplexed signal, point cloud data synthesizer <b>7353</b> may perform synthesis by using these pieces of information.</p><p id="p-0905" num="0890">Decoder <b>7355</b> demultiplexes and decodes the large data accumulated in large data accumulator <b>7354</b>. Comparator <b>7356</b> compares the point cloud data generated based on the sensor signal obtained by edge <b>7360</b> with the large data held by cloud server <b>7350</b>, and determines the point cloud data that needs to be updated. Comparator <b>7356</b> updates the point cloud data that is determined to need to be updated of the large data to the point cloud data obtained from edge <b>7360</b>.</p><p id="p-0906" num="0891">Encoder <b>7357</b> encodes and multiplexes the updated large data, and accumulates the obtained data in .large data accumulator <b>7354</b>.</p><p id="p-0907" num="0892">As described above, the signals to be handled may be different, and the signals to be multiplexed or encoding methods may be different, according to the usage or applications to be used. Even in such a case, flexible decoding and application processes are enabled by multiplexing data of various encoding schemes by using the present embodiment. Additionally, even in a case where the encoding schemes of signals are different, by conversion to an encoding scheme suitable for demultiplexing, decoding, data conversion, encoding, and multiplexing processing, it becomes possible to build various applications and systems, and to offer of flexible services.</p><p id="p-0908" num="0893">Hereinafter, an example of decoding and application of divided data will be described. First, the information on divided data will be described. <figref idref="DRAWINGS">FIG. <b>96</b></figref> is a diagram illustrating a configuration example of a bitstream. The general information of divided data indicates, for each divided data, the sensor ID (sensor_id) and data ID (data_id) of the divided data. Note that the data ID is also indicated in the header of each encoded data.</p><p id="p-0909" num="0894">Note that the general information of divided data illustrated in <figref idref="DRAWINGS">FIG. <b>96</b></figref> includes, in addition to the sensor ID, at least one of the sensor information (Sensor), the version (Version) of the sensor, the maker name (Maker) of the sensor, the mount information (Mount Info.) of the sensor, and the position coordinates of the sensor (World Coordinate). Accordingly, the three-dimensional data decoding device can obtain the information on various sensors from the configuration information.</p><p id="p-0910" num="0895">The general information of divided data may be stored in SPS, GPS, or APS, which is the metadata, or may be stored in SEI, which is the metadata not required for encoding. Additionally, at the time of multiplexing, the three-dimensional data encoding device stores the SEI in a file of ISOBNIFF. The three-dimensional data decoding device can obtain desired divided data based on the metadata.</p><p id="p-0911" num="0896">In <figref idref="DRAWINGS">FIG. <b>96</b></figref>, SPS is the metadata of the entire encoded data, GPS is the metadata of the geometry information, APS is the metadata for each attribute information, G is encoded data of the geometry information for each divided data, and A<b>1</b>, etc. are encoded data of the attribute information for each divided data.</p><p id="p-0912" num="0897">Next, an application example of divided data will be described. An example of application will be described in which an arbitrary point cloud is selected, and the selected point cloud is presented. <figref idref="DRAWINGS">FIG. <b>97</b></figref> is a flowchart of a point cloud selection process performed by this application. <figref idref="DRAWINGS">FIG. <b>98</b></figref> to <figref idref="DRAWINGS">FIG. <b>100</b></figref> are diagrams illustrating screen examples of the point cloud selection process.</p><p id="p-0913" num="0898">As illustrated in <figref idref="DRAWINGS">FIG. <b>98</b></figref>, the three-dimensional data decoding device that performs the application includes, for example, a UI unit that displays an input UT (user interface) <b>8661</b> for selecting an arbitrary point cloud. Input UI <b>8661</b> includes presenter <b>8662</b> that presents the selected point cloud, and an operation unit (buttons <b>8663</b> and <b>8664</b>) that receives operations by a user. After a point cloud is selected in UI <b>8661</b>, the three-dimensional data decoding device obtains desired data from accumulator <b>8665</b>.</p><p id="p-0914" num="0899">First, based on an operation by the user on input UI <b>8661</b>, the point cloud information that the user wants to display is selected (S<b>8631</b>). Specifically, by selecting button <b>8663</b>, the point cloud based on sensor <b>1</b> is selected. By selecting button <b>8664</b>, the point cloud based on sensor <b>2</b> is selected. Alternatively, by selecting both button <b>8663</b> and button <b>8664</b>, the point cloud based on sensor <b>1</b> and the point cloud based on sensor <b>2</b> are selected. Note that it is an example of the selection method of point cloud, and it is not limited to this.</p><p id="p-0915" num="0900">Next, the three-dimensional data decoding device analyzes the general information of divided data included in the multiplexed signal (bitstream) or encoded data, and specifies the data ID (data_id) of the divided data constituting the selected point cloud from the sensor ID (sensor_id) of the selected sensor (S<b>8632</b>). Next, the three-dimensional data decoding device extracts, from the multiplexed signal, the encoded data including the specified and desired data ID, and decodes the extracted encoded data to decode the point cloud based on the selected sensor (S<b>8633</b>). Note that the, three-dimensional data decoding device does not decode the other encoded data.</p><p id="p-0916" num="0901">Lastly, the three-dimensional data decoding device presents (for example, displays) the decoded point cloud (S<b>8634</b>). <figref idref="DRAWINGS">FIG. <b>99</b></figref> illustrates an example in the case where button. <b>8663</b> for sensor <b>1</b> is pressed, and the point cloud of sensor <b>1</b> is presented. <figref idref="DRAWINGS">FIG. <b>1</b>.<b>00</b></figref> illustrates an example in the case where both button <b>8663</b> for sensor <b>1</b> and button <b>8664</b> for sensor <b>2</b> are pressed, and the point clouds of sensor <b>1</b> and sensor <b>2</b> are presented.</p><p id="p-0917" num="0902">A three-dimensional data encoding device, a three-dimensional data decoding device, and the like according to the embodiments of the present disclosure have been described above, but the present disclosure is not limited to these embodiments.</p><p id="p-0918" num="0903">Note that each of the processors included in the three-dimensional data encoding device, the three-dimensional data decoding device, and the like according to the above embodiments is typically implemented as a large-scale integrated (LSI) circuit, which is an integrated circuit (IC). These may take the form of individual chips, or may be partially or entirely packaged into a single chip.</p><p id="p-0919" num="0904">Such IC is not limited to an LSI, and thus may be implemented as a dedicated circuit or a general-purpose processor. Alternatively, a field programmable gate array (FPGA) that allows for programming after the manufacture of an LSI, or a reconfigurable processor that allows for reconfiguration of the connection and the setting of circuit cells inside an LSI may be employed.</p><p id="p-0920" num="0905">Moreover, in the above embodiments, the structural components may be implemented as dedicated hardware or may be realized by executing a software program suited to such structural components. Alternatively, the structural components may be implemented by a program executor such as a CPU or a processor reading out and executing the software program recorded in a recording medium such as a hard disk or a semiconductor memory.</p><p id="p-0921" num="0906">The present disclosure may also be implemented a.s a three-dimensional data encoding method, a three-dimensional data decoding method, or the like executed by the three-dimensional data encoding device, the three-dimensional data decoding device, and the like.</p><p id="p-0922" num="0907">Also, the divisions of the functional blocks shown in the block diagrams are mere examples, and thus a plurality of functional blocks may be implemented as a single functional block, or a single functional block may be divided into a plurality of functional blocks, or one or more functions may be moved to another functional block. Also, the functions of a plurality of functional blocks having similar functions may be processed by single hardware or software in a parallelized or time-divided manner.</p><p id="p-0923" num="0908">Also, the processing order of executing the steps shown in the flowcharts is a mere illustration for specifically describing the present disclosure, and thus may be an order other than the shown order. Also, one or more of the steps may be executed simultaneously (in parallel) with another step.</p><p id="p-0924" num="0909">A three-dimensional data encoding device, a three-dimensional data decoding device, and the like according to one or more aspects have been described above based on the embodiments, but the present disclosure is not limited to these embodiments. The one or more aspects may thus include forms achieved by making various modifications to the above embodiments that can be conceived by those skilled in the art, as well forms achieved by combining structural components in different embodiments without materially departing from the spirit of the present disclosure.</p><p id="p-0925" num="0910">Although only some exemplary embodiments of the present disclosure have been described in detail above, those skilled in the art will readily appreciate that many modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the present disclosure. Accordingly, all such modifications are intended to be included within the scope of the present disclosure.</p><heading id="h-0014" level="1">INDUSTRIAL APPLICABILITY</heading><p id="p-0926" num="0911">The present disclosure is applicable to a three-dimensional data encoding device and a three-dimensional data decoding device.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001 MATH-US-00001-2" nb-file="US20230007303A1-20230105-M00001.NB"><img id="EMI-M00001" he="24.72mm" wi="76.20mm" file="US20230007303A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002 MATH-US-00002-2 MATH-US-00002-3" nb-file="US20230007303A1-20230105-M00002.NB"><img id="EMI-M00002" he="34.88mm" wi="76.20mm" file="US20230007303A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230007303A1-20230105-M00003.NB"><img id="EMI-M00003" he="17.61mm" wi="76.20mm" file="US20230007303A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004 MATH-US-00004-2" nb-file="US20230007303A1-20230105-M00004.NB"><img id="EMI-M00004" he="20.83mm" wi="76.20mm" file="US20230007303A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A three-dimensional data encoding method comprising:<claim-text>obtaining an attribute information item of a three-dimensional point; and</claim-text><claim-text>generating a bitstream including the attribute information item encoded and a transform identification information item for switching whether a value is included in the bitstream, the value being used in at least one of a scaling process or an offset process performed on a numerical value indicated by the attribute information item.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein when the value is included in the bitstream, the attribute information item is encoded based on the value, and</claim-text><claim-text>the bitstream including the attribute information item encoded and the value is generated.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein a plurality of attribute information items each of which is the attribute information item are obtained in the obtaining,</claim-text><claim-text>in the generating, whether the value is included in the bitstream is switched for each of the plurality of attribute information items.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein when the attribute information is encoded by performing both the scaling process and the offset process in the encoding of the attribute information item, the bitstream further including an order information item is generated in the generating, the order information item indicating an order in which the scaling process and the offset process have been performed.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the value is stored in an additional information item common to sequences in the generating.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein in the scaling process, at least one of a multiplication and division operation or a shift operation is performed on the numerical value indicated by the attribute information item, and</claim-text><claim-text>in the offset process, an addition and subtraction operation is performed on the numerical value indicated by the attribute information item.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein in the encoding of the attribute information item, the numerical value indicated by the attribute information item is transformed into a positive value, and the positive value is encoded.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A three-dimensional data decoding method comprising:<claim-text>obtaining a bitstream including an attribute information item of a three-dimensional point encoded and a transform identification information item for switching whether a value is included in the bitstream, the value being used in at least one of a scaling process or an offset process performed on a numerical value indicated by the attribute information item; and</claim-text><claim-text>switching whether the value is obtained from the bitstream, based on the transform identification information,</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>,<claim-text>wherein when the value is obtained from the bitstream, the attribute information item is decoded based on the value, and</claim-text><claim-text>the scaling process or the offset process is performed on the attribute information item decoded.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>,<claim-text>wherein the bitstream includes a plurality of attribute information items encoded each of which is the attribute information item encoded,</claim-text><claim-text>each of the plurality of attribute information items encoded is decoded in the decoding of the attribute information item, and</claim-text><claim-text>the transform identification information item is for switching, for each of the plurality of attribute information items, whether the value is included in the bitstream.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>,<claim-text>wherein the bitstream further includes an order information item indicating an order in which the scaling process and the offset process have been performed, and</claim-text><claim-text>in the scaling process and the offset process, the scaling process and the offset process are performed in the order based on the order information item.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>,<claim-text>wherein in the bitstream, the value is stored in an additional information item common to sequences.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>,<claim-text>wherein in the scaling process, at least one of a multiplication and division operation or a shift operation is performed on the numerical value indicated by the attribute information item, and</claim-text><claim-text>in the offset process, an addition and subtraction operation is performed on the numerical value indicated by the attribute information item.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>,<claim-text>wherein in the decoding of the attribute information item, the numerical value indicated by the attribute information item is transformed into a positive value, and the positive value is decoded.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The three-dimensional data encoding device comprising:<claim-text>a processor; and</claim-text><claim-text>memory,</claim-text><claim-text>wherein using the memory, the processor:<claim-text>obtains an attribute information item of a three-dimensional point; and</claim-text><claim-text>generates a bitstream including the attribute information item encoded and a transform identification information item for switching whether a value is included in the bitstream, the value being used in at least one of a scaling process or an offset process performed on a numerical value indicated by the attribute information item.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A three-dimensional data decoding device comprising:<claim-text>a processor; and</claim-text><claim-text>memory,</claim-text><claim-text>wherein using the memory, the processor:<claim-text>obtains a bitstream including an attribute information item of a three-dimensional point encoded and a transform identification information item for switching whether a value is included in the bitstream, the value being used in at least one of a scaling process or an offset process performed on a numerical value indicated by the attribute information item; and</claim-text><claim-text>switches whether the value is obtained from the bitstream based on the transform identification information.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>