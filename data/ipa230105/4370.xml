<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004371A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004371</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940597</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>61</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>445</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>64</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>61</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>44505</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>64</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>65</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3247</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0643</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>125</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">PACKAGE DISTRIBUTION AND INSTALLATION IN RESPONSE TO USER LOGON</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16250404</doc-number><date>20190117</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11467815</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17940597</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>VMware, Inc.</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Shantharam</last-name><first-name>Shravan</first-name><address><city>Cumming</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Watts</last-name><first-name>Blake Ryan</first-name><address><city>St. George</city><state>UT</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Regula</last-name><first-name>Kalyan</first-name><address><city>Alpharetta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Murthy</last-name><first-name>Varun</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Roszak</last-name><first-name>Jason</first-name><address><city>Brookhaven</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Rao</last-name><first-name>Nitin Radhakrishna</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Guttikonda</last-name><first-name>Mohan</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed are various implementations for distributing and installing packages in response to user logon events. A logon event associated with a user account is detected for a client device. A query containing a respective user account identifier is sent to a provisioning service to retrieve a set of packages to install on the client device. The set of packages are received from the provisioning service and installed on the client device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="165.52mm" wi="124.04mm" file="US20230004371A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="184.66mm" wi="126.07mm" file="US20230004371A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="217.59mm" wi="111.42mm" file="US20230004371A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="217.59mm" wi="111.42mm" file="US20230004371A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="229.28mm" wi="177.97mm" orientation="landscape" file="US20230004371A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Provisioning machines for users is often a tedious and time-consuming task. For example, different employees of an enterprise may be members of different groups or business units. As a result, different employees may be required to have different applications or versions of applications installed on their systems. Likewise, different users in different groups may have permissions to access different aspects, features, or functionality of the same application. As a simple example, employees in the accounts receivable department may have permission to access different functions of an enterprise's accounting system or software compared to employees in the accounts payable department. Likewise, management in the accounting department might have permission to access or utilize a wider range of functionality of an accounting software system than lower-level employees.</p><p id="p-0003" num="0002">Typically, information technology (IT) departments would keep images of machines to use for different departments or for different employee roles within a department. Each machine image would contain a copy of the programs that a typical employee in that department or role would require. Likewise, the machine image would have the programs preconfigured for a user with the respective role in the department. Using the accounting department as an example, a first machine image for employees in the accounts-payable department might be configured with software that an accounts-payable clerk would typically use and preconfigured with appropriate permissions. A second machine image would similarly be configured for accounts-receivable clerks. Managers in the accounting department would have a third-machine image maintained for them.</p><p id="p-0004" num="0003">The use of the machine images allows for the IT department to configure a computing device for individuals based on their department and role or position. However, as the number of job roles and departments increases, the number of different machine images that the IT department has to maintain proliferates. In some instances, machine images are also hardware specific. For example, multiple machine images may have to be maintained for laptops from multiple different manufacturers if computers for employees within a particular role or position in a department are sourced from multiple manufacturers.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004">Many aspects of the present disclosure can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, with emphasis instead being placed upon clearly illustrating the principles of the disclosure. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a drawing illustrating an example arrangement of a network environment according to various embodiments of the present disclosure.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref> are flowcharts depicting the operation of components of the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is sequence diagram depicting the interaction between components of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0003" level="1">DETAILED DESCRIPTION</heading><p id="p-0009" num="0008">Disclosed are various approaches for deploying packages to user devices. In order to avoid having to create custom machine images for individual users or classes of users, packages for individual applications are linked to a user. Once a user logs on to his or her machine for the first time, the packages can be downloaded and installed on the user's device. Packages can continue to be updated on a periodic basis (e.g., in response to periodic checks performed by a service installed on the user's device or at each logon of the user). As a result, a single machine image can be maintained by an IT department, and policies can be configured to specify which packages are to be sent to a computing device when a user first logs on to his or her computing device. In the following discussion, a general description of the system and its components is provided, followed by a discussion of the operation of the same.</p><p id="p-0010" num="0009">As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, shown is a network environment <b>100</b> according to various embodiments. The network environment <b>100</b> includes a computing environment <b>101</b>, and a client device <b>103</b>, which are in data communication with each other via a network <b>106</b>. The network <b>106</b> includes wide area networks (WANs) and local area networks (LANs). These networks can include wired or wireless components or a combination thereof. Wired networks can include Ethernet networks, cable networks, fiber optic networks, and telephone networks such as dial-up, digital subscriber line (DSL), and integrated services digital network (ISDN) networks. Wireless networks can include cellular networks, satellite networks, Institute of Electrical and Electronic Engineers (IEEE) 802.11 wireless networks (i.e., WI-FI&#xae;), BLUETOOTH&#xae; networks, microwave transmission networks, as well as other networks relying on radio broadcasts. The network <b>106</b> can also include a combination of two or more networks <b>106</b>. Examples of networks <b>106</b> can include the Internet, intranets, extranets, virtual private networks (VPNs), and similar networks.</p><p id="p-0011" num="0010">The computing environment <b>101</b> can include, for example, a server computer or any other system providing computing capability. Alternatively, the computing environment <b>101</b> can employ a plurality of computing devices that may be arranged, for example, in one or more server banks, computer banks, or other arrangements. Such computing devices can be located in a single installation or may be distributed among many different geographical locations. For example, the computing environment <b>101</b> may include a plurality of computing devices that together may include a hosted computing resource, a grid computing resource or any other distributed computing arrangement. In some cases, the computing environment <b>101</b> can correspond to an elastic computing resource where the allotted capacity of processing, network, storage, or other computing-related resources may vary over time.</p><p id="p-0012" num="0011">Various applications or other functionality can be executed in the computing environment <b>101</b> according to various embodiments. The components executed on the computing environment <b>101</b>, for example, can include a management service <b>109</b>, a provisioning service <b>113</b>, a discovery service <b>116</b>, a certificate authority <b>119</b>, a management console <b>113</b>, and other applications, services, processes, systems, engines, or functionality not discussed in detail herein.</p><p id="p-0013" num="0012">Also, various data is stored in a data store <b>116</b> that is accessible to the computing environment <b>101</b>. The data store <b>116</b> can be representative of a plurality of data stores <b>116</b>, which can include relational databases, object-oriented databases, hierarchical databases, hash tables or similar key-value data stores, as well as other data storage applications or data structures. The data stored in the data store <b>116</b> is associated with the operation of the various applications or functional entities described below. This data can include one or more user accounts <b>129</b>, one or more package files <b>133</b>, one or more device records <b>136</b>, one or more certificates <b>139</b>, and potentially other data.</p><p id="p-0014" num="0013">The user account <b>129</b> can represent information related to individual users of the client device <b>103</b>, such as members, agents, or employees of an organization or enterprise. For example, a user account <b>143</b> can include a user account identifier <b>143</b>, a list of applicable packages <b>146</b>, and potentially other information (e.g., authentication credentials, user information, user permissions, etc.). The user account identifier <b>143</b> can include any identifier that uniquely identifies a user account <b>129</b> with respect to other user accounts <b>129</b>. Examples of user account identifiers <b>143</b> include usernames, globally unique identifiers (GUIDs), universally unique identifiers (UUIDs), and similar data structures. The list of applicable packages <b>146</b> contains a list of package identifiers <b>149</b>. Each package identifier <b>149</b> identifies a respective package file <b>133</b> applicable to a user account <b>129</b> and that should be installed on a client device <b>103</b> operated by a user associated with the user account <b>129</b>.</p><p id="p-0015" num="0014">The package file <b>133</b> can represent a collection, bundle, or grouping of assets and settings applicable to or installable on a client device <b>103</b>. An example of a package file <b>133</b> is a Provisioning Package file used in MICROSOFT WINDOWS&#xae; systems. However, other types of systems can implement or use similarly formatted files for the same or similar purposes. These can include REDHAT Package Manager (RPM) files, DEBIAN Package files, Flatpak package files, AppImage package files, and Snap packages.</p><p id="p-0016" num="0015">A package file <b>133</b> can include a package identifier <b>149</b>, one or more configuration settings <b>153</b> related to an application <b>156</b> or other asset installable with the package file <b>133</b>, and a copy of the application <b>156</b> or other asset itself. A cryptographic hash <b>157</b> and a cryptographic signature <b>158</b> of the package file <b>133</b> can also be stored in association with the package file <b>133</b>. The package identifier <b>149</b> is a unique identifier that uniquely identifies a package file <b>133</b> with respect to other package files <b>133</b>. The package identifier <b>149</b> could include a character string representing a name and/or version of the application <b>156</b> installable by the package file <b>133</b>, an application <b>156</b> serial number, a GUID, a UUID, or other identifier that is suitable for the same or similar purpose. The configuration settings <b>153</b> represent how the application <b>156</b> should be configured when installed using the package file <b>133</b>. For example, the configuration settings <b>153</b> could specify various application settings to enable or disable or various application permission to enable or disable. Where the same application <b>156</b> could be installed for multiple classes of users with different settings or permissions to be set or enabled, different package files <b>133</b> for the same application <b>156</b> can be created which use or contain different configuration settings <b>153</b>. The application <b>156</b> represents the installable binary application or similar asset that can be installed on a client device <b>103</b> using the package file <b>133</b>.</p><p id="p-0017" num="0016">The cryptographic hash <b>157</b> represents a precomputed hash of the package file <b>133</b> using a cryptographic hash function, such as md5, SHA1, SHA2, etc. The cryptographic hash <b>157</b> can be used verify the package file <b>133</b> has not been corrupted or altered. For example, a change to the package file <b>133</b> would result in a change to the cryptographic hash <b>157</b>. The cryptographic hash <b>157</b> may be precomputed, for example, by the provisioning service <b>113</b> once a package file <b>133</b> is uploaded and stored in the data store <b>116</b>.</p><p id="p-0018" num="0017">The cryptographic signature <b>158</b> represents a signature of the package file <b>133</b> using a signing certificate <b>139</b>. For example, the provisioning service <b>113</b> can use a signing certificate <b>139</b> to generate a cryptographic signature <b>158</b> in order for other applications or services to confirm that the provisioning service <b>113</b> is the source of the package file <b>133</b> that is received. In some implementations, the signing certificate <b>139</b> is a certificate <b>139</b> issued by a certificate authority <b>119</b> trusted by the applications or services involved in the transmission of the package file <b>133</b> (e.g., the client device <b>103</b> and the computing environment <b>101</b> or provisioning service <b>113</b>).</p><p id="p-0019" num="0018">The device record <b>136</b> can represent information about individual client devices <b>103</b> registered with or known to the management service <b>109</b> or the provisioning service <b>113</b>. A device record <b>159</b> can include a device identifier <b>159</b> that uniquely identifies a device record <b>136</b> for a client device <b>103</b> with respect to other device records <b>136</b>. For example, the device identifier <b>159</b> could include a device or machine name, a device serial number, a media access control (MAC) address of a network interface installed on the client device, an international mobile equipment identifier (IMEI) assigned to the client device, a GUID or UUID previously assigned to the client device <b>103</b>, or other suitable identifier. The device record <b>159</b> can also include a list of installed packages <b>163</b> currently or previously installed on the client device <b>103</b>. For example, the list of installed packages <b>163</b> could include a collection of package identifiers <b>149</b> representing all package files <b>133</b> that have been assigned to or are currently assigned to the client device <b>103</b>.</p><p id="p-0020" num="0019">The certificates <b>139</b> can represent electronic documents that can certify or prove the ownership of a public key by a particular service, party, user, device, or entity. Certificates <b>139</b> may be formatted in various ways, such as the X.509 certificate format. Moreover, certificates <b>139</b> can be issued by a certificate authority <b>119</b> to various services, parties, users, devices, or entities and their status (e.g., valid, revoked, etc.) can be tracked by the certificate authority <b>119</b>.</p><p id="p-0021" num="0020">The management service <b>109</b> can be executed to administer the operation of client devices <b>103</b> registered or otherwise enrolled with the management service <b>109</b>. To this end, the management service <b>109</b> can also provide mechanisms for a client device <b>103</b> to enroll or otherwise register with the management service <b>116</b>. The management service <b>116</b> can also enforce the use of various compliance policies. For example, the management service <b>116</b> may notify the provisioning service <b>113</b> of a set of package files <b>133</b> that are to be installed on a specific client device <b>103</b> or for a specific user account <b>129</b>.</p><p id="p-0022" num="0021">The provisioning service <b>113</b> can be executed to identify a set of package files <b>133</b> to be provided to or installed on a client device <b>103</b> and provide copies of the individual package files <b>133</b> to the client device <b>103</b>. For example, in response to a logon for a user account <b>129</b>, the provisioning service <b>113</b> might identify individual package files <b>133</b> specified for the user account <b>129</b>. In response, the provisioning service <b>113</b> can provide copies of those package files <b>133</b> to the client device <b>103</b> for installation and/or configuration. However, in some alternative implementations, the functionality provided by the provisioning service <b>113</b> can be implemented by the management service <b>109</b>. In such implementations, the provisioning service <b>113</b> may be viewed as a library, subcomponent, or process implemented or provided by the management service <b>109</b>.</p><p id="p-0023" num="0022">The discovery service <b>116</b> can be executed to facilitate the discovery or identification of a relevant or authorized provisioning service <b>113</b> by the client device <b>103</b>. The discovery service <b>116</b> may also provide a cryptographic certificate or public encryption key to the client device <b>103</b> for use in communicating with the provisioning service <b>113</b> as part of a public-key pinning or certificate pinning service.</p><p id="p-0024" num="0023">The certificate authority <b>119</b> can be executed to issue and validate cryptographic certificates. For example, the certificate authority <b>119</b> can issue cryptographic certificates to services or devices in response to a request for a certificate. The certificate authority <b>119</b> can also validate the authenticity of certificates that have been issued by the certificate authority <b>119</b>. For example, an application executing on the client device <b>103</b> may request that the certificate authority <b>119</b> validate a certificate issued to a service or server with which the client device <b>103</b> is interacting.</p><p id="p-0025" num="0024">The management console <b>113</b> can be executed to provide an administrative interface for configuring the operation of individual components in the network environment <b>100</b>. For example, the management console <b>113</b> can provide an administrative interface for the management service <b>109</b>, the provisioning service <b>113</b>, the discovery service <b>116</b>, and/or the certificate authority <b>119</b>. The management console <b>113</b> can also provide an interface for the configuration of policies applicable to user accounts <b>129</b> or the specification of package files <b>133</b> to be installed on client device <b>103</b> or for user accounts <b>129</b>. Accordingly, the management console <b>113</b> can correspond to a web page or a web application provided by a web server hosted in the computing environment <b>101</b>.</p><p id="p-0026" num="0025">The client device <b>103</b> is representative of a plurality of client devices that can be coupled to the network <b>106</b>. The client device <b>103</b> can include a processor-based system such as a computer system. Such a computer system may be a personal computer (e.g., a desktop computer, a laptop computer, or similar device), a mobile computing device (e.g., personal digital assistants, cellular telephones, smartphones, web pads, tablet computer systems, music players, portable game consoles, electronic book readers, and similar devices), media playback devices (e.g., media streaming devices, BluRay&#xae; players, digital video disc (DVD) players, set-top boxes, and similar devices), a videogame console, or other devices with like capability. The client device <b>103</b> can include one or more displays, such as liquid crystal displays (LCDs), gas plasma-based flat panel displays, organic light emitting diode (OLED) displays, electrophoretic ink (&#x201c;E-ink&#x201d;) displays, projectors, or other types of display devices. In some instances, the display may be a component of the client device <b>103</b> or may be connected to the client device <b>103</b> through a wired or wireless connection. The client device <b>103</b> can also be configured to execute various applications such as an operating system <b>166</b>, a provisioning agent <b>169</b>, and potentially other client applications.</p><p id="p-0027" num="0026">The operating system <b>166</b> is system software that can be executed to manage hardware and software resources of the client device <b>103</b> and provide common services for applications executed by the client device <b>103</b>. This can include facilities that identify and segregate or separate processes and resources belonging to multiple users and limiting user access to those processes and resources that belong to the user or to which the user has been granted permission. Examples of operating systems include various versions of MICROSOFT WINDOWS&#xae;, APPLE MACOS&#xae;, FREEBSD&#xae;, NETBSD&#xae;, various distributions of GNU/Linux (e.g., UBUNTU&#xae;, REDHAT&#xae;, etc.), APPLE IOS&#xae;, GOOGLE ANDROID&#xae;, and similar systems.</p><p id="p-0028" num="0027">The provisioning agent <b>169</b> can be executed to retrieve, install, and configure package files <b>133</b> on the client device <b>103</b> based at least in part on the current state of the client device <b>103</b>. The provisioning agent <b>169</b> can also be configured to verify or validate individual package files <b>133</b> to be installed on the client device <b>103</b>. The provisioning agent <b>169</b> can also be executed to check for updates to package files <b>133</b> and install any updated versions. In some implementations, the operating system <b>166</b> may provide the provisioning agent <b>169</b> with administrative rights to execute or perform the requisite functions.</p><p id="p-0029" num="0028">The client device <b>103</b> can also have a client data store <b>173</b> accessible to applications executing on the client device <b>103</b>. The client data store <b>173</b> can include relational databases, object-oriented databases, hierarchical databases, hash tables or similar key-value data stores, as well as other data storage applications or data structures. The data stored in the client data store <b>173</b> is associated with the operation of the various applications or functional entities described below. This data can include a user account identifier <b>143</b>, a device identifier <b>159</b>, device information <b>176</b>, and potentially other data.</p><p id="p-0030" num="0029">The device information <b>176</b> can represent information about the client device <b>103</b>, such as the owner of the client device <b>103</b>, the manufacturer and model of the client device <b>103</b>, state information related to the client device <b>103</b> (e.g., whether a user account <b>129</b> identified by a user account identifier <b>143</b> has previously logged onto the client device <b>103</b>, the current versions of package files <b>133</b> installed on the client device <b>103</b>, etc.), a management environment or domain to which the client device <b>103</b> is assigned or joined, and potentially other information. The device information <b>176</b> can be used by the provisioning agent <b>169</b> to identify an appropriate provisioning service <b>113</b> to communicate with or select appropriate package files <b>133</b> for installation on the client device <b>103</b>.</p><p id="p-0031" num="0030">Next, a general description of the operation of the various components of the network environment <b>100</b> is provided. More specific and detailed descriptions of the individual components of the network environment <b>100</b> are provided in the discussion of the subsequent figures.</p><p id="p-0032" num="0031">To begin, an IT employee or administrator configures one or more package files <b>133</b> for individual applications <b>156</b>. After the package files <b>133</b> are created and configured, the IT employee or administrator can upload them using the management console <b>113</b> for storage in the data store <b>116</b>. The IT employee or administrator can also assign individual package files <b>133</b> to specific user accounts or classes of user accounts <b>129</b>. For example, the IT employee or administrator can use the management console <b>113</b> to create one or more compliance policies with the management service <b>109</b> to specify individual user accounts <b>129</b> or groups of user accounts <b>129</b> to which a package file <b>133</b> or group of package files <b>133</b> is to be assigned.</p><p id="p-0033" num="0032">The IT employee or administrator can also configure a machine image containing an operating system <b>166</b> for a client device <b>103</b>. The machine image can also have the provisioning agent <b>169</b> preinstalled. The machine image can be used to configure or prepare client devices <b>103</b> for use by individual users (e.g., members or employees of the organization or enterprise). For example, whenever a new member or employee joins or is hired, a new computing device may be purchased and provisioned for the employee. The machine image containing the provisioning agent <b>169</b> may be installed on the client device <b>103</b>.</p><p id="p-0034" num="0033">The provisioning agent <b>169</b> included in the machine image can be configured to connect to the provisioning service <b>113</b> through several approaches. In the first approach, the provisioning agent <b>169</b> can be preconfigured to connect to a predefined uniform resource locator (URL) or internet protocol (IP) address specifying the discovery service <b>116</b>. In the second approach, the provisioning agent <b>169</b> can connect to a discovery service <b>116</b> by default. The provisioning agent <b>169</b> may provide device information <b>176</b> and/or a device identifier <b>159</b> to the discovery service <b>116</b>. In response, the discovery service <b>116</b> can provide the URL or IP address of the appropriate provisioning service <b>113</b> for the provisioning agent <b>169</b>. For example, if the provisioning agent <b>169</b> provided device information indicating that the device was owned by Company A and a device identifier <b>159</b> that was registered or enrolled with the management service <b>109</b> of Company A, the discovery service <b>116</b> could provide the URL or IP address for a provisioning service <b>113</b> operated by or on behalf of Company A instead of a provisioning service <b>113</b> for Company B.</p><p id="p-0035" num="0034">When a user logs onto the client device <b>103</b> for the first time and provides his or her account credentials (e.g., user account identifier <b>143</b> and authentication credentials), the provisioning agent <b>169</b> can detect the logon event and identify the user account identifier <b>143</b>. The provisioning agent <b>169</b> can then send a request to the provisioning service <b>113</b> for a set of package files <b>133</b> to install and configure on the client device <b>103</b> for the user. The request can include the user account identifier <b>143</b> and potentially other device information <b>176</b>.</p><p id="p-0036" num="0035">The provisioning service <b>113</b> can then reference the applicable packages <b>146</b> for the user account <b>129</b> matching the user account identifier <b>143</b> supplied by the provisioning agent <b>169</b>. The provisioning service <b>113</b> can then send copies of the package files <b>133</b> to the provisioning agent <b>169</b> in response. The provisioning service <b>113</b> may also provide a cryptographic hash <b>157</b> for each package file <b>133</b> and a cryptographic signature <b>158</b>. This can permit the provisioning agent <b>169</b> to verify that the package files <b>133</b> have not been altered by an outside or untrusted party.</p><p id="p-0037" num="0036">Once the provisioning agent <b>169</b> receives the appropriate package files <b>133</b> from the provisioning service <b>113</b>, the provisioning agent <b>169</b> can install and configure the package files <b>133</b> on the client device <b>103</b>. This can include, for example, installing the application <b>156</b> on the client device <b>103</b> and applying any specified configuration settings <b>153</b> to the application <b>156</b>. As part of the installation process, the provisioning agent <b>169</b> can also store the package identifier <b>149</b> for each package file <b>133</b> installed on the client device as a component of the device information <b>176</b>.</p><p id="p-0038" num="0037">During the installation process upon a user's first logon, the provisioning agent <b>169</b> may also render a message on the display of the client device <b>103</b> to inform the user that his or her system is being configured and that additional applications are being installed on his or her behalf. In some embodiments, a status indicator can also be provided to indicate to the user how much time remains for the provisioning agent <b>169</b> to install all of the appropriate package files <b>133</b>. Once installation of the package files <b>133</b> is complete, the logon process completes and the user is able to interact with his or her client device <b>103</b> as he or she would expect. A similar process may be performed if additional users logon to the client device <b>103</b> for the first time.</p><p id="p-0039" num="0038">In some implementations, the provisioning agent <b>169</b> can continue to periodically query the provisioning service <b>113</b> for updates to the package files <b>133</b> installed on the client device <b>103</b>. For example, the provisioning agent <b>169</b> can provide a list of package identifiers <b>149</b> to the provisioning service <b>113</b>. If any updated versions of an application <b>156</b> are available, the provisioning service <b>113</b> may provide a response with updated package files <b>133</b> to be installed by the provisioning agent <b>169</b>. The provisioning agent <b>169</b> could then install the updated package files <b>133</b> to the client device <b>103</b>.</p><p id="p-0040" num="0039">However, in some alternative implementations, one or more functions of the provisioning service <b>113</b> can be performed by the management service <b>109</b>. For example, a client device <b>103</b> may enroll with the management service <b>109</b>. As part of the enrollment process, the management service <b>109</b> may create a device record <b>136</b> for the client device <b>103</b> that includes the device information <b>176</b> and the device identifier <b>159</b> provided by the client device <b>103</b> as part of the enrollment process.</p><p id="p-0041" num="0040">In addition, a certificate <b>139</b> can be generated as part of the enrollment process, which can be provided to the client device <b>103</b> for future authentication with the management service <b>109</b> or the provisioning service <b>113</b>. The certificate <b>139</b> can be generated by the management service <b>109</b> itself or the certificate authority <b>119</b>. The certificate <b>139</b> can be provided to the client device <b>103</b> as part of a profile or policy sent to the client device <b>103</b> upon completion of the enrollment process. However, in some implementations, the certificate <b>139</b> can be generated by the client device <b>103</b> and provided to the management service <b>109</b> as part of the enrollment process. In these implementations, the certificate <b>139</b> may be stored by the management service <b>109</b> for future use or reference by the management service <b>109</b> or the certificate authority <b>119</b>.</p><p id="p-0042" num="0041">In response to the enrollment of the client device <b>103</b> with the management service <b>109</b>, the management service <b>109</b> may insert a command into a command queue stored in the data store <b>126</b>. The command can then be retrieved from the command queue by the provisioning agent <b>169</b> and executed or performed by the provisioning agent <b>169</b>. For example, the management service <b>109</b> may create and store in the command queue a command for the provisioning agent <b>169</b> to contact the provisioning service <b>113</b>. The command may include the URL of the provisioning service <b>113</b>. In response to receipt of the command, the provisioning agent <b>169</b> can then send a request to the provisioning service <b>113</b> for a set of package files <b>133</b> to install and configure on the client device <b>103</b> for the user. The request can include the user account identifier <b>143</b> and potentially other device information <b>176</b>. One or more package files <b>133</b> can then be retrieved by the provisioning agent <b>169</b> and installed on the client device <b>103</b> as previously described.</p><p id="p-0043" num="0042">Referring next to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, shown is a flowchart that provides one example of the operation of a portion of the provisioning agent <b>169</b>. It is understood that the flowchart of <figref idref="DRAWINGS">FIG. <b>2</b></figref> provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the provisioning agent <b>169</b>. As an alternative, the flowchart of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be viewed as depicting an example of elements of a method implemented by the client device <b>103</b>.</p><p id="p-0044" num="0043">Beginning with step <b>203</b>, the provisioning agent <b>169</b> can detect a logon event and determines whether the logon event is the first time a user account <b>129</b> has logged on to the client device <b>103</b>. For example, the provisioning agent <b>169</b> might determine the user account identifier <b>143</b> of the user account <b>129</b>. The provisioning agent <b>169</b> could then determine whether the user account <b>129</b> has logged onto the client device <b>103</b> previously by determining whether the user account identifier <b>143</b> has been previously stored with the device information <b>176</b>. If the user account <b>129</b> has not previously logged onto the client device <b>103</b>, then the process proceeds to step <b>206</b>. Otherwise, the process ends as the client device <b>103</b> has already been configured by the provisioning agent <b>169</b>.</p><p id="p-0045" num="0044">Then at step <b>206</b>, the provisioning agent <b>169</b> can send a query to the provisioning service <b>113</b>. The query can include the user account identifier <b>143</b> of the user account <b>129</b> logging on to the client device <b>103</b>. The query can cause the provisioning service <b>113</b> to determine which package files <b>133</b> are to be installed and configured on the client device <b>103</b> for the user account <b>129</b>.</p><p id="p-0046" num="0045">Next at step <b>209</b>, the provisioning agent <b>169</b> can receive one or more package files <b>133</b> from the provisioning service <b>113</b>. The package files <b>133</b> can be received in response to the query sent at step <b>306</b>. While the provisioning agent <b>169</b> waits to receive and install the package files <b>133</b>, the provisioning agent <b>169</b> may cause a message to be displayed within a user interface rendered on a display of the client device <b>103</b> to inform the user that the client device is being configured for their use. Once the package files <b>133</b> are received, the process proceeds to step <b>313</b>. If no package files <b>133</b> are received, this may indicate that the client device <b>103</b> needs no additional configuration, in which case the process ends.</p><p id="p-0047" num="0046">Proceeding to step <b>213</b>, the provisioning agent <b>169</b> can determine whether the received package files <b>133</b> have a valid cryptographic signature <b>158</b>. To confirm that the package files <b>133</b> are received from an authorized source, the provisioning service <b>113</b> can sign each package file <b>133</b> with a signing certificate <b>139</b> available to the provisioning service <b>113</b>. The provisioning agent <b>169</b> can use the public key specified in the signing certificate <b>139</b> to verify the cryptograph signatures <b>158</b> received. If the cryptographic signature <b>158</b> accompanying each package file <b>133</b> is valid, then the process proceeds to step <b>316</b>. However, if a cryptographic signature <b>158</b> is determined to be invalid, this could mean that an unauthorized third-party is attempting to induce the provisioning agent <b>169</b> into installing unauthorized package files <b>133</b> onto the client device <b>103</b>. Accordingly, the installation process would end if the provisioning agent <b>169</b> were to determine that the cryptographic signature <b>158</b> were invalid.</p><p id="p-0048" num="0047">Then at step <b>216</b>, the provisioning agent <b>169</b> can also confirm that a first cryptographic hash <b>157</b> sent by the provisioning service <b>113</b> for a package file <b>133</b> matches a second cryptographic hash <b>157</b> generated by the provisioning agent <b>169</b>. If the cryptographic hashes <b>157</b> match, then the provisioning agent <b>169</b> can determine that the package file <b>133</b> has not been altered or corrupted during transmission from the provisioning service <b>113</b> to the provisioning agent <b>169</b>. Accordingly, the installation process could then proceed to step <b>319</b>. However, if the hash values do not match, then the installation process could end or the provisioning agent <b>169</b> could request that the provisioning service <b>113</b> resend the package file <b>133</b> and/or accompanying hash (e.g., if the mismatched hash values were due to an error in transmission).</p><p id="p-0049" num="0048">Subsequently at step <b>219</b>, the provisioning agent <b>169</b> can install the received package files <b>133</b>. First, the provisioning agent <b>169</b> can install the application <b>156</b> included in the package file <b>133</b>. Upon installation, the provisioning agent <b>169</b> can also configure the installed application <b>156</b> according to the configuration settings <b>153</b> specified in the package file <b>133</b>. Once all of the received package files <b>133</b> have been received, installed, and configured, the installation process of the provisioning agent <b>169</b> ends and the logon process of the user can continue.</p><p id="p-0050" num="0049">Referring next to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, shown is a flowchart that provides one example of the operation of the provisioning service <b>113</b>. It is understood that the flowchart of <figref idref="DRAWINGS">FIG. <b>3</b></figref> provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the provisioning service <b>113</b>. As an alternative, the flowchart of <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be viewed as depicting an example of elements of a method implemented in the computing environment <b>101</b>.</p><p id="p-0051" num="0050">Beginning at step <b>303</b>, the provisioning service <b>113</b> can receive a query from the provisioning agent <b>169</b> for one or more package files <b>133</b>. The query can include a user account identifier <b>143</b> and potentially other information.</p><p id="p-0052" num="0051">Then at step <b>306</b>, the provisioning service <b>113</b> can identify the applicable packages <b>146</b> for a respective user account <b>129</b>. For example, the provisioning service <b>113</b> may perform a database query to search for the user account <b>129</b> referenced by the user account identifier <b>143</b>. The provisioning service <b>113</b> can then identify the package identifiers <b>149</b> included in the set of applicable packages <b>146</b> specified for the user account <b>129</b>.</p><p id="p-0053" num="0052">Subsequently at step <b>309</b>, the provisioning service <b>113</b> can return the appropriate set of applicable packages <b>146</b>. For each package identifier <b>149</b> included in the set of applicable packages <b>146</b> for the user account identified by the user account identifier <b>143</b>, the package identifier <b>149</b> may identify a package file <b>133</b> with a respective package identifier <b>149</b>. The provisioning service <b>113</b> can then send the package file <b>133</b> to the provisioning agent <b>169</b> along with the cryptographic hash <b>157</b> of the package file <b>133</b> and the cryptographic signature <b>158</b> of the package file <b>133</b>. Once the package files <b>133</b> specified in the set of applicable packages <b>146</b> for the user account <b>129</b> are sent to the requesting provisioning agent <b>169</b>, the process ends.</p><p id="p-0054" num="0053">Referring next to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, shown is a sequence diagram that provides one example of the interaction between various components of the network environment <b>100</b>, such as the provisioning service <b>113</b>, the discovery service <b>116</b>, and the provisioning agent <b>169</b>. It is understood that the sequence diagram of <figref idref="DRAWINGS">FIG. <b>4</b></figref> provides merely an example of the many different sequences of interactions between the components of the network environment <b>100</b>.</p><p id="p-0055" num="0054">Beginning with step <b>403</b>, the discovery service <b>116</b> can be configured with address information for a provisioning service <b>113</b>. For example, an administrative user may provide through the management console <b>113</b> a URL and/or IP address for the provisioning service <b>113</b> used by his or her organization or enterprise. The administrative user could also provide a public encryption key or public key certificate <b>139</b> for the provisioning service <b>113</b>, which some embodiments could use for implementations that make use of public key pinning or certificate pinning. In addition, the administrative user could provide a list of device identifiers <b>159</b> of client devices <b>103</b> that are to use the provisioning service <b>113</b> or specify an organizational identifier associated with the provisioning service <b>113</b> (e.g., any client device <b>103</b> that presents the specified organizational identifier would use the provisioning service <b>113</b>).</p><p id="p-0056" num="0055">Then at step <b>406</b>, a provisioning agent <b>169</b> can contact the discovery service <b>116</b> with a request for the identity of the provisioning service <b>113</b> to be used by the provisioning agent <b>169</b>. The provisioning agent <b>169</b> may provide an organizational identifier stored in the device information <b>176</b> of the client device <b>103</b> executing the provisioning agent <b>169</b> or a device identifier <b>159</b> of the client device <b>103</b>.</p><p id="p-0057" num="0056">Next at step <b>409</b>, the discovery service <b>116</b> can identify the provisioning service <b>113</b> to be used by the provisioning agent <b>169</b> based at least in part on the device identifier <b>159</b> or organizational identifier provided by the provisioning agent <b>169</b>. As part of the identification process, the discovery service <b>116</b> may determine the URL or IP address specified for the provisioning service <b>113</b> and any certificates <b>139</b> specified for the provisioning service <b>113</b>.</p><p id="p-0058" num="0057">Subsequently at step <b>413</b>, the discovery service <b>116</b> can return the URL or IP address and any associated certificates <b>139</b> (e.g., pinned certificates <b>139</b>) to the provisioning agent <b>169</b>.</p><p id="p-0059" num="0058">Then, at step <b>416</b>, the provisioning agent <b>169</b> can send a request for applicable package files <b>133</b> to the provisioning service <b>113</b>. The implementation of this step was previously described in further detail in the discussion of the flowchart of <figref idref="DRAWINGS">FIG. <b>2</b></figref> and the description of the network environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0060" num="0059">Next at step <b>419</b>, the provisioning service <b>113</b> can identify the applicable package files <b>133</b>. Subsequently at step <b>413</b>, the provisioning service <b>113</b> can provide the applicable package files <b>133</b> to the provisioning agent <b>169</b>. The implementation of these steps was previously described in further detail in the discussion of the flowchart of <figref idref="DRAWINGS">FIG. <b>3</b></figref> and the description of the network environment <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0061" num="0060">Although the management service <b>109</b>, provisioning service <b>113</b>, discovery service <b>116</b>, certificate authority <b>119</b>, management console <b>113</b>, provisioning agent <b>169</b>, and other various systems described herein can be embodied in software or code executed by general-purpose hardware as discussed above, as an alternative, the same can also be embodied in dedicated hardware or a combination of software/general purpose hardware and dedicated hardware. If embodied in dedicated hardware, each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies can include discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals, application specific integrated circuits (ASICs) having appropriate logic gates, field-programmable gate arrays (FPGAs), or other components.</p><p id="p-0062" num="0061">The flowcharts show examples of the functionality and operation of various implementations of portions of components described in this application. If embodied in software, each block can represent a module, segment, or portion of code that can include program instructions to implement the specified logical function(s). The program instructions can be embodied in the form of source code that can include human-readable statements written in a programming language or machine code that can include numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code can be converted from the source code. If embodied in hardware, each block can represent a circuit or a number of interconnected circuits to implement the specified logical function(s).</p><p id="p-0063" num="0062">Although the flowcharts show a specific order of execution, it is understood that the order of execution can differ from that which is depicted. For example, the order of execution of two or more blocks can be scrambled relative to the order shown. In addition, two or more blocks shown in succession can be executed concurrently or with partial concurrence. Further, in some examples, one or more of the blocks shown in the drawings can be skipped or omitted.</p><p id="p-0064" num="0063">Also, any logic or application described herein that includes software or code can be embodied in any non-transitory computer-readable medium for use by or in connection with an instruction execution system such as, for example, a processor in a computer system or other system. In this sense, the logic can include, for example, statements including program code, instructions, and declarations that can be fetched from the computer-readable medium and executed by the instruction execution system. In the context of the present disclosure, a &#x201c;computer-readable medium&#x201d; can be any medium that can contain, store, or maintain the logic or application described herein for use by or in connection with the instruction execution system.</p><p id="p-0065" num="0064">The computer-readable medium can include any one of many physical media, such as magnetic, optical, or semiconductor media. More specific examples of a suitable computer-readable medium include solid-state drives or flash memory. Further, any logic or application described herein can be implemented and structured in a variety of ways. For example, one or more applications can be implemented as modules or components of a single application. Further, one or more applications described herein can be executed in shared or separate computing devices or a combination thereof. For example, a plurality of the applications described herein can execute in the same computing device, or in multiple computing devices.</p><p id="p-0066" num="0065">It is emphasized that the above-described examples of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications can be made to the above-described embodiments without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>Therefore, the following is claimed:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system for automatically provisioning applications, comprising:<claim-text>at least one computing device comprising a processor and a memory; and</claim-text><claim-text>machine-readable instructions stored in the memory that, when executed by the processor, cause the at least one computing device to:<claim-text>detect a logon event for the at least one computing device, the logon event being associated with a user account;</claim-text><claim-text>provide a query to a provisioning service for a set of packages to install on the at least one computing device;</claim-text><claim-text>receive the set of packages from the provisioning service;</claim-text><claim-text>verify that the set of packages is received from an authorized source; and</claim-text><claim-text>install, on the at least one computing device, individual packages from the set of packages.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the set of packages is based at least in part on a list of packages currently installed on the at least one computing device.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the query comprises an identifier for the user account and device information associated with the at least one computing device.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-readable instructions, when executed by the processor, further cause the at least one computing device to at least determine that the logon event is a first login event associated with the user account.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-readable instructions that cause the at least one computing device to verify that the set of packages is received from the authorized source further cause the at least one computing device to at least validate at least one cryptographic signature associated with the set of packages based at least in part on a public key specified in a signing certificate corresponding to the packages.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-readable instructions that cause the at least one computing device to install on the at least one computing device the individual packages from the set of packages further cause the at least one computing device to at least:<claim-text>cause an installation of an application included in an individual package from the set of packages; and</claim-text><claim-text>configure the application based at least in part on at least one configuration setting included in a file from the individual package.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-readable instructions, when executed by the processor, further cause the at least one computing device to at least confirm that a first hash from the provisioning service matches a second hash generated by a provisioning agent executing on the at least one computing device.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method for automatically provisioning applications, comprising:<claim-text>detecting a logon event for a client device, the logon event being associated with a user account;</claim-text><claim-text>sending a query to a provisioning service for a set of packages to install on the client device;</claim-text><claim-text>receiving the set of packages from the provisioning service;</claim-text><claim-text>verifying that the set of packages are received from an authorized source; and</claim-text><claim-text>installing, on the client device, individual packages in the set of packages.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the set of packages is based at least in part on a list of packages currently installed on the client device.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the query comprises an identifier for the user account and device information associated with the client device.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising determining that the logon event is a first login event associated with the user account.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein verifying that the set of packages is received from the authorized source further comprises validating at least one cryptographic signature associated with the set of packages based at least in part on a public key specified in a signing certificate corresponding to the packages.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein installing on the client device the individual packages from the set of packages further comprises:<claim-text>causing an installation of an application included in an individual packages from the set of packages; and</claim-text><claim-text>configuring the application based at least in part on at least one configuration setting included in a file from the individual package.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising confirming that a first hash from the provisioning service matches a second hash generated by a provisioning agent executing on the client device.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer-readable medium for automatically provisioning applications, the non-transitory computer-readable medium comprising machine-readable instructions that, when executed by a processor, cause a computing device to at least:<claim-text>detect a logon event for the at least one computing device, the logon event being associated with a user account;</claim-text><claim-text>send a query to a provisioning service for a set of packages to install on the at least one computing device;</claim-text><claim-text>receive the set of packages from the provisioning service, the set of packages being based at least in part on a list of packages currently installed on the at least one computing device;</claim-text><claim-text>verify that the set of packages are received from an authorized source; and</claim-text><claim-text>install, on the at least one computing device, individual packages in the set of packages.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the query comprises an identifier for the user account and device information associated with the at least one computing device.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the machine-readable instructions, when executed by the processor, further cause the at least one computing device to at least determine that the logon event is a first login event associated with the user account.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the machine-readable instructions that cause the at least one computing device to verify that the set of packages is received from the authorized source further cause the at least one computing device to at least validate at least one cryptographic signature associated with the set of packages based at least in part on a public key specified in a signing certificate corresponding to the packages.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the machine-readable instructions that cause the at least one computing device to install on the at least one computing device the individual packages from the set of packages further cause the at least one computing device to at least:<claim-text>cause an installation of an application included in an individual packages from the set of packages; and</claim-text><claim-text>configure the application based at least in part on at least one configuration setting included in a file from the individual package.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the machine-readable instructions that cause the at least one computing device to install on the at least one computing device the individual packages from the set of packages further cause the at least one computing device to at least:<claim-text>cause an installation of an application included in an individual packages from the set of packages; and</claim-text><claim-text>configure the application based at least in part on at least one configuration setting included in a file from the individual package.</claim-text></claim-text></claim></claims></us-patent-application>