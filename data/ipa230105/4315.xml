<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004316A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004316</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17932565</doc-number><date>20220915</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>38</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0644</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0665</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>064</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>3836</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5061</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0604</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0679</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Systems and Methods for Scaling Volumes Using Volumes Having Different Modes of Operation</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17093595</doc-number><date>20201109</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11449255</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17932565</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NetApp, Inc.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>BHOWMIK</last-name><first-name>Sushrut</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>PANARA</last-name><first-name>Amit</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>MAKAM</last-name><first-name>Sumith</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>KUMAR</last-name><first-name>Vinay</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>SIMHADRI</last-name><first-name>Varun</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>VENKETARAMAN</last-name><first-name>Sriram</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method, a computing device, and a non-transitory machine-readable medium for managing modes of operation for volumes in a node. A first portion of a plurality of volumes in a node is selected to operate in an active mode. A second portion of the plurality of volumes in the node is selected to operate in a passive mode. The second portion of the volumes that operates in the passive mode consumes fewer resources than the first portion of the volumes that operates in the active mode. The first portion of the plurality of volumes and the second portion of the plurality of volumes are adjusted over time based on activity of each volume of the plurality of volumes.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="234.95mm" wi="138.35mm" file="US20230004316A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="248.16mm" wi="162.64mm" file="US20230004316A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="247.23mm" wi="162.14mm" file="US20230004316A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="247.23mm" wi="162.14mm" file="US20230004316A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="153.50mm" wi="150.54mm" file="US20230004316A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="256.37mm" wi="147.74mm" file="US20230004316A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="258.66mm" wi="164.17mm" file="US20230004316A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="245.53mm" wi="167.13mm" file="US20230004316A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="253.92mm" wi="162.81mm" file="US20230004316A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="226.23mm" wi="162.64mm" orientation="landscape" file="US20230004316A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a Continuation of U.S. patent application Ser. No. 17/093,595, filed Nov. 9, 2020, the disclosure of which is hereby incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present description relates to scaling volumes, and more specifically, to systems and methods for scaling volumes using volumes that have different modes of operation.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Data management services include services such as, but not limited to, capturing snapshots, mirroring, generating backups, cloning, ensuring storage efficiency, and providing storage security. Using various configurations and policies in association with these data management services may require a user to host a large number of data volumes on a storage node. This type of volume scaling, however, presents certain challenges. For example, as the number of volumes provisioned increases, volume mount time may increase (e.g., proportionately). Increased volume mount times may negatively impact failover timing. Failover may include switching to a redundant component (e.g., volume) in response to a failure or abnormal termination of a previously employed component. Further, as the number of volumes provisioned increases, the required memory footprint and cleaning overhead of dirty buffers increases. Still further, each volume in a node typically has its own background systems and is independently scheduled by a scheduling system. This scheduling may become increasingly more complex and/or more difficult as the number of volumes provisioned increases. The above-described issues may contribute to reduced overall system performance of the storage node.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004">The present disclosure is best understood from the following detailed description when read with the accompanying figures.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating a volume mode controller in accordance with one or more example embodiments.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating transitioning between different modes of operation for a volume in accordance with one or more example embodiments.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating transitioning between different modes of operation for a volume in accordance with one or more example embodiments.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram of a process for managing the modes of operation for volumes within a node in accordance with one or more example embodiments.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow diagram of a process for managing the mode of operation of a volume in accordance with one or more example embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram of a process for managing the mode of operation of a volume in accordance with one or more example embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a process for managing the mode of operation of a volume in accordance with one or more example embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating a computing environment in accordance with one or more example embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating a network environment in accordance with one or more example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">All examples and illustrative references are non-limiting and should not be used to limit the claims to specific implementations and examples described herein and their equivalents. For simplicity, reference numbers may be repeated between various examples. This repetition is for clarity only and does not dictate a relationship between the respective examples. Finally, in view of this disclosure, particular features described in relation to one aspect or example may be applied to other disclosed aspects or examples of the disclosure, even though not specifically shown in the drawings or described in the text.</p><p id="p-0016" num="0015">Various embodiments described herein include methods, systems, and machine-readable media (e.g., computer program products) for scaling volumes using volumes that have different modes of operations. The embodiments described herein enable scaling volumes using thin provisioning of volumes that are capable of operating with different modes of operation. In particular, the embodiments described enable managing the modes of operation for volumes within nodes (e.g., storage nodes) and limiting the number of volumes that are operating at full capacity (e.g., in a fully privileged manner) to conserve resources. In one or more embodiments, volumes operating in an active mode are fully functional and may be referred to as active volumes. Volumes that operate in a passive mode are partially functional and may be referred to as passive volumes. In some embodiments, volumes may be capable of operating in a semi-active mode that makes the volume partially functional. These volumes may be referred to as semi-active volumes. Semi-active volumes may be less functional than active volumes but more functional than passive volumes.</p><p id="p-0017" num="0016">The number of volumes that are allowed to operate in an active mode within a node may be limited to a maximum number to ensure sufficient resources and system performance. In some cases, this limiting occurs by limiting the ratio of active volumes to passive volumes within a node to at or below a maximum ratio. In one or more embodiments, this maximum ratio is selected based on the maximum number of volumes that can be made fully functional (i.e., active) without affecting quality operating system (QOS) requirements or reducing performance outside of selected tolerances. Because a volume in passive mode uses fewer resources than a volume in active mode, this mode may also be referred to as a low-resource mode. Further, a volume in passive mode operates in a low cost and low maintenance manner as compared to when that same volume is in active mode. The flow between active mode and passive mode for the volumes in a node is controlled to provide volume scaling in a manner that meets requirements and provides improved overall system performance.</p><p id="p-0018" num="0017">The embodiments provide methods, systems, and computer program products for managing the mode or state of the various volumes in multiple nodes of a data management system and the transitions between active mode and passive mode. In one or more embodiments, a volume in passive mode may be transitioned to active mode in response to at least one activation event occurring. The activation event may include, for example, a write request, a snapshot request, a mirror request, another type of request that requires or may be better performed with the volume being fully functional, or a combination thereof. When the activation event is detected, a mode of operation for the volume is changed (or transitioned) from the passive mode to the active mode to enable regular or normal operation with respect to that activation event.</p><p id="p-0019" num="0018">In one or more embodiments, a volume in active mode may be transitioned to passive mode in response to a trigger event occurring. The trigger event may include, for example, an excess number of volumes being in active mode, inactivity of the volume for more than a preselected period of time, some other type of event, or a combination thereof. In various embodiments, the trigger event is an activity score for the volume dropping below a selected threshold. When at least one trigger event is detected, the mode of operation for the volume is changed from the active mode to the passive mode to reduce the resources being used by that volume and allow those resources to be used by another volume.</p><p id="p-0020" num="0019">In this manner, resource usage within a node is conserved and allocated to those volumes with an increased need for resources, such as those with increased write activity. This type of volume provisioning enables a greater number of volumes to be supported by a single node. As one example, a single node may be capable of supporting up to and, in some cases over, 5,000 volumes. Further, such volume provisioning may allow increased overall system and computing performance because resources that might have otherwise been devoted to some nodes may be used instead for other computing or storage activities.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating a volume mode controller <b>100</b> in accordance with one or more example embodiments. The volume mode controller <b>100</b> may be implemented using hardware, software, firmware, or a combination thereof. In one or more embodiments, the volume mode controller <b>100</b> is implemented in an operating system <b>101</b>. The operating system <b>101</b> is a storage operating system that may be hosted by distributed computing platform <b>102</b>, may be installed in set of storage nodes <b>103</b>, or both. Set of storage nodes <b>103</b> may include, for example, one or more data storage tiers, one or more data storage apparatuses, one or more data storage nodes within one or more data storage apparatuses, respectively, one or more cloud storage nodes, or a combination thereof. Examples of these different types of storage nodes are described in further detail in <figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref> below.</p><p id="p-0022" num="0021">In one or more embodiments, the operating system <b>101</b> is implemented on a storage node, such as storage node <b>104</b> of set of storage nodes <b>103</b>. In some examples, the storage node <b>104</b> may take the form of an external storage array. In these examples, a client, such as a client <b>106</b>, may communicate, via one or more intermediaries (e.g., one or more web services, one or more node computing devices, or a combination thereof), with the storage node <b>104</b> to create, delete, rename, or otherwise modify files that are stored in the storage node <b>104</b>. For example, the client <b>106</b> may initiate any number of write requests, read requests, snapshot requests, mirror requests, copy requests, or a combination thereof.</p><p id="p-0023" num="0022">The storage node <b>104</b> may support any number of volumes <b>108</b>. These volumes <b>108</b> may also be referred to as data containers. In one or more embodiments, each of the volumes <b>108</b> is a FlexVol volume. A FlexVol volume is a volume that is loosely coupled to its containing aggregate. A FlexVol volume can share its containing aggregate with other FlexVol volumes. Thus, a single aggregate can be the shared source of all the storage used by all the FlexVol volumes contained by that aggregate. An aggregate may be, for example, a group of physical data storage resources (e.g., drives, logical unit numbers (LUNs), etc.).</p><p id="p-0024" num="0023">Each of the volumes <b>108</b> in the storage node <b>104</b> has a mode of operation. For example, the volumes <b>108</b> may include a volume <b>112</b> having a mode of operation <b>110</b>. The mode of operation <b>110</b> for the volume <b>112</b> at any given time determines the amount of resources that the volume <b>112</b> uses at that time. Further, the mode of operation <b>110</b> determines the functional capabilities (e.g., fully functional or partially functional) of the volume <b>112</b> at any given time. The mode of operation <b>110</b> is selected from a plurality of modes <b>113</b>. The modes <b>113</b> may include different modes for different configurations of volume mode controller <b>100</b>. In some embodiments, the modes <b>113</b> include an active mode <b>114</b> and a passive mode <b>115</b>. In other embodiments, the modes <b>113</b> include the active mode <b>114</b>, the passive mode <b>115</b>, and a semi-active mode <b>116</b>. A volume, such as volume <b>112</b>, may be referred to as an active volume while in the active mode <b>114</b>, as a passive volume while in the passive mode <b>115</b>, and as a semi-active volume while in the semi-active mode <b>116</b>.</p><p id="p-0025" num="0024">The volume mode controller <b>100</b> manages the mode of operation for each of the volumes <b>108</b>. For example, the volume mode controller <b>100</b> controls the transitions between different modes for the volumes <b>108</b>. The volume mode controller <b>100</b> uses thin provisioning in conjunction with these different modes to provide volume scaling for the storage node <b>104</b> in a manner that does not overtax the storage node <b>104</b>. In particular, this type of thin provisioning enables a greater number of volumes <b>108</b> to be supported by storage node <b>104</b>.</p><p id="p-0026" num="0025">When a volume, such as the volume <b>112</b>, is in the active mode <b>114</b>, the volume <b>112</b> operates in a fully privileged manner. In other words, the volume <b>112</b> is a fully functioning or fully operating volume. When a volume, such as volume <b>112</b>, is in passive mode <b>115</b>, the volume <b>112</b> operates in a partially privileged manner. In other words, the volume <b>112</b> is a partially functioning or partially operating volume. In one or more embodiments, the level of functionality or activity for the volume <b>112</b> is determined based on how the volume <b>112</b> handles write allocations <b>118</b>, internal activity <b>120</b>, input/output activity <b>122</b>, responsiveness <b>124</b>, memory usage <b>126</b>, mounting <b>128</b>, one or more other activities, or a combination thereof.</p><p id="p-0027" num="0026">Write allocations <b>118</b> involve writing data to memory (e.g., adding data to data buffers/cache, etc.) and logging this write activity. This writing may be referred to as dirtying the memory. After some period of time of writing and/or after writing, the accumulated data is transferred to a physical or cloud space (e.g., written to disk). This transferring may also be referred to as cleaning the memory. The point in time at which this transfer occurs may be referred to as a &#x201c;consistency point&#x201d; (CP). The resources used to perform such writes and transfers may be more than desired even when the amount of data being written or transferred is small. For example, in certain cases, cleaning 1 byte of data may use the same resources as cleaning 1,000 bytes of data.</p><p id="p-0028" num="0027">Internal activity <b>120</b> includes, for example, but is not limited to, block free processing, scans, one or more other internal background systems or subsystems, or a combination thereof. Block free processing may include, for example, but is not limited to, garbage or trash collection, cleanup, zombie processing, disk free processing, one or more other types of processing activity, or a combination thereof. Scans may include, for example, but are not limited to, defragmentation scans, background reading activity, decompression scans, directory indexing, one or more other scan processes, or a combination thereof.</p><p id="p-0029" num="0028">Input/output activity <b>122</b> includes write activity and read activity initiated by client request. Responsiveness <b>124</b> indicates whether a volume responds to an incoming client request such as, for example, a write request, a copy (e.g., snapshot) request, or both. Memory usage <b>126</b> refers to the memory footprint of a volume. This memory footprint is determined by the amount of memory (e.g., the number of data structures) used or consumed by the volume.</p><p id="p-0030" num="0029">Mounting <b>128</b> refers to how a volume, such as the volume <b>112</b>, is mounted on a corresponding storage node when the storage node <b>104</b> belongs to a high-availability (HA) pair of storage nodes. For example, when the storage node can no longer function as desired, the partner storage node in the HA pair can take over storage node <b>104</b>'s storage to provide continued data services. As part of this takeover, the volumes of the storage node <b>104</b> are mounted to the partner storage node. In one or more embodiments, the current mode of operation for each of the volumes <b>108</b> in the storage node <b>104</b> at the time the storage node <b>104</b> goes down determines the prioritization of the volumes <b>108</b> with respect to mounting <b>128</b>. For example, the mode of operation <b>110</b> of the volume <b>112</b> determines how quickly and/or in what order the volume <b>112</b> is mounted.</p><p id="p-0031" num="0030">By controlling the mode of operation <b>110</b> for the volume <b>112</b> at any given point in time, the volume mode controller <b>100</b> controls how the volume <b>112</b> handles each of write allocations <b>118</b>, internal activity <b>120</b>, input/output activity <b>122</b>, responsiveness <b>124</b>, memory usage <b>126</b>, and mounting <b>128</b> at that time. The volume mode controller <b>100</b> monitors the activity of the volume <b>112</b> and generates an activity score <b>130</b> for the volume <b>112</b>. The volume mode controller <b>100</b> updates this activity score <b>130</b> based on how the activity of the volume <b>112</b> changes over time. In one or more embodiments, the volume mode controller <b>100</b> includes an activity manager <b>131</b> that monitors the activity of the volumes <b>108</b>, generates the activity score <b>130</b>, and updates the activity score <b>130</b>.</p><p id="p-0032" num="0031">The activity score <b>130</b> may depend on a number of factors. For example, the activity score <b>130</b> may take into account the amount and type of input/output activity <b>122</b> occurring, the most recent input/output action (or event) that occurred, the nature of the most recent input/output action (e.g., whether the action was a write or a read), or a combination thereof. In some examples, the activity score <b>130</b> takes into account ongoing operations such as snapshot operations, mirroring operations, etc. In some examples, the activity score <b>130</b> takes into account pending internal activity <b>120</b> (e.g., pending block free processing activities, pending scans, etc.). Different processes or activities considered part of the internal activity <b>120</b> may be weighted differently in the calculations or computations used to generate and update the activity score <b>130</b>. Certain processes or activities that have been waiting or pending for longer period of times may increase the activity score <b>130</b>.</p><p id="p-0033" num="0032">In one or more embodiments, the activity score <b>130</b> is a total score that includes or is based on the combination of a write activity score and an internal activity score. In some cases, one or more other types of scores may be used to compute the total score. The write activity score may be based on a write activity portion of the input/output activity <b>122</b> for the volume <b>112</b>. This write activity portion may be, for example, the number of write requests that the volume <b>112</b> has received within a certain period of time (e.g., 50 milliseconds, 1 second, 10 seconds, 20 seconds, 1 minute, 5 minutes, etc.). In some embodiments, the internal activity score is based on internal activity <b>120</b> (or background activity). In one or more embodiments, the write activity score is weighted higher than the internal activity score such that greater emphasis is placed on write activity.</p><p id="p-0034" num="0033">In one or more embodiments, the volume mode controller <b>100</b> transitions the volume <b>112</b> from the active mode <b>114</b> to the passive mode <b>115</b> in response to a trigger event <b>132</b>. The trigger event <b>132</b> may be, for example, the activity score <b>130</b> dropping below a selected threshold, an excess number of volumes being in the active mode <b>114</b>, inactivity of the volume <b>112</b> for more than a preselected period of time, another type of event, or a combination thereof. In some cases, this transition process is managed and controlled by a resource reclaimer <b>133</b>. In one or more examples, the resource reclaimer <b>133</b> is referred to as a scavenger.</p><p id="p-0035" num="0034">In one or more embodiments, the volume mode controller <b>100</b> transitions the volume <b>112</b> from the passive mode <b>115</b> to the active mode <b>114</b> in response to an activation event <b>134</b>. The activation event <b>134</b> may take the form of, for example, a compulsive activation event, a suggestive activation event, or both. A compulsive activation event triggers the transition from the passive mode <b>115</b> to the active mode <b>114</b> instantly (or near instantly). Examples of a compulsive activation event include, but are not limited to, an incoming write request, a request for a snapshot operation, a request for a mirror operation, a manual initiation (e.g., by a human administrator) of a scanner, some other type of event, or a combination thereof. A transition from the passive mode to the active mode <b>114</b> based on a compulsive activation event may be referred to as an &#x201c;on-demand&#x201d; transition.</p><p id="p-0036" num="0035">A suggestive activation event is an event that suggests to the volume mode controller <b>100</b> that the volume <b>112</b> should be promoted from passive mode <b>115</b> to the active mode <b>114</b>. In some examples, the suggestive activation event does not instantly initiate this transition. For example, a suggestive activation event may increase the activity score <b>130</b> of the volume <b>112</b>, may move the volume <b>112</b> up in the queue of volumes to be transitioned to the active mode <b>114</b>, or may cause the volume <b>112</b> to transition to the active mode <b>114</b> in some other manner. The suggestive activation event may be that the pending internal activity <b>120</b> meets one or more criteria. For example, the suggestive activation event may be, but is not limited to, a cleanup operation that has been pending for at least a selected period of time, an amount of garbage collection activity that has been pending for at least a selected period of time, the amount of garbage collection activity reaching a threshold activity level, another type of event, or a combination thereof.</p><p id="p-0037" num="0036">Examples of how a volume, such as volume <b>112</b>, may be transitioned between different modes of operation is described in greater detail below with respect to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>.</p><p id="p-0038" num="0037">In one or more embodiments, the volume mode controller <b>100</b> manages a plurality of trackers <b>136</b>. These trackers <b>136</b> track various parameters corresponding to each storage node of the storage nodes <b>103</b> (e.g., storage node <b>104</b>) and the volumes in each storage node (e.g., the volumes <b>108</b> in the storage node <b>104</b>). The trackers <b>136</b> may include, for example, one or more counters, one or more score trackers, one or more other types of trackers, or a combination thereof.</p><p id="p-0039" num="0038">In one or more embodiments, the trackers <b>136</b> include, for each storage node of the set of storage nodes <b>103</b>, a counter for a number of active-to-passive (A2P) transitions occurring at any given point in time, a counter for a number of passive-to-active (P2A) transitions occurring at any given point in time, a tracker identifying a rate at which these different transitions are occurring, a counter for a number of active volumes, a counter for a number of passive volumes, a tracker identifying a central processing unit (CPU) overhead of the thin provisioning implemented by the volume mode controller <b>100</b>, or a combination thereof. In one or more embodiments, the trackers <b>136</b> may include, for each volume in a storage node (e.g., each of the volumes <b>108</b> in the storage node <b>104</b>), a score tracker that tracks the activity score (e.g., activity score <b>130</b>) of that volume, a counter for a number of active-to-passive transitions that have occurred, a counter for a number of passive-to-active transitions that have occurred, or a combination thereof.</p><p id="p-0040" num="0039">In some embodiments, the trackers <b>136</b> further include, for each active-to-passive-transition that occurs, a tracker identifying the total time taken for this transition, a tracker identifying the time taken to drain internal messages as part of this transition, a tracker identifying a volume identifier or name of the volume that underwent or is undergoing the transition, a tracker identifying the activity score (e.g., activity score <b>130</b>) of the volume at the time of the transition, or a combination thereof. In some embodiments, the trackers <b>136</b> include, for each passive-to-active transition that occurs, a tracker identifying the activation event that triggered this transition, the volume identifier or name of the volume that underwent or is undergoing the transition, a tracker identifying the activity score of the volume at the time of the transition, a tracker identifying any delay that occurs with the transition due to too many volumes being in an active mode at the time of the transition, or a combination thereof.</p><p id="p-0041" num="0040">In other embodiments, the trackers <b>136</b> may include trackers for when the modes <b>113</b> also include the semi-active mode <b>116</b>. For example, the trackers <b>136</b> may include trackers for identifying information with respect to semi-active-to-active transitions, semi-active-to-passive transitions, active-to-semi-active transitions, passive-to-semi-active transitions, or a combination thereof.</p><p id="p-0042" num="0041">The volume mode controller <b>100</b> may use the trackers <b>136</b> to generate one or more reports about the efficiency of mode transitions within each storage node of the set of storage nodes <b>103</b>. Further, the volume mode controller <b>100</b> may collect the data identified by the trackers <b>136</b> at various intervals (e.g., every 3 minutes, every 5 minutes, every 10 minutes, etc.) and archive this data for future use.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating the transitioning between different modes of operation for the volume <b>112</b> from <figref idref="DRAWINGS">FIG. <b>1</b></figref> in accordance with one or more example embodiments. The transitioning process described herein is one example of a manner in which the mode of operation <b>110</b> for volume <b>112</b>, as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, may be managed and transitioned between different ones of modes <b>113</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Thus, <figref idref="DRAWINGS">FIG. <b>2</b></figref> is described with ongoing reference to the elements described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0044" num="0043">In one or more embodiments, the volume <b>112</b> is transitioned from the active mode <b>114</b> to the passive mode <b>115</b> in response to a trigger event <b>132</b>. As previously described, the trigger event <b>132</b> may be the activity score <b>130</b> for the volume <b>112</b> dropping below a selected threshold. When the volume mode controller <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> detects the trigger event <b>132</b>, an active-to-passive (A2P) transition process <b>202</b> is initiated, placing the volume <b>112</b> in an active-to-passive (A2P) transition state <b>204</b>. With the volume <b>112</b> in the active-to-passive transition state <b>204</b>, various actions are performed as part of the active-to-passive transition process <b>202</b> to fully transition the volume <b>112</b> to the passive mode <b>115</b>. The volume <b>112</b> may still be considered in the active mode <b>114</b> while in the active-to-passive transition state <b>204</b>. Once the active-to-passive transition process <b>202</b> has been completed, the volume <b>112</b> is considered as being in the passive mode <b>115</b>.</p><p id="p-0045" num="0044">In one or more embodiments, the active-to-passive transition process <b>202</b> includes halting write allocations <b>118</b>, halting internal activity <b>120</b>, limiting input/output activity <b>122</b>, decreasing a priority of the volume <b>112</b> with respect to mounting <b>128</b>, reducing memory usage <b>126</b>, or a combination thereof. Transitioning the volume <b>112</b> from the active mode to the passive mode <b>115</b> does not substantially alter the responsiveness <b>124</b> of the volume <b>112</b> with respect to various client requests (e.g., write requests, snapshot requests, mirror requests, etc.). For example, any delays in responsiveness <b>124</b> may be negligible.</p><p id="p-0046" num="0045">Halting write allocations <b>118</b> may include, for example, taking a consistency point (CP) if the volume <b>112</b> has dirty buffers. Halting internal activity <b>120</b> may include, for example, stopping or pausing various internal and background processes. For examples, halting internal activity <b>120</b> may include placing scanners in a paused state so as to not lose any checkpoint progress made by the scanners. In some cases, placing scanners in a paused state places the scanners in an idle queue. Further, halting internal activity <b>120</b> may include stopping or pausing block free processing activity. In some embodiments, halting internal activity <b>120</b> includes sending any global messages corresponding to background processes back into the pool for future processing and ensuring that no new processes (or jobs) are assigned to the volume <b>112</b>.</p><p id="p-0047" num="0046">When the volume <b>112</b> is in the passive mode <b>115</b>, limiting input/output activity <b>122</b> includes allowing read activity (e.g., in response to client read requests) but blocking or otherwise preventing any write activity. However, because the volume <b>112</b> is still considered active while in the active-to-passive transition state <b>204</b>, write activity may still be allowed during the active-to-passive transition process <b>202</b> until the volume <b>112</b> fully becomes passive.</p><p id="p-0048" num="0047">Reducing memory usage <b>126</b> may include, for example, releasing the memory consumed by the internal activity <b>120</b> that is halted (e.g., stopped or paused). Decreasing a priority of the volume <b>112</b> with respect to mounting <b>128</b> includes ensuring that the volume <b>112</b>, in the passive mode <b>115</b>, is mounted to a partner storage node (e.g., the other node of a HA pair to which the storage node <b>104</b> belongs) after any active volumes have been mounted. In other words, the priority of the volume <b>112</b> is decreased with respect to mounting <b>128</b> in a high-availability scenario. In some embodiments, the active-to-passive transition process <b>202</b> further includes draining internal messages.</p><p id="p-0049" num="0048">In one or more embodiments, the volume <b>112</b> is transitioned from the passive mode <b>115</b> to the active mode <b>114</b> in response to an activation event <b>134</b>. As previously described, the activation event <b>134</b> may be, for example, an incoming write request, a request for a snapshot operation, a request for a mirroring operation, a request for an operation or process identified as critical, another type of request, or a combination thereof. In some cases, the activation event <b>134</b> may be the activity score <b>130</b> of the volume <b>112</b> increasing above a selected threshold (e.g., an active threshold).</p><p id="p-0050" num="0049">When the volume mode controller <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> detects the activation event <b>134</b>, a passive-to-active (P2A) transition process <b>206</b> is initiated, placing the volume <b>112</b> in a passive-to-active (P2A) transition state <b>208</b>. Various actions are performed as part of the passive-to-active transition process <b>206</b>, with the volume <b>112</b> in the passive-to-active transition state <b>208</b>, to fully place the volume <b>112</b> in the passive mode <b>115</b>. The passive-to-active transition process <b>206</b> includes resuming write allocations <b>118</b>, resuming internal activity <b>120</b>, enabling all input/output activity <b>122</b>, increasing a priority of the volume <b>112</b> with respect to mounting <b>128</b>, enabling full memory usage <b>126</b>, or a combination thereof.</p><p id="p-0051" num="0050">In some embodiments, the volume <b>112</b> may be considered in the active mode <b>114</b> while in the passive-to-active transition state <b>208</b>. This ensures that certain operations (e.g., incoming write requests, snapshot operations, mirroring operations, etc.) are not delayed while the volume <b>112</b> is transitioning. This type of passive-to-active transition process <b>206</b> helps ensure that a user or client experiences no substantial delay in how the volume <b>112</b> responds to requests for these types of operations.</p><p id="p-0052" num="0051">In other examples, the volume <b>112</b> may be considered in the passive mode <b>115</b> while in the passive-to-active transition state <b>208</b>. In these other examples, once the passive-to-active transition process <b>208</b> has been completed, the volume <b>112</b> is then considered as being in the active mode <b>114</b>.</p><p id="p-0053" num="0052">In certain instances, an activation event <b>134</b> is detected while the volume <b>112</b> is undergoing the active-to-passive transition process <b>202</b>. In these instances, the active-to-passive transition process <b>202</b> is halted and the passive-to-active transition process <b>206</b> described above is initiated. Initiating the passive-to-active transition process <b>206</b> causes the volume <b>112</b> to enter the passive-to-active transition state <b>208</b>.</p><p id="p-0054" num="0053">In other instances, a trigger event <b>132</b> is detected while the volume <b>112</b> is undergoing the passive-to-active transition process <b>206</b>. In these instances, the passive-to-active transition process <b>206</b> is halted and the active-to-passive transition process <b>202</b> as described above is initiated. Initiating the active-to-passive transition process <b>202</b> causes the volume <b>112</b> to enter the active-to-passive-transition state <b>204</b>.</p><p id="p-0055" num="0054">In one or more embodiments, the passive-to-active transition process <b>206</b> is only initiated in response to an activation event <b>134</b> when the number of volumes in the active mode <b>114</b> is within limits. For example, in response to detecting the activation event <b>134</b>, the volume mode controller <b>100</b> may initiate the passive-to-active transition process <b>206</b> if the number of volumes in the active mode <b>114</b> is below (or at) an active volume threshold. The active volume threshold may be, for example, a maximum active volume threshold based on a maximum number of active volumes allowed at any point in time or a maximum ratio of active to passive volumes allowed at any point in time.</p><p id="p-0056" num="0055">If the number of volumes in the active mode <b>114</b> is above (or at) the maximum active volume threshold, the volume mode controller <b>100</b> may suspend operations associated with the activation event <b>134</b> and wait to initiate the passive-to-active transition process <b>206</b> until the number of volumes in the active mode <b>114</b> decreases to at or below the active volume threshold. For example, the volume mode controller <b>100</b> may wait until the resource reclaimer <b>133</b> has reclaimed additional resources to handle the volume <b>112</b> being transitioned into the active mode <b>114</b> by transitioning one or more volumes from the active mode <b>114</b> to the passive mode <b>115</b>. Once the resources have been reclaimed such that the number of volumes in the active mode <b>114</b> has decreased to within limits, operations associated with the activation event <b>134</b>, such as the passive-to-active transition process <b>206</b>, may be resumed.</p><p id="p-0057" num="0056">In some cases, the number of active volumes may be beyond the maximum number of active volumes when an activation event <b>134</b> is detected during an active-to-passive transition process <b>202</b>. Any operations corresponding to the activation event <b>134</b> are suspended until the number of active volumes falls within limits. In some cases, the activation event <b>134</b> may &#x201c;time out&#x201d; while waiting for the number of active volumes to be within limits. When such a timeout occurs, the active-to-passive transition process <b>204</b> is completed, and the operations associated with the activation event <b>134</b> are resumed upon the number of active volumes falling within limits.</p><p id="p-0058" num="0057">In one or more embodiments, the transitioning of the volume <b>112</b> from the passive mode <b>115</b> to the active mode <b>114</b> constitutes a trigger event <b>132</b> that causes an active volume to transition to a passive volume. In some examples, this transition of an active volume to a passive volume is automatic and initiated by the resource reclaimer <b>133</b>. For example, the active volume having the lowest activity score <b>130</b> may be transitioned to a passive volume. In other examples, this type of transition is performed when the activity score <b>130</b> of the active volume has dropped below a selected threshold (e.g., a passive threshold) and is postponed when no volumes have an activity score below the passive threshold.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating the transitioning between different modes of operation for the volume <b>112</b> from <figref idref="DRAWINGS">FIG. <b>1</b></figref> in accordance with one or more example embodiments. The transitioning process described herein is one example of a manner in which the mode of operation <b>110</b> for volume <b>112</b>, as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, may be managed and transitioned between different ones of modes <b>113</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Thus, <figref idref="DRAWINGS">FIG. <b>3</b></figref> is described with ongoing reference to the elements described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The transitioning described in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be implemented in a manner similar to the transitioning described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, but with three different modes: the active mode <b>114</b>, the passive mode <b>115</b>, and the semi-active mode <b>116</b>.</p><p id="p-0060" num="0059">In one or more embodiments, the volume <b>112</b> may be transitioned between the active mode <b>114</b> and the passive mode <b>115</b> in a manner similar to the manner described above with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. However, the volume mode controller <b>100</b> takes into account additional information to determine when the active mode <b>114</b> should be changed to the semi-active mode <b>116</b> instead of the passive mode <b>115</b> and when the passive mode <b>115</b> should be changed to the semi-active mode <b>116</b> instead of the active mode <b>114</b>. The semi-active mode <b>116</b> may be considered a hybrid mode in that it includes aspects from both the active mode <b>114</b> and the passive mode <b>115</b>.</p><p id="p-0061" num="0060">When the volume <b>112</b> is in the semi-active mode <b>116</b>, input/output activity <b>122</b> may be fully enabled but internal activity <b>120</b> may be halted. Thus, in the semi-active mode <b>116</b>, the volume <b>112</b> consumes more resources than in the passive mode <b>115</b> but fewer resources than in the active mode <b>114</b>. Accordingly, the semi-active mode <b>116</b> may enable a greater overall amount of input/output activity to be performed within the storage node <b>104</b> as compared to when only the active mode <b>114</b> and the passive mode <b>115</b> are used.</p><p id="p-0062" num="0061">The volume mode controller <b>100</b> may transition the volume <b>112</b> from the active mode <b>114</b> to the semi-active mode <b>116</b> when the activity score <b>130</b> of the volume <b>112</b> is below a first selected threshold (or an active threshold) but above a second selected threshold (a passive threshold) used for the passive mode <b>115</b>. For example, without limitation, the activity score <b>130</b> may be normalized to have a value between 0 and 1. When the activity score <b>130</b> is below about 0.5 (the passive threshold), the active-to-passive transition process <b>202</b> may be initiated and the volume <b>112</b> placed in the active-to-passive transition state <b>204</b>. However, when the activity score <b>130</b> is below 0.75 (the active threshold) but greater than or equal to 0.5 (the passive threshold), an active-to-semi-active transition process <b>302</b> may be initiated and the volume <b>112</b> placed in the active-to-semi-active transition state <b>304</b> until the volume <b>112</b> is fully transitioned to the active mode <b>114</b>.</p><p id="p-0063" num="0062">During the active-to-semi-active transition process <b>302</b>, internal activity <b>120</b> is halted. In some embodiments, one or more other actions may also be taken.</p><p id="p-0064" num="0063">The volume mode controller <b>100</b> may transition the volume <b>112</b> from the semi-active mode <b>116</b> to the active mode <b>114</b> when the activity score <b>130</b> of the volume <b>112</b> is at or above the active threshold. Using the example above, a semi-active-to-active transition process <b>306</b> may be initiated when the activity score <b>130</b> is increased to or above 0.75, with the volume <b>112</b> being placed in the semi-active-to-active transition state <b>308</b>. During the semi-active-to-active transition process <b>306</b>, internal activity <b>120</b> is resumed. In some embodiments, one or more other actions may also be taken.</p><p id="p-0065" num="0064">The volume mode controller <b>100</b> may transition the volume <b>112</b> from the semi-active mode <b>116</b> to the passive mode <b>115</b> when the activity score <b>130</b> of the volume <b>112</b> is below the passive threshold. Again, using the example above, a semi-active-to-passive transition process <b>310</b> may be initiated when the activity score <b>130</b> is reduced to below 0.5, with the volume <b>112</b> being placed in the semi-active-to-passive transition state <b>312</b>. During the semi-active-to-passive transition process <b>310</b>, input/output activity <b>122</b> is limited to reading activity. In some embodiments, one or more other actions may also be taken.</p><p id="p-0066" num="0065">Further, the volume mode controller <b>100</b> may transition the volume <b>112</b> from the passive mode <b>115</b> to the semi-active mode <b>116</b> when the activity score <b>130</b> of the volume <b>112</b> increases beyond the passive threshold but is still below the active threshold. Again, using the example above, a passive-to-semi-active transition process <b>314</b> may be initiated when the activity score <b>130</b> is increased to at or above 0.5 but is below 0.75, with the volume <b>112</b> being placed in the passive-to-semi-active transition state <b>316</b>. During the passive-to-semi-active transition process <b>314</b>, input/output activity <b>122</b> may be increased to include write activity. In some embodiments, one or more other actions may also be taken.</p><p id="p-0067" num="0066">Although the transitioning described above occurs based on the activity score <b>130</b> for the volume <b>112</b>, in other embodiments, one or more other factors may be taken into account instead of or in place of the activity score <b>130</b> to determine when the various transition processes are to be initiated. For example, other types of trigger events, activation events, or both may be used to control the transitioning between the different modes of operations.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow diagram of a process <b>400</b> for managing the modes of operation for volumes within a node (e.g., a storage node) in accordance with one or more example embodiments. The process <b>400</b> may be implemented by using, for example, the volume mode controller <b>100</b> described with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>. It is understood that additional actions or operations can be provided before, during, or after the actions or operations of the process <b>400</b>, and that some of the actions or operations described can be replaced or eliminated in other embodiments of the process <b>400</b>.</p><p id="p-0069" num="0068">The process <b>400</b> begins by selecting a first portion of a plurality of volumes in the node to operate in an active mode (operation <b>402</b>). As described earlier, a volume in the active mode may be fully privileged or fully functional. As example, a volume in the active mode may be enabled to handle write activity and read activity, write allocations, and internal activity. The active mode may be, for example, implemented similarly to the active mode <b>114</b> described with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>.</p><p id="p-0070" num="0069">The process <b>400</b> further includes selecting a second portion of the plurality of volumes in the node to operate in a passive mode (operation <b>404</b>). In operation <b>404</b>, the second portion of the plurality of volumes that operates in the passive mode consumes fewer resources than the first portion of the plurality of volumes that operates in the active mode. As described earlier, a volume in the passive mode may be partially privileged or partially functional. For example, internal activity is halted (e.g., stopped or paused) and input/output activity is reduced to reading for a volume in the passive mode (a passive volume). Further, a volume in the passive mode has reduced memory usage as compared to a volume in the active mode. In other words, the passive volume has a smaller memory footprint than the active volume. The passive mode may be, for example, implemented similarly to the passive mode <b>115</b> described with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>.</p><p id="p-0071" num="0070">The process <b>400</b> further includes adjusting the first portion of the volumes and the second portion of the volumes based on activity of each of the volumes in the plurality of volumes over time (operation <b>406</b>). Operation <b>406</b> may include, for example, transitioning one or more volumes from the active mode to the passive mode, transitioning one or more volumes from the passive mode to the active mode, or both, over time. This transitioning may be performed according to one or more of the various embodiments described herein.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flow diagram of a process <b>500</b> for managing the mode of operation for a volume in accordance with one or more example embodiments. The process <b>500</b> may be implemented by using, for example, the volume mode controller <b>100</b> described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. It is understood that additional actions or operations can be provided before, during, or after the actions or operations of the process <b>500</b>, and that some of the actions or operations described can be replaced or eliminated in other embodiments of the process <b>500</b>.</p><p id="p-0073" num="0072">The process <b>500</b> begins by monitoring activity of a volume in an active mode (operation <b>502</b>). The activity may include, for example, input/output activity, internal activity (e.g., block free processing, scans, background processes, etc.), or both. An activity score is updated for the volume based on the activity (operation <b>504</b>). Operation <b>504</b> may include, for example, adjusting the activity score or leaving the activity score as is. Adjusting the activity score includes increasing the activity score or decreasing the activity score. The activity score may take into account, for example, without limitation, input/out activity and internal activity. In some cases, the activity score may specifically take into account write activity and internal activity.</p><p id="p-0074" num="0073">A determination is made as to whether the activity score for the volume is below a selected threshold (operation <b>506</b>). This selected threshold may be referred to as a passive threshold. If the activity score is not below the selected threshold, the process returns to operation <b>502</b> described above. If, however, the activity score is below the selected threshold, a mode of operation of the volume is changed from the active mode to a passive mode (operation <b>508</b>).</p><p id="p-0075" num="0074">Activity of the volume in the passive mode is monitored (operation <b>510</b>). A determination is made as to whether an activation event has been detected (operation <b>512</b>). If an activation event has not been detected, the process returns to operation <b>510</b> described above. If, however, an activation event is detected, a mode of operation of the volume is changed from the passive mode to the active mode (operation <b>514</b>), with the process terminating thereafter.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram of a process <b>600</b> for managing the mode of operation of a volume in accordance with one or more example embodiments. The process <b>600</b> may be implemented by using, for example, the volume mode controller <b>100</b> described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. It is understood that additional actions or operations can be provided before, during, or after the actions or operations of the process <b>600</b>, and that some of the actions or operations described can be replaced or eliminated in other embodiments of the process <b>600</b>.</p><p id="p-0077" num="0076">The process <b>600</b> begins by monitoring for an event corresponding to a volume (operation <b>602</b>). The event may be an activation event or a trigger event. In one or more embodiments, an activation event corresponding to a volume in a passive mode is detected (operation <b>604</b>). The activation event may be, for example, activation event <b>134</b> described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In response to detecting the activation event, a determination is made as to whether an active volume threshold has been reached (operation <b>606</b>). This active volume threshold may be, for example, a maximum number of volumes that are allowed to be in an active mode at any given point in time.</p><p id="p-0078" num="0077">If the active volume threshold has been reached, the process <b>600</b> transitions another volume in the node that is in the active mode and has a lowest activity score to the passive mode (operation <b>608</b>), the process <b>600</b> then returning to operation <b>606</b> described above. If the active volume threshold has not been reached, the volume is transitioned from the passive mode to the active mode (operation <b>610</b>), with the process then returning to operation <b>602</b> described above.</p><p id="p-0079" num="0078">With reference again to operation <b>602</b>, in one or more embodiments, a trigger event corresponding to a volume in an active mode is detected (operation <b>612</b>). The trigger event may be, for example, the trigger event <b>132</b> described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In response to detecting the trigger event, the volume is transitioned from the active mode to the passive mode (operation <b>614</b>). Thereafter, a determination is made as to whether a volume in the passive mode is in queue to be transitioned to active mode (operation <b>616</b>). If no volumes are in queue, the process <b>600</b> returns to operation <b>602</b> described above. Otherwise, the process <b>600</b> proceeds to operation <b>610</b> described above.</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a process <b>700</b> for managing the mode of operation of a volume in accordance with one or more example embodiments. The process <b>700</b> may be implemented by using, for example, the volume mode controller <b>100</b> described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. It is understood that additional actions or operations can be provided before, during, or after the actions or operations of the process <b>700</b>, and that some of the actions or operations described can be replaced or eliminated in other embodiments of the process <b>700</b>.</p><p id="p-0081" num="0080">The process <b>700</b> begins by monitoring an activity score for a volume in the active mode (operation <b>702</b>). A determination is made as to whether the activity score is below an active threshold (operation <b>704</b>). If the activity score is not below the active threshold, the process <b>700</b> returns to operation <b>702</b> described above. Otherwise, a determination is made as to whether the activity score is below a passive threshold (operation <b>706</b>). If the activity score is below the passive threshold, the volume is transitioned from the active mode to the passive mode (operation <b>708</b>). Otherwise, the volume is transitioned from the active mode to a semi-active mode (operation <b>710</b>).</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating a computing environment <b>800</b> in accordance with one or more example embodiments. In one example, the techniques described herein may include actions implemented within a client node <b>828</b>, which may take the form of, for example, a laptop, a tablet, a personal computer, a mobile device, a server, a virtual machine, a wearable device, or some other type of client device. In another example, the embodiments described above may include actions (e.g., actions by the volume mode controller <b>100</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) implemented within one or more nodes, such as a first node <b>830</b> and/or a second node <b>832</b> within a first cluster <b>834</b>, a third node <b>836</b> within a second cluster <b>838</b>, or some other combination of nodes. A node may comprise a storage controller, a server, an on-premise device, a virtual machine such as a storage virtual machine, hardware, software, or combination thereof. The one or more nodes may be configured to manage the storage and access to data on behalf of the client node <b>828</b> and/or other client devices. In another example, the techniques described herein may be implemented within a distributed computing platform <b>802</b> such as a cloud computing environment (e.g., a cloud storage environment, a multi-tenant platform, a hyperscale infrastructure comprising scalable server architectures and virtual networking, etc.) configured to manage the storage and access to data on behalf of client devices and/or nodes.</p><p id="p-0083" num="0082">In yet another example, at least some of the techniques described herein include actions implemented across one or more of the client node <b>828</b>, the one or more nodes <b>830</b>, <b>832</b>, and/or <b>836</b>, and/or the distributed computing platform <b>802</b>. For example, the client node <b>828</b> may transmit operations, such as data operations to read data and write data and metadata operations (e.g., a create file operation, a rename directory operation, a resize operation, a set attribute operation, etc.), over a network <b>826</b> to the first node <b>830</b> for implementation by the first node <b>830</b> upon storage. The first node <b>830</b> may store data associated with the operations within volumes or other data objects/structures hosted within locally attached storage, remote storage hosted by other computing devices accessible over the network <b>826</b>, storage provided by the distributed computing platform <b>802</b>, etc. The first node <b>830</b> may replicate the data and/or the operations to other computing devices, such as to the second node <b>832</b>, the third node <b>836</b>, a storage virtual machine executing within the distributed computing platform <b>802</b>, etc., so that one or more replicas of the data are maintained. For example, the third node <b>836</b> may host a destination storage volume that is maintained as a replica of a source storage volume of the first node <b>830</b>. Such replicas can be used for disaster recovery and failover.</p><p id="p-0084" num="0083">In an embodiment, the techniques described herein include actions implemented by a storage operating system or are implemented by a separate module that interacts with the storage operating system. The storage operating system may be hosted by the client node <b>828</b>, the distributed computing platform <b>802</b>, or across a combination thereof. In an example, the storage operating system may execute within a storage virtual machine, a hyperscaler, or some other computing environment. The storage operating system may implement a storage file system to logically organize data within storage devices as one or more storage objects and provide a logical/virtual representation of how the storage objects are organized on the storage devices. A storage object may comprise any logically definable storage element stored by the storage operating system (e.g., a volume stored by the first node <b>830</b>, a cloud object stored by the distributed computing platform <b>802</b>, etc.). Each storage object may be associated with a unique identifier that uniquely identifies the storage object. For example, a volume may be associated with a volume identifier uniquely identifying that volume from other volumes. The storage operating system also manages client access to the storage objects.</p><p id="p-0085" num="0084">The storage operating system may implement a file system for logically organizing data. For example, the storage operating system may implement a write-anywhere file layout for a volume where modified data for a file may be written to any available location as opposed to a write-in-place architecture where modified data is written to the original location, thereby overwriting the previous data. In an example, the file system may be implemented through a file system layer that stores data of the storage objects in an on-disk format representation that is block-based (e.g., data is stored within 4 kilobyte blocks, and inodes are used to identify files and file attributes such as creation time, access permissions, size and block location, etc.).</p><p id="p-0086" num="0085">In an example, deduplication may be implemented by a deduplication module associated with the storage operating system to improve storage efficiency. For example, inline deduplication may ensure blocks are deduplicated before being written to a storage device. Inline deduplication uses a data structure, such as an in-core hash store, which maps fingerprints of data-to-data blocks of the storage device storing the data. Whenever data is to be written to the storage device, a fingerprint of that data is calculated, and the data structure is looked up using the fingerprint to find duplicates (e.g., potentially duplicate data already stored within the storage device). If duplicate data is found, then the duplicate data is loaded from the storage device and a byte-by-byte comparison may be performed to ensure that the duplicate data is an actual duplicate of the data to be written to the storage device. If the data to be written is a duplicate of the loaded duplicate data, then the data to be written to disk is not redundantly stored to the storage device. Instead, a pointer or other reference is stored in the storage device in place of the data to be written to the storage device. The pointer points to the duplicate data already stored in the storage device. A reference count for the data may be incremented to indicate that the pointer now references the data. If at some point the pointer no longer references the data (e.g., the deduplicated data is deleted and thus no longer references the data in the storage device), then the reference count is decremented. In this way, inline deduplication is able to deduplicate data before the data is written to disk. This improves the storage efficiency of the storage device.</p><p id="p-0087" num="0086">In an example, compression may be implemented by a compression module associated with the storage operating system. The compression module may utilize various types of compression techniques to replace longer sequences of data (e.g., frequently occurring and/or redundant sequences) with shorter sequences, such as by using Huffman coding, arithmetic coding, compression dictionaries, etc. For example, an uncompressed portion of a file may comprise &#x201c;ggggnnnnnnqqqqqqqqqq&#x201d;, which is compressed to become &#x201c;4g6n10q&#x201d;. In this way, the size of the file can be reduced to improve storage efficiency. Compression may be implemented for compression groups. A compression group may correspond to a compressed group of blocks. The compression group may be represented by virtual volume block numbers. The compression group may comprise contiguous or non-contiguous blocks.</p><p id="p-0088" num="0087">In an example, various types of synchronization may be implemented by a synchronization module associated with the storage operating system. In an example, synchronous replication may be implemented, such as between the first node <b>830</b> and the second node <b>832</b>. It may be appreciated that the synchronization module may implement synchronous replication between any devices within the computing environment <b>800</b>, such as between the first node <b>830</b> of the first cluster <b>834</b> and the third node <b>836</b> of the second cluster <b>838</b> and/or between a node of a cluster and an instance of a node or virtual machine in the distributed computing platform <b>802</b>.</p><p id="p-0089" num="0088">As an example, during synchronous replication, the first node <b>830</b> may receive a write operation from the client node <b>828</b>. The write operation may target a file stored within a volume managed by the first node <b>830</b>. The first node <b>830</b> replicates the write operation to create a replicated write operation. The first node <b>830</b> locally implements the write operation upon the file within the volume. The first node <b>830</b> also transmits the replicated write operation to a synchronous replication target, such as the second node <b>832</b> that maintains a replica volume as a replica of the volume maintained by the first node <b>830</b>. The second node <b>832</b> will execute the replicated write operation upon the replica volume so that file within the volume and the replica volume comprises the same data. After, the second node <b>832</b> will transmit a success message to the first node <b>830</b>. With synchronous replication, the first node <b>830</b> does not respond with a success message to the client node <b>828</b> for the write operation until the write operation is executed upon the volume and the first node <b>830</b> receives the success message that the second node <b>832</b> executed the replicated write operation upon the replica volume.</p><p id="p-0090" num="0089">In another example, asynchronous replication may be implemented, such as between the first node <b>830</b> and the third node <b>836</b>. It may be appreciated that the synchronization module may implement asynchronous replication between any devices within the computing environment <b>800</b>, such as between the first node <b>830</b> of the first cluster <b>834</b> and the distributed computing platform <b>802</b>. In an example, the first node <b>830</b> may establish an asynchronous replication relationship with the third node <b>836</b>. The first node <b>830</b> may capture a baseline snapshot of a first volume as a point in time representation of the first volume. The first node <b>830</b> may utilize the baseline snapshot to perform a baseline transfer of the data within the first volume to the third node <b>836</b> in order to create a second volume within the third node <b>836</b> comprising data of the first volume as of the point in time at which the baseline snapshot was created.</p><p id="p-0091" num="0090">After the baseline transfer, the first node <b>830</b> may subsequently create snapshots of the first volume over time. As part of asynchronous replication, an incremental transfer is performed between the first volume and the second volume. In particular, a snapshot of the first volume is created. The snapshot is compared with a prior snapshot that was previously used to perform the last asynchronous transfer (e.g., the baseline transfer or a prior incremental transfer) of data to identify a difference in data of the first volume between the snapshot and the prior snapshot (e.g., changes to the first volume since the last asynchronous transfer). Accordingly, the difference in data is incrementally transferred from the first volume to the second volume. In this way, the second volume will comprise the same data as the first volume as of the point in time when the snapshot was created for performing the incremental transfer. It may be appreciated that other types of replication may be implemented, such as semi-sync replication.</p><p id="p-0092" num="0091">In an embodiment, the first node <b>830</b> may store data or a portion thereof within storage hosted by the distributed computing platform <b>802</b> by transmitting the data within objects to the distributed computing platform <b>802</b>. In one example, the first node <b>830</b> may locally store frequently accessed data within locally attached storage. Less frequently accessed data may be transmitted to the distributed computing platform <b>802</b> for storage within a data storage tier <b>808</b>. The data storage tier <b>808</b> may store data within a service data store <b>820</b>. Further, the data storage tier <b>808</b> may store client specific data within client data stores assigned to such clients such as a client (<b>1</b>) data store <b>822</b> used to store data of a client (<b>1</b>) and a client (N) data store <b>824</b> used to store data of a client (N). The data stores may be physical storage devices or may be defined as logical storage, such as a virtual volume, logical unit numbers (LUNs), or other logical organizations of data that can be defined across one or more physical storage devices. In another example, the first node <b>830</b> transmits and stores all client data to the distributed computing platform <b>802</b>. In yet another example, the client node <b>828</b> transmits and stores the data directly to the distributed computing platform <b>802</b> without the use of the first node <b>830</b>.</p><p id="p-0093" num="0092">The management of storage and access to data can be performed by one or more storage virtual machines (SVMs) or other storage applications that provide software as a service (SaaS) such as storage software services. In one example, an SVM may be hosted within the client node <b>828</b>, within the first node <b>830</b>, or within the distributed computing platform <b>802</b> such as by the application server tier <b>806</b>. In another example, one or more SVMs may be hosted across one or more of the client node <b>828</b>, the first node <b>830</b>, and the distributed computing platform <b>802</b>. The one or more SVMs may host instances of the storage operating system.</p><p id="p-0094" num="0093">In an example, the storage operating system may be implemented for the distributed computing platform <b>802</b>. The storage operating system may allow client devices to access data stored within the distributed computing platform <b>802</b> using various types of protocols, such as a Network File System (NFS) protocol, a Server Message Block (SMB) protocol and Common Internet File System (CIFS), and Internet Small Computer Systems Interface (iSCSI), and/or other protocols. The storage operating system may provide various storage services, such as disaster recovery (e.g., the ability to non-disruptively transition client devices from accessing a primary node that has failed to a secondary node that is taking over for the failed primary node), backup and archive function, replication such as asynchronous and/or synchronous replication, deduplication, compression, high availability storage, cloning functionality (e.g., the ability to clone a volume, such as a space efficient flex clone), snapshot functionality (e.g., the ability to create snapshots and restore data from snapshots), data tiering (e.g., migrating infrequently accessed data to slower/cheaper storage), encryption, managing storage across various platforms such as between on-premise storage systems and multiple cloud systems, etc.</p><p id="p-0095" num="0094">In one example of the distributed computing platform <b>802</b>, one or more SVMs may be hosted by the application server tier <b>806</b>. For example, a server (<b>1</b>) <b>816</b> is configured to host SVMs used to execute applications such as storage applications that manage the storage of data of the client (<b>1</b>) within the client (<b>1</b>) data store <b>822</b>. Thus, an SVM executing on the server (<b>1</b>) <b>816</b> may receive data and/or operations from the client node <b>828</b> and/or the first node <b>830</b> over the network <b>826</b>. The SVM executes a storage application and/or an instance of the storage operating system to process the operations and/or store the data within the client (<b>1</b>) data store <b>822</b>. The SVM may transmit a response back to the client node <b>828</b> and/or the first node <b>830</b> over the network <b>826</b>, such as a success message or an error message. In this way, the application server tier <b>806</b> may host SVMs, services, and/or other storage applications using the server (<b>1</b>) <b>816</b>, the server (N) <b>818</b>, etc.</p><p id="p-0096" num="0095">A user interface tier <b>804</b> of the distributed computing platform <b>802</b> may provide the client node <b>828</b> and/or the first node <b>830</b> with access to user interfaces associated with the storage and access of data and/or other services provided by the distributed computing platform <b>802</b>. In an example, a service user interface <b>810</b> may be accessible from the distributed computing platform <b>802</b> for accessing services subscribed to by clients and/or nodes, such as data replication services, application hosting services, data security services, human resource services, warehouse tracking services, accounting services, etc. For example, client user interfaces may be provided to corresponding clients, such as a client (<b>1</b>) user interface <b>812</b>, a client (N) user interface <b>814</b>, etc. The client (<b>1</b>) can access various services and resources subscribed to by the client (<b>1</b>) through the client (<b>1</b>) user interface <b>812</b>, such as access to a web service, a development environment, a human resource application, a warehouse tracking application, and/or other services and resources provided by the application server tier <b>806</b>, which may use data stored within the data storage tier <b>808</b>.</p><p id="p-0097" num="0096">The client node <b>828</b> and/or the first node <b>830</b> may subscribe to certain types and amounts of services and resources provided by the distributed computing platform <b>802</b>. For example, the client node <b>828</b> may establish a subscription to have access to three virtual machines, a certain amount of storage, a certain type/amount of data redundancy, a certain type/amount of data security, certain service level agreements (SLAs) and service level objectives (SLOs), latency guarantees, bandwidth guarantees, access to execute or host certain applications, etc. Similarly, the first node <b>830</b> can establish a subscription to have access to certain services and resources of the distributed computing platform <b>802</b>.</p><p id="p-0098" num="0097">As shown, a variety of clients, such as the client node <b>828</b> and the first node <b>830</b>, incorporating and/or incorporated into a variety of computing devices may communicate with the distributed computing platform <b>802</b> through one or more networks, such as the network <b>826</b>. For example, a client may incorporate and/or be incorporated into a client application (e.g., software) implemented at least in part by one or more of the computing devices.</p><p id="p-0099" num="0098">Examples of suitable computing devices include personal computers, server computers, desktop computers, nodes, storage servers, nodes, laptop computers, notebook computers, tablet computers or personal digital assistants (PDAs), smart phones, cell phones, and consumer electronic devices incorporating one or more computing device components, such as one or more electronic processors, microprocessors, central processing units (CPU), or controllers. Examples of suitable networks include networks utilizing wired and/or wireless communication technologies and networks operating in accordance with any suitable networking and/or communication protocol (e.g., the Internet). In use cases involving the delivery of customer support services, the computing devices noted represent the endpoint of the customer support delivery process, i.e., the consumer's device.</p><p id="p-0100" num="0099">The distributed computing platform <b>802</b>, such as a multi-tenant business data processing platform or cloud computing environment, may include multiple processing tiers, including the user interface tier <b>804</b>, the application server tier <b>806</b>, and a data storage tier <b>808</b>. The user interface tier <b>804</b> may maintain multiple user interfaces, including graphical user interfaces and/or web-based interfaces. The user interfaces may include the service user interface <b>810</b> for a service to provide access to applications and data for a client (e.g., a &#x201c;tenant&#x201d;) of the service, as well as one or more user interfaces that have been specialized/customized in accordance with user specific requirements (e.g., as discussed above), which may be accessed via one or more APIs.</p><p id="p-0101" num="0100">The service user interface <b>810</b> may include components enabling a tenant to administer the tenant's participation in the functions and capabilities provided by the distributed computing platform <b>802</b>, such as accessing data, causing execution of specific data processing operations, etc. Each processing tier may be implemented with a set of computers, virtualized computing environments such as a storage virtual machine or storage virtual server, and/or computer components including computer servers and processors, and may perform various functions, methods, processes, or operations as determined by the execution of a software application or set of instructions.</p><p id="p-0102" num="0101">The data storage tier <b>808</b> may include one or more data stores, which may include the service data store <b>820</b> and one or more client data stores <b>822</b>-<b>824</b>. Each client data store may contain tenant-specific data that is used as part of providing a range of tenant-specific business and storage services or functions, including but not limited to ERP, CRM, eCommerce, Human Resources management, payroll, storage services, etc. Data stores may be implemented with any suitable data storage technology, including structured query language (SQL) based relational database management systems (RDBMS), file systems hosted by operating systems, object storage, etc.</p><p id="p-0103" num="0102">The distributed computing platform <b>802</b> may be a multi-tenant and service platform operated by an entity in order to provide multiple tenants with a set of business related applications, data storage, and functionality. These applications and functionality may include ones that a business uses to manage various aspects of its operations. For example, the applications and functionality may include providing web-based access to business information systems, thereby allowing a user with a browser and an Internet or intranet connection to view, enter, process, or modify certain types of business information or any other type of information.</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating a network environment <b>900</b> in accordance with one or more example embodiments. The network environment <b>900</b> illustrates another architecture for the principles described above with respect to <figref idref="DRAWINGS">FIG. <b>8</b></figref>. Furthermore, the embodiments described above may be implemented with use of a volume mode controller (such as the volume mode controller <b>100</b> described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>) implemented within a storage node, such as any single or multiple ones of the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) of <figref idref="DRAWINGS">FIG. <b>9</b></figref>. For example, the volume mode controller may be used to control the mode of operation for each of the volumes within data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) (e.g., in each of volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>).</p><p id="p-0105" num="0104">The network environment <b>900</b>, which may take the form of a clustered network environment, includes data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) that are coupled over a cluster or cluster fabric <b>904</b> that includes one or more communication network(s) and facilitates communication between the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) (and one or more modules, components, etc. therein, such as, node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) (also referred to as node computing devices), for example), although any number of other elements or components can also be included in the network environment <b>900</b> in other examples. This technology provides a number of advantages including methods, non-transitory computer-readable media, and computing devices that implement the techniques described herein.</p><p id="p-0106" num="0105">In this example, node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can be primary or local storage controllers or secondary or remote storage controllers that provide client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) (also referred to as client nodes) with access to data stored within data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) (also referred to as data storage devices) and cloud storage node(s) <b>936</b> (also referred to as cloud storage device(s)). The node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) may be implemented as hardware, software (e.g., a storage virtual machine), or combination thereof.</p><p id="p-0107" num="0106">The data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) and/or node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) of the examples described and illustrated herein are not limited to any particular geographic areas and can be clustered locally and/or remotely via a cloud network, or not clustered in other examples. Thus, in one example the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) and/or node computing device <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can be distributed over a plurality of storage systems located in a plurality of geographic locations (e.g., located on-premise, located within a cloud computing environment, etc.); while in another example a network can include data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) and/or node computing device <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) residing in a same geographic location (e.g., in a single on-site rack).</p><p id="p-0108" num="0107">In the illustrated example, one or more of the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>), which may be, for example, personal computers (PCs), computing devices used for storage (e.g., storage servers), or other computers or peripheral devices, are coupled to the respective data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) by network connections <b>912</b>(<b>1</b>)-<b>912</b>(<i>n</i>). Network connections <b>912</b>(<b>1</b>)-<b>912</b>(<i>n</i>) may include a local area network (LAN) or wide area network (WAN) (i.e., a cloud network), for example, that utilize TCP/IP and/or one or more Network Attached Storage (NAS) protocols, such as a Common Internet Filesystem (CIFS) protocol or a Network Filesystem (NFS) protocol to exchange data packets, a Storage Area Network (SAN) protocol, such as Small Computer System Interface (SCSI) or Fiber Channel Protocol (FCP), an object protocol, such as simple storage service (S3), and/or non-volatile memory express (NVMe), for example.</p><p id="p-0109" num="0108">Illustratively, the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) may be general-purpose computers running applications and may interact with the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) using a client/server model for exchange of information. That is, the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) may request data from the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) (e.g., data on one of the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) managed by a network storage controller configured to process I/O commands issued by the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>)), and the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) may return results of the request to the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) via the network connections <b>912</b>(<b>1</b>)-<b>912</b>(<i>n</i>).</p><p id="p-0110" num="0109">The node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) of the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) can include network or host nodes that are interconnected as a cluster to provide data storage and management services, such as to an enterprise having remote locations, cloud storage (e.g., a storage endpoint may be stored within cloud storage node(s) <b>936</b>), etc., for example. Such node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can be attached to the cluster fabric <b>904</b> at a connection point, redistribution point, or communication endpoint, for example. One or more of the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) may be capable of sending, receiving, and/or forwarding information over a network communications channel, and could comprise any type of device that meets any or all of these criteria.</p><p id="p-0111" num="0110">In an example, the node computing devices <b>906</b>(<b>1</b>) and <b>906</b>(<i>n</i>) may be configured according to a disaster recovery configuration whereby a surviving node provides switchover access to the storage devices <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) in the event a disaster occurs at a disaster storage site (e.g., the node computing device <b>906</b>(<b>1</b>) provides client device <b>908</b>(<i>n</i>) with switchover data access to data storage nodes <b>910</b>(<i>n</i>) in the event a disaster occurs at the second storage site). In other examples, the node computing device <b>906</b>(<i>n</i>) can be configured according to an archival configuration and/or the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can be configured based on another type of replication arrangement (e.g., to facilitate load sharing). Additionally, while two node computing devices are illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, any number of node computing devices or data storage apparatuses can be included in other examples in other types of configurations or arrangements.</p><p id="p-0112" num="0111">As illustrated in the network environment <b>900</b>, node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can include various functional components that coordinate to provide a distributed storage architecture. For example, the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can include network modules <b>914</b>(<b>1</b>)-<b>914</b>(<i>n</i>) and disk modules <b>916</b>(<b>1</b>)-<b>916</b>(<i>n</i>). Network modules <b>914</b>(<b>1</b>)-<b>914</b>(<i>n</i>) can be configured to allow the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) (e.g., network storage controllers) to connect with client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) over the network connections <b>912</b>(<b>1</b>)-<b>912</b>(<i>n</i>), for example, allowing the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) to access data stored in the network environment <b>900</b>.</p><p id="p-0113" num="0112">Further, the network modules <b>914</b>(<b>1</b>)-<b>914</b>(<i>n</i>) can provide connections with one or more other components through the cluster fabric <b>904</b>. For example, the network module <b>914</b>(<b>1</b>) of node computing device <b>906</b>(<b>1</b>) can access the data storage node <b>910</b>(<i>n</i>) by sending a request via the cluster fabric <b>904</b> through the disk module <b>916</b>(<i>n</i>) of node computing device <b>906</b>(<i>n</i>) when the node computing device <b>906</b>(<i>n</i>) is available. Alternatively, when the node computing device <b>906</b>(<i>n</i>) fails, the network module <b>914</b>(<b>1</b>) of node computing device <b>906</b>(<b>1</b>) can access the data storage node <b>910</b>(<i>n</i>) directly via the cluster fabric <b>904</b>. The cluster fabric <b>904</b> can include one or more local and/or wide area computing networks (i.e., cloud networks) embodied as Infiniband, Fibre Channel (FC), or Ethernet networks, for example, although other types of networks supporting other protocols can also be used.</p><p id="p-0114" num="0113">Disk modules <b>916</b>(<b>1</b>)-<b>916</b>(<i>n</i>) can be configured to connect data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>), such as disks or arrays of disks, SSDs, flash memory, or some other form of data storage, to the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>). Often, disk modules <b>916</b>(<b>1</b>)-<b>916</b>(<i>n</i>) communicate with the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) according to the SAN protocol, such as SCSI or FCP, for example, although other protocols can also be used. Thus, as seen from an operating system on node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>), the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) can appear as locally attached. In this manner, different node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>), etc. may access data blocks, files, or objects through the operating system, rather than expressly requesting abstract files.</p><p id="p-0115" num="0114">While the network environment <b>900</b> illustrates an equal number of network modules <b>914</b>(<b>1</b>)-<b>914</b>(<i>n</i>) and disk modules <b>916</b>(<b>1</b>)-<b>916</b>(<i>n</i>), other examples may include a differing number of these modules. For example, there may be a plurality of network and disk modules interconnected in a cluster that do not have a one-to-one correspondence between the network and disk modules. That is, different node computing devices can have a different number of network and disk modules, and the same node computing device can have a different number of network modules than disk modules.</p><p id="p-0116" num="0115">Further, one or more of the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) can be networked with the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) in the cluster, over the network connections <b>912</b>(<b>1</b>)-<b>912</b>(<i>n</i>). As an example, respective client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) that are networked to a cluster may request services (e.g., exchanging of information in the form of data packets) of node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) in the cluster, and the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) can return results of the requested services to the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>). In one example, the client devices <b>908</b>(<b>1</b>)-<b>908</b>(<i>n</i>) can exchange information with the network modules <b>914</b>(<b>1</b>)-<b>914</b>(<i>n</i>) residing in the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) (e.g., network hosts) in the data storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>).</p><p id="p-0117" num="0116">In one example, the storage apparatuses <b>902</b>(<b>1</b>)-<b>902</b>(<i>n</i>) host aggregates corresponding to physical local and remote data storage devices, such as local flash or disk storage in the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>), for example. One or more of the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) can include mass storage devices, such as disks of a disk array. The disks may comprise any type of mass storage devices, including but not limited to magnetic disk drives, flash memory, and any other similar media adapted to store information, including, for example, data and/or parity information.</p><p id="p-0118" num="0117">The aggregates include volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) in this example, although any number of volumes can be included in the aggregates. The volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) are virtual data stores or storage objects that define an arrangement of storage and one or more filesystems within the network environment <b>900</b>. Volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) can span a portion of a disk or other storage device, a collection of disks, or portions of disks, for example, and typically define an overall logical arrangement of data storage. In one example volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) can include stored user data as one or more files, blocks, or objects that may reside in a hierarchical directory structure within the volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>).</p><p id="p-0119" num="0118">Volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) are typically configured in formats that may be associated with particular storage systems, and respective volume formats typically comprise features that provide functionality to the volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>), such as providing the ability for volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) to form clusters, among other functionality. Optionally, one or more of the volumes <b>918</b>(<b>1</b>)-<b>918</b>(<i>n</i>) can be in composite aggregates and can extend between one or more of the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) and one or more of the cloud storage node(s) <b>936</b> to provide tiered storage, for example, and other arrangements can also be used in other examples.</p><p id="p-0120" num="0119">In one example, to facilitate access to data stored on the disks or other structures of the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>), a filesystem may be implemented that logically organizes the information as a hierarchical structure of directories and files. In this example, respective files may be implemented as a set of disk blocks of a particular size that are configured to store information, whereas directories may be implemented as specially formatted files in which information about other files and directories are stored.</p><p id="p-0121" num="0120">Data can be stored as files or objects within a physical volume and/or a virtual volume, which can be associated with respective volume identifiers. The physical volumes correspond to at least a portion of physical storage devices, such as the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) (e.g., a Redundant Array of Independent (or Inexpensive) Disks (RAID system)) whose address, addressable space, location, etc. does not change. Typically, the location of the physical volumes does not change in that the range of addresses used to access it generally remains constant.</p><p id="p-0122" num="0121">Virtual volumes, in contrast, can be stored over an aggregate of disparate portions of different physical storage devices. Virtual volumes may be a collection of different available portions of different physical storage device locations, such as some available space from disks, for example. It will be appreciated that since the virtual volumes are not &#x201c;tied&#x201d; to any one particular storage device, virtual volumes can be said to include a layer of abstraction or virtualization, which allows it to be resized and/or flexible in some regards.</p><p id="p-0123" num="0122">Further, virtual volumes can include one or more LUNs, directories, Qtrees, files, and/or other storage objects, for example. Among other things, these features, but more particularly the LUNs, allow the disparate memory locations within which data is stored to be identified, for example, and grouped as data storage unit. As such, the LUNs may be characterized as constituting a virtual disk or drive upon which data within the virtual volumes is stored within an aggregate. For example, LUNs are often referred to as virtual drives, such that they emulate a hard drive, while they actually comprise data blocks stored in various parts of a volume.</p><p id="p-0124" num="0123">In one example, the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) can have one or more physical ports, wherein each physical port can be assigned a target address (e.g., SCSI target address). To represent respective volumes, a target address on the data storage nodes <b>910</b>(<b>1</b>)-<b>910</b>(<i>n</i>) can be used to identify one or more of the LUNs. Thus, for example, when one of the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) connects to a volume, a connection between the one of the node computing devices <b>906</b>(<b>1</b>)-<b>906</b>(<i>n</i>) and one or more of the LUNs underlying the volume is created.</p><p id="p-0125" num="0124">Respective target addresses can identify multiple of the LUNs, such that a target address can represent multiple volumes. The I/O interface, which can be implemented as circuitry and/or software in a storage adapter or as executable code residing in memory and executed by a processor, for example, can connect to volumes by using one or more addresses that identify the one or more of the LUNs.</p><p id="p-0126" num="0125">The present embodiments can take the form of an entirely hardware embodiment, an entirely software embodiment, or an embodiment containing both hardware and software elements. Accordingly, it is understood that any operation of the computing systems of the computing environment <b>800</b>, the network environment <b>900</b>, and the storage node <b>104</b> may be implemented by a computing system using corresponding instructions stored on or in a non-transitory computer-readable medium accessible by a processing system. For the purposes of this description, a tangible computer-usable or computer-readable medium can be any apparatus that can store the program for use by or in connection with the instruction execution system, apparatus, or device. The medium may include non-volatile memory including magnetic storage, solid-state storage, optical storage, cache memory, and RAM.</p><p id="p-0127" num="0126">The foregoing outlines features of several examples so that those skilled in the art may better understand the aspects of the present disclosure. Those skilled in the art should appreciate that they may readily use the present disclosure as a basis for designing or modifying other processes and structures for carrying out the same purposes and/or achieving the same advantages of the examples introduced herein. Those skilled in the art should also realize that such equivalent constructions do not depart from the spirit and scope of the present disclosure, and that they may make various changes, substitutions, and alterations herein without departing from the spirit and scope of the present disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computing device comprising:<claim-text>at least one memory containing machine-readable medium comprising machine-executable code having stored thereon instructions for performing a method of managing modes of operation for a plurality of volumes in an aggregate; and</claim-text><claim-text>a processor coupled to the at least one memory, the processor configured to execute the machine-executable code to cause the processor to:</claim-text><claim-text>monitor the aggregate that includes a first number of a plurality of volumes operating in an active mode, the active mode allowing both write activity and read activity, and includes a second number of the plurality of volumes operating in a passive mode, the passive mode allowing read activity and blocking write activity, wherein the second number of the volumes that operate in the passive mode consume fewer resources than the first number of the volumes that operates in the active mode;</claim-text><claim-text>detect an event corresponding to a first volume of the plurality of volumes; and</claim-text><claim-text>adjust the first number of the plurality of volumes and the second number of the plurality of volumes by changing the first volume between the active mode and the passive mode based on detecting the event.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-executable code to adjust the first number of the plurality of volumes and the second number of the plurality of volumes causes the processor to change a mode of operation for the first volume from the passive mode to the active mode in response to detecting an activation event corresponding to the first volume.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computing device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the activation event comprises a write request.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computing device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the activation event comprises a snapshot request.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computing device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the machine-executable code to adjust the first number of the plurality of volumes and the second number of the plurality of volumes causes the processor to transition a second volume in the aggregate to the passive mode in response to determining that the second volume has a lowest activity score within the plurality of volumes, and in response to reaching an active threshold that indicates a maximum number of volumes allowed to operate in an active mode.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computing device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-executable code to adjust the first number of the plurality of volumes and the second number of the plurality of volumes causes the processor to change a mode of operation for the first volume from the active mode to the passive mode in response to detecting a trigger event corresponding to the first volume.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computing device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the trigger event comprises inactivity of the first volume for more than a preselected period of time.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computing device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the machine-executable code to adjust the first number of the plurality of volumes and the second number of the plurality of volumes causes the processor to transition a second volume in the aggregate to the active mode in response to determining that the second volume is in a queue waiting to be transitioned to the active mode.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A method comprising:<claim-text>performing a plurality of reading operations and writing operations with respect to an aggregate that includes a first number of a plurality of volumes operating in an active mode, the active mode allowing both write activity and read activity, the aggregate further including a second number of the plurality of volumes operating in a passive mode, the passive mode allowing read activity and blocking write activity, wherein the second number of the volumes that operate in the passive mode consume fewer resources than the first number of the volumes that operates in the active mode;</claim-text><claim-text>generating an activity score corresponding to each volume of the plurality of volumes in the aggregate, wherein the activity score is based on input/output activity and internal activity of each respective volume; and</claim-text><claim-text>adjusting the first number of the plurality of volumes and the second number of the plurality of volumes, by changing a first volume of the plurality of volumes between the active mode and the passive mode based on the activity score of the first volume.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the changing comprises:<claim-text>changing a mode of operation for the first volume from the active mode to the passive mode in response to a determination that the activity score of the first volume is below a selected threshold.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein changing the mode of operation for the first volume from the active mode to the passive mode comprises:<claim-text>blocking internal activity and write activity of the first volume.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein changing the mode of operation for the first volume from the active mode to the passive mode comprises:<claim-text>releasing at least a portion of memory used by the first volume when the mode of operation is changed to the passive mode.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein changing the mode of operation for the first volume from the active mode to the passive mode comprises:<claim-text>halting write allocations corresponding to the first volume.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein changing the mode of operation for the first volume from the active mode to the passive mode comprises:<claim-text>decreasing a priority of the first volume with respect to mounting in a high-availability scenario to transition the first volume from the active mode to the passive mode.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the changing comprises:<claim-text>changing a mode of operation for the first volume from the passive mode to the active mode in response to a determination that the activity score of the first volume is above a selected threshold.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the activity score is based at least in part on a write activity score of the first volume.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory machine-readable medium having stored thereon instructions for performing a method comprising machine-executable code which, when executed by at least one machine, causes the at least one machine to:<claim-text>perform a plurality of reading operations and writing operations with respect to a storage node that includes a first number of a plurality of volumes operating in an active mode, the active mode allowing both write activity and read activity, the storage node further including a second number of the plurality of volumes operating in a passive mode, the passive mode allowing read activity and blocking write activity, wherein the second number of the volumes that operate in the passive mode consume fewer resources than the first number of the volumes that operates in the active mode;</claim-text><claim-text>monitor the storage node for an event corresponding to a first volume of the plurality of volumes; and</claim-text><claim-text>adjust the first number of the plurality of volumes and the second number of the plurality of volumes by changing the first volume between the active mode and the passive mode based on detecting the event.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the machine-executable code further causes the at least one machine, as part of the adjusting, to change a mode of operation for the first volume from the passive mode to the active mode in response to detecting an activation event corresponding to the first volume.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the activation event comprises a write request.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the machine-executable code further causes the at least one machine, as part of the adjusting, to change a mode of operation for the first volume from the active mode to the passive mode in response to detecting a trigger event corresponding to the first volume wherein the trigger event comprises inactivity of the first volume for more than a preselected period of time.</claim-text></claim></claims></us-patent-application>