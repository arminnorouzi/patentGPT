<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007288A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007288</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943420</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>44</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>184</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>96</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>129</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>44</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>184</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>96</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>129</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DECODER WITH MERGE CANDIDATE REORDER BASED ON COMMON MOTION VECTOR</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17006732</doc-number><date>20200828</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11451810</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943420</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/US20/35910</doc-number><date>20200603</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17006732</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62856339</doc-number><date>20190603</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>OP Solutions LLC</orgname><address><city>Amherst</city><state>MA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Furht</last-name><first-name>Borivoje</first-name><address><city>Boca Raton</city><state>FL</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Kalva</last-name><first-name>Hari</first-name><address><city>Boca Raton</city><state>FL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Adzic</last-name><first-name>Velibor</first-name><address><city>Canton</city><state>GA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>OP Solultions, LLC</orgname><role>02</role><address><city>Amherst</city><state>MA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A decoder includes circuitry configured to receive a bitstream; construct, for a current block, a motion vector candidate list including a motion vector candidate having motion information that characterizes a global motion vector; reorder the motion vector candidate list such that the motion vector candidate having the motion information that characterizes the global motion vector is first in the reordered motion vector candidate list; and reconstruct pixel data of the current block and using the reordered motion vector candidate list. Related apparatus, systems, techniques and articles are also described.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="138.09mm" wi="158.75mm" file="US20230007288A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="199.73mm" wi="174.07mm" orientation="landscape" file="US20230007288A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="168.57mm" wi="140.97mm" orientation="landscape" file="US20230007288A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="171.53mm" wi="143.59mm" orientation="landscape" file="US20230007288A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="193.80mm" wi="96.35mm" orientation="landscape" file="US20230007288A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="214.80mm" wi="175.34mm" orientation="landscape" file="US20230007288A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="245.70mm" wi="180.68mm" orientation="landscape" file="US20230007288A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="214.71mm" wi="130.22mm" orientation="landscape" file="US20230007288A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="251.12mm" wi="155.02mm" orientation="landscape" file="US20230007288A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="189.99mm" wi="157.06mm" file="US20230007288A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of priority of international application PCT/US20/35910, filed on Jun. 3, 2020, and entitled &#x201c;MERGE CANDIDATE REORDER BASED ON GLOBAL MOTION VECTOR,&#x201d; the entirety of which is incorporated by reference herein. This application also claims the benefit of priority of U.S. Provisional Patent Application Ser. No. 62/856,339, filed on Jun. 3, 2019, and titled &#x201c;MERGE CANDIDATE REORDER BASED ON GLOBAL MOTION VECTOR,&#x201d; which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The present invention generally relates to the field of video compression. In particular, the present invention is directed to merge candidate reorder based on global motion vector.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">A video codec can include an electronic circuit or software that compresses or decompresses digital video. It can convert uncompressed video to a compressed format or vice versa. In the context of video compression, a device that compresses video (and/or performs some function thereof) can typically be called an encoder, and a device that decompresses video (and/or performs some function thereof) can be called a decoder.</p><p id="p-0005" num="0004">A format of the compressed data can conform to a standard video compression specification. The compression can be lossy in that the compressed video lacks some information present in the original video. A consequence of this can include that decompressed video can have lower quality than the original uncompressed video because there is insufficient information to accurately reconstruct the original video.</p><p id="p-0006" num="0005">There can be complex relationships between the video quality, the amount of data used to represent the video (e.g., determined by the bit rate), the complexity of the encoding and decoding algorithms, sensitivity to data losses and errors, ease of editing, random access, end-to-end delay (e.g., latency), and the like.</p><p id="p-0007" num="0006">Motion compensation can include an approach to predict a video frame or a portion thereof given a reference frame, such as previous and/or future frames, by accounting for motion of the camera and/or objects in the video. It can be employed in the encoding and decoding of video data for video compression, for example in the encoding and decoding using the Motion Picture Experts Group (MPEG)-2 (also referred to as advanced video coding (AVC) and H.264) standard. Motion compensation can describe a picture in terms of the transformation of a reference picture to the current picture. The reference picture can be previous in time when compared to the current picture, from the future when compared to the current picture. When images can be accurately synthesized from previously transmitted and/or stored images, compression efficiency can be improved.</p><heading id="h-0004" level="1">SUMMARY OF THE DISCLOSURE</heading><p id="p-0008" num="0007">In an aspect, a decoder includes circuitry configured to receive a bitstream, construct, for a current block, a motion vector candidate list including a motion vector candidate having motion information that characterizes a global motion vector, reorder the motion vector candidate list such that the motion vector candidate having the motion information that characterizes the global motion vector is first in the reordered motion vector candidate list, and reconstruct pixel data of the current block and using the reordered motion vector candidate list.</p><p id="p-0009" num="0008">In another aspect, a method includes receiving, by a decoder, a bitstream, constructing, for a current block, a motion vector candidate list including a motion vector candidate having motion information that characterizes a global motion vector, reordering the motion vector candidate list such that the motion vector candidate having the motion information that characterizes the global motion vector is first in the reordered motion vector candidate list, and reconstructing pixel data of the current block and using the reordered motion vector candidate list.</p><p id="p-0010" num="0009">These and other aspects and features of non-limiting embodiments of the present invention will become apparent to those skilled in the art upon review of the following description of specific non-limiting embodiments of the invention in conjunction with the accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010">For the purpose of illustrating the invention, the drawings show aspects of one or more embodiments of the invention. However, it should be understood that the present invention is not limited to the precise arrangements and instrumentalities shown in the drawings, wherein:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating motion vectors of an example frame with global and local motion;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating spatial candidates that are considered in an approach to merge mode;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating spatial candidates and associated global motion vectors that are considered in an approach to merge mode;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates three example motion models that can be utilized for global motion including their index value (0, 1, or 2);</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a process flow diagram according to some example implementations of the current subject matter;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a system block diagram of an example decoder according to some example implementations of the current subject matter;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a process flow diagram according to some example implementations of the current subject matter;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a system block diagram of an example encoder according to some example implementations of the current subject matter; and</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of a computing system that can be used to implement any one or more of the methodologies disclosed herein and any one or more portions thereof.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0021" num="0020">The drawings are not necessarily to scale and may be illustrated by phantom lines, diagrammatic representations and fragmentary views. In certain instances, details that are not necessary for an understanding of the embodiments or that render other details difficult to perceive may have been omitted.</p><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0021">&#x201c;Global motion&#x201d; in video refers to motion and/or a motion model common to all pixels of a region, where a region may be a picture, a frame, or any portion of a picture or frame such as a block, CTU, or other subset of contiguous pixels. Global motion can be caused by camera motion, for example, camera panning and zooming creates motion in a frame that can typically affect the entire frame. Motion present in portions of a video can be referred to as local motion. Local motion can be caused by moving objects in a scene. For example, an object moving from left to right in the scene. Videos may contain a combination of local and global motion. Some implementations of the current subject matter can provide for constructing of a merge candidate list based on the global motion vector that can improve compression by reducing the bits necessary to signal candidates and to code motion vector differences.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating motion vectors of an example frame <b>100</b> with global and local motion. Frame <b>100</b> includes a number of blocks of pixels illustrated as squares, and their associated motion vectors illustrated as arrows. Squares (e.g., blocks of pixels) with arrows pointing up and to the left may indicate blocks with motion that may be considered to be global motion and squares with arrows pointing in other directions (indicated by <b>104</b>) may indicate blocks with local motion. In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, many of the blocks have same global motion. Signaling global motion in a header, such as a picture parameter set (PPS) or sequence parameter set (SPS), and using the signal global motion may reduce motion vector information needed by blocks and may result in improved prediction.</p><p id="p-0024" num="0023">As an example, and still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, simple translational motion may be described using a motion vector (MV), with two components MVx, MVy, that describes displacement of blocks and/or pixels in a current frame. More complex motion such as rotation, zooming, and warping may be described using affine motion vectors, where an &#x201c;affine motion vector,&#x201d; as used in this disclosure, is a vector describing a uniform displacement of a set of pixels or points represented in a video picture and/or picture, such as a set of pixels illustrating an object moving across a view in a video without changing apparent shape during motion. Some approaches to video encoding and/or decoding may use 4-parameter or 6-parameter affine models for motion compensation in inter picture coding.</p><p id="p-0025" num="0024">For example, a six parameter affine motion may be described as</p><p id="p-0026" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x&#x2032;=ax</i>+by +<i>c </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0027" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y&#x2032;=dx+ey+f </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0028" num="0025">A four parameter affine motion may be described as:</p><p id="p-0029" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x&#x2032;=ax</i>+by +<i>c </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0030" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y&#x2032;=&#x2212;bx+ay+f </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0031" num="0026">where (x,y) and (x&#x2032;,y&#x2032;) are pixel locations in current and reference pictures, respectively; a, b, c, d, e, and f are parameters of an affine motion model.</p><p id="p-0032" num="0027">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, A block-based and/or subblock-based affine transform motion compensation prediction may alternatively or additionally be applied. An affine motion field of a block and/or subblock may be described by motion information of two control point (4-parameter) or three control point motion vectors (6-parameter). In a 4-parameter affine motion model, a motion vector at a sample location (x,y) in a block may be derived as:</p><p id="p-0033" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mrow>  <mo>{</mo>  <mtable>   <mtr>    <mtd>     <mrow>      <msub>       <mi>mv</mi>       <mi>x</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <mfrac>         <mrow>          <msub>           <mi>mv</mi>           <mrow>            <mn>1</mn>            <mo>&#x2062;</mo>            <mi>x</mi>           </mrow>          </msub>          <mo>-</mo>          <msub>           <mi>mv</mi>           <mrow>            <mn>0</mn>            <mo>&#x2062;</mo>            <mi>x</mi>           </mrow>          </msub>         </mrow>         <mi>W</mi>        </mfrac>        <mo>&#x2062;</mo>        <mi>x</mi>       </mrow>       <mo>+</mo>       <mfrac>        <mrow>         <msub>          <mi>mv</mi>          <mrow>           <mn>1</mn>           <mo>&#x2062;</mo>           <mi>y</mi>          </mrow>         </msub>         <mo>-</mo>         <msub>          <mi>mv</mi>          <mrow>           <mn>0</mn>           <mo>&#x2062;</mo>           <mi>y</mi>          </mrow>         </msub>        </mrow>        <mi>W</mi>       </mfrac>       <mo>+</mo>       <msub>        <mi>mv</mi>        <mrow>         <mn>0</mn>         <mo>&#x2062;</mo>         <mi>x</mi>        </mrow>       </msub>      </mrow>     </mrow>    </mtd>   </mtr>   <mtr>    <mtd>     <mrow>      <msub>       <mi>mv</mi>       <mi>y</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <mfrac>         <mrow>          <msub>           <mi>mv</mi>           <mrow>            <mn>1</mn>            <mo>&#x2062;</mo>            <mi>y</mi>           </mrow>          </msub>          <mo>-</mo>          <msub>           <mi>mv</mi>           <mrow>            <mn>0</mn>            <mo>&#x2062;</mo>            <mi>y</mi>           </mrow>          </msub>         </mrow>         <mi>W</mi>        </mfrac>        <mo>&#x2062;</mo>        <mi>x</mi>       </mrow>       <mo>+</mo>       <mfrac>        <mrow>         <msub>          <mi>mv</mi>          <mrow>           <mn>1</mn>           <mo>&#x2062;</mo>           <mi>y</mi>          </mrow>         </msub>         <mo>-</mo>         <msub>          <mi>mv</mi>          <mrow>           <mn>0</mn>           <mo>&#x2062;</mo>           <mi>x</mi>          </mrow>         </msub>        </mrow>        <mi>W</mi>       </mfrac>       <mo>+</mo>       <msub>        <mi>mv</mi>        <mrow>         <mn>0</mn>         <mo>&#x2062;</mo>         <mi>y</mi>        </mrow>       </msub>      </mrow>     </mrow>    </mtd>   </mtr>  </mtable> </mrow></math></maths></p><p id="p-0034" num="0028">For a 6-parameter affine motion model, motion vector at sample location (x, y) in a block may be derived as:</p><p id="p-0035" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mrow>  <mo>{</mo>  <mtable>   <mtr>    <mtd>     <mrow>      <msub>       <mi>mv</mi>       <mi>x</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <mfrac>         <mrow>          <msub>           <mi>mv</mi>           <mrow>            <mn>1</mn>            <mo>&#x2062;</mo>            <mi>x</mi>           </mrow>          </msub>          <mo>-</mo>          <msub>           <mi>mv</mi>           <mrow>            <mn>0</mn>            <mo>&#x2062;</mo>            <mi>x</mi>           </mrow>          </msub>         </mrow>         <mi>W</mi>        </mfrac>        <mo>&#x2062;</mo>        <mi>x</mi>       </mrow>       <mo>+</mo>       <mfrac>        <mrow>         <msub>          <mi>mv</mi>          <mrow>           <mn>2</mn>           <mo>&#x2062;</mo>           <mi>y</mi>          </mrow>         </msub>         <mo>-</mo>         <msub>          <mi>mv</mi>          <mrow>           <mn>0</mn>           <mo>&#x2062;</mo>           <mi>x</mi>          </mrow>         </msub>        </mrow>        <mi>H</mi>       </mfrac>       <mo>+</mo>       <msub>        <mi>mv</mi>        <mrow>         <mn>0</mn>         <mo>&#x2062;</mo>         <mi>x</mi>        </mrow>       </msub>      </mrow>     </mrow>    </mtd>   </mtr>   <mtr>    <mtd>     <mrow>      <msub>       <mi>mv</mi>       <mi>y</mi>      </msub>      <mo>=</mo>      <mrow>       <mrow>        <mfrac>         <mrow>          <msub>           <mi>mv</mi>           <mrow>            <mn>1</mn>            <mo>&#x2062;</mo>            <mi>y</mi>           </mrow>          </msub>          <mo>-</mo>          <msub>           <mi>mv</mi>           <mrow>            <mn>0</mn>            <mo>&#x2062;</mo>            <mi>y</mi>           </mrow>          </msub>         </mrow>         <mi>W</mi>        </mfrac>        <mo>&#x2062;</mo>        <mi>x</mi>       </mrow>       <mo>+</mo>       <mfrac>        <mrow>         <msub>          <mi>mv</mi>          <mrow>           <mn>2</mn>           <mo>&#x2062;</mo>           <mi>y</mi>          </mrow>         </msub>         <mo>-</mo>         <msub>          <mi>mv</mi>          <mrow>           <mn>0</mn>           <mo>&#x2062;</mo>           <mi>y</mi>          </mrow>         </msub>        </mrow>        <mi>H</mi>       </mfrac>       <mo>+</mo>       <msub>        <mi>mv</mi>        <mrow>         <mn>0</mn>         <mo>&#x2062;</mo>         <mi>y</mi>        </mrow>       </msub>      </mrow>     </mrow>    </mtd>   </mtr>  </mtable> </mrow></math></maths></p><p id="p-0036" num="0029">Where (mv<sub>0x</sub>, mv<sub>0y</sub>) is a motion vector of the top-left corner control point, (mv<sub>1x</sub>, mv<sub>1y</sub>) is motion vector of the top-right corner control point, and (mv<sub>2x</sub>, mv<sub>2y</sub>) is a motion vector of the bottom-left corner control point.</p><p id="p-0037" num="0030">In order to simplify the motion compensation prediction, block based affine transform prediction may be applied. As an illustrative example, to derive motion vector of each 4&#xd7;4 luma subblock, a motion vector of the center sample of each subblock may be calculated according to above equations, and rounded to 1/16 fraction accuracy. Then motion compensation interpolation filters may be applied to generate a prediction of each subblock with derived motion vector. Still continuing the example, sub block size of chroma-components may also be set to be 4&#xd7;4. A motion vector of a 4&#xd7;4 chroma subblock may be calculated as the average of the MVs of the four corresponding 4&#xd7;4 luma subblocks.</p><p id="p-0038" num="0031">As done for translational motion inter prediction, there are also two affine motion inter prediction modes: affine merge mode and affine AMVP mode. Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, parameters used describe affine motion may be signaled to a decoder to apply affine motion compensation at the decoder. In some approaches, motion parameters may be signaled explicitly or by signaling translational control point motion vectors (CPMVs) and then deriving affine motion parameters from the translational motion vectors. Two control point motion vectors (CPMVs) may be utilized to derive affine motion parameters for a four-parameter affine motion model and three control point translational motion vectors (CPMVs) may be utilized to obtain parameters for a six-parameter motion model. Signaling affine motion parameters using control point motion vectors may allow use of efficient motion vector coding methods to signal affine motion parameters.</p><p id="p-0039" num="0032">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, some blocks may share the same motion vector information. For example, two blocks corresponding to an object moving across the screen may share the same motion vector as they both relate to the same object. In such scenarios, some approaches to motion compensation may utilize a merge mode, in which neighboring blocks may share a motion vector allowing motion information to be encoded in a bitstream for a first block, and a second block may inherit motion information from (e.g., merge with) the first block. During encoding, a merge list may be constructed containing available merge candidates. A merge candidate may be selected from constructed merge list and an index to the merge list may be signaled in the bitstream. During decoding, merge list may again be constructed from available merge candidates, and an index signaled in the bitstream may be used to indicate which block a current block will inherit motion information from (e.g., merge with).</p><p id="p-0040" num="0033"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram <b>200</b> illustrating exemplary embodiments of spatial candidates that may be considered in a typical approach to merge mode, such as is implemented for HEVC. A current block <b>204</b> may include a coding unit or prediction unit. Spatial merge candidates may include A0, A1, B0, B1, and B2. A0, A1, B0, and B2 may include neighboring prediction and/or coding units. When creating a merge candidate list, the list may be constructed by considering up to four spatial merge candidates derived from five spatial neighbor blocks, as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In this example, a threshold of five spatial candidates may be imposed. In addition to considering spatial candidates illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, additional candidates that may be considered for addition to the merge list may include one temporal merge candidate that may be derived from two temporal, co-located blocks; combined bi-predictive candidates, and zero motion vector candidates.</p><p id="p-0041" num="0034">Still referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, spatial merge candidates may be added to merge list in response to determining that they are available. In a quadtree plus binary decision tree (QTBT) partitioning some of the neighbor blocks may be asymmetrical blocks, and therefore they may not be considered as spatial merge candidates because it may be probable that they are asymmetrically partitioned because the partitions (e.g., prediction units) do not share similar motion information.</p><p id="p-0042" num="0035">As noted above, and with continued reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in some approaches to video coding merge candidate list may be constructed based on the following candidates: up to four spatial merge candidates that are derived from five spatial neighboring blocks; one temporal merge candidate derived from two temporal, co-located blocks; additional merge candidates including combined bi-predictive candidates; and zero motion vector candidates.</p><p id="p-0043" num="0036">Still referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in order to derive the list of spatial candidates, (a) there may be a check whether a neighboring block is available and contains motion information, and (b) redundancy check to avoid having candidates with redundant motion data in the list.</p><p id="p-0044" num="0037">With continued reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, when N is a number of spatial merge candidates, a complete redundancy check may consist of N&#xd7;(N&#x2212;1)/2 motion data comparisons. In case of five potential merge candidates, ten motion data comparisons may be used so that all candidates in merge list have different motion data. This may result in increased complexity of decoder.</p><p id="p-0045" num="0038">In some approaches to video coding, and still referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in order to improve coding efficiency, after merge candidate list is constructed (with a processing order of spatial candidate locations being A1, B1, B0, A0, B2), an order of each merge candidate is adjusted according to a template matching cost. Template matching cost may be measured by a Sum of Absolute Difference (SAD) between the neighboring samples of a current coding unit (CU) and their corresponding reference samples. For instance, and without limitation, merge candidates may be ordered in an increasing order of SAD computed with that merge candidate. A number of merge candidates selected using a template matching cost may be limited. For example, a set of four lowest cost candidates among five originally generated and/or provided candidates may be selected.</p><p id="p-0046" num="0039">Still referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, some implementations of current subject matter may further improve coding efficiency by reordering the merge candidates using global motion vectors. Global motion in video, as used in this disclosure, refers to motion that occurs in an entire frame. Global motion may typically be caused by camera motion such as camera panning and zooming, which affects an entire frame.</p><p id="p-0047" num="0040">Still referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, some implementations of the current subject matter may create merge candidate list based on motion vectors signaled to decoder. If global motion is signaled, such global motion may be expected to be common to many blocks in a frame. For example, as illustrated for exemplary purposes in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, three out of five spatial merge candidates (B1, B2, and A1) may be signaled based on global motions. Based on signaling, at decoder, the decoder may create the following list of merge candidates. They are ordered in such a way that global motion candidates are first in the list as shown in Table 1.</p><p id="p-0048" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Updated (re-ordered) merge candidate list</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>B1&#x2014;GMV1</entry></row><row><entry>B2&#x2014;GMV2</entry></row><row><entry>A1&#x2014;GMV3</entry></row><row><entry>B0</entry></row><row><entry>A0</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0049" num="0041">Still referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, since a block is likely to have motion similar to global motion, modifying list so that global motion vectors are first candidates in the list may reduce the bits necessary to signal predictive candidates and to encode motion vector differences. In such a way motion vector coding may be improved and bitrate reduced, which will improve compression efficiency.</p><p id="p-0050" num="0042">In some implementations, and with continued reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, global motion signaling may be included in a header, such as a PPS or SPS. Global motion may vary from picture to picture. Motion vectors signaled in picture headers may describe motion relative to previously decoded frames. In some implementations, global motion may be translational or affine. Motion mode, such as a number of parameters, whether the model is affine, translational, or the like, which is used may also be signaled in a picture header. <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates three example embodiments of motion models <b>600</b> that may be utilized for global motion including their index value (0, 1, or 2).</p><p id="p-0051" num="0043">Still referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, translational CPMVs may be signaled in a PPS. Control points may be predefined. For example, control point MV 0 may be relative to a top left corner of a picture, MV 1 may be relative to a top right corner, and MV 3 may be relative to a bottom left corner of the picture.</p><p id="p-0052" num="0044">Continuing to refer to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, global motion may be relative to the previously coded frame. When only one set of global motion parameters are present, the motion can be relative to the frame that is presented immediately before the current frame.</p><p id="p-0053" num="0045"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a process flow diagram illustrating an exemplary embodiment of a process <b>500</b> of merge candidate reorder based on global motion vector.</p><p id="p-0054" num="0046">At step <b>505</b>, and still referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a bitstream including a current block is received by a decoder. Current block may be contained within a bitstream that decoder receives. Bitstream may include, for example, data found in a stream of bits that is an input to a decoder when using data compression. Bitstream may include information necessary to decode a video. Receiving may include extracting and/or parsing a block and associated signaling information from bit stream. In some implementations, current block may include a coding tree unit (CTU), a coding unit (CU), or a prediction unit (PU).</p><p id="p-0055" num="0047">At step <b>510</b>, and further referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a motion vector candidate list including a motion vector candidate having motion information that characterizes a global motion vector may be constructed for a current block. Global motion vector may be characterized by a header of bitstream, the header including a picture parameter set (PPS) and/or a sequence parameter set (SPS).</p><p id="p-0056" num="0048">At step <b>515</b>, and continuing to refer to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a motion vector candidate list is reordered such that a motion vector candidate having motion information that characterizes global motion vector is first in the reordered motion vector candidate list. Reordering may include inserting a first global motion vector candidate into merge candidate list. In some implementations, constructing of motion vector candidate list may include reordering.</p><p id="p-0057" num="0049">At step <b>520</b>, and further referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, pixel data of current block may be reconstructed using reordered motion vector candidate list.</p><p id="p-0058" num="0050">Still referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in some implementations, decoder may be configured to determine global motion is indicated for a current frame that includes current block. Global motion vector may include a control point motion vector. Control point motion vector may include a translational motion vector. Control point motion vector may include a vector of a four parameter affine motion model or a six parameter affine motion model.</p><p id="p-0059" num="0051"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a system block diagram illustrating an example decoder <b>600</b> capable of decoding a bitstream with merge candidate reorder based on global motion vector. Decoder <b>600</b> may include an entropy decoder processor <b>604</b>, an inverse quantization and inverse transformation processor <b>608</b>, a deblocking filter <b>612</b>, a frame buffer <b>616</b>, a motion compensation processor <b>620</b> and/or an intra prediction processor <b>624</b>.</p><p id="p-0060" num="0052">In operation, and still referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, bit stream <b>628</b> may be received by decoder <b>600</b> and input to entropy decoder processor <b>604</b>, which may entropy decode portions of bit stream into quantized coefficients. Quantized coefficients may be provided to inverse quantization and inverse transformation processor <b>608</b>, which may perform inverse quantization and inverse transformation to create a residual signal, which may be added to an output of motion compensation processor <b>620</b> or intra prediction processor <b>624</b> according to a processing mode. An output of the motion compensation processor <b>620</b> and intra prediction processor <b>624</b> may include a block prediction based on a previously decoded block. A sum of prediction and residual may be processed by deblocking filter <b>612</b> and stored in a frame buffer <b>616</b>.</p><p id="p-0061" num="0053"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a process flow diagram illustrating an exemplary embodiment of a process <b>700</b> of encoding a video with merge candidate reorder based on global motion vector according to some aspects of the current subject matter that can reduce encoding complexity while increasing compression efficiency. At step <b>705</b>, a video frame may undergo initial block segmentation, for example, using a tree-structured macro block partitioning scheme that can include partitioning a picture frame into CTUs and CUs.</p><p id="p-0062" num="0054">At step <b>710</b>, a candidate list may be determined. Candidate list may be based on global motion for a current block. Candidate list may include a motion vector candidate having motion information that characterizes a global motion vector. Motion vector candidate list may be reordered such that a motion vector candidate having motion information that characterizes global motion vector is first in the reordered motion vector candidate list. Reordering may include inserting a first global motion vector candidate into merge candidate list. In some implementations, constructing of motion vector candidate list may include reordering.</p><p id="p-0063" num="0055">At step <b>715</b>, block may be encoded and included in a bitstream. Encoding may include utilizing inter prediction and intra prediction modes, as a non-limiting example. More specifically, an index into reordered candidate list may be included and/or encoded into bitstream for use by a decoder.</p><p id="p-0064" num="0056"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a system block diagram illustrating an example video encoder <b>800</b> capable of encoding a video with merge candidate reorder based on global motion vector. Example video encoder <b>800</b> may receive an input video <b>804</b>, which may be initially segmented or dividing according to a processing scheme, such as a tree-structured macro block partitioning scheme (e.g., quad-tree plus binary tree). An example of a tree-structured macro block partitioning scheme may include partitioning a picture frame into large block elements called coding tree units (CTU). In some implementations, each CTU may be further partitioned one or more times into a number of sub-blocks called coding units (CU). A final result of this portioning may include a group of sub-blocks that may be called predictive units (PU). Transform units (TU) may also be utilized.</p><p id="p-0065" num="0057">Still referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, example video encoder <b>800</b> may include an intra prediction processor <b>808</b>, a motion estimation/compensation processor <b>812</b>, which may also be referred to as an inter prediction processor, capable of constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list, a transform/quantization processor <b>816</b>, an inverse quantization/inverse transform processor <b>820</b>, an in-loop filter <b>824</b>, a decoded picture buffer <b>828</b>, and/or an entropy coding processor <b>832</b>. Bit stream parameters may be input to the entropy coding processor <b>832</b> for inclusion in the output bit stream <b>836</b>.</p><p id="p-0066" num="0058">In operation, and with continued reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, for each block of a frame of input video <b>804</b>, whether to process block via intra picture prediction or using motion estimation/compensation may be determined. Block may be provided to intra prediction processor <b>808</b> or motion estimation/compensation processor <b>812</b>. If block is to be processed via intra prediction, intra prediction processor <b>808</b> may perform processing to output a predictor. If block is to be processed via motion estimation/compensation, motion estimation/compensation processor <b>812</b> may perform processing including constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list, if applicable.</p><p id="p-0067" num="0059">Further referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a residual may be formed by subtracting a predictor from input video. Residual may be received by transform/quantization processor <b>816</b>, which may perform transformation processing (e.g., discrete cosine transform (DCT)) to produce coefficients, which may be quantized. Quantized coefficients and any associated signaling information may be provided to entropy coding processor <b>832</b> for entropy encoding and inclusion in output bit stream <b>836</b>. Entropy encoding processor <b>832</b> may support encoding of signaling information related to encoding a current block. In addition, quantized coefficients may be provided to inverse quantization/inverse transformation processor <b>820</b>, which may reproduce pixels, which may be combined with a predictor and processed by in loop filter <b>824</b>, an output of which may be stored in decoded picture buffer <b>828</b> for use by motion estimation/compensation processor <b>812</b> that is capable of constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list.</p><p id="p-0068" num="0060">With continued reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, although a few variations have been described in detail above, other modifications or additions are possible. For example, in some implementations, current blocks may include any symmetric blocks (8&#xd7;8, 16&#xd7;16, 32&#xd7;32, 64&#xd7;64, 128&#xd7;128, and the like) as well as any asymmetric block (8&#xd7;4, 16&#xd7;8, and the like).</p><p id="p-0069" num="0061">In some implementations, and still referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a quadtree plus binary decision tree (QTBT) may be implemented. In QTBT, at a Coding Tree Unit level, partition parameters of QTBT may be dynamically derived to adapt to local characteristics without transmitting any overhead. Subsequently, at a Coding Unit level, a joint-classifier decision tree structure may eliminate unnecessary iterations and control the risk of false prediction. In some implementations, LTR frame block update mode may be available as an additional option available at every leaf node of QTBT.</p><p id="p-0070" num="0062">In some implementations, and still referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, additional syntax elements may be signaled at different hierarchy levels of bitstream. For example, a flag may be enabled for an entire sequence by including an enable flag coded in a Sequence Parameter Set (SPS). Further, a CTU flag may be coded at a coding tree unit (CTU) level.</p><p id="p-0071" num="0063">It is to be noted that any one or more of the aspects and embodiments described herein may be conveniently implemented using digital electronic circuitry, integrated circuitry, specially designed application specific integrated circuits (ASICs), field programmable gate arrays (FPGAs) computer hardware, firmware, software, and/or combinations thereof, as realized and/or implemented in one or more machines (e.g., one or more computing devices that are utilized as a user computing device for an electronic document, one or more server devices, such as a document server, etc.) programmed according to the teachings of the present specification, as will be apparent to those of ordinary skill in the computer art. These various aspects or features may include implementation in one or more computer programs and/or software that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device. Appropriate software coding may readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those of ordinary skill in the software art. Aspects and implementations discussed above employing software and/or software modules may also include appropriate hardware for assisting in the implementation of the machine executable instructions of the software and/or software module.</p><p id="p-0072" num="0064">Such software may be a computer program product that employs a machine-readable storage medium. A machine-readable storage medium may be any medium that is capable of storing and/or encoding a sequence of instructions for execution by a machine (e.g., a computing device) and that causes the machine to perform any one of the methodologies and/or embodiments described herein. Examples of a machine-readable storage medium include, but are not limited to, a magnetic disk, an optical disc (e.g., CD, CD-R, DVD, DVD-R, etc.), a magneto-optical disk, a read-only memory &#x201c;ROM&#x201d; device, a random access memory &#x201c;RAM&#x201d; device, a magnetic card, an optical card, a solid-state memory device, an EPROM, an EEPROM, Programmable Logic Devices (PLDs), and/or any combinations thereof. A machine-readable medium, as used herein, is intended to include a single medium as well as a collection of physically separate media, such as, for example, a collection of compact discs or one or more hard disk drives in combination with a computer memory. As used herein, a machine-readable storage medium does not include transitory forms of signal transmission.</p><p id="p-0073" num="0065">Such software may also include information (e.g., data) carried as a data signal on a data carrier, such as a carrier wave. For example, machine-executable information may be included as a data-carrying signal embodied in a data carrier in which the signal encodes a sequence of instruction, or portion thereof, for execution by a machine (e.g., a computing device) and any related information (e.g., data structures and data) that causes the machine to perform any one of the methodologies and/or embodiments described herein.</p><p id="p-0074" num="0066">Examples of a computing device include, but are not limited to, an electronic book reading device, a computer workstation, a terminal computer, a server computer, a handheld device (e.g., a tablet computer, a smartphone, etc.), a web appliance, a network router, a network switch, a network bridge, any machine capable of executing a sequence of instructions that specify an action to be taken by that machine, and any combinations thereof. In one example, a computing device may include and/or be included in a kiosk.</p><p id="p-0075" num="0067"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a diagrammatic representation of one embodiment of a computing device in the exemplary form of a computer system <b>900</b> within which a set of instructions for causing a control system to perform any one or more of the aspects and/or methodologies of the present disclosure may be executed. It is also contemplated that multiple computing devices may be utilized to implement a specially configured set of instructions for causing one or more of the devices to perform any one or more of the aspects and/or methodologies of the present disclosure. Computer system <b>900</b> includes a processor <b>904</b> and a memory <b>908</b> that communicate with each other, and with other components, via a bus <b>912</b>. Bus <b>912</b> may include any of several types of bus structures including, but not limited to, a memory bus, a memory controller, a peripheral bus, a local bus, and any combinations thereof, using any of a variety of bus architectures.</p><p id="p-0076" num="0068">Memory <b>908</b> may include various components (e.g., machine-readable media) including, but not limited to, a random-access memory component, a read only component, and any combinations thereof. In one example, a basic input/output system <b>916</b> (BIOS), including basic routines that help to transfer information between elements within computer system <b>900</b>, such as during start-up, may be stored in memory <b>908</b>. Memory <b>908</b> may also include (e.g., stored on one or more machine-readable media) instructions (e.g., software) <b>920</b> embodying any one or more of the aspects and/or methodologies of the present disclosure. In another example, memory <b>908</b> may further include any number of program modules including, but not limited to, an operating system, one or more application programs, other program modules, program data, and any combinations thereof.</p><p id="p-0077" num="0069">Computer system <b>900</b> may also include a storage device <b>924</b>. Examples of a storage device (e.g., storage device <b>924</b>) include, but are not limited to, a hard disk drive, a magnetic disk drive, an optical disc drive in combination with an optical medium, a solid-state memory device, and any combinations thereof. Storage device <b>924</b> may be connected to bus <b>912</b> by an appropriate interface (not shown). Example interfaces include, but are not limited to, SCSI, advanced technology attachment (ATA), serial ATA, universal serial bus (USB), IEEE 1394 (FIREWIRE), and any combinations thereof. In one example, storage device <b>924</b> (or one or more components thereof) may be removably interfaced with computer system <b>900</b> (e.g., via an external port connector (not shown)). Particularly, storage device <b>924</b> and an associated machine-readable medium <b>928</b> may provide nonvolatile and/or volatile storage of machine-readable instructions, data structures, program modules, and/or other data for computer system <b>900</b>. In one example, software <b>920</b> may reside, completely or partially, within machine-readable medium <b>928</b>. In another example, software <b>920</b> may reside, completely or partially, within processor <b>904</b>.</p><p id="p-0078" num="0070">Computer system <b>900</b> may also include an input device <b>932</b>. In one example, a user of computer system <b>900</b> may enter commands and/or other information into computer system <b>900</b> via input device <b>932</b>. Examples of an input device <b>932</b> include, but are not limited to, an alpha-numeric input device (e.g., a keyboard), a pointing device, a joystick, a gamepad, an audio input device (e.g., a microphone, a voice response system, etc.), a cursor control device (e.g., a mouse), a touchpad, an optical scanner, a video capture device (e.g., a still camera, a video camera), a touchscreen, and any combinations thereof. Input device <b>932</b> may be interfaced to bus <b>912</b> via any of a variety of interfaces (not shown) including, but not limited to, a serial interface, a parallel interface, a game port, a USB interface, a FIREWIRE interface, a direct interface to bus <b>912</b>, and any combinations thereof. Input device <b>932</b> may include a touch screen interface that may be a part of or separate from display <b>936</b>, discussed further below. Input device <b>932</b> may be utilized as a user selection device for selecting one or more graphical representations in a graphical interface as described above.</p><p id="p-0079" num="0071">A user may also input commands and/or other information to computer system <b>900</b> via storage device <b>924</b> (e.g., a removable disk drive, a flash drive, etc.) and/or network interface device <b>940</b>. A network interface device, such as network interface device <b>940</b>, may be utilized for connecting computer system <b>900</b> to one or more of a variety of networks, such as network <b>944</b>, and one or more remote devices <b>948</b> connected thereto. Examples of a network interface device include, but are not limited to, a network interface card (e.g., a mobile network interface card, a LAN card), a modem, and any combination thereof. Examples of a network include, but are not limited to, a wide area network (e.g., the Internet, an enterprise network), a local area network (e.g., a network associated with an office, a building, a campus or other relatively small geographic space), a telephone network, a data network associated with a telephone/voice provider (e.g., a mobile communications provider data and/or voice network), a direct connection between two computing devices, and any combinations thereof. A network, such as network <b>944</b>, may employ a wired and/or a wireless mode of communication. In general, any network topology may be used. Information (e.g., data, software <b>920</b>, etc.) may be communicated to and/or from computer system <b>900</b> via network interface device <b>940</b>.</p><p id="p-0080" num="0072">Computer system <b>900</b> may further include a video display adapter <b>952</b> for communicating a displayable image to a display device, such as display device <b>936</b>. Examples of a display device include, but are not limited to, a liquid crystal display (LCD), a cathode ray tube (CRT), a plasma display, a light emitting diode (LED) display, and any combinations thereof. Display adapter <b>952</b> and display device <b>936</b> may be utilized in combination with processor <b>904</b> to provide graphical representations of aspects of the present disclosure. In addition to a display device, computer system <b>900</b> may include one or more other peripheral output devices including, but not limited to, an audio speaker, a printer, and any combinations thereof. Such peripheral output devices may be connected to bus <b>912</b> via a peripheral interface <b>956</b>. Examples of a peripheral interface include, but are not limited to, a serial port, a USB connection, a FIREWIRE connection, a parallel connection, and any combinations thereof.</p><p id="p-0081" num="0073">The foregoing has been a detailed description of illustrative embodiments of the invention. Various modifications and additions can be made without departing from the spirit and scope of this invention. Features of each of the various embodiments described above may be combined with features of other described embodiments as appropriate in order to provide a multiplicity of feature combinations in associated new embodiments. Furthermore, while the foregoing describes a number of separate embodiments, what has been described herein is merely illustrative of the application of the principles of the present invention. Additionally, although particular methods herein may be illustrated and/or described as being performed in a specific order, the ordering is highly variable within ordinary skill to achieve embodiments as disclosed herein. Accordingly, this description is meant to be taken only by way of example, and not to otherwise limit the scope of this invention.</p><p id="p-0082" num="0074">In the descriptions above and in the claims, phrases such as &#x201c;at least one of&#x201d; or &#x201c;one or more of&#x201d; may occur followed by a conjunctive list of elements or features. The term &#x201c;and/or&#x201d; may also occur in a list of two or more elements or features. Unless otherwise implicitly or explicitly contradicted by the context in which it is used, such a phrase is intended to mean any of the listed elements or features individually or any of the recited elements or features in combination with any of the other recited elements or features. For example, the phrases &#x201c;at least one of A and B;&#x201d; &#x201c;one or more of A and B;&#x201d; and &#x201c;A and/or B&#x201d; are each intended to mean &#x201c;A alone, B alone, or A and B together.&#x201d; A similar interpretation is also intended for lists including three or more items. For example, the phrases &#x201c;at least one of A, B, and C;&#x201d; &#x201c;one or more of A, B, and C;&#x201d; and &#x201c;A, B, and/or C&#x201d; are each intended to mean &#x201c;A alone, B alone, C alone, A and B together, A and C together, B and C together, or A and B and C together.&#x201d; In addition, use of the term &#x201c;based on,&#x201d; above and in the claims is intended to mean, &#x201c;based at least in part on,&#x201d; such that an unrecited feature or element is also permissible.</p><p id="p-0083" num="0075">The subject matter described herein can be embodied in systems, apparatus, methods, and/or articles depending on the desired configuration. The implementations set forth in the foregoing description do not represent all implementations consistent with the subject matter described herein. Instead, they are merely some examples consistent with aspects related to the described subject matter. Although a few variations have been described in detail above, other modifications or additions are possible. In particular, further features and/or variations can be provided in addition to those set forth herein. For example, the implementations described above can be directed to various combinations and sub-combinations of the disclosed features and/or combinations and sub-combinations of several further features disclosed above. In addition, the logic flows depicted in the accompanying figures and/or described herein do not necessarily require the particular order shown, or sequential order, to achieve desirable results. Other implementations may be within the scope of the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230007288A1-20230105-M00001.NB"><img id="EMI-M00001" he="10.58mm" wi="76.20mm" file="US20230007288A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230007288A1-20230105-M00002.NB"><img id="EMI-M00002" he="10.58mm" wi="76.20mm" file="US20230007288A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-01-20" num="01-20"><claim-text><b>1</b>-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A decoder, the decoder comprising circuitry configured to:<claim-text>receive a bitstream including a coded picture, the coded picture including a first region having a first plurality of coding units and a second region having a second plurality of coding units;</claim-text><claim-text>construct for each coding unit in the first region a motion vector candidate list, each motion vector candidate list having a common motion vector, wherein the motion vector candidate lists are ordered such that the common motion vector is first;</claim-text><claim-text>decode the first plurality of coding units using the common motion vector from the motion vector candidate lists, whereby a picture region with common motion is reconstructed in the first region;</claim-text><claim-text>ascertain from the bitstream individually determined motion vectors for each coding unit of the second region, wherein adjacent coding units in the second region have different individually determined motion vectors, each individually determined motion vector being one of a translational motion vector or a control point motion vector for four parameter or six parameter affine motion; and</claim-text><claim-text>decode the second plurality of coding units using the individually determined motion vectors, whereby local motion in the second region is reconstructed.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The decoder of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the decoder configured to determine global motion is indicated for the coded picture.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The decoder of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the common motion vector includes a control point motion vector.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The decoder of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the control point motion vector is a translational motion vector.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The decoder of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the control point motion vector is a vector of a four parameter affine motion model.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The decoder of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the control point motion vector is a vector of a six parameter affine motion model.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The decoder of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the decoder further comprising:<claim-text>an entropy decoder processor configured to receive the bitstream and decode the bitstream into quantized coefficients;</claim-text><claim-text>an inverse quantization and inverse transformation processor configured to process the quantized coefficients including performing an inverse discrete cosine;</claim-text><claim-text>a deblocking filter;</claim-text><claim-text>a frame buffer; and</claim-text><claim-text>an intra prediction processor.</claim-text></claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The decoder of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein at least a coding unit of the first plurality of coding units forms part of a quadtree plus binary decision tree.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The decoder of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein at least a coding unit of the first plurality of coding units is a coding tree unit.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The decoder of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein at least a coding unit of the first plurality of coding units is a coding unit.</claim-text></claim></claims></us-patent-application>