<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007474A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007474</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17856164</doc-number><date>20220701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>IN</country><doc-number>202141029723</doc-number><date>20210702</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>0431</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>069</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>0431</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>069</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0272</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">SYSTEMS AND METHODS FOR SECURE VIRTUALIZED BASE STATION ORCHESTRATION</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>CommScope Technologies LLC</orgname><address><city>Hickory</city><state>NC</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Ni</last-name><first-name>James J.</first-name><address><city>Medford</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Ramakrishnan</last-name><first-name>Shanthakumar</first-name><address><city>Westford</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Chan</last-name><first-name>Tat Keung</first-name><address><city>San Diego</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Medvinsky</last-name><first-name>Alexander</first-name><address><city>San Diego</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Venkatesh</last-name><first-name>Prashanth</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Sambandan</last-name><first-name>Devaraj</first-name><address><city>Bengaluru</city><country>IN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>CommScope Technologies LLC</orgname><role>02</role><address><city>Hickory</city><state>NC</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In one embodiment, a method for secure virtualized wireless base station orchestration comprises: obtaining a node certificate and private key from a global CA defining a PKI signing certificate/private key; obtaining a sub CA certificate/private key from either an edge cloud node cluster or the global CA, using a PKI request signed using the PKI signing certificate/private key; establishing an orchestration access IPsec tunnel to a cloud comprising edge cloud orchestration functions; utilizing the orchestration functions to deploy on the node virtualized entities comprising VNFs of a wireless base station; obtaining at least one VNF certificate and private key for the VNFs from the global CA using a PKI request signed using the global certificate/private key; utilizing the VNF certificate/private key, establishing IPsec tunnels between the VNFs and a wireless network services operator network and/or to an OAM secure gateway for a DMS.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="97.03mm" wi="158.75mm" file="US20230007474A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="229.11mm" wi="159.68mm" orientation="landscape" file="US20230007474A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="239.61mm" wi="158.07mm" orientation="landscape" file="US20230007474A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="225.55mm" wi="127.93mm" orientation="landscape" file="US20230007474A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="229.28mm" wi="117.52mm" orientation="landscape" file="US20230007474A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="229.28mm" wi="117.77mm" orientation="landscape" file="US20230007474A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="221.40mm" wi="141.73mm" orientation="landscape" file="US20230007474A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="230.55mm" wi="152.48mm" orientation="landscape" file="US20230007474A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="226.65mm" wi="147.57mm" orientation="landscape" file="US20230007474A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="227.75mm" wi="154.77mm" orientation="landscape" file="US20230007474A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="229.95mm" wi="154.60mm" orientation="landscape" file="US20230007474A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="234.19mm" wi="153.33mm" orientation="landscape" file="US20230007474A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="236.81mm" wi="153.16mm" orientation="landscape" file="US20230007474A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="239.10mm" wi="150.62mm" orientation="landscape" file="US20230007474A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="226.57mm" wi="151.38mm" orientation="landscape" file="US20230007474A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="223.01mm" wi="151.72mm" orientation="landscape" file="US20230007474A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="219.54mm" wi="158.07mm" orientation="landscape" file="US20230007474A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="213.19mm" wi="150.20mm" orientation="landscape" file="US20230007474A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="229.28mm" wi="149.44mm" orientation="landscape" file="US20230007474A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="230.04mm" wi="150.11mm" orientation="landscape" file="US20230007474A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="229.28mm" wi="151.81mm" orientation="landscape" file="US20230007474A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="235.37mm" wi="146.73mm" orientation="landscape" file="US20230007474A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="241.47mm" wi="149.18mm" orientation="landscape" file="US20230007474A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="242.40mm" wi="148.67mm" orientation="landscape" file="US20230007474A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="235.29mm" wi="148.34mm" orientation="landscape" file="US20230007474A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="231.56mm" wi="147.91mm" orientation="landscape" file="US20230007474A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="209.30mm" wi="158.16mm" orientation="landscape" file="US20230007474A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims priority to Indian Provisional Application No. 202141029723, filed on Jul. 2, 2021, and titled &#x201c;SYSTEMS AND METHODS FOR SECURE VIRTUALIZED BASE STATION ORCHESTRATION,&#x201d; the contents of which are incorporated herein by reference in their entirety.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Cloud-based virtualization of Fifth Generation (5G) base stations (also referred to as &#x201c;g NodeBs&#x201d; or &#x201c;gNBs&#x201d;) is widely promoted by standards organizations, wireless network operators, and wireless equipment vendors. Such an approach can help provide better high-availability and scalability solutions as well as addressing other issues in the network.</p><p id="p-0004" num="0003">In general, a distributed 5G gNodeB can be partitioned into different entities, each of which can be implemented in different ways. For example, each entity can be implemented as a physical network function (PNF) or a virtual network function (VNF) and in different locations within an operator's network (for example, in the operator's &#x201c;edge cloud&#x201d; or &#x201c;central cloud&#x201d;). A distributed 5G gNodeB can be partitioned into one or more central units (CUs), one or more distributed units (DUs), and one or more radio units (RUs). Each CU can be further partitioned into a central unit control-plane (CU-CP) and one or more central unit user-plane (CU-UPs) dealing with the gNodeB Packet Data Convergence Protocol (PDCP) and above layers of functions of the respective planes, and each DU configured to implement the upper part of physical layer through radio link control layer of both control-plane and user-plane of gNodeB. In this example, each RU is configured to implement the radio frequency (RF) interface and lower physical layer control-plane and user-plane functions of the gNodeB. Each RU is typically implemented as a physical network function (PNF) and is deployed in a physical location where radio coverage is to be provided. Each DU is typically implemented as a virtual network function (VNF) and, as the name implies, is typically distributed and deployed in a distributed manner in the operator's edge cloud. Each CU-CP and CU-UP are typically implemented as virtual network functions (VNFs) and, as the name implies, are typically centralized and deployed in the operator's central cloud.</p><p id="p-0005" num="0004">Orchestrating gNodeB virtualized network functions (VNFs) and configure them into service ready network elements involves mainly three major stages: 1) virtualization infrastructure orchestration/management (referred as VIM in relevant industry standards) stage in which bare metal hardware elements are orchestrated by the infrastructure orchestration framework to build up the virtualization environment for the next stage of service orchestration; 2) virtual network functions (VNFs) service orchestration/management (referred as VNFM in relevant industry standards) stage in which gNodeB VNFs are orchestrated over the virtualization environment established in previous stage; 3) virtual network functions (VNFs) service configuration and activation stage in which the operator of gNodeBs configures and activates them via OAM to bring them into services. In all these three stages, when the orchestrating and managing functions are not in the same trusted network environments as where the gNodeB VNFs are to be deployed, appropriate security procedures such as Internet Protocol Security (IPsec) tunnels, secure shell protocol (SSH) access, Transport Layer Security (TLS)/Hypertext Transfer Protocol Secure (HTTPS) and so on are used to secure the relevant elements. To satisfy all these security requirements, interactions with certificate authority (CA) to acquire security certificates and keys are necessary.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">The Embodiments of the present disclosure provide methods and systems for secure virtualized base station orchestration and will be understood by reading and studying the following specification.</p><p id="p-0007" num="0006">A method for secure virtualized wireless base station orchestration on a node of a scalable cloud environment, the method comprising: obtaining a node certificate and private key from a global certificate authority (CA) using a PKI request signed using a global certification and key, wherein the node certificate and private key defines a PKI signing certificate and private key; obtaining an edge cloud node cluster sub CA certificate and private key from either an edge cloud node cluster or from the global CA, using a PKI request signed using the PKI signing certificate and private key; establishing an orchestration access IPsec tunnel to an orchestration central cloud comprising one or more functions for edge cloud orchestration; utilizing, via the orchestration access IPsec tunnel, the one or more functions for edge cloud orchestration to deploy on the node one or more virtualized entities comprising one or more virtual network functions of a wireless base station; obtaining at least one virtual network function (VNF) certificate and private key for the one or more deployed VNFs from the global CA using a PKI request signed using the global certificate and private key; utilizing the at least one VNF certificate and private key, establishing one or more IPsec tunnels comprising at least one of: at least one X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network; at least one S1/X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network; and at least one O1 IPsec tunnel to an Operations and Maintenance (OAM) secure gateway for a wireless base station Device Management System (DMS).</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">DRAWINGS</heading><p id="p-0008" num="0007">Embodiments of the present disclosure can be more easily understood and further advantages and uses thereof more readily apparent, when considered in view of the description of the preferred embodiments and the following figures in which:</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating one example of a virtualized base station embodiment.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref> illustrate IPsec tunnels for one example of a virtualized base station embodiment.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIGS. <b>4</b>A and <b>4</b>B</figref> illustrate example VNF traffic flows through an IPsec tunnel.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating entities utilized in the VNF orchestration processes of one example embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a diagram illustrating an example backend PKI system embodiment.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>F</figref> illustrate an example process embodiment for centralized authorization token-based certificates and keys acquisition.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>B</figref> illustrate a process of centralized authorization token-based VNF certificates and keys renewal.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a process of centralized authorization token-based edge cloud node cluster sub CA certificates and keys renewal.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a process of centralized authorization token-based node certificates and keys renewal.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIGS. <b>10</b>A-<b>10</b>F</figref> illustrate an example process embodiment for distributed signing key-based certificates and keys acquisition.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a process of distributed signing key-based VNF certificates and keys renewal.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a process of distributed signing key-based edge cloud node cluster sub CA certificates and keys renewal.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a process of distributed signing key-based node certificates and keys renewal.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0022" num="0021">In accordance with common practice, the various described features are not drawn to scale but are drawn to emphasize features relevant to the present disclosure. Reference characters denote like elements throughout figures and text.</p><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022">In the following detailed description, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of specific illustrative embodiments in which the embodiments may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the embodiments, and it is to be understood that other embodiments may be utilized and that logical, mechanical and electrical changes may be made without departing from the scope of the present disclosure. The following detailed description is, therefore, not to be taken in a limiting sense.</p><p id="p-0024" num="0023">The systems and methods described herein provide for secure interactions with certificate authorities (CAs) to acquire security certificates and keys for orchestrating a virtualized wireless base station onto one or more VNF hosting platforms. These disclosed embodiments include both a centralized authorization token-based solution and a distributed signing key-based solution, with processes for obtaining renewed sets of certificates and keys for both centralized and distributed solutions.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating one example of a virtualized wireless base station <b>100</b> on a VNF hosting platform on which the secure VNF orchestration solutions described herein are provided. The VNF hosting platform comprises a processor (for example, a central processing unit (CPU)) and a memory, which together store and execute code to realize aspects of the virtualized wireless base station <b>100</b> in operation. In the context of a fourth generation (4G) Long Term Evolution (LTE) system, a base station <b>100</b> may also be referred to as an &#x201c;evolved NodeB&#x201d; or &#x201c;eNodeB,&#x201d; and in the context of a fifth generation (5G) New Radio (NR) system, may also be referred to as a &#x201c;gNodeB.&#x201d; Base station <b>100</b> may be referred to as something else in the context of other wireless interfaces.</p><p id="p-0026" num="0025">In the particular example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the virtualized wireless base station <b>100</b> comprises a 5G gNodeB <b>100</b> partitioned into one or more central units (CUs) <b>102</b>, which includes a central unit control-plane (CU-CP) VNF <b>116</b> and one or more central unit user-plane (CU-UP) VNFs <b>118</b>. The gNodeB <b>100</b> is further partitioned into one or more distributed units (DUs) <b>104</b>, which are composed of one or more DU virtual network functions <b>105</b>, and one or more radio units (RUs) <b>106</b>. In this example, the virtualized 5G gNodeB <b>100</b> is configured so that each CU <b>102</b> is configured to serve one or more DU VNFs <b>105</b> and each DU VNF <b>105</b> is configured to serve one or more RUs <b>106</b>. In the particular configuration shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a single CU <b>102</b> serves a single DU VNF <b>105</b>, and the DU VNF <b>105</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> serves three RUs <b>106</b>. However, the particular configuration shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is only one example. In other embodiments, other numbers of CUs <b>102</b>, DUs <b>104</b>, and RUs <b>106</b> can be used. Also, the number of DU VNFs <b>105</b> served by each CU <b>102</b> can vary from CU <b>102</b> to CU <b>102</b>. Likewise, the number of RUs <b>106</b> served by each DU <b>104</b> can vary from DU VNF <b>105</b> to DU VNF <b>105</b>.</p><p id="p-0027" num="0026">Moreover, although the following embodiments are primarily described as being implemented for use to provide 5G NR service, it is to be understood the techniques described here can be used with other wireless interfaces (for example, fourth generation (4G) Long-Term Evolution (LTE) service) and references to &#x201c;gNodeB&#x201d; used in this disclosure can be replaced with the more general term &#x201c;base station&#x201d; or &#x201c;base station entity&#x201d; and/or a term particular to the alternative wireless interfaces (for example, &#x201c;enhanced NodeB&#x201d; or &#x201c;eNB&#x201d;). Furthermore, it is also to be understood that 5G NR embodiments can be used in both standalone and non-standalone modes (or other modes developed in the future) and the following description is not intended to be limited to any particular mode. Also, unless explicitly indicated to the contrary, references to &#x201c;layers&#x201d; or a &#x201c;layer&#x201d; (for example, Layer <b>1</b>, Layer <b>2</b>, Layer <b>3</b>, the Physical Layer, the MAC Layer, etc.) set forth herein refer to layers of the wireless interface (for example, 5G NR or 4G LTE) used for wireless communication between a base station and user equipment).</p><p id="p-0028" num="0027">In general, the virtualized gNodeB <b>100</b> is configured to provide wireless service to various numbers of user equipment (UEs) <b>108</b> using one or more cells <b>110</b> (only one of which is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> for ease of illustration). Each RU <b>106</b> includes or is coupled to a respective set of one or more antennas <b>112</b> via which downlink RF signals are radiated to UEs <b>108</b> and via which uplink RF signals transmitted by UEs <b>108</b> are received.</p><p id="p-0029" num="0028">In one configuration (used, for example, in indoor deployments), each RU <b>106</b> is co-located with its respective set of antennas <b>112</b> and is remotely located from the DU VNF <b>105</b> and CU <b>102</b> serving it as well as the other RUs <b>106</b>. In another configuration (used, for example, in outdoor deployments), the respective sets of antennas <b>112</b> for multiple RUs <b>106</b> are deployed together in a sectorized configuration (for example, mounted at the top of a tower or mast), with each set of antennas <b>112</b> serving a different sector. In such a sectorized configuration, the RUs <b>106</b> need not be co-located with the respective sets of antennas <b>112</b> and, for example, can be co-located together (for example, at the base of the tower or mast structure) and, possibly, co-located with its serving DU. Other configurations can be used.</p><p id="p-0030" num="0029">The virtualized gNodeB <b>100</b> is implemented using a scalable cloud environment <b>120</b> in which resources used to instantiate each type of entity can be scaled horizontally (that is, by increasing or decreasing the number of physical computers or other physical devices) and vertically (that is, by increasing or decreasing the &#x201c;power&#x201d; (for example, by increasing the amount of processing and/or memory resources) of a given physical computer or other physical device). The scalable cloud environment <b>120</b> can be implemented in various ways.</p><p id="p-0031" num="0030">For example, the scalable cloud environment <b>120</b> can be implemented using hardware virtualization, operating system virtualization, and application virtualization (also referred to as containerization) as well as various combinations of two or more of the preceding. The scalable cloud environment <b>120</b> can be implemented in other ways. For example, as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the scalable cloud environment <b>120</b> is implemented in a distributed manner. That is, the scalable cloud environment <b>120</b> is implemented as a distributed scalable cloud environment <b>120</b> comprising at least one central cloud <b>114</b> and at least one edge cloud <b>115</b>.</p><p id="p-0032" num="0031">In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each RU <b>106</b> is implemented as a physical network function (PNF) and is deployed in or near a physical location where radio coverage is to be provided. In this example, each DU <b>104</b> is implemented with one or more DU virtual network functions (VNFs) <b>105</b> and may be distributed and deployed in a distributed manner in the edge cloud <b>115</b>. Each CU-CP and CU-UP is implemented as a virtual network function (VNF). In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b> are centralized and deployed in the edge cloud <b>115</b>. In other embodiments, one or both may be deployed in the central cloud <b>114</b>. In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the CU <b>102</b> (including the CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b>) and the entities used to implement it are communicatively coupled to each DU VNF <b>105</b> served by the CU <b>102</b> (and the DU VNF(s) <b>105</b> used to implement each such DU <b>104</b>). In some embodiments, one or more of the virtual entities <b>126</b> of the central cloud <b>114</b> and one or more of the virtual entities <b>126</b> of the edge cloud <b>115</b>, are communicatively coupled over a midhaul network <b>128</b> (for example, a network that supports the Internet Protocol (IP)). In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each of the DU VNF(s) <b>105</b> used to implement a DU <b>104</b> are communicatively coupled to each RU <b>106</b> served by the DU VNF <b>105</b> using a fronthaul network <b>125</b> (for example, a switched Ethernet network that supports the IP). In some embodiments, an orchestration and management network <b>129</b> is used to couple cloud worker nodes <b>122</b> hosting virtualized entities <b>126</b> in the edge cloud <b>115</b> to a cloud master node <b>130</b> that defines an orchestration central cloud (discussed below) that hosts orchestration functions for establishing VNFs on the cloud worker nodes <b>122</b> of the edge cloud <b>115</b>.</p><p id="p-0033" num="0032">The scalable cloud environment <b>120</b> comprises one or more cloud worker nodes <b>122</b> that are configured to execute cloud native software <b>124</b> that, in turn, is configured to instantiate, delete, communicate with, and manage one or more virtualized entities <b>126</b> (for example, the CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b>). Each of the cloud worker nodes <b>122</b> may comprise one or more virtualized entities <b>126</b> and a cloud native software <b>124</b>, the cloud native software <b>124</b> may comprise a shared host operating system, and the virtualized entities <b>126</b> comprise one or more virtual network functions (VNFs), and each VNF further comprises one or more functional containers. In another example, the cloud worker nodes <b>122</b> comprise respective clusters of physical worker nodes, the cloud native software <b>124</b> comprises a hypervisor (or similar software), and the virtualized entities <b>126</b> comprise virtual machines.</p><p id="p-0034" num="0033">In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the scalable cloud environment <b>120</b> includes at least one cloud master node <b>130</b>. There are certain responsibilities that the cloud master node <b>130</b> has as far as instantiation and clustering of cloud worker nodes <b>122</b>. The cloud master node <b>130</b> is configured to implement management and control plane processes for the worker nodes <b>122</b> in a cluster. In some examples, the cloud master node <b>130</b> is configured to determine what runs on each of the cloud worker nodes <b>122</b>, which can include scheduling, resource allocation, state maintenance, and monitoring. In some examples, the cloud master node is configured to manage the lifecycle, scaling, and upgrades of workloads (such as containerized applications) on the cloud worker nodes <b>122</b>. In some embodiments, a cloud master node <b>130</b> may be coupled to the edge cloud <b>115</b> an orchestration and management network <b>129</b> (which may be distinct from the backhaul network <b>128</b>) to provide orchestration function to install and implement any of the virtualized entities <b>126</b> discussed herein. In some embodiments, orchestration central cloud functions for edge cloud orchestration can be accessed by the cloud worker nodes <b>122</b> (of either the central or edge clouds) through an IPsec tunnel established via the orchestration and management network <b>129</b>.</p><p id="p-0035" num="0034">Each of the virtual network functions, DU VNF <b>105</b>, CU-CP VNF <b>116</b>, and CU-UP VNF <b>118</b> is implemented as a software virtualized entity <b>226</b> that is executed in the scalable cloud environment <b>120</b> on a cloud worker node <b>122</b> under the control of the cloud native software <b>124</b> executing on that cloud worker node <b>122</b>. In the following description, a cloud worker node <b>122</b> that implements at least a part of a CU <b>102</b> (for example, a CU-CP VNF <b>116</b> and/or a CU-UP VNF <b>118</b>) is also referred to here as a &#x201c;CU cloud worker node&#x201d; <b>122</b>, and a cloud worker node <b>122</b> that implements at least a part of a DU VNF <b>105</b> is also referred to here as a &#x201c;DU cloud worker node&#x201d; <b>122</b>.</p><p id="p-0036" num="0035">In the example embodiment of gNodeB <b>100</b>, the CU-CP VNF <b>116</b> and the CU-UP VNF <b>118</b> are each implemented as a respective virtualized entity <b>126</b> executing on the same cloud worker node <b>122</b>. The DU VNF <b>105</b> may be implemented as a virtualized entity <b>126</b> executing on the same cloud worker node <b>122</b> or a different cloud worker node <b>122</b>. In other configurations and examples, the CU <b>102</b> can be implemented using multiple CU-UP VNFs <b>118</b> using multiple virtualized entities <b>126</b> executing on one or more cloud worker nodes <b>122</b>. In another example, multiple DU VNFs <b>105</b> (using multiple virtualized entities <b>126</b> executing on one or more cloud worker nodes <b>122</b>) can be used to serve a cell, where each of the multiple DU VNFs <b>105</b> serves a different set of RUs <b>106</b>. Moreover, it is to be understood that the CU <b>102</b> and DU VNF <b>105</b> can be implemented in the same cloud (for example, together in an edge cloud <b>115</b>). Other configurations and examples can be implemented in other ways.</p><p id="p-0037" num="0036">Bringing a virtualized gNodeB (such as virtualized gNodeB <b>100</b>) up to service is generally performed in multiple stages by a variety of entities. The virtualization infrastructure/environment for gNodeB VNFs is brought up from a bare metal servers and relevant network and storage equipment (for example, using platform orchestration through an edge cloud node management network or controller). The gNodeB VNFs are then deployed and orchestrated into service providing entities (for example, using service orchestration through a virtual network function manager (VNFM)). The gNodeB VNFs are also configured and activated to make them service ready (for example, using service configuration with an Operations and Maintenance (OAM) entity or Device Management System (DMS)). When deploying and managing gNodeB VNFs, the location of the network elements determines the different networking and security requirements. When the virtual network functions (VNFs) used to implement a virtualized gNodeB are outside a trusted network (for example, outside the operator's mobile core network), a tunnel mode of Internet Protocol Security (IPsec) can generally be used between the VNF and each trusted network that communicates data with the VNF. Alternatively, if any two entities communicate with each other via client-server type of accessing, transport layer security (TLS) or Hypertext Transfer Protocol Secure (HTTPS) can be applied.</p><p id="p-0038" num="0037">This disclosure presents a comprehensive public key infrastructure (PKI) certificate and private key acquisition procedure for VNF based gNodeB orchestration and operation in all three stages of: 1) virtualization infrastructure orchestration/management; 2) VNFs service orchestration/management; and 3) VNFs service configuration and activation. In some embodiments, the open-source stack StarlingX framework is used to serve the virtualization infrastructure orchestration/management functions. In some embodiments, Kubernetes (K8s) is utilized to provide the VNFs service orchestration/management functions. The VNFs service configuration and activation functions may be provided by a small cell Device Management System (DMS) such as, but not limited to, the CommScope, Inc. Device Management System.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram of an example gNodeB <b>200</b> use case that illustrates the IPsec tunnel needs for a VNF for a gNodeB CU. In this example, the gNodeB <b>200</b> comprises a DMS <b>210</b> that includes a DM-EM <b>212</b> for service management, a DMS-SO <b>214</b> to manage orchestration, and a central controller <b>216</b>, which executes software (for example, StarlingX) to serve the virtualization infrastructure orchestration/management functions. The DMS <b>210</b> utilizes IPSec tunnels to communicate with various elements implemented on at least one enterprise network <b>230</b>. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, those elements comprise one or more gNodeB-CU VNFs <b>232</b> that include at least one CU-CP VNF <b>116</b> and at least one CU-UP VNF <b>118</b>, each of which include an IPsec client. Also implemented on the enterprise network <b>230</b> are one or more supporting VNFs <b>240</b>, which may include at least a VNF service orchestration/management master VNF <b>242</b>, log collection VNF <b>244</b>, and an image repository VNF <b>246</b>.</p><p id="p-0040" num="0039">As illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the DMS <b>210</b> communicates with the gNodeB-CU VNFs <b>232</b> and supporting VNFs <b>240</b> via IPSec tunnels. More specifically, the DMS <b>210</b> may include, or otherwise be coupled to, an OAM secure gateway <b>220</b> (for example, a VPN gateway) that establishes an O1 IPSec tunnel <b>222</b> to the gNodeB-CU VNFs <b>232</b>. A corresponding IPsec virtual gateway (VGW) <b>234</b> is implemented to establish an endpoint for the O1 IPSec tunnel <b>222</b> for the gNodeB-CU VNFs <b>232</b>. Similarly, the OAM secure gateway <b>220</b> establishes an O2 IPSec tunnel <b>224</b> to the supporting VNFs <b>240</b>. A corresponding IPsec VGW <b>248</b> is implemented to establish an endpoint for the O2 IPSec tunnel <b>224</b> for the supporting VNFs <b>240</b>. IPSec tunnels are also implemented between the one or more CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b> and an operator network <b>260</b> of the entity that operates the gNodeB <b>200</b>. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the operator network <b>260</b> communicates with the CU-CP VNF <b>116</b> via an X2 IPSec tunnel <b>250</b> and with the CU-UP VNF <b>118</b> via an S1/X2 IPSec tunnel <b>252</b>. In some embodiments, the operator network <b>260</b> comprises a security gateway (SecGW) <b>262</b> for implementing the X2 IPSec tunnel <b>250</b> and S1/X2 IPSec tunnel <b>252</b>. In summary, the O2 IPsec tunnel <b>224</b> is established and utilized for infrastructure and service orchestration, the O1 IPsec tunnel <b>222</b> is established and utilized for service configuration, and the X2 IPsec tunnel <b>250</b> and S1/X2 IPsec tunnel <b>252</b> is utilized for gNodeB operations. <figref idref="DRAWINGS">FIG. <b>2</b></figref> also illustrates the option of gNodeB-CU VNFs <b>232</b> further comprising a VGW <b>249</b> for optionally implementing an additional F1 IPsec tunnel <b>350</b> with a VGW <b>336</b> of the DU VNFs <b>332</b>, as will be discussed below with respect to <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram of an example gNodeB <b>300</b> use case that illustrates the IPsec tunnel needs for a VNF of a gNodeB DU VNF <b>105</b>. In this example, the gNodeB <b>300</b> comprises the DMS <b>210</b> and the OAM secure gateway <b>220</b> discussed above from <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0042" num="0041">Here, the DMS <b>210</b> utilizes IPSec tunnels to further communicate with one or more gNodeB-DU VNFs <b>332</b>. As illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the DMS <b>210</b> includes, or is otherwise coupled to, the OAM secure gateway <b>220</b> that further establishes an O1 IPSec tunnel <b>322</b> to the gNodeB-DU VNFs <b>332</b>. A corresponding IPsec VGW <b>334</b> is implemented to establish an endpoint for the O1 IPSec tunnel <b>322</b> for the gNodeB-DU VNFs <b>332</b>. Similarly, the OAM secure gateway <b>220</b> establishes an O2 IPSec tunnel <b>224</b> to the supporting VNFs <b>240</b>. A corresponding IPsec VGW <b>248</b> is implemented to establish an endpoint for the O2 IPSec tunnel <b>224</b> for the supporting VNFs <b>240</b>. An F1 IPSec tunnel <b>350</b> is also optionally implemented between the one or more CU VNFs <b>232</b> (for example, CU-CP VNF <b>116</b> and/or CU-UP VNF <b>118</b>) and the gNodeB-DU VNFs <b>332</b>. An IPsec VGW <b>336</b> is implemented to establish an endpoint for the F1 IPSec tunnel <b>350</b> for the gNodeB-DU VNFs <b>332</b> and a corresponding IPsec VGW <b>249</b> is implemented to establish an endpoint for the F1 IPSec tunnel <b>350</b> for the gNodeB-CU VNFs <b>232</b>. More specifically, the gNodeB-DU VNFs <b>332</b> may comprise a first IPsec VGW <b>336</b> to establish the F1 IPSec tunnel <b>350</b> and a second IPsec VGW <b>334</b> to establish the O1 IPSec tunnel <b>322</b>. In summary, the O2 IPsec tunnel <b>224</b> is established and utilized for infrastructure and service orchestration, the O1 IPsec tunnel <b>322</b> is utilized for service configuration, and the optional F1 IPsec tunnel <b>350</b> is utilized for communications between the DU VNF <b>105</b> and the CU <b>102</b> (for example, CU-CP VNF <b>116</b> and/or CU-UP VNF <b>118</b>).</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>B</figref> illustrate a general example of incoming and outgoing traffic flows of traffic for an IPsec virtual gateway and IPsec tunnels, such as any of those with respect to <figref idref="DRAWINGS">FIG. <b>2</b> or <b>3</b></figref>, or otherwise discussed in this disclosure. It should be understood that an IPsec virtual gateway (VGW) can be used for communicating and routing any type of traffic for a virtualized 5G gNodeB. For example, an IPsec virtual gateway can be used to routing O1 traffic, O2 traffic, X2-C traffic, X2-U/S1-U traffic, F1-C traffic, F1-U traffic, or other types of traffic utilized for a virtualized 5G gNodeB or other base station. In the IPsec tunnel mode, the full IP packets between the VNF <b>402</b> and the external endpoints are fully encapsulated into the IPsec tunnel IP packets and transported through the tunnel. Accordingly, the VNF <b>402</b> and external endpoint IP addresses are typically referred as inner IP addresses.</p><p id="p-0044" num="0043">The example shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates outgoing traffic from a VNF <b>402</b> of the gNodeB <b>100</b> being provided to an external network <b>408</b> via the IPsec virtual gateway <b>404</b>. In the example shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, the VNF <b>402</b> (which could be any of CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b>, or DU VNF <b>105</b>) is a VNF that includes an VNF network interface <b>410</b> and is configured to transmit IP packets to an access network interface <b>412</b> of the IPsec virtual gateway <b>404</b>. The IPsec virtual gateway <b>404</b> is configured to encapsulate and encrypt the IP packets and transmit the encapsulated IP packets via the tunnel network interface <b>414</b> using an IPsec tunnel <b>416</b>. The encapsulated IP packets are received at the security gateway <b>406</b> of the external network, and the security gateway is configured to decrypt the original IP packets from the encapsulated IP packets. The security gateway <b>406</b> is also configured to route the IP packets to an end point (for example, DMS <b>210</b>) in the outer network subnet <b>408</b> using the IP address of the end point.</p><p id="p-0045" num="0044">The example shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> illustrates incoming traffic from the outer network <b>408</b> being provided to VNF <b>402</b> via the IPsec virtual gateway <b>404</b>. In the example shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the endpoint of an outer network <b>408</b> is configured to transmit IP packets to the security gateway <b>406</b>. The security gateway <b>406</b> is configured to encrypt and encapsulate the IP packets and transmit the encapsulated IP packets to the IPsec virtual gateway <b>404</b>. The encapsulated IP packets are received at the tunnel network interface <b>414</b> of the IPsec virtual gateway <b>404</b>, and the IPsec virtual gateway <b>404</b> is configured to decrypt the encapsulated IP packets. The IPsec virtual gateway <b>404</b> is configured to route the IP packets to the VNF network interface <b>410</b> of the VNF <b>402</b> (for example, CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b>, or DU VNF <b>105</b>) using the IP address of the VNF network interface <b>410</b> of the VNF <b>402</b>.</p><p id="p-0046" num="0045">In some examples, the VNF network interface <b>410</b> of the VNF <b>402</b> and the access network interface <b>412</b> of the IPsec virtual gateway <b>404</b> are assigned an IPv6 address, and the tunnel network interface <b>414</b> of the IPsec virtual gateway is assigned an IPv4 address. In such examples, the security gateway <b>406</b> is assigned an IPv4 address on the tunnel trunk side and the end points in the attached subnet <b>408</b> are assigned IPv6 addresses. In other examples, the VNF network interface <b>410</b> of the application VNF <b>402</b> and the access network interface <b>412</b> of the IPsec virtual gateway <b>404</b> are assigned an IPv4 address, and the tunnel network interface <b>414</b> of the IPsec virtual gateway is assigned an IPv6 address. In such examples, the security gateway <b>406</b> is assigned an IPv6 address on the tunnel trunk side and the end points in the attached subnet <b>408</b> are assigned IPv4 addresses.</p><p id="p-0047" num="0046">As discussed above, one or more of the embodiments presented herein disclose a public key infrastructure (PKI) architecture with procedures for VNF based virtual base station orchestration and operation. Certificates and keys utilized for virtual base station orchestration and operations may include (but are not limited to) the following:</p><p id="p-0048" num="0047">1) A virtual infrastructure orchestration/management (VIM) certificate and private key. The VIM certificate and private key are used for securing access between an orchestration central cloud which comprises VIM functions (illustrated at <b>510</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and discussed below) and a managed virtual base station edge cloud <b>115</b> (which comprises the Virtualized Entities <b>126</b> and VNFs). The VIM certificate and private key can be used either for establishing IPsec tunnels, or as the client TLS certificates, depending on the deployment options.</p><p id="p-0049" num="0048">2) Virtual network functions (VNFs) service orchestration/management (VNFM) operation certificates and private keys. In one embodiment, a pair of root or sub certification authority (CA) certificate and private key is utilized by the VNF service orchestration/management functions to issue VNFM operation certificates and keys. This root/sub-CA certificate and private key can be either acquired from an external certificate authority (CA), or generated by a master node of the orchestration central cloud <b>510</b> that executes the VNF service orchestration/management functions. In one implementation, Kubernetes (K8s) is used for this purpose and the pair of root or sub CA certificate and private key is used by Kubernetes to issue its VNFM operation certificates and keys. In that case, the root/sub-CA certificate and private key can be either acquired from an external CA, or generated by the Kubernetes master node.</p><p id="p-0050" num="0049">3) Certificates and private keys for IPsec tunnels to the mobile network operator security gateway in front of the operator owned CA (for example, between gNodeB VNFs (CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b>, DU VNF <b>105</b>) and the operator network <b>360</b> CA security gateway). Mobile network operators typically operate their own security CAs for managing the IPsec tunnel certificates and keys for X2 and S1 interfaces (such as for IPsec tunnels <b>250</b> and <b>252</b>). These operator CAs are typically behind the network operator's security gateway <b>262</b> and can only be accessed through the IPsec tunnels <b>250</b> and <b>252</b>, and thus corresponding IPsec tunnel certificate and private keys are utilized as well.</p><p id="p-0051" num="0050">4) Certificates and keys for the O1 and X2/S1 interface IPsec tunnels. These keys and certificates are utilized by the Virtualized Entities <b>126</b> (for example, gNodeB VNFs such as CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b>, or DU VNF <b>105</b>) to communicate with an external DMS <b>210</b> (which may comprise an OAM entity) over an O1 interface (such as for IPsec tunnels <b>222</b> or <b>322</b>) or for other IPsec tunnels such as for a peer LTE MeNB (for example, a master eNB) over an X2 interface or an operator's mobile core over an S1 interface, in secured ways. For these 01, X2 and S1 IPsec tunnel interfaces, IPsec certificates and keys are also utilized.</p><p id="p-0052" num="0051">5) Certificates and keys for other supporting services for base station operation. Other support services may utilize certificates and keys to secure communications. For example, an event log aggregator (such as the Fluentd cross-platform data collection software), or traffic management software (such NGINX service access software) utilize a support service certificate and private key.</p><p id="p-0053" num="0052">6) DU client certificate and private key. For example, a DU VNF <b>105</b> may include a Netconf TLS client for accessing a RU <b>106</b> management plane that utilizes a certificate and private key.</p><p id="p-0054" num="0053">In supporting the overall VNF based gNodeB secure operations, there may be multiple PKI CAs to provide the above-mentioned certificates and private keys. In a very typical example use case, network operators exercise control over access to of any of their mobile core resources and leave all other functions such as orchestration and management to other professional providers. In some of the procedures disclosed herein, the X2 and S1 interface IPsec tunnels' (250, 252) keys and certificates are provided and managed by the network operator's CA. Other keys and certificates are provided and managed by a global CA (illustrated at <b>516</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and discussed below). In the disclosed procedures described below, this example use case is assumed. However, this does not preclude any other implementations utilizing other CA because the logics and procedures disclosed herein still hold to be true.</p><p id="p-0055" num="0054">As illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there are 8 major entities in the processes disclosed and discussed below. These entities include: 1) an orchestration central cloud <b>510</b> (Virtual infrastructure orchestration/management (VIM) and Virtual network functions (VNFs) service orchestration/management (VNFM) functional elements); 2) a controller <b>512</b> (a node in the edge cloud <b>115</b> that functions as the edge cloud <b>115</b> controller. This controller <b>112</b> node may also function as a Kubernetes master and gNodeB CU node hosting the CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b> in this example); 3) at least one compute node <b>514</b> (these are nodes in the edge cloud <b>115</b> that act as pure compute functions. The compute nodes may also function as Kubernetes workers and the gNodeB DU node(s) hosting the DU VNF <b>105</b>. Both the controller <b>512</b> and compute node may comprise server hardware that includes a processor and memory programed to execute and implement the various functions, processes, and VNFs described herein); 4) a global CA <b>516</b> (for example, a PKI server); 5) a network operator CA secure gateway <b>518</b> (for example, this may be implemented by secure gateway <b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref> or a separate gateway) for accessing the network operator CA; 6) a network operator CA <b>520</b> (for example, the mobile network operator operated certificate authority. In some implementations the network operator CA <b>520</b> may utilize the CMPv2 protocol for managing the operator controlled IPsec certificates and keys for the X1 and S2 interfaces with the gNodeB VNFs); 7) an operator network secure gateway <b>522</b> (for example, secure gateway <b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) for the gNodeB VNFs to access the operator mobile network's S1 and X2 interface functions; and 8) an OAM gateway <b>524</b> (for example secure gateway <b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) which functions as an IPsec gateway for VNFs to access OAM functions over the O1 tunnel <b>222</b> and <b>322</b> interfaces.</p><p id="p-0056" num="0055">In some embodiments, off-the-shelf bare metal server hardware may be used for the controller <b>512</b> and compute <b>514</b> nodes that will ultimately host the virtualized entities <b>126</b> (gNodeB VNFs such as CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> for example). For bootstrapping security reasons, it is desirable that this bare metal hardware not include customizations for built-in secrets that would be leveraged for establishing trust in field certificate provisioning. Therefore, a set of obfuscated global certificate and private key used by a PKI client application (which may comprise a PKI SDK library) in communications with the global CA server <b>516</b> can instead be loaded at the time of installation. Obfuscation methods to protect the global certificate and private key can include any industry or proprietary solutions such, but not limited to, N-Mesh, a hardware security module (HSM) and the like. This set comprising a global certificate and private key is utilized for authenticating the very first bootup time access to the global CA <b>516</b> PKI server to acquire the first set of PKI server assigned certificate and private key that is used in the subsequent gNodeB orchestration, configuration, and operations. This first global CA <b>516</b> PKI server assigned global certificate and private key is also referred to herein as the PKI signing certificate and private key.</p><p id="p-0057" num="0056">It should be appreciated that different ways of utilizing the global certificate and private key may yield different solution options. For example, in a first implementation option only the controller <b>512</b> node within the edge cloud <b>115</b> is allowed to use the global certificate and private key to access the global CA <b>516</b> PKI server on bootup. Subsequent PKI server accesses from other hosting nodes (for example, nodes <b>514</b>) or the VNFs use an authorization token generated by the controller <b>512</b> node. This first option provides a centralized authorization token-based solution. In a second implementation option, the VNF hosting nodes (node <b>512</b> and node <b>514</b>) within the edge cloud <b>115</b> each use the global certificate and private key to access the global CA <b>516</b> PKI server on bootup to respectively acquire a dedicated set of assigned digital certificate and private key. This dedicated set of PKI server assigned certificate and private key are then used for signing subsequent PKI requests from VNFs hosted on the respective node. This second options provides a distributed signing key-based solution.</p><p id="p-0058" num="0057">In order to satisfy the needs of the above security certificates and keys and simplify the acquisition process, the certificates and keys can be classified into one of the categories of node level certificates and keys and VNF level certificates and keys. Each set of certificates and keys can serve multiple purposes at the respective levels. Example use case of these two levels and the respective usages in a VNF based virtual base station orchestration and operations are discussed below.</p><p id="p-0059" num="0058">Node level certificates and keys. Node level sets of a certificate and private key are used by each node (whether controller <b>512</b> or compute nodes <b>514</b>) that hosts virtualized entities <b>126</b> (including gNodeB VNFs, CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> and supporting functions) and are acquired from the Global CA <b>516</b> through PKI requests signed using the obfuscated global private key and certificate. For a node implementing a CU VNF (such as node <b>232</b>) a node level certificate and private key may be used to establish orchestration central cloud <b>510</b> communications (using O2 IPsec and/or TLS/SSH access), O1 IPsec tunnel <b>222</b> communications with DMS <b>210</b>, O1 IPsec tunnel communications between a CU node's virtual security gateway (for example, VGW <b>234</b>) and an external security gateway, secure access to supporting services (for example, Kafka and Nginx services) and as a signing key for subsequent PKI requests. For a node implementing a DU VNF (such as node <b>332</b>), a node level certificate and private key may be used to establish OAM/O1 IPsec tunnel <b>322</b> communications with DMS <b>210</b>, O1 IPsec tunnel communications between a DU node's virtual security gateway (for example, VGW <b>334</b>) and an external security gateway, secure access to supporting services (for example, Kafka and Nginx services), and as a signing key for subsequent PKI requests.</p><p id="p-0060" num="0059">VNF level certificates and keys. VNF level sets of a certificate and private key are used by each gNodeB VNF (such as CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> and supporting functions) and are acquired from the global CA <b>516</b> through PKI requests signed using either the obfuscated global key and certificate or the first set of node level certificate and private key obtained from the global CA acting as the PKI request signing key and certificate. For a node implementing a CU-CP VNF (such as node <b>232</b>) a VNF level certificate and private key may be used to establish an IPsec tunnel with a network operator CA <b>520</b>. For example, a VNF level certificate and private key may be used in an implementation where an operator CA <b>520</b> exists and is accessed via the operator CA secure gateway <b>518</b> to get a X2-C IPsec certificate and private key. Alternatively, a VNF level certificate and private key may be used as a X2-C IPsec certificate and private key where an operator CA <b>520</b> does not exist. A VNF level certificate and private key may be used in conjunction with a CU-CP VNF <b>116</b> Fluentd client, or to establish an F1-C IPsec tunnel.</p><p id="p-0061" num="0060">For a node implementing a CU-UP VNF (such as node <b>232</b>), a VNF level certificate and private key may be used to establish an IPsec tunnel with an operator CA <b>520</b>. For example, a VNF level certificate and private key may be used in an implementation where an operator CA <b>520</b> exists and is accessed via the operator CA secure gateway <b>518</b> to get a X2-U/S1-U IPsec certificate and private key. Alternatively, a VNF level certificate and private key may be used as a X2-U/S1-U IPsec certificate and private key where an operator CA <b>520</b> does not exist. A VNF level certificate and private key may be used in conjunction with a CU-UP VNF <b>118</b> Fluentd client.</p><p id="p-0062" num="0061">For a node implementing a DU VNF (such as node <b>332</b>) a VNF level certificate and private key may be used in conjunction with a DU VNF <b>105</b> Fluentd client, a DU management plane Netconf TLS client, or to establish an F1-C IPsec tunnel.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>F</figref> illustrate a process <b>600</b> is illustrated for the centralized authorization token-based certificates and keys acquisition, referred to previously in this disclosure as the first option.</p><p id="p-0064" num="0063">Initial certificates and keys acquisition procedure. In process <b>600</b>, the controller <b>512</b> is the node resident in the edge cloud <b>115</b> responsible for acquiring the first set of digital certificate and private key. This first set of certificate and private key serves multiple purposes: for accessing the orchestration central cloud <b>510</b> orchestration functions and acting as the signing key of the authorization tokens used in other subsequent PKI requests (as described in <figref idref="DRAWINGS">FIGS. <b>6</b>C, <b>6</b>D, <b>7</b>A and <b>7</b>B</figref>). This set of certificate and private key is named the orchestration controller certificate and private key for the authorization token signing purpose. When invoking PKI procedures with the global CA <b>516</b>, PKI requests from all other nodes or VNFs within the edge cloud <b>115</b> are all initially trigged by the controller <b>512</b> with authorization tokens generated by the controller <b>512</b>. The authorization token is recognized by the global CA <b>516</b> and acts as an additional level of security protection to the global CA's certificate issuance and key management functions in addition to the basic protection that uses the obfuscated global certificate and private key to sign PKI requests sent to the global CA <b>516</b>. The global certificate and signature with a private key in each PKI request provide assurance that the request came from an authorized software component. Authorization token mechanism provides additional assurance that the requesting software component is coupled with an authorized controller. When generating the authorization token, the controller <b>512</b> takes a timestamp, appropriate entity identification (for example, FQDN or VNF-ID) and optionally other relevant information as input parameters. The authorization token is signed by the controller <b>512</b> using the orchestration controller key and sent to the global CA <b>516</b> accessing entity (for example, other nodes within the edge cloud or VNFs) in, for example, certificate/key update requests. Upon receiving the certificate and private key update requests, the global CA <b>516</b> accessing entity includes the controller <b>512</b> signed authorization token into the PKI requests (for example, the certificate and private key requests) and signs the request using the global private key and sends the requests to the global CA <b>516</b>. On receiving such requests, the global CA <b>516</b> validates the signatures of the requests, the authorization tokens within and that the timestamps are within the pre-determined expiration time and responds when all conditions are valid.</p><p id="p-0065" num="0064">Beginning with <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, the initial bootup steps of process <b>600</b> are illustrated. Beginning at (<b>0</b>), the controller <b>512</b> node in the edge cloud <b>115</b> boots up with a pre-configured fully qualified domain name (FQDN) and a set of obfuscated global certificate and private key. In segment (<b>1</b>) of process <b>600</b>, the controller <b>512</b> node obtains a node certificate and private key. The procedure proceeds to (<b>1</b>.<b>0</b>) where the controller <b>512</b> executes a PKI client application for acquiring the node certificate and private key from the global CA <b>516</b>. This set of certificate and private key will also act as PKI signing certificate and private key to sign the subsequent certificate and private key acquisition requests. At (<b>1</b>.<b>1</b>), a digital certificate and private key request for acquiring the node certificate and private key (also known as the PKI signing certificate and private key) is sent by the controller <b>512</b> to the global CA <b>515</b>. The digital certificate and private key request (<b>1</b>.<b>1</b>) uses the FQDN of the controller <b>512</b> as the certificate and private key identifier, includes a randomly generated client key agreement public key X and is signed using the global certificate and private key obfuscated within the PKI client application. Client also generates a key agreement private key x that corresponds to X. At (<b>1</b>.<b>2</b>), the controller <b>512</b> receives from the global CA <b>516</b> the digital certificate and private key response comprising the node level certificate and double-encrypted private key along with the global CA's key agreement public key Y.</p><p id="p-0066" num="0065">The private key may be pre-loaded into a global CA <b>516</b> database with global key encryption that was applied in a backend PKI system <b>530</b>. Along with that encrypted private key, the global CA <b>516</b> has a preloaded Origin Certificate. Illustrated in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, the backend PKI system <b>530</b> may comprise a PKI Loader <b>532</b> and Key Generation Facility <b>534</b>. The Key Generation Facility <b>534</b> functions to generate globally encrypted private keys and also signs Origin Certificates. These are conveyed to the PKI Loader <b>532</b> and then securely transmitted to the Global CA <b>516</b>, for example, over a TLS secure session. The Origin Certificate includes a public key matching to the private key and may further include descriptive attributes that are transferred to the final device digital certificate which is signed and returned back to the controller <b>512</b>. The certificate returned to the controller <b>512</b> also includes the FQDN from the request.</p><p id="p-0067" num="0066">The global CA <b>516</b> generates its key agreement private key &#x201c;y&#x201d; and public key &#x201c;Y&#x201d;, computes a shared encryption key &#x201c;SK&#x201d; as a function of y and X and uses SK for double-encrypting the private key returned in the response <b>1</b>.<b>2</b> (on top of encryption that was already applied by the backend PKI System <b>530</b>). As an example, if the key agreement algorithm is Elliptic Curve Diffie-Hellman (ECDH), then SK=y*X where symbol &#x2018;*&#x2019; denotes a special Elliptic Curve multiply operation known in the art of cryptography. Another example of a key agreement algorithm is Diffie-Helman (DH), where SK=X<sup>y </sup>mod p, where p is a large prime number. This same key agreement mechanism is applied to all PKI responses from the Global CA. It should be understood that other key agreement algorithm may be utilized.</p><p id="p-0068" num="0067">This set of certificate and private key may be used for all node level of security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx services. At (<b>1</b>.<b>3</b>), the controller <b>512</b> decrypts and stores the node certificate and private key.</p><p id="p-0069" num="0068">In order to decrypt the private key, the controller <b>512</b> computes the same shared encryption key SK but as a function of x and Y. For instance, if the key agreement algorithm is ECDH, then SK=x*Y where symbol &#x2018;*&#x2019; denotes a special Elliptic Curve multiply operation known in the art of cryptography. Another example of a key agreement algorithm is DH, where SK=Y<sub>x </sub>mod p, where p is a large prime number. This same key agreement mechanism is applied to all PKI responses from the Global CA.</p><p id="p-0070" num="0069">Decryption with SK removes the outer layer encryption based on key agreement from the private key. In addition, controller <b>512</b> also removes the inner-layer encryption that was originally applied at the Backend PKI System. The utilized decryption key may be obfuscated in software or preferably protected in a secure hardware element of the controller <b>512</b>.</p><p id="p-0071" num="0070">At (<b>1</b>.<b>4</b>), similar procedures are executed for acquiring the node certificate and key on each of the compute nodes <b>514</b>. At (<b>1</b>.<b>5</b>), a certificate and key request for acquiring the node certificate and private key is sent by a compute node <b>514</b> to the global CA <b>515</b>. The certificate and private key request (<b>1</b>.<b>5</b>) uses the FQDN of the compute node <b>514</b> as the certificate and private key identifier, includes a randomly generated client key agreement public key X and is signed using the global private key within the PKI client application. At (<b>1</b>.<b>6</b>), the compute node <b>514</b> receives from the global CA <b>516</b> the certificate and private key response comprising the node level certificate and double-encrypted private key along with the global CA's key agreement public key Y. This set of certificate and private key may be used for all node level security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx HTTPS services. At (<b>1</b>.<b>7</b>), the controller <b>512</b> decrypts the private key and stores the private key along with the node certificate. It should be understood that when a certificate and private key set are discussed herein, the private key is the encrypted component. The certificate component does not include secret information and therefore is not typically encrypted.</p><p id="p-0072" num="0071">The process <b>600</b> then proceeds to <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> and segment (<b>2</b>) where the controller <b>512</b> node obtains the edge cloud node cluster (for example, Kubernetes cluster) sub CA certificate and private key. The sub CA certificate and private key can be either acquired from the global CA <b>512</b> or generated locally based on configuration. At (<b>2</b>.<b>0</b>), the controller <b>512</b> optionally acquires the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b> if configured so, or it triggers the edge cloud node cluster to generate the sub CA certificate and private key locally if configured to do so. At (<b>2</b>.<b>1</b>), if the controller <b>512</b> is configured, it will send a certificate and key request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b>. The edge cloud node cluster sub CA certificate and private key request uses the controller <b>512</b>'s FQDN as the identifier. The PKI request is signed using the controller <b>512</b>'s PKI signing certificate and private key and sent to the global CA <b>516</b>. At (<b>2</b>.<b>2</b>), the edge cloud node sub CA certificate and private key response is received from global CA <b>516</b> comprising the encrypted edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>4</b>), the controller <b>512</b> decrypts and installs the edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>5</b>), the controller <b>512</b> establishes an orchestration access IPsec tunnel connecting to the orchestration central cloud <b>510</b> functions for edge cloud orchestration, setting up the IPsec tunnel, using an edge node management access certificate and private key as needed.</p><p id="p-0073" num="0072">At (<b>2</b>.<b>6</b>), the edge cloud controller <b>512</b> is configured to implement the edge cloud master node (for example, the Kubernetes master in some implementations), which in this embodiment will host the CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b>. This will initiate (<b>2</b>.<b>7</b>) to configure the edge cloud compute nodes <b>514</b> to implement edge cloud <b>115</b> worker nodes <b>122</b> (for example, the Kubernetes worker nodes), which in this embodiment will host the DU VNF(s) <b>105</b>, and the process <b>600</b> will proceed to (<b>2</b>.<b>8</b>) where the edge cloud compute nodes <b>514</b> are bootstrapped and booted up. At (<b>2</b>.<b>9</b>), the VNFs of the virtualized entities <b>126</b> are deployed. For example, for a gNodeB base station <b>100</b>, the gNodeB CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b> are deployed on the edge cloud controller <b>512</b>, and a gNodeB DU VNF <b>105</b> is deployed onto each of the edge cloud compute nodes <b>514</b>, with supporting VNFs deployed on the controller <b>512</b> and compute nodes <b>514</b>.</p><p id="p-0074" num="0073">In segment (<b>3</b>) of process <b>600</b>, shown in <figref idref="DRAWINGS">FIGS. <b>6</b>C and <b>6</b>D</figref>, the VNFs (for example, CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b>) are now up and running, and the procedure proceeds with obtaining certificates and keys for these VNFs. At (<b>3</b>.<b>0</b>), CU-CP VNF <b>116</b> executes global CA access client library functions (for example, a PKI SDK lib) to generate an authorization token using a timestamp and a CU-CP VNF-ID, the authorization token is signed using the PKI signing certificate and private key. At (<b>3</b>.<b>1</b>), the authorization token is sent by the CU-CP VNF <b>116</b> to itself via a VNF certificate and private key update request. At (<b>3</b>.<b>2</b>), the global CA access client library functions in the edge cloud controller <b>512</b> (for example, a PKI SDK lib) issue the VNF certificate and private key request comprising the authorization token and the CU-CP VNF-ID, and signs the VNF certificate and private key request using the obfuscated global certificate and private key within the library. At (<b>3</b>.<b>3</b>), the VNF certificate and private key request is sent to the global CA <b>516</b> and at (<b>3</b>.<b>4</b>) the global CA <b>516</b> sends back to the CU-CP VNF <b>116</b> a VNF certificate and private key response with an encrypted VNF certificate and private key along with the certificate. This VNF private key is decrypted and stored along with the certificate.</p><p id="p-0075" num="0074">Similar procedures are executed for acquiring the VNF certificate and private key for CU-UP VNF <b>118</b>. At (<b>3</b>.<b>5</b>), CU-UP VNF <b>118</b> executes global CA access client library functions (for example, a PKI SDK lib) to generate an authorization token using a timestamp and a CU-UP VNF-ID, the authorization token is signed using the PKI signing certificate and private key. At (<b>3</b>.<b>6</b>), the authorization token is sent to the CU-UP VNF <b>118</b> via a VNF certificate and private key update request. At (<b>3</b>.<b>7</b>), the global CA access client library functions in the edge cloud controller <b>6512</b> (for example, a PKI SDK lib) issue the VNF certificate and private key request comprising the authorization token and the CU-UP VNF-ID, and signs the VNF certificate and private key request using the obfuscated global certificate and private key within the library. At (<b>3</b>.<b>8</b>), the VNF certificate and private key request is sent to the global CA <b>516</b> and at (<b>3</b>.<b>9</b>) the global CA <b>516</b> sends back to the CU-UP VNF <b>118</b> a VNF certificate and private key response with an encrypted VNF private key along with the certificate.</p><p id="p-0076" num="0075">For acquiring the VNF certificate and private key for each of the one or more DU VNF <b>105</b>, a similar process is again executed as shown in <figref idref="DRAWINGS">FIG. <b>6</b>D</figref>. At (<b>3</b>.<b>10</b>), controller <b>512</b> executes global CA access client library functions (for example, a PKI SDK lib) to generate an authorization token using a timestamp and a DU VNF-ID, the authorization token is signed using the PKI signing certificate and private key. At (<b>3</b>.<b>11</b>), the authorization token is sent by the controller <b>512</b> to the DU VNF <b>102</b> via a VNF certificate and private key update request. At (<b>3</b>.<b>12</b>), a global CA access client library function in the edge cloud compute node <b>514</b> (for example, a PKI SDK lib) issues the VNF certificate and private key request comprising the authorization token and the DU VNF-ID, and signs the VNF certificate and private key request using the obfuscated global certificate and private key within the library. At (<b>3</b>.<b>13</b>), the VNF certificate and private key request is sent to the global CA <b>516</b> and at (<b>3</b>.<b>14</b>) the global CA <b>516</b> sends back to the DU VNF <b>105</b> a VNF certificate and private key response with an encrypted VNF private key, along with the certificate.</p><p id="p-0077" num="0076">The process <b>600</b> then proceeds to segment (<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>6</b>E</figref> where the CU-CP VNF <b>116</b>, the CU-UP-VNF <b>118</b> and the DU <b>105</b> each decrypt (the VNF private key) and store the respective VNF certificate and private key they received from the global CA <b>516</b>. For implementations where there is no network operator CA <b>520</b>, then the decrypted VNF certificates and keys may be used to establish the X2 IPsec tunnel <b>350</b> and S1/X1 IPsec tunnel <b>252</b> with the operator network <b>260</b>.</p><p id="p-0078" num="0077">For implementations where there is a network operator CA <b>520</b>, the process <b>600</b> proceeds to segment (<b>5</b>) where the S1/X2 IPsec tunnel certificates and keys are obtained from the network operator CA <b>520</b>. At (<b>5</b>.<b>1</b>), the CU-CP VNF <b>116</b> establishes an IPsec tunnel to the operator CA secure gateway <b>522</b> and acquires the X2-C IPsec certificate and private key from the operator CA <b>520</b>. In some embodiments, CMPv2 protocol can be used for acquiring the X2-C IPsec certificate and private key. At (<b>5</b>.<b>2</b>), the CU-UP VNF <b>118</b> establishes an IPsec tunnel (for example, tunnel <b>252</b>) to the operator CA secure gateway <b>512</b> and acquires the X2-U/S1-U IPsec certificate and private key from the operator CA <b>520</b>.</p><p id="p-0079" num="0078">The process <b>600</b> then proceeds to <figref idref="DRAWINGS">FIG. <b>6</b>F</figref> with segment (<b>6</b>) to establish the IPsec tunnels for operating the base station <b>100</b>. At (<b>6</b>.<b>1</b>), the CU-CP VNF <b>116</b> establishes the X2-C IPsec tunnel <b>250</b> from the CU-CP VNF <b>116</b> to the operator network secure gateway <b>522</b> (<b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At (<b>6</b>.<b>2</b>), the VGW <b>234</b> for the CU VNFs <b>232</b> establishes the O1 IPsec tunnel <b>222</b> to the secure gateway <b>524</b> (<b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At (<b>6</b>.<b>3</b>), the CU-UP VNF <b>118</b> established the X2-U/S1-U IPsec tunnel <b>252</b> from the CU-UP VNF <b>118</b> to the operator network secure gateway <b>522</b> (<b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At (<b>6</b>.<b>4</b>), the VGW <b>334</b> establishes the O1 IPsec tunnel <b>322</b> to the secure gateway <b>524</b> (<b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIGS. <b>7</b>A-<b>7</b>B</figref> illustrate a process <b>700</b> for renewing VNF certificates and keys. This process <b>700</b> essentially reperforms the segment (<b>3</b>) of process <b>600</b>, in response to receiving an update instruction <b>701</b> to renew the VNF certificates and keys. At this point, the CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> are each up and running, and the procedure proceeds with renewing certificates and keys for these VNFs. At (<b>3</b>.<b>0</b>), CU-CP VNF <b>116</b> executes global CA access client library functions (for example, a PKI SDK lib) to generate an authorization token using a timestamp and a CU-CP VNF-ID, the authorization token signed using the PKI signing certificate and private key.</p><p id="p-0081" num="0080">At (<b>3</b>.<b>1</b>), the authorization token is sent by the CU-CP VNF <b>116</b> to itself via a VNF certificate and private key update request. At (<b>3</b>.<b>2</b>), the global CA access client library functions in the edge cloud controller <b>512</b> (for example, a PKI SDK lib) issue the VNF certificate and private key request comprising the authorization token and the CU-CP VNF-ID, and signs the VNF certificate and private key request using the obfuscated global certificate and private key within the library. At (<b>3</b>.<b>3</b>), the VNF certificate and private key request is sent to the global CA <b>516</b> and at (<b>3</b>.<b>4</b>) the global CA <b>516</b> sends back to the CU-CP VNF <b>116</b> an updated VNF certificate and private key response with an encrypted VNF private key along with the certificate.</p><p id="p-0082" num="0081">Similar procedures are executed for renewing the VNF certificate and private key for CU-UP VNF <b>118</b>. At (<b>3</b>.<b>5</b>), CU-UP VNF <b>118</b> executes global CA access client library functions (for example, a PKI SDK lib) to generate an authorization token using a timestamp and a CU-UP VNF-ID, the authorization token signed using the PKI signing certificate and private key. At (<b>3</b>.<b>6</b>), the authorization token is sent to the CU-UP VNF <b>118</b> via a VNF certificate and private key update request. At (<b>3</b>.<b>7</b>), the global CA access client library functions in the edge cloud controller <b>6512</b> (for example, a PKI SDK lib) issue the VNF certificate and private key request comprising the authorization token and the CU-UP VNF-ID, and sign the VNF certificate and private key request using the obfuscated global certificate and private key within the library. At (<b>3</b>.<b>8</b>), the VNF certificate and private key request is sent to the global CA <b>516</b> and at (<b>3</b>.<b>9</b>) the global CA <b>516</b> sends back to the CU-UP VNF <b>118</b> an updated VNF certificate and private key response with an encrypted VNF private key along with the certificate.</p><p id="p-0083" num="0082">For renewing the VNF certificate and private key for each of the one or more DU VNF <b>105</b>, a similar process is again executed as shown in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>. At (<b>3</b>.<b>10</b>), controller <b>512</b> executes global CA access client library functions (for example, a PKI SDK lib) to generate an authorization token using a timestamp and a DU VNF-ID, the authorization token signed using the PKI signing certificate and private key. At (<b>3</b>.<b>11</b>), the authorization token is sent by the controller <b>512</b> to the DU VNF <b>102</b> via a VNF certificate and private key update request. At (<b>3</b>.<b>12</b>), a global CA access client library function in the edge cloud compute node <b>514</b> (for example, a PKI SDK lib) issues the VNF certificate and private key request comprising the authorization token and the DU VNF-ID, and signs the VNF certificate and private key request using the obfuscated global certificate and private key within the library. At (<b>3</b>.<b>13</b>), the VNF certificate and private key request is sent to the global CA <b>516</b> and at (<b>3</b>.<b>14</b>) the global CA <b>516</b> sends back to the DU VNF <b>105</b> a renewed VNF certificate and private key response with an encrypted VNF private key along with the certificate.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a process <b>800</b> for renewing edge cloud node cluster sub CA certificates and keys. This process <b>800</b> essentially reperforms the segment (<b>2</b>) of processes <b>600</b>, in response to receiving an update sub CA instruction <b>801</b> to renew the edge cloud node cluster sub CA certificates and keys. At this point, the CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> are each up and running, and the procedure proceeds with renewing certificates and keys for the controller <b>512</b> and compute nodes <b>514</b> executing these VNFs. The controller <b>512</b> node obtains the renewed edge cloud node cluster (for example, Kubernetes cluster) sub CA certificate and private key. The sub CA certificate and private key can be either acquired from the global CA <b>516</b> or generated locally based on configuration as follows.</p><p id="p-0085" num="0084">At (<b>2</b>.<b>0</b>), the controller <b>512</b> optionally acquires the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b> if configured so, or it triggers the edge cloud node cluster to generate the sub CA certificate and private key locally if configured to do so. At (<b>2</b>.<b>1</b>), if the controller <b>512</b> is configured, it will send a PKI request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b>. The edge cloud node cluster sub CA certificate and private key request uses the controller <b>512</b>'s FQDN as the identifier. The PKI request is signed using the controller <b>512</b>'s PKI signing certificate and private key and sent to the global CA <b>516</b>. At (<b>2</b>.<b>2</b>), the edge cloud node sub CA certificate and private key response is received from global CA <b>516</b> comprising the encrypted edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>4</b>), the controller <b>512</b> decrypts and installs the edge cloud node sub CA certificate and private key.</p><p id="p-0086" num="0085">At (<b>2</b>.<b>6</b>), the edge cloud controller <b>512</b> implementing the edge cloud master node (for example, the Kubernetes master in some implementations) is restarted. This will initiate (<b>2</b>.<b>8</b>) reboot of the edge cloud <b>115</b> cloud compute nodes <b>514</b> are instructed to bootup (for example, the Kubernetes worker nodes). At (<b>2</b>.<b>9</b>), the VNFs of the virtualized entities <b>126</b> on the controller <b>512</b> and compute nodes <b>514</b> (CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b>) restart using the renewed edge cloud node cluster sub CA certificates and keys.</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a process <b>900</b> for renewing node certificates and keys. This process <b>900</b> essentially reperforms the segment (<b>1</b>) of process <b>600</b>, in response to receiving an update node instruction <b>901</b> to update the node certificates and keys. At this point, the CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> are each up and running. The process <b>900</b> proceeds to (<b>1</b>.<b>0</b>) where the controller <b>512</b> executes a PKI client application for acquiring the node certificate and private key from the global CA <b>516</b>. This set of certificate and private key will also act as PKI signing certificate and private key to sign the subsequent certificate and private key acquisition requests. At (<b>1</b>.<b>1</b>), a digital certificate and private key request for acquiring the node certificate and private key (for example, the PKI signing certificate and private key) is sent by the controller <b>512</b> to the global CA <b>515</b>. The digital certificate and private key request (<b>1</b>.<b>1</b>) uses the FQDN of the controller <b>512</b> as the certificate and private key identifier and is signed using the global certification and key within the PKI client application. At (<b>1</b>.<b>2</b>), the controller <b>512</b> receives from the global CA <b>516</b> the digital certificate and private key response comprising the encrypted node level certificate and private key. This set of digital certificate and private key may be used for all node level of security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx services. At (<b>1</b>.<b>3</b>), the controller <b>512</b> decrypts and stores the updated node certificate and private key.</p><p id="p-0088" num="0087">At (<b>1</b>.<b>4</b>), similar procedures are executed for renewing the node certificate and private key on each of the compute nodes <b>514</b> in response to receiving the update instruction <b>901</b> to update the node certificates and keys. At (<b>1</b>.<b>5</b>), a digital certificate and private key request for acquiring the node certificate and private key is sent by a compute node <b>514</b> to the global CA <b>515</b>. The digital certificate and private key request (<b>1</b>.<b>5</b>) uses the FQDN of the compute node <b>514</b> as the certificate and private key identifier and is signed using the global certification and key within the PKI client application. At (<b>1</b>.<b>6</b>), the compute node <b>514</b> receives from the global CA <b>516</b> the digital certificate and private key response comprising the encrypted node level certificate and private key. This set of certificate and private key may be used for all node level of security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx services. At (<b>1</b>.<b>7</b>), the controller <b>512</b> decrypts and stores the updated node certificate and private key.</p><p id="p-0089" num="0088">In contrast to the centralized authorization token-based certificates and keys acquisition discussed above, embodiments that provide for distributed signing key-based certificates and keys acquisition will now be discussed. In distributed embodiments, each node within the edge cloud <b>115</b> acquires their respective set of node certificate and private key separately. The received set of node certificate and private key serves multiple purposes for that node: for accessing the orchestration central cloud <b>510</b> orchestration functions, acting as the signing key of all other subsequent PKI requests initiated from VNFs hosted on the node, and authenticating other node level of base station functions supporting services like Nginx, Kafka and OAM IPsec. This set of node certificate and private key is also named the PKI signing certificate and private key for subsequent PKI request signing purpose. When invoking PKI procedures with the global CA <b>516</b>, certificate and private key requests from VNFs hosted on the node are invoked by the initiation party locally, and all requests are to be signed using the node specific PKI signing key. The global CA <b>516</b> authenticates the requests by validating the signing key. The use of PKI signing key provides the necessary protections to the vulnerability of using the static pre-installed global key and certificate (even though they are obfuscated).</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIGS. <b>10</b>A-<b>10</b>F</figref> illustrate a process <b>1000</b> is for the distributed signing key-based certificates and keys acquisition, referred to previously in this disclosure as the second option.</p><p id="p-0091" num="0090">Beginning with <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, the initial bootup steps of process <b>1000</b> are illustrated. Beginning at (<b>0</b>), the controller <b>512</b> node in the edge cloud <b>115</b> boots up with a pre-configured fully qualified domain name (FQDN). In segment (<b>1</b>) of process <b>1000</b>, the controller <b>512</b> node obtains a node certificate and private key. The procedure proceeds to (<b>1</b>.<b>0</b>) where the controller <b>512</b> executes a PKI client application for acquiring the node certificate and private key from the global CA <b>516</b>. This set of certificate and private key will also act as PKI signing certificate and private key to sign the subsequent certificate and private key acquisition requests. At (<b>1</b>.<b>1</b>), a digital certificate and private key request for acquiring the node certificate and private key (for example, the PKI signing certificate and private key) is sent by the controller <b>512</b> to the global CA <b>515</b>. The digital certificate and private key request (<b>1</b>.<b>1</b>) uses the FQDN of the controller <b>512</b> as the certificate and private key identifier and is signed using the global certification and key obfuscated within the PKI client application. At (<b>1</b>.<b>2</b>), the controller <b>512</b> receives from the global CA <b>516</b> the digital certificate and private key response comprising the encrypted node level certificate and private key. This set of digital certificate and private key may be used for all node level of security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx services. At (<b>1</b>.<b>3</b>), the controller <b>512</b> decrypts and stores the node private key, along with the certificate.</p><p id="p-0092" num="0091">The process <b>1000</b> then proceeds to <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> and segment (<b>2</b>) where the controller <b>512</b> node obtains the edge cloud node cluster (for example, Kubernetes cluster) sub CA certificate and private key. The sub CA certificate and private key can be either acquired from the global CA <b>512</b> or generated locally based on configuration. At (<b>2</b>.<b>0</b>), the controller <b>512</b> optionally acquires the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b> if configured so, or it triggers the edge cloud node cluster to generate the sub CA certificate and private key locally if configured to do so (or it triggers the Kubernetes to generate the sub CA certificate and private key locally if configured to do so).</p><p id="p-0093" num="0092">At (<b>2</b>.<b>1</b>), if the controller <b>512</b> is configured, it will send a certificate and private key request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b>. The edge cloud node cluster sub CA certificate and private key request uses the controller <b>512</b>'s FQDN as the identifier. The PKI request is signed using the controller <b>512</b>'s PKI signing certificate and private key and sent to the global CA <b>516</b>. At (<b>2</b>.<b>2</b>), the edge cloud node sub CA certificate and private key response is received from global CA <b>516</b> comprising the encrypted edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>4</b>), the controller <b>512</b> decrypts and installs the edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>5</b>), the controller <b>512</b> establishes an orchestration access IPsec tunnel connecting to the orchestration central cloud <b>510</b> functions for edge cloud orchestration, setting up the IPsec tunnel, using an edge node management access certificate and private key as needed.</p><p id="p-0094" num="0093">At (<b>2</b>.<b>6</b>), the edge cloud controller <b>512</b> is configured to implement the edge cloud master node (for example, the Kubernetes master in some implementations), which in this embodiment will host the CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b>. This will initiate (<b>2</b>.<b>7</b>) to configure the edge cloud compute nodes <b>514</b> to implement edge cloud <b>115</b> worker nodes <b>122</b> (for example, the Kubernetes worker nodes), which in this embodiment will host the DU VNF(s) <b>105</b>, and the process <b>1000</b> will proceed to (<b>2</b>.<b>8</b>) where the edge cloud compute nodes <b>514</b> are bootstrapped and booted up.</p><p id="p-0095" num="0094">In segment (<b>3</b>) of process <b>1000</b>, shown in <figref idref="DRAWINGS">FIG. <b>10</b>C</figref>, the compute node(s) <b>514</b> to get the edge node management access certificate and private key. At (<b>3</b>.<b>0</b>), the compute node(s) <b>514</b> run an global CA access client application (for example, a PKI client application) for acquiring the node certificate and private key from the Global CA <b>516</b>. This set of certificate and private key will also act as PKI signing certificate and private key to sign the subsequent certificate and private key acquisition requests. At (<b>3</b>.<b>1</b>), a certificate and private key request for acquiring the node certificate and private key (for example, the PKI signing certificate and private key) is sent to global CA <b>516</b>. The request uses the FQDN of the requesting compute node <b>514</b> as the certificate and private key identifier and it is signed using the obfuscated global certificate and private key within the Global CA access client application. At (<b>3</b>.<b>2</b>), the digital certificate and private key response comprising the encrypted node certificate and private key received from global CA <b>516</b>. The usage of this set of certificate/key is for all node level of security needs, for example, PKI request signing, OAM/O1 IPsec &#x26; Nginx. At (<b>3</b>.<b>3</b>), the VNFs of the virtualized entities <b>126</b> are deployed. For example, for a gNodeB base station <b>100</b>, the gNodeB CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b> are deployed on the edge cloud controller <b>512</b>, and a gNodeB DU VNF <b>105</b> is deployed onto each of the edge cloud compute nodes <b>514</b>, with supporting VNFs deployed on the controller <b>512</b> and compute nodes <b>514</b>.</p><p id="p-0096" num="0095">The process <b>1000</b> then proceeds to segment (<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>10</b>D</figref> where the CU-CP VNF <b>116</b>, the CU-UP-VNF <b>118</b> and the DU <b>105</b> each receive, decrypt (the VNF private key) and store the respective VNF certificate and private key they received from the global CA <b>516</b>. For implementations where there is no network operator CA <b>520</b>, then the decrypted VNF certificates and keys may be used to establish the X2 IPsec tunnel <b>350</b> and S1/X1 IPsec tunnel <b>252</b> with the operator network <b>260</b>. At (<b>4</b>.<b>0</b>), the CU-CP VNF <b>116</b> executes the Global CA access client library functions (also referred to as the PKI SDK lib). At (<b>4</b>.<b>1</b>), the global CA access client library functions issues a VNF certificate and private key request comprising a CU-CP VNF-ID to the global CA <b>516</b> and signs the request using the local PKI signing certificate and private key. At (<b>4</b>.<b>2</b>), the CU-CP VNF <b>116</b> receives the VNF certificate and private key response with an encrypted certificate and private key. The CU-CP VNF certificate and private key can be used for Operator CA IPsec/X2-C IPsec, Fluentd and F1-C IPsec usage.</p><p id="p-0097" num="0096">A similar process is executed to acquire the VNF certificate and private key for CU-UP VNF <b>118</b> on the CU node. At (<b>4</b>.<b>3</b>), the CU-UP VNF <b>118</b> executes the Global CA access client library functions (also refer to as the PKI SDK lib). At (<b>4</b>.<b>4</b>), the global CA access client library functions issues a VNF certificate and private key request comprising a CU-UP VNF-ID to the global CA <b>516</b> and signs the request using the local PKI signing certificate and private key. At (<b>4</b>.<b>4</b>), the CU-CP VNF <b>116</b> receives the VNF certificate and private key response with an encrypted private key along with the certificate. The CU-CP VNF certificate and private key can be used for Operator CA IPsec/X2-C IPsec, Fluentd and F1-C IPsec usage.</p><p id="p-0098" num="0097">A similar process is executed to acquire the VNF certificate and private key for DU VNF <b>105</b> on the CU node. At (<b>4</b>.<b>6</b>), the CU-UP VNF <b>118</b> executes the Global CA access client library functions (also referred to as the PKI SDK lib). At (<b>4</b>.<b>7</b>), the global CA access client library functions issues a VNF certificate and private key request comprising a CU-UP VNF-ID to the global CA <b>516</b> and signs the request using the local PKI signing certificate and private key. At (<b>4</b>.<b>8</b>), the CU-CP VNF <b>116</b> receives the VNF certificate and private key response with an encrypted private key along with the certificate. The CU-CP VNF certificate and private key can be used for Operator CA IPsec/X2-C IPsec, Fluentd and F1-C IPsec usage.</p><p id="p-0099" num="0098">The process <b>1000</b> then proceeds to segment (<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>10</b>D</figref> where the CU-CP VNF <b>116</b>, the CU-UP-VNF <b>118</b> and the DU <b>105</b> each decrypt (the VNF private key) and store the respective VNF certificate and private key they received from the global CA <b>516</b>. For implementations where there is no network operator CA <b>520</b>, then the decrypted VNF certificates and keys may be used to establish the X2 IPsec tunnel <b>350</b> and S1/X1 IPsec tunnel <b>252</b> with the operator network <b>260</b>.</p><p id="p-0100" num="0099">The process <b>1000</b> then proceeds to <figref idref="DRAWINGS">FIG. <b>10</b>E</figref> with segment (<b>6</b>) to get S1/X2 IPsec tunnels certs/keys from the operator CA <b>520</b>. If the operator CA <b>520</b> is not available, the VNF certificates and keys acquired may be used instead to establish the S1/X2 IPsec tunnels directly. At (<b>6</b>.<b>1</b>), the CU-CP VNF <b>116</b> establishes the X2-C IPsec tunnel <b>250</b> from the CU-CP VNF <b>116</b> to the operator network secure gateway <b>522</b> (<b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) and acquires the X2-C IPsec certificate and private key from the operator CA <b>520</b>. The CMPv2 protocol can be used for acquiring the X2-C IPsec certificate and private key. At (<b>6</b>.<b>2</b>), the CU-UP VNF <b>118</b> establishes IPsec tunnel <b>252</b> from CU-UP VNF <b>118</b> to the operator CA SecGW <b>262</b> and acquires the X2-U/S1-U IPsec certificate and private key from the operator CA <b>502</b>. The CMPv2 protocol can be used for acquiring the X2-U/S1-U IPsec certificate and private key.</p><p id="p-0101" num="0100">The process <b>1000</b> then proceeds to <figref idref="DRAWINGS">FIG. <b>10</b>F</figref> with segment (<b>7</b>) to establish S1, X2 and O1 IPsec tunnels to the VNFs. At (<b>7</b>.<b>1</b>), the CU-CP VNF <b>116</b> establishes the X2-C IPsec tunnel <b>250</b> from the CU-CP VNF <b>116</b> to the operator network secure gateway <b>522</b> (<b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At (<b>7</b>.<b>2</b>), the VGW <b>234</b> for the CU VNFs <b>232</b> establishes the O1 IPsec tunnel <b>222</b> to the OAM secure gateway <b>524</b> (<b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At (<b>7</b>.<b>3</b>), the CU-UP VNF <b>118</b> establishes the X2-U/S1-U IPsec tunnel <b>252</b> from the CU-UP VNF <b>118</b> to the operator network secure gateway <b>522</b> (<b>262</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). At (<b>7</b>.<b>4</b>), the VGW <b>334</b> establishes the O1 IPsec tunnel <b>322</b> to the OAM secure gateway <b>524</b> (<b>220</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a process <b>1100</b> for renewing VNF certificates and keys. This process <b>1100</b> essentially reperforms the segment (<b>4</b>) of processes <b>1100</b>, in response to receiving an update instruction <b>1101</b> to update the VNF certificates and keys.</p><p id="p-0103" num="0102">At (<b>4</b>.<b>0</b>), the CU-CP VNF <b>116</b> executes the Global CA access client library functions (also referred to as the PKI SDK lib). At (<b>4</b>.<b>1</b>), the global CA access client library functions issues a VNF certificate and private key request comprising a CU-CP VNF-ID to the global CA <b>516</b> and signs the request using the local PKI signing certificate and private key. At (<b>4</b>.<b>2</b>), the CU-CP VNF <b>116</b> receives the VNF certificate and private key response with an encrypted private key along with the certificate. The renewed CU-CP VNF certificate and private key can be used for Operator CA IPsec/X2-C IPsec, Fluentd and F1-C IPsec usage.</p><p id="p-0104" num="0103">A similar process is executed to acquire the VNF certificate and private key for CU-UP VNF <b>118</b> on the CU node. At (<b>4</b>.<b>3</b>), the CU-UP VNF <b>118</b> executes the Global CA access client library functions (also referred to as the PKI SDK lib). At (<b>4</b>.<b>4</b>), the global CA access client library functions issues a VNF certificate and private key request comprising a CU-UP VNF-ID to the global CA <b>516</b> and signs the request using the local PKI signing certificate and private key. At (<b>4</b>.<b>4</b>), the CU-UP VNF <b>118</b> receives the VNF certificate and private key response with an encrypted private key along with the certificate. The renewed CU-UP VNF certificate and private key can be used for Operator CA IPsec/X2-U/S1-U IPsec, Fluentd and F1-U IPsec usage.</p><p id="p-0105" num="0104">A similar process is executed to acquire the VNF certificate and private key for DU VNF <b>105</b> on the DU node. At (<b>4</b>.<b>6</b>), the DU VNF <b>105</b> executes the Global CA access client library functions (also referred as the PKI SDK lib). At (<b>4</b>.<b>7</b>), the global CA access client library functions issues a VNF certificate and private key request comprising a DU VNF-ID to the global CA <b>516</b> and signs the request using the local PKI signing certificate and private key. At (<b>4</b>.<b>8</b>), the DU VNF <b>105</b> receives the VNF certificate and private key response with an encrypted private key along with the certificate. The renewed DU VNF certificate and private key can be used for Fluentd and F1-C/U IPsec usage.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a process <b>1200</b> for renewing edge cloud node cluster sub CA certificates and keys. This process <b>1200</b> essentially reperforms the segment (<b>2</b>) of processes <b>1000</b>, in response to receiving an update instruction <b>1201</b> to renew the edge cloud node cluster sub CA certificates and keys. The renewed sub CA certificate and private key can be either acquired from the global CA <b>512</b> or generated locally based on configuration. At (<b>2</b>.<b>0</b>), the controller <b>512</b> optionally acquires the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b> if configured so, or it triggers the edge cloud node cluster to generate the sub CA certificate and private key locally if configured to do so (or it triggers the Kubernetes to generate the sub CA certificate and private key locally if configured to do so).</p><p id="p-0107" num="0106">At (<b>2</b>.<b>1</b>), if the controller <b>512</b> is configured, it will send a certificate and private key request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA <b>516</b>. The edge cloud node cluster sub CA certificate and private key request uses the controller <b>512</b>'s FQDN as the identifier. The PKI request is signed using the controller <b>512</b>'s PKI signing certificate and private key and sent to the global CA <b>516</b>. At (<b>2</b>.<b>2</b>), the edge cloud node sub CA certificate and private key response is received from global CA <b>516</b> comprising the encrypted edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>4</b>), the controller <b>512</b> decrypts and installs the edge cloud node sub CA certificate and private key. At (<b>2</b>.<b>6</b>), the edge cloud controller <b>512</b> implementing the edge cloud master node (for example, the Kubernetes master in some implementations) is restarted. This will initiate (<b>2</b>.<b>8</b>) reboot of the edge cloud <b>115</b> cloud compute nodes <b>514</b> are bootstraped and booted up (for example, the Kubernetes worker nodes). At (<b>2</b>.<b>9</b>), the VNFs of the virtualized entities <b>126</b> on the controller <b>512</b> and compute nodes <b>514</b> (CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b>) restart using the updated edge cloud node cluster sub CA certificates and keys.</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a process <b>1300</b> for renewing node certificates and keys. This process <b>1300</b> essentially reperforms portions of segments (<b>1</b>), (<b>2</b>) and (<b>3</b>) of processes <b>1000</b>, in response to receiving an update instruction <b>1301</b> to renew the node certificates and keys. At this point, the CU-CP VNF <b>116</b>, CU-UP VNF <b>118</b> and DU VNF <b>105</b> are each up and running. The process <b>1300</b> proceeds to (<b>1</b>.<b>0</b>) where the controller <b>512</b> executes a PKI client application for acquiring the node certificate and private key from the global CA <b>516</b>. This set of certificate and private key will also act as PKI signing certificate and private key to sign the subsequent certificate and private key acquisition requests. At (<b>1</b>.<b>1</b>), a node certificate and private key request for acquiring the node certificate and private key (for example, the PKI signing certificate and private key) is sent by the controller <b>512</b> to the global CA <b>515</b>. The digital certificate and private key request (<b>1</b>.<b>1</b>) uses the FQDN of the controller <b>512</b> as the certificate and private key identifier and is signed using the global certification and key within the PKI client application. At (<b>1</b>.<b>2</b>), the controller <b>512</b> receives from the global CA <b>516</b> the digital certificate and private key response comprising the encrypted node level certificate and private key. This set of digital certificate and private key may be used for all node level of security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx services. At (<b>1</b>.<b>3</b>), the controller <b>512</b> decrypts and stores the updated node private key along with the certificate.</p><p id="p-0109" num="0108">At (<b>2</b>.<b>5</b>), the controller <b>512</b> establishes an orchestration access IPsec tunnel connecting to the orchestration central cloud <b>510</b> functions for edge cloud orchestration, setting up the IPsec tunnel, using an edge node management access certificate and private key as needed. At (<b>2</b>.<b>6</b>), the edge cloud controller <b>512</b> is configured to restart the edge cloud master node (for example, the Kubernetes master in some implementations), which in this embodiment host the CU-CP VNF <b>116</b> and CU-UP VNF <b>118</b>. This will initiate (<b>2</b>.<b>7</b>) to configure the edge cloud compute nodes <b>514</b> to implement edge cloud <b>115</b> worker nodes <b>122</b> (for example, the Kubernetes worker nodes), which in this embodiment will host the DU VNF(s) <b>105</b>, and the process <b>1300</b> will proceed to (<b>2</b>.<b>8</b>) where the edge cloud compute nodes <b>514</b> are instructed to bootup.</p><p id="p-0110" num="0109">The process <b>1300</b> proceeds to (<b>3</b>.<b>0</b>) where a compute node <b>514</b> executes a PKI client application for acquiring the node certificate and private key from the global CA <b>516</b>. This set of certificate and private key will also act as PKI signing certificate and private key to sign the subsequent certificate and private key acquisition requests. At (<b>3</b>.<b>1</b>), a digital certificate and private key request for acquiring the node certificate and private key (for example, the PKI signing certificate and private key) is sent by the controller <b>512</b> to the global CA <b>515</b>. The digital certificate and private key request (<b>3</b>.<b>1</b>) uses the FQDN of the controller <b>512</b> as the certificate and private key identifier and is signed using the global certification and key within the PKI client application. At (<b>3</b>.<b>2</b>), the controller <b>512</b> receives from the global CA <b>516</b> the digital certificate and private key response including the encrypted node level private key along with the certificate. This set of digital certificate and private key may be used for all node level of security needs, for example, base station infrastructure orchestration, PKI request signing, OAM/O1 IPsec tunnels, and Kafka &#x26; Nginx services.</p><p id="p-0111" num="0110">In each of the embodiments described herein, the certificates and keys acquired at node and VNF levels serve each respective levels of multiple purposes. The intention of this arrangement is to eliminate unnecessary duplication of procedures and certificates/keys. If, however, any of the functions require a dedicated set of certificates/keys, the similar procedures can be duplicated to serve the purposes.</p><heading id="h-0006" level="1">EXAMPLE EMBODIMENTS</heading><p id="p-0112" num="0111">Example 1 includes a method for secure virtualized wireless base station orchestration on a node of a scalable cloud environment, the method comprising: obtaining a node certificate and private key from a global certificate authority (CA) using a PKI request signed using a global certification and key, wherein the node certificate and private key defines a PKI signing certificate and private key; establishing an orchestration access IPsec tunnel to an orchestration central cloud comprising one or more functions for edge cloud orchestration; utilizing, via the orchestration access IPsec tunnel, the one or more functions for edge cloud orchestration to deploy on the node one or more virtualized entities comprising one or more virtual network functions of a wireless base station; obtaining at least one virtual network function (VNF) certificate and private key for the one or more deployed VNFs from the global CA using a PKI request signed using the global certificate and private key; utilizing the at least one VNF certificate and private key, establishing one or more IPsec tunnels comprising at least one of: at least one X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network; at least one S1/X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network; at least one O1 IPsec tunnel to an Operations and Maintenance (OAM) secure gateway for a wireless base station Device Management System (DMS).</p><p id="p-0113" num="0112">Example 2 includes the method of Example 1, wherein the node of the scalable cloud environment is a controller node of the edge cloud and the one or more virtualized entities comprise one or both of a central unit control-plane (CU-CP) VNF and a central unit user-plane (CU-UP) VNF.</p><p id="p-0114" num="0113">Example 3 includes the method of Example 2, wherein the controller node generates an authorization token signed with PKI signing certificate and private key for one or more compute nodes of the edge cloud, wherein the one or more compute nodes utilize the authorization token to obtain certificates and keys from the global certificate authority (CA).</p><p id="p-0115" num="0114">Example 4 includes the method of any of Examples 1-3, wherein the node of the scalable cloud environment is a compute node of the edge cloud and the one or more virtualized entities comprise at least one distribution node (DU) VNF, the wireless base station further comprising one or more radio units (RU) coupled to the at least one DU VNF, the one or more radio units (RU) configured to implement a radio frequency (RF) interface and are deployed in a physical location where radio coverage is to be provided.</p><p id="p-0116" num="0115">Example 5 includes the method of any of Examples 1-4, wherein obtaining the node certificate and private key further comprises: executing a PKI client application for acquiring the node certificate and private key from the global CA; sending to the global CA the digital certificate and private key request for acquiring the node certificate and private key, wherein the digital certificate and private key used to sign the digital certificate and private key request is embedded and obfuscated within the PKI client application; receiving from the global CA a digital certificate and private key response comprising a node level certificate and private key; decrypting the node level private key and storing the node level private key with the node level certificate.</p><p id="p-0117" num="0116">Example 6 includes the method of any of Examples 1-5, further comprising: obtaining an edge cloud node cluster sub CA certificate and private key from either an edge cloud node cluster or from the global CA, using a PKI request signed using the PKI signing certificate and private key.</p><p id="p-0118" num="0117">Example 7 includes the method of Example 6, wherein obtaining the edge cloud node cluster sub CA certificate and private key comprises: sending the PKI request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA; receiving from the global CA an edge cloud node sub CA certificate and private key response comprising an edge cloud node sub CA certificate and private key; and decrypting the edge cloud node sub CA private key and installing the edge cloud node sub CA certificate and private key.</p><p id="p-0119" num="0118">Example 8 includes the method of any of Examples 1-7, wherein establishing an orchestration access IPsec tunnel to an orchestration central cloud comprises establishing an orchestration access IPsec tunnel though an orchestration and management network to couple cloud worker nodes hosting virtualized entities in an edge cloud of the scalable cloud environment to a cloud master node that implements the orchestration central cloud.</p><p id="p-0120" num="0119">Example 9 includes the method of any of Examples 1-8, wherein obtaining the at least one VNF certificate and private key comprises: sending the PKI request to acquire the at least one VNF certificate and private key from a first VNF of the one or more virtualized entities to the global CA; receiving from the global CA a VNF certificate and private key response comprising a VNF certificate and private key; and decrypting the VNF private key and storing the VNF certificate and private key.</p><p id="p-0121" num="0120">Example 10 includes the method of any of Examples 1-9, further comprising: establishing at least one operator CA tunnel between the one or more deployed VNFs and a network operator CA secure gateway and acquire one or more sets of X2 IPsec certificate and private key from an operator CA via the at least one operator CA tunnel.</p><p id="p-0122" num="0121">Example 11 includes the method of any of Examples 1-10, where the node comprises a VNF hosting platform for one or more virtualized entities of a wireless communications base station, the VNF hosting platform comprising a processor coupled to a memory.</p><p id="p-0123" num="0122">Example 12 includes a Virtual Network Function (VNF) hosting platform for one or more virtualized entities of a wireless communications base station, the VNF hosting platform comprising: a processor coupled to a memory, wherein the processor is configured to execute code to install and orchestrate a node of a virtualized wireless base station by: obtaining a node certificate and private key from a global certificate authority (CA), wherein the node certificate and private key defines a PKI signing certificate and private key; establishing an orchestration access IPsec tunnel to an orchestration central cloud comprising one or more functions for edge cloud orchestration; utilizing, via the orchestration access IPsec tunnel, the one or more functions for edge cloud orchestration to deploy on the node one or more virtualized entities comprising one or more virtual network functions of a wireless base station; obtaining at least one VNF certificate and private key for the one or more virtual network functions from the global CA; utilizing the at least one VNF certificate and private key, establishing one or more IPsec tunnels comprising at least one of: at least one X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network; at least one S1/X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network; at least one O1 IPsec tunnel to an Operations and Maintenance (OAM) secure gateway for a wireless base station Device Management System (DMS).</p><p id="p-0124" num="0123">Example 13 includes the VNF platform of Example 12, wherein the one or more virtualized entities comprise one or both of a central unit control-plane (CU-CP) VNF and a central unit user-plane (CU-UP) VNF.</p><p id="p-0125" num="0124">Example 14 includes the VNF platform of any of Examples 12-13, wherein the VNF hosting platform comprises a controller node configured to generate an authorization token signed with the PKI signing certificate and private key for one or more compute nodes of the edge cloud, wherein the one or more compute nodes utilize the authorization token to obtain certificates and keys from the global CA.</p><p id="p-0126" num="0125">Example 15 includes the VNF platform of any of Examples 12-14, wherein the one or more virtualized entities comprise at least one distribution node (DU) VNF.</p><p id="p-0127" num="0126">Example 16 includes the VNF platform of any of Examples 12-15, wherein obtaining the node certificate and private key comprises: executing a PKI client application for acquiring the node certificate and private key from the global CA; sending to the global CA a digital certificate and private key request for acquiring the node certificate and private key, wherein the digital certificate and private key request is embedded and obfuscated within the PKI client application; receiving from the global CA a digital certificate and private key response comprising a node level certificate and private key; decrypting the node level private key and storing the node level certificate and private key.</p><p id="p-0128" num="0127">Example 17 includes the VNF platform of any of Examples 12-16, further comprising: obtaining an edge cloud node cluster sub CA certificate and private key, wherein obtaining the edge cloud node cluster sub CA certificate and private key comprises: sending a PKI request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA; receiving from the global CA an edge cloud node sub CA certificate and private key response comprising an edge cloud node sub CA certificate and private key; and decrypting the edge cloud node sub CA private key and installing the edge cloud node sub CA certificate and private key.</p><p id="p-0129" num="0128">Example 18 includes the VNF platform of any of Examples 12-17, wherein establishing an orchestration access IPsec tunnel to an orchestration central cloud comprises establishing an orchestration access IPsec tunnel though an orchestration and management network to couple to a cloud master node that implements the orchestration central cloud.</p><p id="p-0130" num="0129">Example 19 includes the VNF platform of any of Examples 12-18, wherein obtaining the at least one VNF certificate and private key comprises: sending a PKI request to the global CA to acquire the at least one VNF certificate and private key from a first VNF of the one or more virtualized entities; receiving from the global CA a VNF certificate and private key response comprising a VNF certificate and private key; and decrypting the VNF private key and storing the VNF certificate and private key.</p><p id="p-0131" num="0130">Example 20 includes the VNF platform of any of Examples 12-19, wherein the processor is configured to execute code to install and orchestrate a node of a virtualized wireless base station by further: establishing at least one operator CA tunnel between the one or more VNFs and a network operator CA secure gateway and acquiring one or more sets of X2 IPsec certificate and private key from an operator CA via the at least one operator CA tunnel.</p><p id="p-0132" num="0131">In various alternative embodiments, system and/or device elements, method steps, or example implementations described throughout this disclosure (such as any of the Central Cloud, Edge Cloud, Orchestration Central Cloud, Certificate Authorities, Cloud Master Node, Cloud Worker Node, virtual network function, central unit control-plane (CU-CP) VNF, central unit user-plane (CU-CP) VNF, and distributed unit (DU) VNF, radio units, VNF hosting platform, gateways, compute node, controller node, processor, memory, or sub-parts thereof, for example) may be implemented at least in part using one or more computer systems, field programmable gate arrays (FPGAs), or similar devices comprising a processor coupled to a memory and executing code to realize those elements, processes, or examples, said code stored on a non-transient hardware data storage device. Therefore, other embodiments of the present disclosure may include elements comprising program instructions resident on computer readable media which when implemented by such computer systems, enable them to implement the embodiments described herein. As used herein, the term &#x201c;computer readable media&#x201d; refers to tangible memory storage devices having non-transient physical forms. Such non-transient physical forms may include computer memory devices, such as but not limited to punch cards, magnetic disk or tape, any optical data storage system, flash read only memory (ROM), non-volatile ROM, programmable ROM (PROM), erasable-programmable ROM (E-PROM), random access memory (RAM), or any other form of permanent, semi-permanent, or temporary memory storage system or device having a physical, tangible form. Program instructions include, but are not limited to computer-executable instructions executed by computer system processors and hardware description languages such as Very High Speed Integrated Circuit (VHSIC) Hardware Description Language (VHDL).</p><p id="p-0133" num="0132">As used herein, cloud-based virtualized wireless base station related terms such as Central Cloud, Edge Cloud, Orchestration Central Cloud, Certificate Authorities, Cloud Master Node, Cloud Worker Node, virtual network function, central unit control-plane (CU-CP) VNF, central unit user-plane (CU-CP) VNF, and distributed unit (DU) VNF, radio units, VNF hosting platform, gateways, compute node, controller node, processor, memory, or sub-parts thereof, refer to non-generic elements as would recognized and understood by those of skill in the art of telecommunications and networks and are not used herein as nonce words or nonce terms for the purpose of invoking 35 USC 112(f).</p><p id="p-0134" num="0133">Although specific embodiments have been illustrated and described herein, it will be appreciated by those of ordinary skill in the art that any arrangement, which is calculated to achieve the same purpose, may be substituted for the specific embodiment shown. This application is intended to cover any adaptations or variations of the presented embodiments. Therefore, it is manifestly intended that embodiments be limited only by the claims and the equivalents thereof.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for secure virtualized wireless base station orchestration on a node of a scalable cloud environment, the method comprising:<claim-text>obtaining a node certificate and private key from a global certificate authority (CA) using a PKI request signed using a global certification and key, wherein the node certificate and private key defines a PKI signing certificate and private key;</claim-text><claim-text>establishing an orchestration access IPsec tunnel to an orchestration central cloud comprising one or more functions for edge cloud orchestration;</claim-text><claim-text>utilizing, via the orchestration access IPsec tunnel, the one or more functions for edge cloud orchestration to deploy on the node one or more virtualized entities comprising one or more virtual network functions of a wireless base station;</claim-text><claim-text>obtaining at least one virtual network function (VNF) certificate and private key for the one or more deployed VNFs from the global CA using a PKI request signed using the global certificate and private key;</claim-text><claim-text>utilizing the at least one VNF certificate and private key, establishing one or more IPsec tunnels comprising at least one of:<claim-text>at least one X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network;</claim-text><claim-text>at least one S1/X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network;</claim-text><claim-text>at least one O1 IPsec tunnel to an Operations and Maintenance (OAM) secure gateway for a wireless base station Device Management System (DMS).</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the node of the scalable cloud environment is a controller node of the edge cloud and the one or more virtualized entities comprise one or both of a central unit control-plane (CU-CP) VNF and a central unit user-plane (CU-UP) VNF.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the controller node generates an authorization token signed with PKI signing certificate and private key for one or more compute nodes of the edge cloud, wherein the one or more compute nodes utilize the authorization token to obtain certificates and keys from the global certificate authority (CA).</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the node of the scalable cloud environment is a compute node of the edge cloud and the one or more virtualized entities comprise at least one distribution node (DU) VNF,<claim-text>the wireless base station further comprising one or more radio units (RU) coupled to the at least one DU VNF, the one or more radio units (RU) configured to implement a radio frequency (RF) interface and are deployed in a physical location where radio coverage is to be provided.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein obtaining the node certificate and private key further comprises:<claim-text>executing a PKI client application for acquiring the node certificate and private key from the global CA;</claim-text><claim-text>sending to the global CA the digital certificate and private key request for acquiring the node certificate and private key, wherein the digital certificate and private key used to sign the digital certificate and private key request is embedded and obfuscated within the PKI client application;</claim-text><claim-text>receiving from the global CA a digital certificate and private key response comprising a node level certificate and private key;</claim-text><claim-text>decrypting the node level private key and storing the node level private key with the node level certificate.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>obtaining an edge cloud node cluster sub CA certificate and private key from either an edge cloud node cluster or from the global CA, using a PKI request signed using the PKI signing certificate and private key.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein obtaining the edge cloud node cluster sub CA certificate and private key comprises:<claim-text>sending the PKI request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA;</claim-text><claim-text>receiving from the global CA an edge cloud node sub CA certificate and private key response comprising an edge cloud node sub CA certificate and private key; and</claim-text><claim-text>decrypting the edge cloud node sub CA private key and installing the edge cloud node sub CA certificate and private key.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein establishing an orchestration access IPsec tunnel to an orchestration central cloud comprises establishing an orchestration access IPsec tunnel though an orchestration and management network to couple cloud worker nodes hosting virtualized entities in an edge cloud of the scalable cloud environment to a cloud master node that implements the orchestration central cloud.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein obtaining the at least one VNF certificate and private key comprises:<claim-text>sending the PKI request to acquire the at least one VNF certificate and private key from a first VNF of the one or more virtualized entities to the global CA;</claim-text><claim-text>receiving from the global CA a VNF certificate and private key response comprising a VNF certificate and private key; and</claim-text><claim-text>decrypting the VNF private key and storing the VNF certificate and private key.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>establishing at least one operator CA tunnel between the one or more deployed VNFs and a network operator CA secure gateway and acquire one or more sets of X2 IPsec certificate and private key from an operator CA via the at least one operator CA tunnel.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the node comprises a VNF hosting platform for one or more virtualized entities of a wireless communications base station, the VNF hosting platform comprising a processor coupled to a memory.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A Virtual Network Function (VNF) hosting platform for one or more virtualized entities of a wireless communications base station, the VNF hosting platform comprising:<claim-text>a processor coupled to a memory, wherein the processor is configured to execute code to install and orchestrate a node of a virtualized wireless base station by:</claim-text><claim-text>obtaining a node certificate and private key from a global certificate authority (CA), wherein the node certificate and private key defines a PKI signing certificate and private key;</claim-text><claim-text>establishing an orchestration access IPsec tunnel to an orchestration central cloud comprising one or more functions for edge cloud orchestration;</claim-text><claim-text>utilizing, via the orchestration access IPsec tunnel, the one or more functions for edge cloud orchestration to deploy on the node one or more virtualized entities comprising one or more virtual network functions of a wireless base station;</claim-text><claim-text>obtaining at least one VNF certificate and private key for the one or more virtual network functions from the global CA;</claim-text><claim-text>utilizing the at least one VNF certificate and private key, establishing one or more IPsec tunnels comprising at least one of:<claim-text>at least one X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network;</claim-text><claim-text>at least one S1/X2 IPsec tunnel between the one or more virtual network functions of the wireless base station and a wireless network services operator network;</claim-text><claim-text>at least one O1 IPsec tunnel to an Operations and Maintenance (OAM) secure gateway for a wireless base station Device Management System (DMS).</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the one or more virtualized entities comprise one or both of a central unit control-plane (CU-CP) VNF and a central unit user-plane (CU-UP) VNF.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the VNF hosting platform comprises a controller node configured to generate an authorization token signed with the PKI signing certificate and private key for one or more compute nodes of the edge cloud, wherein the one or more compute nodes utilize the authorization token to obtain certificates and keys from the global CA.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the one or more virtualized entities comprise at least one distribution node (DU) VNF.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein obtaining the node certificate and private key comprises:<claim-text>executing a PKI client application for acquiring the node certificate and private key from the global CA;</claim-text><claim-text>sending to the global CA a digital certificate and private key request for acquiring the node certificate and private key, wherein the digital certificate and private key request is embedded and obfuscated within the PKI client application;</claim-text><claim-text>receiving from the global CA a digital certificate and private key response comprising a node level certificate and private key;</claim-text><claim-text>decrypting the node level private key and storing the node level certificate and private key.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising: obtaining an edge cloud node cluster sub CA certificate and private key, wherein obtaining the edge cloud node cluster sub CA certificate and private key comprises:<claim-text>sending a PKI request to acquire the edge cloud node cluster sub CA certificate and private key from the global CA;</claim-text><claim-text>receiving from the global CA an edge cloud node sub CA certificate and private key response comprising an edge cloud node sub CA certificate and private key; and</claim-text><claim-text>decrypting the edge cloud node sub CA private key and installing the edge cloud node sub CA certificate and private key.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein establishing an orchestration access IPsec tunnel to an orchestration central cloud comprises establishing an orchestration access IPsec tunnel though an orchestration and management network to couple to a cloud master node that implements the orchestration central cloud.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein obtaining the at least one VNF certificate and private key comprises:<claim-text>sending a PKI request to the global CA to acquire the at least one VNF certificate and private key from a first VNF of the one or more virtualized entities;</claim-text><claim-text>receiving from the global CA a VNF certificate and private key response comprising a VNF certificate and private key; and</claim-text><claim-text>decrypting the VNF private key and storing the VNF certificate and private key.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The VNF platform of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor is configured to execute code to install and orchestrate a node of a virtualized wireless base station by further:<claim-text>establishing at least one operator CA tunnel between the one or more VNFs and a network operator CA secure gateway and acquiring one or more sets of X2 IPsec certificate and private key from an operator CA via the at least one operator CA tunnel.</claim-text></claim-text></claim></claims></us-patent-application>