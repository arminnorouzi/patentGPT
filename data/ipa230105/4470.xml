<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004471A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004471</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17780837</doc-number><date>20201126</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>GB</country><doc-number>1917652.8</doc-number><date>20191203</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>34</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>01</class><subclass>R</subclass><main-group>31</main-group><subgroup>3185</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>348</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>R</subclass><main-group>31</main-group><subgroup>318513</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>349</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">IDENTIFYING CAUSES OF ANOMALIES OBSERVED IN AN INTEGRATED CIRCUIT CHIP</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>Siemens Industry Software Inc.</orgname><address><city>Plano</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Panesar</last-name><first-name>Gajinder</first-name><address><city>Cambridge</city><country>GB</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Hlond</last-name><first-name>Marcin</first-name><address><city>Cambridge</city><country>GB</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/083479</doc-number><date>20201126</date></document-id><us-371c12-date><date>20220527</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method of identifying a cause of an anomalous feature measured from system circuitry on an integrated circuit (IC) chip, the IC chip comprising the system circuitry and monitoring circuitry for monitoring the system circuitry by measuring features of the system circuitry in each window of a series of windows, the method comprising: (i) from a set of windows prior to the anomalous window comprising the anomalous feature, identifying a candidate window set in which to search for the cause of the anomalous feature; (ii) for each of the measured features of the system circuitry: (a) calculating a first feature probability distribution of that measured feature for the candidate window set; (b) calculating a second feature probability distribution of that measured feature for window(s) not in the candidate window set; (c) comparing the first and second feature probability distributions; and (d) identifying that measured feature in the timeframe of the candidate window set as a cause of the anomalous feature if the first and second feature probability distributions differ by more than a threshold value; (iii) iterating steps (i) and (ii) for further candidate window sets from the set of windows prior to the anomalous window; and (iv) outputting a signal indicating those measured feature(s) of step (ii)(d) identified as a cause of the anomalous feature.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="116.33mm" wi="158.75mm" file="US20230004471A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="57.83mm" wi="79.08mm" file="US20230004471A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="194.90mm" wi="144.86mm" orientation="landscape" file="US20230004471A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="224.28mm" wi="152.99mm" file="US20230004471A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="83.82mm" wi="120.48mm" file="US20230004471A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="231.99mm" wi="118.36mm" orientation="landscape" file="US20230004471A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="223.52mm" wi="152.99mm" file="US20230004471A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="92.29mm" wi="119.80mm" file="US20230004471A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="231.99mm" wi="118.36mm" orientation="landscape" file="US20230004471A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="234.87mm" wi="118.45mm" orientation="landscape" file="US20230004471A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="234.87mm" wi="118.36mm" orientation="landscape" file="US20230004471A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="234.87mm" wi="118.36mm" orientation="landscape" file="US20230004471A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="234.87mm" wi="118.70mm" orientation="landscape" file="US20230004471A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD OF THE INVENTION</heading><p id="p-0002" num="0001">This invention relates to analysing features measured from system circuitry within a System-on-Chip (SoC) or multi-chip module (MCM).</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">In the past, an embedded system which had multiple core devices (processors, memories etc.) would have been incorporated onto a Printed Circuit Board (PCB) and connected on the PCB via buses. Traffic in the embedded system was conveyed over these buses. This arrangement was convenient for monitoring the core devices, because monitoring tools such as oscilloscopes and logic analysers could be attached to the PCB's buses allowing direct access to the core devices.</p><p id="p-0004" num="0003">Market demand for smaller products coupled with advances in semiconductor technology has led to the development of System-on-Chip (SoC) devices. In a SoC, the multiple core devices of an embedded system are integrated onto a single chip. In a SoC, the traffic in the embedded system is conveyed over internal buses, thus connection of monitoring tools directly to the system bus is no longer possible. The resulting reduced access coupled with an increasing quantity of data being transported around the chip (due to developments of SoC technology leading to integration of multiple processing cores and higher internal clocking frequencies), has reduced the ability of external monitoring tools to monitor the system for security breaches, bugs, and safety concerns within the timescales demanded by the industry. Additionally, when multiple core devices are embedded onto the same single chip, the behaviour of each individual core device differs from its behaviour in isolation due to its interaction with the other core devices as well as real time events such as triggers and alerts.</p><p id="p-0005" num="0004">Thus, the development of SoC devices required associated development in monitoring technology, which lead to the integration of some monitoring functionality onto the SoC. It is now known for monitoring circuitry within the SoC to trace the output of processors executing programs on core devices (such as CPUs). The trace data is generally output for analysis off-chip.</p><p id="p-0006" num="0005">It would be desirable to generate more detailed analysis of the data gathered by on-chip monitoring circuitry, in particular to investigate anomalies in the data.</p><heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0007" num="0006">According to a first aspect, there is provided a method of identifying a cause of an anomalous feature measured from system circuitry on an integrated circuit (IC) chip, the IC chip comprising the system circuitry and monitoring circuitry for monitoring the system circuitry by measuring features of the system circuitry in each window of a series of windows, the method comprising: (i) from a set of windows prior to the anomalous window comprising the anomalous feature, identifying a candidate window set in which to search for the cause of the anomalous feature; (ii) for each of the measured features of the system circuitry: (a) calculating a first feature probability distribution of that measured feature for the candidate window set; (b) calculating a second feature probability distribution of that measured feature for window(s) not in the candidate window set; (c) comparing the first and second feature probability distributions; and (d) identifying that measured feature in the timeframe of the candidate window set as a cause of the anomalous feature if the first and second feature probability distributions differ by more than a threshold value; (iii) iterating steps (i) and (ii) for further candidate window sets from the set of windows prior to the anomalous window; and (iv) outputting a signal indicating those measured feature(s) of step (ii)(d) identified as a cause of the anomalous feature.</p><p id="p-0008" num="0007">Step (ii)(c) may comprise determining a difference measure between the first feature probability distribution and the second feature probability distribution; and step (ii)(d) may comprise identifying that the measured feature in the timeframe of the candidate window set is a cause of the anomalous feature if that difference measure is greater than the threshold value.</p><p id="p-0009" num="0008">The difference measure may be scaled by a percentile of the difference over time between first and second feature probability distributions of the iterations.</p><p id="p-0010" num="0009">The set of windows prior to the anomalous window may be bounded by (i) the anomalous window, and (ii) a distal earlier window.</p><p id="p-0011" num="0010">Step (ii)(b) may comprise calculating the second feature probability distribution of that measured feature fora set of windows between the candidate window set and the anomalous window.</p><p id="p-0012" num="0011">The candidate window set may comprise fewer than 10 windows.</p><p id="p-0013" num="0012">The candidate window set may comprise a single window only.</p><p id="p-0014" num="0013">The first and second feature probability distributions may be calculated in steps (ii)(a) and (b) by fitting a Gaussian model to the measured feature for the identified windows.</p><p id="p-0015" num="0014">The method may further comprise identifying a measured feature affected by the anomalous feature, the affected measured feature being in a window subsequent to the anomalous window, the method comprising: (v) from a set of windows subsequent to the anomalous window, identifying a subsequent candidate window set in which to search for an effect of the anomalous feature; (vi) for each of the measured features of the system circuitry: (a) calculating a third feature probability distribution of that measured feature for the subsequent candidate window set; (b) calculating a fourth feature probability distribution of that measured feature for subsequent window(s) not in the subsequent candidate window set; (c) comparing the third and fourth feature probability distributions; and (d) identifying that measured feature in the timeframe of the subsequent candidate window set as affected by the anomalous feature if the third and fourth feature probability distributions differ by more than a further threshold value; and (vii) iterating steps (v) and (vi) for further subsequent candidate window sets from the set of windows subsequent to the anomalous window; and (viii) outputting a signal indicating those measured feature(s) of step (vi)(d) identified as affected by the anomalous feature.</p><p id="p-0016" num="0015">Step (vi)(c) may comprise determining a further difference measure between the third feature probability distribution and the fourth feature probability distribution; and step (vi)(d) may comprise identifying that the measured feature in the timeframe of the subsequent candidate window set is affected by the anomalous feature if that further difference measure is greater than the further threshold value.</p><p id="p-0017" num="0016">The further difference measure may be a scaled difference over time between the third and fourth feature probability distributions.</p><p id="p-0018" num="0017">The set of windows subsequent to the anomalous window may be bounded by (i) the anomalous window, and (ii) a distal later window.</p><p id="p-0019" num="0018">Step (vi)(b) may comprise calculating the fourth feature probability distribution of that measured feature for a set of windows between the subsequent candidate window set and the anomalous window.</p><p id="p-0020" num="0019">The subsequent candidate window set may comprise fewer than 10 windows.</p><p id="p-0021" num="0020">The subsequent candidate window set may comprise a single window only.</p><p id="p-0022" num="0021">The third and fourth feature probability distributions may be calculated in steps (vi)(a) and (b) by fitting a Gaussian model to the measured feature for the identified windows.</p><p id="p-0023" num="0022">The measured features may include those derived from trace data generated by the monitoring circuitry from data outputted by components of the system circuitry.</p><p id="p-0024" num="0023">The measured features may include those derived from match events identified by the monitoring circuitry from data inputted to or outputted from components of the system circuitry.</p><p id="p-0025" num="0024">The measured features may include those derived from counters of the monitoring circuitry configured to count every time a specific item is observed from components of the system circuitry.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0026" num="0025">The present invention will now be described by way of example with reference to the accompanying drawings. In the drawings:</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic drawing of an exemplary integrated circuit chip device;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic drawing of an exemplary monitoring network and system circuitry on an integrated circuit chip device;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart of a method of identifying a cause of an anomalous feature measured from system circuitry:</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates time windows of a sequence of measured features;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a graph depicting features which are the cause of subsequent anomalous features;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of a method of identifying subsequent measured features affected by an anomalous feature measured from system circuitry;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates time windows of a sequence of measured features;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a graph depicting both features which are the cause of subsequent anomalous features and also features which are affected by the anomalous features; and</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>9</b></figref><i>a, b, c </i>and d are graphs depicting both features which are the cause of subsequent anomalous features and also features which are affected by the anomalous features, for different length candidate window sets.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0036" num="0035">The following disclosure describes a monitoring architecture suitable for implementation on an integrated circuit chip. The integrated circuit chip may be a SoC or a multi-chip module (MCM).</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> are schematic diagrams of exemplary system architectures, and components within the system architectures. These figures present the structures in terms of functional blocks. Some functional blocks for carrying out functions well known in the art have in places been omitted from these figures. <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>6</b></figref> are flowcharts illustrating methods of analysing statistical data measured by the monitoring circuitry. Each flowchart depicts an order in which the method of that flowchart can be performed. However, the flowcharts are not intended to restrict the described methods to being implemented in the orders depicted. The steps of the methods may be carried out in alternative orders to those depicted in the flowcharts.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates the general structure of an exemplary monitoring network for a SoC <b>100</b>. Monitoring circuitry <b>101</b> is arranged to monitor system circuitry <b>102</b>. For example, for the purposes of detecting improper operation of the core devices relating to safety or security concerns.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates exemplary system circuitry comprising core devices <b>201</b>, <b>202</b> connected via a SoC interconnect <b>203</b>. Core devices <b>201</b><i>a, </i><b>201</b><i>b, </i><b>201</b><i>c </i>are master devices. Core devices <b>202</b><i>a, </i><b>202</b><i>b, </i><b>202</b><i>c </i>are slave devices. Any number of core devices can be suitably integrated into the system circuitry, as indicated by the numbering of the master and slave devices as <b>1</b>, <b>2</b>, . . . N on <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The SoC interconnect <b>203</b> forms a communication backbone for the SoC, through which the master and slave devices communicate with each other. These communications are bi-directional.</p><p id="p-0040" num="0039">Master devices are those which initiate traffic, such as read/write requests in a network. Examples of master devices are processors such as a DSP (digital signal processor), video processor, applications processor, CPU (central processor unit), and GPU (graphics processor unit). Any programmable processor may be a master device. Other examples of master devices are those with DMA (direct memory access) capability, such as conventional DMAs for moving data from one location to another, autonomous coprocessors with DMA capability (such as an encryption engine), and peripherals with DMA capability (such as an Ethernet controller).</p><p id="p-0041" num="0040">Slave devices are those which respond to the commands of the master devices. Examples of slave devices are on-chip memories, memory controllers for off-chip memories (such as DRAM), and peripheral units.</p><p id="p-0042" num="0041">The topology of the SoC interconnect <b>203</b> is SoC dependent. For example, it may comprise any one or combination of the following types of network to transport communications around the system circuitry: a bus network, a ring network, a tree network, or a mesh network.</p><p id="p-0043" num="0042">The monitoring circuitry <b>101</b> comprises monitoring units <b>204</b><i>a, </i><b>204</b><i>b </i>connected to a communicator <b>206</b> via a monitoring interconnect <b>205</b>.</p><p id="p-0044" num="0043">Any number of monitoring units can be integrated into the monitoring circuitry. Each monitoring unit is connected to a communication link between a master device and a slave device. This connection may be between a master device and the SoC interconnect, for example at the interface between the master device and the SoC interconnect. The connection may be between the SoC interconnect and a slave device, for example at the interface between the slave device and the SoC interconnect. Each monitoring unit may be connected to a single communication link. Alternatively, one or more monitoring units of the monitoring circuitry <b>101</b> may be connected to a plurality of communication links. The monitoring units <b>204</b> monitor the operation of the core devices by monitoring the communications on the monitored communication links. Optionally, the monitoring units may also be able to manipulate the operation of the core devices that they are monitoring.</p><p id="p-0045" num="0044">The communicator <b>206</b> may be an interface for communicating with entities off-chip. For example, monitoring circuitry <b>101</b> may communicate with an off-chip analyser via communicator <b>206</b>. Communicator <b>206</b> may additionally or alternatively be configured to communicate with other entities on-chip. For example, monitoring circuitry <b>101</b> may communicate with an on-chip analyser via communicator <b>206</b>. Although <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates one communicator <b>206</b>, any number of communicators can be integrated onto the SoC. The communicators implemented are chosen in dependence on the type of connections that are to be made. Exemplary communicators include: JTAG, parallel trace input/output, and Aurora based high-speed serial interface; and reuse of system interfaces such as USB, Ethernet, RS232, PCIe and CAN.</p><p id="p-0046" num="0045">The topology of the monitoring interconnect <b>205</b> may comprise any one or combination of the following types of network to transport communications around the monitoring circuitry:</p><p id="p-0047" num="0046">a bus network, a ring network, a tree network, or a mesh network. The communication links between the monitoring units <b>204</b> and the communicator <b>206</b> are bi-directional.</p><p id="p-0048" num="0047">As described above, the monitoring units <b>204</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> monitor the communications between the master <b>201</b> and slave <b>202</b> devices. The monitoring units may gather statistics from the communications that they monitor. The statistics gathered and the time windows over which this is done are configurable. For example, each monitoring unit <b>204</b> may receive a configuration command(s) from an on-chip or off-chip analyser commanding the monitoring unit to monitor specific communication parameters. The analyser may also specify the length of the time windows over which the parameters are to be monitored. The analyser may also specify when the collected data is to be reported to the analyser. Typically, the analyser requires the collected data to be reported periodically.</p><p id="p-0049" num="0048">Thus, a monitoring unit <b>204</b> may be configured to monitor the communications of its connected component (be that a master device <b>201</b> or a slave device <b>202</b>) over a series of monitored time windows. The length of each monitored time window may be specified by the analyser as described above. The monitored time windows may be non-overlapping. For example, the monitored time windows may be contiguous. Alternatively, the monitored time windows may be overlapping.</p><p id="p-0050" num="0049">Examples of data which may be generated by a monitoring unit observing one or more components of system circuitry include:</p><p id="p-0051" num="0050">Trace data. The generated trace data may be a copy of data observed by the monitoring unit. For example, a copy of an instruction sequence executed by a CPU, or a set of transactions on a bus.</p><p id="p-0052" num="0051">Match data. The monitoring unit may be configured to monitor the system circuitry for occurrences of specific events. On identifying the specific event, the monitoring unit generates match data. The monitoring unit may output this match data immediately to the analyser.</p><p id="p-0053" num="0052">Counter data. The monitoring unit may comprise one or more counters. Each counter is configured to count occurrences of a specific event. The count value of the counter may be periodically output to the analyser.</p><p id="p-0054" num="0053">The raw data generated by the monitoring units is suitably converted to a set of measured features for each window of a series of time windows. Each measured feature has a value for each window.</p><p id="p-0055" num="0054">Examples of measured features include:</p><p id="p-0056" num="0055">Aggregated bandwidth captured from a bus. This may be split into an aggregated bandwidth for read operations, and separately an aggregated bandwidth for write operations.</p><p id="p-0057" num="0056">The maximum latency, minimum latency, and/or average latencies from read operations captured from a bus.</p><p id="p-0058" num="0057">The number of address match events. In other words, the number of accesses to a selected memory region.</p><p id="p-0059" num="0058">From software execution trace, in each separate thread: (i) the aggregated time spent in the thread; and/or (ii) the minimum, maximum, and/or average thread interval times; and/or (iii) the number of thread schedule events, optionally specifying from which thread it took over.</p><p id="p-0060" num="0059">From software execution trace, the number of interrupts, and/or the minimum, maximum and/or average time spent in interrupt handlers.</p><p id="p-0061" num="0060">From CPU instruction trace, the number of instructions executed, optionally grouped into instruction classes which may include branches.</p><p id="p-0062" num="0061">The conversion of raw data to measured features may be by any method known in the art. This conversion may be carried out by the monitoring circuitry <b>101</b> on-chip. Alternatively, the conversion may be carried out by the analyser which may be on-chip or off-chip. Data obtained from sources other than monitoring units <b>204</b> may be used in combination with the raw data generated by the monitoring units in generating the measured features. The time windows into which the measured features are aggregated may have a length between 1 ms and 1000 ms. The time windows into which the measured features are aggregated may have a length between 10 ms and 100 ms.</p><p id="p-0063" num="0062">The measured features in the series of time windows may then be input to an anomaly detection method to identify any of those measured features which are anomalous. The anomaly detection method is likely carried out by the analyser. However, alternatively, the anomaly detection method may be carried out by the monitoring circuitry <b>101</b>.</p><p id="p-0064" num="0063">In a first example, anomaly detection is carried out with a model trained from known good sequences. In this example, the model captures the behaviour of a series of time windows whose measured features are known not to be anomalous. Building the model comprises constructing a feature distribution for each feature. For example, a kernel density estimator (KDE) may be used to build the distribution. The KDE starts with a flat zero line and adds a small gaussian kernel for the value of each feature from each window of the series of time windows. Each feature value contributes the same amount to the distribution. The final values may then be scaled. The result is a feature distribution indicative of the likelihood of a particular value of a feature representing normal behaviour. The model thus comprises a set of feature distributions representing normal behaviour of those features.</p><p id="p-0065" num="0064">Subsequent sequences can then be compared against the model. The subsequent sequence comprises a series of time windows whose measured features are not known to be anomalous or not anomalous. A subsequent sequence may be compared to the model by comparing an individual window of the subsequent sequence to the model. In this case, the value of the model feature distribution corresponding to the value of the feature in the individual window is determined. If the value of the distribution indicates a low likelihood of that feature value being normal behaviour, then the feature is determined to be anomalous in the individual window. For example, if the value of the distribution is below a threshold value, then the feature is determined to be anomalous in the individual window. The threshold values may be different for different features.</p><p id="p-0066" num="0065">The anomalous features are outputted as an electrical signal to a user (for example as a visual signal on a screen). If two or more anomalous features are identified, then these may be ranked in the output signal. The anomalous features may be ranked in order of their value below the threshold value, with anomalous feature which is furthest below the threshold value being ranked first, and the anomalous feature which is closest below the threshold ranked last.</p><p id="p-0067" num="0066">A subsequent sequence may be compared to the model by first constructing a feature distribution for each feature of the subsequent sequence. For example a KDE may be used to generate each feature distribution as described above with respect to the generation of the model. The difference between the model feature distribution and the subsequent sequence feature distribution for each feature is then taken. If, for a feature, the average difference between these two feature distributions is greater than a threshold, then that feature in the subsequent sequence is determined to contain an anomaly.</p><p id="p-0068" num="0067">The anomalous features are outputted as an electrical signal to a user (for example as a visual signal on a screen). If two or more anomalous features are identified, then these may be ranked in the output signal. The anomalous features may be ranked in order of their average differences between the model feature distribution and the subsequence sequence feature distribution, the anomalous feature with the greatest average difference being ranked first, and the anomalous feature with the smallest average difference being ranked last.</p><p id="p-0069" num="0068">In a second example, anomaly detection is carried out without utilising the behaviour of a series of time windows whose measured features are known not to be anomalous. Anomaly detection is carried out on a sequence comprising a series of time windows of measured features. Those measured features are not known to be anomalous or not anomalous. This example comprises constructing a feature distribution for each feature of the sequence. This may be carried out using a KDE as described above with respect to the first example. The lowest values in the feature distribution for each feature are identified as potentially anomalous. These potentially anomalous features are outputted as an electrical signal to a user (for example as a visual signal on a screen). The user may reject the identified features as not anomalous or accept the identified features as anomalous. The user may also flag other features as anomalous manually.</p><p id="p-0070" num="0069">The outputted anomalous features may be grouped into anomalous windows. The anomalous windows may be ranked in order of their likelihoods across all features, with the anomalous window having the lowest likelihood of representing normal behaviour across all features being ranked first, and the anomalous window having the highest likelihood of representing normal behaviour across all features being ranked last.</p><p id="p-0071" num="0070">Suitably, several iterations of the chosen anomaly detection method are carried out, each iteration using a different time window length. For example, a range of time window lengths from 10 ms to 100 ms may be utilised in the iterations. This may enable an anomaly resulting from a temporal property that is observed more readily within a particular window length to be identified. Within each iteration, the time windows may be non-overlapping. For example, the time windows may be contiguous. Alternatively, the time windows may be overlapping.</p><p id="p-0072" num="0071">A method will now be described for identifying causes of anomalous features in the activities of components on a SoC with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Those anomalous features have been identified using an anomaly detection method (such as one of the ones described above). The method described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> is carried out at a processor. Suitably, this processor is located at an analyser. The analyser may be on the SoC <b>100</b>. Alternatively, the analyser may be an off-chip component. The processor may alternatively be located in the monitoring circuitry <b>101</b> of the SoC.</p><p id="p-0073" num="0072">The processor receives as an input a sequence of measured features. The processor also receives as an input one or more time windows which are identified as having at least one anomalous feature in them. The anomalous feature(s) itself may, optionally, be identified. The processor uses these inputs to search for possible causes of the anomalous feature(s) in the time windows which precede the anomalous window(s).</p><p id="p-0074" num="0073">At step <b>301</b>, the processor selects a candidate window set j in which to search for a cause of the anomalous feature. For each anomalous window, the processor selects one or more window to add to the candidate window set j. For each anomalous window, the window(s) added to the candidate window set j are selected from the anomalous window and the set of windows which precedes the anomalous window in the sequence of measured features. <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example sequence of measured features. An anomalous window is labelled <b>401</b>. For this anomalous window, the window(s) which the processor adds to the candidate window set j are selected from the windows labelled <b>402</b>. This set of windows <b>402</b> is bounded by: (i) the anomalous window <b>404</b>, and (ii) a distal earlier window <b>405</b>. The distal earlier window is the earliest window in which a cause for the anomalous feature is to be searched. For ease of illustration, only 10 windows are shown preceding the anomalous window <b>401</b>. In practice, the set of windows <b>402</b> may include up to 1000 windows. For example, the set of windows <b>402</b> may include 100 windows. The windows Cj added to the candidate window set j for the anomalous window <b>401</b> are labelled <b>403</b>. The length of the windows Cj added to the candidate window set j is configurable. The length of the windows Cj may be a single window only. Alternatively, the length of the windows Cj may include two or more windows. The length of the windows Cj may include up to 10 windows. In the example of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the length of the windows Cj is shown as including three windows: windows <b>4</b>, <b>5</b> and <b>6</b>. The processor selects windows Cj to add to the candidate window set j for each anomalous window in the sequence of measured features. For example, in this iteration, the processor may add three windows to the candidate window set j for each anomalous window, those three windows being consecutive windows which are 4 to 6 windows back from the anomalous window.</p><p id="p-0075" num="0074">Following step <b>301</b>, the processor moves to step <b>302</b>. At step <b>302</b>, for a measured feature i, the processor calculates a first feature probability distribution PD<b>1</b> of that measured feature i for the candidate window set j.</p><p id="p-0076" num="0075">At step <b>303</b>, the processor calculates, for each measured feature i, a second feature probability distribution PD<b>2</b> of that measured feature i for windows in the sequence but not in the candidate window set j. The second feature probability distribution PD<b>2</b> may be calculated for a set of windows which includes all the windows <b>402</b> which are not in the candidate window set j.</p><p id="p-0077" num="0076">Steps <b>302</b> and <b>303</b> may be carried out concurrently. Alternatively, step <b>302</b> may precede step <b>303</b> as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Alternatively, step <b>303</b> may precede step <b>302</b>.</p><p id="p-0078" num="0077">The first and second feature probability distributions may be calculated by the processor applying the KDE method described above to the identified windows of the sequence of measured features. Alternatively, the first and second feature probability distributions may be calculated by the processor by fitting a Gaussian Mixture model to the identified windows of the sequence of measured features. There are likely to be only a small number of windows prior to the anomalous window in which a further anomaly is identified. The Gaussian Mixture model generates a simpler distribution than the KDE model, which is more effective with fewer data points, and thus may be preferred here. Alternatively, a different model known in the art may be used to generate the first and second feature probability distributions.</p><p id="p-0079" num="0078">Having calculated the first and second feature probability distributions at steps <b>302</b> and <b>303</b>, the processor compares the two distributions at step <b>304</b>. A large difference between the distributions is indicative of that feature being a cause or contributor to the anomaly observed in the anomalous window. Thus, the processor determines whether the first and second feature probability distributions differ by more than a threshold value Vt. If, at step <b>304</b>, the first and second feature probability distributions PD<b>1</b> and PD<b>2</b> differ by more than the threshold value Vt, then the processor moves to step <b>305</b>, wherein it identifies the feature i in the candidate window set j as a cause of the anomalous feature in the anomalous window. If, at step <b>304</b>, the first and second feature probability distributions PD<b>1</b> and PD<b>2</b> differ by less than the threshold value Vt, then the processor does not identify the feature i in the candidate window set j as a cause of the anomalous feature in the anomalous window.</p><p id="p-0080" num="0079">In order to assess whether the first and second feature probability distributions differ by more than a threshold value, the processor may determine a difference measure between the two probability distributions. The difference measure is a single value. That single value may represent the average difference between the probability distributions. In other words, the average difference between the number of features observed at each feature value in the two distributions. Alternatively, that single value may represent the total difference between the probability distributions. In other words, the total difference between the number of features observed at each feature value in the two distributions. The difference measure may be calculated by any method known in the art. That difference measure |PD<b>1</b>-PD<b>2</b>| is then compared to the threshold value Vt at step <b>304</b>.</p><p id="p-0081" num="0080">The processor then moves on to step <b>306</b>. At step <b>306</b>, the processor determines whether there are any more measured features which the method of <figref idref="DRAWINGS">FIG. <b>3</b></figref> has not yet been applied to in respect of candidate window set j. If there are more measured features, then the processor moves to step <b>307</b>, where the next measured feature is selected. The processor then repeats steps <b>302</b> to <b>306</b> for that next measured feature for the candidate window set j. If, at step <b>306</b>, the processor determines that there are no further measured features, then it moves to step <b>308</b>.</p><p id="p-0082" num="0081">At step <b>308</b>, the processor determines whether there are any more candidate window sets which the method of <figref idref="DRAWINGS">FIG. <b>3</b></figref> has not yet been applied to. The next candidate window set j+1 may be overlapping with the candidate window set j. For example, for the next candidate window set j+1, for each anomalous window, the processor may select different window or window(s) to add to the candidate window set j+1 to the window(s) it selected to add to the candidate window set j. As with candidate window set j, for each anomalous window, the window(s) added to the candidate window set j+1 are selected from the anomalous window and the set of windows which precedes the anomalous window in the sequence of measured features. Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the window(s) Cj+1 which the processor adds to the candidate window set j+1 for the anomalous window <b>401</b> are labelled <b>408</b> and exclusively includes windows <b>5</b>, <b>6</b> and <b>7</b>. In this example, windows <b>5</b> and <b>6</b> of candidate window set j+1 overlap with candidate window set j. Alternatively, the next candidate window set j+1 may not overlap with the candidate window set j, but be contiguous with it. For example, referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the window(s) Cj+1 which the processor adds to the candidate window set j+1 for the anomalous window <b>401</b> are labelled <b>409</b> and includes windows <b>7</b>, <b>8</b> and <b>9</b>. In this example, there are no overlapping windows of candidate window set j+1 and candidate window set j selected in respect of the anomalous window <b>401</b>. Once the iteration has reached the distal earlier window <b>405</b>, then there are no further candidate window sets.</p><p id="p-0083" num="0082">If at step <b>308</b> it is determined that there are more candidate window sets, then the processor moves to step <b>309</b>, where the next candidate window set is selected. The processor then repeats steps <b>302</b> to <b>308</b> for the next candidate window set. If at step <b>308</b> it is determined that there are no more candidate window sets, then the processor moves to step <b>310</b>, where it outputs the identified causes (if any) of the anomalous feature of the anomalous window.</p><p id="p-0084" num="0083">At step <b>310</b>, the cause(s) of the anomalous feature may be outputted as an electrical signal to a user (for example as a visual signal on a screen of the analyser). For example, a graph such as the one illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may be outputted to the screen. The graph of <figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates several plots. Each plot is of a scaled difference measure between the first and second feature distributions for a measured feature (on the y-axis) plotted against the number of windows back in time from the anomalous window (on the x-axis). The number of windows back in time may be taken as the window of the candidate window set which is closest to the anomalous window. For example, looking at <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the scaled difference measure between the first and second feature probability distributions for the candidate window set j would be marked at three windows back in time on the x-axis.</p><p id="p-0085" num="0084">Difference measures are not consistent between different measured features. For example, cumulative times may be consistently more variable than memory saturation. Since <figref idref="DRAWINGS">FIG. <b>5</b></figref> plots the difference measures of all the measured features on one graph, the difference measures are scaled such that they can be compared. Thus, the difference measures provide a relative measure for the different measured features. For example, the difference measures may be scaled by a percentile of their difference over time. For example, the difference measures may be scaled by the 50<sup>th </sup>percentile.</p><p id="p-0086" num="0085">By plotting the scaled difference measures over a time offset from the anomalous window, the measured feature(s) which are causes of the anomalous feature are readily apparent to the user. A large scaled difference for a measured feature at a specific number of windows back in time indicates a high likelihood of a cause occurring in that measured feature at that number of windows back in time.</p><p id="p-0087" num="0086">The graph of <figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates the method of <figref idref="DRAWINGS">FIG. <b>3</b></figref> carried out on software thread switching data. The first and second feature probability distributions were each generated using a Gaussian Mixture Model (GMM). The candidate window set had a single window. The relative GMM distribution difference is used as the difference measure. The graph suggests that the rt thread close in time to the anomalous window is a cause of the anomalous feature.</p><p id="p-0088" num="0087">This is shown by the measured differences for the maximum and minimum rt times being substantially greater in the 0 to 1 window range than the measured differences for other features.</p><p id="p-0089" num="0088">A corresponding method to that described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> may also be applied to windows after the anomalous window in the sequence of measured features. This method is illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, and can be used to identify a subsequent measured feature which has been affected by the anomalous feature in the anomalous window. The method of <figref idref="DRAWINGS">FIG. <b>6</b></figref> is carried out at the same processor that carries out the method of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0090" num="0089">As with <figref idref="DRAWINGS">FIG. <b>3</b></figref>, for the method of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the processor receives as an input the sequence of measured features, and one or more time windows which are identified as having at least one anomalous feature in them. The processor uses these inputs to search for subsequent features in subsequent time windows after the anomalous window which have been affected by the anomalous feature.</p><p id="p-0091" num="0090">At step <b>601</b>, the processor selects a subsequent candidate window set k in which to search for a measured feature affected by the anomalous feature. For each anomalous window, the processor selects one or more window to add to the subsequent candidate window set k. For each anomalous window, the window(s) added to the subsequent candidate window set k are selected from the anomalous window and the set of windows which follows the anomalous window in the sequence of measured features. <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an example sequence of measured features. An anomalous window is labelled <b>401</b>. For this anomalous window, the window(s) which the processor adds to the subsequent candidate window set j are selected from the windows labelled <b>701</b>. This set of windows <b>701</b> is bounded by: (i) the anomalous window <b>702</b>, and (ii) a distal later window <b>703</b>. The distal later window <b>703</b> is the latest window in which an effect of the anomalous feature is to be searched. For ease of illustration, only 10 windows are shown after the anomalous window <b>401</b>. In practice, the set of windows <b>701</b> may include up to 1000 windows. For example, the set of windows <b>701</b> may include 100 windows. The windows Ck added to the subsequent candidate window set k for the anomalous window <b>401</b> are labelled <b>704</b>. The length of the windows Ck added to the subsequent candidate window set k is configurable. The length of the windows Ck may be a single window only. Alternatively, the length of the windows Ck may include two or more windows. The length of the windows Ck may include up to 10 windows. In the example of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the length of the windows Ck is shown as including three windows: windows <b>5</b>, <b>6</b> and <b>7</b>. The processor selects windows Ck to add to the subsequent candidate window set k for each anomalous window in the sequence of measured features. For example, in this iteration, the processor may add three windows to the candidate window set k for each anomalous window, those three windows being consecutive windows which are 5 to 7 windows ahead of the anomalous window.</p><p id="p-0092" num="0091">Following step <b>601</b>, the processor moves to step <b>602</b>. At step <b>602</b>, for a measured feature I, the processor calculates a third feature probability distribution PD<b>3</b> of that measured feature I for the subsequent candidate window set k.</p><p id="p-0093" num="0092">At step <b>603</b>, the processor calculates, for each measured feature I, a fourth feature probability distribution PD<b>4</b> of that measured feature I for windows in the sequence but not in the subsequent candidate window set k. The fourth feature probability distribution PD<b>4</b> may be calculated for a set of windows which includes all the windows <b>701</b> which are not in the subsequent candidate window set k <b>704</b>.</p><p id="p-0094" num="0093">Steps <b>602</b> and <b>603</b> may be carried out concurrently. Alternatively, step <b>602</b> may precede step <b>603</b> as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Alternatively, step <b>603</b> may precede step <b>602</b>.</p><p id="p-0095" num="0094">The third and fourth feature probability distributions may be calculated by the processor using any of the methods described above with respect to the first and second feature probability distributions.</p><p id="p-0096" num="0095">Having calculated the third and fourth feature probability distributions at steps <b>602</b> and <b>603</b>, the processor compares the two distributions at step <b>604</b>. A large difference between the distributions is indicative of that feature being affected by the anomaly observed in the anomalous window. Thus, the processor determines whether the third and fourth feature probability distributions differ by more than a threshold value Vt&#x2032;. If, at step <b>604</b>, the third and fourth feature probability distributions PD<b>3</b> and PD<b>4</b> differ by more than the threshold value Vt&#x2032;, then the processor moves to step <b>605</b>, wherein it identifies the feature I in the subsequent candidate window set k as affected by the anomalous feature in the anomalous window. If, at step <b>604</b>, the third and fourth feature probability distributions PD<b>3</b> and PD<b>4</b> differ by less than the threshold value Vt&#x2032;, then the processor does not identify the feature I in the subsequent candidate window set k as affected by the anomalous feature in the anomalous window.</p><p id="p-0097" num="0096">In order to assess whether the third and fourth feature probability distributions differ by more than a threshold value, the processor may determine a difference measure between the two probability distributions. This difference measure may be calculated as described above with reference to the first and second feature probability distributions of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0098" num="0097">The processor then moves on to step <b>606</b>. At step <b>606</b>, the processor determines whether there are any more measured features which the method of <figref idref="DRAWINGS">FIG. <b>6</b></figref> has not yet been applied to in respect of subsequent candidate window set k. If there are more measured features, then the processor moves to step <b>607</b>, where the next measured feature is selected. The processor then repeats steps <b>602</b> to <b>606</b> for that next measured feature for the subsequent candidate window set k. If, at step <b>606</b>, the processor determines that there are no further measured features, then it moves to step <b>608</b>.</p><p id="p-0099" num="0098">At step <b>608</b>, the processor determines whether there are any more subsequent candidate window sets which the method of <figref idref="DRAWINGS">FIG. <b>6</b></figref> has not yet been applied to. The next subsequent candidate window set k+1 may be overlapping with the subsequent candidate window set k. For example, for the next candidate window set k+1, for each anomalous window, the processor may select different window or window(s) to add to the subsequent candidate window set k+1 to the window(s) it selected to add to the subsequent candidate window set k. As with subsequent candidate window set k, for each anomalous window, the window(s) added to the subsequent candidate window set k+1 are selected from the anomalous window and the set of windows after the anomalous window in the sequence of measure features. Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the window(s) Ck+1 which the processor adds to the subsequent candidate window set k+1 for the anomalous window <b>401</b> are labelled <b>707</b> and exclusively includes windows <b>6</b>, <b>7</b> and <b>8</b>. In this example, windows <b>6</b> and <b>7</b> of subsequent candidate window set k+1 overlap with subsequent candidate window set k. Alternatively, the next subsequent candidate window set k+1 may not overlap with the subsequent candidate window set k, but be contiguous with it. For example, referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the window(s) Ck+1 which the processor adds to the subsequent candidate window set k+1 for the anomalous window <b>401</b> are labelled <b>708</b> and includes windows <b>8</b>, <b>9</b> and <b>10</b>. In this example, there are no overlapping windows of subsequent candidate window set k+1 and subsequent candidate window set k selected in respect of the anomalous window <b>401</b>. Once the iteration has reached the distal later window <b>703</b>, then there are no further subsequent candidate window sets.</p><p id="p-0100" num="0099">If at step <b>608</b> it is determined that there are more subsequent candidate window sets, then the processor moves to step <b>609</b>, where the next subsequent candidate window set is selected. The processor then repeats steps <b>602</b> to <b>608</b> for the next subsequent candidate window set. If at step <b>608</b> it is determined that there are no more subsequent candidate window sets, then the processor moves to step <b>610</b>, where it outputs the measured features identified as affected by the anomalous feature of the anomalous window.</p><p id="p-0101" num="0100">At step <b>610</b>, the affected measured features may be outputted as an electrical signal to a user (for example as a visual signal on a screen of the analyser). For example, a graph corresponding to <figref idref="DRAWINGS">FIG. <b>5</b></figref> may be outputted which illustrates scaled difference measures between the third and fourth feature distributions for a measured feature (on the y-axis) plotted against the number of windows forwards in time from the anomalous window (on the x-axis). The number of windows forward in time may be taken as the window of the subsequent candidate window set which is closest to the anomalous window. For example, looking at <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the scaled difference measure between the third and fourth feature probability distributions for the subsequent candidate window set k would be marked at four windows forward in time on the x-axis. The difference measures may be scaled in the same manner described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>5</b></figref>.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a graph illustrating the result of both the methods described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>6</b></figref> having been carried out on the same sequence of measured features, which is the same sequence of measured features used to generate the graph of <figref idref="DRAWINGS">FIG. <b>5</b></figref>. These methods may have been carried out separately, as described above. Alternatively, the methods may have been carried out together as a single method, with the candidate window sets in <figref idref="DRAWINGS">FIG. <b>3</b></figref> including both windows from before and after the anomalous windows. In the graph of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the measured features i are the same feature types as the measured features I. The length of the candidate window set j is the same as the length of the subsequent candidate window set k. As with <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the feature probability distributions were all generated using Gaussian Mixture Models, and the (subsequent) candidate window set had a single window. As with <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the graph of <figref idref="DRAWINGS">FIG. <b>8</b></figref> suggests that the rt thread close in time to the anomalous window is a cause of the anomalous feature, and also that the rt thread following the anomalous window is affected by the anomalous feature. This is shown by the measured differences for the minimum rt times being substantially greater in the &#x2212;1 to 1 window range than the measured differences for other features.</p><p id="p-0103" num="0102">Both <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>8</b></figref> were generated in respect of a processor performing the methods described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>6</b></figref> using (subsequent) candidate window sets having a single window only. The number of windows in the (subsequent) candidate window sets may be greater than one. This may make the methods less sensitive to the exact point in time at which the error(s) occur. The methods implemented to produce <figref idref="DRAWINGS">FIG. <b>8</b></figref> were repeated with (subsequent) candidate window set lengths of 2, 3, 5 and 10 windows, the results of which are shown in <figref idref="DRAWINGS">FIGS. <b>9</b></figref><i>a, b, c </i>and d respectively. These figures illustrate that the rt thread is readily identifiable as a cause and affected feature in respect of a (subsequent) candidate window set length of 2 windows. The rt thread is identifiable as a cause and affected feature in respect of (subsequent) candidate window set lengths of 3 and 5 windows. However, with the (subsequent) candidate window set length of 10 windows of <figref idref="DRAWINGS">FIG. <b>9</b></figref><i>d, </i>the feature probability distribution of the (subsequent) candidate window set is too similar to the feature probability distribution of the windows outside the (subsequent) candidate window set for the rt thread to be identified as a cause and affected feature.</p><p id="p-0104" num="0103">Monitoring circuitry on an IC chip, such as that shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, can generate a huge quantity of monitored data. The methods described herein provide a way of analysing that data to identify causes of anomalous features measured from system circuitry, and subsequent features affected by the anomalous features. These methods can be implemented in real-time as the system circuitry continues to perform its functions. Alternatively, these methods can be implemented at a later time, off-line.</p><p id="p-0105" num="0104">Anomaly detection is applicable to a wide range of fields, in financial, commercial, business, industrial and engineering markets. Exemplary use of the methods described herein are: for security monitoring such as fraud detection or intrusion detection, safety monitoring, preventative maintenance for industrial devices such as sensors, and performance monitoring.</p><p id="p-0106" num="0105">Each component of the SoCs illustrated in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> may be implemented in dedicated hardware. Alternatively, each component of the SoC illustrated in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> may be implemented in software. Some components may be implemented in software, whilst other components are implemented in dedicated hardware.</p><p id="p-0107" num="0106">The SoC described is suitably incorporated within a computing-based device. The computing-based device may be an electronic device. Suitably, the computing-based device comprises one or more processors for processing computer executable instructions to control operation of the device in order to implement the methods described herein. The computer executable instructions can be provided using any computer-readable media such as a memory. The methods described herein may be performed by software in machine readable form on a tangible storage medium. Software can be provided at the computing-based device to implement the methods described herein.</p><p id="p-0108" num="0107">The above description describes the system circuitry and monitoring circuitry as being comprised on the same SoC. In an alternative implementation, the system circuitry and monitoring circuitry are comprised across two or more integrated circuit chips of an MCM. In an MCM, the integrated circuit chips are typically stacked or located adjacently on an interposer substrate. Some system circuitry may be located on one integrated circuit chip and other system circuitry located on a different integrated circuit chip of the MCM. Similarly, the monitoring circuitry may be distributed across more than one integrated circuit chip of the MCM. Thus, the method and apparatus described above in the context of a SoC also apply in the context of an MCM.</p><p id="p-0109" num="0108">The applicant hereby discloses in isolation each individual feature described herein and any combination of two or more such features, to the extent that such features or combinations are capable of being carried out based on the present specification as a whole in the light of the common general knowledge of a person skilled in the art, irrespective of whether such features or combinations of features solve any problems disclosed herein, and without limitation to the scope of the claims. The applicant indicates that aspects of the present invention may consist of any such individual feature or combination of features. In view of the foregoing description it will be evident to a person skilled in the art that various modifications may be made within the scope of the invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of identifying a cause of an anomalous feature measured from system circuitry on an integrated circuit (IC) chip, the IC chip comprising the system circuitry and monitoring circuitry for monitoring the system circuitry by measuring features of the system circuitry in each window of a series of windows, the method comprising:<claim-text>(i) identifying a candidate window set in which to search for a cause of the anomalous feature from a set of windows prior to an anomalous window comprising the anomalous feature;</claim-text><claim-text>(ii) for each feature of the measured features of the system circuitry:<claim-text>(a) calculating a first feature probability distribution of the respective measured feature for the candidate window set;</claim-text><claim-text>(b) calculating a second feature probability distribution of the respective measured feature for window(s) not in the candidate window set;</claim-text><claim-text>(c) comparing the first feature probability distribution and the second feature probability distribution; and</claim-text><claim-text>(d) identifying the respective measured feature in a timeframe of the candidate window set as a cause of the anomalous feature when the first feature probability distribution and the second feature probability distribution differ by more than a threshold value;</claim-text></claim-text><claim-text>(iii) iterating steps (i) and (ii) for further candidate window sets from the set of windows prior to the anomalous window; and</claim-text><claim-text>(iv) outputting a signal indicating the measured feature(s) of step (ii)(d) identified as a cause of the anomalous feature.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the comparing comprises determining a difference measure between the first feature probability distribution and the second feature probability distribution, and<claim-text>wherein the identifying comprises identifying that the measured feature in the timeframe of the candidate window set is a cause of the anomalous feature when the difference measure is greater than the threshold value.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the difference measure is a scaled by a percentile of the difference over time between first feature probability distribution and the second feature probability distribution of the iterations.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the set of windows prior to the anomalous window is bounded by (i) the anomalous window and (ii) a distal earlier window.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the calculating of the second feature probability distribution comprises calculating the measured feature for a set of windows between the candidate window set and the anomalous window.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the candidate window set comprises fewer than 10 windows.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A method as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the candidate window set comprises a single window only.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first feature probability distribution and the second feature probability distribution are calculated by fitting a Gaussian model to the measured feature for the identified windows.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising identifying a measured feature affected by the anomalous feature, the affected measured feature being in a window subsequent to the anomalous window, the method comprising:<claim-text>(v) identifying a subsequent candidate window set in which to search for an effect of the anomalous feature from a set of windows subsequent to the anomalous window;</claim-text><claim-text>(vi) for each feature of the measured features of the system circuitry:<claim-text>(a) calculating a third feature probability distribution of the respective measured feature for the subsequent candidate window set;</claim-text><claim-text>(b) calculating a fourth feature probability distribution of the respective measured feature for subsequent window(s) not in the subsequent candidate window set;</claim-text><claim-text>(c) comparing the third feature probability distribution and the fourth feature probability distribution; and</claim-text><claim-text>(d) identifying the respective measured feature in a timeframe of the subsequent candidate window set as affected by the anomalous feature when the third feature probability distribution and the fourth feature probability distribution differ by more than a further threshold value; and</claim-text></claim-text><claim-text>(vii) iterating steps (v) and (vi) for further subsequent candidate window sets from the set of windows subsequent to the anomalous window; and</claim-text><claim-text>(viii) outputting a signal indicating those measured feature(s) of step (vi)(d) identified as affected by the anomalous feature.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, the comparing of the third feature probability distribution and the fourth feature probability distribution comprises determining a further difference measure between the third feature probability distribution and the fourth feature probability distribution, and<claim-text>wherein the identifying comprises identifying that the measured feature in the timeframe of the subsequent candidate window set is affected by the anomalous feature when that further difference measure is greater than the further threshold value.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the further difference measure is a scaled difference over time between the third feature probability distribution and the fourth feature probability distribution.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the set of windows subsequent to the anomalous window is bounded by (i) the anomalous window and (ii) a distal later window.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the calculating of the fourth feature probability distribution comprises calculating the measured feature for a set of windows between the subsequent candidate window set and the anomalous window.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the subsequent candidate window set comprises fewer than 10 windows.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the subsequent candidate window set comprises a single window only.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the third feature probability distribution and the fourth feature probability distribution are calculated by fitting a Gaussian model to the measured feature for the identified windows.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the measured features include comprise those derived from trace data generated by the monitoring circuitry from data outputted by components of the system circuitry.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the measured features comprise those derived from match events identified by the monitoring circuitry from data inputted to or outputted from components of the system circuitry.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the measured features comprise those derived from counters of the monitoring circuitry configured to count every time a specific item is observed from components of the system circuitry.</claim-text></claim></claims></us-patent-application>