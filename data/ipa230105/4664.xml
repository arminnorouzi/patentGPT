<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004665A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004665</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17785037</doc-number><date>20191220</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>62</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>6218</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>1873</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CONTROL SERVER, DATA SHARING SYSTEM, AND CONTROL PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NIPPON TELEGRAPH AND TELEPHONE CORPORATION</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>ISHIDA</last-name><first-name>Tatsuro</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>OHASHI</last-name><first-name>Shigenori</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>FUJIMURA</last-name><first-name>Shigeru</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>NAKADAIRA</last-name><first-name>Atsushi</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>CHIKADA</last-name><first-name>Masayoshi</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>NIPPON TELEGRAPH AND TELEPHONE CORPORATION</orgname><role>03</role><address><city>Tokyo</city><country>JP</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/JP2019/050136</doc-number><date>20191220</date></document-id><us-371c12-date><date>20220613</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Upon receiving a usage request that includes a file identifier and a version identifier from a user terminal <b>20,</b> a control server <b>10</b> transmits a file request that is based on the usage request to a file management system, and transmits a permission information request that is based on the usage request to a distributed ledger system. Upon receiving the file request, the file management system acquires the file that corresponds to the combination of the file identifier and the version identifier and transmits the file to the control server <b>10.</b> Upon receiving the permission information request, the distributed ledger system acquires permission information that corresponds to the combination of the file identifier and the version identifier from a distributed ledger, and transmits the permission information to the control server <b>10.</b> The control server <b>10</b> transmits the file to the user terminal <b>20</b> if the user of the user terminal has viewing permission based on the permission information.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="142.41mm" wi="137.33mm" file="US20230004665A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="183.90mm" wi="145.88mm" file="US20230004665A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="138.18mm" wi="130.13mm" file="US20230004665A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="142.24mm" wi="122.60mm" file="US20230004665A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="150.28mm" wi="118.96mm" file="US20230004665A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="223.52mm" wi="140.38mm" orientation="landscape" file="US20230004665A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="223.18mm" wi="138.26mm" orientation="landscape" file="US20230004665A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The technology of the present disclosure relates to a control server, a data sharing system, and a control program.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">There is a system in which files are shared by linking a distributed storage system with a distributed ledger (PTL 1). Also, because handling large files is inconvenient, a lightweight storage method and a method of using links to a storage system have been proposed (NPL 1).</p><heading id="h-0003" level="1">RELATED ART LITERATURE</heading><heading id="h-0004" level="1">Patent Literature</heading><p id="p-0004" num="0003">PTL 1: JP 2018-112827A</p><heading id="h-0005" level="1">Non Patent Literature</heading><p id="p-0005" num="0004">NPL 1: Yongle Chen, et al, &#x201c;An improved P2P File System Scheme based on IPFS and Blockchain&#x201d;, 2017 IEEE International Conference on Big Data (BIGDATA), pp. 2652-2657.</p><heading id="h-0006" level="1">SUMMARY OF INVENTION</heading><heading id="h-0007" level="1">Technical Problem</heading><p id="p-0006" num="0005">However, with conventional technology, it is not possible to realize access control that takes the time axis into consideration for files registered in a storage system.</p><p id="p-0007" num="0006">For example, suppose that in the case of a file A in a distributed storage system, a user B has read permission for the file A at some point, and then the user B loses view permission for the file A. When the file A is updated, it is preferable that the user B can view the non-updated version of the file A but cannot view the updated version of the file A. Such viewing permission needs to be controlled.</p><p id="p-0008" num="0007">The technology disclosed herein was made in view of the above points, and an object thereof is to provide a control server, a data sharing system, and a control program according to which the viewing permission of a file managed by a file management system can be managed separately for versions before and after an update.</p><heading id="h-0008" level="1">Solution to Problem</heading><p id="p-0009" num="0008">A first aspect of the present disclosure is a control server in a data sharing system that includes the control server, a file management system, and a distributed ledger system having a distributed ledger that includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier that identifies a file managed in the file management system and a version identifier that identifies a version of the file, the control server including: a permission information request unit configured to, in a case of receiving a usage request that includes a file identifier and a version identifier from a user terminal, transmit a permission information request that is based on the usage request to the distributed ledger system, and acquire, from the distributed ledger, permission information that corresponds to a combination of the file identifier and the version identifier; a file request unit configured to transmit a file request that is based on the usage request to the file management system, and acquire, from the file management system, the file that corresponds to the combination of the file identifier and the version identifier; and a permission information verification unit configured to transmit the file acquired by the file request unit to the user terminal if a user of the user terminal has viewing permission based on the permission information acquired by the permission information request unit.</p><p id="p-0010" num="0009">A second aspect of the present disclosure is a data sharing system including: a distributed ledger system having a distributed ledger; a file management system; and a control server, wherein if the control server receives, from a user terminal, a usage request that includes a file identifier identifying a file managed in the file management system and a version identifier identifying a version of the file, the control server transmits a permission information request that is based on the usage request to the distributed ledger system, and transmits a file request that is based on the usage request to the file management system, upon receiving the file request, the file management system acquires the file that corresponds to a combination of the file identifier and the version identifier, and transmits the file to the control server, the distributed ledger includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier and a version identifier, upon receiving the permission information request, the distributed ledger system acquires the permission information that corresponds to the combination of the file identifier and the version identifier from the distributed ledger, and transmits the acquired permission information to the control server, and the control server transmits the file to the user terminal if a user of the user terminal has viewing permission based on the permission information.</p><p id="p-0011" num="0010">A third aspect of the present disclosure is a control program for execution by a computer that is a control server in a data sharing system that includes the control server, a file management system, and a distributed ledger system having a distributed ledger that includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier that identifies a file managed in the file management system and a version identifier that identifies a version of the file, the control program causing the computer to execute: receiving a usage request that includes a file identifier and a version identifier from a user terminal, transmitting a permission information request that is based on the usage request to the distributed ledger system, and acquiring, from the distributed ledger, permission information that corresponds to a combination of the file identifier and the version identifier; transmitting a file request that is based on the usage request to the file management system, and acquiring, from the file management system, the file that corresponds to the combination of the file identifier and the version identifier; and transmitting the file to the user terminal if a user of the user terminal has viewing permission based on the permission information.</p><heading id="h-0009" level="1">Effects of the Invention</heading><p id="p-0012" num="0011">According to the technology disclosed herein, the viewing permission of a file managed by a file management system can be managed separately for versions before and after an update.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0010" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing a configuration of a data sharing system according to an embodiment.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic block diagram of an example of a computer that functions as a control server, a user terminal, a distributed storage node, and a blockchain node according to the embodiment.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram showing a configuration of the control server according to the embodiment.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram showing an example of a transaction.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a sequence diagram showing a flow of processing in the data sharing system according to the embodiment.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a sequence diagram showing a flow of processing in the data sharing system according to the embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0011" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0019" num="0018">Hereinafter, an example of an embodiment of the technology disclosed herein will be described with reference to the drawings. Note that components and parts that are the same or equivalent in the drawings are denoted by the same reference numerals. Also, the dimensional ratios in the drawings are exaggerated for convenience in the description and may differ from the actual ratios.</p><heading id="h-0012" level="1">Overview of Embodiment</heading><p id="p-0020" num="0019">In the present embodiment, an identifier that uniquely identifies a file is prepared, and an identifier for version control is also prepared. Specifically, when a file is registered, an identifier that uniquely identifies the file (called a document ID) and an identifier for identifying the version of the file (called a document version ID) are prepared. When the file is updated, the document ID is inherited by the new file after the update, but a new document version ID is generated. This makes it possible to distinguish between updated and non-updated versions of the same file. A distributed ledger stores transactions that each include a document ID and a document version ID. A transaction also includes permission information indicating whether or not users can view the file that corresponds to the combination of the document ID and the document version ID in the transaction.</p><p id="p-0021" num="0020">When a user B requests a version oldA of a file FileA from a distributed storage node via a control server, the document version ID indicating the version oldA is included in the file request.</p><p id="p-0022" num="0021">Using the document ID and the document version ID that indicate the version oldA of the file FileA, the control server acquires the version oldA of the file FileA from the distributed storage node. The control server also uses the document ID of the file FileA and the document version ID of the version oldA to check user B permission information that is written in a transaction stored in the distributed ledger. At this time, the control server checks whether the user B has permission to view the version oldA of the file FileA.</p><p id="p-0023" num="0022">Accordingly, even if the file FileA has been updated, the user B can view the non-updated version of the file FileA according to the past permission.</p><heading id="h-0013" level="1">Configuration of Data Sharing System of Present Embodiment</heading><p id="p-0024" num="0023">The following describes the data sharing system of the present embodiment.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example of the functional configuration of a data sharing system <b>100</b> according to the present embodiment.</p><p id="p-0026" num="0025">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the data sharing system <b>100</b> according to the present embodiment includes a control server <b>10</b>, a plurality of user terminals <b>20</b>, a file management system <b>300</b>, and a distributed ledger system <b>400</b>. The control server <b>10</b>, the plurality of user terminals <b>20</b>, the file management system <b>300</b>, and the distributed ledger system <b>400</b> are connected via a network <b>50</b>.</p><heading id="h-0014" level="1">Configuration of Control Server of Present Embodiment</heading><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram showing the hardware configuration of the control server <b>10</b> of the present embodiment.</p><p id="p-0028" num="0027">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the control server <b>10</b> includes a CPU (Central Processing Unit) <b>11</b>, a ROM (Read Only Memory) <b>12</b>, a RAM (Random Access Memory) <b>13</b>, a storage unit <b>14</b>, an input unit <b>15</b>, a display unit <b>16</b>, and a communication interface (I/F) <b>17</b>. These members are connected to each other via a bus <b>19</b> so as to be able to communicate with each other.</p><p id="p-0029" num="0028">The CPU <b>11</b> is a central processing unit that executes various programs and controls various units. Specifically, the CPU <b>11</b> reads a program from the ROM <b>12</b> or the storage unit <b>14</b>, and executes the program using the RAM <b>13</b> as a work area. The CPU <b>11</b> controls the above members and performs various types of arithmetic processing in accordance with the program stored in the ROM <b>12</b> or the storage unit <b>14</b>. In the present embodiment, a control program is stored in the ROM <b>12</b> or the storage unit <b>14</b>. The control program may be one program or a program group made up of a plurality of programs or modules.</p><p id="p-0030" num="0029">The ROM <b>12</b> stores various programs and various data. The RAM <b>13</b> temporarily stores a program or data as a work area. The storage unit <b>14</b> is constituted by an HDD (Hard Disk Drive), an SSD (Solid State Drive), or the like, and stores various programs, including an operating system, and various data.</p><p id="p-0031" num="0030">The input unit <b>15</b> includes a pointing device such as a mouse, and a keyboard, and is used for giving various input.</p><p id="p-0032" num="0031">The display unit <b>16</b> is a liquid crystal display for example, and displays various types of information. The display unit <b>16</b> may adopt a touch panel method and function as the input unit <b>15</b>.</p><p id="p-0033" num="0032">The communication interface <b>17</b> is an interface for communicating with other devices, and uses a standard such as Ethernet (registered trademark), FDDI, or Wi-Fi (registered trademark).</p><p id="p-0034" num="0033">Next, the functional configuration of the control server <b>10</b> will be described. <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram showing an example of the functional configuration of the control server <b>10</b>.</p><p id="p-0035" num="0034">Functionally, as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the control server <b>10</b> has a file registration unit <b>102</b>, a permission information registration unit <b>104</b>, a file request acquisition unit <b>106</b>, a file request unit <b>108</b>, a permission information request unit <b>110</b>, and a permission information verification unit <b>112</b>.</p><p id="p-0036" num="0035">Upon receiving a new file from the user terminal <b>20</b> for example, the file registration unit <b>102</b> transmits the new file to the file management system <b>300</b> and registers the file in the file management system <b>300</b>. At this time, the file registration unit <b>102</b> generates a combination of a new document ID and document version ID, and registers the file in the file management system <b>300</b> in association with the combination of the new document ID and document version ID.</p><p id="p-0037" num="0036">Also, in the case of a file already managed in the file management system <b>300</b>, upon receiving an updated file from the user terminal <b>20</b>, the file registration unit <b>102</b> transmits the updated file to the file management system <b>300</b> and registers the updated file in the file management system <b>300</b>. At this time, the file registration unit <b>102</b> generates a new document version ID, the and registers the updated file in the file management system <b>300</b> in association with a combination of the same document ID as the non-updated file and the new document version ID.</p><p id="p-0038" num="0037">In the case where a new file is registered in the file management system <b>300</b> by the file registration unit <b>102</b>, the permission information registration unit <b>104</b> receives permission information regarding the new file from the user terminal <b>20</b>. The permission information registration unit <b>104</b> transmits, to the distributed ledger system <b>400</b>, the permission information that was received for the combination of the new document ID and document version ID that were generated for the new file by the file registration unit <b>102</b>. Accordingly, the permission information regarding the combination of the document ID and the document version ID is registered in the distributed ledger.</p><p id="p-0039" num="0038">In the case where a file already managed in the file management system <b>300</b> is updated by the file registration unit <b>102</b>, the permission information registration unit <b>104</b> receives permission information regarding the updated file from the user terminal <b>20</b>. The permission information registration unit <b>104</b> transmits, to the distributed ledger system <b>400</b>, the permission information that was received for the combination of the document ID and the document version ID that were generated for the updated file by the file registration unit <b>102</b>. Accordingly, the permission information regarding the combination of the document ID and the document version ID is registered in the distributed ledger.</p><p id="p-0040" num="0039">Here, when registering permission information in the distributed ledger, the permission information registration unit <b>104</b> generates a transaction having a data structure as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> and transmits the transaction to the distributed ledger system <b>400</b>. Specifically, the transaction data structure includes the following items: a key, a document ID, a user permission, and a document version ID. The key is a value for identifying a transaction. The document ID is a hash value of an identifier (e.g., &#x201c;FileA&#x201d;) that uniquely identifies a document. Note that the document ID may be a plain text identifier that uniquely identifies a document.</p><p id="p-0041" num="0040">The user permission is a hash structure that indicates whether or not each of one or more users can view the corresponding file, and the owner of the file, as shown below.</p><p id="p-0042" num="0041">{User A: view, User B: view, User C: view/owner}</p><p id="p-0043" num="0042">Note that the user permission may be plain text that indicates whether or not the user can view the file and the owner of the file.</p><p id="p-0044" num="0043">The document version ID is a hash value of an identifier that uniquely identifies the version of a document (e.g., &#x201c;oldA&#x201d; or &#x201c;newA&#x201d;). Note that the document version ID may be a plain text identifier that uniquely identifies the version of the document.</p><p id="p-0045" num="0044">Note that information other than the above may be added to the transaction.</p><p id="p-0046" num="0045">The file request acquisition unit <b>106</b> acquires a usage request that includes a document ID for identifying a file managed in the file management system <b>300</b> and a document version ID for identifying a file version, which were received from the user terminal <b>20</b>.</p><p id="p-0047" num="0046">The file request unit <b>108</b> transmits a file request that is based on the usage request acquired by the file request acquisition unit <b>106</b> to the file management system <b>300</b>, and acquires the file that corresponds to the combination of the document ID and the document version ID included in the file request from the file management system <b>300</b>.</p><p id="p-0048" num="0047">The permission information request unit <b>110</b> transmits a permission information request that is based on the usage request acquired by the file request acquisition unit <b>106</b> to the distributed ledger system <b>400</b>, and acquires permission information that corresponds to the combination of the document ID and the document version ID included in the permission information request from the distributed ledger system <b>400</b>.</p><p id="p-0049" num="0048">If the user of the user terminal <b>20</b> that transmitted the usage request can view the file based on the permission information acquired by the permission information request unit <b>110</b>, the permission information verification unit <b>112</b> transmits the file acquired by the file request unit <b>108</b> to user terminal <b>20</b>. On the other hand, if the user of the user terminal <b>20</b> that transmitted the usage request cannot view the file based on the permission information acquired by the permission information request unit <b>110</b>, the permission information verification unit <b>112</b> discards the file acquired by the file request unit <b>108</b> instead of transmitting the file to the user terminal <b>20</b>.</p><heading id="h-0015" level="1">Configuration of User Terminal of Present Embodiment</heading><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram showing the hardware configuration of the user terminal <b>20</b> of the present embodiment.</p><p id="p-0051" num="0050">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, similarly to the control server <b>10</b>, the user terminal <b>20</b> includes a CPU <b>11</b>, a ROM <b>12</b>, a RAM <b>13</b>, a storage unit <b>14</b>, an input unit <b>15</b>, a display unit <b>16</b>, and a communication interface (I/F) <b>17</b>.</p><p id="p-0052" num="0051">The input unit <b>15</b> accepts an input of a new file or an updated version of a file that is already managed in the file management system <b>300</b>.</p><p id="p-0053" num="0052">Also, the input unit <b>15</b> accepts an input of permission information that indicates whether or not each of one or more users can view the file that was input.</p><p id="p-0054" num="0053">The input unit <b>15</b> accepts an input of a combination of a document ID and a document version ID of a file that a user wishes to view.</p><p id="p-0055" num="0054">The user terminal <b>20</b> transmits, to the control server <b>10</b>, a new file or an updated file that was input.</p><p id="p-0056" num="0055">The user terminal <b>20</b> transmits, to the control server <b>10</b>, a usage request that includes a document ID and a document version ID that were input.</p><p id="p-0057" num="0056">The user terminal <b>20</b> displays a file transmitted from the control server <b>10</b> on the display unit <b>16</b>.</p><heading id="h-0016" level="1">Configuration of File Management System of Present Embodiment</heading><p id="p-0058" num="0057">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the file management system <b>300</b> includes a plurality of distributed storage nodes <b>30</b> and a distributed file sharing network <b>60</b>.</p><p id="p-0059" num="0058">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the hardware configuration of the distributed storage node <b>30</b> of the present embodiment is similar to that of the control server <b>10</b>.</p><p id="p-0060" num="0059">Files transmitted from the control server <b>10</b> are distributed via the distributed file sharing network <b>60</b> and stored in the distributed storage nodes <b>30</b> in association with a combination of a document ID and a document version ID.</p><p id="p-0061" num="0060">When a distributed storage node <b>30</b> receives a file request from the control server <b>10</b> via the distributed file sharing network <b>60</b>, if a file that corresponds to the combination of the document ID and the document version ID included in the file request is stored in that distributed storage node <b>30</b>, the distributed storage node <b>30</b> transmits that file to the control server <b>10</b>. On the other hand, if the file that corresponds to the combination of the document ID and the document version ID included in the file request is not stored in that distributed storage node <b>30</b>, the distributed storage node <b>30</b> transmits the file request to another distributed storage node <b>30</b>.</p><heading id="h-0017" level="1">Configuration of Distributed Ledger System of Present Embodiment</heading><p id="p-0062" num="0061">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the distributed ledger system <b>400</b> includes a plurality of blockchain nodes <b>40</b> and a distributed ledger network <b>70</b>.</p><p id="p-0063" num="0062">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the hardware configuration of the blockchain node <b>40</b> of the present embodiment is similar to that of the control server <b>10</b>.</p><p id="p-0064" num="0063">The blockchain nodes <b>40</b> generate blocks that are groups of transactions transmitted from the control server <b>10</b> via the distributed ledger network <b>70</b> and connect the blocks to a blockchain for storage in ledger data.</p><p id="p-0065" num="0064">Upon receiving a permission information request from the control server <b>10</b> via the distributed ledger network <b>70</b>, a distributed storage node <b>30</b> searches the ledger data for permission information that corresponds to the combination of the document ID and the document version ID included in the permission information request, and transmits the found permission information to the control server <b>10</b>.</p><heading id="h-0018" level="1">Operation of Data Sharing System of Present Embodiment</heading><p id="p-0066" num="0065">Next, the operation of the data sharing system <b>100</b> according to the present embodiment will be described.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a sequence diagram showing an example of the flow of overall processing, including processing of the control program according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>5</b></figref> shows the case where the user B can view the version oldA of the file FileA, and the version oldA of the file FileA is stored in one distributed storage node <b>30</b>. Here, the case where the user B acquires the version oldA of the file FileA via the control server <b>10</b> will be described as an example.</p><p id="p-0068" num="0067">First, in step S<b>500</b>, the user terminal <b>20</b> of the user B transmits the following usage request, which includes a document ID, a username, and a document version ID, to the control server <b>10</b>.</p><p id="p-0069" num="0068">Usage request [Document ID: FileA, Username: B, Document version ID: oldA]</p><p id="p-0070" num="0069">In step S<b>502</b>, the control server <b>10</b> transmits the following permission information request to a blockchain node <b>40</b> based on the usage request that was transmitted from the user terminal <b>20</b>.</p><p id="p-0071" num="0070">Permission information request [Document ID: FileA, Username: B, Document version ID: oldA]</p><p id="p-0072" num="0071">In step S<b>504</b>, the blockchain node <b>40</b> searches the ledger data for a transaction that includes corresponding permission information using the document ID and the document version ID as keys.</p><p id="p-0073" num="0072">In step S<b>506</b>, the blockchain node <b>40</b> searches the permission information included in the transaction that was found in step S<b>502</b> above for permission information that indicates whether or not the user of the user terminal <b>20</b> can view the transaction, using the username as a key.</p><p id="p-0074" num="0073">In step S<b>508</b>, the blockchain node <b>40</b> transmits the permission information that was found in step S<b>506</b> to the control server <b>10</b>. Here, the items in the permission information that is to be transmitted are a document ID, user viewing permission, and a document version ID, as shown below.</p><p id="p-0075" num="0074">Permission information [Document ID: FileA, User B: view, Document version ID: oldA]</p><p id="p-0076" num="0075">In step S<b>510</b>, the control server <b>10</b> verifies whether or not the user of the user terminal <b>20</b> that transmitted the usage request can view the file that corresponds to the combination of the document ID and the document version ID included in the file request. In the example of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, it is determined that the user B can view the version oldA of the file FileA.</p><p id="p-0077" num="0076">In step S<b>512</b>, the control server <b>10</b> transmits the following file request, which is based on the usage request that was transmitted from the user terminal <b>20</b>, to one distributed storage node <b>30</b>.</p><p id="p-0078" num="0077">File request [Document ID: FileA, Username: B, Document version ID: oldA]</p><p id="p-0079" num="0078">In step S<b>514</b>, the distributed storage node <b>30</b> checks whether or not the version oldA of the file FileA is stored therein based on the document ID and the document version ID included in the file request that was received from the control server <b>10</b>. In the example of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, it is confirmed that the version oldA of the file FileA is stored in the distributed storage node <b>30</b> that received the file request.</p><p id="p-0080" num="0079">In step S<b>516</b>, the distributed storage node <b>30</b> transmits the stored version oldA of the file FileA to the control server <b>10</b>.</p><p id="p-0081" num="0080">Note that if the version oldA of the file FileA is not stored in the distributed storage node <b>30</b> that received the file request, the distributed storage node <b>30</b> transmits the file request to another distributed storage node <b>30</b>.</p><p id="p-0082" num="0081">In step S<b>518</b>, the control server <b>10</b> transmits the version oldA of the file FileA that was acquired in step S<b>516</b> to the user terminal <b>20</b>. Accordingly, the version oldA of the file FileA is displayed on the display unit <b>16</b> of the user terminal <b>20</b>, and the user B views the file.</p><p id="p-0083" num="0082">Note that a configuration is possible in which if the result of the processing of steps S<b>502</b> to S<b>510</b> is that the user of the user terminal <b>20</b> cannot view the file, steps S<b>512</b> to S<b>516</b> are not executed. Also, although the case where steps S<b>512</b> to S<b>516</b> are executed after the processing of steps S<b>502</b> to S<b>510</b> has been described as an example, the present invention is not limited to this. For example, steps S<b>502</b> to S<b>510</b> may be executed after the processing of steps S<b>512</b> to S<b>516</b>. Also, the processing of steps S<b>502</b> to S<b>510</b> and steps S<b>512</b> to S<b>516</b> may be executed in parallel.</p><p id="p-0084" num="0083">Next, another example of the flow of overall processing, including processing of the control program according to the present embodiment, will be described with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>. <figref idref="DRAWINGS">FIG. <b>6</b></figref> shows the case where the user B cannot view the version newA of the file FileA, and the version newA of the file FileA is stored in one distributed storage node <b>30</b>. Here, the case where the user B requests the version newA of the file FileA via the control server <b>10</b> will be described as an example. Specifically, the following describes an example of the case where the user B has viewing permission for the file FileA at first, but then the file FileA is updated and the user B loses viewing permission for the updated file FileA. Here, the non-updated version is oldA, and the updated version is newA.</p><p id="p-0085" num="0084">First, in step S<b>600</b>, the user terminal <b>20</b> of the user B transmits the following usage request, which includes a document ID, a username, and a document version ID, to the control server <b>10</b>.</p><p id="p-0086" num="0085">Usage request [Document ID: FileA, Username: B, Document version ID: newA]</p><p id="p-0087" num="0086">In step S<b>602</b>, the control server <b>10</b> transmits the following permission information request, which is based on the usage request transmitted from the user terminal <b>20</b>, to a blockchain node <b>40</b>.</p><p id="p-0088" num="0087">Permission information request [Document ID: FileA, Username: B, Document version ID: newA]</p><p id="p-0089" num="0088">In step S<b>604</b>, the blockchain node <b>40</b> searches the ledger data for a transaction that includes corresponding permission information using the document ID and the document version ID as keys.</p><p id="p-0090" num="0089">In step S<b>606</b>, the blockchain node <b>40</b> searches the permission information included in the transaction that was found in step S<b>604</b> above for permission information that indicates whether or not the user of the user terminal <b>20</b> can view the transaction, using the username as a key.</p><p id="p-0091" num="0090">In step S<b>608</b>, the blockchain node <b>40</b> transmits the permission information searched in step S<b>606</b> to the control server <b>10</b>. Here, the items in the permission information that is to be transmitted are a document ID, user viewing prohibited, and a document version ID, as shown below.</p><p id="p-0092" num="0091">Permission information [Document ID: FileA, User B: prohibited, Document version ID: newA]</p><p id="p-0093" num="0092">In step S<b>610</b>, the control server <b>10</b> verifies whether or not the user of the user terminal <b>20</b> that transmitted the usage request can view the file that corresponds to the combination of the document ID and the document version ID included in the file request. In the example of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, it is determined that the user B cannot view the version newA of the file FileA.</p><p id="p-0094" num="0093">At this time, the control server <b>10</b> does not issue a file request for the version newA of the file FileA.</p><p id="p-0095" num="0094">As described above, according to the data sharing system according to the present embodiment, the viewing permission of files distributed and managed by a file management system can be managed separately for versions before and after an update. Also, because permission information is saved in a distributed ledger system, falsification of the permission information can be prevented.</p><p id="p-0096" num="0095">Note that the present invention is not limited to the embodiment described above, and various modifications and applications are possible without departing from the gist of the present invention.</p><p id="p-0097" num="0096">For example, the various types of processing executed due to the CPU reading and executing software (a program) in the above embodiment may be executed by various types of processors other than a CPU. Other examples of processors in this case include a PLD (Programmable Logic Device) such as an FPGA (Field-Programmable Gate Array), whose circuit configuration can be changed after manufacturing, and a dedicated electric circuit such as an ASIC (Application Specific Integrated Circuit), which is a processor having a circuit configuration designed exclusively for executing specific processing. Also, such processing may be executed by one of the aforementioned processors, or may be executed by a combination of two or more processors of the same type or different types (e.g., by a plurality of FPGAs, or by a combination of a CPU and an FPGA). Also, the hardware structure of such processors is, more specifically, an electric circuit that includes a combination of circuit elements such as semiconductor elements.</p><p id="p-0098" num="0097">Moreover, although a mode in which the control program is stored (installed) in the storage unit <b>14</b> in advance has been described in the above embodiments, the present invention is not limited to this. The program may be provided in a mode of being stored on a non-transitory storage medium such as a CD-ROM (Compact Disk Read Only Memory), a DVD-ROM (Digital Versatile Disk Read Only Memory), or a USB (Universal Serial Bus) memory. Also, the program may be downloaded from an external device via a network.</p><p id="p-0099" num="0098">Furthermore, the control server may have the functionality of a distributed storage node or a blockchain node.</p><p id="p-0100" num="0099">Also, although the case where the permission information indicates whether or not a user has viewing permission has been described as an example, the permission information may indicate not only whether or not the user has viewing permission, but also whether or not the user has writing permission.</p><p id="p-0101" num="0100">The following additional notes are further disclosed in connection with the above embodiments.</p><p id="p-0102" num="0101">Additional Note 1</p><p id="p-0103" num="0102">A control server in a data sharing system that includes the control server, a file management system, and a distributed ledger system having a distributed ledger that includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier that identifies a file managed in the file management system and a version identifier that identifies a version of the file, the control server comprising:</p><p id="p-0104" num="0103">a memory; and</p><p id="p-0105" num="0104">at least one processor that is connected to the memory,</p><p id="p-0106" num="0105">wherein the processor<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0106">receives a usage request that includes a file identifier and a version identifier from a user terminal, transmitting a permission information request that is based on the usage request to the distributed ledger system, and acquires, from the distributed ledger, permission information that corresponds to a combination of the file identifier and the version identifier;</li>        <li id="ul0002-0002" num="0107">transmits a file request that is based on the usage request to the file management system, and acquires, from the file management system, the file that corresponds to the combination of the file identifier and the version identifier; and</li>        <li id="ul0002-0003" num="0108">transmits the file to the user terminal if a user of the user terminal has viewing permission based on the permission information.</li>    </ul>    </li></ul></p><p id="p-0107" num="0109">Additional Note 2</p><p id="p-0108" num="0110">A non-transitory storage medium storing a program that can be executed by a computer so as to execute control processing in a data sharing system that includes a control server, a file management system, and a distributed ledger system having a distributed ledger that includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier that identifies a file managed in the file management system and a version identifier that identifies a version of the file,</p><p id="p-0109" num="0111">the control processing<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0112">receiving a usage request that includes a file identifier and a version identifier from a user terminal, transmitting a permission information request that is based on the usage request to the distributed ledger system, and acquiring, from the distributed ledger, permission information that corresponds to a combination of the file identifier and the version identifier;</li>        <li id="ul0004-0002" num="0113">transmitting a file request that is based on the usage request to the file management system, and acquiring, from the file management system, the file that corresponds to the combination of the file identifier and the version identifier; and</li>        <li id="ul0004-0003" num="0114">transmitting the file to the user terminal if a user of the user terminal has viewing permission based on the permission information.</li>    </ul>    </li></ul></p><heading id="h-0019" level="1">REFERENCE SIGNS LIST</heading><p id="p-0110" num="0000"><ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0115"><b>10</b> Control server</li>    <li id="ul0005-0002" num="0116"><b>20</b> User terminal</li>    <li id="ul0005-0003" num="0117"><b>30</b> Distributed storage node</li>    <li id="ul0005-0004" num="0118"><b>40</b> Blockchain node</li>    <li id="ul0005-0005" num="0119"><b>50</b> Network</li>    <li id="ul0005-0006" num="0120"><b>60</b> Distributed file sharing network</li>    <li id="ul0005-0007" num="0121"><b>70</b> Distributed ledger network</li>    <li id="ul0005-0008" num="0122"><b>100</b> Data sharing system</li>    <li id="ul0005-0009" num="0123"><b>102</b> File registration unit</li>    <li id="ul0005-0010" num="0124"><b>104</b> Permission information registration unit</li>    <li id="ul0005-0011" num="0125"><b>106</b> File request acquisition unit</li>    <li id="ul0005-0012" num="0126"><b>108</b> File request unit</li>    <li id="ul0005-0013" num="0127"><b>110</b> Permission information request unit</li>    <li id="ul0005-0014" num="0128"><b>112</b> Permission information verification unit</li>    <li id="ul0005-0015" num="0129"><b>300</b> File management system</li>    <li id="ul0005-0016" num="0130"><b>400</b> Distributed ledger system</li></ul></p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A control server in a data sharing system that includes the control server, a file management system, and a distributed ledger system having a distributed ledger that includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier that identifies a file managed in the file management system and a version identifier that identifies a version of the file, the control server comprising:<claim-text>a memory; and</claim-text><claim-text>at least one processor coupled to the memory,</claim-text><claim-text>the at least one processor being configured to:<claim-text>in a case of receiving a usage request that includes a file identifier and a version identifier from a user terminal, transmit a permission information request that is based on the usage request to the distributed ledger system, and acquire, from the distributed ledger, permission information that corresponds to a combination of the file identifier and the version identifier;</claim-text><claim-text>transmit a file request that is based on the usage request to the file management system, and acquire, from the file management system, a file that corresponds to the combination of the file identifier and the version identifier; and</claim-text><claim-text>transmit the acquired file to the user terminal if a user of the user terminal has viewing permission based on the acquired permission information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The control server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein, if the user of the user terminal has viewing permission based on the acquired permission information, the at least one processor is configured to transmit a file request that is based on the usage request to the file management system and acquires, from the file management system, the file that corresponds to the combination of the file identifier and the version identifier.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The control server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the at least one processor is further configured to:</claim-text><claim-text>register a new file in the file management system and update a file managed in the file management system, as well as register a combination of a file identifier and a version identifier of the new file or the updated file; and</claim-text><claim-text>if the at least one processor registers a new file in the file management system or updates a file managed in the file management system, transmit, to the distributed ledger system, permission information regarding the combination of the file identifier and the version identifier of the new file or the updated file.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. A data sharing system comprising:<claim-text>a distributed ledger system having a distributed ledger;</claim-text><claim-text>a file management system; and</claim-text><claim-text>a control server,</claim-text><claim-text>wherein, if the control server receives, from a user terminal, a usage request that includes a file identifier identifying a file managed in the file management system and a version identifier identifying a version of the file, the control server transmits a permission information request that is based on the usage request to the distributed ledger system, and transmits a file request that is based on the usage request to the file management system,</claim-text><claim-text>upon receiving the file request, the file management system acquires a file that corresponds to a combination of the file identifier and the version identifier, and transmits the file to the control server,</claim-text><claim-text>the distributed ledger includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier and a version identifier,</claim-text><claim-text>upon receiving the permission information request, the distributed ledger system acquires permission information that corresponds to the combination of the file identifier and the version identifier from the distributed ledger, and transmits the acquired permission information to the control server, and</claim-text><claim-text>the control server transmits the file to the user terminal if a user of the user terminal has viewing permission based on the acquired permission information.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The data sharing system according to <claim-ref idref="CLM-00004">claim 4</claim-ref>,<claim-text>wherein in a case of registering a new file in the file management system or updating a file managed in the file management system, the control server transmits, to the distributed ledger system, permission information regarding a combination of the file identifier and the version identifier of the new file or the updated file.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The data sharing system according to <claim-ref idref="CLM-00005">claim 5</claim-ref>,<claim-text>wherein the file management system manages files that are distributed among a plurality of distributed storage nodes.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A non-transitory storage medium storing a control program executable by a computer, which is a control server in a data sharing system that includes the control server, a file management system, and a distributed ledger system having a distributed ledger that includes permission information indicating whether or not each of one or more users has viewing permission for each combination of a file identifier that identifies a file managed in the file management system and a version identifier that identifies a version of the file, so as to perform control processing, the control processing comprising:<claim-text>receiving a usage request that includes a file identifier and a version identifier from a user terminal, transmitting a permission information request that is based on the usage request to the distributed ledger system, and acquiring, from the distributed ledger, permission information that corresponds to a combination of the file identifier and the version identifier;</claim-text><claim-text>transmitting a file request that is based on the usage request to the file management system, and acquiring, from the file management system, a file that corresponds to the combination of the file identifier and the version identifier; and</claim-text><claim-text>transmitting the acquired file to the user terminal if a user of the user terminal has viewing permission based on the acquired permission information.</claim-text></claim-text></claim></claims></us-patent-application>