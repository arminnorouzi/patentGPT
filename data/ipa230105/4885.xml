<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004886A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004886</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17854724</doc-number><date>20220630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>0633</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>06316</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR PERFORMING EXPERIMENTS AT REMOTE LABORATORIES</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63218265</doc-number><date>20210702</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63218267</doc-number><date>20210702</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63218272</doc-number><date>20210702</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>63218274</doc-number><date>20210702</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>STRATEOS, INC.</orgname><address><city>Menlo Park</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Biggers</last-name><first-name>Vanessa</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Phanimukla</last-name><first-name>Sayagoud Ramu</first-name><address><city>Peasanton</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Eswarakrishnan</last-name><first-name>Venkat</first-name><address><city>Fremont</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Gupta</last-name><first-name>Alok</first-name><address><city>San Ramon</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Kumar</last-name><first-name>Abhishek</first-name><address><city>Dublin</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Lopez</last-name><first-name>Eriberto</first-name><address><city>Costa Mesa</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Miles</last-name><first-name>Benjamin Nicholas</first-name><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>Nowak</last-name><first-name>Joshua David</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="08" designation="us-only"><addressbook><last-name>Patel</last-name><first-name>Rickin Pankaj</first-name><address><city>Elk Grove</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">System and method for performing experiments. For example, the method includes receiving indications of experimental workflows, generating workflow configuration requirements for each experimental workflow, configuring each experimental workflow based upon parameters associated with the workflow configuration requirements, receiving experimental requests for the experimental workflows, determining a schedule for executing the experimental requests, assigning each experimental request one or more remote laboratories for execution based upon the schedule, generating a set of instructions for performing experiments related to each experimental request, determining a plurality of sequence schedules for completing the set of instructions, receiving an indication of a sequence schedule selected from the plurality of sequence schedules, and transmitting commands to execute the set of instructions according to the selected sequence schedule.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="215.14mm" wi="139.11mm" file="US20230004886A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="228.43mm" wi="141.14mm" file="US20230004886A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="96.27mm" wi="147.07mm" file="US20230004886A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="235.12mm" wi="151.64mm" orientation="landscape" file="US20230004886A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="226.82mm" wi="144.61mm" orientation="landscape" file="US20230004886A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="157.56mm" wi="145.71mm" file="US20230004886A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="212.94mm" wi="143.26mm" orientation="landscape" file="US20230004886A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="103.97mm" wi="143.43mm" file="US20230004886A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="203.12mm" wi="138.60mm" orientation="landscape" file="US20230004886A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="104.56mm" wi="145.46mm" file="US20230004886A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="167.13mm" wi="132.67mm" orientation="landscape" file="US20230004886A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority to U.S. Provisional Patent Application No. 63/218,265, filed Jul. 2, 2021, U.S. Provisional Patent Application No. 63/218,267, filed Jul. 2, 2021, U.S. Provisional Patent Application No. 63/218,272, filed Jul. 2, 2021, and U.S. Provisional Patent Application No. 63/218,274, filed Jul. 2, 2021, all of which are incorporated by reference herein for all purposes.</p><p id="p-0003" num="0002">The following four applications, including this one, are being filed concurrently and the other applications are hereby incorporated by reference in their entirety for all purposes:</p><p id="p-0004" num="0003">1. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Processing Experimental Workflows at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000014); and</p><p id="p-0005" num="0004">2. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Managing Experimental Requests at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000015).</p><p id="p-0006" num="0005">3. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Processing Experimental Requests at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000016).</p><p id="p-0007" num="0006">4. U.S. patent application Ser. No. ______, titled &#x201c;Systems and Methods for Performing Experiments at Remote Laboratories&#x201d; (Attorney Docket Number 520295.000017).</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE DISCLOSURE</heading><p id="p-0008" num="0007">Some embodiments of the present disclosure are directed to performing experiments. More particularly, certain embodiments of the present disclosure provide systems and methods for receiving experimental requests and generating instructions for performing experiments related to the experimental request. Merely by way of example, the present disclosure has been applied to transmitting commands to execute the instructions at remote laboratories. But it would be recognized that the present disclosure has much broader range of applicability.</p><heading id="h-0003" level="1">BACKGROUND OF THE DISCLOSURE</heading><p id="p-0009" num="0008">Experiments performed at designated laboratories are limited by existing infrastructure. Remote laboratories, on the other hand, provide the opportunity to carry out different experiments with different scope at the same time. Accordingly, there exists a need to develop techniques that can enable users to scale to remote laboratory infrastructures when needing capability and/or capacity.</p><heading id="h-0004" level="1">BRIEF SUMMARY OF THE DISCLOSURE</heading><p id="p-0010" num="0009">Some embodiments of the present disclosure are directed to performing experiments. More particularly, certain embodiments of the present disclosure provide systems and methods for receiving experimental requests and generating instructions for performing experiments related to the experimental request. Merely by way of example, the present disclosure has been applied to transmitting commands to execute the instructions at remote laboratories. But it would be recognized that the present disclosure has much broader range of applicability.</p><p id="p-0011" num="0010">According to certain embodiments, a method for performing one or more experiments includes receiving one or more indications of one or more experimental workflows and generating workflow configuration requirements for each experimental workflow of the one or more experimental workflows. Also, the method includes configuring each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements. Further, the method includes receiving one or more experimental requests for the one or more experimental workflows and determining a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests. Moreover, the method includes assigning each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule. Also, the method includes generating a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories. Further, the method includes determining a plurality of sequence schedules for completing the set of instructions and receiving an indication of a sequence schedule selected from the plurality of sequence schedules. In addition, the method includes transmitting one or more commands to execute the set of instructions according to the selected sequence schedule.</p><p id="p-0012" num="0011">According to some embodiments, a system for performing one or more experiments includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to receive one or more indications of one or more experimental workflows and generate workflow configuration requirements for each experimental workflow of the one or more experimental workflows. Also, the instructions, when executed by the one or more processors, cause the system to configure each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements. Further, the instructions, when executed by the one or more processors, cause the system to receive one or more experimental requests for the one or more experimental workflows and determine a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests. Moreover, the instructions, when executed by the one or more processors, cause the system to assign each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule. Also, the instructions, when executed by the one or more processors, cause the system to generate a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories. Further, the instructions, when executed by the one or more processors, cause the system to determine a plurality of sequence schedules for completing the set of instructions and receive an indication of a sequence schedule selected from the plurality of sequence schedules. In addition, the instructions, when executed by the one or more processors, cause the system to transmit one or more commands to execute the set of instructions according to the selected sequence schedule.</p><p id="p-0013" num="0012">According to certain embodiments, a non-transitory computer-readable medium stores instructions for performing one or more experiments. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to receive one or more indications of one or more experimental workflows and generate workflow configuration requirements for each experimental workflow of the one or more experimental workflows. Also, the non-transitory computer-readable medium includes instructions to configure each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements. Further, the non-transitory computer-readable medium includes instructions to receive one or more experimental requests for the one or more experimental workflows and determine a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests. Moreover, the non-transitory computer-readable medium includes instructions to assign each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule. Also, the non-transitory computer-readable medium includes instructions to generate a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories. Further, the non-transitory computer-readable medium includes instructions to determine a plurality of sequence schedules for completing the set of instructions and receive an indication of a sequence schedule selected from the plurality of sequence schedules. In addition, the non-transitory computer-readable medium includes instructions to transmit one or more commands to execute the set of instructions according to the selected sequence schedule.</p><p id="p-0014" num="0013">Depending upon the embodiment, one or more benefits may be achieved. These benefits and various additional objects, features and advantages of the present disclosure can be fully appreciated with reference to the detailed description and accompanying drawings that follow.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a simplified method for performing experiments according to certain embodiments of the present disclosure.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a simplified system for performing experiments according to certain embodiments of the present disclosure.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> show simplified diagrams illustrating various modules for performing experiments according to certain embodiments of the present disclosure.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a simplified method for processing experimental workflows according to certain embodiments of the present disclosure.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows simplified diagrams illustrating various modules for processing experimental workflows according to certain embodiments of the present disclosure.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a simplified method for managing experimental requests according to certain embodiments of the present disclosure.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows simplified diagrams illustrating various modules for managing experimental requests according to certain embodiments of the present disclosure.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a simplified method for processing experimental requests according to certain embodiments of the present disclosure.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows simplified diagrams illustrating various modules for processing experimental requests according to certain embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE DISCLOSURE</heading><p id="p-0024" num="0023">Some embodiments of the present disclosure are directed to performing experiments. More particularly, certain embodiments of the present disclosure provide systems and methods for receiving experimental requests and generating instructions for performing experiments related to the experimental request. Merely by way of example, the present disclosure has been applied to transmitting commands to execute the instructions at remote laboratories. But it would be recognized that the present disclosure has much broader range of applicability.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a simplified method for performing experiments according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The method <b>100</b> includes process <b>110</b> for receiving experimental workflows, process <b>115</b> for generating workflow configuration requirements, process <b>120</b> for configuring experimental workflows, process <b>125</b> for receiving experimental requests, process <b>130</b> for determining a schedule for the experimental requests, process <b>135</b> for assigning the experimental requests, process <b>140</b> for generating instructions, process <b>145</b> for determining sequence schedules, process <b>150</b> for receiving a selected sequence schedule, and process <b>155</b> for transmitting commands to execute the instructions. Although the above has been shown using a selected group of processes for the method, there can be many alternatives, modifications, and variations. For example, some of the processes may be expanded and/or combined. Other processes may be inserted to those noted above. Depending upon the embodiment, the sequence of processes may be interchanged with others replaced. For example, some or all processes of the method are performed by a computing device or a processor directed by instructions stored in memory. As an example, some or all processes of the method are performed according to instructions stored in a non-transitory computer-readable medium.</p><p id="p-0026" num="0025">At the process <b>110</b>, indications of one or more experimental workflows are received according to certain embodiments. In some embodiments, a list of available experimental workflows is published for a user to select. In certain embodiments, the published list is generated based upon user data (e.g., user's access level, user group assignment, etc.) and/or experimental application data (e.g., experiment purpose, intended use, error tolerance, etc.).</p><p id="p-0027" num="0026">At the process <b>115</b>, workflow configuration requirements for each experimental workflow of the one or more experimental workflows are generated according to certain embodiments. In various embodiments, the workflow configuration requirements include input type entities, data generated, workflow version, and/or published date.</p><p id="p-0028" num="0027">At the process <b>120</b>, each experimental workflow of the one or more experimental workflows is configured based at least in part upon one or more parameters associated with the workflow configuration requirements according to certain embodiments. In some embodiments, a user interface is provided to enable input of the one or more parameters associated with the workflow configuration requirements. In various embodiments, the user interface is a configurable interface that allows the user to enter the one or more parameters to modify or customize each experimental workflow. For example, the one or more parameters include entities such as volume, comma separated value (CSV) configurations, and/or plate maps. In some embodiments, the user interface provides one or more fields which allow the user to select components from various sources such as laboratory inventory, commercial vendors (e.g., chemical compounds, synthesized materials, reagents, assay kits, etc.), and/or datasets.</p><p id="p-0029" num="0028">In certain embodiments, a validation of the one or more parameters is performed. In some embodiments, performing the validation entails validating the one or more parameters based upon device constraints, experimental constraints, instruction dependencies, and/or experimental design boundaries. In certain embodiments, results from the validation are generated to show detailed steps of each experimental workflow (e.g., cost to execute, estimated time to complete, summary of components, summary of consumables, etc.). In some embodiments, the results may indicate which ones of the one or more parameters were valid and which ones were invalid.</p><p id="p-0030" num="0029">In some embodiments, each configured experimental workflow is transformed into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. In various embodiments, each configured experimental workflow is executed by the one or more devices in accordance with the one or more machine executable codes. For example, the one or more machine executable codes are standardized and reproducible machine executable codes.</p><p id="p-0031" num="0030">In certain embodiments, data (e.g., raw data, labeled data, analyzed data, etc.) generated in or near real-time from the execution of each experimental workflow are collected and stored. The data can be accessed via the user interface and/or through any suitable format (e.g., CSV, JavaScript object notation (JSON), etc.).</p><p id="p-0032" num="0031">In some embodiments, the user interface enables the user to submit at least one configured experimental workflow to a queue for execution. In certain embodiments, the user interface enables the user to request dates for executing the at least one configured experimental workflow. In some embodiments, the user interface enables the user to assign a funding source for the at least one configured experimental workflow.</p><p id="p-0033" num="0032">In certain embodiments, the user interface enables the user to manage the at least one experimental workflow by allowing access to modify user roles, add users, and/or delete users. In some embodiments, the user interface enables the user to manage the at least one experimental workflow by allowing the selection or addition of a remote laboratory for executing the at least one experimental workflow. In certain embodiments, the user interface enables the user to manage the at least one experimental workflow by allowing access to internal/external users, and/or other cloud-based laboratories.</p><p id="p-0034" num="0033">In some embodiments, the user interface updates the status of the at least one experimental workflow in or near real-time. In certain embodiments, the user interface allows the user to view all information associated with the at least one experimental workflow (e.g., status, entered parameters, generated data, data provenance, etc.). In certain embodiments, user inputs received at the user interface and any underlying scripts are used to output human and machine-readable instructions that specify the execution of the at least one experimental workflow.</p><p id="p-0035" num="0034">At the process <b>125</b>, one or more experimental requests for the one or more experimental workflows are received according to certain embodiments. In some embodiments, one or more attributes associated with the one or more experimental requests are received. For example, the one or more attributes include a target delivery date, a predicted execution duration, human resources needed, robotic resources needed, and/or financial resources needed for each experimental request. In certain embodiments, the one or more attributes are customized per experimental request and/or per customer. In some embodiments, the one or more experimental requests are published along with the status of each experimental request and the one or more attributes associated with each experimental request. In certain embodiments, the one or more experimental requests are published in a prioritized order. In some embodiments, each received experimental request is created using a template.</p><p id="p-0036" num="0035">At the process <b>130</b>, a schedule for executing the one or more experimental requests based at least in part upon the one or more attributes associated with the one or more experimental requests is determined according to certain embodiments. In some embodiments, the schedule includes an order to execute each experimental request. In certain embodiments, the schedule includes a desired time slot to execute each experimental request.</p><p id="p-0037" num="0036">At the process <b>135</b>, each experimental request of the one or more experimental requests is assigned to the one or more remote laboratories for execution based at least in part upon the schedule according to certain embodiments. In some embodiments, each experimental request is assigned to the one or more remote laboratories based upon one or more features of the one or more remote laboratories. For example, the one or more features of the one or more remote laboratories include capabilities of the one or more remote laboratories, capacities of the one or more remote laboratories, and/or current workloads at the one or more remote laboratories. As an example, the one or more experimental requests are routed to the one or more remote laboratories based upon the laboratory capabilities, capacities, and/or loads.</p><p id="p-0038" num="0037">In certain embodiments, the user interface is provided to manage (e.g., approve, update, modify, etc.) at least one experimental request. For example, the user interface enables the user to receive information associated with resources needed (e.g., human resources, robotic resources, financial resources, etc.) for at least one experimental request. As an example, the user interface enables the user to receive one or more modifications to the at least one experimental request. For example, the user interface enables the user to place the at least one experiment request in an execution queue. As an example, the user interface enables to user to receive one or more notifications (e.g., experimental request initiated, experimental request completed, etc.).</p><p id="p-0039" num="0038">At the process <b>140</b>, a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories are generated according to certain embodiments.</p><p id="p-0040" num="0039">At the process <b>145</b>, a plurality of sequence schedules for completing the set of instructions are determined according to certain embodiments. In some embodiments, the plurality of sequence schedules are determined based upon various constraints, such as one or more available devices, one or more available materials, one or more estimated durations of executing the set of instructions, one or more optimizations (e.g., minimum execution time, maximum throughput of instructions, maximum device usage, etc.), and one or more experimental constraints (e.g., biological design constraints). In certain embodiments, an optimal sequence schedule is determined based on the various constraints.</p><p id="p-0041" num="0040">At the process <b>150</b>, an indication of a sequence schedule selected from the plurality of sequence schedules is received according to certain embodiments. In some embodiments, a desired sequence schedule is selected by the user.</p><p id="p-0042" num="0041">At the process <b>155</b>, one or more commands to execute the set of instructions according to the selected sequence schedule are transmitted according to certain embodiments. In some embodiments, the one or more commands are transmitted to one or more human operators and/or one or more robotic operators to execute the set of instructions according to the selected sequence schedule.</p><p id="p-0043" num="0042">In certain embodiments, information associated with executing the set of instructions according to the selected sequence schedule are collected and transmitted in response to each experimental request of the one or more experimental requests. In various embodiments, the collected information includes environmental variables, device statuses, device feedbacks, and/or human feedbacks.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a simplified system for performing experiments according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>200</b> includes a client device <b>202</b>, a server <b>204</b> and a remote laboratory <b>206</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0045" num="0044">In various embodiments, the client device <b>202</b>, the server <b>204</b>, and the remote laboratory <b>206</b> are communicatively coupled to one another via a suitable network <b>208</b> (e.g., Internet, mobile communication network, virtual private network, local area network, etc.). In some embodiments, the server <b>204</b> is part of or located at the remote laboratory <b>206</b>. In certain embodiments, multiple remote laboratories <b>206</b> exist in the system <b>200</b>.</p><p id="p-0046" num="0045">In certain embodiments, a user (e.g., a scientist, a researcher, etc.) may use the client device <b>202</b> to communicate with the server <b>204</b> for performing experiments at the remote laboratory <b>206</b>. For example, the server <b>204</b> executes one or more operations to implement the method <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In various embodiments, the server <b>204</b> may execute one or more operations to implement additional methods, such as the method <b>500</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, and/or the method <b>900</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, as described further below. In some embodiments, the server <b>204</b> includes a processor <b>210</b> and a memory <b>212</b>. For example, the processor <b>210</b> is configured to execute instructions and/or one or more modules <b>214</b> to perform the various operations associated with the method <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the method <b>500</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, and/or the method <b>900</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref>. As an example, the instructions and the one or more modules <b>214</b> are stored in the memory <b>212</b>.</p><p id="p-0047" num="0046">In some embodiments, the remote laboratory <b>206</b> employs one or more devices <b>216</b> to execute the experimental workflow. For example, the one or more devices <b>216</b> may include acoustic liquid handlers (e.g., Beckman Echo 650/525, EDC Biosystems ATS), polymerase chain reaction (PCR) machines (e.g., Bio-Rad CFX96, Bio-Rad CFX384, Thermo Fisher 7500 RT), centrifuges (e.g., Bionex HiG 4), reagent dispensers (e.g., Thermo Scientific Multidrop, Formulatrix Tempest), magnetic purification processors (e.g., Thermo Scientific KingFisher Flex Magnetic Particle Processor Magnetic Plate Separation), liquid handling devices (e.g., Agilent Bravo 96w/384w, Tecan ADP, Hamilton Star), flow cytometers (e.g., Attune NxT Acoustic Focusing Cytometer), live cell formats (e.g., cell imaging), Next-generation sequencing (NGS) sequencers (e.g., Pacific Biosciences RS II sequencer, Illumina HiSeq 4000 sequencer), analytical chemistry devices (e.g., Agilent LC/MS Infinity II), and/or synthetic chemistry robotics. In various embodiments, the one or more devices <b>216</b> can be combined in any number of ways. In some embodiments, a mix of human and/or robotic laboratory services are provided to manage and process experimental workflows at the remote laboratory <b>206</b>.</p><p id="p-0048" num="0047">In certain embodiments, the system <b>200</b> is employed for various scientific applications and/or research areas (e.g., drug discovery, cancer research, protein engineering, synthetic biology, high throughput screening, bio-chemical assays, medicinal chemistry, personalized medicine, and/or closed-loop machine learning applications).</p><p id="p-0049" num="0048">In various embodiments, any variety of machine learning approaches may be performed on data generated in the system <b>200</b> to further inform and guide next steps in experimentation, improve performance, create new experiments, and/or analyze data across previously disparate scientific applications.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> show simplified diagrams of various modules for performing experiments according to certain embodiments of the present disclosure. The figures are merely examples, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>300</b> includes a protocol browser module <b>304</b>, an experimental configuration module <b>306</b>, an inventory management module <b>308</b>, a protocol validation module <b>310</b>, an experimental workflow module <b>312</b>, an experimental workflow status module <b>314</b>, a laboratory management module <b>318</b>, an experimental request management module <b>320</b>, an automation scheduling module <b>322</b>, an experiment execution module <b>324</b>, and an asset management module <b>326</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0051" num="0050">In various embodiments, the modules <b>304</b>-<b>326</b> are web-based modules. For example, the modules <b>304</b>-<b>326</b> are accessible via the Internet. In some embodiments, the modules <b>304</b>-<b>326</b> are part of the one or more modules <b>214</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0052" num="0051">In certain embodiments, the protocol browser module <b>304</b> includes functionalities that enable a user <b>302</b> (e.g., a scientist) to view information regarding experimental workflows. For example, the user <b>302</b> can view available experimental workflows, version controlled experimental workflows, and/or linked execution history of experimental workflows. As an example, the user <b>302</b> can select an experimental workflow to execute.</p><p id="p-0053" num="0052">In some embodiments, the experimental configuration module <b>306</b> includes functionalities that enable the user <b>302</b> to manage experimental workflows. For example, the user <b>302</b> can view and manage existing experimental workflows as well as request run submissions for new experimental workflows. As an example, the user <b>302</b> can configure the experimental workflow using customizable parameters.</p><p id="p-0054" num="0053">In certain embodiments, the inventory management module <b>308</b> includes functionalities that enable the user <b>302</b> to perform multi-site management, material management, and/or sample tracking and provenance. For example, the user <b>302</b> can virtually select samples (e.g., proprietary/non-proprietary reagents, consumables, vendor supplied samples, biological samples, compounds, custom defined entities, etc.) from the inventory management module <b>308</b>.</p><p id="p-0055" num="0054">In some embodiments, the protocol validation module <b>310</b> includes functionalities that enable the user <b>302</b> to perform validation of experimental workflows. For example, the user <b>302</b> can validate protocol design parameters and/or other parameters used to configure an experimental workflow. As an example, the user <b>302</b> can submit configured experimental workflows with selected parameters and samples for validation.</p><p id="p-0056" num="0055">In certain embodiments, the experimental workflow module <b>312</b> includes functionalities that allow the user <b>302</b> to monitor the execution of instructions for experimental workflows. In some embodiments, the experimental workflow module <b>312</b> includes functionalities that allow the user <b>302</b> to submit an experimental workflow to a queue for execution.</p><p id="p-0057" num="0056">In some embodiments, the experimental workflow status module <b>314</b> includes functionalities that allow the user <b>302</b> to monitor the execution status of experimental workflows. For example, the user <b>302</b> can receive notifications/alerts on status changes (e.g., once workflow has started, data generated from the workflow, workflow completed, etc.). In certain embodiments, the experimental workflow status module <b>314</b> include functionalities that allow the user <b>302</b> to view and/or download generated data/results <b>315</b> (e.g., diagnostic data, execution data, and/or other suitable data generated in or near real-time).</p><p id="p-0058" num="0057">In some embodiments, the laboratory management module <b>318</b> includes functionalities to that allow a user <b>316</b> (e.g., a laboratory administrator) to manage access to the system <b>300</b> including granting access to users and/or user groups. In certain embodiments, the user <b>316</b> can use the laboratory management module <b>318</b> to manage user access policies, user roles, experimental workflows, and/or resources. In some embodiments, the laboratory management module <b>318</b> allows the user <b>316</b> to add protocols and/or customize pricing models.</p><p id="p-0059" num="0058">In certain embodiments, the experimental request management module <b>320</b> includes functionalities that enable the user <b>316</b> to manage and/or schedule experimental requests. For example, the user <b>316</b> can set schedules (e.g., set a time of execution) and/or overwrite pre-determined schedules. As an example, the user <b>316</b> can view, approve/reject, and/or assign an experimental request for execution. In various embodiments, the user <b>316</b> uses feedback from the inventory management module <b>308</b> (e.g., available samples, available reagents, pending orders, low inventory, etc.) to assign human (e.g., laboratory personnel) and/or robotic resources. In some examples, laboratory personnel can use the experimental request management module <b>320</b> to submit experiments for execution and/or schedule experiments for execution with the automation scheduling module <b>322</b>.</p><p id="p-0060" num="0059">In some embodiments, the automation scheduling module <b>322</b> includes functionalities that provide device control, task management, and/or task execution. For example, the automation scheduling module <b>322</b> includes an experimental scheduler that plans and organizes various experimental tasks.</p><p id="p-0061" num="0060">In certain embodiments, the experiment execution module <b>324</b> includes functionalities to provide detailed experimental steps. For example, the experiment execution module <b>324</b> provides detailed steps for execution by human and/or robotic operators. As an example, the experiment execution module <b>324</b> coordinates experimental tasks that are executable by various human and/or robotic resources. For example, the experiment execution module <b>324</b> returns data, results, metadata, and/or logs captured during experiments.</p><p id="p-0062" num="0061">In some embodiments, the asset management module <b>326</b> includes functionalities to control and execute commands on one or more devices and/or create a set of configurable properties (e.g., device configuration) for the one or more devices.</p><p id="p-0063" num="0062">In certain embodiments, the asset management module <b>326</b> manages device infrastructure through a suitable interface (e.g., user interface, application programming interface (API), etc.). For example, the asset management module <b>326</b> commissions or provisions one or more devices under an edge node or cloud infrastructure. As an example, the asset management module <b>326</b> manages the deployment of a device controller for every device in the edge node or cloud infrastructure. For example, the asset management module <b>326</b> commands one or more devices to start, stop, restart, etc.</p><p id="p-0064" num="0063">In some embodiments, the asset management module <b>326</b> manages the configurations, settings, and/or statuses of devices. In certain example, laboratory personnel can manage devices (e.g., bring devices online, check device health, etc.) as needed by using the asset management module <b>326</b>.</p><p id="p-0065" num="0064">In certain embodiments, a programmable (software) agent can replace the user <b>302</b> in operating the system <b>300</b>. For example, the programmable agent can use an API to select, configure, submit and/or fetch data. As an example, the programmable agent can receive and process notifications of experiment status change, webhooks, and/or data fetching. In some examples, the programmable agent can use the API to fetch samples available in the inventory management module <b>308</b>. In certain examples, the programmable agent can use the API to submit parameters to the experimental configuration module <b>306</b>. In some examples, the programmable agent can use the API to monitor execution status in the experimental workflow status module <b>314</b>.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a simplified method for processing experimental workflows according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The method <b>500</b> includes process <b>510</b> for receiving an experimental workflow, process <b>520</b> for generating experimental workflow requirements, process <b>530</b> for presenting a user interface, process <b>540</b> for validating parameters, process <b>550</b> for configuring the experimental workflow, and process <b>560</b> for executing the experimental workflow. Although the above has been shown using a selected group of processes for the method, there can be many alternatives, modifications, and variations. For example, some of the processes may be expanded and/or combined. Other processes may be inserted to those noted above. Depending upon the embodiment, the sequence of processes may be interchanged with others replaced. For example, some or all processes of the method are performed by a computing device or a processor directed by instructions stored in memory. As an example, some or all processes of the method are performed according to instructions stored in a non-transitory computer-readable medium.</p><p id="p-0067" num="0066">At the process <b>510</b>, an indication of the experimental workflow selected by a user is received according to certain embodiments. In some embodiments, a list of available experimental workflows is published for the user to select. In certain embodiments, the published list is generated based upon user data (e.g., user's access level, user group assignment, etc.) and/or experimental application data (e.g., experiment purpose, intended use, error tolerance, etc.).</p><p id="p-0068" num="0067">At the process <b>520</b>, workflow configuration requirements for the experimental workflow are generated according to certain embodiments. In some embodiments, the workflow configuration requirements include input type entities, data generated, workflow version, and/or published date.</p><p id="p-0069" num="0068">At the process <b>530</b>, the user interface is presented to enable input of one or more parameters to configure the experimental workflow according to certain embodiments. In various embodiments, the user interface is a configurable interface that allows the user to enter the one or more parameters to modify or customize the experimental workflow. For example, the one or more parameters include entities such as volume, comma separated value (CSV) configurations, and/or plate maps. In some embodiments, the user interface provides one or more fields which allow the user to select components from various sources such as laboratory inventory, commercial vendors (e.g., chemical compounds, synthesized materials, reagents, assay kits, etc.), and/or datasets.</p><p id="p-0070" num="0069">At the process <b>540</b>, a validation of the one or more parameters to configure the experimental workflow is performed according to certain embodiments. In some embodiments, performing the validation entails validating the one or more parameters based upon device constraints, experimental constraints, instruction dependencies, and/or experimental design boundaries. In certain embodiments, results from the validation are generated to show detailed steps of the experimental workflow (e.g., cost to execute, estimated time to complete, summary of components, summary of consumables, etc.). In some embodiments, the results may indicate which ones of the one or more parameters were valid and which ones were invalid.</p><p id="p-0071" num="0070">At the process <b>550</b>, the experimental workflow is configured based upon the validated one or more parameters according to certain embodiments. At the process <b>560</b>, the configured experimental workflow is transformed into one or more machine executable codes for execution by one or more devices at one or more remote laboratories according to certain embodiments. In various embodiments, the experimental workflow is executed by the one or more devices in accordance with the one or more machine executable codes. For example, the one or more machine executable codes are standardized and reproducible machine executable codes.</p><p id="p-0072" num="0071">In some embodiments, data (e.g., raw data, labeled data, analyzed data, etc.) generated in or near real-time from the execution of the experimental workflow are collected and stored. The data can be accessed via the user interface and/or through any suitable format (e.g., CSV, JavaScript object notation (JSON), etc.).</p><p id="p-0073" num="0072">In certain embodiments, the user interface enables the user to submit the configured experimental workflow to a queue for execution. In some embodiments, the user interface enables the user to request dates for executing the configured experimental workflow. In certain embodiments, the user interface enables the user to assign a funding source for the configured experimental workflow.</p><p id="p-0074" num="0073">In certain embodiments, the user interface enables the user to manage the experimental workflow by allowing access to experimental intent packages. For example, the user interface publishes the experimental intent packages to user groups. As an example, the user interface allows experimental intent scripts available to specified users to be collected. For example, the user interface displays user groups and defined roles for the users.</p><p id="p-0075" num="0074">In some embodiments, the user interface enables the user to manage the experimental workflow by allowing access to modify user roles, add users, and/or delete users associated with the experimental workflow. In certain embodiments, the user interface enables the user to manage the experimental workflow by allowing the selection or addition of a remote laboratory for executing the experimental workflow. In some embodiments, the user interface enables the user to manage the experimental workflow by allowing access to internal/external users, and/or other cloud-based laboratories.</p><p id="p-0076" num="0075">In certain embodiments, the user interface updates the status of the experimental workflow in or near real-time. In some embodiments, the user interface allows the user to view all information associated with the experimental workflows (e.g., status, entered parameters, generated data, data provenance, etc.).</p><p id="p-0077" num="0076">In some embodiments, user inputs received at the user interface and any underlying scripts are used to output human and machine-readable instructions that specify the execution of the experimental workflow.</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a simplified diagram of various modules for processing experimental workflows according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>600</b> includes a protocol browser module <b>602</b>, an experimental configuration module <b>604</b>, a protocol validation module <b>606</b>, an experimental workflow module <b>608</b>, and an inventory management module <b>610</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0079" num="0078">In various embodiments, one or more processes are executed by the modules <b>602</b>-<b>610</b> for selecting, configuring, submitting, and/or tracking experimental workflows at one or more remote laboratories.</p><p id="p-0080" num="0079">In certain embodiments, the protocol browser module <b>602</b>, the experimental configuration module <b>604</b>, the protocol validation module <b>606</b>, the experimental workflow module <b>608</b>, and/or the inventory management module <b>610</b> are web-based modules. For example, the modules <b>602</b>-<b>610</b> are accessible via the Internet. In some embodiments, the modules <b>602</b>-<b>610</b> are part of the one or more modules <b>214</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0081" num="0080">In some embodiments, the protocol browser module <b>602</b> includes functionalities that enable a user to view information regarding experimental workflows. For example, the user can view available experimental workflows, version controlled experimental workflows, and/or linked execution history of experimental workflows. In various embodiments, the protocol browser module <b>602</b> includes functionalities that allow the user to customize inputs, parameters, and/or validations.</p><p id="p-0082" num="0081">In certain embodiments, the experimental configuration module <b>604</b> includes functionalities that enable the user to manage experimental workflows. For example, the user can view and manage existing experimental workflows as well as request run submissions for new experimental workflows. In some embodiments, the experimental configuration module <b>604</b> includes functionalities that allow the user to define protocol design parameters. As an example, the user can configure parameters in an experimental workflow. In certain embodiments, the experimental configuration module <b>604</b> includes functionalities that allow the user to access an inventory for sample selection.</p><p id="p-0083" num="0082">In some embodiments, the protocol validation module <b>606</b> includes functionalities that enable the user to perform validation of experimental workflows. For example, the user can validate protocol design parameters and/or other parameters used to configure an experimental workflow.</p><p id="p-0084" num="0083">In certain embodiments, the experimental workflow module <b>608</b> includes functionalities that allow the user to monitor the execution status of instructions for experimental workflows. In some embodiments, the experimental workflow module <b>608</b> includes functionalities that allow the user to view and download data, such as diagnostic data, execution data, and/or other generated data in or near real-time. In various embodiments, the experimental configuration module <b>604</b> and/or the experimental workflow module <b>608</b> provide API endpoints.</p><p id="p-0085" num="0084">In some embodiments, the inventory management module <b>610</b> includes functionalities that enable the user to perform multi-site management, material management, and/or sample tracking and provenance.</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a simplified method for managing experimental requests according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The method <b>700</b> includes process <b>710</b> for receiving experimental requests, process <b>720</b> for scheduling the experimental requests, and process <b>730</b> for assigning the experimental requests for execution. Although the above has been shown using a selected group of processes for the method, there can be many alternatives, modifications, and variations. For example, some of the processes may be expanded and/or combined. Other processes may be inserted to those noted above. Depending upon the embodiment, the sequence of processes may be interchanged with others replaced. For example, some or all processes of the method are performed by a computing device or a processor directed by instructions stored in memory. As an example, some or all processes of the method are performed according to instructions stored in a non-transitory computer-readable medium.</p><p id="p-0087" num="0086">At the process <b>710</b>, multiple experimental requests are received according to certain embodiments. In some embodiments, one or more attributes associated with each experimental request are received. For example, the one or more attributes include a target delivery date, a predicted execution duration, human resources needed, robotic resources needed, and/or financial resources needed. In certain embodiments, the one or more attributes are customized per experimental request and/or per customer. In some embodiments, the multiple experimental requests are published along with the status of each experimental request and the one or more attributes associated with each experimental request. In certain embodiments, the multiple experimental requests are published in a prioritized order. In some embodiments, each received experimental request is created using a template.</p><p id="p-0088" num="0087">At the process <b>720</b>, a schedule for executing the multiple experimental requests based at least in part upon the one or more attributes associated with each experimental request is determined according to certain embodiments. In some embodiments, the schedule includes an order to execute each experimental request. In certain embodiments, the schedule includes a desired time slot to execute each experimental request.</p><p id="p-0089" num="0088">At the process <b>730</b>, the multiple experimental requests are assigned to one or more remote laboratories for execution based at least in part upon the schedule and one or more features of the one or more remote laboratories according to certain embodiments. In some embodiments, the one or more features of the one or more remote laboratories include capabilities of the one or more remote laboratories, capacities of the one or more remote laboratories, and/or current workloads at the one or more remote laboratories. For example, the multiple experimental requests are routed to the one or more remote laboratories based upon the laboratory capabilities, capacities, and/or loads.</p><p id="p-0090" num="0089">In certain embodiments, a user interface is provided to manage (e.g., approve, update, modify, etc.) at least one experimental request of the multiple experimental requests. For example, the user interface is configured to send one or more notifications (e.g., experimental request initiated, experimental request completed, etc.) to a submitter of the at least one experimental request. As an example, the user interface is configured to receive, from the submitter of the at least one experimental request, information associated with resources needed (e.g., human resources, robotic resources, financial resources, etc.) for the at least one experimental request. For example, the user interface is configured to receive, from the submitter of the at least one experimental request, one or more modifications to the at least one experimental request. As an example, the user interface is configured to enable the submitter to place the at least one experiment request in an execution queue.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a simplified diagram of various modules for managing experimental requests according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>800</b> includes a laboratory management module <b>802</b>, a protocol browser module <b>804</b>, an experimental request management module <b>806</b>, and an inventory management module <b>808</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0092" num="0091">In various embodiments, one or more processes are executed by the modules <b>802</b>-<b>808</b> for coordinating, planning, scheduling, and/or allocating resources to experimental requests at one or more remote laboratories.</p><p id="p-0093" num="0092">In certain embodiments, the laboratory management module <b>802</b>, the protocol browser module <b>804</b>, the experimental request management module <b>806</b>, and/or the inventory management module <b>808</b> are web-based modules. For example, the modules <b>802</b>-<b>808</b> are accessible via the Internet. In some embodiments, the modules <b>802</b>-<b>808</b> are part of the one or more modules <b>214</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0094" num="0093">In some embodiments, the laboratory management module <b>802</b> includes functionalities to manage users (e.g., add users, delete users, define user groups, etc.) and user roles (e.g., user scope, user access, etc.). In certain embodiments, user roles are customized based upon organization requirements. In some embodiments, the laboratory management module <b>802</b> allows a user to add remote laboratories. For example, the user can add a remote laboratory for executing experimental requests available to users or user groups. In certain embodiments, the laboratory management module <b>802</b> allows the user to add protocols and/or customize pricing models. In certain embodiments, the laboratory management module <b>802</b> receives experimental requests and publishes experimental workflow associated with the experimental requests.</p><p id="p-0095" num="0094">In various embodiments, the laboratory management module <b>802</b> manages user access policies, user groups, and/or user roles. In some embodiments, the laboratory management module <b>802</b> allows secured access of data based upon a permission model. In certain embodiments, the permission model enables collaboration for sharing of scientific knowledge gained through running experiments across remote laboratories.</p><p id="p-0096" num="0095">In some embodiments, the protocol browser module <b>804</b> includes functionalities that enable the user to view information regarding the experimental workflows. For example, the user can view available experimental workflows, version controlled experimental workflows, and/or linked execution history of experimental workflows. In various embodiments, the protocol browser module <b>802</b> includes functionalities that allow the user to customize inputs, parameters, and/or validations.</p><p id="p-0097" num="0096">In certain embodiments, the experimental request management module <b>806</b> includes functionalities that enable the user to manage and/or schedule the experiment requests. For example, the user can view, approve/reject, and/or assign the experimental requests for execution. In various embodiments, the experimental request management module <b>806</b> includes functionalities to assign human, robotic and/or financial resources.</p><p id="p-0098" num="0097">In some embodiments, the inventory management module <b>808</b> includes functionalities that enable the user to perform multi-site management, material management, and/or sample tracking and provenance.</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a simplified method for managing experimental requests according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The method <b>900</b> includes process <b>910</b> for generating instructions, process <b>920</b> for determining sequence schedules, process <b>930</b> for receiving a selected sequence schedule, and process <b>940</b> for transmitting commands to execute the instructions. Although the above has been shown using a selected group of processes for the method, there can be many alternatives, modifications, and variations. For example, some of the processes may be expanded and/or combined. Other processes may be inserted to those noted above. Depending upon the embodiment, the sequence of processes may be interchanged with others replaced. For example, some or all processes of the method are performed by a computing device or a processor directed by instructions stored in memory. As an example, some or all processes of the method are performed according to instructions stored in a non-transitory computer-readable medium.</p><p id="p-0100" num="0099">At the process <b>910</b>, a set of instructions for performing one or more experiments related to an experimental request are generated according to certain embodiments. In some embodiments, the experimental request is received from a submitter and processed to generate the set of instructions.</p><p id="p-0101" num="0100">At the process <b>920</b>, a plurality of sequence schedules for completing the set of instructions are determined according to certain embodiments. In some embodiments, the plurality of sequence schedules are determined based upon various constraints, such as one or more available devices, one or more available materials, one or more estimated durations of executing the set of instructions, one or more optimizations (e.g., minimum execution time, maximum throughput of instructions, maximum device usage, etc.), and one or more experimental constraints (e.g., biological design constraints). In certain embodiments, an optimal sequence schedule is determined based on the various constraints.</p><p id="p-0102" num="0101">At the process <b>930</b>, an indication of a sequence schedule selected from the plurality of sequence schedules is received according to certain embodiments. In some embodiments, a desired sequence schedule is selected by the submitter of the experimental request.</p><p id="p-0103" num="0102">At the process <b>940</b>, one or more commands to execute the set of instructions according to the selected sequence schedule are transmitted according to certain embodiments. In some embodiments, the one or more commands are transmitted to one or more human operators to execute the set of instructions according to the selected sequence schedule. In certain embodiments, the one or more commands are transmitted to one or more robotic operators to execute the set of instructions according to the selected sequence schedule. In some embodiments, the one or more commands are transmitted to one or more human operators and one or more robotic operators to execute the set of instructions according to the selected sequence schedule.</p><p id="p-0104" num="0103">In certain embodiments, information associated with executing the set of instructions according to the selected sequence schedule are collected and transmitted in response to the experimental request. In various embodiments, the collected information includes environmental variables, device statuses, device feedbacks, and/or human feedbacks.</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a simplified diagram of various modules for processing experimental requests according to certain embodiments of the present disclosure. This figure is merely an example, which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations, alternatives, and modifications. The system <b>1000</b> includes an asset management module <b>1002</b>, an experiment execution module <b>1004</b>, and an automation scheduling module <b>1006</b>. Although the above has been shown using a selected group of components for the system, there can be many alternatives, modifications, and variations. For example, some of the components may be expanded and/or combined. Other components may be inserted to those noted above. Depending upon the embodiment, the arrangement of components may be interchanged with others replaced.</p><p id="p-0106" num="0105">In various embodiments, one or more processes are executed by the modules <b>1002</b>-<b>1006</b> for scheduling, sequencing, optimizing, and/or performing steps in an experimental request executed at one or more remote laboratories.</p><p id="p-0107" num="0106">In certain embodiments, the asset management module <b>1002</b>, the experiment execution module <b>1004</b>, and/or the automation scheduling module <b>1006</b> are web-based modules. For example, the modules <b>1002</b>-<b>1006</b> are accessible via the Internet. In some embodiments, the modules <b>1002</b>-<b>1006</b> are part of the one or more modules <b>214</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0108" num="0107">In some embodiments, the asset management module <b>1002</b> includes functionalities to provide a driver and/or data uploader. In various embodiments, the asset management module <b>1002</b> is able to control and execute commands on one or more devices and/or create a set of configurable properties (e.g., device configuration) for the one or more devices.</p><p id="p-0109" num="0108">In certain embodiments, the asset management module <b>1002</b> manages device infrastructure through a suitable interface (e.g., user interface, application programming interface, etc.). For example, the asset management module <b>1002</b> commissions or provisions one or more devices under an edge node or cloud infrastructure. As an example, the asset management module <b>1002</b> manages the deployment of a device controller for every device in the edge node or cloud infrastructure. For example, the asset management module <b>1002</b> commands one or more devices to start, stop, restart, etc.</p><p id="p-0110" num="0109">In some embodiments, the asset management module <b>1002</b> manages the configurations/settings of a device (e.g., laboratory specific configurations as required by operations or experimental constraints). For example, the asset management module <b>1002</b> allows a user (e.g., human operator) to view the configurations/settings of the device, and/or edit the configurations/settings of the device. As an example, the configurations/settings of the device are updated to the device in real-time. For example, the configurations/settings of the device are versioned and tracked to leave a configuration audit trail.</p><p id="p-0111" num="0110">In certain embodiments, the asset management module <b>1002</b> monitors the status of the device. For example, the asset management module <b>1002</b> allows the user to monitor and view real-time status updates, connection statuses, and/or device health. As an example, the asset management module <b>1002</b> allows the user to monitor and view real-time updates of the connection status of the device to the device controller.</p><p id="p-0112" num="0111">In some embodiments, the asset management module <b>1002</b> trains and configures the device remotely. For example, the device may be a robotic device that requires waypoint training (e.g., a Precise Flex robotic arm). As an example, the robotic device can be trained and configured remotely by the asset management module <b>1002</b>. For example, there are no limitations on how many devices can be trained at any given time.</p><p id="p-0113" num="0112">In certain embodiments, the experiment execution module <b>1004</b> includes functionalities to provide detailed experimental steps. For example, the experiment execution module <b>1004</b> provides detailed steps for execution by human and/or robotic operators.</p><p id="p-0114" num="0113">In some embodiments, the automation scheduling module <b>1006</b> includes functionalities that provide device control, task management, and/or task execution. In certain embodiments, the automation scheduling module <b>1006</b> provides functionalities that enable the user to define scientific constraints from protocols.</p><p id="p-0115" num="0114">According to certain embodiments, a method for performing one or more experiments includes receiving one or more indications of one or more experimental workflows and generating workflow configuration requirements for each experimental workflow of the one or more experimental workflows. Also, the method includes configuring each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements. Further, the method includes receiving one or more experimental requests for the one or more experimental workflows and determining a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests. Moreover, the method includes assigning each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule. Also, the method includes generating a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories. Further, the method includes determining a plurality of sequence schedules for completing the set of instructions and receiving an indication of a sequence schedule selected from the plurality of sequence schedules. In addition, the method includes transmitting one or more commands to execute the set of instructions according to the selected sequence schedule. For example, the method is implemented according to at least <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0116" num="0115">According to some embodiments, a system for performing one or more experiments includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to receive one or more indications of one or more experimental workflows and generate workflow configuration requirements for each experimental workflow of the one or more experimental workflows. Also, the instructions, when executed by the one or more processors, cause the system to configure each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements. Further, the instructions, when executed by the one or more processors, cause the system to receive one or more experimental requests for the one or more experimental workflows and determine a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests. Moreover, the instructions, when executed by the one or more processors, cause the system to assign each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule. Also, the instructions, when executed by the one or more processors, cause the system to generate a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories. Further, the instructions, when executed by the one or more processors, cause the system to determine a plurality of sequence schedules for completing the set of instructions and receive an indication of a sequence schedule selected from the plurality of sequence schedules. In addition, the instructions, when executed by the one or more processors, cause the system to transmit one or more commands to execute the set of instructions according to the selected sequence schedule. For example, the system is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0117" num="0116">According to certain embodiments, a non-transitory computer-readable medium stores instructions for performing one or more experiments. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to receive one or more indications of one or more experimental workflows and generate workflow configuration requirements for each experimental workflow of the one or more experimental workflows. Also, the non-transitory computer-readable medium includes instructions to configure each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements. Further, the non-transitory computer-readable medium includes instructions to receive one or more experimental requests for the one or more experimental workflows and determine a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests. Moreover, the non-transitory computer-readable medium includes instructions to assign each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule. Also, the non-transitory computer-readable medium includes instructions to generate a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories. Further, the non-transitory computer-readable medium includes instructions to determine a plurality of sequence schedules for completing the set of instructions and receive an indication of a sequence schedule selected from the plurality of sequence schedules. In addition, the non-transitory computer-readable medium includes instructions to transmit one or more commands to execute the set of instructions according to the selected sequence schedule. For example, the non-transitory computer-readable medium is implemented according to at least <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>2</b></figref>, <figref idref="DRAWINGS">FIG. <b>3</b></figref>, and/or <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0118" num="0117">According to certain embodiments, a method for processing one or more experimental workflows includes receiving an indication of an experimental workflow selected by a user. Also, the method includes generating workflow configuration requirements for the experimental workflow. Further, the method includes presenting a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the method includes performing a validation of the one or more parameters to configure the experimental workflow and configuring the experimental workflow based at least in part upon the validated one or more parameters. In addition, the method includes transforming the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. For example, the method is implemented according to at least <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0119" num="0118">According to some embodiments, a system for processing one or more experimental workflows includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to receive an indication of an experimental workflow selected by a user. Also, the instructions, when executed by the one or more processors, cause the system to generate workflow configuration requirements for the experimental workflow. Further, the instructions, when executed by the one or more processors, cause the system to present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the instructions, when executed by the one or more processors, cause the system to perform a validation of the one or more parameters to configure the experimental workflow and configure the experimental workflow based at least in part upon the validated one or more parameters. In addition, the instructions, when executed by the one or more processors, cause the system to transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. For example, the system is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0120" num="0119">According to certain embodiments, a non-transitory computer-readable medium stores instructions for processing one or more experimental workflows. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to receive an indication of an experimental workflow selected by a user. Also, the non-transitory computer-readable medium includes instructions to generate workflow configuration requirements for the experimental workflow. Further, the non-transitory computer-readable medium includes instructions to present a user interface to enable input of one or more parameters to configure the experimental workflow in accordance with the workflow configuration requirements. Moreover, the non-transitory computer-readable medium includes instructions to perform a validation of the one or more parameters to configure the experimental workflow and configure the experimental workflow based at least in part upon the validated one or more parameters. In addition, the non-transitory computer-readable medium includes instructions to transform the configured experimental workflow into one or more machine executable codes for execution by one or more devices at one or more remote laboratories. For example, the non-transitory computer-readable medium is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and/or <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0121" num="0120">According to certain embodiments, a method for managing one or more experimental requests includes receiving multiple experimental requests. Also, the method includes determining a schedule for executing the multiple experimental requests based at least in part upon one or more attributes associated with each experimental request of the multiple experimental requests. Moreover, the method includes assigning the multiple experimental requests to one or more remote laboratories for execution based at least in part upon the schedule and one or more features of the one or more remote laboratories. For example, the method is implemented according to at least <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0122" num="0121">According to some embodiments, a system for managing one or more experimental requests includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to receive multiple experimental requests. Also, the instructions, when executed by the one or more processors, cause the system to determine a schedule for executing the multiple experimental requests based at least in part upon one or more attributes associated with each experimental request of the multiple experimental requests. Moreover, the instructions, when executed by the one or more processors, cause the system to assign the multiple experimental requests to one or more remote laboratories for execution based at least in part upon the schedule and one or more features of the one or more remote laboratories. For example, the system is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0123" num="0122">According to certain embodiments, a non-transitory computer-readable medium stores instructions for managing one or more experimental requests. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to receive multiple experimental requests. Also, the non-transitory computer-readable medium includes instructions to determine a schedule for executing the multiple experimental requests based at least in part upon one or more attributes associated with each experimental request of the multiple experimental requests. Moreover, the non-transitory computer-readable medium includes instructions to assign the multiple experimental requests to one or more remote laboratories for execution based at least in part upon the schedule and one or more features of the one or more remote laboratories. For example, the non-transitory computer-readable medium is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>, <figref idref="DRAWINGS">FIG. <b>7</b></figref>, and/or <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0124" num="0123">According to certain embodiments, a method for processing an experimental request includes generating a set of instructions for performing one or more experiments related to the experimental request. Also, the method includes determining a plurality of sequence schedules for completing the set of instructions. Further, the method includes receiving an indication of a sequence schedule selected from the plurality of sequence schedules. Moreover, the method includes transmitting one or more commands to execute the set of instructions according to the selected sequence schedule. For example, the method is implemented according to at least <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0125" num="0124">According to some embodiments, a system for processing an experimental request includes one or more processors and a memory storing instructions for execution by the one or more processors. The instructions, when executed by the one or more processors, cause the system to generate a set of instructions for performing one or more experiments related to the experimental request. Also, the instructions, when executed by the one or more processors, cause the system to determine a plurality of sequence schedules for completing the set of instructions. Further, the instructions, when executed by the one or more processors, cause the system to receive an indication of a sequence schedule selected from the plurality of sequence schedules. Moreover, the instructions, when executed by the one or more processors, cause the system to transmit one or more commands to execute the set of instructions according to the selected sequence schedule. For example, the system is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0126" num="0125">According to certain embodiments, a non-transitory computer-readable medium stores instructions for processing an experimental request. The instructions are executed by one or more processors of a computing device. The non-transitory computer-readable medium includes instructions to generate a set of instructions for performing one or more experiments related to the experimental request. Also, the non-transitory computer-readable medium includes instructions to determine a plurality of sequence schedules for completing the set of instructions. Further, the non-transitory computer-readable medium includes instructions to receive an indication of a sequence schedule selected from the plurality of sequence schedules. Moreover, the non-transitory computer-readable medium includes instructions to transmit one or more commands to execute the set of instructions according to the selected sequence schedule. For example, the non-transitory computer-readable medium is implemented according to at least <figref idref="DRAWINGS">FIG. <b>2</b></figref>, <figref idref="DRAWINGS">FIG. <b>9</b></figref>, and/or <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0127" num="0126">For example, some or all components of various embodiments of the present disclosure each are, individually and/or in combination with at least another component, implemented using one or more software components, one or more hardware components, and/or one or more combinations of software and hardware components. In another example, some or all components of various embodiments of the present disclosure each are, individually and/or in combination with at least another component, implemented in one or more circuits, such as one or more analog circuits and/or one or more digital circuits. In yet another example, while the embodiments described above refer to particular features, the scope of the present disclosure also includes embodiments having different combinations of features and embodiments that do not include all of the described features. In still another example, various embodiments and/or examples of the present disclosure can be combined.</p><p id="p-0128" num="0127">Additionally, the methods and systems described herein may be implemented on many different types of processing devices by program code comprising program instructions that are executable by the device processing subsystem. The software program instructions may include source code, object code, machine code, or any other stored data that is operable to cause a processing system to perform the methods and operations described herein. Certain implementations may also be used, however, such as firmware or even appropriately designed hardware configured to perform the methods and systems described herein.</p><p id="p-0129" num="0128">The systems' and methods' data (e.g., associations, mappings, data input, data output, intermediate data results, final data results) may be stored and implemented in one or more different types of computer-implemented data stores, such as different types of storage devices and programming constructs (e.g., RAM, ROM, EEPROM, Flash memory, flat files, databases, programming data structures, programming variables, IF-THEN (or similar type) statement constructs, application programming interface). It is noted that data structures describe formats for use in organizing and storing data in databases, programs, memory, or other computer-readable media for use by a computer program.</p><p id="p-0130" num="0129">The systems and methods may be provided on many different types of computer-readable media including computer storage mechanisms (e.g., CD-ROM, diskette, RAM, flash memory, computer's hard drive, DVD) that contain instructions (e.g., software) for use in execution by a processor to perform the methods' operations and implement the systems described herein. The computer components, software modules, functions, data stores and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. It is also noted that a module or processor includes a unit of code that performs a software operation, and can be implemented for example as a subroutine unit of code, or as a software function unit of code, or as an object (as in an object-oriented paradigm), or as an applet, or in a computer script language, or as another type of computer code. The software components and/or functionality may be located on a single computer or distributed across multiple computers depending upon the situation at hand.</p><p id="p-0131" num="0130">The computing system can include client devices and servers. A client device and server are generally remote from each other and typically interact through a communication network. The relationship of client device and server arises by virtue of computer programs running on the respective computers and having a client device-server relationship to each other.</p><p id="p-0132" num="0131">This specification contains many specifics for particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations, one or more features from a combination can in some cases be removed from the combination, and a combination may, for example, be directed to a subcombination or variation of a subcombination.</p><p id="p-0133" num="0132">Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.</p><p id="p-0134" num="0133">Although specific embodiments of the present disclosure have been described, it will be understood by those of skill in the art that there are other embodiments that are equivalent to the described embodiments. Accordingly, it is to be understood that the present disclosure is not to be limited by the specific illustrated embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for performing one or more experiments, the method comprising:<claim-text>receiving one or more indications of one or more experimental workflows;</claim-text><claim-text>generating workflow configuration requirements for each experimental workflow of the one or more experimental workflows;</claim-text><claim-text>configuring each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements;</claim-text><claim-text>receiving one or more experimental requests for the one or more experimental workflows;</claim-text><claim-text>determining a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests;</claim-text><claim-text>assigning each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule;</claim-text><claim-text>generating a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories;</claim-text><claim-text>determining a plurality of sequence schedules for completing the set of instructions;</claim-text><claim-text>receiving an indication of a sequence schedule selected from the plurality of sequence schedules; and</claim-text><claim-text>transmitting one or more commands to execute the set of instructions according to the selected sequence schedule.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>providing a user interface to enable input of the one or more parameters associated with the workflow configuration requirements; and</claim-text><claim-text>performing a validation of the one or more parameters.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein performing the validation of the one or more parameters includes validating the one or more parameters based at least in part upon at least one selected from a group consisting of a device constraint, an experimental constraint, an instruction dependency, and an experimental design boundary.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein providing the user interface further includes:<claim-text>enabling a user to submit at least one configured experimental workflow to a queue for execution;</claim-text><claim-text>enabling the user to request dates for executing the at least one configured experimental workflow; and</claim-text><claim-text>enabling the user to assign a funding source for the at least one configured experimental workflow.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein providing the user interface further includes:<claim-text>enabling a user to receive information associated with human resources needed and robotic resources needed for at least one experimental request; and</claim-text><claim-text>enabling the user to receive one or more modifications to the at least one experimental request.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>collecting information associated with executing the set of instructions according to the selected sequence schedule; and</claim-text><claim-text>transmitting the collected information in response to each experimental request of the one or more experimental requests.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein transmitting the one or more commands to execute the set of instructions includes:<claim-text>transmitting, to one or more human operators and one or more robotic operators, the one or more commands to execute the set of instructions according to the selected sequence schedule.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system for performing one or more experiments, the system comprising:<claim-text>one or more processors; and</claim-text><claim-text>a memory storing instructions that, when executed by the one or more processors, cause the system to:<claim-text>receive one or more indications of one or more experimental workflows;</claim-text><claim-text>generate workflow configuration requirements for each experimental workflow of the one or more experimental workflows;</claim-text><claim-text>configure each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements;</claim-text><claim-text>receive one or more experimental requests for the one or more experimental workflows;</claim-text><claim-text>determine a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests;</claim-text><claim-text>assign each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule;</claim-text><claim-text>generate a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories;</claim-text><claim-text>determine a plurality of sequence schedules for completing the set of instructions;</claim-text><claim-text>receive an indication of a sequence schedule selected from the plurality of sequence schedules; and</claim-text><claim-text>transmit one or more commands to execute the set of instructions according to the selected sequence schedule.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the instructions, when executed by the one or more processors, further cause the system to:<claim-text>provide a user interface to enable input of the one or more parameters associated with the workflow configuration requirements; and</claim-text><claim-text>perform a validation of the one or more parameters.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to perform the validation of the one or more parameters further comprise instructions that cause the system to validate the one or more parameters based at least in part upon at least one selected from a group consisting of a device constraint, an experimental constraint, an instruction dependency, and an experimental design boundary.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to provide the user interface further comprise instructions that cause the system to:<claim-text>enable a user to submit at least one configured experimental workflow to a queue for execution;</claim-text><claim-text>enable the user to request dates for executing the at least one configured experimental workflow; and</claim-text><claim-text>enable the user to assign a funding source for the at least one configured experimental workflow.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein, the instructions that cause the system to provide the user interface further comprise instructions that cause the system to:<claim-text>enable a user to receive information associated with human resources needed and robotic resources needed for at least one experimental request; and</claim-text><claim-text>enable the user to receive one or more modifications to the at least one experimental request.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the instructions, when executed by the one or more processors, further cause the system to:<claim-text>collect information associated with executing the set of instructions according to the selected sequence schedule; and</claim-text><claim-text>transmit the collected information in response to each experimental request of the one or more experimental requests.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, the instructions that cause the system to transmit the one or more commands to execute the set of instructions further comprise instructions that cause the system to transmit, to one or more human operators and one or more robotic operators, the one or more commands to execute the set of instructions according to the selected sequence schedule.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer-readable medium storing instructions for performing one or more experiments, the instructions when executed by one or more processors of a computing device, cause the computing device to:<claim-text>receive one or more indications of one or more experimental workflows;</claim-text><claim-text>generate workflow configuration requirements for each experimental workflow of the one or more experimental workflows;</claim-text><claim-text>configure each experimental workflow of the one or more experimental workflows based at least in part upon one or more parameters associated with the workflow configuration requirements;</claim-text><claim-text>receive one or more experimental requests for the one or more experimental workflows;</claim-text><claim-text>determine a schedule for executing the one or more experimental requests based at least in part upon one or more attributes associated with the one or more experimental requests;</claim-text><claim-text>assign each experimental request of the one or more experimental requests to one or more remote laboratories for execution based at least in part upon the schedule;</claim-text><claim-text>generate a set of instructions for performing one or more experiments related to each experimental request of the one or more experimental requests at the one or more remote laboratories;</claim-text><claim-text>determine a plurality of sequence schedules for completing the set of instructions;</claim-text><claim-text>receive an indication of a sequence schedule selected from the plurality of sequence schedules; and</claim-text><claim-text>transmit one or more commands to execute the set of instructions according to the selected sequence schedule.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, the instructions when executed by the one or more processors further cause the computing device to:<claim-text>provide a user interface to enable input of the one or more parameters associated with the workflow configuration requirements; and</claim-text><claim-text>perform a validation of the one or more parameters.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein, the instructions when executed by the one or more processors that cause the computing device to provide the user interface further cause the computing device to:<claim-text>enable a user to submit at least one configured experimental workflow to a queue for execution;</claim-text><claim-text>enable the user to request dates for executing the at least one configured experimental workflow; and</claim-text><claim-text>enable the user to assign a funding source for the at least one configured experimental workflow.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein, the instructions when executed by the one or more processors that cause the computing device to provide the user interface further cause the computing device to:<claim-text>enable a user to receive information associated with human resources needed and robotic resources needed for at least one experimental request; and</claim-text><claim-text>enable the user to receive one or more modifications to the at least one experimental request.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, the instructions when executed by the one or more processors further cause the computing device to:<claim-text>collect information associated with executing the set of instructions according to the selected sequence schedule; and</claim-text><claim-text>transmit the collected information in response to each experimental request of the one or more experimental requests.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, the instructions when executed by the one or more processors that cause the computing device to transmit the one or more commands to execute the set of instructions further cause the computing device to transmit, to one or more human operators and one or more robotic operators, the one or more commands to execute the set of instructions according to the selected sequence schedule.</claim-text></claim></claims></us-patent-application>