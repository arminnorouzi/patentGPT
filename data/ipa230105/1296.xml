<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230001297A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230001297</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17812123</doc-number><date>20220712</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>525</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>525</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20140902</date></cpc-version-indicator><section>A</section><class>63</class><subclass>F</subclass><main-group>13</main-group><subgroup>5258</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Systems and Methods for Controlling Camera Perspectives, Movements, and Displays of Video Game Gameplay</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17127728</doc-number><date>20201218</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11420122</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17812123</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62952637</doc-number><date>20191223</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Activision Publishing, Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Sanders</last-name><first-name>Michael</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In a multiplayer video game, virtual cameras are controlled by continually assessing and ranking storylines relating to the interactions of various players during a game session. A ranking for each storyline may be based on various factors such as, but not limited to, what the players can see, the distance between certain players, nearby game items or in-game. Subsequently, at least one virtual camera is navigated to provide a view of the highest-ranking storyline, subject to certain limitations on how the camera can move, transition, or otherwise display the interactions between players. In embodiments, a set of rules including rules of cinematography, are used to provide additional control of the movement of the virtual camera. In embodiments, movements of a human camera-person are used on a mocap system to control the movement of the virtual camera.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="104.48mm" wi="158.75mm" file="US20230001297A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="237.24mm" wi="168.40mm" orientation="landscape" file="US20230001297A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="233.43mm" wi="172.80mm" file="US20230001297A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="222.42mm" wi="172.47mm" file="US20230001297A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="202.27mm" wi="172.47mm" file="US20230001297A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="210.57mm" wi="172.55mm" file="US20230001297A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="236.05mm" wi="172.55mm" file="US20230001297A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE</heading><p id="p-0002" num="0001">The present application is a continuation application of U.S. patent application Ser. No. 17/127,728, titled &#x201c;Systems and Methods for Controlling Camera Perspectives, Movements, and Displays of Video Game Gameplay&#x201d; and filed on Dec. 18, 2020, which relies on, for priority, U.S. Patent Provisional Application No. 62/952,637, of the same title and filed on Dec. 23, 2019.</p><p id="p-0003" num="0002">The present application relates to U.S. patent application Ser. No. 16/284,234, entitled &#x201c;Systems and Methods for Controlling Camera Perspectives, Movements, and Displays of Video Game Gameplay&#x201d;, and filed on Feb. 25, 2019, which relies on U.S. Provisional Patent Application No. 62/783,147, entitled &#x201c;Systems and Methods for Controlling Camera Perspectives, Movements, and Displays of Video Game Gameplay&#x201d;, filed on Dec. 20, 2018, for priority.</p><p id="p-0004" num="0003">The above-mentioned applications are herein incorporated by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0005" num="0004">The present application generally relates to the broadcasting of online gaming events. More particularly, the present application relates to controlling the movement and coverage of a camera to provide live broadcast content.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0006" num="0005">Multiplayer online gaming has seen explosive proliferation across the globe among a wide range of age groups. Similar to popular competitive sports, such as soccer, football, card games and basketball, multiplayer online games also have a large fan following who relish watching competitive online games and highly skilled players in action.</p><p id="p-0007" num="0006">Consequently, the continued evolution and growth of online gaming, together with an ever-increasing fan base, have led to the rise in popularity of video games as an in-person spectator sport or a virtual spectator sport. As with other sports, such fans enjoy being spectators of highly competitive games or games that popular players or influencers are participating in, either online or live, as is the case with organized tournaments. In a multiplayer online game, spectators may watch one or more players or teams of players involved in combat or otherwise participating in game play. Multiplayer online games may involve a large number of players in a game session. For example, games may support hundreds or thousands of active players including but not limited to simple two-dimensional shooting games, multiplayer online battle arena games, and massive multiplayer online role-playing games.</p><p id="p-0008" num="0007">Existing video games enable spectators to view interesting moments of game play across a plurality of game events which develop as a result of a large number of player interactions or actions. However, conventionally, only one or more virtual cameras are configured in a video game to capture game play action. A virtual camera is an in-game object that, when executed in a video game, generates a visual, displayable viewpoint of the game that is a function of a) the programmed field of view of the virtual camera and b) the location of the in-game object, as defined by a three dimensional coordinate in a virtual game map. Those cameras are limited, however, in how they follow, track, and display game play action, often missing the most interesting interactions between players and failing to present a smooth transition between different camera angles. Most of the current implementations of virtual cameras involve cameras positioned at specific points, relative to specific virtual spaces or relative to the virtual characters. Such cameras are limited in their movement, perspective, and field of view. The cameras only follow one or more players, even if they are moving, and they do not follow the scenes that may be of most interest to an audience, similar to how the real-life camera-persons move and position their cameras according to interesting events taking place during a live-action sport, such as football that is played in a stadium.</p><p id="p-0009" num="0008">Accordingly, there is a need for video game systems and methods that more effectively control camera perspectives, and manage camera transitions and displays, to ensure spectators have access to game events that are likely to be of high interest and/or entertainment value to the spectators. There is also a need for systems and methods for capturing and broadcasting interesting gameplay events in a realistic, real-world manner without detracting from the viewing experience of the spectators.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0010" num="0009">The following embodiments and aspects thereof are described and illustrated in conjunction with systems, tools and methods, which are meant to be exemplary and illustrative, and not limiting in scope. The present application discloses numerous embodiments.</p><p id="p-0011" num="0010">In some embodiments, the present specification discloses a computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one computing device, said method comprising: analyzing, in at least one server remote from the at least one computing device, data to identify the plurality of storylines; defining, in the at least one server, at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; programmatically moving, in the at least one server, the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and broadcasting, from the at least one server to the at least one computing device, the one of the plurality of storylines determined based on the at least one criterion.</p><p id="p-0012" num="0011">Optionally, the programmatically moving the virtual camera is based on one or more cinematography rules.</p><p id="p-0013" num="0012">Optionally, the at least one criterion comprises at least one of a storyline ranking data, gameplay data, player data, or match data and wherein each of the storyline ranking data, the gameplay data, the player data, and the match data is determined from the multiplayer video game.</p><p id="p-0014" num="0013">Optionally, controlling the at least one of the navigation, positioning or orientation of the virtual camera uses the at least one criterion to determine the storyline ranking data.</p><p id="p-0015" num="0014">Optionally, the at least one criterion comprises combining a base rank from a base criteria and a weighting factor.</p><p id="p-0016" num="0015">Optionally, the base criteria comprises at least one of a distance between two players in the multiplayer video game, locations of interest in a game map of the multiplayer video game, or virtual items of interest to spectators of the multiplayer video game.</p><p id="p-0017" num="0016">Optionally, the weighting factor is based on at least one of a relationship between two players, a relative orientation of the two players, or a field of view of the two players.</p><p id="p-0018" num="0017">Optionally, controlling the at least one of the navigation, positioning or orientation of the virtual camera is based on storyline ranking data that is generated in real time during the multiplayer video game.</p><p id="p-0019" num="0018">Optionally, controlling the at least one of the navigation, positioning or orientation of the virtual camera is based on storyline ranking data that is stored from previously played sessions of the multiplayer video game.</p><p id="p-0020" num="0019">Optionally, analyzing data to identify the plurality of storylines comprises identifying at least one event in the multiplayer video game that is of interest to at least one spectator of the multiplayer video game.</p><p id="p-0021" num="0020">Optionally, programmatically moving the virtual camera is based on at least one of data specific to players of the multiplayer video game, data applicable to the multiplayer video game, storyline data, storyline ranking data, scenes of interest conveyed by one or more spectators of the multiplayer video game, input from a motion capture movement reference system, camera navigation rules, or cinematography rules.</p><p id="p-0022" num="0021">Optionally, the camera navigation rules comprise at least one of a speed of movement of the virtual camera, an acceleration of movement of the virtual camera, an angular speed of rotation of the virtual camera, or an angular acceleration of rotation of the virtual camera.</p><p id="p-0023" num="0022">Optionally, programmatically moving the virtual camera based on input from the motion capture movement reference system comprises: monitoring movement of a human camera person within the motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside the multiplayer video game environment; and programmatically moving the virtual camera to capture one of the plurality of storylines based on the movement of the human camera person.</p><p id="p-0024" num="0023">Optionally, programmatically moving the virtual camera comprises enabling the human camera person to control at least one operation of the virtual camera and wherein the at least one operation comprises at least one of moving the camera, panning-in or out, or modifying the camera view.</p><p id="p-0025" num="0024">In some embodiments, the present specification discloses a system for controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game executing in a plurality of gaming devices and configured to broadcast the multiplayer video game to a plurality of spectator devices, said system comprising: at least one server configured to host a game session of the multiplayer video game and to broadcast the hosted game session to each of the plurality of spectator devices through a network; a plurality of gaming modules stored on the plurality of gaming devices remote from the at least one server and configured to enable a plurality of human players to play in the game session of the multiplayer video game; a plurality of spectator modules stored on the plurality of spectator devices remote from the at least one server and configured to enable a plurality of human spectators to view the broadcast of the game session, wherein at least a portion of the plurality of spectator modules are executing on at least a portion of the plurality of gaming devices and wherein at least a portion of the plurality of gaming modules are executing on at least a portion of the plurality of spectator devices; at least one processor, in the at least one server, wherein the at least one processor is configured to execute a plurality of programmatic instructions to: define a function to identify the plurality of storylines; define at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; programmatically moving the virtual camera to capture one of the plurality of storylines based on the at least one criterion and at least one cinematography rule; and broadcasting the captured one of the plurality of storylines to at least a portion of the plurality of gaming modules and/or at least a portion of the spectator modules.</p><p id="p-0026" num="0025">Optionally, the at least one criterion comprises at least one of a storyline ranking data, gameplay data, player data, or match data and wherein each of the storyline ranking data, the gameplay data, the player data, and the match data is determined from the multiplayer video game.</p><p id="p-0027" num="0026">Optionally, controlling the at least one of the navigation, positioning or orientation of the virtual camera uses the at least one criterion to determine the storyline ranking data.</p><p id="p-0028" num="0027">Optionally, the at least one criterion comprises combining a base rank from a base criteria and a weighting factor.</p><p id="p-0029" num="0028">Optionally, the base criteria comprises at least one of a distance between two players in the multiplayer video game, locations of interest in a game map of the multiplayer video game, or virtual items of interest to spectators of the multiplayer video game.</p><p id="p-0030" num="0029">Optionally, the weighting factor is based on at least one of a relationship between two players, a relative orientation of the two players, or a field of view of the two players.</p><p id="p-0031" num="0030">Optionally, the at least one processor is configured to execute a plurality of programmatic instructions to control the at least one of the navigation, positioning or orientation of the virtual camera based on storyline ranking data that is generated in real time during the multiplayer video game.</p><p id="p-0032" num="0031">Optionally, the at least one processor is configured to execute a plurality of programmatic instructions to control the at least one of the navigation, positioning or orientation of the virtual camera based on storyline ranking data that is stored from previously played sessions of the multiplayer video game.</p><p id="p-0033" num="0032">Optionally, the at least one processor is configured to execute a plurality of programmatic instructions to identify at least one event in the multiplayer video game that is of interest to at least one spectator of the multiplayer video game.</p><p id="p-0034" num="0033">Optionally, the at least one processor is configured to execute a plurality of programmatic instructions to programmatically move the virtual camera based on at least one of data specific to players of the multiplayer video game, data applicable to the multiplayer video game, storyline data, storyline ranking data, scenes of interest conveyed by one or more spectators of the multiplayer video game, input from a motion capture movement reference system, or camera navigation rules.</p><p id="p-0035" num="0034">Optionally, the camera navigation rules comprise at least one of a speed of movement of the virtual camera, an acceleration of movement of the virtual camera, an angular speed of rotation of the virtual camera, or an angular acceleration of rotation of the virtual camera.</p><p id="p-0036" num="0035">Optionally, the at least one processor is configured to execute a plurality of programmatic instructions to programmatically move the virtual camera based on input from the motion capture movement reference system by: monitoring movement of a human camera person within the motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside the multiplayer video game environment; and programmatically moving the virtual camera to capture one of the plurality of storylines based on the movement of the human camera person.</p><p id="p-0037" num="0036">Optionally, the at least one processor is configured to execute a plurality of programmatic instructions to programmatically move the virtual camera by enabling the human camera person to control at least one operation of the virtual camera and wherein the at least one operation comprises at least one of moving the camera, panning-in or out, or modifying the camera view.</p><p id="p-0038" num="0037">In some embodiments, the present specification discloses a computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game and for broadcasting the multiplayer video game to at least one computing device, said method comprising: monitoring movement of a human camera person within a motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside a virtual environment of the multiplayer video game environment and wherein the human camera person wears at least one illuminating marker; programmatically moving the virtual camera to capture one of the plurality of storylines, based data from the motion capture movement reference system, wherein said data is based on a movement of the human camera person; and broadcasting to at least one computing device one of the plurality of storylines captured by the human camera person.</p><p id="p-0039" num="0038">Optionally, the monitoring comprises recording movement of the at least one illuminating marker worn by the human camera person.</p><p id="p-0040" num="0039">Optionally, programmatically moving the virtual camera comprises enabling the human camera person to control at least one operation of the virtual camera, wherein the at least one operation comprises at least one of moving the virtual camera, panning-in or out the virtual camera, and modifying a view of the virtual camera.</p><p id="p-0041" num="0040">Optionally, the method further comprises receiving data associated with the human camera person controlling the at least one operation and, based on the received data, overriding data received from monitoring movement of the human camera person within the motion capture movement reference system.</p><p id="p-0042" num="0041">Optionally, the method further comprises displaying the multiplayer video game to the human camera person while the human camera person is in the motion capture reference system.</p><p id="p-0043" num="0042">In some embodiments, the present specification discloses a computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one computing device, said method comprising: analyzing, in at least one server remote from the at least one computing device, data to identify the plurality of storylines; defining, in the at least one server, at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; programmatically moving, in the at least one server and subject to one or more rules of cinematography, the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and broadcasting, from the at least one server to the at least one computing device, the one of the plurality of storylines determined based on the at least one criterion.</p><p id="p-0044" num="0043">Optionally, the at least one criterion comprises at least one of a storyline ranking data, gameplay data, player data, and match data, wherein each data is determined from the multiplayer video game.</p><p id="p-0045" num="0044">Optionally, the controlling based on at least one of a storyline ranking data comprises using a first at least one criteria to determine the storyline ranking data.</p><p id="p-0046" num="0045">Optionally, the first at least one criteria comprises combining a base rank from a base criteria, and a weighting factor. Optionally, the base criteria comprises at least one of a distance between two players in the multiplayer video game, locations of interest on a game map of the multiplayer video game, and virtual items of interest to spectators of the multiplayer video game.</p><p id="p-0047" num="0046">Optionally, the weighting factor is based on at least one of a relationship between two players, a relative orientation of the two players, and a field of view of the two players.</p><p id="p-0048" num="0047">Optionally, the controlling based on at least one of a storyline ranking data comprises generating storyline ranking data in real time during the multiplayer video game.</p><p id="p-0049" num="0048">Optionally, the controlling based on at least one of a storyline ranking data comprises generating storyline ranking based on historic data from the multiplayer video game.</p><p id="p-0050" num="0049">Optionally, the analyzing data to identify the plurality of storylines comprises identifying at least one event in the multiplayer video game that is of interest to at least one spectator of the multiplayer video game.</p><p id="p-0051" num="0050">Optionally, the programmatically moving the virtual camera comprises analyzing at least one of data sets that are specific to players of the multiplayer video game, data sets that are applicable to the multiplayer video game, a storyline data, a storyline ranking data, scenes of interest conveyed by one or more spectators of the multiplayer video game, input from a motion capture movement reference system, rules governing camera navigation, and rules governing cinematography.</p><p id="p-0052" num="0051">Optionally, the rules governing camera navigation comprise at least one of a speed of movement, acceleration of movement, an angular speed of rotation and an angular acceleration of rotation of the virtual camera.</p><p id="p-0053" num="0052">Optionally, the programmatically moving the virtual camera based on analysis of input from the motion capture movement reference system comprises: monitoring movement of a human camera person within the motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside the multiplayer video game environment; and programmatically moving the virtual camera to capture one of the plurality of storylines, based on the movement of the human camera person.</p><p id="p-0054" num="0053">Optionally, the programmatically moving the virtual camera comprises enabling the human camera person to control at least one operation of the virtual camera, wherein the at least one operation comprises one of moving the camera, panning-in or out, and fixing the camera view.</p><p id="p-0055" num="0054">In some embodiments, the present specification discloses a system for controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game executing on a plurality of gaming devices for broadcasting to a plurality of spectator devices, said system comprising: at least one server for hosting a game session of the multiplayer video game and to broadcast said game session to each of a plurality of spectator devices through a network; a plurality of gaming modules stored on the plurality of gaming devices remote from the at least one server and configured to enable a plurality of human players to play in the game session of the multiplayer video game; a plurality of spectator modules stored on the plurality of spectator devices remote from the at least one server and configured to enable a plurality of human spectators to view the broadcast of the game session, wherein at least a portion of the plurality of spectator modules are executing on at least a portion of the plurality of gaming devices and wherein at least a portion of the plurality of gaming modules are executing on at least a portion of the plurality of spectator devices; a processor in said at least one server, said processor executing a plurality of executable programmatic instructions to: define a function to identify the plurality of storylines; define at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; subject to one or more rules of cinematography, programmatically moving the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and broadcasting the one of the plurality of storylines determined based on the at least one criterion.</p><p id="p-0056" num="0055">In some embodiments, the present specification discloses a computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one computing device, using a motion capture movement reference system, wherein the motion capture movement reference system comprises a human camera person wearing multiple illuminating markers, and a computing device configured to program the virtual camera based on input from the motion capture movement reference system, said method comprising: monitoring movement of the human camera person within the motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside the multiplayer video game environment; programmatically moving the virtual camera to capture one of the plurality of storylines, based on the movement of the human camera person; and broadcasting, to the at least one computing device, the one of the plurality of storylines captured by the human camera person.</p><p id="p-0057" num="0056">Optionally, the monitoring comprises recording movement of one or more digital markers worn by the human camera person.</p><p id="p-0058" num="0057">Optionally, the programmatically moving the virtual camera comprises enabling the human camera person to control at least one operation of the virtual camera, wherein the at least one operation comprises one of moving the camera, panning-in or out, and fixing the camera view.</p><p id="p-0059" num="0058">Optionally, the control operations performed on the camera by the human camera person override one or more input provided from the monitoring movement of the human camera person within the motion capture movement reference system.</p><p id="p-0060" num="0059">Optionally, the human camera person observes the plurality of storylines in a multiplayer video game on a display device.</p><p id="p-0061" num="0060">In some embodiments, the present specification discloses a system for controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game executing on a plurality of gaming devices for broadcasting to a plurality of spectator devices, said system comprising: at least one server for hosting a game session of the multiplayer video game and to broadcast said game session to each of a plurality of spectator devices through a network; a plurality of gaming modules stored on the plurality of gaming devices remote from the at least one server and configured to enable a plurality of human players to play in the game session of the multiplayer video game; a plurality of spectator modules stored on the plurality of spectator devices remote from the at least one server and configured to enable a plurality of human spectators to view the broadcast of the game session, wherein at least a portion of the plurality of spectator modules are executing on at least a portion of the plurality of gaming devices and wherein at least a portion of the plurality of gaming modules are executing on at least a portion of the plurality of spectator devices; a processor in said at least one server, said processor executing a plurality of executable programmatic instructions to: define a function to identify the plurality of storylines; define at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; subject to one or more rules of cinematography, programmatically moving the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and, broadcasting the one of the plurality of storylines determined based on the at least one criterion, wherein the processor renders the video for broadcasting to the plurality of spectator devices.</p><p id="p-0062" num="0061">In some embodiments, the present specification discloses a computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one computing device, said method comprising: analyzing, in at least one server remote from the at least one computing device, data to identify the plurality of storylines; defining, in the at least one server, at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; programmatically moving, in the at least one server and subject to one or more rules of cinematography, the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and broadcasting, from the at least one server to the at least one computing device, the one of the plurality of storylines determined based on the at least one criterion.</p><p id="p-0063" num="0062">Optionally, the at least one criterion comprises at least one of a storyline ranking data, gameplay data, player data, and match data, wherein each data is determined from the multiplayer video game.</p><p id="p-0064" num="0063">In some embodiments, the present specification comprises a system for controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game executing on a plurality of gaming devices for broadcasting to a plurality of spectator devices, said system comprising: at least one server for hosting a game session of the multiplayer video game and to broadcast said game session to each of a plurality of spectator devices through a network; a plurality of gaming modules stored on the plurality of gaming devices remote from the at least one server and configured to enable a plurality of human players to play in the game session of the multiplayer video game; a plurality of spectator modules stored on the plurality of spectator devices remote from the at least one server and configured to enable a plurality of human spectators to view the broadcast of the game session, wherein at least a portion of the plurality of spectator modules are executing on at least a portion of the plurality of gaming devices and wherein at least a portion of the plurality of gaming modules are executing on at least a portion of the plurality of spectator devices; a processor in said at least one server, said processor executing a plurality of executable programmatic instructions to: define a function to identify the plurality of storylines; define at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; subject to one or more rules of cinematography, programmatically moving the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and broadcasting the one of the plurality of storylines determined based on the at least one criterion.</p><p id="p-0065" num="0064">In some embodiments, the present specification discloses a computer readable non-transitory medium comprising a plurality of executable programmatic instructions wherein, when said plurality of executable programmatic instructions are executed by a processor in at least one server, a process for controlling navigation, positioning and orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one spectator device, said plurality of executable programmatic instructions comprising: programmatic instructions, stored in said computer readable non-transitory medium, for determining at least one criterion controlling the at least one of the navigation, positioning or orientation of the virtual camera; and programmatic instructions comprising a plurality of rules of cinematography, stored in said computer readable non-transitory medium, for moving the virtual camera to capture one of the plurality of storylines determined based on the at least one criterion.</p><p id="p-0066" num="0065">In some embodiments, the present specification discloses a computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one computing device, using a motion capture movement reference system, wherein the motion capture movement reference system comprises a human camera person wearing multiple illuminating markers, and a computing device configured to program the virtual camera based on input from the motion capture movement reference system, said method comprising: monitoring movement of the human camera person within the motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside the multiplayer video game environment; programmatically moving the virtual camera to capture one of the plurality of storylines, based on the movement of the human camera person; broadcasting, to the at least one computing device, the one of the plurality of storylines captured by the human camera person.</p><p id="p-0067" num="0066">In some embodiments, the present specification discloses a system for controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game executing on a plurality of gaming devices for broadcasting to a plurality of spectator devices, said system comprising: at least one server for hosting a game session of the multiplayer video game and to broadcast said game session to each of a plurality of spectator devices through a network; a plurality of gaming modules stored on the plurality of gaming devices remote from the at least one server and configured to enable a plurality of human players to play in the game session of the multiplayer video game; a plurality of spectator modules stored on the plurality of spectator devices remote from the at least one server and configured to enable a plurality of human spectators to view the broadcast of the game session, wherein at least a portion of the plurality of spectator modules are executing on at least a portion of the plurality of gaming devices and wherein at least a portion of the plurality of gaming modules are executing on at least a portion of the plurality of spectator devices; a processor in said at least one server, said processor executing a plurality of executable programmatic instructions to: define a function to identify the plurality of storylines; define at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera; subject to one or more rules of cinematography, programmatically moving the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and, broadcasting the one of the plurality of storylines determined based on the at least one criterion, wherein the processor renders the video for broadcasting to the plurality of spectator devices.</p><p id="p-0068" num="0067">The aforementioned and other embodiments of the present specification shall be described in greater depth in the drawings and detailed description provided below.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0069" num="0068">These and other features and advantages of the present specification will be further appreciated, as they become better understood by reference to the following detailed description when considered in connection with the accompanying drawings:</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a multiplayer online gaming system or environment in which a plurality of spectating modalities may be enabled, implemented or executed, in accordance with some embodiments of the present specification;</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow chart showing steps in computer-implemented method for tracking and ranking one or more storylines in a game match of a multiplayer online video game, in accordance with some embodiments of the present specification;</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is an exemplary block diagram illustrating the different types of data that may be combined with specific rules of cinematography, to control the position and movement of a virtual camera;</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a flow chart showing steps of a computer-implemented method of controlling navigation, position, and orientation of a virtual camera configured to capture a plurality of scenes of interest in a multiplayer video game for broadcasting to at least one spectator device, in accordance with some embodiments of the present specification;</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>3</b>C</figref> is a flow chart showing steps of a computer-implemented method of controlling navigation, position, and orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one spectator device, in accordance with some embodiments of the present specification;</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>3</b>D</figref> is a flow chart showing steps of another computer-implemented method of controlling navigation, position, and orientation of a virtual camera configured to capture a plurality of scenes of interest in a multiplayer video game for broadcasting to at least one spectator device, in accordance with some embodiments of the present specification;</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>3</b>E</figref> is a flow chart showing steps of a computer-implemented method of incorporating the mocap system to control the virtual camera, in accordance with some embodiments of the present specification; and</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow chart showing various steps of a computer-implemented method of enabling at least one spectator to view video data associated with one or more storylines in a game match of a multiplayer video game, in accordance with some embodiments of the present specification.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0078" num="0077">The present specification is directed towards multiple embodiments. The following disclosure is provided in order to enable a person having ordinary skill in the art to practice the invention. Language used in this specification should not be interpreted as a general disavowal of any one specific embodiment or used to limit the claims beyond the meaning of the terms used therein. The general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the invention. Also, the terminology and phraseology used is for the purpose of describing exemplary embodiments and should not be considered limiting. Thus, the present invention is to be accorded the widest scope encompassing numerous alternatives, modifications and equivalents consistent with the principles and features disclosed. For purpose of clarity, details relating to technical material that is known in the technical fields related to the invention have not been described in detail so as not to unnecessarily obscure the present invention.</p><p id="p-0079" num="0078">The present specification is directed towards multiple embodiments. For example, the systems and methods described herein may be applied to multiplayer video games in numerous genres, including first person shooter (FPS), fighting games, survival games, action-adventure games, role-playing games, simulation games, strategy games, sports, card games, and racing games. The following disclosure is provided in order to enable a person having ordinary skill in the art to practice the invention. Language used in this specification should not be interpreted as a general disavowal of any one specific embodiment or used to limit the claims beyond the meaning of the terms used therein. The general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the invention. Also, the terminology and phraseology used is for the purpose of describing exemplary embodiments and should not be considered limiting. Thus, the present invention is to be accorded the widest scope encompassing numerous alternatives, modifications and equivalents consistent with the principles and features disclosed. For purpose of clarity, details relating to technical material that is known in the technical fields related to the invention have not been described in detail so as not to unnecessarily obscure the present invention.</p><p id="p-0080" num="0079">In the description and claims of the application, each of the words &#x201c;comprise&#x201d; &#x201c;include&#x201d; and &#x201c;have&#x201d;, and forms thereof, are not necessarily limited to members in a list with which the words may be associated. It should be noted herein that any feature or component described in association with a specific embodiment may be used and implemented with any other embodiment unless clearly indicated otherwise.</p><p id="p-0081" num="0080">As used herein, the indefinite articles &#x201c;a&#x201d; and &#x201c;an&#x201d; mean &#x201c;at least one&#x201d; or &#x201c;one or more&#x201d; unless the context clearly dictates otherwise.</p><p id="p-0082" num="0081">In some embodiments, execution of a plurality of sequences of programmatic instructions or code enables or causes the CPU of the computing device to perform various functions and processes. In alternate embodiments, hard-wired circuitry may be used in place of, or in combination with, software instructions for implementation of the processes of systems and methods described in this application. Thus, the systems and methods described are not limited to any specific combination of hardware and software. It should further be appreciated that each computing system, including servers and computing devices, have wireless and wired receivers and transmitters capable of sending and transmitting data, at least one processor capable of processing programmatic instructions, memory capable of storing programmatic instructions, and software comprised of a plurality of programmatic instructions for performing the processes described herein.</p><p id="p-0083" num="0082">In various embodiments, the system includes at least one processor capable of processing programmatic instructions, has a memory capable of storing programmatic instructions, and employs software comprised of a plurality of programmatic instructions for performing the processes described herein. In embodiments, a computer-readable non-transitory medium comprises the plurality of executable programmatic instructions. In one embodiment, the at least one processor is a computing device capable of receiving, executing, and transmitting a plurality of programmatic instructions stored on a volatile or non-volatile computer readable medium.</p><p id="p-0084" num="0083">In various embodiments, a computing device includes an input/output controller, at least one communications interface and system memory. The system memory includes at least one random access memory (RAM) and at least one read-only memory (ROM). These elements are in communication with a central processing unit (CPU) to enable operation of the computing device. In various embodiments, the computing device may be a conventional standalone computer or alternatively, the functions of the computing device may be distributed across multiple computer systems and architectures.</p><p id="p-0085" num="0084">The term &#x201c;module&#x201d;, &#x201c;application&#x201d; or &#x201c;engine&#x201d; used in this disclosure may refer to computer logic utilized to provide a desired functionality, service or operation by programming or controlling a general purpose processor. Stated differently, in some embodiments, a module, application or engine implements a plurality of instructions or programmatic code to cause a general purpose processor to perform one or more functions. In various embodiments, a module, application or engine can be implemented in hardware, firmware, software or any combination thereof. The module, application or engine may be interchangeably used with unit, logic, logical block, component, or circuit, for example. The module, application or engine may be the minimum unit, or part thereof, which performs one or more particular functions.</p><p id="p-0086" num="0085">The term &#x201c;platform&#x201d; or &#x201c;target gaming platform&#x201d; used in this disclosure may refer to hardware and/or software specifications of a player's client device (which may be a PC or a gaming console, for example). In some embodiments, &#x201c;platform&#x201d; may refer to at least GPU (Graphics Processing Unit) specification, CPU specification, display screen resolution, RAM and hard disk space available and a type of operating system.</p><p id="p-0087" num="0086">The term &#x201c;offline&#x201d; or &#x201c;offline process&#x201d; used in this disclosure refers to one or more programmatic instructions or code that may be implemented or executed while the game is not being played by any player (that is, while the one or more game servers are not rendering a game for playing).</p><p id="p-0088" num="0087">The term &#x201c;runtime&#x201d; or &#x201c;runtime process&#x201d; used in this disclosure refers to one or more programmatic instructions or code that may be implemented or executed during gameplay (that is, while the one or more game servers are rendering a game for playing).</p><p id="p-0089" num="0088">The term &#x2018;virtual camera&#x2019; or &#x2018;camera&#x2019; refers to at least one viewing element configured to capture or provide a view of game play in the virtual world associated with a video game. It should be appreciated that akin to a physical camera, the at least one virtual camera may have associated position coordinates to uniquely identify its location within a gaming world. Also, in various embodiments, a virtual camera may be characterized by a plurality of customizable parameters such as, but not limited to, orientation, viewing angle, focal length, zoom factor, tilt and pan.</p><p id="p-0090" num="0089">The term &#x2018;storyline&#x2019; is defined as an aggregated set of data defining a player's visual and auditory in-game interactions, e.g. with one or more other players. Storyline data may refer to all, or a portion, of the programmatic data defining the visual storyline, auditory storyline and associated metadata pertaining or incidental thereto which, if processed and rendered, would visually and aurally display the storyline to one or more human spectators. Storyline data may be indicative of one or more preferred positions, angles, foci, fields of view, or perspectives of one or more cameras.</p><p id="p-0091" num="0090">The term &#x2018;scenes of interest&#x2019; refer to the scenes, including storylines, which are of individual interest to viewers or spectators, including a person, a group of people, e-sports streamers and broadcasters. The scenes of interest may be derived from storyline data.</p><p id="p-0092" num="0091">The term &#x2018;player&#x2019; refers to any human or virtual actor within a game, where the human or virtual actor may engage in play actions, social actions, administrative actions, or observation actions.</p><p id="p-0093" num="0092">&#x2018;Motion capture (mocap)&#x2019; is the process of recording the movement of real objects, such as a human actor, in order to create source data that is used to conform the movement onto a computer graphics animation character or digital avatar of the object. A typical mocap system uses one or more digital cameras to record the movement of the actor while illuminating a number of markers attached at a number of locations on a suit that the actor wears. A digital representation or rendering of the actor in motion is thereafter generated by analyzing the coordinates of the markers in the captured images and mapping them onto a corresponding computer graphics animation character. Mocap offers advantages over traditional computer animation of a 3D model such as: enabling a preview of the spatial representation of the actor's movements in real-time or near real-time, and allowing computer graphics animation characters to display more realistic and natural movement characteristics.</p><p id="p-0094" num="0093">As used herein, the term &#x2018;cameraman&#x2019; refers to a being, such as a human, who is the subject of a motion capture system, wears clothing having markers attached at various locations to enable digital cameras to record the being's movement, and is expected to carry a virtual camera device which allows the cameraman to control camera position and movement in a virtual game environment, in accordance with the implementations of the present application. The virtual camera device carried by the cameraman may include, and is not limited to, a standard gamepad and monitor, a gamepad and an Augmented Reality (AR) or Virtual Reality (VR) headset, or a device that has motion sensors that enables to the cameraman to move and tilt the device to change views of the virtual camera in the game.</p><p id="p-0095" num="0094">It should be appreciated that each of the claim limitations, when viewed as an ordered combination, amount to significantly more than just an abstract idea or concept. The methods and systems of the present invention represent technical improvements to a form of computer technology, video games, by providing a specialized computer system configured to host a plurality of concurrently executing video game streaming applications (for example, anywhere from at least 10 video game streaming applications to at least 100,000,000 video game streaming applications or any increment therein), host a plurality of client devices associated with remotely located players (for example, anywhere from at least 10 client devices associated with players to at least 100,000,000 client devices associated with players, or any increment therein), and perform a series of programmatic steps designed to, among other features, control camera perspectives, and manage camera transitions and displays, to ensure spectators have access to game events that are likely to be of high interest and/or entertainment value to the spectators. In addition, the presently disclosed embodiments are directed to systems and methods for capturing and broadcasting interesting gameplay events in a realistic, real-world manner without detracting from the viewing experience of the spectators.</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an embodiment of a multiplayer online gaming system or environment <b>100</b> in which a plurality of spectating modalities may be enabled, implemented or executed, in accordance with some embodiments of the present specification. The system <b>100</b>, in some embodiments, comprises a client-server architecture, where one or more game servers <b>105</b> are in communication with one or more player devices <b>110</b> and one or more spectator devices <b>145</b> over a network <b>115</b>. Players may access the system <b>100</b> via the one or more player devices <b>110</b> while one or more spectators or viewers may access the system <b>100</b> using the one or more spectator devices <b>145</b>. The player devices <b>110</b> and the spectator devices <b>145</b> comprise computing devices such as, but not limited to, personal or desktop computers, laptops, Netbooks, handheld devices such as smartphones, tablets, and PDAs, gaming consoles and/or any other computing platform known to persons of ordinary skill in the art. Although four player devices <b>110</b> and three spectator devices <b>145</b> are illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, any number of player and spectator devices <b>110</b>, <b>145</b> can be in communication with the one or more game servers <b>105</b> over the network <b>115</b>. Also, in some embodiments, the spectator devices <b>145</b> include facilities similar to Esports Arena or locations/theaters deploying large display screens to enable a number of spectators to simultaneously view a game match.</p><p id="p-0097" num="0096">The one or more game servers <b>105</b> can be any computing device having one or more processors and one or more computer-readable storage media such as RAM, hard disk or any other optical or magnetic media. The one or more game servers <b>105</b> include a plurality of modules operating to provide or implement a plurality of functional, operational or service-oriented methods of the present specification. In some embodiments, the one or more game servers <b>105</b> include or are in communication with at least one database system <b>150</b>. The database system <b>150</b> stores a plurality of game data associated with at least one game that is served or provided to the player devices <b>110</b> for game-play and to the spectator devices <b>145</b> for viewing and engagement over the network <b>115</b>. In embodiments, the database system <b>150</b> also stores a plurality of data such as, but not limited to, storyline data, storyline ranking data, storyline ranking rules or logic, and/or camera movement or intelligence rules or logic. The database system <b>150</b> further includes historical gameplay data, data about each player including the performance of the player, and real time match data including information about the locations of action in game. In some embodiments, the one or more game servers <b>105</b> may be implemented by a cloud of computing platforms operating together as game servers <b>105</b>.</p><p id="p-0098" num="0097">In embodiments, the one or more game servers <b>105</b> provide or implement a plurality of server-side modules such as, but not limited to, a master game engine or module <b>120</b>, a storyline ranking engine or module <b>130</b> and a camera intelligence engine or module <b>135</b>. In embodiments, the one or more player devices <b>110</b> and spectator devices <b>145</b> respectively provide or implement client-side modules such as, but not limited to, a player game module <b>120</b>&#x2032; and a spectator engagement module <b>140</b>. In embodiments, the player game module <b>120</b>&#x2032; is same as or similar to the counterpart server-side module <b>120</b>. In some embodiments, the client-side modules <b>120</b>&#x2032; and <b>140</b> are configured to connect and communicate with the plurality of modules on the server <b>105</b> via the network <b>115</b>.</p><p id="p-0099" num="0098">The one or more game servers <b>105</b> are preferably configured to concurrently communicate with at least 20 spectator devices, and more preferably 20 to 1,000,000 spectator devices or any increment therein, such that each of said at least 20 spectator devices are permitted to concurrently receive a broadcast of the storylines selected and recorded by a virtual camera. In another embodiment, the one or more game servers are configured to concurrently host at least 5 storyline broadcasts per second, preferably 50-150 storyline broadcasts per second, with the plurality of spectator devices.</p><p id="p-0100" num="0099">Master Game Module <b>120</b></p><p id="p-0101" num="0100">In embodiments, the master game module <b>120</b> is configured to execute an instance of an online game to facilitate interaction of the players with the game. In embodiments, the instance of the game executed may be synchronous, asynchronous, and/or semi-synchronous. The master game module <b>120</b> controls aspects of the game for all players and receives and processes each player's input in the game. In other words, the master game module <b>120</b> hosts the online game for all players, receives game data from the player devices <b>110</b> and transmits updates to all player devices <b>110</b> based on the received game data so that the game, on each of the player devices <b>110</b>, represents the most updated or current status with reference to interactions of all players with the game and/or with one another (depending upon the type or genre of game match being played). Thus, the master game module <b>120</b> transmits game data over the network <b>115</b> to the player devices <b>110</b> for use by the game module <b>120</b>&#x2032; to provide local versions and current status of the game to the players.</p><p id="p-0102" num="0101">Player Game Module <b>120</b>&#x2032;</p><p id="p-0103" num="0102">On the client side, each of the one or more player devices <b>110</b> implements the game module <b>120</b>&#x2032; that operates as a gaming application to provide a player with an interface between the player and the game. The game module <b>120</b>&#x2032; generates the interface to render a virtual environment, virtual space or virtual world associated with the game and enables the player to interact in the virtual environment to perform a plurality of game tasks and objectives. The game module <b>120</b>&#x2032; accesses game data received from the game server <b>110</b> to provide an accurate representation of the game to the player. The game module <b>120</b>&#x2032; captures and processes player inputs and interactions within the virtual environment and provides updates to the game server <b>110</b> over the network <b>115</b>.</p><p id="p-0104" num="0103">Storyline and Storyline Data</p><p id="p-0105" num="0104">As previously described, the term &#x201c;storyline&#x201d; is defined as an in-game, virtual interaction between a first player and at least one other second player or actor in a multiplayer video game. A storyline therefore includes outcomes, occurrences, episodes or events, which occur in a game match and that are of value, significance, appeal, curiosity or interest to a spectator and, therefore, impact the viewership, engagement, learning and/or entertainment value of a video game.</p><p id="p-0106" num="0105">As an example, in a multiplayer shooting or combat game a storyline may be defined as interactions/combats between each player and every other player in the match. In a two player versus two player first person shooter (FPS) game involving A, B, C and D players there may be potentially six storylines (AB, AC, AD, BC, BD, and CD). Thus, a first person shooter (FPS) game session may include x number of players thereby creating n number of storylines, with any combination or permutation of players possible. In the example provided above, a three player storyline may include ABC, ABD, ACD, or BCD.</p><p id="p-0107" num="0106">More generally, a given multiplayer video game may have n(n&#x2212;1)/2 number of storylines where n represents the total number of players or actors who may interact with each other in the game and where each storyline represents an interaction between two distinct players. Notwithstanding the above, the number of storylines may be modified based on a plurality of rules. For example, the system may eliminate, ignore, or otherwise filter one or more of the storylines based on whether a player or actor falls into a certain category or has a predefined characteristics, such as having a rank that is below a threshold value, having a title, label or designation that is not preferred, being on the same team as the other player with whom the storyline would be defined, having a score, point total, health level, number of kills, or amount of treasure that is below a threshold level, or having weaponry types that are not preferred. Accordingly, storylines may be filtered such that the remaining set of storylines only pertain to interactions between players on opposing teams or only to key players (such as, in a football game, quarterback, running back, or wide receiver while ignoring linemen) or players ranked in the top <b>10</b>.</p><p id="p-0108" num="0107">Storyline Ranking Engine or Module <b>130</b></p><p id="p-0109" num="0108">The storyline ranking module <b>130</b> implements or executes a plurality of instructions or programmatic code to track one or more storylines as these are generated during a game match, acquire and store data (storyline data) associated with each of the storylines and rank each of the storylines in accordance with a plurality of pre-stored yet customizable storyline ranking logic, rules, guidelines, or imperatives. In various embodiments, the storyline data, storyline ranking data and the plurality of storyline ranking rules are stored in the database system <b>150</b>.</p><p id="p-0110" num="0109">For the purposes of illustrating the ranking functionalities and features of the module <b>130</b> the present specification refers to shooter games genre and specifically a first-person shooter (FPS) game such as, for example, Call of Duty, in accordance with some embodiments. A first person shooter (FPS) game session is now considered, as an example, where Team Alpha (A) of first and second players is pitted in shooting combat with Team Beta (B) of third and fourth players.</p><p id="p-0111" num="0110">As the gameplay ensues between Team Alpha (A) and Team Beta (B), a plurality of events or interactions between members of Team A and Team B unfold. In some embodiments, the plurality of storyline ranking logic, rules, guidelines or imperatives are applied such that they consider, establish or assign at least one base factor or criterion for ranking followed by at least one multiplier factor or criterion that has an accentuating or diminishing effect (on the overall ranking) depending upon the type or genre of the game.</p><p id="p-0112" num="0111">In the first person shooter (FPS) game session, in some embodiments, a distance between two players in the game match is considered as the base criterion for ranking the storylines. In other words, the base criterion is a distance determined for each player with respect to every other player participating in the first person shooter (FPS) game session. For example, in a game map, the maximum distance between two players will be a known or fixed number, for example, 8000 units at the two farthest points in the game map. Therefore, at any given moment, any two players will be between 1 and 8000 units apart from each other. However, from the spectators' vantage points, valuable storylines are those where the two players are closer to each other because there is a greater chance of meaningful interaction.</p><p id="p-0113" num="0112">Therefore, in some embodiments, the module <b>130</b> establishes proximity of two players as a base factor or criterion and consequently determines a base rank by inverting (that is, taking the reciprocal of) the distance between the two players in the game match. Thus, if the two players are 8000 units apart from each other the base ranking assigned to their storyline is the lowest (1/8000) whereas if the two players are 1 unit apart from each other the base ranking assigned to their storyline is the highest (1/1) in the game match. In some embodiments, the base ranking may be calculated as a percentage (1/8000=0.125%, 1/1=100%). Therefore, a storyline may be weighted using a factor that is a function of the distance between the players defining the storyline, where the function provides for a larger factor, or weight, if the players are closer to each other and a smaller factor, or weight, if the players are further away from each other.</p><p id="p-0114" num="0113">In some embodiments, the module <b>130</b> further establishes at least one multiplier or weighting factor or criterion and assigns an accentuating or diminishing coefficient or value thereto depending upon the value (an interest or value quotient) of the multiplier or weighting factor from the vantage point of the spectators. In the first person shooter (FPS) game, in some embodiments, following exemplary multiplier factors are established by the module <b>130</b> and assigned a corresponding coefficient:</p><p id="p-0115" num="0114">A first multiplier or weighting factor is representative of a relationship between the two players. Thus, a coefficient of, for example, &#x201c;5&#x201d; may be assigned if the two players are from opposing teams&#x2014;that is, the two players are enemies. However, if the two players are from the same team then a coefficient of, for example &#x201c;1&#x201d; or any increment therein in a range 0 to 1 may be assigned. In other words, the module <b>130</b> puts more emphasis and value on storylines between opponents or foes. Therefore, a storyline may be weighted using a factor that is a function of the relationship between the players defining the storyline, where the function provides for a larger factor, or weight, if the players are in opposition to each other and a smaller factor, or weight, if the players are in cooperation with each other. Note that this, and all subsequent, weighting approaches may be used in place of eliminating or filtering out such storylines altogether, as described above.</p><p id="p-0116" num="0115">A second multiplier or weighting factor is representative of an orientation of the two players with respect to each other. Thus, a coefficient of, for example, &#x201c;2&#x201d; may be assigned if each of two players (from opposing teams, each having two players) are facing each other; a coefficient of, for example, &#x201c;1.5&#x201d; may be assigned if only one of the two players (from opposing teams) is facing the other. However, if neither of the two players (from opposing teams) is facing the other then a coefficient of, for example &#x201c;1&#x201d; or any increment therein in a range of 0 to 1 may assigned. Therefore, a storyline may be weighted using a factor that is a function of the orientation between the players defining the storyline, where the function provides for a larger factor, or weight, if the players are fully or partially oriented toward each other and a smaller factor, or weight, if the players are oriented away from each other. Accordingly, the module <b>130</b> places more emphasis or weighted value on storylines between opponents/foes/enemies where at least one player is facing the other thereby indicative of a possible combat event. In some embodiments, the second multiplier or weighting factor is also indicative of whether the virtual camera can establish a position and/or orientation where both players are visible.</p><p id="p-0117" num="0116">A third multiplier or weighting factor is representative of what the two players can &#x201c;see&#x201d; or have in their field of view (FOV). Thus, a coefficient of, for example &#x201c;2&#x201d; may be assigned if the player (that the virtual camera is closest to) can actually see the other player without any obstructions in the view (that is, an unobstructed view).</p><p id="p-0118" num="0117">Thus, in some embodiments, a base ranking determined from a base criterion, such as the proximity of two players, when multiplied by one or more coefficients determined from one or more multiplier factors provides an overall ranking of a storyline between the two players, as follows:</p><p id="p-0119" num="0118">R=k1&#xd7;(br)+k2&#xd7;(br)+ . . . +kn&#xd7;(br), where R is the overall ranking of a storyline between two players, k1 to kn are coefficients corresponding to &#x2018;n&#x2019; number of multiplier factors and br is the base ranking determined established on a base factor/criteria. In various embodiments, the value of the coefficients may be real numbers ranging between 0 and 1 (0&#x2264;coefficient&#x2264;1) corresponding to multiplier factors that have diminishing effects (that is, are low in terms of value for spectators) and may be real numbers greater than 1 (1&#x2264;coefficient) corresponding to multiplier factors that have accentuating or emphasizing effects (that is, are high in terms of value for spectators).</p><p id="p-0120" num="0119">In the first person shooter (FPS) game example of Team Alpha and Team Beta, in accordance with the base and multiplier criteria, module <b>130</b> is programmed to value conflict and combat. Also, it should be appreciated that the base and multiplier factors or criteria are customizable by an administrator. That is, the plurality of rules or logic implemented by the module <b>130</b>, to determine the storyline rankings, may be expanded or relaxed/briefed depending on factors such as, but not limited to, game mode, type, genre, and/or level. For example, in some embodiments, the module <b>130</b> generates the overall storyline ranking not only on the basis of player relationships (the first multiplier factor) but also other criteria such as, but not limited to a) locations of interest on a game map (for example, storylines taking place in the center of the game map, a particular building, and/or on a bridge may be ranked higher or lower depending upon the perceived value for the spectators), and b) certain virtual items or combat gear of interest to spectators (such as, vehicles, combat weapons, positions of advantage in terms of first strike).</p><p id="p-0121" num="0120">In some embodiments, the module <b>130</b> implements a plurality of instructions or programmatic code to acquire storyline data and generate storyline rankings (also referred to as &#x2018;storyline ranking data&#x2019;) in real-time or near real-time as the storylines develop between the players during the game map. In such embodiments, the game match is available for spectating in real-time during the game match. Accordingly, a first plurality of rules (such as those described above) are used by the module <b>130</b> to establish the base and multiplier factors in order to determine the overall ranking of the storylines in real time.</p><p id="p-0122" num="0121">However, in some embodiments, the module <b>130</b> implements a plurality of instructions or programmatic code to acquire storyline data and generate storyline rankings when the game match is broadcasted for spectating with time delay or after the match is complete. Accordingly, a second plurality of rules are used by the module <b>130</b> to establish the base and multiplier factors in order to determine the overall ranking of the storylines. For example, if the match is already complete the second plurality of rules enable the module <b>130</b> to assess and rank storylines with the benefit of already knowing their outcome. For example, a particular interaction between two players of opposing teams that seemed mundane in the beginning may lead to a very exciting or game-defining battle towards the end of the match. With the known outcome, the second plurality of rules enable the module <b>130</b> to assign an overriding high ranking to this match. Such second plurality of rules includes assigning a greater weighting value to the player or players who achieved the highest score, number of kills, wins, or rank, thereby increasing the ranking of storylines involving those players, assigning a greater weighting value to the player or players who are positioned in a particular location which experienced interesting gameplay, thereby increasing the ranking of storylines involving that location and/or assigning a greater weighting value to the player or players who participated in the most interesting gameplay action.</p><p id="p-0123" num="0122">In embodiments, the module <b>130</b> continuously or pseudo-continuously evaluates all relevant storylines for rankings depending upon at least the complexity of the game. In some embodiments, the module evaluates or determines the rankings of all relevant storylines at a frequency or refresh-rate of &#x2018;t&#x2019; times per second. In some embodiments, the value of &#x2018;t&#x2019; varies from 1 to 60 times per second. In some embodiments, a refresh occurs on a frame-by-frame basis. In another embodiment, a refresh occurs every second. In an embodiment, the frequency of storyline evaluation for ranking generation is 4 times per second. It should be appreciated that in embodiments, the refresh-rate is also a function of the available processing power at the spectator devices <b>145</b>. For example, a gaming console may be able to render storylines, commensurate with updated rankings, more frequently than a mobile device. Accordingly, the refresh-rate may be programmatically modified based upon the processing power of the client device where a lower refresh-rate is implemented with a lower processing power and a higher refresh-rate is implemented with a higher processing power.</p><p id="p-0124" num="0123">Persons of ordinary skill in the art should appreciate that the base factor and multiplier factors may differ across game genres, modes and/or levels. For example, in multiplayer platform games (where a plurality of players controls their corresponding characters or avatars to jump between suspended platforms and avoid obstacles) the base factor may be an advance level that has been reached in the game by a player and/or a threshold number of points amassed by a player. Again, in multiplayer adventure games (where a plurality of players assume the role of protagonists in an interactive story driven by exploration and puzzle-solving instead of physical challenge) the base factor may be an advance level of difficulty that has been reached in the game by a player. Yet again, in strategy games such as multiplayer online battle arenas or MOBAs (that are a hybrid of action games, real-time strategy and role-playing video games where the objective is for the player's team to destroy the opposing side's main structure with the help of periodically spawned computer-controlled units that march towards the enemy's main structure) the base factor may be a team of players occupying or destroying key sub-structure(s) of the opposing team's main structure, hideout or fort.</p><p id="p-0125" num="0124">It should be appreciated that the module <b>130</b> communicates the determined overall storyline rankings to the camera intelligence module <b>135</b> and also stores the rankings in the database system <b>150</b>.</p><p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a computer-implemented method <b>200</b> of tracking and ranking one or more storylines in a game match of a multiplayer online video game, in accordance with some embodiments of the present specification. In embodiments, the method <b>200</b> is implemented by the storyline ranking module <b>130</b>. Referring now to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, at step <b>205</b>, a premise or principle, collectively referred to as a function, is defined or established to identify the one or more storylines, depending upon at least the genre, type or level of the multiplayer online video game. For example, in some embodiments, for a first person shooter (FPS) genre, the basic premise pertains to combative interactions amongst a plurality of players participating in the multiplayer video game.</p><p id="p-0127" num="0126">At step <b>210</b>, at least one base criterion is defined or established to enable ranking each of the one or more storylines. For example, in a first person shooter (FPS) game session, the at least one base criterion is a distance of each player with respect to every other player participating in said multiplayer video game. Accordingly, position coordinates (within the game map) of each player are acquired and distances of each player with respect to every other player are calculated based on the positional coordinates. At step <b>215</b>, depending upon the at least one base criterion a base rank is determined for each of the one or more storylines. In various embodiments, the base rank is a function of the at least one base criterion. For example, if a distance (base criterion) between any two players in the first person shooter (FPS) game session is &#x2018;D&#x2019; units, then the corresponding base rank for the storyline associated with the two players is determined to be a reciprocal of the distance&#x2014;that is, the base rank is 1/D points.</p><p id="p-0128" num="0127">At step <b>220</b>, one or more weighting or multiplier factors are defined or established. In embodiments, the one or more weighting factors have predetermined values. In some embodiments, the one or more weighting factors comprise a first factor representative of a relationship between each player with respect to every other player in the game match, a second factor representative of an orientation of each player with respect to every other player and a third factor representative of obstructed or unobstructed view between each player with respect to every other player.</p><p id="p-0129" num="0128">Finally, at step <b>225</b>, an overall ranking for each of the one or more storylines is determined by associating the one or more weighting factors with the base rank. In some embodiments, the base rank is multiplied by each of the one or more weighting factors to calculate a weighted sum representative of the overall ranking. In various embodiments, the weighting factors have accentuating or diminishing effect on the overall ranking of the one or more storylines. In various embodiments, the overall rank is determined at a predetermined frequency in the game match.</p><p id="p-0130" num="0129">It should be appreciated that while executing the method <b>200</b>, the module <b>130</b> continuously stores and/or updates data related to the basic premise, base criterion, position coordinates and distances of each player with respect to every other player, base rank, one or more weighting factors and the overall ranking, for each of the one or more storylines, in the database system <b>150</b>.</p><p id="p-0131" num="0130">Camera Intelligence Engine or Module <b>135</b></p><p id="p-0132" num="0131">The camera intelligence module <b>135</b> implements a plurality of instructions or programmatic code to control a virtual camera so as to enable adaptive or intelligent navigation, positioning and viewing orientation of the virtual camera. The camera intelligence module <b>135</b> may utilize analytical capabilities to process various data sets, such as including but not limited to: data sets that are specific to players, data sets that are applicable to the game, storyline data, storyline ranking data, scenes of interest conveyed by one or more spectators, rules governing preferred camera shots, and rules governing preferred use of specific types of cameras.</p><p id="p-0133" num="0132">In accordance with an aspect of the present specification, the camera intelligence module <b>135</b> considers a spectator as a pseudo-player in the game match, assigns the pseudo-player's camera identity or entity to an invisible game object (that is, the virtual camera) which is thereafter manipulated like any other game object through a plurality of instructions or programmatic code for navigation, positioning and orientation.</p><p id="p-0134" num="0133">In some embodiments, the module <b>135</b> is programmed to use data sets that are generally applicable to a game to control the virtual camera. The data sets used are indicative of scenes of interest to spectators. The data sets that are generally applicable to the game may include general information about the storyline rankings, game map, location of players within the game map, heat maps, kill locations, action for a given level, player performance, among others. In embodiments, real time data from the gameplay is used by the module <b>135</b> to determine where battles have occurred and correspondingly control the virtual camera.</p><p id="p-0135" num="0134">In embodiments, historical game data is used to determine the data sets applicable to the game. For example, locations that are most probable for kills or other types of actions, are designated as kill locations, or action locations, respectively. Similarly, historical gameplay data is used by the module <b>135</b> to obtain data sets pertaining to each player, each team of players, and each game level. The data pertaining the players and the teams may be used by the module <b>135</b> to analyze the player or team that is most likely to win, the individual game parameters of the players such as their kill-to-death ratios, players that are most active, among other parameters. The historical gameplay data may be obtained from previous matches, gameplay events, played by the current players, teams, or other players. Module <b>135</b> utilizes the data to determine the location of cameras where battles tend to occur, and enable spectators to view multiple locations in a multi-window viewing environment. Module <b>135</b> also uses this data to determine camera placement and movement.</p><p id="p-0136" num="0135">In embodiments, certain rules of cinematography are provided to the engine or module <b>135</b>, which are combined with the available data sets on the game, the game map, the game levels, the players, the teams, the storyline ranking, and any other information that may be derived from the gameplay; to control the virtual camera(s). Some of the basic rules of cinematography, used in accordance with the embodiments of the present specification, may include the 180-degree rule, the rule of thirds, head room, balance, and leading lines. The rules of cinematography are used to improve image compositions, so that they appear more cinematic and therefore interesting to the spectators.</p><p id="p-0137" num="0136">A ranking system, similar to that used by the module <b>130</b>, may be used by the module <b>135</b>, to analyze and rank locations on a game map within a gameplay session, the game levels, the players, and the teams, based on the quantity, intensity, and quality of actions within each parameter. In embodiments, the rank data, in combination with game map, location of players within the game map, heat maps, kill locations, action for a given level, player performance, and rules of cinematography, informs module <b>135</b> to select a type of camera, a position of camera, an orientation of the camera, among other camera parameters, to control the virtual camera(s).</p><p id="p-0138" num="0137">Additionally, the camera intelligence module <b>135</b> controls the virtual camera in response to dynamic rankings of storylines determined in real-time during a game match or offline after completion of the game match. In embodiments, the virtual camera generates video output of at least one scene of interest in a game match for broadcasting over the network <b>115</b> for viewing or spectating at the spectator devices <b>145</b>.</p><p id="p-0139" num="0138">In embodiments, the module <b>135</b> is programmed to receive historical gameplay data, player information, real-time match data, including game map, location of players within the game map, heat maps, kill locations, action for a given level, and player performance, among other types of data. These data are combined with specific rules of cinematography, and control the position and movement of the virtual camera in response to the data.</p><p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is an exemplary block diagram illustrating the different types of data <b>322</b> that may be combined with specific rules of cinematography <b>324</b>, by the module <b>135</b>, to control the position and movement of the virtual camera. Different types of data may include at least one or more of storyline ranking data <b>326</b>, historical gameplay data <b>328</b>, player data <b>330</b>, and real time match data <b>332</b>. Other types of game-related data (not shown) may also be included, for example game map, kill locations, and action for a given game level. The data is obtained from database <b>150</b>. Data received by module <b>135</b> is then analyzed to determine the positioning and movement of the virtual camera, so as to capture the different scenes of interest.</p><p id="p-0141" num="0140">In one embodiment, the module <b>135</b> is programmed to receive overall rankings of storylines from the storyline ranking module <b>130</b> or access the overall rankings from the database system <b>150</b>, combine them with specific rules of cinematography, and in response automatically navigate the virtual camera to capture and broadcast the scenes of interest involving storylines with the highest ranking and with applicable rules of cinematography, at any given point in time.</p><p id="p-0142" num="0141">In some exemplary embodiments, the virtual camera settings are controlled with respect to the 180 degree rule. Accordingly, the camera is positioned to capture an interaction between at least two players by orienting the camera on a 180 degree line that keeps the two players on the same position on the screen. If the two players are kept on the same position, say a first player is always kept on the left side of a cinematic frame and the second player is always kept on the right side, the spectator is least likely to be confused.</p><p id="p-0143" num="0142">In some embodiments, the rule of thirds is incorporated into the analyzed data sets. Accordingly, a scene, a subject, or an object that is captured by the virtual camera is likely to be more interesting if it is put slightly to the side of an image, instead of the center of the image.</p><p id="p-0144" num="0143">In some embodiments, the rule pertaining to headroom is incorporated. Accordingly, a certain amount of space is left between top of the subject's head and the top of a frame. The space allows for room to capture movement of the subject in the frame without cramping the frame or cutting-off the image of the subject.</p><p id="p-0145" num="0144">In some embodiments, images are balanced by positioning the virtual camera so that weight of the subject is visually balanced with other objects in the frame.</p><p id="p-0146" num="0145">In some embodiments, leading lines from surrounding visuals are used in combination with the rule of thirds, to align the subject along those lines. In other words, the subject is aligned with lines that come towards the subject, while keeping the subject slightly on the side of a frame. The leading lines provide a subtle, natural, means for directing the viewer's attention towards the subject or place of importance within a scene.</p><p id="p-0147" num="0146">In embodiments, this navigation of the virtual camera is constrained, bound or governed by a plurality of pre-stored (in the database system <b>150</b>) yet customizable camera intelligence rules, logic or imperatives. In accordance with aspects of the embodiment where storyline ranking data <b>326</b> is combined with cinematography rule <b>324</b>, of the present specification, the plurality of camera intelligence rules or logic is configured to avoid situations where the virtual camera is too frequently alternating between storylines that have oscillating rankings. Therefore, the plurality of camera intelligence rules or logic are aimed at intelligently navigating the camera while setting certain limitations on how far and frequently the camera can change scenes of interest.</p><p id="p-0148" num="0147">In some embodiments, the camera navigation limitations are set with reference to the following exemplary parameters. A first parameter relates to a travel distance of the camera as the module <b>135</b> evaluates whether it should move to a new storyline (both in the horizontal and vertical directions). For example, in some embodiments, the camera is allowed to move from one scene of interest to another if the travel distance for switching the scene of interest can be traversed within a predefined time range of 0.25 to 1 second. In an embodiment, the camera is allowed to move from one scene of interest to another if the travel distance for switching the scene of interest can be traversed in 0.5 seconds or less. In some embodiments, the camera is allowed to switch from first to second scene of interest by traveling a distance that requires a traveling time of greater than 1 second if a ranking difference between the storylines involved with first and second scenes of interest is a spectrum of values lying between a lower end and a higher end point value. In some embodiments, the lower end point value is a first sliding scale ranging from 0.9 to 2 (with incremental values of 0.1). In an embodiment, the lower end point value is preset at 1 point by default. In some embodiments, the higher end point value is a second sliding scale ranging from 2 to 5 (with incremental values of 0.1). In an embodiment, the higher end point value is preset at 3 points by default. Thus, in some embodiments, the camera is allowed to switch if the ranking difference between the first and second storylines ranges from 1 to 3 points or is otherwise confined to a predefined range of less than a predefined value and not allowed to switch if the ranking difference exceeds the predefined value. However, as mentioned earlier, the lower end of this range may vary in accordance with the first sliding scale while the upper end of this range may vary in accordance with the second sliding scale. It should be appreciated that lower values within the first sliding scale results in the camera switching more frequently between storylines. On the other hand, higher values within the first sliding scale results in the camera being more &#x201c;sticky&#x201d; and preferring to remain focused with a scene of interest. Accordingly, the virtual camera is programmed to switch at a speed or rate that is dependent upon a first sliding scale, wherein the first sliding scale is indicative of a ranking difference between storylines included in the respective scenes of interest. In some embodiments, a value for the lower end of the spectrum automatically resets towards higher values of the first sliding scale after the virtual camera changes focus or switches from the first to the second scene of interest, thereby insuring the virtual camera does not switch scenes of interest too rapidly. Therefore, after the virtual camera switches in accordance with a first value of the first sliding scale, that first value is reset to a second value that will cause the virtual camera to switch at a slower rate than the first value.</p><p id="p-0149" num="0148">A second parameter relates to how much the camera can rotate, tilt and/or pan. This parameter may result from a combination of one or more of storyline data <b>326</b>, gameplay data <b>328</b>, player data <b>330</b>, and match data <b>332</b>. For example, in some embodiments, the camera is allowed to rotate at a predetermined angular speed and acceleration. Accordingly, the virtual camera is programmed to rotate, tilt and/or pan at a scale or speed that is constrained to a predetermined set of threshold values, thereby insuring the virtual camera does not present an excessively jarring view. For example, the virtual camera may be constrained to rotate, tilt or pan less than 45 degrees, 90 degrees, 135 degrees, 180 degrees, 225 degrees, 270 degrees, 315 degrees, 360 degrees, or some increment therein.</p><p id="p-0150" num="0149">A third parameter relates to a predetermined (yet customizable) ranking threshold. For example, a second storyline ranking must exceed a first storyline ranking by at least &#x2018;x&#x2019; number of points for the camera to be switched from the first to the second scene of interest involving the respective storyline ranks. That is, a new storyline must be ranked &#x2018;x&#x2019; number of points better than the existing storyline for the module <b>135</b> to switch the camera between their respective scenes of interest. In various embodiments, &#x2018;x&#x2019; is at least 1 number of points, although one of ordinary skill in the art would appreciate that the precise units used may vary depending on the scale being used.</p><p id="p-0151" num="0150">A fourth parameter, applicable to all types of data including storyline data <b>326</b>, gameplay data <b>328</b>, player data <b>330</b>, and match data <b>332</b>, relates to establishing a predefined boundary or &#x2018;sandbox&#x2019; beyond which the virtual camera is not permitted to be moved or relocated. In one embodiment, module <b>135</b> defines a boundary, defined in terms of three-dimensional coordinates of a virtual map, around the coordinate location of the virtual camera. If, as a result of selecting a new scene of interest to broadcast, module <b>135</b> determines a virtual camera's position should be redefined to a new coordinate location that is outside the boundary, the virtual camera will be positioned at a coordinate point on the boundary that is closest to the new coordinate location but not external to that boundary. Accordingly, upon determining a new scene of interest and therefore a new position for the virtual camera, module <b>135</b> compares the coordinates of the new position against the coordinates of the predefined boundary and determines if the coordinates of the new position are outside the coordinates of the predefined boundary. If the coordinates of the new position are outside the coordinates of the predefined boundary, the module <b>135</b> determines coordinates on the predefined boundary that are closest to, or representative of, the coordinates of the new position. If the coordinates of the new position are inside the coordinates of the predefined boundary, the module <b>135</b> moves the virtual camera to the coordinates of the new position.</p><p id="p-0152" num="0151">Before describing the fifth parameter, it should first be appreciated that, during the above described transitions from one virtual camera position to another virtual camera position, the virtual camera remains on, thereby continuously displaying the surrounding visual and auditory elements of the video game as it moves from the first virtual camera position, angle, tilt, field of view or focus to the second virtual camera position, angle, tilt, field of view or focus. However, there are situations where the second position is so far from the first position or situations where getting to the second position from the first position requires passing through such a contorted path that continuously displaying the surrounding visual and auditory elements of the video game as it moves from the first virtual camera position to the second virtual camera position would take too long, require moving too fast, and/or would require moving in a jarring manner.</p><p id="p-0153" num="0152">In such situations, a fifth parameter, which may be implemented in place of the fourth parameter, establishes a predefined boundary or &#x2018;sandbox&#x2019; beyond which the virtual camera would &#x201c;teleport&#x201d; from a first current position within the boundary to a second future position outside the boundary. The view of the virtual camera first momentarily fades to black (fadeout) upon leaving the first position and then fades to the new view (fade-in) when at the second position. Accordingly, module <b>135</b> may implement the teleport function when the module <b>135</b> determines the distance or pathway between a first position and a second position is too great, or too contorted, such that the speed the camera would have to adopt to get to the new viewpoint in a standard camera transition time would create a video sequence too jarring and/or disorienting for viewers, possibly causing motion sickness in viewers. In such a case, the teleport function fades the viewer's view to black (fade-out), instantly moves the camera to the new viewpoint, and then fades the viewer's view back in from black (fade-in), thereby not continuously displaying the surrounding visual and auditory elements of the video game as it moves from the first virtual camera position, angle, tilt, field of view or focus to the second virtual camera position, angle, tilt, field of view or focus. In some embodiments, the module <b>135</b> teleports the virtual camera when 1) the module <b>135</b> determines there is obstructive geometry or other visual hazards between a first position and a second position or the pathway is otherwise too contorted, 2) module <b>135</b> determines to jump-cut between multiple cameras responsible for covering different subset-volumes of a playing field, or 3) the module <b>135</b> determines to reset a poorly-performing camera.</p><p id="p-0154" num="0153">It should be appreciated that the parameters are only exemplary and in no way exhaustive and therefore may be expanded or relaxed by the administrator as per need. Further, the parameters are derived from different types of data including and not limited to storyline ranking data <b>326</b>, gameplay data <b>328</b>, player data <b>330</b>, and match data <b>332</b>. Thus, the plurality of camera intelligence rules or logic implements the aforementioned exemplary parameters to determine &#x2018;when&#x2019; the module <b>135</b> should navigate/move the camera between scene of interest in a game match.</p><p id="p-0155" num="0154"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a computer-implemented method of controlling navigation, positioning and orientation of a virtual camera configured to capture a plurality of scenes of interest in a multiplayer video game for broadcasting to at least one spectator device, in accordance with some embodiments of the present specification. In embodiments, the method is implemented by the camera intelligence module <b>135</b>. Referring now to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>3</b>A, and <b>3</b>B</figref>, at step <b>350</b>, the module <b>135</b> accesses from the database system <b>150</b>, a combination including one or more of overall ranking data <b>326</b> for the plurality of storylines within the plurality of scenes of interest, historical gameplay data <b>328</b>, player data <b>330</b>, and real time match data <b>332</b>, in a game match of the multiplayer video game.</p><p id="p-0156" num="0155">At step <b>352</b>, the module <b>135</b> either receives or accesses from the database system <b>150</b>, preferred rules of cinematography to be selectively followed while pursuing the plurality of storylines in the game match of the multiplayer video game. In some embodiments, the cinematography rules are defined with reference to the 180 degree rule, the rule of thirds, head room, balance, leading lines, among other rules.</p><p id="p-0157" num="0156">At step <b>354</b>, it is determined how the virtual camera should be navigated, positioned and/or oriented to capture a scene of interest based on the combination of one or more of overall ranking data <b>326</b> for the plurality of storylines, historical gameplay data <b>328</b>, player data <b>330</b>, and real time match data <b>332</b>, in a game match of the multiplayer video game. At step <b>356</b>, the virtual camera is navigated, positioned and/or oriented to capture video data of a scene of interest determined at step <b>354</b>, subject to a plurality of camera navigation rules, and subject to the plurality of cinematography rules. In some embodiments, the plurality of camera navigation rules comprise at least one of a speed of movement, acceleration of movement, an angular speed of rotation and an angular acceleration of rotation of the virtual camera. In embodiments, the captured video data is broadcasted to one or more spectator devices <b>145</b> over the network <b>115</b>.</p><p id="p-0158" num="0157">In some embodiments, the virtual camera is controlled based on the storyline ranking data <b>326</b> alone. <figref idref="DRAWINGS">FIG. <b>3</b>C</figref> is a computer-implemented method of controlling navigation, positioning and orientation of a virtual camera configured to capture a plurality of scenes of interest in a multiplayer video game for broadcasting to at least one spectator device, in accordance with some embodiments of the present specification. In embodiments, the method is implemented by the camera intelligence module <b>135</b>. Referring now to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>3</b>C</figref>, at step <b>305</b>, the module <b>135</b> either receives from the module <b>130</b> or accesses from the database system <b>150</b>, overall ranking for the plurality of storylines with the scenes of interest in a game match of the multiplayer video game, or a combination of multiple factors including and not limited to the storyline ranking data, gameplay data, player data, and match data.</p><p id="p-0159" num="0158">At step <b>310</b>, the module <b>135</b> either receives from the module <b>130</b> or accesses from the database system <b>150</b>, preferred rules of cinematography to be selectively followed while pursuing the plurality of scenes of interest in the game match of the multiplayer video game. In some embodiments, the cinematography rules are defined with reference to the 180 degree rule, the rule of thirds, head room, balance, leading lines, among other rules.</p><p id="p-0160" num="0159">At step <b>315</b>, it is determined if the virtual camera should be navigated, positioned and/or oriented to capture a scene of interest determined to have a storyline with highest overall ranking amongst the plurality of scenes of interest, subject to a plurality of limiting factors. In some embodiments, the plurality of camera navigation rules are predefined with reference to: a first parameter that limits a distance which the virtual camera must travel to capture the storyline having the highest overall ranking, a second parameter that limits at least one of rotation, tilt and pan required for the virtual camera to capture the highest overall ranking storyline and a third parameter that requires the highest overall ranking of the storyline to exceed an overall ranking of an immediately preceding storyline by a predetermined threshold number of points.</p><p id="p-0161" num="0160">At step <b>320</b>, the virtual camera is navigated, positioned and/or oriented to capture video data of a scene of interest determined to have a highest overall ranking amongst the plurality of storylines, subject to a plurality of camera navigation rules, and subject to the plurality of cinematography rules. In some embodiments, the plurality of camera navigation rules comprise at least one of a speed of movement, acceleration of movement, an angular speed of rotation and an angular acceleration of rotation of the virtual camera. In embodiments, the captured video data is broadcasted to one or more spectator devices <b>145</b> over the network <b>115</b>.</p><p id="p-0162" num="0161">In accordance with aspects of the present specification, the plurality of camera intelligence rules or logic also determines &#x2018;how&#x2019; the module <b>135</b> should navigate/move the camera between different scenes of interest in a game match. In some embodiments, rather than a traditional overhead, third-person, or first-person view of the storylines, the module <b>135</b> enables navigation, positioning and viewing orientation of the virtual camera such that to the spectators it appears as if the virtual camera is being operated on a drone or by a live/human cameraman. The module <b>135</b> achieves this effect by enabling the virtual camera to navigate as if the camera is trying to move, position and orient itself to get an ideal shot of a storyline; however the camera has programmatically imposed limitations that mimic real-world like conditions or constraints in how it can navigate, thereby preventing it from being able to always get into position to record an ideal shot (similar to a real drone or cameraman trying to capture the storyline). In some embodiments, an ideal shot corresponds to moving, positioning and orienting the camera such that two players (from opposing teams) in the first person shooter (FPS) game session are directly in view along an imaginary center vertical line of the game display area/screen. In some embodiments, an ideal shot corresponds to moving, positioning and orienting the camera for focusing on a center point of an imaginary line drawn between the two players. In some embodiments, an ideal viewing position and orientation of the camera is one that further includes as many other players as possible.</p><p id="p-0163" num="0162">In embodiments, the module <b>135</b> acquires positions of the two players, defined in terms of three dimensional coordinates in a virtual map, as well as that of a point midway, also referred to as a center point, on an imaginary ray joining the positions of the two players. In some embodiments, the module <b>135</b> is programmed to cause the virtual camera to adopt a position close to the nearest player, with reference to a current position of the virtual camera at any given point in time, within the scene of interest associated with the two players. The module <b>135</b> is further programmed to cause the virtual camera to offset from the nearest player's position in a direction away from the other player and the center point, so that all three dimensional coordinates related to interactions occurring in the scene of interest, are dimensionally located on a single side of the virtual camera. This ensures that all coordinates or points, relevant to the scene of interest, are in frame. From that location, the virtual camera is allowed to rotate to point towards the center point.</p><p id="p-0164" num="0163">For example, assuming two players are positioned at points A and B, defined by coordinates (X<b>1</b>, Y<b>1</b>, Z<b>1</b>) and (X<b>2</b>, Y<b>2</b>, Z<b>2</b>), respectively, in the virtual game map and further assuming a virtual camera is already positioned at a coordinate that is closer to player B (X<b>2</b>, Y<b>2</b>, Z<b>2</b>) than player A (X<b>1</b>, Y<b>1</b>, Z<b>1</b>), then the module <b>135</b> causes the virtual camera to move to, or be assigned to, a three dimensional coordinate such that 1) the virtual camera is closer to player B than player A, 2) both players A and B are located on one side (right, left, below, above) of the virtual camera and 3) the virtual camera is offset from the position of player B by a predefined orientation and/or distance.</p><p id="p-0165" num="0164">In embodiments, at least the following factors are considered when determining the orientation and distance of an offset of the virtual camera from the nearest player's position: a) the offset must be by a predefined distance of units that may vary based on a game mode and b) the offset position of the virtual camera will not cause a visible game object to be positioned between the virtual camera and one or more players, thereby avoiding an obstruction or blocking of the virtual camera from obtaining a shot from the offset position. In embodiments, the system determines if one or more visible game objects is virtually positioned within the field of view of the virtual camera and if one or more visible game objects block the virtual camera's ability to see the nearest player from the predefined distance &#x2018;d&#x2019;, the virtual camera is re-positioned to reduce the predefined distance of units to a minimum possible distance (from the nearest player) required for an unobstructed shot.</p><p id="p-0166" num="0165">For example, the module <b>135</b> is configured to cause the virtual camera to follow a scene of interest associated with the two players, A and B, such that the virtual camera is at a distance of 196 units behind and 64 units above the nearest player, and continues to follow as close as 128 units behind and 0 units above the nearest player. It should be appreciated that these distances may vary according to at least the different modes of viewing the game. For example, a longer-distance battle-royale mode may require the virtual camera to be programmed to follow the nearest player from a longer distance. While a sporting event, such as boxing, may require a shorter distance mode in which the virtual camera is programmed to follow the nearest player from a shorter distance.</p><p id="p-0167" num="0166"><figref idref="DRAWINGS">FIG. <b>3</b>D</figref> is another computer-implemented method of controlling navigation, positioning and orientation of a virtual camera configured to capture a plurality of scenes of interest in a multiplayer video game for broadcasting to at least one spectator device, in accordance with some embodiments of the present specification. In embodiments, the method is implemented by a combination of modules, such as modules <b>130</b> and <b>135</b> on server <b>105</b>. Referring now to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>3</b>A, and <b>3</b>D</figref>, at step <b>334</b>, information is received and analyzed to identify one or more storylines. As previously described, the term &#x201c;storyline&#x201d; is defined as an in-game, virtual interaction between a first player and at least one other second player or actor in a multiplayer video game. A storyline therefore includes outcomes, occurrences, episodes or events, which occur in a game match and that are of value, significance, appeal, curiosity or interest to a spectator and, therefore, impact the viewership, engagement, learning and/or entertainment value of a video game. At step <b>336</b>, one or more criteria are defined for controlling at least one of the navigation, positioning, or orientation of the virtual camera. Data is considered for the determination, such as including but not limited to historical gameplay data, player information, real-time match data, including game map, location of players within the game map, heat maps, kill locations, action for a given level, and player performance, among other types of data. The module <b>135</b> accesses from the database system <b>150</b>, a combination including one or more of overall ranking data <b>326</b> for the plurality of storylines within the plurality of scenes of interest, historical gameplay data <b>328</b>, player data <b>330</b>, and real time match data <b>332</b>, in a game match of the multiplayer video game. At step <b>338</b>, these data are combined with a plurality of camera navigation rules and subject to specific rules of cinematography, to control the position and movement of the virtual camera. In some embodiments, the plurality of camera navigation rules comprise at least one of a speed of movement, acceleration of movement, an angular speed of rotation and an angular acceleration of rotation of the virtual camera. The module <b>135</b> either receives or accesses from the database system <b>150</b>, preferred rules of cinematography to be selectively followed while pursuing the plurality of storylines in the game match of the multiplayer video game. In some embodiments, the cinematography rules are defined with reference to the 180 degree rule, the rule of thirds, head room, balance, leading lines, among other rules. At step <b>340</b>, the one of the plurality of storylines is broadcast from the server to at least one the computing devices <b>145</b> over the network <b>115</b>.</p><p id="p-0168" num="0167">Using a Live Camera-Person</p><p id="p-0169" num="0168">In some embodiments, the module <b>135</b> is configured to use a motion capture (mocap) movement reference system to manually cause the virtual camera to follow a scene of interest.</p><p id="p-0170" num="0169">In some embodiments, a module <b>160</b> is integrated within one or more game servers <b>105</b>. The module <b>160</b> is configured to integrate mocap controls over the virtual camera. In some embodiments, module <b>160</b> is in communication with module <b>135</b>. In some embodiments, module <b>160</b> is a part of module <b>135</b>. An exemplary method of incorporating the mocap system to control the virtual camera is described in the flow chart of <figref idref="DRAWINGS">FIG. <b>3</b>E</figref>. Referring to <figref idref="DRAWINGS">FIG. <b>3</b>E</figref>, at step <b>342</b>, movement of a human camera person is monitored within a mocap reference system. In embodiments, a motion capture system is integrated with a human who is virtually placed within the game. Motion sensors are attached to a suit that is worn by the live camera-person, who in turn, is placed to move within the game in a mocap studio. The live camera-person traverses the game levels by using mocap and using the captured data to control the in-game cameraman. At step <b>344</b>, movement of the virtual camera is controlled to capture storylines, based on the movement of the human camera person within the mocap reference system. Presence of the virtual camera controlled by a live camera-person enables traversing the game in a manner similar to a camera-person capturing images in real-life situations. Mocap technology is used to capture the movements of the camera-person in the mocap studio. The mocap data is used to control the virtual avatar of the live camera-person, where the virtual avatar is a virtual camera-person. At step <b>346</b>, the storylines captured by using the mocap reference system are broadcast from the server to at least one the computing devices <b>145</b> over the network <b>115</b>.</p><p id="p-0171" num="0170">In the mocap system, the live camera-person wears multiple illuminating markers on a suit worn by the live camera-person. The live camera-person moves around a mocap stage to move inside the game. One or more digital cameras record the movement of the live camera-person while the markers on the suit are illuminated at one or more positions, which are indicative of the movement of the live camera-person. A digital or virtual in-game representation of the camera-person is generated thereafter by analyzing the coordinates of the markers and mapping them onto the corresponding virtual avatar of the in-game camera-person. In embodiments, the live camera-person carries a camera device. The camera device may be any device that enables the camera-person to control the virtual camera in the game. Examples of the camera device include, and are not limited to a gamepad and a monitor, a gamepad and an AR/VR headset, or a device that incorporates motion sensors that allow recording of movements such as tilting, of the camera. Therefore, the in-game camera movement mimics the actual movement of the camera device as controlled by the live camera-person, thereby providing the feeling and benefits of having an actual camera-person in the gameplay. In embodiments, during gameplay, the players of the game in the virtual game world do not see the virtual camera-person. The presence of the camera-person is simply to control the speed and movement of the virtual camera. In some embodiments, the camera device is configured to enable the live camera-person to control the cinematic operations of the virtual camera, such as and not limited to, moving the camera-device, panning-in or out, and fixing the camera view.</p><p id="p-0172" num="0171">In some embodiments, the cinematic control operations performed on the camera device by the live camera-person override the mocap inputs to control the virtual camera. Additionally, in some embodiments, the mocap system's cameras may not capture the camera-person's movements, for a moment or a few. For such glitches, when the mocap system's cameras miss capturing the camera-person's movements, additional motion sensors are placed on the camera-person's suit, which provide a back-up method of capturing the movements.</p><p id="p-0173" num="0172">Virtual players in the game often traverse disproportionately long virtual distances than what a live-cameraperson can physically traverse. Therefore, in embodiments, a scale factor of the camera-person is adjusted to allow for faster traversal within the game.</p><p id="p-0174" num="0173">Further, the camera-person's movements are limited to within the boundaries of the virtual landscape of a game. In some embodiments, the camera-person's in-game movement has the same limits as any other in-game player. The camera-person's movement in the virtual world is subject to the same rules as any other player. The rules may include, for example, inability to walk through solid objects in the game, same jumping/flying abilities as other players, same speed/acceleration limits, among other limitations. In some embodiments, the live camera-person observes the gameplay on a screen or a headset or some other type of display device, and corrects movements to avoid virtual objects.</p><p id="p-0175" num="0174">In some embodiments, the camera-person is provided with additional traversal and movement abilities. The additional traversal abilities may include, among other abilities, the ability to: teleport from one point to another, walk through solid objects, and fly or accelerate/move at higher rates. In some embodiments, a combination of mocap and one or more other input, are used to provide and/or enhance traversal to elevate the camera vertically, while the camera-person's mocap input controls movement in the horizontal plane. In another example, the camera-person uses the controller to select a location in the map that he would teleport to. In yet another example, the camera-person can use a control to alter self-movement speed in game. In one more example, a physical controller is used in conjunction with the camera-person's motion, such as when the camera-person uses the controller to move towards a battle, and then transitions to using mocap to control the camera once the camera-person is near the battle.</p><p id="p-0176" num="0175">Manually controlling the virtual camera, in addition to AI-based computer control, provides several benefits. The factors that are considered when determining the orientation and distance of an offset of the virtual camera from the nearest player's position can be decided instinctively by the live camera-person who may reposition the virtual camera so as to optimize the offset based on a game mode. The human camera person positions the virtual camera such that a visible game object is not positioned between the virtual camera and one or more players, thereby avoiding an obstruction or blocking of the virtual camera from obtaining a shot from the offset position. The camera-person may also control the position, distance, angle, axis, orientation, and other image parameters, based on the camera-persons view within a game.</p><p id="p-0177" num="0176">In some embodiments, the module <b>135</b> enables to move, position, and/or orient the camera to achieve an ideal shot less than 100% of the time. For example, an ideal shot, as defined above, occurs between 1% and 99% of the time, or any numerical increment therein, while, the remainder of time the virtual camera is programmed to provide a shot that is subject to one or more artificially applied constraints to achieve the effect of a real drone or cameraman. Module <b>135</b> is programmed to apply such artificially applied constraints in the form of one or more rules or logic that embody one or more constraining or limiting navigation parameters such as, but not limited to:</p><p id="p-0178" num="0177">Speed of camera movement&#x2014;in some embodiments, a maximum speed and acceleration of the camera is a function of a maximum speed and acceleration of the players in the first person shooter (FPS) game session. For example, in some cases the maximum speed and acceleration of the camera is same as that of the players whereas in other cases the maximum speed and acceleration of the camera are more or less than that of the players. Such variation, of the maximum speed and acceleration of the camera vis-&#xe0;-vis the maximum speed and acceleration of the players, enables creation of an effect that when a player is moving slowly, the camera is able to stay right behind the action or storyline, but when the player suddenly takes off, the camera appears to lag slightly behind the action and eventually catches up when the player slows down.</p><p id="p-0179" num="0178">Angular speed of camera rotation&#x2014;in some embodiments, an angular speed or acceleration of rotation of the camera is constrained to predetermined (yet customizable) degrees per second. This limitation again enables creation of the effect that sometimes the camera is unable to capture a perfect or ideal shot, but eventually catches up to the action.</p><p id="p-0180" num="0179">In some embodiments, the plurality of rules or logic implemented by the module <b>135</b> enable movement, positioning and/or orientation of the camera by considering a plurality of game factors such as, but not limited to, what weapon a player (in the first person shooter (FPS) game session), being followed by the camera, is holding. Thus, in embodiments, the camera is automatically navigated to stay close (to the player) if the player is holding a short range melee weapon while pulling back if the player is using a machine gun.</p><p id="p-0181" num="0180">In some embodiments, the plurality of camera intelligence rules or logic implemented by the module <b>135</b> ensure fail safes in case the camera is no longer capturing the most interesting or highest ranking storyline but it is too undesirable to pan the camera to a new storyline (owing to the plurality of navigational limiting parameters, for example). In some embodiments, therefore, the video output of the camera is allowed to just fade to black and the camera is moved, repositioned or reoriented. In some embodiments, the plurality of camera intelligence rules or logic implemented by the module <b>135</b> performs collision detection such that the camera avoids or otherwise navigates around solid structures and objects in the level.</p><p id="p-0182" num="0181">Spectator Engagement Module <b>140</b></p><p id="p-0183" num="0182">In embodiments, each of the one or more spectator devices <b>145</b> implements the spectator engagement module <b>140</b> that operates as a game viewing application. The module <b>140</b> implements a plurality of instructions or programmatic code to provide a spectator with at least one interface between the spectator and the video data broadcast, of a game match, received from the camera intelligence module <b>135</b>. The engagement module <b>140</b> generates at least one interface to receive the video data broadcasted by the camera intelligence module <b>135</b>, render the video data associated with the game match, and enable the spectator to view a plurality of viewing options. Thus, the module <b>140</b> also captures and processes spectator inputs and interactions with respect to the plurality of viewing options and provides updates to the camera intelligence module <b>135</b> over the network <b>115</b> for subsequent implementation.</p><p id="p-0184" num="0183">In various embodiments, the engagement module <b>140</b> provides a spectator with the following exemplary viewing options:</p><p id="p-0185" num="0184">A GUI (Graphical User Interface) displaying a dashboard comprising information of the top &#x2018;n&#x2019; ranking storylines in a game match, such as the first person shooter (FPS) game session involving Team Alpha and Team Beta. It should be appreciated that the ranking data is periodically generated by the storyline ranking module <b>130</b> and stored/updated in the database system <b>150</b>. The engagement module <b>140</b> accesses the most recently updated ranking data from the database system <b>150</b> and displays on the dashboard. In some embodiments, the module <b>140</b> enables the spectator to choose any one of the &#x2018;n&#x2019; ranking storylines that he would like to view. The spectator's choice of the storyline is communicated to the camera intelligence module <b>135</b> that, as a result, broadcasts the scene of interest corresponding to the chosen storyline to the spectator's device.</p><p id="p-0186" num="0185">A GUI to enable a spectator to filter the scenes of interest. For example, in some embodiments, the spectator can choose to view video data pertaining to storylines involving only x, y and z players or storylines related to only a particular team.</p><p id="p-0187" num="0186">A GUI to enable a spectator to request kill-cam replays during or after completion of a game match. As known to persons of ordinary skill in the art, in first person shooter (FPS) games, killcam refers to a virtual camera that reveals the way that a player was killed, displaying an instant replay of the player's own death through another player's eyes.</p><p id="p-0188" num="0187">A GUI that provides a spectator with a plurality of parameters to affect or control a positioning and/or viewing orientation of the virtual camera that records various scenes of interest. In some embodiments, the plurality of parameters may include tilt and pan options of the virtual camera.</p><p id="p-0189" num="0188">A GUI that enables a spectator to choose a picture-in-picture (PIP) mode of viewing. In PIP mode, a first game video is displayed on the full GUI screen at the same time as a second game video is displayed in a smaller inset window. Sound is usually from the game video displayed on the full GUI screen. In some embodiments, the first and second game videos may be two different scenes of interest or two different views of the same scene of interest. For example, the second game video (rendered in the small inset window) could be a view from a sniper's scope while the first game video (rendered in the full GUI screen) could be the standard storyline view of the sniper. In another example, the first and second game videos could be the two highest ranking storylines. In some embodiments, the engagement module <b>140</b> enables the spectator to toggle between the first and second game videos.</p><p id="p-0190" num="0189">In alternate embodiments, each of the one or more spectator devices <b>145</b> implements the game module <b>120</b>&#x2032; configurable to operate as a game viewing application for the spectator. In accordance with alternate embodiments, the game module <b>120</b>&#x2032; can be operated in either a player-centric or a spectator-centric mode. When operated in the player-centric mode, the game module <b>120</b>&#x2032; allows all functionalities relevant for a player to interact and play the game match. However, when operated in the spectator-centric mode, the game module <b>120</b>&#x2032; allows all functionalities relevant for a spectator to view the game match. Thus, in spectator-centric mode, the game module <b>120</b>&#x2032; generates at least one interface to receive the video data broadcasted by the camera intelligence module <b>135</b>, render the video data associated with the game match, enable the spectator to view the plurality of viewing options, captures and processes spectator inputs and interactions with respect to the plurality of viewing options and provides updates to the camera intelligence module <b>135</b> over the network <b>115</b> for subsequent implementation.</p><p id="p-0191" num="0190">In further alternate embodiments, each of the one or more spectator devices <b>145</b> implements a client software application (such as, for example, the Open Broadcaster Software) that receives the video data, broadcasted by the camera intelligence module <b>135</b>, via a third party video game streaming service such as, for example, Twitch or Mixer.</p><p id="p-0192" num="0191">Embodiments of the present specification enable viewers to gain an enhanced viewing experience by enabling them to control the views captured by the virtual camera. As a result, the viewers or spectators may provide input to change camera angles, play slow motion replays, scrub through the broadcast, and follow different players in a game, among other options, while viewing their scenes of interest. In some embodiments, the received and rendered video data pertains to a default scene of interest determined, by the camera intelligence module <b>135</b>, based on factors including one or more of storyline ranking data, historical gameplay data, player data, and real time match data. Conventionally, the video data is rendered on at least one GUI for viewing by at least one spectator. In some embodiments of the present specification, the video is rendered by a cloud-based rendering facility.</p><p id="p-0193" num="0192">The present specification utilizes cloud rendering and enables cloud renderers to be used to operate as a game viewing application for the spectator. Cloud rendering provides the advantage of virtually infinite computing power to create and render videos and game images with high-speed. Similar to module <b>120</b>&#x2032;, the cloud renderers may be operated in either a player-centric or a spectator-centric mode. When operated in the player-centric mode, the cloud renderers allow all functionalities relevant for a player to interact and play the game match. However, when operated in the spectator-centric mode, the cloud renderers allow all functionalities relevant for a spectator to view the game match. Thus, in spectator-centric mode, the cloud renderers generate at least one interface to receive the video data broadcasted by the camera intelligence module <b>135</b>, render the video data associated with the game match, enable the spectator to view the plurality of viewing options, captures and processes spectator inputs and interactions with respect to the plurality of viewing options and provides updates to the camera intelligence module <b>135</b> over the network <b>115</b> for subsequent implementation. In some embodiments, game logic servers are attached with the cloud renderers. In some other embodiments, the game logic is embedded in the cloud servers and the cloud servers are used to create enhanced views of game play. Therefore, recreation of the game play is offloaded from the end user device, including devices <b>110</b> and <b>145</b>, to the cloud servers. The end user (player and/or spectator) still has a UI that allows control over viewing features, but all the commands get sent to the cloud server for implementation. This way, the end user device is still mainly just a video playback device.</p><p id="p-0194" num="0193">In some embodiments, the cloud renderers of the present specification are used by e-sports streamers, broadcasters, or by game AI, such as including module <b>135</b>, to generate enhanced replays and views, for viewing by the players and spectators. Data stored in the database, and including storyline ranking data <b>326</b>, historical gameplay data <b>328</b>, player data <b>330</b>, and real time match data <b>332</b>, among other types of data, is analyzed by module <b>135</b>. The analyzed data is used by one or more of e-sports streamers, broadcasters, and by game AI, to render data using cloud renderers. In the AI scenario, compelling replays and live broadcasts are created by using cloud-based rendering to stream videos captured by live-camerapersons.</p><p id="p-0195" num="0194"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a computer-implemented method <b>400</b> of enabling at least one spectator to view video data associated with one or more storylines in a game match of a multiplayer video game, in accordance with some embodiments of the present specification. In embodiments, the method <b>400</b> is implemented by the storyline engagement module <b>140</b> on at least one spectator device <b>145</b> corresponding to the at least one spectator. In some embodiments, the method <b>400</b> is implemented at a cloud renderer for at least one spectator device <b>145</b> corresponding to the at least one spectator. Referring now to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>4</b></figref>, at step <b>405</b>, the module <b>140</b> generates at least one GUI to receive video data pertaining to the one or more scenes of interest, broadcasted by the camera intelligence module <b>135</b>. At step <b>410</b>, the video data is rendered on the at least one GUI for viewing by the at least one spectator. It should be appreciated that in some embodiments, the received and rendered video data pertains to a default scene of interest determined, by the camera intelligence module <b>135</b>, associated with a highest overall storyline ranking in the game match (subject to a plurality of rules). In some embodiments, the video is rendered by a cloud-based rendering facility.</p><p id="p-0196" num="0195">At step <b>415</b>, upon request by the at least one spectator (such as by clicking an icon on the at least one GUI generated in step <b>405</b>), the module <b>140</b> generates at least one GUI to display a plurality of options for the at least one spectator to choose from in order to customize the video data being rendered.</p><p id="p-0197" num="0196">If the at least one spectator chooses a first option then, at step <b>420</b>, the module <b>140</b> accesses the most recently updated overall ranking data from the database system <b>150</b> and displays information about the top &#x2018;n&#x2019; overall ranking storylines on at least one GUI. At step <b>425</b>, the at least one spectator chooses any one of the &#x2018;n&#x2019; ranking storylines. At step <b>430</b>, the at least one spectator's choice of the storyline is communicated to the camera intelligence module <b>135</b> that, as a result, broadcasts video data (scene of interest) related to the chosen storyline to the at least one spectator device.</p><p id="p-0198" num="0197">If the at least one spectator chooses a second option then, at step <b>435</b>, the module <b>140</b> displays identification credentials (such as, for example, names) of a plurality of players and/or teams participating in the game match on at least one GUI. At step <b>440</b>, the at least one spectator chooses at least one of the plurality of players and/or teams. At step <b>445</b>, the at least one spectator's choice is communicated to the camera intelligence module <b>135</b> that, as a result, broadcasts video data pertaining to the scene of interest of the chosen at least one player and/or team to the at least one spectator device. In some embodiments, cloud-based rendering is used by module <b>135</b> to broadcast the videos.</p><p id="p-0199" num="0198">If the at least one spectator chooses a third option then, at step <b>450</b>, the module <b>140</b> generates at least one GUI and renders therein kill-cam replays of one or more scenes of interest during or after completion of the game match.</p><p id="p-0200" num="0199">If the at least one spectator chooses a fourth option then, at step <b>455</b>, the module <b>150</b> generates at least one GUI to enable the at least one spectator to choose at least one of a customized positioning and/or viewing orientation of the virtual camera that records various scenes of interest. At step <b>460</b>, the at least one spectator's choice(s) is communicated to the camera intelligence module <b>135</b> that, as a result, broadcasts video data (to the at least one spectator device) of various scenes of interest in accordance with the chosen positioning and/or viewing orientation of the virtual camera.</p><p id="p-0201" num="0200">If the at least one spectator chooses a fifth option then, at step <b>465</b>, the module <b>150</b> generates a picture-in-picture (PIP) mode of viewing video data related to at least two scenes of interest. In PIP mode, a first video data is displayed on the full GUI screen at the same time as a second video data is displayed in a smaller inset window. In some embodiments, the engagement module <b>140</b> enables the at least one spectator to toggle between the first and second video data.</p><p id="p-0202" num="0201">The above examples are merely illustrative of the many applications of the system and method of present specification. Although only a few embodiments of the present specification have been described herein, it should be understood that the present specification might be embodied in many other specific forms without departing from the spirit or scope of the specification. Therefore, the present examples and embodiments are to be considered as illustrative and not restrictive, and the specification may be modified within the scope of the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>We claim:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method of controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game for broadcasting to at least one computing device, said method comprising:<claim-text>analyzing, in at least one server remote from the at least one computing device, data to identify the plurality of storylines;</claim-text><claim-text>defining, in the at least one server, at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera;</claim-text><claim-text>programmatically moving, in the at least one server, the virtual camera to capture one of the plurality of storylines based on the at least one criterion; and</claim-text><claim-text>broadcasting, from the at least one server to the at least one computing device, the one of the plurality of storylines determined based on the at least one criterion.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the programmatically moving the virtual camera is based on one or more cinematography rules.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one criterion comprises at least one of a storyline ranking data, gameplay data, player data, or match data and wherein each of the storyline ranking data, the gameplay data, the player data, and the match data is determined from the multiplayer video game.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein controlling the at least one of the navigation, positioning or orientation of the virtual camera uses the at least one criterion to determine the storyline ranking data.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the at least one criterion comprises combining a base rank from a base criteria and a weighting factor.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the base criteria comprises at least one of a distance between two players in the multiplayer video game, locations of interest in a game map of the multiplayer video game, or virtual items of interest to spectators of the multiplayer video game.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the weighting factor is based on at least one of a relationship between two players, a relative orientation of the two players, or a field of view of the two players.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein controlling the at least one of the navigation, positioning or orientation of the virtual camera is based on storyline ranking data that is generated in real time during the multiplayer video game.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein controlling the at least one of the navigation, positioning or orientation of the virtual camera is based on storyline ranking data that is stored from previously played sessions of the multiplayer video game.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein analyzing data to identify the plurality of storylines comprises identifying at least one event in the multiplayer video game that is of interest to at least one spectator of the multiplayer video game.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the programmatically moving the virtual camera is based on at least one of data specific to players of the multiplayer video game, data applicable to the multiplayer video game, storyline data, storyline ranking data, scenes of interest conveyed by one or more spectators of the multiplayer video game, input from a motion capture movement reference system, camera navigation rules, or cinematography rules.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer implemented method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the camera navigation rules comprise at least one of a speed of movement of the virtual camera, an acceleration of movement of the virtual camera, an angular speed of rotation of the virtual camera, or an angular acceleration of rotation of the virtual camera.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer implemented method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein programmatically moving the virtual camera based on input from the motion capture movement reference system comprises:<claim-text>monitoring movement of a human camera person within the motion capture movement reference system, wherein a virtual equivalent of the human camera person is positioned inside the multiplayer video game environment; and</claim-text><claim-text>programmatically moving the virtual camera to capture one of the plurality of storylines based on the movement of the human camera person.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer implemented method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein programmatically moving the virtual camera comprises enabling the human camera person to control at least one operation of the virtual camera and wherein the at least one operation comprises at least one of moving the camera, panning-in or out, or modifying the camera view.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A system for controlling at least one of a navigation, positioning or orientation of a virtual camera configured to capture a plurality of storylines in a multiplayer video game executing in a plurality of gaming devices and configured to broadcast the multiplayer video game to a plurality of spectator devices, said system comprising:<claim-text>at least one server configured to host a game session of the multiplayer video game and to broadcast the hosted game session to each of the plurality of spectator devices through a network;</claim-text><claim-text>a plurality of gaming modules stored on the plurality of gaming devices remote from the at least one server and configured to enable a plurality of human players to play in the game session of the multiplayer video game;</claim-text><claim-text>a plurality of spectator modules stored on the plurality of spectator devices remote from the at least one server and configured to enable a plurality of human spectators to view the broadcast of the game session, wherein at least a portion of the plurality of spectator modules are executing on at least a portion of the plurality of gaming devices and wherein at least a portion of the plurality of gaming modules are executing on at least a portion of the plurality of spectator devices;</claim-text><claim-text>at least one processor, in the at least one server, wherein the at least one processor is configured to execute a plurality of programmatic instructions to:<claim-text>define a function to identify the plurality of storylines;</claim-text><claim-text>define at least one criterion for controlling the at least one of the navigation, positioning or orientation of the virtual camera;</claim-text><claim-text>programmatically moving the virtual camera to capture one of the plurality of storylines based on the at least one criterion and at least one cinematography rule; and</claim-text><claim-text>broadcasting the captured one of the plurality of storylines to at least a portion of the plurality of gaming modules and/or at least a portion of the spectator modules.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the at least one criterion comprises at least one of a storyline ranking data, gameplay data, player data, or match data and wherein each of the storyline ranking data, the gameplay data, the player data, and the match data is determined from the multiplayer video game.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein controlling the at least one of the navigation, positioning or orientation of the virtual camera uses the at least one criterion to determine the storyline ranking data.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the at least one criterion comprises combining a base rank from a base criteria and a weighting factor.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the base criteria comprises at least one of a distance between two players in the multiplayer video game, locations of interest in a game map of the multiplayer video game, or virtual items of interest to spectators of the multiplayer video game.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the weighting factor is based on at least one of a relationship between two players, a relative orientation of the two players, or a field of view of the two players.</claim-text></claim></claims></us-patent-application>