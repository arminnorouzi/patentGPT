<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007300A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007300</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17903288</doc-number><date>20220906</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>597</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>463</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>597</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>463</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">THREE-DIMENSIONAL DATA ENCODING METHOD, THREE-DIMENSIONAL DATA DECODING METHOD, THREE-DIMENSIONAL DATA ENCODING DEVICE, AND THREE-DIMENSIONAL DATA DECODING DEVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17223667</doc-number><date>20210406</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11483588</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17903288</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/JP2019/040331</doc-number><date>20191011</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17223667</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62744969</doc-number><date>20181012</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Panasonic Intellectual Property Corporation of America</orgname><address><city>Torrance</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SUGIO</last-name><first-name>Toshiyasu</first-name><address><city>Osaka</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>IGUCHI</last-name><first-name>Noritaka</first-name><address><city>Osaka</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A three-dimensional data encoding method includes: dividing three-dimensional points included in point cloud data into processing units each of which includes one or more of the three-dimensional points; and encoding attribute information of a current three-dimensional point included in a current processing unit, by reference to an encoded processing unit, to generate a bitstream.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="55.03mm" wi="158.75mm" file="US20230007300A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="204.72mm" wi="157.73mm" orientation="landscape" file="US20230007300A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="234.19mm" wi="123.78mm" file="US20230007300A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="239.01mm" wi="123.53mm" file="US20230007300A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="249.26mm" wi="173.31mm" file="US20230007300A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="248.16mm" wi="152.99mm" file="US20230007300A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="222.59mm" wi="169.67mm" file="US20230007300A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="247.40mm" wi="146.05mm" file="US20230007300A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="243.16mm" wi="165.35mm" file="US20230007300A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="240.11mm" wi="145.37mm" file="US20230007300A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="241.98mm" wi="174.16mm" file="US20230007300A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="214.38mm" wi="151.98mm" file="US20230007300A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="172.55mm" wi="117.77mm" orientation="landscape" file="US20230007300A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="114.05mm" wi="164.34mm" file="US20230007300A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="246.04mm" wi="139.53mm" orientation="landscape" file="US20230007300A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="163.07mm" wi="165.02mm" file="US20230007300A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="222.33mm" wi="137.33mm" orientation="landscape" file="US20230007300A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="219.46mm" wi="109.30mm" orientation="landscape" file="US20230007300A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="229.02mm" wi="105.41mm" file="US20230007300A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="220.73mm" wi="101.35mm" file="US20230007300A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="163.07mm" wi="165.02mm" file="US20230007300A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="191.52mm" wi="140.04mm" orientation="landscape" file="US20230007300A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="211.41mm" wi="163.24mm" orientation="landscape" file="US20230007300A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="210.82mm" wi="98.81mm" orientation="landscape" file="US20230007300A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="88.22mm" wi="123.87mm" orientation="landscape" file="US20230007300A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="238.25mm" wi="120.48mm" orientation="landscape" file="US20230007300A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="222.33mm" wi="96.27mm" orientation="landscape" file="US20230007300A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="192.96mm" wi="105.58mm" orientation="landscape" file="US20230007300A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="88.56mm" wi="125.73mm" orientation="landscape" file="US20230007300A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="214.88mm" wi="115.06mm" orientation="landscape" file="US20230007300A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="221.32mm" wi="121.16mm" orientation="landscape" file="US20230007300A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="89.58mm" wi="160.61mm" orientation="landscape" file="US20230007300A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="155.70mm" wi="133.35mm" orientation="landscape" file="US20230007300A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="190.16mm" wi="160.44mm" orientation="landscape" file="US20230007300A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="159.51mm" wi="158.67mm" orientation="landscape" file="US20230007300A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="171.03mm" wi="160.44mm" orientation="landscape" file="US20230007300A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="213.61mm" wi="131.23mm" orientation="landscape" file="US20230007300A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="102.62mm" wi="127.17mm" orientation="landscape" file="US20230007300A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="235.20mm" wi="152.91mm" orientation="landscape" file="US20230007300A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00039" num="00039"><img id="EMI-D00039" he="246.04mm" wi="119.80mm" file="US20230007300A1-20230105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00040" num="00040"><img id="EMI-D00040" he="137.33mm" wi="119.63mm" file="US20230007300A1-20230105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00041" num="00041"><img id="EMI-D00041" he="193.21mm" wi="108.88mm" file="US20230007300A1-20230105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00042" num="00042"><img id="EMI-D00042" he="186.69mm" wi="108.88mm" file="US20230007300A1-20230105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00043" num="00043"><img id="EMI-D00043" he="196.26mm" wi="116.33mm" orientation="landscape" file="US20230007300A1-20230105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00044" num="00044"><img id="EMI-D00044" he="222.00mm" wi="99.23mm" file="US20230007300A1-20230105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00045" num="00045"><img id="EMI-D00045" he="228.09mm" wi="120.14mm" file="US20230007300A1-20230105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00046" num="00046"><img id="EMI-D00046" he="213.61mm" wi="143.09mm" orientation="landscape" file="US20230007300A1-20230105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00047" num="00047"><img id="EMI-D00047" he="174.33mm" wi="125.14mm" file="US20230007300A1-20230105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00048" num="00048"><img id="EMI-D00048" he="204.39mm" wi="118.36mm" file="US20230007300A1-20230105-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00049" num="00049"><img id="EMI-D00049" he="213.53mm" wi="160.44mm" file="US20230007300A1-20230105-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00050" num="00050"><img id="EMI-D00050" he="204.39mm" wi="120.82mm" file="US20230007300A1-20230105-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00051" num="00051"><img id="EMI-D00051" he="244.18mm" wi="122.68mm" file="US20230007300A1-20230105-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00052" num="00052"><img id="EMI-D00052" he="255.02mm" wi="112.52mm" file="US20230007300A1-20230105-D00052.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00053" num="00053"><img id="EMI-D00053" he="213.44mm" wi="122.34mm" file="US20230007300A1-20230105-D00053.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00054" num="00054"><img id="EMI-D00054" he="249.51mm" wi="109.30mm" file="US20230007300A1-20230105-D00054.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00055" num="00055"><img id="EMI-D00055" he="215.65mm" wi="109.05mm" file="US20230007300A1-20230105-D00055.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00056" num="00056"><img id="EMI-D00056" he="236.81mm" wi="81.03mm" file="US20230007300A1-20230105-D00056.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00057" num="00057"><img id="EMI-D00057" he="177.55mm" wi="91.86mm" file="US20230007300A1-20230105-D00057.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00058" num="00058"><img id="EMI-D00058" he="169.93mm" wi="85.09mm" file="US20230007300A1-20230105-D00058.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00059" num="00059"><img id="EMI-D00059" he="71.29mm" wi="84.75mm" file="US20230007300A1-20230105-D00059.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00060" num="00060"><img id="EMI-D00060" he="233.51mm" wi="104.73mm" orientation="landscape" file="US20230007300A1-20230105-D00060.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00061" num="00061"><img id="EMI-D00061" he="234.19mm" wi="100.67mm" orientation="landscape" file="US20230007300A1-20230105-D00061.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00062" num="00062"><img id="EMI-D00062" he="202.78mm" wi="110.57mm" file="US20230007300A1-20230105-D00062.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00063" num="00063"><img id="EMI-D00063" he="98.64mm" wi="110.49mm" file="US20230007300A1-20230105-D00063.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00064" num="00064"><img id="EMI-D00064" he="232.66mm" wi="106.76mm" file="US20230007300A1-20230105-D00064.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00065" num="00065"><img id="EMI-D00065" he="104.14mm" wi="81.45mm" file="US20230007300A1-20230105-D00065.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00066" num="00066"><img id="EMI-D00066" he="248.33mm" wi="92.54mm" file="US20230007300A1-20230105-D00066.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00067" num="00067"><img id="EMI-D00067" he="82.80mm" wi="81.36mm" file="US20230007300A1-20230105-D00067.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00068" num="00068"><img id="EMI-D00068" he="234.53mm" wi="92.54mm" file="US20230007300A1-20230105-D00068.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00069" num="00069"><img id="EMI-D00069" he="194.90mm" wi="102.70mm" file="US20230007300A1-20230105-D00069.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><heading id="h-0002" level="1">1. Technical Field</heading><p id="p-0002" num="0001">The present disclosure relates to a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, and a three-dimensional data decoding device.</p><heading id="h-0003" level="1">2. Description of the Related Art</heading><p id="p-0003" num="0002">Devices or services utilizing three-dimensional data are expected to find their widespread use in a wide range of fields, such as computer vision that enables autonomous operations of cars or robots, map information, monitoring, infrastructure inspection, and video distribution. Three-dimensional data is obtained through various means including a distance sensor such as a rangefinder, as well as a stereo camera and a combination of a plurality of monocular cameras.</p><p id="p-0004" num="0003">Methods of representing three-dimensional data include a method known as a point cloud scheme that represents the shape of a three-dimensional structure by a point group in a three-dimensional space. In the point cloud scheme, the positions and colors of a point group are stored. While point cloud is expected to be a mainstream method of representing three-dimensional data, a massive amount of data of a point group necessitates compression of the amount of three-dimensional data by encoding for accumulation and transmission, as in the case of a two-dimensional moving picture (examples include MPEG-4 AVC and HEVC standardized by MPEG).</p><p id="p-0005" num="0004">Meanwhile, point cloud compression is partially supported by, for example, an open-source library (Point Cloud Library) for point cloud-related processing.</p><p id="p-0006" num="0005">Furthermore, a technique for searching for and displaying a facility located in the surroundings of the vehicle is known (for example, see International Publication WO 2014/020663).</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">There has been a demand for reducing the code amount in encoding of three-dimensional data.</p><p id="p-0008" num="0007">The present disclosure has an object to provide a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, or a three-dimensional data decoding device that is capable of reducing the code amount.</p><p id="p-0009" num="0008">A three-dimensional data encoding method according to one aspect of the present disclosure includes: dividing three-dimensional points included in point cloud data into processing units each of which includes one or more of the three-dimensional points; and encoding attribute information of a current three-dimensional point included in a current processing unit, by reference to an encoded processing unit, to generate a bitstream.</p><p id="p-0010" num="0009">A three-dimensional data decoding method according to one aspect of the present disclosure includes: obtaining, from a bitstream, encoded data generated by encoding processing units into which three-dimensional points included in point cloud data are divided and each of which includes one or more of the three-dimensional points; and decoding, from the encoded data, attribute information of a current three-dimensional point included in a current processing unit, by reference to a decoded processing unit.</p><p id="p-0011" num="0010">The present disclosure can provide a three-dimensional data encoding method, a three-dimensional data decoding method, a three-dimensional data encoding device, or a three-dimensional data decoding device that is capable of reducing the amount of processing.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0012" num="0011">These and other objects, advantages and features of the disclosure will become apparent from the following description thereof taken in conjunction with the accompanying drawings that illustrate a specific embodiment of the present disclosure;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram showing the structure of encoded three-dimensional data according to Embodiment 1;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing an example of prediction structures among SPCs that belong to the lowermost layer in a GOS according to Embodiment 1;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram showing an example of prediction structures among layers according to Embodiment 1;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram showing an example order of encoding GOSs according to Embodiment 1;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram showing an example order of encoding GOSs according to Embodiment 1;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 1;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart of encoding processes according to Embodiment 1;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 1;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart of decoding processes according to Embodiment 1;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram showing an example of meta information according to Embodiment 1;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram showing an example structure of a SWLD according to Embodiment 2;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagram showing example operations performed by a server and a client according to Embodiment 2;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram showing example operations performed by the server and a client according to Embodiment 2;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram showing example operations performed by the server and the clients according to Embodiment 2;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a diagram showing example operations performed by the server and the clients according to Embodiment 2;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 2;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flowchart of encoding processes according to Embodiment 2;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 2;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flowchart of decoding processes according to Embodiment 2;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a diagram showing an example structure of a WLD according to Embodiment 2;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram showing an example octree structure of the WLD according to Embodiment 2;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a diagram showing an example structure of a SWLD according to Embodiment 2;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagram showing an example octree structure of the SWLD according to Embodiment 2;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a block diagram of a three-dimensional data creation device according to Embodiment 3;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a block diagram of a three-dimensional data transmission device according to Embodiment 3;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a block diagram of a three-dimensional information processing device according to Embodiment 4;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a block diagram of a three-dimensional data creation device according to Embodiment 5;</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a diagram showing a structure of a system according to Embodiment 6;</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is a block diagram of a client device according to Embodiment 6;</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a block diagram of a server according to Embodiment 6;</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flowchart of a three-dimensional data creation process performed by the client device according to Embodiment 6;</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>32</b></figref> is a flowchart of a sensor information transmission process performed by the client device according to Embodiment 6;</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>33</b></figref> is a flowchart of a three-dimensional data creation process performed by the server according to Embodiment 6;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a flowchart of a three-dimensional map transmission process performed by the server according to Embodiment 6;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is a diagram showing a structure of a variation of the system according to Embodiment 6;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a diagram showing a structure of the server and client devices according to Embodiment 6;</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 7;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram showing an example of a prediction residual according to Embodiment 7;</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram showing an example of a volume according to Embodiment 7;</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram showing an example of an octree representation of the volume according to Embodiment 7;</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>41</b></figref> is a diagram showing an example of bit sequences of the volume according to Embodiment 7;</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a diagram showing an example of an octree representation of a volume according to Embodiment 7;</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>43</b></figref> is a diagram showing an example of the volume according to Embodiment 7;</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>44</b></figref> is a diagram for describing an intra prediction process according to Embodiment 7;</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>45</b></figref> is a diagram for describing a rotation and translation process according to Embodiment 7;</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a diagram showing an example syntax of an RT flag and RT information according to Embodiment 7;</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>47</b></figref> is a diagram for describing an inter prediction process according to Embodiment 7;</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 7;</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>49</b></figref> is a flowchart of a three-dimensional data encoding process performed by the three-dimensional data encoding device according to Embodiment 7;</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a flowchart of a three-dimensional data decoding process performed by the three-dimensional data decoding device according to Embodiment 7;</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is a diagram illustrating a reference relationship in an octree structure according to Embodiment 8;</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>52</b></figref> is a diagram illustrating a reference relationship in a spatial region according to Embodiment 8;</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>53</b></figref> is a diagram illustrating an example of neighbor reference nodes according to Embodiment 8;</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram illustrating a relationship between a parent node and nodes according to Embodiment 8;</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram illustrating an example of an occupancy code of the parent node according to Embodiment 8;</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 8;</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 8;</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a flowchart of a three-dimensional data encoding process according to Embodiment 8;</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a flowchart of a three-dimensional data decoding process according to Embodiment 8;</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>60</b></figref> is a diagram illustrating an example of selecting a coding table according to Embodiment 8;</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>61</b></figref> is a diagram illustrating a reference relationship in a spatial region according to Variation 1 of Embodiment 8;</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>62</b></figref> is a diagram illustrating an example of a syntax of header information according to Variation 1 of Embodiment 8;</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>63</b></figref> is a diagram illustrating an example of a syntax of header information according to Variation 1 of Embodiment 8;</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>64</b></figref> is a diagram illustrating an example of neighbor reference nodes according to Variation 2 of Embodiment 8;</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>65</b></figref> is a diagram illustrating an example of a current node and neighbor nodes according to Variation 2 of Embodiment 8;</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram illustrating a reference relationship in an octree structure according to Variation 3 of Embodiment 8;</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>67</b></figref> is a diagram illustrating a reference relationship in a spatial region according to Variation 3 of Embodiment 8;</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>68</b></figref> is a diagram illustrating an example of three-dimensional points according to Embodiment 9;</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>69</b></figref> is a diagram illustrating an example of setting LoDs according to Embodiment 9;</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>70</b></figref> is a diagram illustrating an example of setting LoDs according to Embodiment 9;</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a diagram illustrating an example of attribute information to be used for predicted values according to Embodiment 9;</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>72</b></figref> is a diagram illustrating examples of exponential-Golomb codes according to Embodiment 9;</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a diagram indicating a process on exponential-Golomb codes according to Embodiment 9;</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>74</b></figref> is a diagram indicating an example of a syntax in attribute header according to Embodiment 9;</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>75</b></figref> is a diagram indicating an example of a syntax in attribute data according to Embodiment 9;</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>76</b></figref> is a flowchart of a three-dimensional data encoding process according to Embodiment 9;</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>77</b></figref> is a flowchart of an attribute information encoding process according to Embodiment 9;</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a diagram indicating processing on exponential-Golomb codes according to Embodiment 9;</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>79</b></figref> is a diagram indicating an example of a reverse lookup table indicating relationships between remaining codes and the values thereof according to Embodiment 9;</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>80</b></figref> is a flowchart of a three-dimensional data decoding process according to Embodiment 9;</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>81</b></figref> is a flowchart of an attribute information decoding process according to Embodiment 9;</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>82</b></figref> is a block diagram of a three-dimensional data encoding device according to Embodiment 9;</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a block diagram of a three-dimensional data decoding device according to Embodiment 9;</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>84</b></figref> is a flowchart of a three-dimensional data encoding process according to Embodiment 9;</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>85</b></figref> is a flowchart of a three-dimensional data decoding process according to Embodiment 9.</p><p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. <b>86</b></figref> is a diagram showing a first example of a table representing predicted values calculated in prediction modes according to Embodiment 10;</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>87</b></figref> is a diagram showing examples of attribute information items (pieces of attribute information) used as the predicted values according to Embodiment 10;</p><p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram showing a second example of a table representing predicted values calculated in the prediction modes according to Embodiment 10;</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a diagram showing a third example of a table representing predicted values calculated in the prediction modes according to Embodiment 10;</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>90</b></figref> is a diagram showing a fourth example of a table representing predicted values calculated in the prediction modes according to Embodiment 10;</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram showing definition example 1 of PU according to Embodiment 11;</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>92</b></figref> is a diagram showing definition example 2 of PU according to Embodiment 11;</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. <b>93</b></figref> is a diagram showing a syntax example of an attribute header according to Embodiment 11;</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>94</b></figref> is a diagram showing a syntax example of attribute data according to Embodiment 11;</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>95</b></figref> is a diagram showing a syntax example of attribute data according to Embodiment 11;</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>96</b></figref> is a flowchart of a process of encoding prediction mode information according to Embodiment 11;</p><p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. <b>97</b></figref> is a flowchart of a process of decoding prediction mode information according to Embodiment 11;</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>98</b></figref> is a flowchart of an encoding process according to Embodiment 11;</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. <b>99</b></figref> is a flowchart of an attribute information encoding process according to Embodiment 11;</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>100</b></figref> is a flowchart of a decoding process according to Embodiment 11;</p><p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. <b>101</b></figref> is a flowchart of an attribute information decoding process according to Embodiment 11;</p><p id="p-0114" num="0113"><figref idref="DRAWINGS">FIG. <b>102</b></figref> is a flowchart of an encoding process according to Embodiment 11; and</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>103</b></figref> is a flowchart of a decoding process according to Embodiment 11.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0116" num="0115">A three-dimensional data encoding method according to one aspect of the present disclosure includes: dividing three-dimensional points included in point cloud data into processing units each of which includes one or more of the three-dimensional points; and encoding attribute information of a current three-dimensional point included in a current processing unit, by reference to an encoded processing unit, to generate a bitstream.</p><p id="p-0117" num="0116">With such a configuration, the reference relationship can be controlled by using the processing unit, so that the processing amount can be reduced.</p><p id="p-0118" num="0117">For example, in the encoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit need not be referred to.</p><p id="p-0119" num="0118">With such a configuration, a plurality of three-dimensional points included in the same processing unit can be processed in parallel.</p><p id="p-0120" num="0119">For example, in the encoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit may be referred to.</p><p id="p-0121" num="0120">With such a configuration, the coding efficiency can be improved by allowing reference to another three-dimensional point included in the same processing unit.</p><p id="p-0122" num="0121">For example, the three-dimensional data encoding method may further include: encoding three-dimensional points included in each of the processing units, using a same prediction mode; and appending, to the bitstream, information indicating a prediction mode used for encoding each of the processing units.</p><p id="p-0123" num="0122">With such a configuration, the processing amount can be reduced by setting a prediction mode on a processing unit basis. In addition, the data amount can be reduced compared with a case where information indicating a prediction mode on a three-dimensional point basis is added to the bitstream.</p><p id="p-0124" num="0123">For example, when a difference between pieces of referable attribute information is less than a predetermined value or a total number of available prediction modes is 1, the information indicating a prediction mode used for encoding the current processing unit need not be appended to the bitstream, and when the difference between the pieces of referable attribute information is greater than the predetermined value and the total number of the available prediction modes is greater than 1, the information indicating the prediction mode used for encoding the current processing unit may be appended to the bitstream.</p><p id="p-0125" num="0124">With such a configuration, the data amount of the bitstream can be reduced.</p><p id="p-0126" num="0125">For example, the bitstream may include information indicating a total number of three-dimensional points included in each of the processing units.</p><p id="p-0127" num="0126">A three-dimensional data decoding method according to one aspect of the present disclosure includes: obtaining, from a bitstream, encoded data generated by encoding processing units into which three-dimensional points included in point cloud data are divided and each of which includes one or more of the three-dimensional points; and decoding, from the encoded data, attribute information of a current three-dimensional point included in a current processing unit, by reference to a decoded processing unit.</p><p id="p-0128" num="0127">With such a configuration, the reference relationship can be controlled by using the processing unit, so that the processing amount can be reduced.</p><p id="p-0129" num="0128">For example, in the decoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit need not be referred to.</p><p id="p-0130" num="0129">With such a configuration, a plurality of three-dimensional points included in the same processing unit can be processed in parallel.</p><p id="p-0131" num="0130">For example, in the decoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit may be referred to.</p><p id="p-0132" num="0131">With such a configuration, the coding efficiency can be improved by allowing reference to another three-dimensional point included in the same processing unit.</p><p id="p-0133" num="0132">For example, the bitstream may include information indicating a prediction mode used for encoding each of the processing units, and three-dimensional points included in each of the processing units may be decoded based on the information, using a same prediction mode.</p><p id="p-0134" num="0133">With such a configuration, the processing amount can be reduced by setting a prediction mode on a processing unit basis. In addition, the data amount can be reduced compared with a case where information indicating a prediction mode on a three-dimensional point basis is added to the bitstream. For example, in the decoding of the attribute information of the current three-dimensional point, when the information indicating a prediction mode used for encoding the current processing unit is not appended to the bitstream, the attribute information of the current three-dimensional point may be decoded using a predetermined prediction mode among prediction modes.</p><p id="p-0135" num="0134">With such a configuration, the data amount of the bitstream can be reduced.</p><p id="p-0136" num="0135">For example, the bitstream may include information indicating a total number of three-dimensional points included in each of the processing units.</p><p id="p-0137" num="0136">A three-dimensional data encoding device according to one aspect of the present disclosure includes: a processor; and memory. Using the memory, the processor: divides three-dimensional points included in point cloud data into processing units each of which includes one or more of the three-dimensional points; and encodes attribute information of a current three-dimensional point included in a current processing unit, by reference to an encoded processing unit, to generate a bitstream.</p><p id="p-0138" num="0137">With such a configuration, the reference relationship can be controlled by using the processing unit, so that the processing amount can be reduced.</p><p id="p-0139" num="0138">A three-dimensional data decoding device according to one aspect of the present disclosure includes: a processor; and memory. Using the memory, the processor: obtains, from a bitstream, encoded data generated by encoding processing units into which three-dimensional points included in point cloud data are divided and each of which includes one or more of the three-dimensional points; and decodes, from the encoded data, attribute information of a current three-dimensional point included in a current processing unit, by reference to a decoded processing unit.</p><p id="p-0140" num="0139">With such a configuration, the reference relationship can be controlled by using the processing unit, so that the processing amount can be reduced.</p><p id="p-0141" num="0140">It is to be noted that these general or specific aspects may be implemented as a system, a method, an integrated circuit, a computer program, or a computer-readable recording medium such as a CD-ROM, or may be implemented as any combination of a system, a method, an integrated circuit, a computer program, and a recording medium.</p><p id="p-0142" num="0141">The following describes embodiments with reference to the drawings. It is to be noted that the following embodiments indicate exemplary embodiments of the present disclosure. The numerical values, shapes, materials, constituent elements, the arrangement and connection of the constituent elements, steps, the processing order of the steps, etc. indicated in the following embodiments are mere examples, and thus are not intended to limit the present disclosure. Of the constituent elements described in the following embodiments, constituent elements not recited in any one of the independent claims that indicate the broadest concepts will be described as optional constituent elements.</p><heading id="h-0007" level="1">Embodiment 1</heading><p id="p-0143" num="0142">First, the data structure of encoded three-dimensional data (hereinafter also referred to as encoded data) according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram showing the structure of encoded three-dimensional data according to the present embodiment.</p><p id="p-0144" num="0143">In the present embodiment, a three-dimensional space is divided into spaces (SPCs), which correspond to pictures in moving picture encoding, and the three-dimensional data is encoded on a SPC-by-SPC basis. Each SPC is further divided into volumes (VLMs), which correspond to macroblocks, etc. in moving picture encoding, and predictions and transforms are performed on a VLM-by-VLM basis. Each volume includes a plurality of voxels (VXLs), each being a minimum unit in which position coordinates are associated. Note that prediction is a process of generating predictive three-dimensional data analogous to a current processing unit by referring to another processing unit, and encoding a differential between the predictive three-dimensional data and the current processing unit, as in the case of predictions performed on two-dimensional images. Such prediction includes not only spatial prediction in which another prediction unit corresponding to the same time is referred to, but also temporal prediction in which a prediction unit corresponding to a different time is referred to.</p><p id="p-0145" num="0144">When encoding a three-dimensional space represented by point group data such as a point cloud, for example, the three-dimensional data encoding device (hereinafter also referred to as the encoding device) encodes the points in the point group or points included in the respective voxels in a collective manner, in accordance with a voxel size. Finer voxels enable a highly-precise representation of the three-dimensional shape of a point group, while larger voxels enable a rough representation of the three-dimensional shape of a point group.</p><p id="p-0146" num="0145">Note that the following describes the case where three-dimensional data is a point cloud, but three-dimensional data is not limited to a point cloud, and thus three-dimensional data of any format may be employed.</p><p id="p-0147" num="0146">Also note that voxels with a hierarchical structure may be used. In such a case, when the hierarchy includes n levels, whether a sampling point is included in the n&#x2212;1th level or lower levels (levels below the n-th level) may be sequentially indicated. For example, when only the n-th level is decoded, and the n&#x2212;1th level or lower levels include a sampling point, the n-th level can be decoded on the assumption that a sampling point is included at the center of a voxel in the n-th level.</p><p id="p-0148" num="0147">Also, the encoding device obtains point group data, using, for example, a distance sensor, a stereo camera, a monocular camera, a gyroscope sensor, or an inertial sensor.</p><p id="p-0149" num="0148">As in the case of moving picture encoding, each SPC is classified into one of at least the three prediction structures that include; intra SPC (I-SPC), which is individually decodable; predictive SPC (P-SPC) capable of only a unidirectional reference; and bidirectional SPC (B-SPC) capable of bidirectional references. Each SPC includes two types of time information; decoding time and display time.</p><p id="p-0150" num="0149">Furthermore, as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a processing unit that includes a plurality of SPCs is a group of spaces (GOS), which is a random access unit. Also, a processing unit that includes a plurality of GOSs is a world (WLD).</p><p id="p-0151" num="0150">The spatial region occupied by each world is associated with an absolute position on earth, by use of, for example, GPS, or latitude and longitude information. Such position information is stored as meta-information. Note that meta-information may be included in encoded data, or may be transmitted separately from the encoded data.</p><p id="p-0152" num="0151">Also, inside a GOS, all SPCs may be three-dimensionally adjacent to one another, or there may be a SPC that is not three-dimensionally adjacent to another SPC.</p><p id="p-0153" num="0152">Note that the following also describes processes such as encoding, decoding, and reference to be performed on three-dimensional data included in processing units such as GOS, SPC, and VLM, simply as performing encoding/to encode, decoding/to decode, referring to, etc. on a processing unit. Also note that three-dimensional data included in a processing unit includes, for example, at least one pair of a spatial position such as three-dimensional coordinates and an attribute value such as color information.</p><p id="p-0154" num="0153">Next, the prediction structures among SPCs in a GOS will be described. A plurality of SPCs in the same GOS or a plurality of VLMs in the same SPC occupy mutually different spaces, while having the same time information (the decoding time and the display time).</p><p id="p-0155" num="0154">A SPC in a GOS that comes first in the decoding order is an I-SPC. GOSs come in two types: closed GOS and open GOS. A closed GOS is a GOS in which all SPCs in the GOS are decodable when decoding starts from the first I-SPC. Meanwhile, an open GOS is a GOS in which a different GOS is referred to in one or more SPCs preceding the first I-SPC in the GOS in the display time, and thus cannot be singly decoded.</p><p id="p-0156" num="0155">Note that in the case of encoded data of map information, for example, a WLD is sometimes decoded in the backward direction, which is opposite to the encoding order, and thus backward reproduction is difficult when GOSs are interdependent. In such a case, a closed GOS is basically used.</p><p id="p-0157" num="0156">Each GOS has a layer structure in height direction, and SPCs are sequentially encoded or decoded from SPCs in the bottom layer;</p><p id="p-0158" num="0157"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing an example of prediction structures among SPCs that belong to the lowermost layer in a GOS. <figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram showing an example of prediction structures among layers.</p><p id="p-0159" num="0158">A GOS includes at least one I-SPC. Of the objects in a three-dimensional space, such as a person, an animal, a car, a bicycle, a signal, and a building serving as a landmark, a small-sized object is especially effective when encoded as an I-SPC. When decoding a GOS at a low throughput or at a high speed, for example, the three-dimensional data decoding device (hereinafter also referred to as the decoding device) decodes only I-SPC(s) in the GOS.</p><p id="p-0160" num="0159">The encoding device may also change the encoding interval or the appearance frequency of I-SPCs, depending on the degree of sparseness and denseness of the objects in a WLD.</p><p id="p-0161" num="0160">In the structure shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the encoding device or the decoding device encodes or decodes a plurality of layers sequentially from the bottom layer (layer 1). This increases the priority of data on the ground and its vicinity, which involve a larger amount of information, when, for example, a self-driving car is concerned.</p><p id="p-0162" num="0161">Regarding encoded data used for a drone, for example, encoding or decoding may be performed sequentially from SPCs in the top layer in a GOS in height direction.</p><p id="p-0163" num="0162">The encoding device or the decoding device may also encode or decode a plurality of layers in a manner that the decoding device can have a rough grasp of a GOS first, and then the resolution is gradually increased. The encoding device or the decoding device may perform encoding or decoding in the order of layers 3, 8, 1, 9 . . . , for example.</p><p id="p-0164" num="0163">Next, the handling of static objects and dynamic objects will be described.</p><p id="p-0165" num="0164">A three-dimensional space includes scenes or still objects such as a building and a road (hereinafter collectively referred to as static objects), and objects with motion such as a car and a person (hereinafter collectively referred to as dynamic objects). Object detection is separately performed by, for example, extracting keypoints from point cloud data, or from video of a camera such as a stereo camera. In this description, an example method of encoding a dynamic object will be described.</p><p id="p-0166" num="0165">A first method is a method in which a static object and a dynamic object are encoded without distinction. A second method is a method in which a distinction is made between a static object and a dynamic object on the basis of identification information.</p><p id="p-0167" num="0166">For example, a GOS is used as an identification unit. In such a case, a distinction is made between a GOS that includes SPCs constituting a static object and a GOS that includes SPCs constituting a dynamic object, on the basis of identification information stored in the encoded data or stored separately from the encoded data.</p><p id="p-0168" num="0167">Alternatively, a SPC may be used as an identification unit. In such a case, a distinction is made between a SPC that includes VLMs constituting a static object and a SPC that includes VLMs constituting a dynamic object, on the basis of the identification information thus described.</p><p id="p-0169" num="0168">Alternatively, a VLM or a VXL may be used as an identification unit. In such a case, a distinction is made between a VLM or a VXL that includes a static object and a VLM or a VXL that includes a dynamic object, on the basis of the identification information thus described.</p><p id="p-0170" num="0169">The encoding device may also encode a dynamic object as at least one VLM or SPC, and may encode a VLM or a SPC including a static object and a SPC including a dynamic object as mutually different GOSs. When the GOS size is variable depending on the size of a dynamic object, the encoding device separately stores the GOS size as meta-information.</p><p id="p-0171" num="0170">The encoding device may also encode a static object and a dynamic object separately from each other, and may superimpose the dynamic object onto a world constituted by static objects. In such a case, the dynamic object is constituted by at least one SPC, and each SPC is associated with at least one SPC constituting the static object onto which the each SPC is to be superimposed. Note that a dynamic object may be represented not by SPC(s) but by at least one VLM or VXL.</p><p id="p-0172" num="0171">The encoding device may also encode a static object and a dynamic object as mutually different streams.</p><p id="p-0173" num="0172">The encoding device may also generate a GOS that includes at least one SPC constituting a dynamic object. The encoding device may further set the size of a GOS including a dynamic object (GOS_M) and the size of a GOS including a static object corresponding to the spatial region of GOS_M at the same size (such that the same spatial region is occupied). This enables superimposition to be performed on a GOS-by-GOS basis.</p><p id="p-0174" num="0173">SPC(s) included in another encoded GOS may be referred to in a P-SPC or a B-SPC constituting a dynamic object. In the case where the position of a dynamic object temporally changes, and the same dynamic object is encoded as an object in a GOS corresponding to a different time, referring to SPC(s) across GOSs is effective in terms of compression rate.</p><p id="p-0175" num="0174">The first method and the second method may be selected in accordance with the intended use of encoded data. When encoded three-dimensional data is used as a map, for example, a dynamic object is desired to be separated, and thus the encoding device uses the second method. Meanwhile, the encoding device uses the first method when the separation of a dynamic object is not required such as in the case where three-dimensional data of an event such as a concert and a sports event is encoded.</p><p id="p-0176" num="0175">The decoding time and the display time of a GOS or a SPC are storable in encoded data or as meta-information. All static objects may have the same time information. In such a case, the decoding device may determine the actual decoding time and display time. Alternatively, a different value may be assigned to each GOS or SPC as the decoding time, and the same value may be assigned as the display time. Furthermore, as in the case of the decoder model in moving picture encoding such as Hypothetical Reference Decoder (HRD) compliant with HEVC, a model may be employed that ensures that a decoder can perform decoding without fail by having a buffer of a predetermined size and by reading a bitstream at a predetermined bit rate in accordance with the decoding times.</p><p id="p-0177" num="0176">Next, the topology of GOSs in a world will be described. The coordinates of the three-dimensional space in a world are represented by the three coordinate axes (x axis, y axis, and z axis) that are orthogonal to one another. A predetermined rule set for the encoding order of GOSs enables encoding to be performed such that spatially adjacent GOSs are contiguous in the encoded data. In an example shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, for example, GOSs in the x and z planes are successively encoded. After the completion of encoding all GOSs in certain x and z planes, the value of the y axis is updated. Stated differently, the world expands in the y axis direction as the encoding progresses. The GOS index numbers are set in accordance with the encoding order.</p><p id="p-0178" num="0177">Here, the three-dimensional spaces in the respective worlds are previously associated one-to-one with absolute geographical coordinates such as GPS coordinates or latitude/longitude coordinates. Alternatively, each three-dimensional space may be represented as a position relative to a previously set reference position. The directions of the x axis, the y axis, and the z axis in the three-dimensional space are represented by directional vectors that are determined on the basis of the latitudes and the longitudes, etc. Such directional vectors are stored together with the encoded data as meta-information.</p><p id="p-0179" num="0178">GOSs have a fixed size, and the encoding device stores such size as meta-information. The GOS size may be changed depending on, for example, whether it is an urban area or not, or whether it is inside or outside of a room. Stated differently, the GOS size may be changed in accordance with the amount or the attributes of objects with information values. Alternatively, in the same world, the encoding device may adaptively change the GOS size or the interval between I-SPCs in GOSs in accordance with the object density, etc. For example, the encoding device sets the GOS size to smaller and the interval between I-SPCs in GOSs to shorter, as the object density is higher.</p><p id="p-0180" num="0179">In an example shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, to enable random access with a finer granularity, a GOS with a high object density is partitioned into the regions of the third to tenth GOSs. Note that the seventh to tenth GOSs are located behind the third to sixth GOSs.</p><p id="p-0181" num="0180">Next, the structure and the operation flow of the three-dimensional data encoding device according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of three-dimensional data encoding device <b>100</b> according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart of an example operation performed by three-dimensional data encoding device <b>100</b>.</p><p id="p-0182" num="0181">Three-dimensional data encoding device <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> encodes three-dimensional data <b>111</b>, thereby generating encoded three-dimensional data <b>112</b>. Such three-dimensional data encoding device <b>100</b> includes obtainer <b>101</b>, encoding region determiner <b>102</b>, divider <b>103</b>, and encoder <b>104</b>.</p><p id="p-0183" num="0182">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, first, obtainer <b>101</b> obtains three-dimensional data <b>111</b>, which is point group data (S<b>101</b>).</p><p id="p-0184" num="0183">Next, encoding region determiner <b>102</b> determines a current region for encoding from among spatial regions corresponding to the obtained point group data (S<b>102</b>). For example, in accordance with the position of a user or a vehicle, encoding region determiner <b>102</b> determines, as the current region, a spatial region around such position.</p><p id="p-0185" num="0184">Next, divider <b>103</b> divides the point group data included in the current region into processing units. The processing units here means units such as GOSs and SPCs described above. The current region here corresponds to, for example, a world described above. More specifically, divider <b>103</b> divides the point group data into processing units on the basis of a predetermined GOS size, or the presence/absence/size of a dynamic object (S<b>103</b>). Divider <b>103</b> further determines the starting position of the SPC that comes first in the encoding order in each GOS.</p><p id="p-0186" num="0185">Next, encoder <b>104</b> sequentially encodes a plurality of SPCs in each GOS, thereby generating encoded three-dimensional data <b>112</b> (S<b>104</b>).</p><p id="p-0187" num="0186">Note that although an example is described here in which the current region is divided into GOSs and SPCs, after which each GOS is encoded, the processing steps are not limited to this order. For example, steps may be employed in which the structure of a single GOS is determined, which is followed by the encoding of such GOS, and then the structure of the subsequent GOS is determined.</p><p id="p-0188" num="0187">As thus described, three-dimensional data encoding device <b>100</b> encodes three-dimensional data <b>111</b>, thereby generating encoded three-dimensional data <b>112</b>. More specifically, three-dimensional data encoding device <b>100</b> divides three-dimensional data into first processing units (GOSs), each being a random access unit and being associated with three-dimensional coordinates, divides each of the first processing units (GOSs) into second processing units (SPCs), and divides each of the second processing units (SPCs) into third processing units (VLMs). Each of the third processing units (VLMs) includes at least one voxel (VXL), which is the minimum unit in which position information is associated.</p><p id="p-0189" num="0188">Next, three-dimensional data encoding device <b>100</b> encodes each of the first processing units (GOSs), thereby generating encoded three-dimensional data <b>112</b>. More specifically, three-dimensional data encoding device <b>100</b> encodes each of the second processing units (SPCs) in each of the first processing units (GOSs). Three-dimensional data encoding device <b>100</b> further encodes each of the third processing units (VLMs) in each of the second processing units (SPCs).</p><p id="p-0190" num="0189">When a current first processing unit (GOS) is a closed GOS, for example, three-dimensional data encoding device <b>100</b> encodes a current second processing unit (SPC) included in such current first processing unit (GOS) by referring to another second processing unit (SPC) included in the current first processing unit (GOS). Stated differently, three-dimensional data encoding device <b>100</b> refers to no second processing unit (SPC) included in a first processing unit (GOS) that is different from the current first processing unit (GOS).</p><p id="p-0191" num="0190">Meanwhile, when a current first processing unit (GOS) is an open GOS, three-dimensional data encoding device <b>100</b> encodes a current second processing unit (SPC) included in such current first processing unit (GOS) by referring to another second processing unit (SPC) included in the current first processing unit (GOS) or a second processing unit (SPC) included in a first processing unit (GOS) that is different from the current first processing unit (GOS).</p><p id="p-0192" num="0191">Also, three-dimensional data encoding device <b>100</b> selects, as the type of a current second processing unit (SPC), one of the following: a first type (I-SPC) in which another second processing unit (SPC) is not referred to; a second type (P-SPC) in which another single second processing unit (SPC) is referred to; and a third type in which other two second processing units (SPC) are referred to. Three-dimensional data encoding device <b>100</b> encodes the current second processing unit (SPC) in accordance with the selected type.</p><p id="p-0193" num="0192">Next, the structure and the operation flow of the three-dimensional data decoding device according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of three-dimensional data decoding device <b>200</b> according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart of an example operation performed by three-dimensional data decoding device <b>200</b>.</p><p id="p-0194" num="0193">Three-dimensional data decoding device <b>200</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> decodes encoded three-dimensional data <b>211</b>, thereby generating decoded three-dimensional data <b>212</b>. Encoded three-dimensional data <b>211</b> here is, for example, encoded three-dimensional data <b>112</b> generated by three-dimensional data encoding device <b>100</b>. Such three-dimensional data decoding device <b>200</b> includes obtainer <b>201</b>, decoding start GOS determiner <b>202</b>, decoding SPC determiner <b>203</b>, and decoder <b>204</b>.</p><p id="p-0195" num="0194">First, obtainer <b>201</b> obtains encoded three-dimensional data <b>211</b> (S<b>201</b>). Next, decoding start GOS determiner <b>202</b> determines a current GOS for decoding (S<b>202</b>). More specifically, decoding start GOS determiner <b>202</b> refers to meta-information stored in encoded three-dimensional data <b>211</b> or stored separately from the encoded three-dimensional data to determine, as the current GOS, a GOS that includes a SPC corresponding to the spatial position, the object, or the time from which decoding is to start.</p><p id="p-0196" num="0195">Next, decoding SPC determiner <b>203</b> determines the type(s) (I, P, and/or B) of SPCs to be decoded in the GOS (S<b>203</b>). For example, decoding SPC determiner <b>203</b> determines whether to (1) decode only I-SPC(s), (2) to decode I-SPC(s) and P-SPCs, or (3) to decode SPCs of all types. Note that the present step may not be performed, when the type(s) of SPCs to be decoded are previously determined such as when all SPCs are previously determined to be decoded.</p><p id="p-0197" num="0196">Next, decoder <b>204</b> obtains an address location within encoded three-dimensional data <b>211</b> from which a SPC that comes first in the GOS in the decoding order (the same as the encoding order) starts. Decoder <b>204</b> obtains the encoded data of the first SPC from the address location, and sequentially decodes the SPCs from such first SPC (S<b>204</b>). Note that the address location is stored in the meta-information, etc.</p><p id="p-0198" num="0197">Three-dimensional data decoding device <b>200</b> decodes decoded three-dimensional data <b>212</b> as thus described. More specifically, three-dimensional data decoding device <b>200</b> decodes each encoded three-dimensional data <b>211</b> of the first processing units (GOSs), each being a random access unit and being associated with three-dimensional coordinates, thereby generating decoded three-dimensional data <b>212</b> of the first processing units (GOSs). Even more specifically, three-dimensional data decoding device <b>200</b> decodes each of the second processing units (SPCs) in each of the first processing units (GOSs). Three-dimensional data decoding device <b>200</b> further decodes each of the third processing units (VLMs) in each of the second processing units (SPCs).</p><p id="p-0199" num="0198">The following describes meta-information for random access. Such meta-information is generated by three-dimensional data encoding device <b>100</b>, and included in encoded three-dimensional data <b>112</b> (<b>211</b>).</p><p id="p-0200" num="0199">In the conventional random access for a two-dimensional moving picture, decoding starts from the first frame in a random access unit that is close to a specified time. Meanwhile, in addition to times, random access to spaces (coordinates, objects, etc.) is assumed to be performed in a world.</p><p id="p-0201" num="0200">To enable random access to at least three elements of coordinates, objects, and times, tables are prepared that associate the respective elements with the GOS index numbers. Furthermore, the GOS index numbers are associated with the addresses of the respective first I-SPCs in the GOSs. <figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram showing example tables included in the meta-information. Note that not all the tables shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> are required to be used, and thus at least one of the tables is used.</p><p id="p-0202" num="0201">The following describes an example in which random access is performed from coordinates as a starting point. To access the coordinates (x2, y2, and z2), the coordinates-GOS table is first referred to, which indicates that the point corresponding to the coordinates (x2, y2, and z2) is included in the second GOS. Next, the GOS-address table is referred to, which indicates that the address of the first I-SPC in the second GOS is addr(2). As such, decoder <b>204</b> obtains data from this address to start decoding.</p><p id="p-0203" num="0202">Note that the addresses may either be logical addresses or physical addresses of an HDD or a memory. Alternatively, information that identifies file segments may be used instead of addresses. File segments are, for example, units obtained by segmenting at least one GOS, etc.</p><p id="p-0204" num="0203">When an object spans across a plurality of GOSs, the object-GOS table may show a plurality of GOSs to which such object belongs. When such plurality of GOSs are closed GOSs, the encoding device and the decoding device can perform encoding or decoding in parallel. Meanwhile, when such plurality of GOSs are open GOSs, a higher compression efficiency is achieved by the plurality of GOSs referring to each other.</p><p id="p-0205" num="0204">Example objects include a person, an animal, a car, a bicycle, a signal, and a building serving as a landmark. For example, three-dimensional data encoding device <b>100</b> extracts keypoints specific to an object from a three-dimensional point cloud, etc., when encoding a world, and detects the object on the basis of such keypoints to set the detected object as a random access point.</p><p id="p-0206" num="0205">As thus described, three-dimensional data encoding device <b>100</b> generates first information indicating a plurality of first processing units (GOSs) and the three-dimensional coordinates associated with the respective first processing units (GOSs). Encoded three-dimensional data <b>112</b> (<b>211</b>) includes such first information. The first information further indicates at least one of objects, times, and data storage locations that are associated with the respective first processing units (GOSs).</p><p id="p-0207" num="0206">Three-dimensional data decoding device <b>200</b> obtains the first information from encoded three-dimensional data <b>211</b>. Using such first information, three-dimensional data decoding device <b>200</b> identifies encoded three-dimensional data <b>211</b> of the first processing unit that corresponds to the specified three-dimensional coordinates, object, or time, and decodes encoded three-dimensional data <b>211</b>.</p><p id="p-0208" num="0207">The following describes an example of other meta-information. In addition to the meta-information for random access, three-dimensional data encoding device <b>100</b> may also generate and store meta-information as described below, and three-dimensional data decoding device <b>200</b> may use such meta-information at the time of decoding.</p><p id="p-0209" num="0208">When three-dimensional data is used as map information, for example, a profile is defined in accordance with the intended use, and information indicating such profile may be included in meta-information. For example, a profile is defined for an urban or a suburban area, or for a flying object, and the maximum or minimum size, etc. of a world, a SPC or a VLM, etc. is defined in each profile. For example, more detailed information is required for an urban area than for a suburban area, and thus the minimum VLM size is set to small.</p><p id="p-0210" num="0209">The meta-information may include tag values indicating object types. Each of such tag values is associated with VLMs, SPCs, or GOSs that constitute an object. For example, a tag value may be set for each object type in a manner, for example, that the tag value &#x201c;0&#x201d; indicates &#x201c;person,&#x201d; the tag value &#x201c;1&#x201d; indicates &#x201c;car,&#x201d; and the tag value &#x201c;2&#x201d; indicates &#x201c;signal&#x201d;. Alternatively, when an object type is hard to judge, or such judgment is not required, a tag value may be used that indicates the size or the attribute indicating, for example, whether an object is a dynamic object or a static object.</p><p id="p-0211" num="0210">The meta-information may also include information indicating a range of the spatial region occupied by a world.</p><p id="p-0212" num="0211">The meta-information may also store the SPC or VXL size as header information common to the whole stream of the encoded data or to a plurality of SPCs, such as SPCs in a GOS.</p><p id="p-0213" num="0212">The meta-information may also include identification information on a distance sensor or a camera that has been used to generate a point cloud, or information indicating the positional accuracy of a point group in the point cloud.</p><p id="p-0214" num="0213">The meta-information may also include information indicating whether a world is made only of static objects or includes a dynamic object.</p><p id="p-0215" num="0214">The following describes variations of the present embodiment.</p><p id="p-0216" num="0215">The encoding device or the decoding device may encode or decode two or more mutually different SPCs or GOSs in parallel. GOSs to be encoded or decoded in parallel can be determined on the basis of meta-information, etc. indicating the spatial positions of the GOSs.</p><p id="p-0217" num="0216">When three-dimensional data is used as a spatial map for use by a car or a flying object, etc. in traveling, or for creation of such a spatial map, for example, the encoding device or the decoding device may encode or decode GOSs or SPCs included in a space that is identified on the basis of GPS information, the route information, the zoom magnification, etc.</p><p id="p-0218" num="0217">The decoding device may also start decoding sequentially from a space that is close to the self-location or the traveling route. The encoding device or the decoding device may give a lower priority to a space distant from the self-location or the traveling route than the priority of a nearby space to encode or decode such distant place. To &#x201c;give a lower priority&#x201d; means here, for example, to lower the priority in the processing sequence, to decrease the resolution (to apply decimation in the processing), or to lower the image quality (to increase the encoding efficiency by, for example, setting the quantization step to larger).</p><p id="p-0219" num="0218">When decoding encoded data that is hierarchically encoded in a space, the decoding device may decode only the bottom layer in the hierarchy.</p><p id="p-0220" num="0219">The decoding device may also start decoding preferentially from the bottom layer of the hierarchy in accordance with the zoom magnification or the intended use of the map.</p><p id="p-0221" num="0220">For self-location estimation or object recognition, etc. involved in the self-driving of a car or a robot, the encoding device or the decoding device may encode or decode regions at a lower resolution, except for a region that is lower than or at a specified height from the ground (the region to be recognized).</p><p id="p-0222" num="0221">The encoding device may also encode point clouds representing the spatial shapes of a room interior and a room exterior separately. For example, the separation of a GOS representing a room interior (interior GOS) and a GOS representing a room exterior (exterior GOS) enables the decoding device to select a GOS to be decoded in accordance with a viewpoint location, when using the encoded data.</p><p id="p-0223" num="0222">The encoding device may also encode an interior GOS and an exterior GOS having close coordinates so that such GOSs come adjacent to each other in an encoded stream. For example, the encoding device associates the identifiers of such GOSs with each other, and stores information indicating the associated identifiers into the meta-information that is stored in the encoded stream or stored separately. This enables the decoding device to refer to the information in the meta-information to identify an interior GOS and an exterior GOS having close coordinates.</p><p id="p-0224" num="0223">The encoding device may also change the GOS size or the SPC size depending on whether a GOS is an interior GOS or an exterior GOS. For example, the encoding device sets the size of an interior GOS to smaller than the size of an exterior GOS. The encoding device may also change the accuracy of extracting keypoints from a point cloud, or the accuracy of detecting objects, for example, depending on whether a GOS is an interior GOS or an exterior GOS.</p><p id="p-0225" num="0224">The encoding device may also add, to encoded data, information by which the decoding device displays objects with a distinction between a dynamic object and a static object. This enables the decoding device to display a dynamic object together with, for example, a red box or letters for explanation. Note that the decoding device may display only a red box or letters for explanation, instead of a dynamic object. The decoding device may also display more particular object types. For example, a red box may be used for a car, and a yellow box may be used for a person.</p><p id="p-0226" num="0225">The encoding device or the decoding device may also determine whether to encode or decode a dynamic object and a static object as a different SPC or GOS, in accordance with, for example, the appearance frequency of dynamic objects or a ratio between static objects and dynamic objects. For example, when the appearance frequency or the ratio of dynamic objects exceeds a threshold, a SPC or a GOS including a mixture of a dynamic object and a static object is accepted, while when the appearance frequency or the ratio of dynamic objects is below a threshold, a SPC or GOS including a mixture of a dynamic object and a static object is unaccepted.</p><p id="p-0227" num="0226">When detecting a dynamic object not from a point cloud but from two-dimensional image information of a camera, the encoding device may separately obtain information for identifying a detection result (box or letters) and the object position, and encode these items of information as part of the encoded three-dimensional data. In such a case, the decoding device superimposes auxiliary information (box or letters) indicating the dynamic object onto a resultant of decoding a static object to display it.</p><p id="p-0228" num="0227">The encoding device may also change the sparseness and denseness of VXLs or VLMs in a SPC in accordance with the degree of complexity of the shape of a static object. For example, the encoding device sets VXLs or VLMs at a higher density as the shape of a static object is more complex. The encoding device may further determine a quantization step, etc. for quantizing spatial positions or color information in accordance with the sparseness and denseness of VXLs or VLMs. For example, the encoding device sets the quantization step to smaller as the density of VXLs or VLMs is higher.</p><p id="p-0229" num="0228">As described above, the encoding device or the decoding device according to the present embodiment encodes or decodes a space on a SPC-by-SPC basis that includes coordinate information.</p><p id="p-0230" num="0229">Furthermore, the encoding device and the decoding device perform encoding or decoding on a volume-by-volume basis in a SPC. Each volume includes a voxel, which is the minimum unit in which position information is associated.</p><p id="p-0231" num="0230">Also, using a table that associates the respective elements of spatial information including coordinates, objects, and times with GOSs or using a table that associates these elements with each other, the encoding device and the decoding device associate any ones of the elements with each other to perform encoding or decoding. The decoding device uses the values of the selected elements to determine the coordinates, and identifies a volume, a voxel, or a SPC from such coordinates to decode a SPC including such volume or voxel, or the identified SPC.</p><p id="p-0232" num="0231">Furthermore, the encoding device determines a volume, a voxel, or a SPC that is selectable in accordance with the elements, through extraction of keypoints and object recognition, and encodes the determined volume, voxel, or SPC, as a volume, a voxel, or a SPC to which random access is possible.</p><p id="p-0233" num="0232">SPCs are classified into three types: I-SPC that is singly encodable or decodable; P-SPC that is encoded or decoded by referring to any one of the processed SPCs; and B-SPC that is encoded or decoded by referring to any two of the processed SPCs.</p><p id="p-0234" num="0233">At least one volume corresponds to a static object or a dynamic object. A SPC including a static object and a SPC including a dynamic object are encoded or decoded as mutually different GOSs. Stated differently, a SPC including a static object and a SPC including a dynamic object are assigned to different GOSs.</p><p id="p-0235" num="0234">Dynamic objects are encoded or decoded on an object-by-object basis, and are associated with at least one SPC including a static object. Stated differently, a plurality of dynamic objects are individually encoded, and the obtained encoded data of the dynamic objects is associated with a SPC including a static object.</p><p id="p-0236" num="0235">The encoding device and the decoding device give an increased priority to I-SPC(s) in a GOS to perform encoding or decoding. For example, the encoding device performs encoding in a manner that prevents the degradation of I-SPCs (in a manner that enables the original three-dimensional data to be reproduced with a higher fidelity after decoded). The decoding device decodes, for example, only I-SPCs.</p><p id="p-0237" num="0236">The encoding device may change the frequency of using I-SPCs depending on the sparseness and denseness or the number (amount) of the objects in a world to perform encoding. Stated differently, the encoding device changes the frequency of selecting I-SPCs depending on the number or the sparseness and denseness of the objects included in the three-dimensional data. For example, the encoding device uses I-SPCs at a higher frequency as the density of the objects in a world is higher.</p><p id="p-0238" num="0237">The encoding device also sets random access points on a GOS-by-GOS basis, and stores information indicating the spatial regions corresponding to the GOSs into the header information.</p><p id="p-0239" num="0238">The encoding device uses, for example, a default value as the spatial size of a GOS. Note that the encoding device may change the GOS size depending on the number (amount) or the sparseness and denseness of objects or dynamic objects. For example, the encoding device sets the spatial size of a GOS to smaller as the density of objects or dynamic objects is higher or the number of objects or dynamic objects is greater.</p><p id="p-0240" num="0239">Also, each SPC or volume includes a keypoint group that is derived by use of information obtained by a sensor such as a depth sensor, a gyroscope sensor, or a camera sensor. The coordinates of the keypoints are set at the central positions of the respective voxels. Furthermore, finer voxels enable highly accurate position information.</p><p id="p-0241" num="0240">The keypoint group is derived by use of a plurality of pictures. A plurality of pictures include at least two types of time information: the actual time information and the same time information common to a plurality of pictures that are associated with SPCs (for example, the encoding time used for rate control, etc.).</p><p id="p-0242" num="0241">Also, encoding or decoding is performed on a GOS-by-GOS basis that includes at least one SPC.</p><p id="p-0243" num="0242">The encoding device and the decoding device predict P-SPCs or B-SPCs in a current GOS by referring to SPCs in a processed GOS.</p><p id="p-0244" num="0243">Alternatively, the encoding device and the decoding device predict P-SPCs or B-SPCs in a current GOS, using the processed SPCs in the current GOS, without referring to a different GOS.</p><p id="p-0245" num="0244">Furthermore, the encoding device and the decoding device transmit or receive an encoded stream on a world-by-world basis that includes at least one GOS.</p><p id="p-0246" num="0245">Also, a GOS has a layer structure in one direction at least in a world, and the encoding device and the decoding device start encoding or decoding from the bottom layer. For example, a random accessible GOS belongs to the lowermost layer. A GOS that belongs to the same layer or a lower layer is referred to in a GOS that belongs to an upper layer. Stated differently, a GOS is spatially divided in a predetermined direction in advance to have a plurality of layers, each including at least one SPC. The encoding device and the decoding device encode or decode each SPC by referring to a SPC included in the same layer as the each SPC or a SPC included in a layer lower than that of the each SPC.</p><p id="p-0247" num="0246">Also, the encoding device and the decoding device successively encode or decode GOSs on a world-by-world basis that includes such GOSs. In so doing, the encoding device and the decoding device write or read out information indicating the order (direction) of encoding or decoding as metadata. Stated differently, the encoded data includes information indicating the order of encoding a plurality of GOSs.</p><p id="p-0248" num="0247">The encoding device and the decoding device also encode or decode mutually different two or more SPCs or GOSs in parallel.</p><p id="p-0249" num="0248">Furthermore, the encoding device and the decoding device encode or decode the spatial information (coordinates, size, etc.) on a SPC or a GOS.</p><p id="p-0250" num="0249">The encoding device and the decoding device encode or decode SPCs or GOSs included in an identified space that is identified on the basis of external information on the self-location or/and region size, such as GPS information, route information, or magnification.</p><p id="p-0251" num="0250">The encoding device or the decoding device gives a lower priority to a space distant from the self-location than the priority of a nearby space to perform encoding or decoding.</p><p id="p-0252" num="0251">The encoding device sets a direction at one of the directions in a world, in accordance with the magnification or the intended use, to encode a GOS having a layer structure in such direction. Also, the decoding device decodes a GOS having a layer structure in one of the directions in a world that has been set in accordance with the magnification or the intended use, preferentially from the bottom layer.</p><p id="p-0253" num="0252">The encoding device changes the accuracy of extracting keypoints, the accuracy of recognizing objects, or the size of spatial regions, etc. included in a SPC, depending on whether an object is an interior object or an exterior object. Note that the encoding device and the decoding device encode or decode an interior GOS and an exterior GOS having close coordinates in a manner that these GOSs come adjacent to each other in a world, and associate their identifiers with each other for encoding and decoding.</p><heading id="h-0008" level="1">Embodiment 2</heading><p id="p-0254" num="0253">When using encoded data of a point cloud in an actual device or service, it is desirable that necessary information be transmitted/received in accordance with the intended use to reduce the network bandwidth. However, there has been no such functionality in the structure of encoding three-dimensional data, nor an encoding method therefor.</p><p id="p-0255" num="0254">The present embodiment describes a three-dimensional data encoding method and a three-dimensional data encoding device for providing the functionality of transmitting/receiving only necessary information in encoded data of a three-dimensional point cloud in accordance with the intended use, as well as a three-dimensional data decoding method and a three-dimensional data decoding device for decoding such encoded data.</p><p id="p-0256" num="0255">A voxel (VXL) with a feature greater than or equal to a given amount is defined as a feature voxel (FVXL), and a world (WLD) constituted by FVXLs is defined as a sparse world (SWLD). <figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram showing example structures of a sparse world and a world. A SWLD includes: FGOSs, each being a GOS constituted by FVXLs; FSPCs, each being a SPC constituted by FVXLs; and FVLMs, each being a VLM constituted by FVXLs. The data structure and prediction structure of a FGOS, a FSPC, and a FVLM may be the same as those of a GOS, a SPC, and a VLM.</p><p id="p-0257" num="0256">A feature represents the three-dimensional position information on a VXL or the visible-light information on the position of a VXL. A large number of features are detected especially at a corner, an edge, etc. of a three-dimensional object. More specifically, such a feature is a three-dimensional feature or a visible-light feature as described below, but may be any feature that represents the position, luminance, or color information, etc. on a VXL.</p><p id="p-0258" num="0257">Used as three-dimensional features are signature of histograms of orientations (SHOT) features, point feature histograms (PFH) features, or point pair feature (PPF) features.</p><p id="p-0259" num="0258">SHOT features are obtained by dividing the periphery of a VXL, and calculating an inner product of the reference point and the normal vector of each divided region to represent the calculation result as a histogram. SHOT features are characterized by a large number of dimensions and high-level feature representation.</p><p id="p-0260" num="0259">PFH features are obtained by selecting a large number of two point pairs in the vicinity of a VXL, and calculating the normal vector, etc. from each two point pair to represent the calculation result as a histogram. PFH features are histogram features, and thus are characterized by robustness against a certain extent of disturbance and also high-level feature representation.</p><p id="p-0261" num="0260">PPF features are obtained by using a normal vector, etc. for each two points of VXLs. PPF features, for which all VXLs are used, has robustness against occlusion.</p><p id="p-0262" num="0261">Used as visible-light features are scale-invariant feature transform (SIFT), speeded up robust features (SURF), or histogram of oriented gradients (HOG), etc. that use information on an image such as luminance gradient information.</p><p id="p-0263" num="0262">A SWLD is generated by calculating the above-described features of the respective VXLs in a WLD to extract FVXLs. Here, the SWLD may be updated every time the WLD is updated, or may be regularly updated after the elapse of a certain period of time, regardless of the timing at which the WLD is updated.</p><p id="p-0264" num="0263">A SWLD may be generated for each type of features. For example, different SWLDs may be generated for the respective types of features, such as SWLD<b>1</b> based on SHOT features and SWLD<b>2</b> based on SIFT features so that SWLDs are selectively used in accordance with the intended use. Also, the calculated feature of each FVXL may be held in each FVXL as feature information.</p><p id="p-0265" num="0264">Next, the usage of a sparse world (SWLD) will be described. A SWLD includes only feature voxels (FVXLs), and thus its data size is smaller in general than that of a WLD that includes all VXLs.</p><p id="p-0266" num="0265">In an application that utilizes features for a certain purpose, the use of information on a SWLD instead of a WLD reduces the time required to read data from a hard disk, as well as the bandwidth and the time required for data transfer over a network. For example, a WLD and a SWLD are held in a server as map information so that map information to be sent is selected between the WLD and the SWLD in accordance with a request from a client. This reduces the network bandwidth and the time required for data transfer. More specific examples will be described below;</p><p id="p-0267" num="0266"><figref idref="DRAWINGS">FIG. <b>12</b></figref> and <figref idref="DRAWINGS">FIG. <b>13</b></figref> are diagrams showing usage examples of a SWLD and a WLD. As <figref idref="DRAWINGS">FIG. <b>12</b></figref> shows, when client <b>1</b>, which is a vehicle-mounted device, requires map information to use it for self-location determination, client <b>1</b> sends to a server a request for obtaining map data for self-location estimation (S<b>301</b>). The server sends to client <b>1</b> the SWLD in response to the obtainment request (S<b>302</b>). Client <b>1</b> uses the received SWLD to determine the self-location (S<b>303</b>). In so doing, client <b>1</b> obtains VXL information on the periphery of client <b>1</b> through various means including a distance sensor such as a rangefinder, as well as a stereo camera and a combination of a plurality of monocular cameras. Client <b>1</b> then estimates the self-location information from the obtained VXL information and the SWLD. Here, the self-location information includes three-dimensional position information, orientation, etc. of client <b>1</b>.</p><p id="p-0268" num="0267">As <figref idref="DRAWINGS">FIG. <b>13</b></figref> shows, when client <b>2</b>, which is a vehicle-mounted device, requires map information to use it for rendering a map such as a three-dimensional map, client <b>2</b> sends to the server a request for obtaining map data for map rendering (S<b>311</b>). The server sends to client <b>2</b> the WLD in response to the obtainment request (S<b>312</b>). Client <b>2</b> uses the received WLD to render a map (S<b>313</b>). In so doing, client <b>2</b> uses, for example, image client <b>2</b> has captured by a visible-light camera, etc. and the WLD obtained from the server to create a rendering image, and renders such created image onto a screen of a car navigation system, etc.</p><p id="p-0269" num="0268">As described above, the server sends to a client a SWLD when the features of the respective VXLs are mainly required such as in the case of self-location estimation, and sends to a client a WLD when detailed VXL information is required such as in the case of map rendering. This allows for an efficient sending/receiving of map data.</p><p id="p-0270" num="0269">Note that a client may self-judge which one of a SWLD and a WLD is necessary, and request the server to send a SWLD or a WLD. Also, the server may judge which one of a SWLD and a WLD to send in accordance with the status of the client or a network.</p><p id="p-0271" num="0270">Next, a method will be described of switching the sending/receiving between a sparse world (SWLD) and a world (WLD).</p><p id="p-0272" num="0271">Whether to receive a WLD or a SWLD may be switched in accordance with the network bandwidth. <figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram showing an example operation in such case. For example, when a low-speed network is used that limits the usable network bandwidth, such as in a Long-Term Evolution (LTE) environment, a client accesses the server over a low-speed network (S<b>321</b>), and obtains the SWLD from the server as map information (S<b>322</b>). Meanwhile, when a high-speed network is used that has an adequately broad network bandwidth, such as in a WiFi environment, a client accesses the server over a high-speed network (S<b>323</b>), and obtains the WLD from the server (S<b>324</b>). This enables the client to obtain appropriate map information in accordance with the network bandwidth such client is using.</p><p id="p-0273" num="0272">More specifically, a client receives the SWLD over an LTE network when in outdoors, and obtains the WLD over a WiFi network when in indoors such as in a facility. This enables the client to obtain more detailed map information on indoor environment.</p><p id="p-0274" num="0273">As described above, a client may request for a WLD or a SWLD in accordance with the bandwidth of a network such client is using. Alternatively, the client may send to the server information indicating the bandwidth of a network such client is using, and the server may send to the client data (the WLD or the SWLD) suitable for such client in accordance with the information. Alternatively, the server may identify the network bandwidth the client is using, and send to the client data (the WLD or the SWLD) suitable for such client.</p><p id="p-0275" num="0274">Also, whether to receive a WLD or a SWLD may be switched in accordance with the speed of traveling. <figref idref="DRAWINGS">FIG. <b>15</b></figref> is a diagram showing an example operation in such case. For example, when traveling at a high speed (S<b>331</b>), a client receives the SWLD from the server (S<b>332</b>). Meanwhile, when traveling at a low speed (S<b>333</b>), the client receives the WLD from the server (S<b>334</b>). This enables the client to obtain map information suitable to the speed, while reducing the network bandwidth. More specifically, when traveling on an expressway, the client receives the SWLD with a small data amount, which enables the update of rough map information at an appropriate speed. Meanwhile, when traveling on a general road, the client receives the WLD, which enables the obtainment of more detailed map information.</p><p id="p-0276" num="0275">As described above, the client may request the server for a WLD or a SWLD in accordance with the traveling speed of such client. Alternatively, the client may send to the server information indicating the traveling speed of such client, and the server may send to the client data (the WLD or the SWLD) suitable to such client in accordance with the information. Alternatively, the server may identify the traveling speed of the client to send data (the WLD or the SWLD) suitable to such client.</p><p id="p-0277" num="0276">Also, the client may obtain, from the server, a SWLD first, from which the client may obtain a WLD of an important region. For example, when obtaining map information, the client first obtains a SWLD for rough map information, from which the client narrows to a region in which features such as buildings, signals, or persons appear at high frequency so that the client can later obtain a WLD of such narrowed region. This enables the client to obtain detailed information on a necessary region, while reducing the amount of data received from the server.</p><p id="p-0278" num="0277">The server may also create from a WLD different SWLDs for the respective objects, and the client may receive SWLDs in accordance with the intended use. This reduces the network bandwidth. For example, the server recognizes persons or cars in a WLD in advance, and creates a SWLD of persons and a SWLD of cars. The client, when wishing to obtain information on persons around the client, receives the SWLD of persons, and when wising to obtain information on cars, receives the SWLD of cars. Such types of SWLDs may be distinguished by information (flag, or type, etc.) added to the header, etc. Next, the structure and the operation flow of the three-dimensional data encoding device (e.g., a server) according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of three-dimensional data encoding device <b>400</b> according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flowchart of three-dimensional data encoding processes performed by three-dimensional data encoding device <b>400</b>.</p><p id="p-0279" num="0278">Three-dimensional data encoding device <b>400</b> shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref> encodes input three-dimensional data <b>411</b>, thereby generating encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b>, each being an encoded stream. Here, encoded three-dimensional data <b>413</b> is encoded three-dimensional data corresponding to a WLD, and encoded three-dimensional data <b>414</b> is encoded three-dimensional data corresponding to a SWLD. Such three-dimensional data encoding device <b>400</b> includes, obtainer <b>401</b>, encoding region determiner <b>402</b>, SWLD extractor <b>403</b>, WLD encoder <b>404</b>, and SWLD encoder <b>405</b>.</p><p id="p-0280" num="0279">First, as <figref idref="DRAWINGS">FIG. <b>17</b></figref> shows, obtainer <b>401</b> obtains input three-dimensional data <b>411</b>, which is point group data in a three-dimensional space (S<b>401</b>).</p><p id="p-0281" num="0280">Next, encoding region determiner <b>402</b> determines a current spatial region for encoding on the basis of a spatial region in which the point cloud data is present (S<b>402</b>).</p><p id="p-0282" num="0281">Next, SWLD extractor <b>403</b> defines the current spatial region as a WLD, and calculates the feature from each VXL included in the WLD. Then, SWLD extractor <b>403</b> extracts VXLs having an amount of features greater than or equal to a predetermined threshold, defines the extracted VXLs as FVXLs, and adds such FVXLs to a SWLD, thereby generating extracted three-dimensional data <b>412</b> (S<b>403</b>). Stated differently, extracted three-dimensional data <b>412</b> having an amount of features greater than or equal to the threshold is extracted from input three-dimensional data <b>411</b>.</p><p id="p-0283" num="0282">Next, WLD encoder <b>404</b> encodes input three-dimensional data <b>411</b> corresponding to the WLD, thereby generating encoded three-dimensional data <b>413</b> corresponding to the WLD (S<b>404</b>). In so doing, WLD encoder <b>404</b> adds to the header of encoded three-dimensional data <b>413</b> information that distinguishes that such encoded three-dimensional data <b>413</b> is a stream including a WLD.</p><p id="p-0284" num="0283">SWLD encoder <b>405</b> encodes extracted three-dimensional data <b>412</b> corresponding to the SWLD, thereby generating encoded three-dimensional data <b>414</b> corresponding to the SWLD (S<b>405</b>). In so doing, SWLD encoder <b>405</b> adds to the header of encoded three-dimensional data <b>414</b> information that distinguishes that such encoded three-dimensional data <b>414</b> is a stream including a SWLD.</p><p id="p-0285" num="0284">Note that the process of generating encoded three-dimensional data <b>413</b> and the process of generating encoded three-dimensional data <b>414</b> may be performed in the reverse order. Also note that a part or all of these processes may be performed in parallel.</p><p id="p-0286" num="0285">A parameter &#x201c;world_type&#x201d; is defined, for example, as information added to each header of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b>. world_type=0 indicates that a stream includes a WLD, and world_type=1 indicates that a stream includes a SWLD. An increased number of values may be further assigned to define a larger number of types, e.g., world_type=2. Also, one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> may include a specified flag. For example, encoded three-dimensional data <b>414</b> may be assigned with a flag indicating that such stream includes a SWLD. In such a case, the decoding device can distinguish whether such stream is a stream including a WLD or a stream including a SWLD in accordance with the presence/absence of the flag.</p><p id="p-0287" num="0286">Also, an encoding method used by WLD encoder <b>404</b> to encode a WLD may be different from an encoding method used by SWLD encoder <b>405</b> to encode a SWLD.</p><p id="p-0288" num="0287">For example, data of a SWLD is decimated, and thus can have a lower correlation with the neighboring data than that of a WLD. For this reason, of intra prediction and inter prediction, inter prediction may be more preferentially performed in an encoding method used for a SWLD than in an encoding method used for a WLD.</p><p id="p-0289" num="0288">Also, an encoding method used for a SWLD and an encoding method used for a WLD may represent three-dimensional positions differently. For example, three-dimensional coordinates may be used to represent the three-dimensional positions of FVXLs in a SWLD and an octree described below may be used to represent three-dimensional positions in a WLD, and vice versa.</p><p id="p-0290" num="0289">Also, SWLD encoder <b>405</b> performs encoding in a manner that encoded three-dimensional data <b>414</b> of a SWLD has a smaller data size than the data size of encoded three-dimensional data <b>413</b> of a WLD. A SWLD can have a lower inter-data correlation, for example, than that of a WLD as described above. This can lead to a decreased encoding efficiency, and thus to encoded three-dimensional data <b>414</b> having a larger data size than the data size of encoded three-dimensional data <b>413</b> of a WLD. When the data size of the resulting encoded three-dimensional data <b>414</b> is larger than the data size of encoded three-dimensional data <b>413</b> of a WLD, SWLD encoder <b>405</b> performs encoding again to re-generate encoded three-dimensional data <b>414</b> having a reduced data size.</p><p id="p-0291" num="0290">For example, SWLD extractor <b>403</b> re-generates extracted three-dimensional data <b>412</b> having a reduced number of keypoints to be extracted, and SWLD encoder <b>405</b> encodes such extracted three-dimensional data <b>412</b>. Alternatively, SWLD encoder <b>405</b> may perform more coarse quantization. More coarse quantization is achieved, for example, by rounding the data in the lowermost level in an octree structure described below.</p><p id="p-0292" num="0291">When failing to decrease the data size of encoded three-dimensional data <b>414</b> of the SWLD to smaller than the data size of encoded three-dimensional data <b>413</b> of the WLD, SWLD encoder <b>405</b> may not generate encoded three-dimensional data <b>414</b> of the SWLD. Alternatively, encoded three-dimensional data <b>413</b> of the WLD may be copied as encoded three-dimensional data <b>414</b> of the SWLD. Stated differently, encoded three-dimensional data <b>413</b> of the WLD may be used as it is as encoded three-dimensional data <b>414</b> of the SWLD.</p><p id="p-0293" num="0292">Next, the structure and the operation flow of the three-dimensional data decoding device (e.g., a client) according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>18</b></figref> is a block diagram of three-dimensional data decoding device <b>500</b> according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flowchart of three-dimensional data decoding processes performed by three-dimensional data decoding device <b>500</b>.</p><p id="p-0294" num="0293">Three-dimensional data decoding device <b>500</b> shown in <figref idref="DRAWINGS">FIG. <b>18</b></figref> decodes encoded three-dimensional data <b>511</b>, thereby generating decoded three-dimensional data <b>512</b> or decoded three-dimensional data <b>513</b>. Encoded three-dimensional data <b>511</b> here is, for example, encoded three-dimensional data <b>413</b> or encoded three-dimensional data <b>414</b> generated by three-dimensional data encoding device <b>400</b>.</p><p id="p-0295" num="0294">Such three-dimensional data decoding device <b>500</b> includes obtainer <b>501</b>, header analyzer <b>502</b>, WLD decoder <b>503</b>, and SWLD decoder <b>504</b>.</p><p id="p-0296" num="0295">First, as <figref idref="DRAWINGS">FIG. <b>19</b></figref> shows, obtainer <b>501</b> obtains encoded three-dimensional data <b>511</b> (S<b>501</b>). Next, header analyzer <b>502</b> analyzes the header of encoded three-dimensional data <b>511</b> to identify whether encoded three-dimensional data <b>511</b> is a stream including a WLD or a stream including a SWLD (S<b>502</b>). For example, the above-described parameter world_type is referred to in making such identification.</p><p id="p-0297" num="0296">When encoded three-dimensional data <b>511</b> is a stream including a WLD (Yes in S<b>503</b>), WLD decoder <b>503</b> decodes encoded three-dimensional data <b>511</b>, thereby generating decoded three-dimensional data <b>512</b> of the WLD (S<b>504</b>). Meanwhile, when encoded three-dimensional data <b>511</b> is a stream including a SWLD (No in S<b>503</b>), SWLD decoder <b>504</b> decodes encoded three-dimensional data <b>511</b>, thereby generating decoded three-dimensional data <b>513</b> of the SWLD (S<b>505</b>).</p><p id="p-0298" num="0297">Also, as in the case of the encoding device, a decoding method used by WLD decoder <b>503</b> to decode a WLD may be different from a decoding method used by SWLD decoder <b>504</b> to decode a SWLD. For example, of intra prediction and inter prediction, inter prediction may be more preferentially performed in a decoding method used for a SWLD than in a decoding method used for a WLD.</p><p id="p-0299" num="0298">Also, a decoding method used for a SWLD and a decoding method used for a WLD may represent three-dimensional positions differently. For example, three-dimensional coordinates may be used to represent the three-dimensional positions of FVXLs in a SWLD and an octree described below may be used to represent three-dimensional positions in a WLD, and vice versa.</p><p id="p-0300" num="0299">Next, an octree representation will be described, which is a method of representing three-dimensional positions. VXL data included in three-dimensional data is converted into an octree structure before encoded. <figref idref="DRAWINGS">FIG. <b>20</b></figref> is a diagram showing example VXLs in a WLD. <figref idref="DRAWINGS">FIG. <b>21</b></figref> is a diagram showing an octree structure of the WLD shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. An example shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref> illustrates three VXLs <b>1</b> to <b>3</b> that include point groups (hereinafter referred to as effective VXLs). As <figref idref="DRAWINGS">FIG. <b>21</b></figref> shows, the octree structure is made of nodes and leaves. Each node has a maximum of eight nodes or leaves. Each leaf has VXL information. Here, of the leaves shown in <figref idref="DRAWINGS">FIG. <b>21</b></figref>, leaf <b>1</b>, leaf <b>2</b>, and leaf <b>3</b> represent VXL<b>1</b>, VXL<b>2</b>, and VXL<b>3</b> shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>, respectively.</p><p id="p-0301" num="0300">More specifically, each node and each leaf correspond to a three-dimensional position. Node <b>1</b> corresponds to the entire block shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. The block that corresponds to node <b>1</b> is divided into eight blocks. Of these eight blocks, blocks including effective VXLs are set as nodes, while the other blocks are set as leaves. Each block that corresponds to a node is further divided into eight nodes or leaves. These processes are repeated by the number of times that is equal to the number of levels in the octree structure. All blocks in the lowermost level are set as leaves;</p><p id="p-0302" num="0301"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a diagram showing an example SWLD generated from the WLD shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. VXL<b>1</b> and VXL<b>2</b> shown in <figref idref="DRAWINGS">FIG. <b>20</b></figref> are judged as FVXL<b>1</b> and FVXL<b>2</b> as a result of feature extraction, and thus are added to the SWLD. Meanwhile, VXL<b>3</b> is not judged as a FVXL, and thus is not added to the SWLD. <figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagram showing an octree structure of the SWLD shown in <figref idref="DRAWINGS">FIG. <b>22</b></figref>. In the octree structure shown in <figref idref="DRAWINGS">FIG. <b>23</b></figref>, leaf <b>3</b> corresponding to VXL<b>3</b> shown in <figref idref="DRAWINGS">FIG. <b>21</b></figref> is deleted. Consequently, node <b>3</b> shown in <figref idref="DRAWINGS">FIG. <b>21</b></figref> has lost an effective VXL, and has changed to a leaf. As described above, a SWLD has a smaller number of leaves in general than a WLD does, and thus the encoded three-dimensional data of the SWLD is smaller than the encoded three-dimensional data of the WLD.</p><p id="p-0303" num="0302">The following describes variations of the present embodiment.</p><p id="p-0304" num="0303">For self-location estimation, for example, a client, being a vehicle-mounted device, etc., may receive a SWLD from the server to use such SWLD to estimate the self-location. Meanwhile, for obstacle detection, the client may detect obstacles by use of three-dimensional information on the periphery obtained by such client through various means including a distance sensor such as a rangefinder, as well as a stereo camera and a combination of a plurality of monocular cameras.</p><p id="p-0305" num="0304">In general, a SWLD is less likely to include VXL data on a flat region. As such, the server may hold a subsample world (subWLD) obtained by subsampling a WLD for detection of static obstacles, and send to the client the SWLD and the subWLD. This enables the client to perform self-location estimation and obstacle detection on the client's part, while reducing the network bandwidth.</p><p id="p-0306" num="0305">When the client renders three-dimensional map data at a high speed, map information having a mesh structure is more useful in some cases. As such, the server may generate a mesh from a WLD to hold it beforehand as a mesh world (MWLD). For example, when wishing to perform coarse three-dimensional rendering, the client receives a MWLD, and when wishing to perform detailed three-dimensional rendering, the client receives a WLD. This reduces the network bandwidth.</p><p id="p-0307" num="0306">In the above description, the server sets, as FVXLs, VXLs having an amount of features greater than or equal to the threshold, but the server may calculate FVXLs by a different method. For example, the server may judge that a VXL, a VLM, a SPC, or a GOS that constitutes a signal, or an intersection, etc. as necessary for self-location estimation, driving assist, or self-driving, etc., and incorporate such VXL, VLM, SPC, or GOS into a SWLD as a FVXL, a FVLM, a FSPC, or a FGOS. Such judgment may be made manually. Also, FVXLs, etc. that have been set on the basis of an amount of features may be added to FVXLs, etc. obtained by the above method. Stated differently, SWLD extractor <b>403</b> may further extract, from input three-dimensional data <b>411</b>, data corresponding to an object having a predetermined attribute as extracted three-dimensional data <b>412</b>.</p><p id="p-0308" num="0307">Also, that a VXL, a VLM, a SPC, or a GOS is necessary for such intended usage may be labeled separately from the features. The server may separately hold, as an upper layer of a SWLD (e.g., a lane world), FVXLs of a signal or an intersection, etc. necessary for self-location estimation, driving assist, or self-driving, etc.</p><p id="p-0309" num="0308">The server may also add an attribute to VXLs in a WLD on a random access basis or on a predetermined unit basis. An attribute, for example, includes information indicating whether VXLs are necessary for self-location estimation, or information indicating whether VXLs are important as traffic information such as a signal, or an intersection, etc. An attribute may also include a correspondence between VXLs and features (intersection, or road, etc.) in lane information (geographic data files (GDF), etc.).</p><p id="p-0310" num="0309">A method as described below may be used to update a WLD or a SWLD.</p><p id="p-0311" num="0310">Update information indicating changes, etc. in a person, a roadwork, or a tree line (for trucks) is uploaded to the server as point groups or meta data. The server updates a WLD on the basis of such uploaded information, and then updates a SWLD by use of the updated WLD.</p><p id="p-0312" num="0311">The client, when detecting a mismatch between the three-dimensional information such client has generated at the time of self-location estimation and the three-dimensional information received from the server, may send to the server the three-dimensional information such client has generated, together with an update notification. In such a case, the server updates the SWLD by use of the WLD. When the SWLD is not to be updated, the server judges that the WLD itself is old.</p><p id="p-0313" num="0312">In the above description, information that distinguishes whether an encoded stream is that of a WLD or a SWLD is added as header information of the encoded stream. However, when there are many types of worlds such as a mesh world and a lane world, information that distinguishes these types of the worlds may be added to header information. Also, when there are many SWLDs with different amounts of features, information that distinguishes the respective SWLDs may be added to header information.</p><p id="p-0314" num="0313">In the above description, a SWLD is constituted by FVXLs, but a SWLD may include VXLs that have not been judged as FVXLs. For example, a SWLD may include an adjacent VXL used to calculate the feature of a FVXL. This enables the client to calculate the feature of a FVXL when receiving a SWLD, even in the case where feature information is not added to each FVXL of the SWLD. In such a case, the SWLD may include information that distinguishes whether each VXL is a FVXL or a VXL.</p><p id="p-0315" num="0314">As described above, three-dimensional data encoding device <b>400</b> extracts, from input three-dimensional data <b>411</b> (first three-dimensional data), extracted three-dimensional data <b>412</b> (second three-dimensional data) having an amount of a feature greater than or equal to a threshold, and encodes extracted three-dimensional data <b>412</b> to generate encoded three-dimensional data <b>414</b> (first encoded three-dimensional data).</p><p id="p-0316" num="0315">This three-dimensional data encoding device <b>400</b> generates encoded three-dimensional data <b>414</b> that is obtained by encoding data having an amount of a feature greater than or equal to the threshold. This reduces the amount of data compared to the case where input three-dimensional data <b>411</b> is encoded as it is. Three-dimensional data encoding device <b>400</b> is thus capable of reducing the amount of data to be transmitted.</p><p id="p-0317" num="0316">Three-dimensional data encoding device <b>400</b> further encodes input three-dimensional data <b>411</b> to generate encoded three-dimensional data <b>413</b> (second encoded three-dimensional data).</p><p id="p-0318" num="0317">This three-dimensional data encoding device <b>400</b> enables selective transmission of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b>, in accordance, for example, with the intended use, etc.</p><p id="p-0319" num="0318">Also, extracted three-dimensional data <b>412</b> is encoded by a first encoding method, and input three-dimensional data <b>411</b> is encoded by a second encoding method different from the first encoding method.</p><p id="p-0320" num="0319">This three-dimensional data encoding device <b>400</b> enables the use of an encoding method suitable for each of input three-dimensional data <b>411</b> and extracted three-dimensional data <b>412</b>.</p><p id="p-0321" num="0320">Also, of intra prediction and inter prediction, the inter prediction is more preferentially performed in the first encoding method than in the second encoding method.</p><p id="p-0322" num="0321">This three-dimensional data encoding device <b>400</b> enables inter prediction to be more preferentially performed on extracted three-dimensional data <b>412</b> in which adjacent data items are likely to have low correlation.</p><p id="p-0323" num="0322">Also, the first encoding method and the second encoding method represent three-dimensional positions differently. For example, the second encoding method represents three-dimensional positions by octree, and the first encoding method represents three-dimensional positions by three-dimensional coordinates.</p><p id="p-0324" num="0323">This three-dimensional data encoding device <b>400</b> enables the use of a more suitable method to represent the three-dimensional positions of three-dimensional data in consideration of the difference in the number of data items (the number of VXLs or FVXLs) included.</p><p id="p-0325" num="0324">Also, at least one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> includes an identifier indicating whether the encoded three-dimensional data is encoded three-dimensional data obtained by encoding input three-dimensional data <b>411</b> or encoded three-dimensional data obtained by encoding part of input three-dimensional data <b>411</b>. Stated differently, such identifier indicates whether the encoded three-dimensional data is encoded three-dimensional data <b>413</b> of a WLD or encoded three-dimensional data <b>414</b> of a SWLD.</p><p id="p-0326" num="0325">This enables the decoding device to readily judge whether the obtained encoded three-dimensional data is encoded three-dimensional data <b>413</b> or encoded three-dimensional data <b>414</b>.</p><p id="p-0327" num="0326">Also, three-dimensional data encoding device <b>400</b> encodes extracted three-dimensional data <b>412</b> in a manner that encoded three-dimensional data <b>414</b> has a smaller data amount than a data amount of encoded three-dimensional data <b>413</b>.</p><p id="p-0328" num="0327">This three-dimensional data encoding device <b>400</b> enables encoded three-dimensional data <b>414</b> to have a smaller data amount than the data amount of encoded three-dimensional data <b>413</b>.</p><p id="p-0329" num="0328">Also, three-dimensional data encoding device <b>400</b> further extracts data corresponding to an object having a predetermined attribute from input three-dimensional data <b>411</b> as extracted three-dimensional data <b>412</b>. The object having a predetermined attribute is, for example, an object necessary for self-location estimation, driving assist, or self-driving, etc., or more specifically, a signal, an intersection, etc.</p><p id="p-0330" num="0329">This three-dimensional data encoding device <b>400</b> is capable of generating encoded three-dimensional data <b>414</b> that includes data required by the decoding device.</p><p id="p-0331" num="0330">Also, three-dimensional data encoding device <b>400</b> (server) further sends, to a client, one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> in accordance with a status of the client.</p><p id="p-0332" num="0331">This three-dimensional data encoding device <b>400</b> is capable of sending appropriate data in accordance with the status of the client.</p><p id="p-0333" num="0332">Also, the status of the client includes one of a communication condition (e.g., network bandwidth) of the client and a traveling speed of the client.</p><p id="p-0334" num="0333">Also, three-dimensional data encoding device <b>400</b> further sends, to a client, one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> in accordance with a request from the client.</p><p id="p-0335" num="0334">This three-dimensional data encoding device <b>400</b> is capable of sending appropriate data in accordance with the request from the client.</p><p id="p-0336" num="0335">Also, three-dimensional data decoding device <b>500</b> according to the present embodiment decodes encoded three-dimensional data <b>413</b> or encoded three-dimensional data <b>414</b> generated by three-dimensional data encoding device <b>400</b> described above.</p><p id="p-0337" num="0336">Stated differently, three-dimensional data decoding device <b>500</b> decodes, by a first decoding method, encoded three-dimensional data <b>414</b> obtained by encoding extracted three-dimensional data <b>412</b> having an amount of a feature greater than or equal to a threshold, extracted three-dimensional data <b>412</b> having been extracted from input three-dimensional data <b>411</b>. Three-dimensional data decoding device <b>500</b> also decodes, by a second decoding method, encoded three-dimensional data <b>413</b> obtained by encoding input three-dimensional data <b>411</b>, the second decoding method being different from the first decoding method.</p><p id="p-0338" num="0337">This three-dimensional data decoding device <b>500</b> enables selective reception of encoded three-dimensional data <b>414</b> obtained by encoding data having an amount of a feature greater than or equal to the threshold and encoded three-dimensional data <b>413</b>, in accordance, for example, with the intended use, etc. Three-dimensional data decoding device <b>500</b> is thus capable of reducing the amount of data to be transmitted. Such three-dimensional data decoding device <b>500</b> further enables the use of a decoding method suitable for each of input three-dimensional data <b>411</b> and extracted three-dimensional data <b>412</b>.</p><p id="p-0339" num="0338">Also, of intra prediction and inter prediction, the inter prediction is more preferentially performed in the first decoding method than in the second decoding method.</p><p id="p-0340" num="0339">This three-dimensional data decoding device <b>500</b> enables inter prediction to be more preferentially performed on the extracted three-dimensional data in which adjacent data items are likely to have low correlation.</p><p id="p-0341" num="0340">Also, the first decoding method and the second decoding method represent three-dimensional positions differently. For example, the second decoding method represents three-dimensional positions by octree, and the first decoding method represents three-dimensional positions by three-dimensional coordinates.</p><p id="p-0342" num="0341">This three-dimensional data decoding device <b>500</b> enables the use of a more suitable method to represent the three-dimensional positions of three-dimensional data in consideration of the difference in the number of data items (the number of VXLs or FVXLs) included.</p><p id="p-0343" num="0342">Also, at least one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> includes an identifier indicating whether the encoded three-dimensional data is encoded three-dimensional data obtained by encoding input three-dimensional data <b>411</b> or encoded three-dimensional data obtained by encoding part of input three-dimensional data <b>411</b>. Three-dimensional data decoding device <b>500</b> refers to such identifier in identifying between encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b>.</p><p id="p-0344" num="0343">This three-dimensional data decoding device <b>500</b> is capable of readily judging whether the obtained encoded three-dimensional data is encoded three-dimensional data <b>413</b> or encoded three-dimensional data <b>414</b>.</p><p id="p-0345" num="0344">Three-dimensional data decoding device <b>500</b> further notifies a server of a status of the client (three-dimensional data decoding device <b>500</b>). Three-dimensional data decoding device <b>500</b> receives one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> from the server, in accordance with the status of the client.</p><p id="p-0346" num="0345">This three-dimensional data decoding device <b>500</b> is capable of receiving appropriate data in accordance with the status of the client.</p><p id="p-0347" num="0346">Also, the status of the client includes one of a communication condition (e.g., network bandwidth) of the client and a traveling speed of the client.</p><p id="p-0348" num="0347">Three-dimensional data decoding device <b>500</b> further makes a request of the server for one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b>, and receives one of encoded three-dimensional data <b>413</b> and encoded three-dimensional data <b>414</b> from the server, in accordance with the request.</p><p id="p-0349" num="0348">This three-dimensional data decoding device <b>500</b> is capable of receiving appropriate data in accordance with the intended use.</p><heading id="h-0009" level="1">Embodiment 3</heading><p id="p-0350" num="0349">The present embodiment will describe a method of transmitting/receiving three-dimensional data between vehicles. For example, the three-dimensional data is transmitted/received between the own vehicle and the nearby vehicle;</p><p id="p-0351" num="0350"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a block diagram of three-dimensional data creation device <b>620</b> according to the present embodiment. Such three-dimensional data creation device <b>620</b>, which is included, for example, in the own vehicle, mergers first three-dimensional data <b>632</b> created by three-dimensional data creation device <b>620</b> with the received second three-dimensional data <b>635</b>, thereby creating third three-dimensional data <b>636</b> having a higher density.</p><p id="p-0352" num="0351">Such three-dimensional data creation device <b>620</b> includes three-dimensional data creator <b>621</b>, request range determiner <b>622</b>, searcher <b>623</b>, receiver <b>624</b>, decoder <b>625</b>, and merger <b>626</b>.</p><p id="p-0353" num="0352">First, three-dimensional data creator <b>621</b> creates first three-dimensional data <b>632</b> by use of sensor information <b>631</b> detected by the sensor included in the own vehicle. Next, request range determiner <b>622</b> determines a request range, which is the range of a three-dimensional space, the data on which is insufficient in the created first three-dimensional data <b>632</b>.</p><p id="p-0354" num="0353">Next, searcher <b>623</b> searches for the nearby vehicle having the three-dimensional data of the request range, and sends request range information <b>633</b> indicating the request range to nearby vehicle <b>601</b> having been searched out (S<b>623</b>). Next, receiver <b>624</b> receives encoded three-dimensional data <b>634</b>, which is an encoded stream of the request range, from nearby vehicle <b>601</b> (S<b>624</b>). Note that searcher <b>623</b> may indiscriminately send requests to all vehicles included in a specified range to receive encoded three-dimensional data <b>634</b> from a vehicle that has responded to the request. Searcher <b>623</b> may send a request not only to vehicles but also to an object such as a signal and a sign, and receive encoded three-dimensional data <b>634</b> from the object.</p><p id="p-0355" num="0354">Next, decoder <b>625</b> decodes the received encoded three-dimensional data <b>634</b>, thereby obtaining second three-dimensional data <b>635</b>. Next, merger <b>626</b> merges first three-dimensional data <b>632</b> with second three-dimensional data <b>635</b>, thereby creating three-dimensional data <b>636</b> having a higher density.</p><p id="p-0356" num="0355">Next, the structure and operations of three-dimensional data transmission device <b>640</b> according to the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>25</b></figref> is a block diagram of three-dimensional data transmission device <b>640</b>.</p><p id="p-0357" num="0356">Three-dimensional data transmission device <b>640</b> is included, for example, in the above-described nearby vehicle. Three-dimensional data transmission device <b>640</b> processes fifth three-dimensional data <b>652</b> created by the nearby vehicle into sixth three-dimensional data <b>654</b> requested by the own vehicle, encodes sixth three-dimensional data <b>654</b> to generate encoded three-dimensional data <b>634</b>, and sends encoded three-dimensional data <b>634</b> to the own vehicle.</p><p id="p-0358" num="0357">Three-dimensional data transmission device <b>640</b> includes three-dimensional data creator <b>641</b>, receiver <b>642</b>, extractor <b>643</b>, encoder <b>644</b>, and transmitter <b>645</b>.</p><p id="p-0359" num="0358">First, three-dimensional data creator <b>641</b> creates fifth three-dimensional data <b>652</b> by use of sensor information <b>651</b> detected by the sensor included in the nearby vehicle. Next, receiver <b>642</b> receives request range information <b>633</b> from the own vehicle.</p><p id="p-0360" num="0359">Next, extractor <b>643</b> extracts from fifth three-dimensional data <b>652</b> the three-dimensional data of the request range indicated by request range information <b>633</b>, thereby processing fifth three-dimensional data <b>652</b> into sixth three-dimensional data <b>654</b>. Next, encoder <b>644</b> encodes sixth three-dimensional data <b>654</b> to generate encoded three-dimensional data <b>643</b>, which is an encoded stream. Then, transmitter <b>645</b> sends encoded three-dimensional data <b>634</b> to the own vehicle.</p><p id="p-0361" num="0360">Note that although an example case is described here in which the own vehicle includes three-dimensional data creation device <b>620</b> and the nearby vehicle includes three-dimensional data transmission device <b>640</b>, each of the vehicles may include the functionality of both three-dimensional data creation device <b>620</b> and three-dimensional data transmission device <b>640</b>.</p><heading id="h-0010" level="1">Embodiment 4</heading><p id="p-0362" num="0361">The present embodiment describes operations performed in abnormal cases when self-location estimation is performed on the basis of a three-dimensional map.</p><p id="p-0363" num="0362">A three-dimensional map is expected to find its expanded use in self-driving of a vehicle and autonomous movement, etc. of a mobile object such as a robot and a flying object (e.g., a drone). Example means for enabling such autonomous movement include a method in which a mobile object travels in accordance with a three-dimensional map, while estimating its self-location on the map (self-location estimation).</p><p id="p-0364" num="0363">The self-location estimation is enabled by matching a three-dimensional map with three-dimensional information on the surrounding of the own vehicle (hereinafter referred to as self-detected three-dimensional data) obtained by a sensor equipped in the own vehicle, such as a rangefinder (e.g., a LiDAR) and a stereo camera to estimate the location of the own vehicle on the three-dimensional map.</p><p id="p-0365" num="0364">As in the case of an HD map suggested by HERE Technologies, for example, a three-dimensional map may include not only a three-dimensional point cloud, but also two-dimensional map data such as information on the shapes of roads and intersections, or information that changes in real-time such as information on a traffic jam and an accident. A three-dimensional map includes a plurality of layers such as layers of three-dimensional data, two-dimensional data, and meta-data that changes in real-time, from among which the device can obtain or refer to only necessary data.</p><p id="p-0366" num="0365">Point cloud data may be a SWLD as described above, or may include point group data that is different from keypoints. The transmission/reception of point cloud data is basically carried out in one or more random access units.</p><p id="p-0367" num="0366">A method described below is used as a method of matching a three-dimensional map with self-detected three-dimensional data. For example, the device compares the shapes of the point groups in each other's point clouds, and determines that portions having a high degree of similarity among keypoints correspond to the same position. When the three-dimensional map is formed by a SWLD, the device also performs matching by comparing the keypoints that form the SWLD with three-dimensional keypoints extracted from the self-detected three-dimensional data.</p><p id="p-0368" num="0367">Here, to enable highly accurate self-location estimation, the following needs to be satisfied: (A) the three-dimensional map and the self-detected three-dimensional data have been already obtained; and (B) their accuracies satisfy a predetermined requirement. However, one of (A) and (B) cannot be satisfied in abnormal cases such as ones described below.</p><p id="p-0369" num="0368">1. A three-dimensional map is unobtainable over communication.</p><p id="p-0370" num="0369">2. A three-dimensional map is not present, or a three-dimensional map having been obtained is corrupt.</p><p id="p-0371" num="0370">3. A sensor of the own vehicle has trouble, or the accuracy of the generated self-detected three-dimensional data is inadequate due to bad weather.</p><p id="p-0372" num="0371">The following describes operations to cope with such abnormal cases. The following description illustrates an example case of a vehicle, but the method described below is applicable to mobile objects on the whole that are capable of autonomous movement, such as a robot and a drone.</p><p id="p-0373" num="0372">The following describes the structure of the three-dimensional information processing device and its operation according to the present embodiment capable of coping with abnormal cases regarding a three-dimensional map or self-detected three-dimensional data. <figref idref="DRAWINGS">FIG. <b>26</b></figref> is a block diagram of an example structure of three-dimensional information processing device <b>700</b> according to the present embodiment.</p><p id="p-0374" num="0373">Three-dimensional information processing device <b>700</b> is equipped, for example, in a mobile object such as a car. As shown in <figref idref="DRAWINGS">FIG. <b>26</b></figref>, three-dimensional information processing device <b>700</b> includes three-dimensional map obtainer <b>701</b>, self-detected data obtainer <b>702</b>, abnormal case judgment unit <b>703</b>, coping operation determiner <b>704</b>, and operation controller <b>705</b>.</p><p id="p-0375" num="0374">Note that three-dimensional information processing device <b>700</b> may include a non-illustrated two-dimensional or one-dimensional sensor that detects a structural object or a mobile object around the own vehicle, such as a camera capable of obtaining two-dimensional images and a sensor for one-dimensional data utilizing ultrasonic or laser. Three-dimensional information processing device <b>700</b> may also include a non-illustrated communication unit that obtains a three-dimensional map over a mobile communication network, such as 4G and 5G, or via inter-vehicle communication or road-to-vehicle communication.</p><p id="p-0376" num="0375">Three-dimensional map obtainer <b>701</b> obtains three-dimensional map <b>711</b> of the surroundings of the traveling route. For example, three-dimensional map obtainer <b>701</b> obtains three-dimensional map <b>711</b> over a mobile communication network, or via inter-vehicle communication or road-to-vehicle communication.</p><p id="p-0377" num="0376">Next, self-detected data obtainer <b>702</b> obtains self-detected three-dimensional data <b>712</b> on the basis of sensor information. For example, self-detected data obtainer <b>702</b> generates self-detected three-dimensional data <b>712</b> on the basis of the sensor information obtained by a sensor equipped in the own vehicle.</p><p id="p-0378" num="0377">Next, abnormal case judgment unit <b>703</b> conducts a predetermined check of at least one of obtained three-dimensional map <b>711</b> and self-detected three-dimensional data <b>712</b> to detect an abnormal case. Stated differently, abnormal case judgment unit <b>703</b> judges whether at least one of obtained three-dimensional map <b>711</b> and self-detected three-dimensional data <b>712</b> is abnormal.</p><p id="p-0379" num="0378">When the abnormal case is detected, coping operation determiner <b>704</b> determines a coping operation to cope with such abnormal case. Next, operation controller <b>705</b> controls the operation of each of the processing units necessary to perform the coping operation.</p><p id="p-0380" num="0379">Meanwhile, when no abnormal case is detected, three-dimensional information processing device <b>700</b> terminates the process.</p><p id="p-0381" num="0380">Also, three-dimensional information processing device <b>700</b> estimates the location of the vehicle equipped with three-dimensional information processing device <b>700</b>, using three-dimensional map <b>711</b> and self-detected three-dimensional data <b>712</b>. Next, three-dimensional information processing device <b>700</b> performs the automatic operation of the vehicle by use of the estimated location of the vehicle.</p><p id="p-0382" num="0381">As described above, three-dimensional information processing device <b>700</b> obtains, via a communication channel, map data (three-dimensional map <b>711</b>) that includes first three-dimensional position information. The first three-dimensional position information includes, for example, a plurality of random access units, each of which is an assembly of at least one subspace and is individually decodable, the at least one subspace having three-dimensional coordinates information and serving as a unit in which each of the plurality of random access units is encoded. The first three-dimensional position information is, for example, data (SWLD) obtained by encoding keypoints, each of which has an amount of a three-dimensional feature greater than or equal to a predetermined threshold.</p><p id="p-0383" num="0382">Three-dimensional information processing device <b>700</b> also generates second three-dimensional position information (self-detected three-dimensional data <b>712</b>) from information detected by a sensor. Three-dimensional information processing device <b>700</b> then judges whether one of the first three-dimensional position information and the second three-dimensional position information is abnormal by performing, on one of the first three-dimensional position information and the second three-dimensional position information, a process of judging whether an abnormality is present.</p><p id="p-0384" num="0383">Three-dimensional information processing device <b>700</b> determines a coping operation to cope with the abnormality when one of the first three-dimensional position information and the second three-dimensional position information is judged to be abnormal. Three-dimensional information processing device <b>700</b> then executes a control that is required to perform the coping operation.</p><p id="p-0385" num="0384">This structure enables three-dimensional information processing device <b>700</b> to detect an abnormality regarding one of the first three-dimensional position information and the second three-dimensional position information, and to perform a coping operation therefor.</p><heading id="h-0011" level="1">Embodiment 5</heading><p id="p-0386" num="0385">The present embodiment describes a method, etc. of transmitting three-dimensional data to a following vehicle;</p><p id="p-0387" num="0386"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a block diagram of an exemplary structure of three-dimensional data creation device <b>810</b> according to the present embodiment. Such three-dimensional data creation device <b>810</b> is equipped, for example, in a vehicle. Three-dimensional data creation device <b>810</b> transmits and receives three-dimensional data to and from an external cloud-based traffic monitoring system, a preceding vehicle, or a following vehicle, and creates and stores three-dimensional data.</p><p id="p-0388" num="0387">Three-dimensional data creation device <b>810</b> includes data receiver <b>811</b>, communication unit <b>812</b>, reception controller <b>813</b>, format converter <b>814</b>, a plurality of sensors <b>815</b>, three-dimensional data creator <b>816</b>, three-dimensional data synthesizer <b>817</b>, three-dimensional data storage <b>818</b>, communication unit <b>819</b>, transmission controller <b>820</b>, format converter <b>821</b>, and data transmitter <b>822</b>.</p><p id="p-0389" num="0388">Data receiver <b>811</b> receives three-dimensional data <b>831</b> from a cloud-based traffic monitoring system or a preceding vehicle. Three-dimensional data <b>831</b> includes, for example, information on a region undetectable by sensors <b>815</b> of the own vehicle, such as a point cloud, visible light video, depth information, sensor position information, and speed information.</p><p id="p-0390" num="0389">Communication unit <b>812</b> communicates with the cloud-based traffic monitoring system or the preceding vehicle to transmit a data transmission request, etc. to the cloud-based traffic monitoring system or the preceding vehicle. Reception controller <b>813</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>812</b> to establish communication with the communications partner.</p><p id="p-0391" num="0390">Format converter <b>814</b> applies format conversion, etc. on three-dimensional data <b>831</b> received by data receiver <b>811</b> to generate three-dimensional data <b>832</b>. Format converter <b>814</b> also decompresses or decodes three-dimensional data <b>831</b> when three-dimensional data <b>831</b> is compressed or encoded.</p><p id="p-0392" num="0391">A plurality of sensors <b>815</b> are a group of sensors, such as visible light cameras and infrared cameras, that obtain information on the outside of the vehicle and generate sensor information <b>833</b>. Sensor information <b>833</b> is, for example, three-dimensional data such as a point cloud (point group data), when sensors <b>815</b> are laser sensors such as LiDARs. Note that a single sensor may serve as a plurality of sensors <b>815</b>.</p><p id="p-0393" num="0392">Three-dimensional data creator <b>816</b> generates three-dimensional data <b>834</b> from sensor information <b>833</b>. Three-dimensional data <b>834</b> includes, for example, information such as a point cloud, visible light video, depth information, sensor position information, and speed information.</p><p id="p-0394" num="0393">Three-dimensional data synthesizer <b>817</b> synthesizes three-dimensional data <b>834</b> created on the basis of sensor information <b>833</b> of the own vehicle with three-dimensional data <b>832</b> created by the cloud-based traffic monitoring system or the preceding vehicle, etc., thereby forming three-dimensional data <b>835</b> of a space that includes the space ahead of the preceding vehicle undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0395" num="0394">Three-dimensional data storage <b>818</b> stores generated three-dimensional data <b>835</b>, etc.</p><p id="p-0396" num="0395">Communication unit <b>819</b> communicates with the cloud-based traffic monitoring system or the following vehicle to transmit a data transmission request, etc. to the cloud-based traffic monitoring system or the following vehicle.</p><p id="p-0397" num="0396">Transmission controller <b>820</b> exchanges information such as information on supported formats with a communications partner via communication unit <b>819</b> to establish communication with the communications partner.</p><p id="p-0398" num="0397">Transmission controller <b>820</b> also determines a transmission region, which is a space of the three-dimensional data to be transmitted, on the basis of three-dimensional data formation information on three-dimensional data <b>832</b> generated by three-dimensional data synthesizer <b>817</b> and the data transmission request from the communications partner.</p><p id="p-0399" num="0398">More specifically, transmission controller <b>820</b> determines a transmission region that includes the space ahead of the own vehicle undetectable by a sensor of the following vehicle, in response to the data transmission request from the cloud-based traffic monitoring system or the following vehicle. Transmission controller <b>820</b> judges, for example, whether a space is transmittable or whether the already transmitted space includes an update, on the basis of the three-dimensional data formation information to determine a transmission region. For example, transmission controller <b>820</b> determines, as a transmission region, a region that is: a region specified by the data transmission request; and a region, corresponding three-dimensional data <b>835</b> of which is present. Transmission controller <b>820</b> then notifies format converter <b>821</b> of the format supported by the communications partner and the transmission region.</p><p id="p-0400" num="0399">Of three-dimensional data <b>835</b> stored in three-dimensional data storage <b>818</b>, format converter <b>821</b> converts three-dimensional data <b>836</b> of the transmission region into the format supported by the receiver end to generate three-dimensional data <b>837</b>. Note that format converter <b>821</b> may compress or encode three-dimensional data <b>837</b> to reduce the data amount.</p><p id="p-0401" num="0400">Data transmitter <b>822</b> transmits three-dimensional data <b>837</b> to the cloud-based traffic monitoring system or the following vehicle. Such three-dimensional data <b>837</b> includes, for example, information on a blind spot, which is a region hidden from view of the following vehicle, such as a point cloud ahead of the own vehicle, visible light video, depth information, and sensor position information.</p><p id="p-0402" num="0401">Note that an example has been described in which format converter <b>814</b> and format converter <b>821</b> perform format conversion, etc., but format conversion may not be performed.</p><p id="p-0403" num="0402">With the above structure, three-dimensional data creation device <b>810</b> obtains, from an external device, three-dimensional data <b>831</b> of a region undetectable by sensors <b>815</b> of the own vehicle, and synthesizes three-dimensional data <b>831</b> with three-dimensional data <b>834</b> that is based on sensor information <b>833</b> detected by sensors <b>815</b> of the own vehicle, thereby generating three-dimensional data <b>835</b>. Three-dimensional data creation device <b>810</b> is thus capable of generating three-dimensional data of a range undetectable by sensors <b>815</b> of the own vehicle.</p><p id="p-0404" num="0403">Three-dimensional data creation device <b>810</b> is also capable of transmitting, to the cloud-based traffic monitoring system or the following vehicle, etc., three-dimensional data of a space that includes the space ahead of the own vehicle undetectable by a sensor of the following vehicle, in response to the data transmission request from the cloud-based traffic monitoring system or the following vehicle.</p><heading id="h-0012" level="1">Embodiment 6</heading><p id="p-0405" num="0404">In embodiment 5, an example is described in which a client device of a vehicle or the like transmits three-dimensional data to another vehicle or a server such as a cloud-based traffic monitoring system. In the present embodiment, a client device transmits sensor information obtained through a sensor to a server or a client device.</p><p id="p-0406" num="0405">A structure of a system according to the present embodiment will first be described. <figref idref="DRAWINGS">FIG. <b>28</b></figref> is a diagram showing the structure of a transmission/reception system of a three-dimensional map and sensor information according to the present embodiment. This system includes server <b>901</b>, and client devices <b>902</b>A and <b>902</b>B. Note that client devices <b>902</b>A and <b>902</b>B are also referred to as client device <b>902</b> when no particular distinction is made therebetween.</p><p id="p-0407" num="0406">Client device <b>902</b> is, for example, a vehicle-mounted device equipped in a mobile object such as a vehicle. Server <b>901</b> is, for example, a cloud-based traffic monitoring system, and is capable of communicating with the plurality of client devices <b>902</b>.</p><p id="p-0408" num="0407">Server <b>901</b> transmits the three-dimensional map formed by a point cloud to client device <b>902</b>. Note that a structure of the three-dimensional map is not limited to a point cloud, and may also be another structure expressing three-dimensional data such as a mesh structure.</p><p id="p-0409" num="0408">Client device <b>902</b> transmits the sensor information obtained by client device <b>902</b> to server <b>901</b>. The sensor information includes, for example, at least one of information obtained by LiDAR, a visible light image, an infrared image, a depth image, sensor position information, or sensor speed information. The data to be transmitted and received between server <b>901</b> and client device <b>902</b> may be compressed in order to reduce data volume, and may also be transmitted uncompressed in order to maintain data precision. When compressing the data, it is possible to use a three-dimensional compression method on the point cloud based on, for example, an octree structure. It is possible to use a two-dimensional image compression method on the visible light image, the infrared image, and the depth image. The two-dimensional image compression method is, for example, MPEG-4 AVC or HEVC standardized by MPEG.</p><p id="p-0410" num="0409">Server <b>901</b> transmits the three-dimensional map managed by server <b>901</b> to client device <b>902</b> in response to a transmission request for the three-dimensional map from client device <b>902</b>. Note that server <b>901</b> may also transmit the three-dimensional map without waiting for the transmission request for the three-dimensional map from client device <b>902</b>. For example, server <b>901</b> may broadcast the three-dimensional map to at least one client device <b>902</b> located in a predetermined space. Server <b>901</b> may also transmit the three-dimensional map suited to a position of client device <b>902</b> at fixed time intervals to client device <b>902</b> that has received the transmission request once. Server <b>901</b> may also transmit the three-dimensional map managed by server <b>901</b> to client device <b>902</b> every time the three-dimensional map is updated.</p><p id="p-0411" num="0410">Client device <b>902</b> sends the transmission request for the three-dimensional map to server <b>901</b>. For example, when client device <b>902</b> wants to perform the self-location estimation during traveling, client device <b>902</b> transmits the transmission request for the three-dimensional map to server <b>901</b>.</p><p id="p-0412" num="0411">Note that in the following cases, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b>. Client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when the three-dimensional map stored by client device <b>902</b> is old. For example, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when a fixed period has passed since the three-dimensional map is obtained by client device <b>902</b>.</p><p id="p-0413" num="0412">Client device <b>902</b> may also send the transmission request for the three-dimensional map to server <b>901</b> before a fixed time when client device <b>902</b> exits a space shown in the three-dimensional map stored by client device <b>902</b>. For example, client device <b>902</b> may send the transmission request for the three-dimensional map to server <b>901</b> when client device <b>902</b> is located within a predetermined distance from a boundary of the space shown in the three-dimensional map stored by client device <b>902</b>. When a movement path and a movement speed of client device <b>902</b> are understood, a time when client device <b>902</b> exits the space shown in the three-dimensional map stored by client device <b>902</b> may be predicted based on the movement path and the movement speed of client device <b>902</b>.</p><p id="p-0414" num="0413">Client device <b>902</b> may also send the transmission request for the three-dimensional map to server <b>901</b> when an error during alignment of the three-dimensional data and the three-dimensional map created from the sensor information by client device <b>902</b> is at least at a fixed level.</p><p id="p-0415" num="0414">Client device <b>902</b> transmits the sensor information to server <b>901</b> in response to a transmission request for the sensor information from server <b>901</b>. Note that client device <b>902</b> may transmit the sensor information to server <b>901</b> without waiting for the transmission request for the sensor information from server <b>901</b>. For example, client device <b>902</b> may periodically transmit the sensor information during a fixed period when client device <b>902</b> has received the transmission request for the sensor information from server <b>901</b> once. Client device <b>902</b> may determine that there is a possibility of a change in the three-dimensional map of a surrounding area of client device <b>902</b> having occurred, and transmit this information and the sensor information to server <b>901</b>, when the error during alignment of the three-dimensional data created by client device <b>902</b> based on the sensor information and the three-dimensional map obtained from server <b>901</b> is at least at the fixed level.</p><p id="p-0416" num="0415">Server <b>901</b> sends a transmission request for the sensor information to client device <b>902</b>. For example, server <b>901</b> receives position information, such as GPS information, about client device <b>902</b> from client device <b>902</b>. Server <b>901</b> sends the transmission request for the sensor information to client device <b>902</b> in order to generate a new three-dimensional map, when it is determined that client device <b>902</b> is approaching a space in which the three-dimensional map managed by server <b>901</b> contains little information, based on the position information about client device <b>902</b>. Server <b>901</b> may also send the transmission request for the sensor information, when wanting to (i) update the three-dimensional map, (ii) check road conditions during snowfall, a disaster, or the like, or (iii) check traffic congestion conditions, accident/incident conditions, or the like.</p><p id="p-0417" num="0416">Client device <b>902</b> may set an amount of data of the sensor information to be transmitted to server <b>901</b> in accordance with communication conditions or bandwidth during reception of the transmission request for the sensor information to be received from server <b>901</b>. Setting the amount of data of the sensor information to be transmitted to server <b>901</b> is, for example, increasing/reducing the data itself or appropriately selecting a compression method;</p><p id="p-0418" num="0417"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is a block diagram showing an example structure of client device <b>902</b>. Client device <b>902</b> receives the three-dimensional map formed by a point cloud and the like from server <b>901</b>, and estimates a self-location of client device <b>902</b> using the three-dimensional map created based on the sensor information of client device <b>902</b>. Client device <b>902</b> transmits the obtained sensor information to server <b>901</b>.</p><p id="p-0419" num="0418">Client device <b>902</b> includes data receiver <b>1011</b>, communication unit <b>1012</b>, reception controller <b>1013</b>, format converter <b>1014</b>, sensors <b>1015</b>, three-dimensional data creator <b>1016</b>, three-dimensional image processor <b>1017</b>, three-dimensional data storage <b>1018</b>, format converter <b>1019</b>, communication unit <b>1020</b>, transmission controller <b>1021</b>, and data transmitter <b>1022</b>.</p><p id="p-0420" num="0419">Data receiver <b>1011</b> receives three-dimensional map <b>1031</b> from server <b>901</b>. Three-dimensional map <b>1031</b> is data that includes a point cloud such as a WLD or a SWLD. Three-dimensional map <b>1031</b> may include compressed data or uncompressed data.</p><p id="p-0421" num="0420">Communication unit <b>1012</b> communicates with server <b>901</b> and transmits a data transmission request (e.g. transmission request for three-dimensional map) to server <b>901</b>.</p><p id="p-0422" num="0421">Reception controller <b>1013</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1012</b> to establish communication with the communications partner.</p><p id="p-0423" num="0422">Format converter <b>1014</b> performs a format conversion and the like on three-dimensional map <b>1031</b> received by data receiver <b>1011</b> to generate three-dimensional map <b>1032</b>. Format converter <b>1014</b> also performs a decompression or decoding process when three-dimensional map <b>1031</b> is compressed or encoded. Note that format converter <b>1014</b> does not perform the decompression or decoding process when three-dimensional map <b>1031</b> is uncompressed data.</p><p id="p-0424" num="0423">Sensors <b>815</b> are a group of sensors, such as LiDARs, visible light cameras, infrared cameras, or depth sensors that obtain information about the outside of a vehicle equipped with client device <b>902</b>, and generate sensor information <b>1033</b>. Sensor information <b>1033</b> is, for example, three-dimensional data such as a point cloud (point group data) when sensors <b>1015</b> are laser sensors such as LiDARs. Note that a single sensor may serve as sensors <b>1015</b>.</p><p id="p-0425" num="0424">Three-dimensional data creator <b>1016</b> generates three-dimensional data <b>1034</b> of a surrounding area of the own vehicle based on sensor information <b>1033</b>. For example, three-dimensional data creator <b>1016</b> generates point cloud data with color information on the surrounding area of the own vehicle using information obtained by LiDAR and visible light video obtained by a visible light camera.</p><p id="p-0426" num="0425">Three-dimensional image processor <b>1017</b> performs a self-location estimation process and the like of the own vehicle, using (i) the received three-dimensional map <b>1032</b> such as a point cloud, and (ii) three-dimensional data <b>1034</b> of the surrounding area of the own vehicle generated using sensor information <b>1033</b>. Note that three-dimensional image processor <b>1017</b> may generate three-dimensional data <b>1035</b> about the surroundings of the own vehicle by merging three-dimensional map <b>1032</b> and three-dimensional data <b>1034</b>, and may perform the self-location estimation process using the created three-dimensional data <b>1035</b>.</p><p id="p-0427" num="0426">Three-dimensional data storage <b>1018</b> stores three-dimensional map <b>1032</b>, three-dimensional data <b>1034</b>, three-dimensional data <b>1035</b>, and the like.</p><p id="p-0428" num="0427">Format converter <b>1019</b> generates sensor information <b>1037</b> by converting sensor information <b>1033</b> to a format supported by a receiver end. Note that format converter <b>1019</b> may reduce the amount of data by compressing or encoding sensor information <b>1037</b>. Format converter <b>1019</b> may omit this process when format conversion is not necessary. Format converter <b>1019</b> may also control the amount of data to be transmitted in accordance with a specified transmission range.</p><p id="p-0429" num="0428">Communication unit <b>1020</b> communicates with server <b>901</b> and receives a data transmission request (transmission request for sensor information) and the like from server <b>901</b>.</p><p id="p-0430" num="0429">Transmission controller <b>1021</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1020</b> to establish communication with the communications partner.</p><p id="p-0431" num="0430">Data transmitter <b>1022</b> transmits sensor information <b>1037</b> to server <b>901</b>. Sensor information <b>1037</b> includes, for example, information obtained through sensors <b>1015</b>, such as information obtained by LiDAR, a luminance image obtained by a visible light camera, an infrared image obtained by an infrared camera, a depth image obtained by a depth sensor, sensor position information, and sensor speed information.</p><p id="p-0432" num="0431">A structure of server <b>901</b> will be described next. <figref idref="DRAWINGS">FIG. <b>30</b></figref> is a block diagram showing an example structure of server <b>901</b>. Server <b>901</b> transmits sensor information from client device <b>902</b> and creates three-dimensional data based on the received sensor information. Server <b>901</b> updates the three-dimensional map managed by server <b>901</b> using the created three-dimensional data. Server <b>901</b> transmits the updated three-dimensional map to client device <b>902</b> in response to a transmission request for the three-dimensional map from client device <b>902</b>.</p><p id="p-0433" num="0432">Server <b>901</b> includes data receiver <b>1111</b>, communication unit <b>1112</b>, reception controller <b>1113</b>, format converter <b>1114</b>, three-dimensional data creator <b>1116</b>, three-dimensional data merger <b>1117</b>, three-dimensional data storage <b>1118</b>, format converter <b>1119</b>, communication unit <b>1120</b>, transmission controller <b>1121</b>, and data transmitter <b>1122</b>.</p><p id="p-0434" num="0433">Data receiver <b>1111</b> receives sensor information <b>1037</b> from client device <b>902</b>. Sensor information <b>1037</b> includes, for example, information obtained by LiDAR, a luminance image obtained by a visible light camera, an infrared image obtained by an infrared camera, a depth image obtained by a depth sensor, sensor position information, sensor speed information, and the like.</p><p id="p-0435" num="0434">Communication unit <b>1112</b> communicates with client device <b>902</b> and transmits a data transmission request (e.g. transmission request for sensor information) and the like to client device <b>902</b>.</p><p id="p-0436" num="0435">Reception controller <b>1113</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1112</b> to establish communication with the communications partner.</p><p id="p-0437" num="0436">Format converter <b>1114</b> generates sensor information <b>1132</b> by performing a decompression or decoding process when received sensor information <b>1037</b> is compressed or encoded. Note that format converter <b>1114</b> does not perform the decompression or decoding process when sensor information <b>1037</b> is uncompressed data.</p><p id="p-0438" num="0437">Three-dimensional data creator <b>1116</b> generates three-dimensional data <b>1134</b> of a surrounding area of client device <b>902</b> based on sensor information <b>1132</b>. For example, three-dimensional data creator <b>1116</b> generates point cloud data with color information on the surrounding area of client device <b>902</b> using information obtained by LiDAR and visible light video obtained by a visible light camera.</p><p id="p-0439" num="0438">Three-dimensional data merger <b>1117</b> updates three-dimensional map <b>1135</b> by merging three-dimensional data <b>1134</b> created based on sensor information <b>1132</b> with three-dimensional map <b>1135</b> managed by server <b>901</b>.</p><p id="p-0440" num="0439">Three-dimensional data storage <b>1118</b> stores three-dimensional map <b>1135</b> and the like.</p><p id="p-0441" num="0440">Format converter <b>1119</b> generates three-dimensional map <b>1031</b> by converting three-dimensional map <b>1135</b> to a format supported by the receiver end. Note that format converter <b>1119</b> may reduce the amount of data by compressing or encoding three-dimensional map <b>1135</b>. Format converter <b>1119</b> may omit this process when format conversion is not necessary. Format converter <b>1119</b> may also control the amount of data to be transmitted in accordance with a specified transmission range.</p><p id="p-0442" num="0441">Communication unit <b>1120</b> communicates with client device <b>902</b> and receives a data transmission request (transmission request for three-dimensional map) and the like from client device <b>902</b>.</p><p id="p-0443" num="0442">Transmission controller <b>1121</b> exchanges information, such as information on supported formats, with a communications partner via communication unit <b>1120</b> to establish communication with the communications partner.</p><p id="p-0444" num="0443">Data transmitter <b>1122</b> transmits three-dimensional map <b>1031</b> to client device <b>902</b>. Three-dimensional map <b>1031</b> is data that includes a point cloud such as a WLD or a SWLD. Three-dimensional map <b>1031</b> may include one of compressed data and uncompressed data.</p><p id="p-0445" num="0444">An operational flow of client device <b>902</b> will be described next. <figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flowchart of an operation when client device <b>902</b> obtains the three-dimensional map.</p><p id="p-0446" num="0445">Client device <b>902</b> first requests server <b>901</b> to transmit the three-dimensional map (point cloud, etc.) (S<b>1001</b>). At this point, by also transmitting the position information about client device <b>902</b> obtained through GPS and the like, client device <b>902</b> may also request server <b>901</b> to transmit a three-dimensional map relating to this position information.</p><p id="p-0447" num="0446">Client device <b>902</b> next receives the three-dimensional map from server <b>901</b> (S<b>1002</b>). When the received three-dimensional map is compressed data, client device <b>902</b> decodes the received three-dimensional map and generates an uncompressed three-dimensional map (S<b>1003</b>).</p><p id="p-0448" num="0447">Client device <b>902</b> next creates three-dimensional data <b>1034</b> of the surrounding area of client device <b>902</b> using sensor information <b>1033</b> obtained by sensors <b>1015</b> (S<b>1004</b>). Client device <b>902</b> next estimates the self-location of client device <b>902</b> using three-dimensional map <b>1032</b> received from server <b>901</b> and three-dimensional data <b>1034</b> created using sensor information <b>1033</b> (S<b>1005</b>);</p><p id="p-0449" num="0448"><figref idref="DRAWINGS">FIG. <b>32</b></figref> is a flowchart of an operation when client device <b>902</b> transmits the sensor information. Client device <b>902</b> first receives a transmission request for the sensor information from server <b>901</b> (S<b>1011</b>). Client device <b>902</b> that has received the transmission request transmits sensor information <b>1037</b> to server <b>901</b> (S<b>1012</b>). Note that client device <b>902</b> may generate sensor information <b>1037</b> by compressing each piece of information using a compression method suited to each piece of information, when sensor information <b>1033</b> includes a plurality of pieces of information obtained by sensors <b>1015</b>.</p><p id="p-0450" num="0449">An operational flow of server <b>901</b> will be described next. <figref idref="DRAWINGS">FIG. <b>33</b></figref> is a flowchart of an operation when server <b>901</b> obtains the sensor information. Server <b>901</b> first requests client device <b>902</b> to transmit the sensor information (S<b>1021</b>). Server <b>901</b> next receives sensor information <b>1037</b> transmitted from client device <b>902</b> in accordance with the request (S<b>1022</b>). Server <b>901</b> next creates three-dimensional data <b>1134</b> using the received sensor information <b>1037</b> (S<b>1023</b>). Server <b>901</b> next reflects the created three-dimensional data <b>1134</b> in three-dimensional map <b>1135</b> (S<b>1024</b>);</p><p id="p-0451" num="0450"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a flowchart of an operation when server <b>901</b> transmits the three-dimensional map. Server <b>901</b> first receives a transmission request for the three-dimensional map from client device <b>902</b> (S<b>1031</b>). Server <b>901</b> that has received the transmission request for the three-dimensional map transmits the three-dimensional map to client device <b>902</b> (S<b>1032</b>). At this point, server <b>901</b> may extract a three-dimensional map of a vicinity of client device <b>902</b> along with the position information about client device <b>902</b>, and transmit the extracted three-dimensional map. Server <b>901</b> may compress the three-dimensional map formed by a point cloud using, for example, an octree structure compression method, and transmit the compressed three-dimensional map.</p><p id="p-0452" num="0451">Hereinafter, variations of the present embodiment will be described. Server <b>901</b> creates three-dimensional data <b>1134</b> of a vicinity of a position of client device <b>902</b> using sensor information <b>1037</b> received from client device <b>902</b>. Server <b>901</b> next calculates a difference between three-dimensional data <b>1134</b> and three-dimensional map <b>1135</b>, by matching the created three-dimensional data <b>1134</b> with three-dimensional map <b>1135</b> of the same area managed by server <b>901</b>. Server <b>901</b> determines that a type of anomaly has occurred in the surrounding area of client device <b>902</b>, when the difference is greater than or equal to a predetermined threshold. For example, it is conceivable that a large difference occurs between three-dimensional map <b>1135</b> managed by server <b>901</b> and three-dimensional data <b>1134</b> created based on sensor information <b>1037</b>, when land subsidence and the like occurs due to a natural disaster such as an earthquake.</p><p id="p-0453" num="0452">Sensor information <b>1037</b> may include information indicating at least one of a sensor type, a sensor performance, and a sensor model number. Sensor information <b>1037</b> may also be appended with a class ID and the like in accordance with the sensor performance. For example, when sensor information <b>1037</b> is obtained by LiDAR, it is conceivable to assign identifiers to the sensor performance. A sensor capable of obtaining information with precision in units of several millimeters is class <b>1</b>, a sensor capable of obtaining information with precision in units of several centimeters is class <b>2</b>, and a sensor capable of obtaining information with precision in units of several meters is class <b>3</b>. Server <b>901</b> may estimate sensor performance information and the like from a model number of client device <b>902</b>. For example, when client device <b>902</b> is equipped in a vehicle, server <b>901</b> may determine sensor specification information from a type of the vehicle. In this case, server <b>901</b> may obtain information on the type of the vehicle in advance, and the information may also be included in the sensor information. Server <b>901</b> may change a degree of correction with respect to three-dimensional data <b>1134</b> created using sensor information <b>1037</b>, using obtained sensor information <b>1037</b>. For example, when the sensor performance is high in precision (class <b>1</b>), server <b>901</b> does not correct three-dimensional data <b>1134</b>. When the sensor performance is low in precision (class <b>3</b>), server <b>901</b> corrects three-dimensional data <b>1134</b> in accordance with the precision of the sensor. For example, server <b>901</b> increases the degree (intensity) of correction with a decrease in the precision of the sensor.</p><p id="p-0454" num="0453">Server <b>901</b> may simultaneously send the transmission request for the sensor information to the plurality of client devices <b>902</b> in a certain space. Server <b>901</b> does not need to use all of the sensor information for creating three-dimensional data <b>1134</b> and may, for example, select sensor information to be used in accordance with the sensor performance, when having received a plurality of pieces of sensor information from the plurality of client devices <b>902</b>. For example, when updating three-dimensional map <b>1135</b>, server <b>901</b> may select high-precision sensor information (class <b>1</b>) from among the received plurality of pieces of sensor information, and create three-dimensional data <b>1134</b> using the selected sensor information.</p><p id="p-0455" num="0454">Server <b>901</b> is not limited to only being a server such as a cloud-based traffic monitoring system, and may also be another (vehicle-mounted) client device. <figref idref="DRAWINGS">FIG. <b>35</b></figref> is a diagram of a system structure in this case.</p><p id="p-0456" num="0455">For example, client device <b>902</b>C sends a transmission request for sensor information to client device <b>902</b>A located nearby, and obtains the sensor information from client device <b>902</b>A. Client device <b>902</b>C then creates three-dimensional data using the obtained sensor information of client device <b>902</b>A, and updates a three-dimensional map of client device <b>902</b>C. This enables client device <b>902</b>C to generate a three-dimensional map of a space that can be obtained from client device <b>902</b>A, and fully utilize the performance of client device <b>902</b>C. For example, such a case is conceivable when client device <b>902</b>C has high performance.</p><p id="p-0457" num="0456">In this case, client device <b>902</b>A that has provided the sensor information is given rights to obtain the high-precision three-dimensional map generated by client device <b>902</b>C. Client device <b>902</b>A receives the high-precision three-dimensional map from client device <b>902</b>C in accordance with these rights.</p><p id="p-0458" num="0457">Server <b>901</b> may send the transmission request for the sensor information to the plurality of client devices <b>902</b> (client device <b>902</b>A and client device <b>902</b>B) located nearby client device <b>902</b>C. When a sensor of client device <b>902</b>A or client device <b>902</b>B has high performance, client device <b>902</b>C is capable of creating the three-dimensional data using the sensor information obtained by this high-performance sensor;</p><p id="p-0459" num="0458"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is a block diagram showing a functionality structure of server <b>901</b> and client device <b>902</b>. Server <b>901</b> includes, for example, three-dimensional map compression/decoding processor <b>1201</b> that compresses and decodes the three-dimensional map and sensor information compression/decoding processor <b>1202</b> that compresses and decodes the sensor information.</p><p id="p-0460" num="0459">Client device <b>902</b> includes three-dimensional map decoding processor <b>1211</b> and sensor information compression processor <b>1212</b>. Three-dimensional map decoding processor <b>1211</b> receives encoded data of the compressed three-dimensional map, decodes the encoded data, and obtains the three-dimensional map. Sensor information compression processor <b>1212</b> compresses the sensor information itself instead of the three-dimensional data created using the obtained sensor information, and transmits the encoded data of the compressed sensor information to server <b>901</b>. With this structure, client device <b>902</b> does not need to internally store a processor that performs a process for compressing the three-dimensional data of the three-dimensional map (point cloud, etc.), as long as client device <b>902</b> internally stores a processor that performs a process for decoding the three-dimensional map (point cloud, etc.). This makes it possible to limit costs, power consumption, and the like of client device <b>902</b>.</p><p id="p-0461" num="0460">As stated above, client device <b>902</b> according to the present embodiment is equipped in the mobile object, and creates three-dimensional data <b>1034</b> of a surrounding area of the mobile object using sensor information <b>1033</b> that is obtained through sensor <b>1015</b> equipped in the mobile object and indicates a surrounding condition of the mobile object. Client device <b>902</b> estimates a self-location of the mobile object using the created three-dimensional data <b>1034</b>. Client device <b>902</b> transmits obtained sensor information <b>1033</b> to server <b>901</b> or another mobile object.</p><p id="p-0462" num="0461">This enables client device <b>902</b> to transmit sensor information <b>1033</b> to server <b>901</b> or the like. This makes it possible to further reduce the amount of transmission data compared to when transmitting the three-dimensional data. Since there is no need for client device <b>902</b> to perform processes such as compressing or encoding the three-dimensional data, it is possible to reduce the processing amount of client device <b>902</b>. As such, client device <b>902</b> is capable of reducing the amount of data to be transmitted or simplifying the structure of the device.</p><p id="p-0463" num="0462">Client device <b>902</b> further transmits the transmission request for the three-dimensional map to server <b>901</b> and receives three-dimensional map <b>1031</b> from server <b>901</b>. In the estimating of the self-location, client device <b>902</b> estimates the self-location using three-dimensional data <b>1034</b> and three-dimensional map <b>1032</b>.</p><p id="p-0464" num="0463">Sensor information <b>1034</b> includes at least one of information obtained by a laser sensor, a luminance image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0465" num="0464">Sensor information <b>1033</b> includes information that indicates a performance of the sensor.</p><p id="p-0466" num="0465">Client device <b>902</b> encodes or compresses sensor information <b>1033</b>, and in the transmitting of the sensor information, transmits sensor information <b>1037</b> that has been encoded or compressed to server <b>901</b> or another mobile object <b>902</b>. This enables client device <b>902</b> to reduce the amount of data to be transmitted.</p><p id="p-0467" num="0466">For example, client device <b>902</b> includes a processor and memory. The processor performs the above processes using the memory.</p><p id="p-0468" num="0467">Server <b>901</b> according to the present embodiment is capable of communicating with client device <b>902</b> equipped in the mobile object, and receives sensor information <b>1037</b> that is obtained through sensor <b>1015</b> equipped in the mobile object and indicates a surrounding condition of the mobile object. Server <b>901</b> creates three-dimensional data <b>1134</b> of a surrounding area of the mobile object using received sensor information <b>1037</b>.</p><p id="p-0469" num="0468">With this, server <b>901</b> creates three-dimensional data <b>1134</b> using sensor information <b>1037</b> transmitted from client device <b>902</b>. This makes it possible to further reduce the amount of transmission data compared to when client device <b>902</b> transmits the three-dimensional data. Since there is no need for client device <b>902</b> to perform processes such as compressing or encoding the three-dimensional data, it is possible to reduce the processing amount of client device <b>902</b>. As such, server <b>901</b> is capable of reducing the amount of data to be transmitted or simplifying the structure of the device.</p><p id="p-0470" num="0469">Server <b>901</b> further transmits a transmission request for the sensor information to client device <b>902</b>.</p><p id="p-0471" num="0470">Server <b>901</b> further updates three-dimensional map <b>1135</b> using the created three-dimensional data <b>1134</b>, and transmits three-dimensional map <b>1135</b> to client device <b>902</b> in response to the transmission request for three-dimensional map <b>1135</b> from client device <b>902</b>.</p><p id="p-0472" num="0471">Sensor information <b>1037</b> includes at least one of information obtained by a laser sensor, a luminance image, an infrared image, a depth image, sensor position information, or sensor speed information.</p><p id="p-0473" num="0472">Sensor information <b>1037</b> includes information that indicates a performance of the sensor.</p><p id="p-0474" num="0473">Server <b>901</b> further corrects the three-dimensional data in accordance with the performance of the sensor. This enables the three-dimensional data creation method to improve the quality of the three-dimensional data.</p><p id="p-0475" num="0474">In the receiving of the sensor information, server <b>901</b> receives a plurality of pieces of sensor information <b>1037</b> received from a plurality of client devices <b>902</b>, and selects sensor information <b>1037</b> to be used in the creating of three-dimensional data <b>1134</b>, based on a plurality of pieces of information that each indicates the performance of the sensor included in the plurality of pieces of sensor information <b>1037</b>. This enables server <b>901</b> to improve the quality of three-dimensional data <b>1134</b>.</p><p id="p-0476" num="0475">Server <b>901</b> decodes or decompresses received sensor information <b>1037</b>, and creates three-dimensional data <b>1134</b> using sensor information <b>1132</b> that has been decoded or decompressed. This enables server <b>901</b> to reduce the amount of data to be transmitted.</p><p id="p-0477" num="0476">For example, server <b>901</b> includes a processor and memory. The processor performs the above processes using the memory.</p><heading id="h-0013" level="1">Embodiment 7</heading><p id="p-0478" num="0477">In the present embodiment, three-dimensional data encoding and decoding methods using an inter prediction process will be described;</p><p id="p-0479" num="0478"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a block diagram of three-dimensional data encoding device <b>1300</b> according to the present embodiment. This three-dimensional data encoding device <b>1300</b> generates an encoded bitstream (hereinafter, also simply referred to as bitstream) that is an encoded signal, by encoding three-dimensional data. As illustrated in <figref idref="DRAWINGS">FIG. <b>37</b></figref>, three-dimensional data encoding device <b>1300</b> includes divider <b>1301</b>, subtractor <b>1302</b>, transformer <b>1303</b>, quantizer <b>1304</b>, inverse quantizer <b>1305</b>, inverse transformer <b>1306</b>, adder <b>1307</b>, reference volume memory <b>1308</b>, intra predictor <b>1309</b>, reference space memory <b>1310</b>, inter predictor <b>1311</b>, prediction controller <b>1312</b>, and entropy encoder <b>1313</b>.</p><p id="p-0480" num="0479">Divider <b>1301</b> divides a plurality of volumes (VLMs) that are encoding units of each space (SPC) included in the three-dimensional data. Divider <b>1301</b> makes an octree representation (make into an octree) of voxels in each volume. Note that divider <b>1301</b> may make the spaces into an octree representation with the spaces having the same size as the volumes. Divider <b>1301</b> may also append information (depth information, etc.) necessary for making the octree representation to a header and the like of a bitstream.</p><p id="p-0481" num="0480">Subtractor <b>1302</b> calculates a difference between a volume (encoding target volume) outputted by divider <b>1301</b> and a predicted volume generated through intra prediction or inter prediction, which will be described later, and outputs the calculated difference to transformer <b>1303</b> as a prediction residual. <figref idref="DRAWINGS">FIG. <b>38</b></figref> is a diagram showing an example calculation of the prediction residual. Note that bit sequences of the encoding target volume and the predicted volume shown here are, for example, position information indicating positions of three-dimensional points included in the volumes.</p><p id="p-0482" num="0481">Hereinafter, a scan order of an octree representation and voxels will be described. A volume is encoded after being converted into an octree structure (made into an octree). The octree structure includes nodes and leaves. Each node has eight nodes or leaves, and each leaf has voxel (VXL) information. <figref idref="DRAWINGS">FIG. <b>39</b></figref> is a diagram showing an example structure of a volume including voxels. <figref idref="DRAWINGS">FIG. <b>40</b></figref> is a diagram showing an example of the volume shown in <figref idref="DRAWINGS">FIG. <b>39</b></figref> having been converted into the octree structure. Among the leaves shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref>, leaves <b>1</b>, <b>2</b>, and <b>3</b> respectively represent VXL <b>1</b>, VXL <b>2</b>, and VXL <b>3</b>, and represent VXLs including a point group (hereinafter, active VXLs).</p><p id="p-0483" num="0482">An octree is represented by, for example, binary sequences of 1s and 0s. For example, when giving the nodes or the active VXLs a value of 1 and everything else a value of 0, each node and leaf is assigned with the binary sequence shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref>. Thus, this binary sequence is scanned in accordance with a breadth-first or a depth-first scan order. For example, when scanning breadth-first, the binary sequence shown in A of <figref idref="DRAWINGS">FIG. <b>41</b></figref> is obtained. When scanning depth-first, the binary sequence shown in B of <figref idref="DRAWINGS">FIG. <b>41</b></figref> is obtained. The binary sequences obtained through this scanning are encoded through entropy encoding, which reduces an amount of information.</p><p id="p-0484" num="0483">Depth information in the octree representation will be described next. Depth in the octree representation is used in order to control up to how fine a granularity point cloud information included in a volume is stored. Upon setting a great depth, it is possible to reproduce the point cloud information to a more precise level, but an amount of data for representing the nodes and leaves increases. Upon setting a small depth, however, the amount of data decreases, but some information that the point cloud information originally held is lost, since pieces of point cloud information including different positions and different colors are now considered as pieces of point cloud information including the same position and the same color.</p><p id="p-0485" num="0484">For example, <figref idref="DRAWINGS">FIG. <b>42</b></figref> is a diagram showing an example in which the octree with a depth of 2 shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref> is represented with a depth of 1. The octree shown in <figref idref="DRAWINGS">FIG. <b>42</b></figref> has a lower amount of data than the octree shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref>. In other words, the binarized octree shown in <figref idref="DRAWINGS">FIG. <b>42</b></figref> has a lower bit count than the octree shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref>. Leaf <b>1</b> and leaf <b>2</b> shown in <figref idref="DRAWINGS">FIG. <b>40</b></figref> are represented by leaf <b>1</b> shown in <figref idref="DRAWINGS">FIG. <b>41</b></figref>. In other words, the information on leaf <b>1</b> and leaf <b>2</b> being in different positions is lost;</p><p id="p-0486" num="0485"><figref idref="DRAWINGS">FIG. <b>43</b></figref> is a diagram showing a volume corresponding to the octree shown in <figref idref="DRAWINGS">FIG. <b>42</b></figref>. VXL <b>1</b> and VXL <b>2</b> shown in <figref idref="DRAWINGS">FIG. <b>39</b></figref> correspond to VXL <b>12</b> shown in <figref idref="DRAWINGS">FIG. <b>43</b></figref>. In this case, three-dimensional data encoding device <b>1300</b> generates color information of VXL <b>12</b> shown in <figref idref="DRAWINGS">FIG. <b>43</b></figref> using color information of VXL <b>1</b> and VXL <b>2</b> shown in <figref idref="DRAWINGS">FIG. <b>39</b></figref>. For example, three-dimensional data encoding device <b>1300</b> calculates an average value, a median, a weighted average value, or the like of the color information of VXL <b>1</b> and VXL <b>2</b> as the color information of VXL <b>12</b>. In this manner, three-dimensional data encoding device <b>1300</b> may control a reduction of the amount of data by changing the depth of the octree.</p><p id="p-0487" num="0486">Three-dimensional data encoding device <b>1300</b> may set the depth information of the octree to units of worlds, units of spaces, or units of volumes. In this case, three-dimensional data encoding device <b>1300</b> may append the depth information to header information of the world, header information of the space, or header information of the volume. In all worlds, spaces, and volumes associated with different times, the same value may be used as the depth information. In this case, three-dimensional data encoding device <b>1300</b> may append the depth information to header information managing the worlds associated with all times.</p><p id="p-0488" num="0487">When the color information is included in the voxels, transformer <b>1303</b> applies frequency transformation, e.g. orthogonal transformation, to a prediction residual of the color information of the voxels in the volume. For example, transformer <b>1303</b> creates a one-dimensional array by scanning the prediction residual in a certain scan order. Subsequently, transformer <b>1303</b> transforms the one-dimensional array to a frequency domain by applying one-dimensional orthogonal transformation to the created one-dimensional array. With this, when a value of the prediction residual in the volume is similar, a value of a low-frequency component increases and a value of a high-frequency component decreases. As such, it is possible to more efficiently reduce a code amount in quantizer <b>1304</b>.</p><p id="p-0489" num="0488">Transformer <b>1303</b> does not need to use orthogonal transformation in one dimension, but may also use orthogonal transformation in two or more dimensions. For example, transformer <b>1303</b> maps the prediction residual to a two-dimensional array in a certain scan order, and applies two-dimensional orthogonal transformation to the obtained two-dimensional array. Transformer <b>1303</b> may select an orthogonal transformation method to be used from a plurality of orthogonal transformation methods. In this case, three-dimensional data encoding device <b>1300</b> appends, to the bitstream, information indicating which orthogonal transformation method is used. Transformer <b>1303</b> may select an orthogonal transformation method to be used from a plurality of orthogonal transformation methods in different dimensions. In this case, three-dimensional data encoding device <b>1300</b> appends, to the bitstream, in how many dimensions the orthogonal transformation method is used.</p><p id="p-0490" num="0489">For example, transformer <b>1303</b> matches the scan order of the prediction residual to a scan order (breadth-first, depth-first, or the like) in the octree in the volume. This makes it possible to reduce overhead, since information indicating the scan order of the prediction residual does not need to be appended to the bitstream. Transformer <b>1303</b> may apply a scan order different from the scan order of the octree. In this case, three-dimensional data encoding device <b>1300</b> appends, to the bitstream, information indicating the scan order of the prediction residual. This enables three-dimensional data encoding device <b>1300</b> to efficiently encode the prediction residual. Three-dimensional data encoding device <b>1300</b> may append, to the bitstream, information (flag, etc.) indicating whether to apply the scan order of the octree, and may also append, to the bitstream, information indicating the scan order of the prediction residual when the scan order of the octree is not applied.</p><p id="p-0491" num="0490">Transformer <b>1303</b> does not only transform the prediction residual of the color information, and may also transform other attribute information included in the voxels. For example, transformer <b>1303</b> may transform and encode information, such as reflectance information, obtained when obtaining a point cloud through LiDAR and the like.</p><p id="p-0492" num="0491">Transformer <b>1303</b> may skip these processes when the spaces do not include attribute information such as color information. Three-dimensional data encoding device <b>1300</b> may append, to the bitstream, information (flag) indicating whether to skip the processes of transformer <b>1303</b>.</p><p id="p-0493" num="0492">Quantizer <b>1304</b> generates a quantized coefficient by performing quantization using a quantization control parameter on a frequency component of the prediction residual generated by transformer <b>1303</b>. With this, the amount of information is further reduced. The generated quantized coefficient is outputted to entropy encoder <b>1313</b>. Quantizer <b>1304</b> may control the quantization control parameter in units of worlds, units of spaces, or units of volumes. In this case, three-dimensional data encoding device <b>1300</b> appends the quantization control parameter to each header information and the like. Quantizer <b>1304</b> may perform quantization control by changing a weight per frequency component of the prediction residual. For example, quantizer <b>1304</b> may precisely quantize a low-frequency component and roughly quantize a high-frequency component. In this case, three-dimensional data encoding device <b>1300</b> may append, to a header, a parameter expressing a weight of each frequency component.</p><p id="p-0494" num="0493">Quantizer <b>1304</b> may skip these processes when the spaces do not include attribute information such as color information. Three-dimensional data encoding device <b>1300</b> may append, to the bitstream, information (flag) indicating whether to skip the processes of quantizer <b>1304</b>.</p><p id="p-0495" num="0494">Inverse quantizer <b>1305</b> generates an inverse quantized coefficient of the prediction residual by performing inverse quantization on the quantized coefficient generated by quantizer <b>1304</b> using the quantization control parameter, and outputs the generated inverse quantized coefficient to inverse transformer <b>1306</b>.</p><p id="p-0496" num="0495">Inverse transformer <b>1306</b> generates an inverse transformation-applied prediction residual by applying inverse transformation on the inverse quantized coefficient generated by inverse quantizer <b>1305</b>. This inverse transformation-applied prediction residual does not need to completely coincide with the prediction residual outputted by transformer <b>1303</b>, since the inverse transformation-applied prediction residual is a prediction residual that is generated after the quantization.</p><p id="p-0497" num="0496">Adder <b>1307</b> adds, to generate a reconstructed volume, (i) the inverse transformation-applied prediction residual generated by inverse transformer <b>1306</b> to (ii) a predicted volume that is generated through intra prediction or intra prediction, which will be described later, and is used to generate a pre-quantized prediction residual. This reconstructed volume is stored in reference volume memory <b>1308</b> or reference space memory <b>1310</b>.</p><p id="p-0498" num="0497">Intra predictor <b>1309</b> generates a predicted volume of an encoding target volume using attribute information of a neighboring volume stored in reference volume memory <b>1308</b>. The attribute information includes color information or a reflectance of the voxels. Intra predictor <b>1309</b> generates a predicted value of color information or a reflectance of the encoding target volume;</p><p id="p-0499" num="0498"><figref idref="DRAWINGS">FIG. <b>44</b></figref> is a diagram for describing an operation of intra predictor <b>1309</b>. For example, intra predictor <b>1309</b> generates the predicted volume of the encoding target volume (volume idx=3) shown in <figref idref="DRAWINGS">FIG. <b>44</b></figref>, using a neighboring volume (volume idx=0). Volume idx here is identifier information that is appended to a volume in a space, and a different value is assigned to each volume. An order of assigning volume idx may be the same as an encoding order, and may also be different from the encoding order. For example, intra predictor <b>1309</b> uses an average value of color information of voxels included in volume idx=0, which is a neighboring volume, as the predicted value of the color information of the encoding target volume shown in <figref idref="DRAWINGS">FIG. <b>44</b></figref>. In this case, a prediction residual is generated by deducting the predicted value of the color information from the color information of each voxel included in the encoding target volume. The following processes are performed by transformer <b>1303</b> and subsequent processors with respect to this prediction residual. In this case, three-dimensional data encoding device <b>1300</b> appends, to the bitstream, neighboring volume information and prediction mode information. The neighboring volume information here is information indicating a neighboring volume used in the prediction, and indicates, for example, volume idx of the neighboring volume used in the prediction. The prediction mode information here indicates a mode used to generate the predicted volume. The mode is, for example, an average value mode in which the predicted value is generated using an average value of the voxels in the neighboring volume, or a median mode in which the predicted value is generated using the median of the voxels in the neighboring volume.</p><p id="p-0500" num="0499">Intra predictor <b>1309</b> may generate the predicted volume using a plurality of neighboring volumes. For example, in the structure shown in <figref idref="DRAWINGS">FIG. <b>44</b></figref>, intra predictor <b>1309</b> generates predicted volume 0 using a volume with volume idx=0, and generates predicted volume 1 using a volume with volume idx=1. Intra predictor <b>1309</b> then generates an average of predicted volume 0 and predicted volume 1 as a final predicted volume. In this case, three-dimensional data encoding device <b>1300</b> may append, to the bitstream, a plurality of volumes idx of a plurality of volumes used to generate the predicted volume;</p><p id="p-0501" num="0500"><figref idref="DRAWINGS">FIG. <b>45</b></figref> is a diagram schematically showing the inter prediction process according to the present embodiment. Inter predictor <b>1311</b> encodes (inter predicts) a space (SPC) associated with certain time T_Cur using an encoded space associated with different time T_LX. In this case, inter predictor <b>1311</b> performs an encoding process by applying a rotation and translation process to the encoded space associated with different time T_LX.</p><p id="p-0502" num="0501">Three-dimensional data encoding device <b>1300</b> appends, to the bitstream, RT information relating to a rotation and translation process suited to the space associated with different time T_LX. Different time T_LX is, for example, time T_L0 before certain time T_Cur. At this point, three-dimensional data encoding device <b>1300</b> may append, to the bitstream, RT information RT_L0 relating to a rotation and translation process suited to a space associated with time T_L0.</p><p id="p-0503" num="0502">Alternatively, different time T_LX is, for example, time T_L1 after certain time T_Cur. At this point, three-dimensional data encoding device <b>1300</b> may append, to the bitstream, RT information RT_L<b>1</b> relating to a rotation and translation process suited to a space associated with time T_L1.</p><p id="p-0504" num="0503">Alternatively, inter predictor <b>1311</b> encodes (bidirectional prediction) with reference to the spaces associated with time T_L0 and time T_L1 that differ from each other. In this case, three-dimensional data encoding device <b>1300</b> may append, to the bitstream, both RT information RT_L0 and RT information RT_L1 relating to the rotation and translation process suited to the spaces thereof.</p><p id="p-0505" num="0504">Note that T_L0 has been described as being before T_Cur and T_L1 as being after T_Cur, but are not necessarily limited thereto. For example, T_L0 and T_L1 may both be before T_Cur. T_L0 and T_L1 may also both be after T_Cur.</p><p id="p-0506" num="0505">Three-dimensional data encoding device <b>1300</b> may append, to the bitstream, RT information relating to a rotation and translation process suited to spaces associated with different times, when encoding with reference to each of the spaces. For example, three-dimensional data encoding device <b>1300</b> manages a plurality of encoded spaces to be referred to, using two reference lists (list L0 and list L1). When a first reference space in list L0 is L0R0, a second reference space in list L0 is L0R1, a first reference space in list L1 is L1R0, and a second reference space in list L1 is L1R1, three-dimensional data encoding device <b>1300</b> appends, to the bitstream, RT information RT_L0R0 of L0R0, RT information RT_L0R1 of L0R1, RT information RT_L1R0 of L1R0, and RT information RT_L1R1 of L1R1. For example, three-dimensional data encoding device <b>1300</b> appends these pieces of RT information to a header and the like of the bitstream.</p><p id="p-0507" num="0506">Three-dimensional data encoding device <b>1300</b> determines whether to apply rotation and translation per reference space, when encoding with reference to reference spaces associated with different times. In this case, three-dimensional data encoding device <b>1300</b> may append, to header information and the like of the bitstream, information (RT flag, etc.) indicating whether rotation and translation are applied per reference space. For example, three-dimensional data encoding device <b>1300</b> calculates the RT information and an Iterative Closest Point (ICP) error value, using an ICP algorithm per reference space to be referred to from the encoding target space. Three-dimensional data encoding device <b>1300</b> determines that rotation and translation do not need to be performed and sets the RT flag to OFF, when the ICP error value is lower than or equal to a predetermined fixed value. In contrast, three-dimensional data encoding device <b>1300</b> sets the RT flag to ON and appends the RT information to the bitstream, when the ICP error value exceeds the above fixed value;</p><p id="p-0508" num="0507"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a diagram showing an example syntax to be appended to a header of the RT information and the RT flag. Note that a bit count assigned to each syntax may be decided based on a range of this syntax. For example, when eight reference spaces are included in reference list L0, 3 bits may be assigned to MaxRefSpc_l0. The bit count to be assigned may be variable in accordance with a value each syntax can be, and may also be fixed regardless of the value each syntax can be. When the bit count to be assigned is fixed, three-dimensional data encoding device <b>1300</b> may append this fixed bit count to other header information.</p><p id="p-0509" num="0508">MaxRefSpc_l0 shown in <figref idref="DRAWINGS">FIG. <b>46</b></figref> indicates a number of reference spaces included in reference list L0. RT_flag_l0[i] is an RT flag of reference space i in reference list L0. When RT_flag_l0[i] is 1, rotation and translation are applied to reference space i. When RT_flag_l0[i] is 0, rotation and translation are not applied to reference space i.</p><p id="p-0510" num="0509">R_l0[i] and T_l0[i] are RT information of reference space i in reference list L0. R_l0[i] is rotation information of reference space i in reference list L0. The rotation information indicates contents of the applied rotation process, and is, for example, a rotation matrix or a quaternion. T_l0[i] is translation information of reference space i in reference list L0. The translation information indicates contents of the applied translation process, and is, for example, a translation vector.</p><p id="p-0511" num="0510">MaxRefSpc_l1 indicates a number of reference spaces included in reference list L1. RT_flag_l1[i] is an RT flag of reference space i in reference list L1. When RT_flag_l1[i] is 1, rotation and translation are applied to reference space i. When RT_flag_l1[i] is 0, rotation and translation are not applied to reference space i.</p><p id="p-0512" num="0511">R_l1[i] and T_l1[i] are RT information of reference space i in reference list L1. R_l1[i] is rotation information of reference space i in reference list L1. The rotation information indicates contents of the applied rotation process, and is, for example, a rotation matrix or a quaternion. T_l1[i] is translation information of reference space i in reference list L1. The translation information indicates contents of the applied translation process, and is, for example, a translation vector.</p><p id="p-0513" num="0512">Inter predictor <b>1311</b> generates the predicted volume of the encoding target volume using information on an encoded reference space stored in reference space memory <b>1310</b>. As stated above, before generating the predicted volume of the encoding target volume, inter predictor <b>1311</b> calculates RT information at an encoding target space and a reference space using an ICP algorithm, in order to approach an overall positional relationship between the encoding target space and the reference space. Inter predictor <b>1311</b> then obtains reference space B by applying a rotation and translation process to the reference space using the calculated RT information. Subsequently, inter predictor <b>1311</b> generates the predicted volume of the encoding target volume in the encoding target space using information in reference space B. Three-dimensional data encoding device <b>1300</b> appends, to header information and the like of the encoding target space, the RT information used to obtain reference space B.</p><p id="p-0514" num="0513">In this manner, inter predictor <b>1311</b> is capable of improving precision of the predicted volume by generating the predicted volume using the information of the reference space, after approaching the overall positional relationship between the encoding target space and the reference space, by applying a rotation and translation process to the reference space. It is possible to reduce the code amount since it is possible to limit the prediction residual. Note that an example has been described in which ICP is performed using the encoding target space and the reference space, but is not necessarily limited thereto. For example, inter predictor <b>1311</b> may calculate the RT information by performing ICP using at least one of (i) an encoding target space in which a voxel or point cloud count is pruned, or (ii) a reference space in which a voxel or point cloud count is pruned, in order to reduce the processing amount.</p><p id="p-0515" num="0514">When the ICP error value obtained as a result of the ICP is smaller than a predetermined first threshold, i.e., when for example the positional relationship between the encoding target space and the reference space is similar, inter predictor <b>1311</b> determines that a rotation and translation process is not necessary, and the rotation and translation process does not need to be performed. In this case, three-dimensional data encoding device <b>1300</b> may control the overhead by not appending the RT information to the bitstream.</p><p id="p-0516" num="0515">When the ICP error value is greater than a predetermined second threshold, inter predictor <b>1311</b> determines that a shape change between the spaces is large, and intra prediction may be applied on all volumes of the encoding target space. Hereinafter, spaces to which intra prediction is applied will be referred to as intra spaces. The second threshold is greater than the above first threshold. The present embodiment is not limited to ICP, and any type of method may be used as long as the method calculates the RT information using two voxel sets or two point cloud sets.</p><p id="p-0517" num="0516">When attribute information, e.g. shape or color information, is included in the three-dimensional data, inter predictor <b>1311</b> searches, for example, a volume whose attribute information, e.g. shape or color information, is the most similar to the encoding target volume in the reference space, as the predicted volume of the encoding target volume in the encoding target space. This reference space is, for example, a reference space on which the above rotation and translation process has been performed. Inter predictor <b>1311</b> generates the predicted volume using the volume (reference volume) obtained through the search. <figref idref="DRAWINGS">FIG. <b>47</b></figref> is a diagram for describing a generating operation of the predicted volume. When encoding the encoding target volume (volume idx=0) shown in <figref idref="DRAWINGS">FIG. <b>47</b></figref> using inter prediction, inter predictor <b>1311</b> searches a volume with a smallest prediction residual, which is the difference between the encoding target volume and the reference volume, while sequentially scanning the reference volume in the reference space. Inter predictor <b>1311</b> selects the volume with the smallest prediction residual as the predicted volume. The prediction residuals of the encoding target volume and the predicted volume are encoded through the processes performed by transformer <b>1303</b> and subsequent processors. The prediction residual here is a difference between the attribute information of the encoding target volume and the attribute information of the predicted volume. Three-dimensional data encoding device <b>1300</b> appends, to the header and the like of the bitstream, volume idx of the reference volume in the reference space, as the predicted volume.</p><p id="p-0518" num="0517">In the example shown in <figref idref="DRAWINGS">FIG. <b>47</b></figref>, the reference volume with volume idx=4 of reference space LORO is selected as the predicted volume of the encoding target volume. The prediction residuals of the encoding target volume and the reference volume, and reference volume idx=4 are then encoded and appended to the bitstream.</p><p id="p-0519" num="0518">Note that an example has been described in which the predicted volume of the attribute information is generated, but the same process may be applied to the predicted volume of the position information.</p><p id="p-0520" num="0519">Prediction controller <b>1312</b> controls whether to encode the encoding target volume using intra prediction or inter prediction. A mode including intra prediction and inter prediction is referred to here as a prediction mode. For example, prediction controller <b>1312</b> calculates the prediction residual when the encoding target volume is predicted using intra prediction and the prediction residual when the encoding target volume is predicted using inter prediction as evaluation values, and selects the prediction mode whose evaluation value is smaller. Note that prediction controller <b>1312</b> may calculate an actual code amount by applying orthogonal transformation, quantization, and entropy encoding to the prediction residual of the intra prediction and the prediction residual of the inter prediction, and select a prediction mode using the calculated code amount as the evaluation value. Overhead information (reference volume idx information, etc.) aside from the prediction residual may be added to the evaluation value. Prediction controller <b>1312</b> may continuously select intra prediction when it has been decided in advance to encode the encoding target space using intra space.</p><p id="p-0521" num="0520">Entropy encoder <b>1313</b> generates an encoded signal (encoded bitstream) by variable-length encoding the quantized coefficient, which is an input from quantizer <b>1304</b>. To be specific, entropy encoder <b>1313</b>, for example, binarizes the quantized coefficient and arithmetically encodes the obtained binary signal.</p><p id="p-0522" num="0521">A three-dimensional data decoding device that decodes the encoded signal generated by three-dimensional data encoding device <b>1300</b> will be described next. <figref idref="DRAWINGS">FIG. <b>48</b></figref> is a block diagram of three-dimensional data decoding device <b>1400</b> according to the present embodiment. This three-dimensional data decoding device <b>1400</b> includes entropy decoder <b>1401</b>, inverse quantizer <b>1402</b>, inverse transformer <b>1403</b>, adder <b>1404</b>, reference volume memory <b>1405</b>, intra predictor <b>1406</b>, reference space memory <b>1407</b>, inter predictor <b>1408</b>, and prediction controller <b>1409</b>.</p><p id="p-0523" num="0522">Entropy decoder <b>1401</b> variable-length decodes the encoded signal (encoded bitstream). For example, entropy decoder <b>1401</b> generates a binary signal by arithmetically decoding the encoded signal, and generates a quantized coefficient using the generated binary signal.</p><p id="p-0524" num="0523">Inverse quantizer <b>1402</b> generates an inverse quantized coefficient by inverse quantizing the quantized coefficient inputted from entropy decoder <b>1401</b>, using a quantization parameter appended to the bitstream and the like.</p><p id="p-0525" num="0524">Inverse transformer <b>1403</b> generates a prediction residual by inverse transforming the inverse quantized coefficient inputted from inverse quantizer <b>1402</b>. For example, inverse transformer <b>1403</b> generates the prediction residual by inverse orthogonally transforming the inverse quantized coefficient, based on information appended to the bitstream.</p><p id="p-0526" num="0525">Adder <b>1404</b> adds, to generate a reconstructed volume, (i) the prediction residual generated by inverse transformer <b>1403</b> to (ii) a predicted volume generated through intra prediction or intra prediction. This reconstructed volume is outputted as decoded three-dimensional data and is stored in reference volume memory <b>1405</b> or reference space memory <b>1407</b>.</p><p id="p-0527" num="0526">Intra predictor <b>1406</b> generates a predicted volume through intra prediction using a reference volume in reference volume memory <b>1405</b> and information appended to the bitstream. To be specific, intra predictor <b>1406</b> obtains neighboring volume information (e.g. volume idx) appended to the bitstream and prediction mode information, and generates the predicted volume through a mode indicated by the prediction mode information, using a neighboring volume indicated in the neighboring volume information. Note that the specifics of these processes are the same as the above-mentioned processes performed by intra predictor <b>1309</b>, except for which information appended to the bitstream is used.</p><p id="p-0528" num="0527">Inter predictor <b>1408</b> generates a predicted volume through inter prediction using a reference space in reference space memory <b>1407</b> and information appended to the bitstream. To be specific, inter predictor <b>1408</b> applies a rotation and translation process to the reference space using the RT information per reference space appended to the bitstream, and generates the predicted volume using the rotated and translated reference space. Note that when an RT flag is present in the bitstream per reference space, inter predictor <b>1408</b> applies a rotation and translation process to the reference space in accordance with the RT flag. Note that the specifics of these processes are the same as the above-mentioned processes performed by inter predictor <b>1311</b>, except for which information appended to the bitstream is used.</p><p id="p-0529" num="0528">Prediction controller <b>1409</b> controls whether to decode a decoding target volume using intra prediction or inter prediction. For example, prediction controller <b>1409</b> selects intra prediction or inter prediction in accordance with information that is appended to the bitstream and indicates the prediction mode to be used. Note that prediction controller <b>1409</b> may continuously select intra prediction when it has been decided in advance to decode the decoding target space using intra space.</p><p id="p-0530" num="0529">Hereinafter, variations of the present embodiment will be described. In the present embodiment, an example has been described in which rotation and translation is applied in units of spaces, but rotation and translation may also be applied in smaller units. For example, three-dimensional data encoding device <b>1300</b> may divide a space into subspaces, and apply rotation and translation in units of subspaces. In this case, three-dimensional data encoding device <b>1300</b> generates RT information per subspace, and appends the generated RT information to a header and the like of the bitstream. Three-dimensional data encoding device <b>1300</b> may apply rotation and translation in units of volumes, which is an encoding unit. In this case, three-dimensional data encoding device <b>1300</b> generates RT information in units of encoded volumes, and appends the generated RT information to a header and the like of the bitstream. The above may also be combined. In other words, three-dimensional data encoding device <b>1300</b> may apply rotation and translation in large units and subsequently apply rotation and translation in small units. For example, three-dimensional data encoding device <b>1300</b> may apply rotation and translation in units of spaces, and may also apply different rotations and translations to each of a plurality of volumes included in the obtained spaces.</p><p id="p-0531" num="0530">In the present embodiment, an example has been described in which rotation and translation is applied to the reference space, but is not necessarily limited thereto. For example, three-dimensional data encoding device <b>1300</b> may apply a scaling process and change a size of the three-dimensional data. Three-dimensional data encoding device <b>1300</b> may also apply one or two of the rotation, translation, and scaling. When applying the processes in multiple stages and different units as stated above, a type of the processes applied in each unit may differ. For example, rotation and translation may be applied in units of spaces, and translation may be applied in units of volumes.</p><p id="p-0532" num="0531">Note that these variations are also applicable to three-dimensional data decoding device <b>1400</b>.</p><p id="p-0533" num="0532">As stated above, three-dimensional data encoding device <b>1300</b> according to the present embodiment performs the following processes. <figref idref="DRAWINGS">FIG. <b>48</b></figref> is a flowchart of the inter prediction process performed by three-dimensional data encoding device <b>1300</b>.</p><p id="p-0534" num="0533">Three-dimensional data encoding device <b>1300</b> generates predicted position information (e.g. predicted volume) using position information on three-dimensional points included in three-dimensional reference data (e.g. reference space) associated with a time different from a time associated with current three-dimensional data (e.g. encoding target space) (S<b>1301</b>). To be specific, three-dimensional data encoding device <b>1300</b> generates the predicted position information by applying a rotation and translation process to the position information on the three-dimensional points included in the three-dimensional reference data.</p><p id="p-0535" num="0534">Note that three-dimensional data encoding device <b>1300</b> may perform a rotation and translation process using a first unit (e.g. spaces), and may perform the generating of the predicted position information using a second unit (e.g. volumes) that is smaller than the first unit. For example, three-dimensional data encoding device <b>1300</b> searches a volume among a plurality of volumes included in the rotated and translated reference space, whose position information differs the least from the position information of the encoding target volume included in the encoding target space. Note that three-dimensional data encoding device <b>1300</b> may perform the rotation and translation process, and the generating of the predicted position information in the same unit.</p><p id="p-0536" num="0535">Three-dimensional data encoding device <b>1300</b> may generate the predicted position information by applying (i) a first rotation and translation process to the position information on the three-dimensional points included in the three-dimensional reference data, and (ii) a second rotation and translation process to the position information on the three-dimensional points obtained through the first rotation and translation process, the first rotation and translation process using a first unit (e.g. spaces) and the second rotation and translation process using a second unit (e.g. volumes) that is smaller than the first unit.</p><p id="p-0537" num="0536">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>41</b></figref>, the position information on the three-dimensional points and the predicted position information is represented using an octree structure. For example, the position information on the three-dimensional points and the predicted position information is expressed in a scan order that prioritizes a breadth over a depth in the octree structure. For example, the position information on the three-dimensional points and the predicted position information is expressed in a scan order that prioritizes a depth over a breadth in the octree structure.</p><p id="p-0538" num="0537">As illustrated in <figref idref="DRAWINGS">FIG. <b>46</b></figref>, three-dimensional data encoding device <b>1300</b> encodes an RT flag that indicates whether to apply the rotation and translation process to the position information on the three-dimensional points included in the three-dimensional reference data. In other words, three-dimensional data encoding device <b>1300</b> generates the encoded signal (encoded bitstream) including the RT flag. Three-dimensional data encoding device <b>1300</b> encodes RT information that indicates contents of the rotation and translation process. In other words, three-dimensional data encoding device <b>1300</b> generates the encoded signal (encoded bitstream) including the RT information. Note that three-dimensional data encoding device <b>1300</b> may encode the RT information when the RT flag indicates to apply the rotation and translation process, and does not need to encode the RT information when the RT flag indicates not to apply the rotation and translation process.</p><p id="p-0539" num="0538">The three-dimensional data includes, for example, the position information on the three-dimensional points and the attribute information (color information, etc.) of each three-dimensional point. Three-dimensional data encoding device <b>1300</b> generates predicted attribute information using the attribute information of the three-dimensional points included in the three-dimensional reference data (S<b>1302</b>).</p><p id="p-0540" num="0539">Three-dimensional data encoding device <b>1300</b> next encodes the position information on the three-dimensional points included in the current three-dimensional data, using the predicted position information. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>38</b></figref>, three-dimensional data encoding device <b>1300</b> calculates differential position information, the differential position information being a difference between the predicted position information and the position information on the three-dimensional points included in the current three-dimensional data (S<b>1303</b>).</p><p id="p-0541" num="0540">Three-dimensional data encoding device <b>1300</b> encodes the attribute information of the three-dimensional points included in the current three-dimensional data, using the predicted attribute information. For example, three-dimensional data encoding device <b>1300</b> calculates differential attribute information, the differential attribute information being a difference between the predicted attribute information and the attribute information on the three-dimensional points included in the current three-dimensional data (S<b>1304</b>). Three-dimensional data encoding device <b>1300</b> next performs transformation and quantization on the calculated differential attribute information (S<b>1305</b>).</p><p id="p-0542" num="0541">Lastly, three-dimensional data encoding device <b>1300</b> encodes (e.g. entropy encodes) the differential position information and the quantized differential attribute information (S<b>1036</b>). In other words, three-dimensional data encoding device <b>1300</b> generates the encoded signal (encoded bitstream) including the differential position information and the differential attribute information.</p><p id="p-0543" num="0542">Note that when the attribute information is not included in the three-dimensional data, three-dimensional data encoding device <b>1300</b> does not need to perform steps S<b>1302</b>, S<b>1304</b>, and S<b>1305</b>. Three-dimensional data encoding device <b>1300</b> may also perform only one of the encoding of the position information on the three-dimensional points and the encoding of the attribute information of the three-dimensional points.</p><p id="p-0544" num="0543">An order of the processes shown in <figref idref="DRAWINGS">FIG. <b>49</b></figref> is merely an example and is not limited thereto. For example, since the processes with respect to the position information (S<b>1301</b> and S<b>1303</b>) and the processes with respect to the attribute information (S<b>1302</b>, S<b>1304</b>, and S<b>1305</b>) are separate from one another, they may be performed in an order of choice, and a portion thereof may also be performed in parallel.</p><p id="p-0545" num="0544">With the above, three-dimensional data encoding device <b>1300</b> according to the present embodiment generates predicted position information using position information on three-dimensional points included in three-dimensional reference data associated with a time different from a time associated with current three-dimensional data; and encodes differential position information, which is a difference between the predicted position information and the position information on the three-dimensional points included in the current three-dimensional data. This makes it possible to improve encoding efficiency since it is possible to reduce the amount of data of the encoded signal.</p><p id="p-0546" num="0545">Three-dimensional data encoding device <b>1300</b> according to the present embodiment generates predicted attribute information using attribute information on three-dimensional points included in three-dimensional reference data; and encodes differential attribute information, which is a difference between the predicted attribute information and the attribute information on the three-dimensional points included in the current three-dimensional data. This makes it possible to improve encoding efficiency since it is possible to reduce the amount of data of the encoded signal.</p><p id="p-0547" num="0546">For example, three-dimensional data encoding device <b>1300</b> includes a processor and memory. The processor uses the memory to perform the above processes;</p><p id="p-0548" num="0547"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a flowchart of the inter prediction process performed by three-dimensional data decoding device <b>1400</b>.</p><p id="p-0549" num="0548">Three-dimensional data decoding device <b>1400</b> decodes (e.g. entropy decodes) the differential position information and the differential attribute information from the encoded signal (encoded bitstream) (S<b>1401</b>).</p><p id="p-0550" num="0549">Three-dimensional data decoding device <b>1400</b> decodes, from the encoded signal, an RT flag that indicates whether to apply the rotation and translation process to the position information on the three-dimensional points included in the three-dimensional reference data. Three-dimensional data decoding device <b>1400</b> encodes RT information that indicates contents of the rotation and translation process. Note that three-dimensional data decoding device <b>1400</b> may decode the RT information when the RT flag indicates to apply the rotation and translation process, and does not need to decode the RT information when the RT flag indicates not to apply the rotation and translation process.</p><p id="p-0551" num="0550">Three-dimensional data decoding device <b>1400</b> next performs inverse transformation and inverse quantization on the decoded differential attribute information (S<b>1402</b>).</p><p id="p-0552" num="0551">Three-dimensional data decoding device <b>1400</b> next generates predicted position information (e.g. predicted volume) using the position information on the three-dimensional points included in the three-dimensional reference data (e.g. reference space) associated with a time different from a time associated with the current three-dimensional data (e.g. decoding target space) (S<b>1403</b>). To be specific, three-dimensional data decoding device <b>1400</b> generates the predicted position information by applying a rotation and translation process to the position information on the three-dimensional points included in the three-dimensional reference data.</p><p id="p-0553" num="0552">More specifically, when the RT flag indicates to apply the rotation and translation process, three-dimensional data decoding device <b>1400</b> applies the rotation and translation process on the position information on the three-dimensional points included in the three-dimensional reference data indicated in the RT information. In contrast, when the RT flag indicates not to apply the rotation and translation process, three-dimensional data decoding device <b>1400</b> does not apply the rotation and translation process on the position information on the three-dimensional points included in the three-dimensional reference data.</p><p id="p-0554" num="0553">Note that three-dimensional data decoding device <b>1400</b> may perform the rotation and translation process using a first unit (e.g. spaces), and may perform the generating of the predicted position information using a second unit (e.g. volumes) that is smaller than the first unit. Note that three-dimensional data decoding device <b>1400</b> may perform the rotation and translation process, and the generating of the predicted position information in the same unit.</p><p id="p-0555" num="0554">Three-dimensional data decoding device <b>1400</b> may generate the predicted position information by applying (i) a first rotation and translation process to the position information on the three-dimensional points included in the three-dimensional reference data, and (ii) a second rotation and translation process to the position information on the three-dimensional points obtained through the first rotation and translation process, the first rotation and translation process using a first unit (e.g. spaces) and the second rotation and translation process using a second unit (e.g. volumes) that is smaller than the first unit.</p><p id="p-0556" num="0555">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>41</b></figref>, the position information on the three-dimensional points and the predicted position information is represented using an octree structure. For example, the position information on the three-dimensional points and the predicted position information is expressed in a scan order that prioritizes a breadth over a depth in the octree structure. For example, the position information on the three-dimensional points and the predicted position information is expressed in a scan order that prioritizes a depth over a breadth in the octree structure.</p><p id="p-0557" num="0556">Three-dimensional data decoding device <b>1400</b> generates predicted attribute information using the attribute information of the three-dimensional points included in the three-dimensional reference data (S<b>1404</b>).</p><p id="p-0558" num="0557">Three-dimensional data decoding device <b>1400</b> next restores the position information on the three-dimensional points included in the current three-dimensional data, by decoding encoded position information included in an encoded signal, using the predicted position information. The encoded position information here is the differential position information. Three-dimensional data decoding device <b>1400</b> restores the position information on the three-dimensional points included in the current three-dimensional data, by adding the differential position information to the predicted position information (S<b>1405</b>).</p><p id="p-0559" num="0558">Three-dimensional data decoding device <b>1400</b> restores the attribute information of the three-dimensional points included in the current three-dimensional data, by decoding encoded attribute information included in an encoded signal, using the predicted attribute information. The encoded attribute information here is the differential position information. Three-dimensional data decoding device <b>1400</b> restores the attribute information on the three-dimensional points included in the current three-dimensional data, by adding the differential attribute information to the predicted attribute information (S<b>1406</b>).</p><p id="p-0560" num="0559">Note that when the attribute information is not included in the three-dimensional data, three-dimensional data decoding device <b>1400</b> does not need to perform steps S<b>1402</b>, S<b>1404</b>, and S<b>1406</b>. Three-dimensional data decoding device <b>1400</b> may also perform only one of the decoding of the position information on the three-dimensional points and the decoding of the attribute information of the three-dimensional points.</p><p id="p-0561" num="0560">An order of the processes shown in <figref idref="DRAWINGS">FIG. <b>50</b></figref> is merely an example and is not limited thereto. For example, since the processes with respect to the position information (S<b>1403</b> and S<b>1405</b>) and the processes with respect to the attribute information (S<b>1402</b>, S<b>1404</b>, and S<b>1406</b>) are separate from one another, they may be performed in an order of choice, and a portion thereof may also be performed in parallel.</p><heading id="h-0014" level="1">Embodiment 8</heading><p id="p-0562" num="0561">In the present embodiment, a method of controlling reference when an occupancy code is encoded will be described. It should be noted that although the following mainly describes an operation of a three-dimensional data encoding device, a three-dimensional data decoding device may perform the same process;</p><p id="p-0563" num="0562"><figref idref="DRAWINGS">FIG. <b>51</b></figref> and <figref idref="DRAWINGS">FIG. <b>52</b></figref> each are a diagram illustrating a reference relationship according to the present embodiment. Specifically, <figref idref="DRAWINGS">FIG. <b>51</b></figref> is a diagram illustrating a reference relationship in an octree structure, and <figref idref="DRAWINGS">FIG. <b>52</b></figref> is a diagram illustrating a reference relationship in a spatial region.</p><p id="p-0564" num="0563">In the present embodiment, when the three-dimensional data encoding device encodes encoding information of a current node to be encoded (hereinafter referred to as a current node), the three-dimensional data encoding device refers to encoding information of each node in a parent node to which the current node belongs. In this regard, however, the three-dimensional encoding device does not refer to encoding information of each node in another node (hereinafter referred to as a parent neighbor node) that is in the same layer as the parent node. In other words, the three-dimensional data encoding device disables or prohibits reference to a parent neighbor node.</p><p id="p-0565" num="0564">It should be noted that the three-dimensional data encoding device may permit reference to encoding information of a parent node (hereinafter also referred to as a grandparent node) of the parent node. In other words, the three-dimensional data encoding device may encode the encoding information of the current node by reference to the encoding information of each of the grandparent node and the parent node to which the current node belongs.</p><p id="p-0566" num="0565">Here, encoding information is, for example, an occupancy code. When the three-dimensional data encoding device encodes the occupancy code of the current node, the three-dimensional data encoding device refers to information (hereinafter referred to as occupancy information) indicating whether a point cloud is included in each node in the parent node to which the current node belongs. To put it in another way, when the three-dimensional data encoding device encodes the occupancy code of the current node, the three-dimensional data encoding device refers to an occupancy code of the parent node. On the other hand, the three-dimensional data encoding device does not refer to occupancy information of each node in a parent neighbor node. In other words, the three-dimensional data encoding device does not refer to an occupancy code of the parent neighbor node. Moreover, the three-dimensional data encoding device may refer to occupancy information of each node in the grandparent node. In other words, the three-dimensional data encoding device may refer to the occupancy information of each of the parent node and the parent neighbor node.</p><p id="p-0567" num="0566">For example, when the three-dimensional data encoding device encodes the occupancy code of the current node, the three-dimensional data encoding device selects a coding table to be used for entropy encoding of the occupancy code of the current node, using the occupancy code of the grandparent node or the parent node to which the current node belongs. It should be noted that the details will be described later. At this time, the three-dimensional data encoding device need not refer to the occupancy code of the parent neighbor node. Since this enables the three-dimensional data encoding device to, when encoding the occupancy code of the current node, appropriately select a coding table according to information of the occupancy code of the parent node or the grandparent node, the three-dimensional data encoding device can improve the coding efficiency. Moreover, by not referring to the parent neighbor node, the three-dimensional data encoding device can suppress a process of checking the information of the parent neighbor node and reduce a memory capacity for storing the information. Furthermore, scanning the occupancy code of each node of the octree in a depth-first order makes encoding easy.</p><p id="p-0568" num="0567">The following describes an example of selecting a coding table using an occupancy code of a parent node. <figref idref="DRAWINGS">FIG. <b>53</b></figref> is a diagram illustrating an example of a current node and neighboring reference nodes. <figref idref="DRAWINGS">FIG. <b>54</b></figref> is a diagram illustrating a relationship between a parent node and nodes. <figref idref="DRAWINGS">FIG. <b>55</b></figref> is a diagram illustrating an example of an occupancy code of the parent node. Here, a neighboring reference node is a node referred to when a current node is encoded, among nodes spatially neighboring the current node. In the example shown in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, the neighboring nodes belong to the same layer as the current node. Moreover, node X neighboring the current node in the x direction, node Y neighboring the current block in the y direction, and node Z neighboring the current block in the z direction are used as the reference neighboring nodes. In other words, one neighboring node is set as a reference neighboring node in each of the x, y, and z directions.</p><p id="p-0569" num="0568">It should be noted that the node numbers shown in <figref idref="DRAWINGS">FIG. <b>54</b></figref> are one example, and a relationship between node numbers and node positions is not limited to the relationship shown in <figref idref="DRAWINGS">FIG. <b>54</b></figref>. Although node 0 is assigned to the lowest-order bit and node 7 is assigned to the highest-order bit in <figref idref="DRAWINGS">FIG. <b>55</b></figref>, assignments may be made in reverse order. In addition, each node may be assigned to any bit.</p><p id="p-0570" num="0569">The three-dimensional data encoding device determines a coding table to be used when the three-dimensional data encoding device entropy encodes an occupancy code of a current node, using the following equation, for example.</p><p id="p-0571" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>CodingTable=(Flag<i>X&#x3c;&#x3c;</i>2)+(Flag<i>Y&#x3c;&#x3c;</i>1)+(Flag<i>Z</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0572" num="0570">Here, CodingTable indicates a coding table for an occupancy code of a current node, and indicates one of values ranging from 0 to 7. FlagX is occupancy information of neighboring node X. FlagX indicates 1 when neighboring node X includes a point cloud (is occupied), and indicates 0 when it does not. FlagY is occupancy information of neighboring node Y. FlagY indicates 1 when neighboring node Y includes a point cloud (is occupied), and indicates 0 when it does not. FlagZ is occupancy information of neighboring node Z. FlagZ indicates 1 when neighboring node Z includes a point cloud (is occupied), and indicates 0 when it does not.</p><p id="p-0573" num="0571">It should be noted that since information indicating whether a neighboring node is occupied is included in an occupancy code of a parent node, the three-dimensional data encoding device may select a coding table using a value indicated by the occupancy code of the parent node.</p><p id="p-0574" num="0572">From the foregoing, the three-dimensional data encoding device can improve the coding efficiency by selecting a coding table using the information indicating whether the neighboring node of the current node includes a point cloud.</p><p id="p-0575" num="0573">Moreover, as illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, the three-dimensional data encoding device may select a neighboring reference node according to a spatial position of the current node in the parent node. In other words, the three-dimensional data encoding device may select a neighboring node to be referred to from the neighboring nodes, according to the spatial position of the current node in the parent node.</p><p id="p-0576" num="0574">Next, the following describes examples of configurations of the three-dimensional data encoding device and the three-dimensional data decoding device. <figref idref="DRAWINGS">FIG. <b>56</b></figref> is a block diagram of three-dimensional encoding device <b>2100</b> according to the present embodiment. Three-dimensional data encoding device <b>2100</b> illustrated in <figref idref="DRAWINGS">FIG. <b>56</b></figref> includes octree generator <b>2101</b>, geometry information calculator <b>2102</b>, coding table selector <b>2103</b>, and entropy encoder <b>2104</b>.</p><p id="p-0577" num="0575">Octree generator <b>2101</b> generates, for example, an octree from inputted three-dimensional points (a point cloud), and generates an occupancy code for each node included in the octree. Geometry information calculator <b>2102</b> obtains occupancy information indicating whether a neighboring reference node of a current node is occupied. For example, geometry information calculator <b>2102</b> obtains the occupancy information of the neighboring reference node from an occupancy code of a parent node to which the current node belongs. It should be noted that, as illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, geometry information calculator <b>2102</b> may select a neighboring reference node according to a position of the current node in the parent node. In addition, geometry information calculator <b>2102</b> does not refer to occupancy information of each node in a parent neighbor node.</p><p id="p-0578" num="0576">Coding table selector <b>2103</b> selects a coding table to be used for entropy encoding of an occupancy code of the current node, using the occupancy information of the neighboring reference node calculated by geometry information calculator <b>2102</b>. Entropy encoder <b>2104</b> generates a bitstream by entropy encoding the occupancy code using the selected coding table. It should be noted that entropy encoder <b>2104</b> may append, to the bitstream, information indicating the selected coding table;</p><p id="p-0579" num="0577"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a block diagram of three-dimensional decoding device <b>2110</b> according to the present embodiment. Three-dimensional data decoding device <b>2110</b> illustrated in <figref idref="DRAWINGS">FIG. <b>57</b></figref> includes octree generator <b>2111</b>, geometry information calculator <b>2112</b>, coding table selector <b>2113</b>, and entropy decoder <b>2114</b>.</p><p id="p-0580" num="0578">Octree generator <b>2111</b> generates an octree of a space (nodes) using header information of a bitstream etc. Octree generator <b>2111</b> generates an octree by, for example, generating a large space (a root node) using the size of a space along the x-axis, y-axis, and z-axis directions appended to the header information, and generating eight small spaces A (nodes A0 to A7) by dividing the space into two along each of the x-axis, y-axis, and z-axis directions. Nodes A0 to A7 are set as a current node in sequence.</p><p id="p-0581" num="0579">Geometry information calculator <b>2112</b> obtains occupancy information indicating whether a neighboring reference node of a current node is occupied. For example, geometry information calculator <b>2112</b> obtains the occupancy information of the neighboring reference node from an occupancy code of a parent node to which the current node belongs. It should be noted that, as illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, geometry information calculator <b>2112</b> may select a neighboring reference node according to a position of the current node in the parent node. In addition, geometry information calculator <b>2112</b> does not refer to occupancy information of each node in a parent neighboring node.</p><p id="p-0582" num="0580">Coding table selector <b>2113</b> selects a coding table (a decoding table) to be used for entropy decoding of the occupancy code of the current node, using the occupancy information of the neighboring reference node calculated by geometry information calculator <b>2112</b>. Entropy decoder <b>2114</b> generates three-dimensional points by entropy decoding the occupancy code using the selected coding table. It should be noted that coding table selector <b>2113</b> may obtain, by performing decoding, information of the selected coding table appended to the bitstream, and entropy decoder <b>2114</b> may use a coding table indicated by the obtained information.</p><p id="p-0583" num="0581">Each bit of the occupancy code (8 bits) included in the bitstream indicates whether a corresponding one of eight small spaces A (nodes A0 to A7) includes a point cloud. Furthermore, the three-dimensional data decoding device generates an octree by dividing small space node AO into eight small spaces B (nodes B0 to B7), and obtains information indicating whether each node of small space B includes a point cloud, by decoding the occupancy code. In this manner, the three-dimensional data decoding device decodes the occupancy code of each node while generating an octree by dividing a large space into small spaces.</p><p id="p-0584" num="0582">The following describes procedures for processes performed by the three-dimensional data encoding device and the three-dimensional data decoding device. <figref idref="DRAWINGS">FIG. <b>58</b></figref> is a flowchart of a three-dimensional data encoding process in the three-dimensional data encoding device. First, the three-dimensional data encoding device determines (defines) a space (a current node) including part or whole of an inputted three-dimensional point cloud (S<b>2101</b>). Next, the three-dimensional data encoding device generates eight small spaces (nodes) by dividing the current node into eight (S<b>2102</b>). Then, the three-dimensional data encoding device generates an occupancy code for the current node according to whether each node includes a point cloud (S<b>2103</b>).</p><p id="p-0585" num="0583">After that, the three-dimensional data encoding device calculates (obtains) occupancy information of a neighboring reference node of the current node from an occupancy code of a parent node of the current node (S<b>2104</b>). Next, the three-dimensional data encoding device selects a coding table to be used for entropy encoding, based on the calculated occupancy information of the neighboring reference node of the current node (S<b>2105</b>). Then, the three-dimensional data encoding device entropy encodes the occupancy code of the current node using the selected coding table (S<b>2106</b>).</p><p id="p-0586" num="0584">Finally, the three-dimensional data encoding device repeats a process of dividing each node into eight and encoding an occupancy code of the node, until the node cannot be divided (S<b>2107</b>). In other words, steps S<b>2102</b> to S<b>2106</b> are recursively repeated;</p><p id="p-0587" num="0585"><figref idref="DRAWINGS">FIG. <b>59</b></figref> is a flowchart of a three-dimensional data decoding process in the three-dimensional data decoding device. First, the three-dimensional data decoding device determines (defines) a space (a current node) to be decoded, using header information of a bitstream (S<b>2111</b>). Next, the three-dimensional data decoding device generates eight small spaces (nodes) by dividing the current node into eight (S<b>2112</b>). Then, the three-dimensional data decoding device calculates (obtains) occupancy information of a neighboring reference node of the current node from an occupancy code of a parent node of the current node (S<b>2113</b>).</p><p id="p-0588" num="0586">After that, the three-dimensional data decoding device selects a coding table to be used for entropy decoding, based on the occupancy information of the neighboring reference node (S<b>2114</b>). Next, the three-dimensional data decoding device entropy decodes the occupancy code of the current node using the selected coding table (S<b>2115</b>).</p><p id="p-0589" num="0587">Finally, the three-dimensional data decoding device repeats a process of dividing each node into eight and decoding an occupancy code of the node, until the node cannot be divided (S<b>2116</b>). In other words, steps S<b>2112</b> to S<b>2115</b> are recursively repeated.</p><p id="p-0590" num="0588">Next, the following describes an example of selecting a coding table. <figref idref="DRAWINGS">FIG. <b>60</b></figref> is a diagram illustrating an example of selecting a coding table. For example, as in coding table 0 shown in <figref idref="DRAWINGS">FIG. <b>60</b></figref>, the same context mode may be applied to occupancy codes. Moreover, a different context model may be assigned to each occupancy code. Since this enables assignment of a context model in accordance with a probability of appearance of an occupancy code, it is possible to improve the coding efficiency. Furthermore, a context mode that updates a probability table in accordance with an appearance frequency of an occupancy code may be used. Alternatively, a context model having a fixed probability table may be used.</p><p id="p-0591" num="0589">Hereinafter, Variation 1 of the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>61</b></figref> is a diagram illustrating a reference relationship in the present variation. Although the three-dimensional data encoding device does not refer to the occupancy code of the parent neighbor node in the above-described embodiment, the three-dimensional data encoding device may switch whether to refer to an occupancy code of a parent neighbor node, according to a specific condition.</p><p id="p-0592" num="0590">For example, when the three-dimensional data encoding device encodes an octree while scanning the octree breadth-first, the three-dimensional data encoding device encodes an occupancy code of a current node by reference to occupancy information of a node in a parent neighbor node. In contrast, when the three-dimensional data encoding device encodes the octree while scanning the octree depth-first, the three-dimensional data encoding device prohibits reference to the occupancy information of the node in the parent neighbor node. By appropriately selecting a referable node according to the scan order (encoding order) of nodes of the octree in the above manner, it is possible to improve the coding efficiency and reduce the processing load.</p><p id="p-0593" num="0591">It should be noted that the three-dimensional data encoding device may append, to a header of a bitstream, information indicating, for example, whether an octree is encoded breadth-first or depth-first. <figref idref="DRAWINGS">FIG. <b>62</b></figref> is a diagram illustrating an example of a syntax of the header information in this case. octree_scan_order shown in <figref idref="DRAWINGS">FIG. <b>62</b></figref> is encoding order information (an encoding order flag) indicating an encoding order for an octree. For example, when octree_scan_order is 0, breadth-first is indicated, and when octree_scan_order is 1, depth-first is indicated. Since this enables the three-dimensional data decoding device to determine whether a bitstream has been encoded breadth-first or depth-first by reference to octree_scan_order, the three-dimensional data decoding device can appropriately decode the bitstream</p><p id="p-0594" num="0592">Moreover, the three-dimensional data encoding device may append, to header information of a bitstream, information indicating whether to prohibit reference to a parent neighbor node. <figref idref="DRAWINGS">FIG. <b>63</b></figref> is a diagram illustrating an example of a syntax of the header information in this case. limit_refer_flag is prohibition switch information (a prohibition switch flag) indicating whether to prohibit reference to a parent neighbor node. For example, when limit_refer_flag is 1, prohibition of reference to the parent neighbor node is indicated, and when limit_refer_flag is 0, no reference limitation (permission of reference to the parent neighbor node) is indicated.</p><p id="p-0595" num="0593">In other words, the three-dimensional data encoding device determines whether to prohibit the reference to the parent neighbor node, and selects whether to prohibit or permit the reference to the parent neighbor node, based on a result of the above determination. In addition, the three-dimensional data encoding device generates a bitstream including prohibition switch information that indicates the result of the determination and indicates whether to prohibit the reference to the parent neighbor node.</p><p id="p-0596" num="0594">The three-dimensional data decoding device obtains, from a bitstream, prohibition switch information indicating whether to prohibit reference to a parent neighbor node, and selects whether to prohibit or permit the reference to the parent neighbor node, based on the prohibition switch information.</p><p id="p-0597" num="0595">This enables the three-dimensional data encoding device to control the reference to the parent neighbor node and generate the bitstream. That also enables the three-dimensional data decoding device to obtain, from the header of the bitstream, the information indicating whether to prohibit the reference to the parent neighbor node.</p><p id="p-0598" num="0596">Although the process of encoding an occupancy code has been described as an example of an encoding process in which reference to a parent neighbor node is prohibited in the present embodiment, the present disclosure is not necessarily limited to this. For example, the same method can be applied when other information of a node of an octree is encoded. For example, the method of the present embodiment may be applied when other attribute information, such as a color, a normal vector, or a degree of reflection, added to a node is encoded. Additionally, the same method can be applied when a coding table or a predicted value is encoded.</p><p id="p-0599" num="0597">Hereinafter, Variation 2 of the present embodiment will be described. In the above description, as illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, the example in which the three reference neighboring nodes are used is given, but four or more reference neighboring nodes may be used. <figref idref="DRAWINGS">FIG. <b>64</b></figref> is a diagram illustrating an example of a current node and neighboring reference nodes.</p><p id="p-0600" num="0598">For example, the three-dimensional data encoding device calculates a coding table to be used when the three-dimensional data encoding device entropy encodes an occupancy code of the current node shown in <figref idref="DRAWINGS">FIG. <b>64</b></figref>, using the following equation.</p><p id="p-0601" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>CodingTable=(Flag<i>X</i>0&#x3c;&#x3c;3)+(Flag<i>X</i>1&#x3c;&#x3c;2)+(Flag<i>Y&#x3c;&#x3c;</i>1)+(Flag<i>Z</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0602" num="0599">Here, CodingTable indicates a coding table for an occupancy code of a current node, and indicates one of values ranging from 0 to 15. FlagXN is occupancy information of neighboring node XN (N=0 . . . 1). FlaxXN indicates 1 when neighboring node XN includes a point cloud (is occupied), and indicates 0 when it does not. FlagY is occupancy information of neighboring node Y. FlagY indicates 1 when neighboring node Y includes a point cloud (is occupied), and indicates 0 when it does not. FlagZ is occupancy information of neighboring node Z. FlagZ indicates 1 when neighboring node Z includes a point cloud (is occupied), and indicates 0 when it does not.</p><p id="p-0603" num="0600">At this time, when a neighboring node, for example, neighboring node X0 in <figref idref="DRAWINGS">FIG. <b>64</b></figref>, is unreferable (prohibited from being referred to), the three-dimensional data encoding device may use, as a substitute value, a fixed value such as 1 (occupied) or 0 (unoccupied);</p><p id="p-0604" num="0601"><figref idref="DRAWINGS">FIG. <b>65</b></figref> is a diagram illustrating an example of a current node and neighboring reference nodes. As illustrated in <figref idref="DRAWINGS">FIG. <b>65</b></figref>, when a neighboring node is unreferable (prohibited from being referred to), occupancy information of the neighboring node may be calculated by reference to an occupancy code of a grandparent node of the current node. For example, the three-dimensional data encoding device may calculate FlagX0 in the above equation using occupancy information of neighboring node G0 instead of neighboring node XO illustrated in <figref idref="DRAWINGS">FIG. <b>65</b></figref>, and may determine a value of a coding table using calculated FlagX0. It should be noted that neighboring node G0 illustrated in <figref idref="DRAWINGS">FIG. <b>65</b></figref> is a neighboring node occupancy or unoccupancy of which can be determined using the occupancy code of the grandparent node. Neighboring node X1 is a neighboring node occupancy or unoccupancy of which can be determined using an occupancy code of a parent node.</p><p id="p-0605" num="0602">Hereinafter, Variation 3 of the present embodiment will be described. <figref idref="DRAWINGS">FIG. <b>66</b></figref> and <figref idref="DRAWINGS">FIG. <b>67</b></figref> each are a diagram illustrating a reference relationship according to the present variation. Specifically, <figref idref="DRAWINGS">FIG. <b>66</b></figref> is a diagram illustrating a reference relationship in an octree structure, and <figref idref="DRAWINGS">FIG. <b>67</b></figref> is a diagram illustrating a reference relationship in a spatial region.</p><p id="p-0606" num="0603">In the present variation, when the three-dimensional data encoding device encodes encoding information of a current node to be encoded (hereinafter referred to as current node 2), the three-dimensional data encoding device refers to encoding information of each node in a parent node to which current node 2 belongs. In other words, the three-dimensional data encoding device permits reference to information (e.g., occupancy information) of a child node of a first node, among neighboring nodes, that has the same parent node as a current node. For example, when the three-dimensional data encoding device encodes an occupancy code of current node 2 illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref>, the three-dimensional data encoding device refers to an occupancy code of a node in the parent node to which current node 2 belongs, for example, the current node illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref>. As illustrated in <figref idref="DRAWINGS">FIG. <b>67</b></figref>, the occupancy code of the current node illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref> indicates, for example, whether each node in the current node neighboring current node 2 is occupied. Accordingly, since the three-dimensional data encoding device can select a coding table for the occupancy code of current node 2 in accordance with a more particular shape of the current node, the three-dimensional data encoding device can improve the coding efficiency.</p><p id="p-0607" num="0604">The three-dimensional data encoding device may calculate a coding table to be used when the three-dimensional data encoding device entropy encodes the occupancy code of current node 2, using the following equation, for example.</p><p id="p-0608" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>CodingTable=(Flag<i>X</i>1&#x3c;&#x3c;5)+(Flag<i>X</i>2&#x3c;&#x3c;4)+(Flag<i>X</i>3&#x3c;&#x3c;3)+(FlagX4&#x3c;&#x3c;2)+(Flag<i>Y&#x3c;&#x3c;</i>1)+(Flag<i>Z</i>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0609" num="0605">Here, CodingTable indicates a coding table for an occupancy code of current node 2, and indicates one of values ranging from 0 to 63. FlagXN is occupancy information of neighboring node XN (N=1 . . . 4). FlagXN indicates 1 when neighboring node XN includes a point cloud (is occupied), and indicates 0 when it does not. FlagY is occupancy information of neighboring node Y. FlagY indicates 1 when neighboring node Y includes a point cloud (is occupied), and indicates 0 when it does not. FlagZ is occupancy information of neighboring node Z. FlagZ indicates 1 when neighboring node Z includes a point cloud (is occupied), and indicates 0 when it does not.</p><p id="p-0610" num="0606">It should be noted that the three-dimensional data encoding device may change a method of calculating a coding table, according to a node position of current node 2 in the parent node.</p><p id="p-0611" num="0607">When reference to a parent neighbor node is not prohibited, the three-dimensional data encoding device may refer to encoding information of each node in the parent neighbor node. For example, when the reference to the parent neighbor node is not prohibited, reference to information (e.g., occupancy information) of a child node of a third node having a different parent node from that of a current node. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>65</b></figref>, for example, the three-dimensional data encoding device obtains occupancy information of a child node of neighboring node XO by reference to an occupancy code of neighboring node X0 having a different parent node from that of the current node. The three-dimensional data encoding device selects a coding table to be used for entropy encoding of an occupancy code of the current node, based on the obtained occupancy information of the child node of neighboring node X0.</p><p id="p-0612" num="0608">As stated above, the three-dimensional data encoding device according to the present embodiment encodes information (e.g., an occupancy code) of a current node included in an N-ary tree structure of three-dimensional points included in three-dimensional data, where N is an integer greater than or equal to 2. As illustrated in <figref idref="DRAWINGS">FIG. <b>51</b></figref> and <figref idref="DRAWINGS">FIG. <b>52</b></figref>, in the encoding, the three-dimensional data encoding device permits reference to information (e.g., occupancy information) of a first node included in neighboring nodes spatially neighboring the current node, and prohibits reference to information of a second node included in the neighboring nodes, the first node having a same parent node as the current node, the second node having a different parent node from the parent node of the current node. To put it another way, in the encoding, the three-dimensional data encoding device permits reference to information (e.g., an occupancy code) of the parent node, and prohibits reference to information (e.g., an occupancy code) of another node (a parent neighbor node) in the same layer as the parent node.</p><p id="p-0613" num="0609">With this, the three-dimensional data encoding device can improve coding efficiency by reference to the information of the first node included in the neighboring nodes spatially neighboring the current node, the first node having the same parent node as the current node. Besides, the three-dimensional data encoding device can reduce a processing amount by not reference to the information of the second node included in the neighboring nodes, the second node having a different parent node from the parent node of the current node. In this manner, the three-dimensional data encoding device can not only improve the coding efficiency but also reduce the processing amount.</p><p id="p-0614" num="0610">For example, the three-dimensional data encoding device further determines whether to prohibit the reference to the information of the second node. In the encoding, the three-dimensional data encoding device selects whether to prohibit or permit the reference to the information of the second node, based on a result of the determining. Moreover, the three-dimensional data encoding device generates a bit stream including prohibition switch information (e.g., limit_refer_flag shown in <figref idref="DRAWINGS">FIG. <b>63</b></figref>) that indicates the result of the determining and indicates whether to prohibit the reference to the information of the second node.</p><p id="p-0615" num="0611">With this, the three-dimensional data encoding device can select whether to prohibit the reference to the information of the second node. In addition, a three-dimensional data decoding device can appropriately perform a decoding process using the prohibition switch information.</p><p id="p-0616" num="0612">For example, the information of the current node is information (e.g., an occupancy code) that indicates whether a three-dimensional point is present in each of child nodes belonging to the current node. The information of the first node is information (the occupancy information of the first node) that indicates whether a three-dimensional point is present in the first node. The information of the second node is information (the occupancy information of the second node) that indicates whether a three-dimensional point is present in the second node.</p><p id="p-0617" num="0613">For example, in the encoding, the three-dimensional data encoding device selects a coding table based on whether the three-dimensional point is present in the first node, and entropy encodes the information (e.g., the occupancy code) of the current node using the coding table selected.</p><p id="p-0618" num="0614">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref> and <figref idref="DRAWINGS">FIG. <b>67</b></figref>, in the encoding, the three-dimensional data encoding device permits reference to information (e.g., occupancy information) of a child node of the first node, the child node being included in the neighboring nodes.</p><p id="p-0619" num="0615">With this, since the three-dimensional data encoding device enables reference to more detailed information of a neighboring node, the three-dimensional data encoding device can improve the coding efficiency.</p><p id="p-0620" num="0616">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, in the encoding, the three-dimensional data encoding device selects a neighboring node to be referred to from the neighboring nodes according to a spatial position of the current node in the parent node.</p><p id="p-0621" num="0617">With this, the three-dimensional data encoding device can refer to an appropriate neighboring node according to the spatial position of the current node in the parent node.</p><p id="p-0622" num="0618">For example, the three-dimensional data encoding device includes a processor and memory, and the processor performs the above process using the memory.</p><p id="p-0623" num="0619">The three-dimensional data decoding device according to the present embodiment decodes information (e.g., an occupancy code) of a current node included in an N-ary tree structure of three-dimensional points included in three-dimensional data, where N is an integer greater than or equal to 2. As illustrated in <figref idref="DRAWINGS">FIG. <b>51</b></figref> and <figref idref="DRAWINGS">FIG. <b>52</b></figref>, in the decoding, the three-dimensional data decoding device permits reference to information (e.g., occupancy information) of a first node included in neighboring nodes spatially neighboring the current node, and prohibits reference to information of a second node included in the neighboring nodes, the first node having a same parent node as the current node, the second node having a different parent node from the parent node of the current node. To put it another way, in the decoding, the three-dimensional data decoding device permits reference to information (e.g., an occupancy code) of the parent node, and prohibits reference to information (e.g., an occupancy code) of another node (a parent neighbor node) in the same layer as the parent node.</p><p id="p-0624" num="0620">With this, the three-dimensional data decoding device can improve coding efficiency by reference to the information of the first node included in the neighboring nodes spatially neighboring the current node, the first node having the same parent node as the current node. Besides, the three-dimensional data decoding device can reduce a processing amount by not reference to the information of the second node included in the neighboring nodes, the second node having a different parent node from the parent node of the current node. In this manner, the three-dimensional data decoding device can not only improve the coding efficiency but also reduce the processing amount.</p><p id="p-0625" num="0621">For example, the three-dimensional data decoding device further obtains, from a bitstream, prohibition switch information (e.g., limit_refer_flag shown in <figref idref="DRAWINGS">FIG. <b>63</b></figref>) indicating whether to prohibit the reference to the information of the second node. In the decoding, the three-dimensional data decoding device selects whether to prohibit or permit the reference to the information of the second node, based on the prohibition switch information. With this, the three-dimensional data decoding device can appropriately perform a decoding process using the prohibition switch information.</p><p id="p-0626" num="0622">For example, the information of the current node is information (e.g., an occupancy code) that indicates whether a three-dimensional point is present in each of child nodes belonging to the current node. The information of the first node is information (the occupancy information of the first node) that indicates whether a three-dimensional point is present in the first node. The information of the second node is information (the occupancy information of the second node) that indicates whether a three-dimensional point is present in the second node.</p><p id="p-0627" num="0623">For example, in the decoding, the three-dimensional data encoding device selects a coding table based on whether the three-dimensional point is present in the first node, and entropy decodes the information (e.g., the occupancy code) of the current node using the coding table selected.</p><p id="p-0628" num="0624">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>66</b></figref> and <figref idref="DRAWINGS">FIG. <b>67</b></figref>, in the decoding, the three-dimensional data decoding device permits reference to information (e.g., occupancy information) of a child node of the first node, the child node being included in the neighboring nodes.</p><p id="p-0629" num="0625">With this, since the three-dimensional data decoding device enables reference to more detailed information of a neighboring node, the three-dimensional data decoding device can improve the coding efficiency.</p><p id="p-0630" num="0626">For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>53</b></figref>, in the decoding, the three-dimensional data decoding device selects a neighboring node to be referred to from the neighboring nodes according to a spatial position of the current node in the parent node.</p><p id="p-0631" num="0627">With this, the three-dimensional data decoding device can refer to an appropriate neighboring node according to the spatial position of the current node in the parent node.</p><p id="p-0632" num="0628">For example, the three-dimensional data decoding device includes a processor and memory, and the processor performs the above process using the memory.</p><heading id="h-0015" level="1">Embodiment 9</heading><p id="p-0633" num="0629">Information of a three-dimensional point cloud includes geometry information (geometry) and attribute information (attribute). Geometry information includes coordinates (x-coordinate, y-coordinate, z-coordinate) with respect to a certain point. When geometry information is encoded, a method of representing the position of each of three-dimensional points in octree representation and encoding the octree information to reduce a code amount is used instead of directly encoding the coordinates of the three-dimensional point.</p><p id="p-0634" num="0630">On the other hand, attribute information includes information indicating, for example, color information (ROB, YUV, etc.) of each three-dimensional point, a reflectance, and a normal vector. For example, a three-dimensional data encoding device is capable of encoding attribute information using an encoding method different from a method used to encode geometry information.</p><p id="p-0635" num="0631">In the present embodiment, a method of encoding attribute information is explained. It is to be noted that, in the present embodiment, the method is explained based on an example case using integer values as values of attribute information. For example, when each of RGB or YUV color components is of an 8-bit accuracy, the color component is an integer value in a range from 0 to 255. When a reflectance value is of 10-bit accuracy, the reflectance value is an integer in a range from 0 to 1023. It is to be noted that, when the bit accuracy of attribute information is a decimal accuracy, the three-dimensional data encoding device may multiply the value by a scale value to round it to an integer value so that the value of the attribute information becomes an integer value. It is to be noted that the three-dimensional data encoding device may add the scale value to, for example, a header of a bitstream.</p><p id="p-0636" num="0632">As a method of encoding attribute information of a three-dimensional point, it is conceivable to calculate a predicted value of the attribute information of the three-dimensional point and encode a difference (prediction residual) between the original value of the attribute information and the predicted value. For example, when the value of attribute information at three-dimensional point p is Ap and a predicted value is Pp, the three-dimensional data encoding device encodes differential absolute value Diffp=|Ap&#x2212;Pp|. In this case, when highly-accurate predicted value Pp can be generated, differential absolute value Diffp is small. Thus, for example, it is possible to reduce the code amount by entropy encoding differential absolute value Diffp using a coding table that reduces an occurrence bit count more when differential absolute value Diffp is smaller.</p><p id="p-0637" num="0633">As a method of generating a prediction value of attribute information, it is conceivable to use attribute information of a reference three-dimensional point that is another three-dimensional point which neighbors a current three-dimensional point to be encoded. Here, a reference three-dimensional point is a three-dimensional point in a range of a predetermined distance from the current three-dimensional point. For example, when there are current three-dimensional point p=(x1, y1, z1) and three-dimensional point q=(x2, y2, z2), the three-dimensional data encoding device calculates Euclidean distance d (p, q) between three-dimensional point p and three-dimensional point q represented by (Equation A1).</p><p id="p-0638" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>[Math. 1]<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0639" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>(<i>p,q</i>)=&#x221a;{square root over ((<i>x</i>1&#x2212;<i>y</i>1)<sup>2</sup>+(<i>x</i>2<i>&#x2212;y</i>2)<sup>2</sup>+(<i>x</i>3&#x2212;<i>y</i>3)<sup>2</sup>)}&#x2003;&#x2003;(Equation A1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0640" num="0634">The three-dimensional data encoding device determines that the position of three-dimensional point q is closer to the position of current three-dimensional point p when Euclidean distance d (p, q) is smaller than predetermined threshold value THd, and determines to use the value of the attribute information of three-dimensional point q to generate a predicted value of the attribute information of current three-dimensional point p. It is to be noted that the method of calculating the distance may be another method, and a Mahalanobis distance or the like may be used. In addition, the three-dimensional data encoding device may determine not to use, in prediction processing, any three-dimensional point outside the predetermined range of distance from the current three-dimensional point. For example, when three-dimensional point r is present, and distance d (p, r) between current three-dimensional point p and three-dimensional point r is larger than or equal to threshold value THd, the three-dimensional data encoding device may determine not to use three-dimensional point r for prediction. It is to be noted that the three-dimensional data encoding device may add the information indicating threshold value THd to, for example, a header of a bitstream;</p><p id="p-0641" num="0635"><figref idref="DRAWINGS">FIG. <b>68</b></figref> is a diagram illustrating an example of three-dimensional points. In this example, distance d (p, q) between current three-dimensional point p and three-dimensional point q is smaller than threshold value THd. Thus, the three-dimensional data encoding device determines that three-dimensional point q is a reference three-dimensional point of current three-dimensional point p, and determines to use the value of attribute information Aq of three-dimensional point q to generate predicted value Pp of attribute information Ap of current three-dimensional point p.</p><p id="p-0642" num="0636">In contrast, distance d (p, r) between current three-dimensional point p and three-dimensional point r is larger than or equal to threshold value THd. Thus, the three-dimensional data encoding device determines that three-dimensional point r is not any reference three-dimensional point of current three-dimensional point p, and determines not to use the value of attribute information Ar of three-dimensional point r to generate predicted value Pp of attribute information Ap of current three-dimensional point p.</p><p id="p-0643" num="0637">In addition, when encoding the attribute information of the current three-dimensional point using a predicted value, the three-dimensional data encoding device uses a three-dimensional point whose attribute information has already been encoded and decoded, as a reference three-dimensional point. Likewise, when decoding the attribute information of a current three-dimensional point to be decoded, the three-dimensional data decoding device uses a three-dimensional point whose attribute information has already been decoded, as a reference three-dimensional point. In this way, it is possible to generate the same predicted value at the time of encoding and decoding. Thus, a bitstream of the three-dimensional point generated by the encoding can be decoded correctly at the decoding side.</p><p id="p-0644" num="0638">Furthermore, when encoding attribute information of each of three-dimensional points, it is conceivable to classify the three-dimensional point into one of a plurality of layers using geometry information of the three-dimensional point and then encode the attribute information. Here, each of the layers classified is referred to as a Level of Detail (LoD). A method of generating LoDs is explained with reference to <figref idref="DRAWINGS">FIG. <b>69</b></figref>.</p><p id="p-0645" num="0639">First, the three-dimensional data encoding device selects initial point a0 and assigns initial point a0 to LoD0. Next, the three-dimensional data encoding device extracts point a1 distant from point a0 more than threshold value Thres_LoD[0] of LoD0 and assigns point a1 to LoD0. Next, the three-dimensional data encoding device extracts point a2 distant from point a1 more than threshold value Thres_LoD[0] of LoD0 and assigns point a2 to LoD0. In this way, the three-dimensional data encoding device configures LoD0 in such a manner that the distance between the points in LoD0 is larger than threshold value Thres_LoD[0].</p><p id="p-0646" num="0640">Next, the three-dimensional data encoding device selects point b0 which has not yet been assigned to any LoD and assigns point b0 to LoD1. Next, the three-dimensional data encoding device extracts point b1 which is distant from point b0 more than threshold value Thres_LoD[1] of LoD1 and which has not yet been assigned to any LoD, and assigns point b1 to LoD1. Next, the three-dimensional data encoding device extracts point b2 which is distant from point bl more than threshold value Thres_LoD[1] of LoD1 and which has not yet been assigned to any LoD, and assigns point b2 to LoD1. In this way, the three-dimensional data encoding device configures LoD1 in such a manner that the distance between the points in LoD1 is larger than threshold value Thres_LoD[1].</p><p id="p-0647" num="0641">Next, the three-dimensional data encoding device selects point c0 which has not yet been assigned to any LoD and assigns point c0 to LoD2. Next, the three-dimensional data encoding device extracts point c1 which is distant from point c0 more than threshold value Thres_LoD[2] of LoD2 and which has not yet been assigned to any LoD, and assigns point c1 to LoD2. Next, the three-dimensional data encoding device extracts point c2 which is distant from point c1 more than threshold value Thres_LoD[2] of LoD2 and which has not yet been assigned to any LoD, and assigns point c2 to LoD2. In this way, the three-dimensional data encoding device configures LoD2 in such a manner that the distance between the points in LoD2 is larger than threshold value Thres_LoD[2]. For example, as illustrated in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, threshold values Thres_LoD[0], Thres_LoD[1], and Thres_LoD[2] of respective LoDs are set.</p><p id="p-0648" num="0642">In addition, the three-dimensional data encoding device may add the information indicating the threshold value of each LoD to, for example, a header of a bitstream. For example, in the case of the example illustrated in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, the three-dimensional data encoding device may add threshold values Thres_LoD[0], Thres_LoD[1], and Thres_LoD[2] of respective LoDs to a header.</p><p id="p-0649" num="0643">Alternatively, the three-dimensional data encoding device may assign all three-dimensional points which have not yet been assigned to any LoD in the lowermost-layer LoD. In this case, the three-dimensional data encoding device is capable of reducing the code amount of the header by not assigning the threshold value of the lowermost-layer LoD to the header. For example, in the case of the example illustrated in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, the three-dimensional data encoding device assigns threshold values Thres_LoD[0] and Thres_LoD[1] to the header, and does not assign Thres_LoD[2] to the header. In this case, the three-dimensional data encoding device may estimate value 0 of Thres_LoD[2]. In addition, the three-dimensional data encoding device may add the number of LoDs to a header. In this way, the three-dimensional data encoding device is capable of determining the lowermost-layer LoD using the number of LoDs.</p><p id="p-0650" num="0644">In addition, setting threshold values for the respective layers LoDs in such a manner that a larger threshold value is set to a higher layer makes a higher layer (layer closer to LoD0) to have a sparse point cloud (sparse) in which three-dimensional points are more distant and makes a lower layer to have a dense point cloud (dense) in which three-dimensional points are closer. It is to be noted that, in an example illustrated in <figref idref="DRAWINGS">FIG. <b>70</b></figref>, LoD0 is the uppermost layer.</p><p id="p-0651" num="0645">In addition, the method of selecting an initial three-dimensional point at the time of setting each LoD may depend on an encoding order at the time of geometry information encoding. For example, the three-dimensional data encoding device configures LoD0 by selecting the three-dimensional point encoded first at the time of the geometry information encoding as initial point a0 of LoD0, and selecting point a1 and point a2 from initial point a0 as the origin. The three-dimensional data encoding device then may select the three-dimensional point whose geometry information has been encoded at the earliest time among three-dimensional points which do not belong to LoD0, as initial point b0 of LoD1. In other words, the three-dimensional data encoding device may select the three-dimensional point whose geometry information has been encoded at the earliest time among three-dimensional points which do not belong to layers (LoD0 to LoDn&#x2212;1) above LoDn, as initial point n0 of LoDn. In this way, the three-dimensional data encoding device is capable of configuring the same LoD as in encoding by using, in decoding, the initial point selecting method similar to the one used in the encoding, which enables appropriate decoding of a bitstream. More specifically, the three-dimensional data encoding device selects the three-dimensional point whose geometry information has been decoded at the earliest time among three-dimensional points which do not belong to layers above LoDn, as initial point n0 of LoDn.</p><p id="p-0652" num="0646">Hereinafter, a description is given of a method of generating the predicted value of the attribute information of each three-dimensional point using information of LoDs. For example, when encoding three-dimensional points starting with the three-dimensional points included in LoD0, the three-dimensional data encoding device generates current three-dimensional points which are included in LoD1 using encoded and decoded (hereinafter also simply referred to as &#x201c;encoded&#x201d;) attribute information included in LoD0 and LoD1. In this way, the three-dimensional data encoding device generates a predicted value of attribute information of each three-dimensional point included in LoDn using encoded attribute information included in LoDn&#x2032; (n&#x2032;&#x3c;n). In other words, the three-dimensional data encoding device does not use attribute information of each of three-dimensional points included in any layer below LoDn to calculate a predicted value of attribute information of each of the three-dimensional points included in LoDn.</p><p id="p-0653" num="0647">For example, the three-dimensional data encoding device calculates an average of attribute information of N or less three dimensional points among encoded three-dimensional points surrounding a current three-dimensional point to be encoded, to generate a predicted value of attribute information of the current three-dimensional point. In addition, the three-dimensional data encoding device may add value N to, for example, a header of a bitstream. It is to be noted that the three-dimensional data encoding device may change value N for each three-dimensional point, and may add value N for each three-dimensional point. This enables selection of appropriate N for each three-dimensional point, which makes it possible to increase the accuracy of the predicted value. Accordingly, it is possible to reduce the prediction residual. Alternatively, the three-dimensional data encoding device may add value N to a header of a bitstream, and may fix the value indicating N in the bitstream. This eliminates the need to encode or decode value N for each three-dimensional point, which makes it possible to reduce the processing amount. In addition, the three-dimensional data encoding device may encode the values of N separately for each LoD. In this way, it is possible to increase the coding efficiency by selecting appropriate N for each LoD.</p><p id="p-0654" num="0648">Alternatively, the three-dimensional data encoding device may calculate a predicted value of attribute information of three-dimensional point based on weighted average values of attribute information of encoded N neighbor three-dimensional points. For example, the three-dimensional data encoding device calculates weights using distance information between a current three-dimensional point and each of N neighbor three-dimensional points.</p><p id="p-0655" num="0649">When encoding value N for each LoD, for example, the three-dimensional data encoding device sets larger value N to a higher layer LoD, and sets smaller value N to a lower layer LoD. The distance between three-dimensional points belonging to a higher layer LoD is large, there is a possibility that it is possible to increase the prediction accuracy by setting large value N, selecting a plurality of neighbor three-dimensional points, and averaging the values. Furthermore, the distance between three-dimensional points belonging to a lower layer LoD is small, it is possible to perform efficient prediction while reducing the processing amount of averaging by setting smaller value N;</p><p id="p-0656" num="0650"><figref idref="DRAWINGS">FIG. <b>71</b></figref> is a diagram illustrating an example of attribute information to be used for predicted values. As described above, the predicted value of point P included in LoDN is generated using encoded neighbor point P&#x2032; included in LoDN&#x2032; (N&#x2032;&#x3c;N). Here, neighbor point P&#x2032; is selected based on the distance from point P. For example, the predicted value of attribute information of point b2 illustrated in <figref idref="DRAWINGS">FIG. <b>71</b></figref> is generated using attribute information of each of points a0, a1, b0, and b1.</p><p id="p-0657" num="0651">Neighbor points to be selected vary depending on the values of N described above. For example, in the case of N=5, a0, a1, a2, b0, and b1 are selected as neighbor points. In the case of N=4, a0, a1, a2, and b1 are selected based on distance information.</p><p id="p-0658" num="0652">The predicted value is calculated by distance-dependent weighted averaging. For example, in the example illustrated in <figref idref="DRAWINGS">FIG. <b>71</b></figref>, predicted value a1p of point a2 is calculated by weighted averaging of attribute information of each of point a0 and a1, as represented by (Equation A2) and (Equation A3). It is to be noted that A<sub>i </sub>is an attribute information value of ai.</p><p id="p-0659" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Math</mi>      <mo>.</mo>      <mtext>   </mtext>      <mn>2</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>a</mi>      <mo>&#x2062;</mo>      <mn>2</mn>      <mo>&#x2062;</mo>      <mi>p</mi>     </mrow>     <mo>=</mo>     <mrow>      <munderover>       <mo>&#x2211;</mo>       <mrow>        <mi>i</mi>        <mo>=</mo>        <mn>0</mn>       </mrow>       <mn>1</mn>      </munderover>      <mtext> </mtext>      <mrow>       <msub>        <mi>w</mi>        <mi>i</mi>       </msub>       <mo>&#xd7;</mo>       <msub>        <mi>A</mi>        <mi>i</mi>       </msub>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A2</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00001-2" num="00001.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>w</mi>      <mi>i</mi>     </msub>     <mo>=</mo>     <mfrac>      <mfrac>       <mn>1</mn>       <mrow>        <mi>d</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mrow>          <mi>a</mi>          <mo>&#x2062;</mo>          <mn>2</mn>         </mrow>         <mo>,</mo>         <mi>ai</mi>        </mrow>        <mo>)</mo>       </mrow>      </mfrac>      <mrow>       <msubsup>        <mo>&#x2211;</mo>        <mrow>         <mi>j</mi>         <mo>=</mo>         <mn>0</mn>        </mrow>        <mn>1</mn>       </msubsup>       <mfrac>        <mn>1</mn>        <mrow>         <mi>d</mi>         <mo>&#x2061;</mo>         <mo>(</mo>         <mrow>          <mrow>           <mi>a</mi>           <mo>&#x2062;</mo>           <mn>2</mn>          </mrow>          <mo>,</mo>          <mi>ai</mi>         </mrow>         <mo>)</mo>        </mrow>       </mfrac>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A</mi>      <mo>&#x2062;</mo>      <mn>3</mn>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0660" num="0653">In addition, predicted value b2p of point b2 is calculated by weighted averaging of attribute information of each of point a0, a1, a2, b0, and b1, as represented by (Equation A4) and (Equation A6). It is to be noted that B<sub>i </sub>is an attribute information value of bi.</p><p id="p-0661" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>[</mo>     <mrow>      <mi>Math</mi>      <mo>.</mo>      <mtext>   </mtext>      <mn>3</mn>     </mrow>     <mo>]</mo>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>b</mi>      <mo>&#x2062;</mo>      <mn>2</mn>      <mo>&#x2062;</mo>      <mi>p</mi>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <msubsup>        <mo>&#x2211;</mo>        <mrow>         <mi>i</mi>         <mo>=</mo>         <mn>0</mn>        </mrow>        <mn>2</mn>       </msubsup>       <mrow>        <msub>         <mi>wa</mi>         <mi>i</mi>        </msub>        <mo>&#xd7;</mo>        <msub>         <mi>A</mi>         <mi>i</mi>        </msub>       </mrow>      </mrow>      <mo>+</mo>      <mrow>       <msubsup>        <mo>&#x2211;</mo>        <mrow>         <mi>i</mi>         <mo>=</mo>         <mn>0</mn>        </mrow>        <mn>1</mn>       </msubsup>       <mrow>        <msub>         <mi>wb</mi>         <mi>i</mi>        </msub>        <mo>&#xd7;</mo>        <msub>         <mi>B</mi>         <mi>i</mi>        </msub>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A4</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00002-2" num="00002.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>wa</mi>      <mi>i</mi>     </msub>     <mo>=</mo>     <mfrac>      <mfrac>       <mn>1</mn>       <mrow>        <mi>d</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <mrow>          <mi>b</mi>          <mo>&#x2062;</mo>          <mn>2</mn>         </mrow>         <mo>,</mo>         <mi>ai</mi>        </mrow>        <mo>)</mo>       </mrow>      </mfrac>      <mrow>       <mrow>        <msubsup>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mn>2</mn>        </msubsup>        <mfrac>         <mn>1</mn>         <mrow>          <mi>d</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mrow>            <mi>b</mi>            <mo>&#x2062;</mo>            <mn>2</mn>           </mrow>           <mo>,</mo>           <mi>aj</mi>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>       </mrow>       <mo>+</mo>       <mrow>        <msubsup>         <mo>&#x2211;</mo>         <mrow>          <mi>j</mi>          <mo>=</mo>          <mn>0</mn>         </mrow>         <mn>1</mn>        </msubsup>        <mfrac>         <mn>1</mn>         <mrow>          <mi>d</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <mrow>            <mi>b</mi>            <mo>&#x2062;</mo>            <mn>2</mn>           </mrow>           <mo>,</mo>           <mi>bj</mi>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>       </mrow>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A5</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0662" num="0654">In addition, the three-dimensional data encoding device may calculate a difference value (prediction residual) generated from the value of attribute information of a three-dimensional point and neighbor points, and may quantize the calculated prediction residual. For example, the three-dimensional data encoding device performs quantization by dividing the prediction residual by a quantization scale (also referred to as a quantization step). In this case, an error (quantization error) which may be generated by quantization reduces as the quantization scale is smaller. In the other case where the quantization scale is larger, the resulting quantization error is larger.</p><p id="p-0663" num="0655">It is to be noted that the three-dimensional data encoding device may change the quantization scale to be used for each LoD. For example, the three-dimensional data encoding device reduces the quantization scale more for a higher layer, and increases the quantization scale more for a lower layer. The value of attribute information of a three-dimensional point belonging to a higher layer may be used as a predicted value of attribute information of a three-dimensional point belonging to a lower layer. Thus, it is possible to increase the coding efficiency by reducing the quantization scale for the higher layer to reduce the quantization error that can be generated in the higher layer and to increase the prediction accuracy of the predicted value. It is to be noted that the three-dimensional data encoding device may add the quantization scale to be used for each LoD to, for example, a header. In this way, the three-dimensional data encoding device can decode the quantization scale correctly, thereby appropriately decoding the bitstream.</p><p id="p-0664" num="0656">In addition, the three-dimensional data encoding device may convert a signed integer value (signed quantized value) which is a quantized prediction residual into an unsigned integer value (unsigned quantized value). This eliminates the need to consider occurrence of a negative integer when entropy encoding the prediction residual. It is to be noted that the three-dimensional data encoding device does not always need to convert a signed integer value into an unsigned integer value, and, for example, that the three-dimensional data encoding device may entropy encode a sign bit separately.</p><p id="p-0665" num="0657">The prediction residual is calculated by subtracting a prediction value from the original value. For example, as represented by (Equation A7), prediction residual a2r of point a2 is calculated by subtracting predicted value a1p of point a2 from value A2 of attribute information of point a2. As represented by (Equation A8), prediction residual b2r of point b2 is calculated by subtracting predicted value b2p of point b2 from value B<sub>2 </sub>of attribute information of point b2.</p><p id="p-0666" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>2<i>r=A</i><sub>2</sub><i>&#x2212;a</i>2<i>p </i>&#x2003;&#x2003;(Equation A7)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0667" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>2<i>r=B</i><sub>2&#x2212;</sub><i>b</i>2<i>p </i>&#x2003;&#x2003;(Equation A8)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0668" num="0658">In addition, the prediction residual is quantized by being divided by a Quantization Step (QS). For example, quantized value a2q of point a2 is calculated according to (Equation A9). Quantized value b2q of point b2 is calculated according to (Equation A10). Here, QS_LoD0 is a QS for LoD0, and QS_LoD1 is a QS for LoD1. In other words, a QS may be changed according to an LoD.</p><p id="p-0669" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>2<i>q=a</i>2<i>r/QS</i>_<i>LoD</i>0 &#x2003;&#x2003;(Equation A9)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0670" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>2<i>q=b</i>2<i>r/QS</i>_<i>LoD</i>1 &#x2003;&#x2003;(Equation A10)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0671" num="0659">In addition, the three-dimensional data encoding device converts signed integer values which are quantized values as indicated below into unsigned integer values as indicated below. When signed integer value a2q is smaller than 0, the three-dimensional data encoding device sets unsigned integer value a2u to &#x2212;1&#x2212;(2&#xd7;a2q). When signed integer value a2q is 0 or more, the three-dimensional data encoding device sets unsigned integer value a2u to 2 x a2q. Likewise, when signed integer value b2q is smaller than 0, the three-dimensional data encoding device sets unsigned integer value b2u to &#x2212;1&#x2212;(2&#xd7;b2q). When signed integer value b2q is 0 or more, the three-dimensional data encoding device sets unsigned integer value b2u to 2&#xd7;b2q.</p><p id="p-0672" num="0660">In addition, the three-dimensional data encoding device may encode the quantized prediction residual (unsigned integer value) by entropy encoding. For example, the three-dimensional data encoding device may binarize the unsigned integer value and then apply binary arithmetic encoding to the binary value.</p><p id="p-0673" num="0661">It is to be noted that, in this case, the three-dimensional data encoding device may switch binarization methods according to the value of a prediction residual. For example, when prediction residual pu is smaller than threshold value R_TH, the three-dimensional data encoding device binarizes prediction residual pu using a fixed bit count required for representing threshold value R_TH. In addition, when prediction residual pu is larger than or equal to threshold value R_TH, the three-dimensional data encoding device binarizes the binary data of threshold value R_TH and the value of (pu&#x2212;R_TH), using exponential-Golomb coding, or the like.</p><p id="p-0674" num="0662">For example, when threshold value R_TH is 63 and prediction residual pu is smaller than 63, the three-dimensional data encoding device binarizes prediction residual pu using 6 bits. When prediction residual pu is larger than or equal to 63, the three-dimensional data encoding device performs arithmetic encoding by binarizing the binary data (111111) of threshold value R_TH and (pu&#x2212;63) using exponential-Golomb coding.</p><p id="p-0675" num="0663">In a more specific example, when prediction residual pu is 32, the three-dimensional data encoding device generates 6-bit binary data (100000), and arithmetic encodes the bit sequence. In addition, when prediction residual pu is 66, the three-dimensional data encoding device generates binary data (111111) of threshold value R_TH and a bit sequence (00100) representing value 3 (66&#x2212;63) using exponential-Golomb coding, and arithmetic encodes the bit sequence (111111+00100).</p><p id="p-0676" num="0664">In this way, the three-dimensional data encoding device can perform encoding while preventing a binary bit count from increasing abruptly in the case where a prediction residual becomes large by switching binarization methods according to the magnitude of the prediction residual. It is to be noted that the three-dimensional data encoding device may add threshold value R_TH to, for example, a header of a bitstream.</p><p id="p-0677" num="0665">For example, in the case where encoding is performed at a high bit rate, that is, when a quantization scale is small, a small quantization error and a high prediction accuracy are obtained. As a result, a prediction residual may not be large. Thus, in this case, the three-dimensional data encoding device sets large threshold value R_TH. This reduces the possibility that the binary data of threshold value R_TH is encoded, which increases the coding efficiency. In the opposite case where encoding is performed at a low bit rate, that is, when a quantization scale is large, a large quantization error and a low prediction accuracy are obtained. As a result, a prediction residual may be large. Thus, in this case, the three-dimensional data encoding device sets small threshold value R_TH. In this way, it is possible to prevent abrupt increase in bit length of binary data.</p><p id="p-0678" num="0666">In addition, the three-dimensional data encoding device may switch threshold value R_TH for each LoD, and may add threshold value R_TH for each LoD to, for example, a header. In other words, the three-dimensional data encoding device may switch binarization methods for each LoD. For example, since distances between three-dimensional points are large in a higher layer, a prediction accuracy is low, which may increase a prediction residual. Thus, the three-dimensional data encoding device prevents abrupt increase in bit length of binary data by setting small threshold value R_TH to the higher layer. In addition, since distances between three-dimensional points are small in a lower layer, a prediction accuracy is high, which may reduce a prediction residual. Thus, the three-dimensional data encoding device increases the coding efficiency by setting large threshold value R_TH to the lower layer;</p><p id="p-0679" num="0667"><figref idref="DRAWINGS">FIG. <b>72</b></figref> is a diagram indicating examples of exponential-Golomb codes. The diagram indicates the relationships between pre-binarization values (non-binary values) and post-binarization bits (codes). It is to be noted that 0 and 1 indicated in <figref idref="DRAWINGS">FIG. <b>72</b></figref> may be inverted.</p><p id="p-0680" num="0668">The three-dimensional data encoding device applies arithmetic encoding to the binary data of prediction residuals. In this way, the coding efficiency can be increased. It is to be noted that, in the application of the arithmetic encoding, there is a possibility that occurrence probability tendencies of 0 and 1 in each bit vary, in binary data, between an n-bit code which is a part binarized by n bits and a remaining code which is a part binarized using exponential-Golomb coding. Thus, the three-dimensional data encoding device may switch methods of applying arithmetic encoding between the n-bit code and the remaining code.</p><p id="p-0681" num="0669">For example, the three-dimensional data encoding device performs arithmetic encoding on the n-bit code using one or more coding tables (probability tables) different for each bit. At this time, the three-dimensional data encoding device may change the number of coding tables to be used for each bit. For example, the three-dimensional data encoding device performs arithmetic encoding using one coding table for first bit b0 in an n-bit code. The three-dimensional data encoding device uses two coding tables for the next bit b1. The three-dimensional data encoding device switches coding tables to be used for arithmetic encoding of bit b 1 according to the value (0 or 1) of b0. Likewise, the three-dimensional data encoding device uses four coding tables for the next bit b2. The three-dimensional data encoding device switches coding tables to be used for arithmetic encoding of bit b2 according to the values (in a range from 0 to 3) of b0 and b1.</p><p id="p-0682" num="0670">In this way, the three-dimensional data encoding device uses 2<sup>n&#x2212;1 </sup>coding tables when arithmetic encoding each bit bn&#x2212;1 in n-bit code. The three-dimensional data encoding device switches coding tables to be used according to the values (occurrence patterns) of bits before bn&#x2212;1. In this way, the three-dimensional data encoding device can use coding tables appropriate for each bit, and thus can increase the coding efficiency.</p><p id="p-0683" num="0671">It is to be noted that the three-dimensional data encoding device may reduce the number of coding tables to be used for each bit. For example, the three-dimensional data encoding device may switch 2<sup>m </sup>coding tables according to the values (occurrence patterns) of m bits (m&#x3c;n&#x2212;1) before bn'<b>1</b>1 when arithmetic encoding each bit bn&#x2212;1. In this way, it is possible to increase the coding efficiency while reducing the number of coding tables to be used for each bit. It is to be noted that the three-dimensional data encoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred actually. In addition, the three-dimensional data encoding device may fix the occurrence probabilities of 0 and 1 in coding tables for some bit(s). In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount.</p><p id="p-0684" num="0672">For example, when an n-bit code is b0, b1, b2, . . . , bn&#x2212;1, the coding table for b0 is one table (CTb0). Coding tables for b1 are two tables (CTb10 and CTb11). Coding tables to be used are switched according to the value (0 or 1) of b0. Coding tables for b2 are four tables (CTb20, CTb21, CTb22, and CTb23). Coding tables to be used are switched according to the values (in the range from 0 to 3) of b0 and b 1. Coding tables for bn&#x2212;1 are 2<sup>n&#x2212;1 </sup>tables (CTbn0, CTbn1, . . . , CTbn (2<sup>n&#x2212;1</sup>&#x2212;1)). Coding tables to be used are switched according to the values (in a range from 0 to 2<sup>n&#x2212;1</sup>&#x2212;1) of b0, b1, . . . , bn&#x2212;2.</p><p id="p-0685" num="0673">It is to be noted that the three-dimensional data encoding device may apply, to an n-bit code, arithmetic encoding (m=2<sup>n</sup>) by m-ary that sets the value in the range from 0 to 2<sup>n</sup>&#x2212;1 without binarization. When the three-dimensional data encoding device arithmetic encodes an n-bit code by an m-ary, the three-dimensional data decoding device may reconstruct the n-bit code by arithmetic decoding the m-ary;</p><p id="p-0686" num="0674"><figref idref="DRAWINGS">FIG. <b>73</b></figref> is a diagram for illustrating processing in the case where remaining codes are exponential-Golomb codes. As indicated in <figref idref="DRAWINGS">FIG. <b>73</b></figref>, each remaining code which is a part binarized using exponential-Golomb coding includes a prefix and a suffix. For example, the three-dimensional data encoding device switches coding tables between the prefix and the suffix. In other words, the three-dimensional data encoding device arithmetic encodes each of bits included in the prefix using coding tables for the prefix, and arithmetic encodes each of bits included in the suffix using coding tables for the suffix.</p><p id="p-0687" num="0675">It is to be noted that the three-dimensional data encoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred actually. In addition, the three-dimensional data encoding device may fix the occurrence probabilities of 0 and 1 in one of coding tables. In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount. For example, the three-dimensional data encoding device may update the occurrence probabilities for the prefix, and may fix the occurrence probabilities for the suffix.</p><p id="p-0688" num="0676">In addition, the three-dimensional data encoding device decodes a quantized prediction residual by inverse quantization and reconstruction, and uses a decoded value which is the decoded prediction residual for prediction of a current three-dimensional point to be encoded and the following three-dimensional point(s). More specifically, the three-dimensional data encoding device calculates an inverse quantized value by multiplying the quantized prediction residual (quantized value) with a quantization scale, and adds the inverse quantized value and a prediction value to obtain the decoded value (reconstructed value).</p><p id="p-0689" num="0677">For example, quantized value a2iq of point a2 is calculated using quantized value a2q of point a2 according to (Equation A11). Inverse quantized value b2iq of point b2q is calculated using quantized value b2q of point b2 according to (Equation A12). Here, QS_LoD0 is a QS for LoD0, and QS_LoD1 is a QS for LoD1. In other words, a QS may be changed according to an LoD.</p><p id="p-0690" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>2<i>iq=a</i>2<i>q&#xd7;QS</i>_<i>LoD</i>0 &#x2003;&#x2003;(Equation A11)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0691" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>2<i>iq=b</i>2<i>q&#xd7;QS</i>_LoD1 &#x2003;&#x2003;(Equation A12)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0692" num="0678">For example, as represented by (Equation A13), decoded value a2rec of point a2 is calculated by adding inverse quantization value a2iq of point a2 to predicted value a1p of point a2. As represented by (Equation A14), decoded value b2rec of point b2 is calculated by adding inverse quantized value b2iq of point b2 to predicted value b2p of point b2.</p><p id="p-0693" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>2<i>rec=a</i>2<i>iq+a</i>2<i>p </i>&#x2003;&#x2003;(Equation A13)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0694" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>2<i>rec=b</i>2<i>iq+b</i>2<i>p </i>&#x2003;&#x2003;(Equation A14)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0695" num="0679">Hereinafter, a syntax example of a bitstream according to the present embodiment is described. <figref idref="DRAWINGS">FIG. <b>74</b></figref> is a diagram indicating the syntax example of an attribute header (attribute_header) according to the present embodiment. The attribute header is header information of attribute information. As indicated in <figref idref="DRAWINGS">FIG. <b>74</b></figref>, the attribute header includes the number of layers information (NumLoD), the number of three-dimensional points information (NumOfPoint[i]), a layer threshold value (Thres_LoD[i]), the number of neighbor points information (NumNeighborPoint[i]), a prediction threshold value (THd[i]), a quantization scale (QS[i]), and a binarization threshold value (R_TH[i]).</p><p id="p-0696" num="0680">The number of layers information (NumLoD) indicates the number of LoDs to be used.</p><p id="p-0697" num="0681">The number of three-dimensional points information (NumOfPoint[i]) indicates the number of three-dimensional points belonging to layer i. It is to be noted that the three-dimensional data encoding device may add, to another header, the number of three-dimensional points information indicating the total number of three-dimensional points. In this case, the three-dimensional data encoding device does not need to add, to a header, NumOfPoint [NumLoD&#x2212;1] indicating the number of three-dimensional points belonging to the lowermost layer. In this case, the three-dimensional data decoding device is capable of calculating NumOfPoint [NumLoD&#x2212;1] according to (Equation A15). In this case, it is possible to reduce the code amount of the header.</p><p id="p-0698" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mtext>                </mtext>     <mrow>      <mo>[</mo>      <mrow>       <mi>Math</mi>       <mo>.</mo>       <mtext>   </mtext>       <mn>4</mn>      </mrow>      <mo>]</mo>     </mrow>    </mrow>   </mtd>   <mtd>    <mi>&#xf3ba;</mi>   </mtd>  </mtr>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>Num</mi>      <mo>&#x2062;</mo>      <mtext>  </mtext>      <mi>Of</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mrow>       <mi>Point</mi>       <mo>[</mo>       <mrow>        <mi>NumLoD</mi>        <mo>-</mo>        <mn>1</mn>       </mrow>       <mo>]</mo>      </mrow>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <mi>All</mi>       <mo>&#x2062;</mo>       <mtext>   </mtext>       <mi>Num</mi>       <mo>&#x2062;</mo>       <mtext>   </mtext>       <mi>Of</mi>       <mo>&#x2062;</mo>       <mtext>  </mtext>       <mi>Point</mi>      </mrow>      <mo>-</mo>      <mrow>       <munderover>        <mo>&#x2211;</mo>        <mrow>         <mi>j</mi>         <mo>=</mo>         <mn>0</mn>        </mrow>        <mrow>         <mrow>          <mi>Num</mi>          <mo>&#x2062;</mo>          <mtext>  </mtext>          <mi>LoD</mi>         </mrow>         <mo>-</mo>         <mn>2</mn>        </mrow>       </munderover>       <mtext> </mtext>       <mrow>        <mi>Num</mi>        <mo>&#x2062;</mo>        <mtext>  </mtext>        <mi>Of</mi>        <mo>&#x2062;</mo>        <mtext>  </mtext>        <mrow>         <mi>Point</mi>         <mo>[</mo>         <mi>j</mi>         <mo>]</mo>        </mrow>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mrow>      <mi>Equation</mi>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mi>A15</mi>     </mrow>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0699" num="0682">The layer threshold value (Thres_LoD[i]) is a threshold value to be used to set layer i. The three-dimensional data encoding device and the three-dimensional data decoding device configure LoDi in such a manner that the distance between points in LoDi becomes larger than threshold value Thres_LoD[i]. The three-dimensional data encoding device does not need to add the value of Thres_LoD [NumLoD&#x2212;1] (lowermost layer) to a header. In this case, the three-dimensional data decoding device may estimate 0 as the value of Thres_LoD [NumLoD&#x2212;1]. In this case, it is possible to reduce the code amount of the header.</p><p id="p-0700" num="0683">The number of neighbor points information (NumNeighborPoint[i]) indicates the upper limit value of the number of neighbor points to be used to generate a predicted value of a three-dimensional point belonging to layer i. The three-dimensional data encoding device may calculate a predicted value using the number of neighbor points M when the number of neighbor points M is smaller than NumNeighborPoint[i] (M&#x3c;NumNeighborPoint[i]). Furthermore, when there is no need to differentiate the values of NumNeighborPoint[i] for respective LoDs, the three-dimensional data encoding device may add a piece of the number of neighbor points information (NumNeighborPoint) to be used in all LoDs to a header.</p><p id="p-0701" num="0684">The prediction threshold value (THd[i]) indicates the upper limit value of the distance between a current three-dimensional point to be encoded or decoded in layer i and each of neighbor three-dimensional points to be used to predict the current three-dimensional point. The three-dimensional data encoding device and the three-dimensional data decoding device do not use, for prediction, any three-dimensional point distant from the current three-dimensional point over THd[i]. It is to be noted that, when there is no need to differentiate the values of THd[i] for respective LoDs, the three-dimensional data encoding device may add a single prediction threshold value (THd) to be used in all LoDs to a header.</p><p id="p-0702" num="0685">The quantization scale (QS[i]) indicates a quantization scale to be used for quantization and inverse quantization in layer i.</p><p id="p-0703" num="0686">The binarization threshold value (R_TH[i]) is a threshold value for switching binarization methods of prediction residuals of three-dimensional points belonging to layer i. For example, the three-dimensional data encoding device binarizes prediction residual pu using a fixed bit count when a prediction residual is smaller than threshold value R_TH, and binarizes the binary data of threshold value R_TH and the value of (pu&#x2212;R_TH) using exponential-Golomb coding when a prediction residual is larger than or equal to threshold value R_TH. It is to be noted that, when there is no need to switch the values of R_TH[i] between LoDs, the three-dimensional data encoding device may add a single binarization threshold value (R_TH) to be used in all LoDs to a header.</p><p id="p-0704" num="0687">It is to be noted that R_TH[i] may be the maximum value which can be represented by n bits. For example, R_TH is 63 in the case of 6 bits, and R_TH is 255 in the case of 8 bits. Alternatively, the three-dimensional data encoding device may encode a bit count instead of encoding the maximum value which can be represented by n bits as a binarization threshold value. For example, the three-dimensional data encoding device may add value 6 in the case of R_TH[i]=63 to a header, and may add value 8 in the case of R_TH[i]=255 to a header. Alternatively, the three-dimensional data encoding device may define the minimum value (minimum bit count) representing R_TH[i], and add a relative bit count from the minimum value to a header. For example, the three-dimensional data encoding device may add value 0 to a header when R_TH[i]=63 is satisfied and the minimum bit count is 6, and may add value 2 to a header when R_TH[i]=255 is satisfied and the minimum bit count is 6.</p><p id="p-0705" num="0688">Alternatively, the three-dimensional data encoding device may entropy encode at least one of NumLoD, Thres_LoD[i], NumNeighborPoint[i], THd[i], QS[i], and R_TH[i], and add the entropy encoded one to a header. For example, the three-dimensional data encoding device may binarize each value and perform arithmetic encoding on the binary value. In addition, the three-dimensional data encoding device may encode each value using a fixed length in order to reduce the processing amount.</p><p id="p-0706" num="0689">Alternatively, the three-dimensional data encoding device does not always need to add at least one of NumLoD, Thres_LoD[i], NumNeighborPoint[i], THd[i], QS[i], and R_TH[i] to a header. For example, at least one of these values may be defined by a profile or a level in a standard, or the like. In this way, it is possible to reduce the bit amount of the header;</p><p id="p-0707" num="0690"><figref idref="DRAWINGS">FIG. <b>75</b></figref> is a diagram indicating the syntax example of attribute data (attribute_data) according to the present embodiment. The attribute data includes encoded data of the attribute information of a plurality of three-dimensional points. As indicated in <figref idref="DRAWINGS">FIG. <b>75</b></figref>, the attribute data includes an n-bit code and a remaining code.</p><p id="p-0708" num="0691">The n-bit code is encoded data of a prediction residual of a value of attribute information or a part of the encoded data. The bit length of the n-bit code depends on value R_TH[i]. For example, the bit length of the n-bit code is 6 bits when the value indicated by R_TH[i] is 63, the bit length of the n-bit code is 8 bits when the value indicated by R_TH[i] is 255.</p><p id="p-0709" num="0692">The remaining code is encoded data encoded using exponential-Golomb coding among encoded data of the prediction residual of the value of the attribute information. The remaining code is encoded or decoded when the value of the n-bit code is equal to R_TH[i]. The three-dimensional data decoding device decodes the prediction residual by adding the value of the n-bit code and the value of the remaining code. It is to be noted that the remaining code does not always need to be encoded or decoded when the value of the n-bit code is not equal to R_TH[i].</p><p id="p-0710" num="0693">Hereinafter, a description is given of a flow of processing in the three-dimensional data encoding device. <figref idref="DRAWINGS">FIG. <b>76</b></figref> is a flowchart of a three-dimensional data encoding process performed by the three-dimensional data encoding device.</p><p id="p-0711" num="0694">First, the three-dimensional data encoding device encodes geometry information (geometry) (S<b>3001</b>). For example, the three-dimensional data encoding is performed using octree representation.</p><p id="p-0712" num="0695">When the positions of three-dimensional points changed by quantization, etc, after the encoding of the geometry information, the three-dimensional data encoding device re-assigns attribute information of the original three-dimensional points to the post-change three-dimensional points (S<b>3002</b>). For example, the three-dimensional data encoding device interpolates values of attribute information according to the amounts of change in position to re-assign the attribute information. For example, the three-dimensional data encoding device detects pre-change N three-dimensional points closer to the post-change three-dimensional positions, and performs weighted averaging of the values of attribute information of the N three-dimensional points. For example, the three-dimensional data encoding device determines weights based on distances from the post-change three-dimensional positions to the respective N three-dimensional positions in weighted averaging. The three-dimensional data encoding device then determines the values obtained through the weighted averaging to be the values of the attribute information of the post-change three-dimensional points. When two or more of the three-dimensional points are changed to the same three-dimensional position through quantization, etc., the three-dimensional data encoding device may assign the average value of the attribute information of the pre-change two or more three-dimensional points as the values of the attribute information of the post-change three-dimensional points.</p><p id="p-0713" num="0696">Next, the three-dimensional data encoding device encodes the attribute information (attribute) re-assigned (S<b>3003</b>). For example, when encoding a plurality of kinds of attribute information, the three-dimensional data encoding device may encode the plurality of kinds of attribute information in order. For example, when encoding colors and reflectances as attribute information, the three-dimensional data encoding device may generate a bitstream added with the color encoding results and the reflectance encoding results after the color encoding results. It is to be noted that the order of the plurality of encoding results of attribute information to be added to a bitstream is not limited to the order, and may be any order.</p><p id="p-0714" num="0697">Alternatively, the three-dimensional data encoding device may add, to a header for example, information indicating the start location of encoded data of each attribute information in a bitstream. In this way, the three-dimensional data decoding device is capable of selectively decoding attribute information required to be decoded, and thus is capable of skipping the decoding process of the attribute information not required to be decoded. Accordingly, it is possible to reduce the amount of processing by the three-dimensional data decoding device. Alternatively, the three-dimensional data encoding device may encode a plurality of kinds of attribute information in parallel, and may integrate the encoding results into a single bitstream. In this way, the three-dimensional data encoding device is capable of encoding the plurality of kinds of attribute information at high speed;</p><p id="p-0715" num="0698"><figref idref="DRAWINGS">FIG. <b>77</b></figref> is a flowchart of an attribute information encoding process (S<b>3003</b>). First, the three-dimensional data encoding device sets LoDs (S<b>3011</b>). In other words, the three-dimensional data encoding device assigns each of three-dimensional points to any one of the plurality of LoDs.</p><p id="p-0716" num="0699">Next, the three-dimensional data encoding device starts a loop for each LoD (S<b>3012</b>). In other words, the three-dimensional data encoding device iteratively performs the processes of Steps from S<b>3013</b> to S<b>3021</b> for each LoD.</p><p id="p-0717" num="0700">Next, the three-dimensional data encoding device starts a loop for each three-dimensional point (S<b>3013</b>). In other words, the three-dimensional data encoding device iteratively performs the processes of Steps from S<b>3014</b> to S<b>3020</b> for each three-dimensional point.</p><p id="p-0718" num="0701">First, the three-dimensional data encoding device searches a plurality of neighbor points which are three-dimensional points present in the neighborhood of a current three-dimensional point to be processed and are to be used to calculate a predicted value of the current three-dimensional point (S<b>3014</b>). Next, the three-dimensional data encoding device calculates the weighted average of the values of attribute information of the plurality of neighbor points, and sets the resulting value to predicted value P (S<b>3015</b>). Next, the three-dimensional data encoding device calculates a prediction residual which is the difference between the attribute information of the current three-dimensional point and the predicted value (S<b>3016</b>). Next, the three-dimensional data encoding device quantizes the prediction residual to calculate a quantized value (S<b>3017</b>). Next, the three-dimensional data encoding device arithmetic encodes the quantized value (S<b>3018</b>).</p><p id="p-0719" num="0702">Next, the three-dimensional data encoding device inverse quantizes the quantized value to calculate an inverse quantized value (S<b>3019</b>). Next, the three-dimensional data encoding device adds a prediction value to the inverse quantized value to generate a decoded value (S<b>3020</b>). Next, the three-dimensional data encoding device ends the loop for each three-dimensional point (S<b>3021</b>). Next, the three-dimensional data encoding device ends the loop for each LoD (S<b>3022</b>).</p><p id="p-0720" num="0703">Hereinafter, a description is given of a three-dimensional data decoding process in the three-dimensional data decoding device which decodes a bitstream generated by the three-dimensional data encoding device.</p><p id="p-0721" num="0704">The three-dimensional data decoding device generates decoded binary data by arithmetic decoding the binary data of the attribute information in the bitstream generated by the three-dimensional data encoding device, according to the method similar to the one performed by the three-dimensional data encoding device. It is to be noted that when methods of applying arithmetic encoding are switched between the part (n-bit code) binarized using n bits and the part (remaining code) binarized using exponential-Golomb coding in the three-dimensional data encoding device, the three-dimensional data decoding device performs decoding in conformity with the arithmetic encoding, when applying arithmetic decoding.</p><p id="p-0722" num="0705">For example, the three-dimensional data decoding device performs arithmetic decoding using coding tables (decoding tables) different for each bit in the arithmetic decoding of the n-bit code. At this time, the three-dimensional data decoding device may change the number of coding tables to be used for each bit. For example, the three-dimensional data decoding device performs arithmetic decoding using one coding table for first bit b0 in the n-bit code. The three-dimensional data decoding device uses two coding tables for the next bit b1. The three-dimensional data decoding device switches coding tables to be used for arithmetic decoding of bit b1 according to the value (0 or 1) of b0. Likewise, the three-dimensional data decoding device uses four coding tables for the next bit b2. The three-dimensional data decoding device switches coding tables to be used for arithmetic decoding of bit b2 according to the values (in the range from 0 to 3) of b0 and b1.</p><p id="p-0723" num="0706">In this way, the three-dimensional data decoding device uses 2<sup>n&#x2212;1 </sup>coding tables when arithmetic decoding each bit bn&#x2212;1 in the n-bit code. The three-dimensional data decoding device switches coding tables to be used according to the values (occurrence patterns) of bits before bn&#x2212;1. In this way, the three-dimensional data decoding device is capable of appropriately decoding a bitstream encoded at an increased coding efficiency using the coding tables appropriate for each bit.</p><p id="p-0724" num="0707">It is to be noted that the three-dimensional data decoding device may reduce the number of coding tables to be used for each bit. For example, the three-dimensional data decoding device may switch 2<sup>m </sup>coding tables according to the values (occurrence patterns) of m bits (m&#x3c;n&#x2212;1) before bn&#x2212;1 when arithmetic decoding each bit bn&#x2212;1. In this way, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at the increased coding efficiency while reducing the number of coding tables to be used for each bit. It is to be noted that the three-dimensional data decoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred actually. In addition, the three-dimensional data decoding device may fix the occurrence probabilities of 0 and 1 in coding tables for some bit(s). In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount.</p><p id="p-0725" num="0708">For example, when an n-bit code is b0, b1, b2, . . . , bn&#x2212;1, the coding table for b0 is one (CTb0). Coding tables for b1 are two tables (CTb10 and CTb11). Coding tables to be used are switched according to the value (0 or 1) of b0. Coding tables for b2 are four tables (CTb20, CTb21, CTb22, and CTb23). Coding tables to be used according to the values (in the range from 0 to 3) of b0 and b1. Coding tables for bn&#x2212;1 are 2<sup>n&#x2212;1 </sup>tables (CTbn0, CTbn1, . . . , CTbn (2<sup>n&#x2212;1</sup>&#x2212;1)). Coding tables to be used are switched according to the values (in the range from 0 to 2<sup>n&#x2212;1</sup>&#x2212;1) of b0, b1, . . . , bn&#x2212;2;</p><p id="p-0726" num="0709"><figref idref="DRAWINGS">FIG. <b>78</b></figref> is a diagram for illustrating processing in the case where remaining codes are exponential-Golomb codes. As indicated in <figref idref="DRAWINGS">FIG. <b>78</b></figref>, the part (remaining part) binarized and encoded by the three-dimensional data encoding device using exponential-Golomb coding includes a prefix and a suffix. For example, the three-dimensional data decoding device switches coding tables between the prefix and the suffix. In other words, the three-dimensional data decoding device arithmetic decodes each of bits included in the prefix using coding tables for the prefix, and arithmetic decodes each of bits included in the suffix using coding tables for the suffix.</p><p id="p-0727" num="0710">It is to be noted that the three-dimensional data decoding device may update the occurrence probabilities of 0 and 1 in each coding table according to the values of binary data occurred at the time of decoding. In addition, the three-dimensional data decoding device may fix the occurrence probabilities of 0 and 1 in one of coding tables. In this way, it is possible to reduce the number of updates of occurrence probabilities, and thus to reduce the processing amount. For example, the three-dimensional data decoding device may update the occurrence probabilities for the prefix, and may fix the occurrence probabilities for the suffix.</p><p id="p-0728" num="0711">Furthermore, the three-dimensional data decoding device decodes the quantized prediction residual (unsigned integer value) by debinarizing the binary data of the prediction residual arithmetic decoded according to a method in conformity with the encoding method used by the three-dimensional data encoding device. The three-dimensional data decoding device first arithmetic decodes the binary data of an n-bit code to calculate a value of the n-bit code. Next, the three-dimensional data decoding device compares the value of the n-bit code with threshold value R_TH.</p><p id="p-0729" num="0712">In the case where the value of the n-bit code and threshold value R_TH match, the three-dimensional data decoding device determines that a bit encoded using exponential-Golomb coding is present next, and arithmetic decodes the remaining code which is the binary data encoded using exponential-Golomb coding. The three-dimensional data decoding device then calculates, from the decoded remaining code, a value of the remaining code using a reverse lookup table indicating the relationship between the remaining code and the value. <figref idref="DRAWINGS">FIG. <b>79</b></figref> is a diagram indicating an example of a reverse lookup table indicating relationships between remaining codes and the values thereof. Next, the three-dimensional data decoding device adds the obtained value of the remaining code to R_TH, thereby obtaining a debinarized quantized prediction residual.</p><p id="p-0730" num="0713">In the opposite case where the value of the n-bit code and threshold value R_TH do not match (the value of the n-bit code is smaller than value R_TH), the three-dimensional data decoding device determines the value of the n-bit code to be the debinarized quantized prediction residual as it is. In this way, the three-dimensional data decoding device is capable of appropriately decoding the bitstream generated while switching the binarization methods according to the values of the prediction residuals by the three-dimensional data encoding device.</p><p id="p-0731" num="0714">It is to be noted that, when threshold value R_TH is added to, for example, a header of a bitstream, the three-dimensional data decoding device may decode threshold value R_TH from the header, and may switch decoding methods using decoded threshold value R_TH. When threshold value R_TH is added to, for example, a header for each LoD, the three-dimensional data decoding device switch decoding methods using threshold value R_TH decoded for each LoD.</p><p id="p-0732" num="0715">For example, when threshold value R_TH is 63 and the value of the decoded n-bit code is 63, the three-dimensional data decoding device decodes the remaining code using exponential-Golomb coding, thereby obtaining the value of the remaining code. For example, in the example indicated in <figref idref="DRAWINGS">FIG. <b>79</b></figref>, the remaining code is 00100, and 3 is obtained as the value of the remaining code. Next, the three-dimensional data decoding device adds 63 that is threshold value R_TH and 3 that is the value of the remaining code, thereby obtaining 66 that is the value of the prediction residual.</p><p id="p-0733" num="0716">In addition, when the value of the decoded n-bit code is 32, the three-dimensional data decoding device sets 32 that is the value of the n-bit code to the value of the prediction residual.</p><p id="p-0734" num="0717">In addition, the three-dimensional data decoding device converts the decoded quantized prediction residual, for example, from an unsigned integer value to a signed integer value, through processing inverse to the processing in the three-dimensional data encoding device. In this way, when entropy decoding the prediction residual, the three-dimensional data decoding device is capable of appropriately decoding the bitstream generated without considering occurrence of a negative integer. It is to be noted that the three-dimensional data decoding device does not always need to convert an unsigned integer value to a signed integer value, and that, for example, the three-dimensional data decoding device may decode a sign bit when decoding a bitstream generated by separately entropy encoding the sign bit.</p><p id="p-0735" num="0718">The three-dimensional data decoding device performs decoding by inverse quantizing and reconstructing the quantized prediction residual after being converted to the signed integer value, to obtain a decoded value. The three-dimensional data decoding device uses the generated decoded value for prediction of a current three-dimensional point to be decoded and the following three-dimensional point(s). More specifically, the three-dimensional data decoding device multiplies the quantized prediction residual by a decoded quantization scale to calculate an inverse quantized value and adds the inverse quantized value and the predicted value to obtain the decoded value.</p><p id="p-0736" num="0719">The decoded unsigned integer value (unsigned quantized value) is converted into a signed integer value through the processing indicated below. When the least significant bit (LSB) of decoded unsigned integer value a2u is 1, the three-dimensional data decoding device sets signed integer value a2q to &#x2212;((a2u+1)&#x3e;&#x3e;1). When the LSB of unsigned integer value a2u is not 1, the three-dimensional data decoding device sets signed integer value a2q to ((a2u&#xd7;&#xd7;1).</p><p id="p-0737" num="0720">Likewise, when an LSB of decoded unsigned integer value b2u is 1, the three-dimensional data decoding device sets signed integer value b2q to &#x2212;((b2u+1)&#x3e;&#x3e;1). When the LSB of decoded unsigned integer value n2u is not 1, the three-dimensional data decoding device sets signed integer value b2q to ((b2u&#x3e;&#x3e;1).</p><p id="p-0738" num="0721">Details of the inverse quantization and reconstruction processing by the three-dimensional data decoding device are similar to the inverse quantization and reconstruction processing in the three-dimensional data encoding device.</p><p id="p-0739" num="0722">Hereinafter, a description is given of a flow of processing in the three-dimensional data decoding device. <figref idref="DRAWINGS">FIG. <b>80</b></figref> is a flowchart of a three-dimensional data decoding process performed by the three-dimensional data decoding device. First, the three-dimensional data decoding device decodes geometry information (geometry) from a bitstream (S<b>3031</b>). For example, the three-dimensional data decoding device performs decoding using octree representation.</p><p id="p-0740" num="0723">Next, the three-dimensional data decoding device decodes attribute information (attribute) from the bitstream (S<b>3032</b>). For example, when decoding a plurality of kinds of attribute information, the three-dimensional data decoding device may decode the plurality of kinds of attribute information in order. For example, when decoding colors and reflectances as attribute information, the three-dimensional data decoding device decodes the color encoding results and the reflectance encoding results in order of assignment in the bitstream. For example, when the reflectance encoding results are added after the color encoding results in a bitstream, the three-dimensional data decoding device decodes the color encoding results, and then decodes the reflectance encoding results. It is to be noted that the three-dimensional data decoding device may decode, in any order, the encoding results of the attribute information added to the bitstream.</p><p id="p-0741" num="0724">Alternatively, the three-dimensional data encoding device may add, to a header for example, information indicating the start location of encoded data of each attribute information in a bitstream. In this way, the three-dimensional data decoding device is capable of selectively decoding attribute information required to be decoded, and thus is capable of skipping the decoding process of the attribute information not required to be decoded. Accordingly, it is possible to reduce the amount of processing by the three-dimensional data decoding device. In addition, the three-dimensional data decoding device may decode a plurality of kinds of attribute information in parallel, and may integrate the decoding results into a single three-dimensional point cloud. In this way, the three-dimensional data decoding device is capable of decoding the plurality of kinds of attribute information at high speed;</p><p id="p-0742" num="0725"><figref idref="DRAWINGS">FIG. <b>81</b></figref> is a flowchart of an attribute information decoding process (S<b>3032</b>). First, the three-dimensional data decoding device sets LoDs (S<b>3041</b>). In other words, the three-dimensional data decoding device assigns each of three-dimensional points having the decoded geometry information to any one of the plurality of LoDs. For example, this assignment method is the same as the assignment method used in the three-dimensional data encoding device.</p><p id="p-0743" num="0726">Next, the three-dimensional data decoding device starts a loop for each LoD (S<b>3042</b>). In other words, the three-dimensional data decoding device iteratively performs the processes of Steps from S<b>3043</b> to S<b>3049</b> for each LoD.</p><p id="p-0744" num="0727">Next, the three-dimensional data decoding device starts a loop for each three-dimensional point (S<b>3043</b>). In other words, the three-dimensional data decoding device iteratively performs the processes of Steps from S<b>3044</b> to S<b>3048</b> for each three-dimensional point.</p><p id="p-0745" num="0728">First, the three-dimensional data decoding device searches a plurality of neighbor points which are three-dimensional points present in the neighborhood of a current three-dimensional point to be processed and are to be used to calculate a predicted value of the current three-dimensional point to be processed (S<b>3044</b>). Next, the three-dimensional data decoding device calculates the weighted average of the values of attribute information of the plurality of neighbor points, and sets the resulting value to predicted value P (S<b>3045</b>). It is to be noted that these processes are similar to the processes in the three-dimensional data encoding device.</p><p id="p-0746" num="0729">Next, the three-dimensional data decoding device arithmetic decodes the quantized value from the bitstream (S<b>3046</b>). The three-dimensional data decoding device inverse quantizes the decoded quantized value to calculate an inverse quantized value (S<b>3047</b>). Next, the three-dimensional data decoding device adds a predicted value to the inverse quantized value to generate a decoded value (S<b>3048</b>). Next, the three-dimensional data decoding device ends the loop for each three-dimensional point (S<b>3049</b>). Next, the three-dimensional data encoding device ends the loop for each LoD (S<b>3050</b>).</p><p id="p-0747" num="0730">The following describes configurations of the three-dimensional data encoding device and three-dimensional data decoding device according to the present embodiment. <figref idref="DRAWINGS">FIG. <b>82</b></figref> is a block diagram illustrating a configuration of three-dimensional data encoding device <b>3000</b> according to the present embodiment. Three-dimensional data encoding device <b>3000</b> includes geometry information encoder <b>3001</b>, attribute information re-assigner <b>3002</b>, and attribute information encoder <b>3003</b>.</p><p id="p-0748" num="0731">Attribute information encoder <b>3003</b> encodes geometry information (geometry) of a plurality of three-dimensional points included in an input point cloud. Attribute information re-assigner <b>3002</b> re-assigns the values of attribute information of the plurality of three-dimensional points included in the input point cloud, using the encoding and decoding results of the geometry information. Attribute information encoder <b>3003</b> encodes the re-assigned attribute information (attribute). Furthermore, three-dimensional data encoding device <b>3000</b> generates a bitstream including the encoded geometry information and the encoded attribute information;</p><p id="p-0749" num="0732"><figref idref="DRAWINGS">FIG. <b>83</b></figref> is a block diagram illustrating a configuration of three-dimensional data decoding device <b>3010</b> according to the present embodiment. Three-dimensional data decoding device <b>3010</b> includes geometry information decoder <b>3011</b> and attribute information decoder <b>3012</b>.</p><p id="p-0750" num="0733">Geometry information decoder <b>3011</b> decodes the geometry information (geometry) of a plurality of three-dimensional points from a bitstream. Attribute information decoder <b>3012</b> decodes the attribute information (attribute) of the plurality of three-dimensional points from the bitstream. Furthermore, three-dimensional data decoding device <b>3010</b> integrates the decoded geometry information and the decoded attribute information to generate an output point cloud.</p><p id="p-0751" num="0734">As described above, the three-dimensional data encoding device according to the present embodiment performs the process illustrated in <figref idref="DRAWINGS">FIG. <b>84</b></figref>. The three-dimensional data encoding device encodes a three-dimensional point having attribute information. First, the three-dimensional data encoding device calculates a predicted value of the attribute information of the three-dimensional point (S<b>3061</b>). Next, the three-dimensional data encoding device calculates a prediction residual which is the difference between the attribute information of the three-dimensional point and the predicted value (S<b>3062</b>). Next, the three-dimensional data encoding device binarizes the prediction residual to generate binary data (S<b>3063</b>). Next, the three-dimensional data encoding device arithmetic encodes the binary data (S<b>3064</b>).</p><p id="p-0752" num="0735">In this way, the three-dimensional data encoding device is capable of reducing the code amount of the to-be-coded data of the attribute information by calculating the prediction residual of the attribute information, and binarizing and arithmetic encoding the prediction residual.</p><p id="p-0753" num="0736">For example, in arithmetic encoding (S<b>3064</b>), the three-dimensional data encoding device uses coding tables different for each of bits of binary data. By doing so, the three-dimensional data encoding device can increase the coding efficiency.</p><p id="p-0754" num="0737">For example, in arithmetic encoding (S<b>3064</b>), the number of coding tables to be used is larger for a lower-order bit of the binary data.</p><p id="p-0755" num="0738">For example, in arithmetic encoding (S<b>3064</b>), the three-dimensional data encoding device selects coding tables to be used to arithmetic encode a current bit included in binary data, according to the value of a higher-order bit with respect to the current bit. By doing so, since the three-dimensional data encoding device can select coding tables to be used according to the value of the higher-order bit, the three-dimensional data encoding device can increase the coding efficiency.</p><p id="p-0756" num="0739">For example, in binarization (S<b>3063</b>), the three-dimensional data encoding device: binarizes a prediction residual using a fixed bit count to generate binary data when the prediction residual is smaller than a threshold value (R_TH); and generates binary data including a first code (n-bit code) and a second code (remaining code) when the prediction residual is larger than or equal to the threshold value (R_TH). The first code is of a fixed bit count indicating the threshold value (R_TH), and the second code (remaining code) is obtained by binarizing, using exponential-Golomb coding, the value obtained by subtracting the threshold value (R_TH) from the prediction residual. In arithmetic encoding (S<b>3064</b>), the three-dimensional data encoding device uses arithmetic encoding methods different between the first code and the second code.</p><p id="p-0757" num="0740">With this, for example, since it is possible to arithmetic encode the first code and the second code using arithmetic encoding methods respectively suitable for the first code and the second code, it is possible to increase coding efficiency.</p><p id="p-0758" num="0741">For example, the three-dimensional data encoding device quantizes the prediction residual, and, in binarization (S<b>3063</b>), binarizes the quantized prediction residual. The threshold value (R_TH) is changed according to a quantization scale in quantization. With this, since the three-dimensional data encoding device can use the threshold value suitably according to the quantization scale, it is possible to increase the coding efficiency.</p><p id="p-0759" num="0742">For example, the second code includes a prefix and a suffix. In arithmetic encoding (S<b>3064</b>), the three-dimensional data encoding device uses different coding tables between the prefix and the suffix. In this way, the three-dimensional data encoding device can increase the coding efficiency.</p><p id="p-0760" num="0743">For example, the three-dimensional data encoding device includes a processor and memory, and the processor performs the above process using the memory.</p><p id="p-0761" num="0744">The three-dimensional data decoding device according to the present embodiment performs the process illustrated in <figref idref="DRAWINGS">FIG. <b>85</b></figref>. The three-dimensional data decoding device decodes a three-dimensional point having attribute information. First, the three-dimensional data decoding device calculates a predicted value of the attribute information of a three-dimensional point (S<b>3071</b>). Next, the three-dimensional data decoding device arithmetic decodes encoded data included in a bitstream to generate binary data (S<b>3072</b>). Next, the three-dimensional data decoding device debinarizes the binary data to generate a prediction residual (S<b>3073</b>). Next, the three-dimensional data decoding device calculates a decoded value of the attribute information of the three-dimensional point by adding the predicted value and the prediction residual (S<b>3074</b>).</p><p id="p-0762" num="0745">In this way, the three-dimensional data decoding device is capable of appropriately decoding the bitstream of the attribute information generated by calculating the prediction residual of the attribute information and binarizing and arithmetic decoding the prediction residual.</p><p id="p-0763" num="0746">For example, in arithmetic decoding (S<b>3072</b>), the three-dimensional data decoding device uses coding tables different for each of bits of binary data. With this, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at an increased coding efficiency.</p><p id="p-0764" num="0747">For example, in arithmetic decoding (S<b>3072</b>), the number of coding tables to be used is larger for a lower bit of the binary data.</p><p id="p-0765" num="0748">For example, in arithmetic decoding (S<b>3072</b>), the three-dimensional data decoding device selects coding tables to be used to arithmetic decode a current bit included in binary data, according to the value of a higher-order bit with respect to the current bit. With this, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at an increased coding efficiency.</p><p id="p-0766" num="0749">For example, in debinarizaion (S<b>3073</b>), the three-dimensional data decoding device debinarizes the first code (n-bit code) of a fixed bit count included in the binary data to generate a first value. The three-dimensional data decoding device: determines the first value to be the prediction residual when the first value is smaller than the threshold value (R_TH); and, when the first value is larger than or equal to the threshold value (R_YH), generates a second value by debinarizing the second code (remaining code) which is an exponential-Golomb code included in the binary data and adds the first value and the second value, thereby generating a prediction residual. In the arithmetic decoding (S<b>3072</b>), the three-dimensional data decoding device uses arithmetic decoding methods different between the first code and the second code.</p><p id="p-0767" num="0750">With this, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at an increased coding efficiency.</p><p id="p-0768" num="0751">For example, the three dimensional data decoding device inverse quantizes the prediction residual, and, in addition (S<b>3074</b>), adds the predicted value and the inverse quantized prediction residual. The threshold value (R_TH) is changed according to a quantization scale in inverse quantization. With this, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at an increased coding efficiency.</p><p id="p-0769" num="0752">For example, the second code includes a prefix and a suffix. In arithmetic decoding (S<b>3072</b>), the three-dimensional data decoding device uses different coding tables between the prefix and the suffix. With this, the three-dimensional data decoding device is capable of appropriately decoding the bitstream encoded at an increased coding efficiency.</p><p id="p-0770" num="0753">For example, the three-dimensional data decoding device includes a processor and memory, and the processor performs the above-described process using the memory.</p><heading id="h-0016" level="1">Embodiment 10</heading><p id="p-0771" num="0754">Predicted values may be generated by a method different from that in Embodiment 9. Hereinafter, a three-dimensional point to be encoded is referred to as a first three-dimensional point, and one or more three-dimensional points in the vicinity of the first three-dimensional point is referred to as one or more second three-dimensional points in some cases.</p><p id="p-0772" num="0755">For example, in generating of a predicted value of an attribute information item (attribute information) of a three-dimensional point, an attribute value as it is of a closest three-dimensional point among encoded and decoded three-dimensional points in the vicinity of a three-dimensional point to be encoded may be generated as a predicted value. In the generating of the predicted value, prediction mode information (PredMode) may be appended for each three-dimensional point, and one predicted value may be selected from a plurality of predicted values to allow generation of a predicted value. Specifically, for example, it is conceivable that, for total number M of prediction modes, an average value is assigned to prediction mode 0, an attribute value of three-dimensional point A is assigned to prediction mode 1, . . . , and an attribute value of three-dimensional point Z is assigned to prediction mode M&#x2212;1, and the prediction mode used for prediction is appended to a bitstream for each three-dimensional point. As such, a first prediction mode value indicating a first prediction mode for calculating, as a predicted value, an average of attribute information items of the surrounding three-dimensional points may be smaller than a second prediction mode value indicating a second prediction mode for calculating, as a predicted value, an attribute information item as it is of a surrounding three-dimensional point. Here, the &#x201c;average value&#x201d; as the predicted value calculated in prediction mode 0 is an average value of the attribute values of the three-dimensional points in the vicinity of the three-dimensional point to be encoded;</p><p id="p-0773" num="0756"><figref idref="DRAWINGS">FIG. <b>86</b></figref> is a diagram showing a first example of a table representing predicted values calculated in the prediction modes according to Embodiment 10. <figref idref="DRAWINGS">FIG. <b>87</b></figref> is a diagram showing examples of attribute information items used as the predicted values according to Embodiment 10. <figref idref="DRAWINGS">FIG. <b>88</b></figref> is a diagram showing a second example of a table representing predicted values calculated in the prediction modes according to Embodiment 10.</p><p id="p-0774" num="0757">Number M of prediction modes may be appended to a bitstream. Number M of prediction modes may be defined by a profile or a level of standards rather than appended to the bitstream. Number M of prediction modes may be also calculated from number N of three-dimensional points used for prediction. For example, number M of prediction modes may be calculated by M=N+1.</p><p id="p-0775" num="0758">The table in <figref idref="DRAWINGS">FIG. <b>86</b></figref> is an example of a case with number N of three-dimensional points used for prediction being 4 and number M of prediction modes being 5. A predicted value of an attribute information item of point b2 can be generated by using attribute information items of points a0, a1, a2, b1. In selecting one prediction mode from a plurality of prediction modes, a prediction mode for generating, as a predicted value, an attribute value of each of points a0, a1, a2, b1 may be selected in accordance with distance information from point b2 to each of points a0, a1, a2, b1. The prediction mode is appended for each three-dimensional point to be encoded. The predicted value is calculated in accordance with a value corresponding to the appended prediction mode.</p><p id="p-0776" num="0759">The table in <figref idref="DRAWINGS">FIG. <b>88</b></figref> is, as in <figref idref="DRAWINGS">FIG. <b>86</b></figref>, an example of a case with number N of three-dimensional points used for prediction being 4 and number M of prediction modes being 5. A predicted value of an attribute information item of point a2 can be generated by using attribute information items of points a0, a1. In selecting one prediction mode from a plurality of prediction modes, a prediction mode for generating, as a predicted value, an attribute value of each of points a0 and a1 may be selected in accordance with distance information from point a2 to each of points a0, a1. The prediction mode is appended for each three-dimensional point to be encoded. The predicted value is calculated in accordance with a value corresponding to the appended prediction mode.</p><p id="p-0777" num="0760">When the number of neighboring points, that is, number N of surrounding three-dimensional points is smaller than four such as at point a2 above, a prediction mode to which a predicted value is not assigned may be written as &#x201c;not available&#x201d; in the table.</p><p id="p-0778" num="0761">Assignment of values of the prediction modes may be determined in accordance with the distance from the three-dimensional point to be encoded. For example, prediction mode values indicating a plurality of prediction modes decrease with decreasing distance from the three-dimensional point to be encoded to the surrounding three-dimensional points having the attribute information items used as the predicted values. The example in <figref idref="DRAWINGS">FIG. <b>86</b></figref> shows that points b1, a2, a1, a0 are sequentially located closer to point b2 as the three-dimensional point to be encoded. For example, in the calculating of the predicted value, the attribute information item of point b1 is calculated as the predicted value in a prediction mode indicated by a prediction mode value of &#x201c;1&#x201d; among two or more prediction modes, and the attribute information item of point a2 is calculated as the predicted value in a prediction mode indicated by a prediction mode value of &#x201c;2&#x201d;. As such, the prediction mode value indicating the prediction mode for calculating, as the predicted value, the attribute information item of point b 1 is smaller than the prediction mode value indicating the prediction mode for calculating, as the predicted value, the attribute information item of point a2 farther from point b2 than point b1.</p><p id="p-0779" num="0762">Thus, a small prediction mode value can be assigned to a point that is more likely to be predicted and selected due to a short distance, thereby reducing a bit number for encoding the prediction mode value. Also, a small prediction mode value may be preferentially assigned to a three-dimensional point belonging to the same LoD as the three-dimensional point to be encoded;</p><p id="p-0780" num="0763"><figref idref="DRAWINGS">FIG. <b>89</b></figref> is a diagram showing a third example of a table representing predicted values calculated in the prediction modes according to Embodiment 10. Specifically, the third example is an example of a case where an attribute information item used as a predicted value is a value of color information (YUV) of a surrounding three-dimensional point. As such, the attribute information item used as the predicted value may be color information indicating a color of the three-dimensional point.</p><p id="p-0781" num="0764">As shown in <figref idref="DRAWINGS">FIG. <b>89</b></figref>, a predicted value calculated in a prediction mode indicated by a prediction mode value of &#x201c;0&#x201d; is an average of Y, U, and V components defining a YUV color space. Specifically, the predicted value includes a weighted average Yave of Y component values Yb1, Ya2, Ya1, Ya0 corresponding to points b1, a2, a1, a0, respectively, a weighted average Uave of U component values Ub1, Ua2, Ua1, Ua0 corresponding to points b1, a2, a1, a0, respectively, and a weighted average Vave of V component values Vb1, Va2, Va1, Va0 corresponding to points b1, a2, a1, a0, respectively. Predicted values calculated in prediction modes indicated by prediction mode values of &#x201c;1&#x201d; to &#x201c;4&#x201d; include color information of the surrounding three-dimensional points b1, a2, a1, a0. The color information is indicated by combinations of the Y, U, and V component values.</p><p id="p-0782" num="0765">In <figref idref="DRAWINGS">FIG. <b>89</b></figref>, the color information is indicated by a value defined by the YUV color space, but not limited to the YUV color space. The color information may be indicated by a value defined by an RGB color space or a value defined by any other color space.</p><p id="p-0783" num="0766">As such, in the calculating of the predicted value, two or more averages or two or more attribute information items may be calculated as the predicted values of the prediction modes. The two or more averages or the two or more attribute information items may indicate two or more component values each defining a color space.</p><p id="p-0784" num="0767">For example, when a prediction mode indicated by a prediction mode value of &#x201c;2&#x201d; in the table in <figref idref="DRAWINGS">FIG. <b>89</b></figref> is selected, a Y component, a U component, and a V component as attribute values of the three-dimensional point to be encoded may be encoded as predicted values Ya2, Ua2, Va2. In this case, the prediction mode value of &#x201c;2&#x201d; is appended to the bitstream;</p><p id="p-0785" num="0768"><figref idref="DRAWINGS">FIG. <b>90</b></figref> is a diagram showing a fourth example of a table representing predicted values calculated in the prediction modes according to Embodiment 10. Specifically, the fourth example is an example of a case where an attribute information item used as a predicted value is a value of reflectance information of a surrounding three-dimensional point. The reflectance information is, for example, information indicating reflectance R.</p><p id="p-0786" num="0769">As shown in <figref idref="DRAWINGS">FIG. <b>90</b></figref>, a predicted value calculated in a prediction mode indicated by a prediction mode value of &#x201c;0&#x201d; is weighted average Rave of reflectances Rb1, Ra2, Ra1, Ra0 corresponding to points b1, a2, a1, a0, respectively. Predicted values calculated in prediction modes indicated by prediction mode values of &#x201c;1&#x201d; to &#x201c;4&#x201d; are reflectances Rb1, Ra2, Ra1, Ra0 of surrounding three-dimensional points b1, a2, a1, a0, respectively.</p><p id="p-0787" num="0770">For example, when a prediction mode indicated by a prediction mode value of &#x201c;3&#x201d; in the table in <figref idref="DRAWINGS">FIG. <b>90</b></figref> is selected, a reflectance as an attribute value of a three-dimensional point to be encoded may be encoded as predicted value Ra1. In this case, the prediction mode value of &#x201c;3&#x201d; is appended to the bitstream.</p><p id="p-0788" num="0771">As shown in <figref idref="DRAWINGS">FIGS. <b>89</b> and <b>90</b></figref>, the attribute information item may include a first attribute information item and a second attribute information item different from the first attribute information item. The first attribute information item is, for example, color information. The second attribute information item is, for example, reflectance information. In the calculating of the predicted value, a first predicted value may be calculated by using the first attribute information item, and a second predicted value may be calculated by using the second attribute information item.</p><heading id="h-0017" level="1">Embodiment 11</heading><p id="p-0789" num="0772">When attribute information on three-dimensional points is encoded, a prediction unit (PU) may be determined according to the order of encoding or decoding, and the attribute information may be encoded or decoded on a PU basis. For example, the number of three-dimensional points included in a PU (PuSize) is defined. The three-dimensional data encoding device or the three-dimensional data decoding device divides three-dimensional points into a plurality of PUs according to the order of encoding or decoding, and encodes or decodes the plurality of PUs.</p><p id="p-0790" num="0773">Note that the order of encoding or decoding the attribute information on three-dimensional points can be any order. For example, the three-dimensional data encoding device or the three-dimensional data decoding device may generate levels of detail (LoDs) and encode or decode the attribute information in the order of the LoDs.</p><p id="p-0791" num="0774">Here, an LoD is a hierarchical level to which a three-dimensional point classified based on the geometry information on the three-dimensional point belongs. Specifically, first, the three-dimensional data encoding device selects initial point a0 and assigns initial point a0 to an LoD0. The three-dimensional data encoding device then extracts point a1 the distance of which from point a0 is greater than a threshold Thres_LoD[0] of LoD0, and assigns point a1 to LoD0. The three-dimensional data encoding device then extracts point a2 the distance of which from point a1 is greater than the threshold Thres_LoD[0] of LoD0, and assigns point a2 to LoD0. In this way, the three-dimensional data encoding device configures LoD0 in such a manner that the distances between the points in LoD0 are greater than the threshold Thres_LoD[0].</p><p id="p-0792" num="0775">The three-dimensional data encoding device then selects point b0 yet to be assigned to any LoD, and assigns point b0 to LoD1. The three-dimensional data encoding device then extracts point b1 yet to be assigned to any LoD the distance of which from point b0 is greater than a threshold Thres_LoD[1] of LoD1, and assigns point b1 to LoD1. The three-dimensional data encoding device then extracts point b2 yet to be assigned to any LoD the distance of which from point b1 is greater than the threshold Thres_LoD[1] of LoD1, and assigns point b2 to LoD1. In this way, the three-dimensional data encoding device configures LoD1 in such a manner that the distances between the points in LoD1 are greater than the threshold Thres_LoD[1]. LoD2 and the following levels are also configured in the similar process.</p><p id="p-0793" num="0776">Alternatively, the three-dimensional data encoding device or the three-dimensional data decoding device may encode or decode the attribute information on three-dimensional points in the order of encoding or decoding of the geometry information on the three-dimensional points without generating LoDs. As a further alternative, the three-dimensional data encoding device or the three-dimensional data decoding device may generate Morton codes from the geometry information on three-dimensional points, and encode or decode the attribute information in the order of the Morton codes.</p><p id="p-0794" num="0777">Next, definition example 1 of PU will be described. <figref idref="DRAWINGS">FIG. <b>91</b></figref> is a diagram showing definition example 1 of PU.</p><p id="p-0795" num="0778">Definition example 1 is based on the following rules. That is, a three-dimensional point in the same PU cannot be referred to. An encoded or decoded three-dimensional point in a different PU can be referred to.</p><p id="p-0796" num="0779">The three-dimensional data encoding device adds prediction mode information (PredMode) on a PU basis, and performs predictive encoding of the three-dimensional points in a PU using the same prediction mode.</p><p id="p-0797" num="0780">Note that the three-dimensional data encoding device may determine whether to add prediction mode information on a PU basis or not. For example, the three-dimensional data encoding device may calculate a prediction mode for a PU to which a current three-dimensional point to be encoded belongs from a variance or the like of encoded attribute information (an attribute value) on a three-dimensional point in a different PU. The three-dimensional data encoding device adds prediction mode information indicating the calculated prediction mode to the PU if the calculated variance is greater than or equal to a threshold, and adds no prediction mode information to the PU and uses a predetermined prediction mode (such as a prediction mode of PredMode=0) otherwise. If no prediction mode information is added to the PU, the three-dimensional data decoding device uses a predetermined prediction mode (such as a prediction mode of PredMode=0).</p><p id="p-0798" num="0781">The three-dimensional data encoding device may describe the size of the PU in the header or the like. For example, if the size (PuSize) of the PU is 8, the three-dimensional data encoding device may add the information that PuSize=8 to the header. The three-dimensional data encoding device may express PuSize as 2<sup>n</sup>, and add the value of n to the header.</p><p id="p-0799" num="0782">According to definition example 1, the three-dimensional data decoding device can decode the three-dimensional points in the same PU in parallel. In addition, if prediction mode information is added on a PU basis, the overhead can be reduced, and the coding efficiency can be improved compared with the case where prediction mode information is added on a three-dimensional point basis.</p><p id="p-0800" num="0783">Here, the prediction mode refers to a prediction method used for generating a predicted value of attribute information on a current three-dimensional point to be processed from one or more three-dimensional points referred to. For example, a plurality of selectable prediction methods differ in the three-dimensional point to be referred to (or what three-dimensional point is to be referred to), the number of three-dimensional points to be referred to, or the calculation method for calculating a predicted value from attribute information on a plurality of three-dimensional points referred to (or what is calculated, such as an average or a median), for example. As another example, a prediction residual, which is a difference between the attribute information on the current three-dimensional point and the generated predicted value, is calculated and encoded.</p><p id="p-0801" num="0784">Next, definition example 2 of PU will be described. <figref idref="DRAWINGS">FIG. <b>92</b></figref> is a diagram showing definition example 2 of PU.</p><p id="p-0802" num="0785">Definition example 2 is based on the following rules. That is, an encoded or decoded three-dimensional point in the same PU can be referred to. A three-dimensional point yet to be encoded or decoded cannot be referred to. An encoded or decoded three-dimensional point in a different PU can be referred to.</p><p id="p-0803" num="0786">The three-dimensional data encoding device adds prediction mode information (PredMode) on a PU basis, and performs predictive encoding of the three-dimensional points in a PU using the same prediction mode.</p><p id="p-0804" num="0787">Note that the three-dimensional data encoding device may determine whether to add prediction mode information on a PU basis or not. For example, the three-dimensional data encoding device may calculate a prediction mode for a PU to which a current three-dimensional point to be encoded belongs from a variance or the like of encoded attribute information (an attribute value) on a three-dimensional point in a different PU. The three-dimensional data encoding device adds prediction mode information indicating the calculated prediction mode to the PU if the calculated variance is greater than or equal to a threshold, and adds no prediction mode information to the PU and uses a predetermined prediction mode (such as a prediction mode of PredMode=0) otherwise. If no prediction mode information is added to the PU, the three-dimensional data decoding device uses a predetermined prediction mode (such as a prediction mode of PredMode=0).</p><p id="p-0805" num="0788">The three-dimensional data encoding device may describe the size of the PU in the header or the like. For example, if the size (PuSize) of the PU is 8, the three-dimensional data encoding device may add the information that PuSize=8 to the header. The three-dimensional data encoding device may express PuSize as 2<sup>n</sup>, and add the value of n to the header.</p><p id="p-0806" num="0789">According to definition example 2, even in the same PU, an encoded or decoded three-dimensional point can be referred to. Therefore, the prediction precision can be improved. As a result, the coding efficiency can be improved. In addition, if prediction mode information is added on a PU basis, the overhead can be reduced, and the coding efficiency can be improved compared with the case where prediction mode information is added on a three-dimensional point basis.</p><p id="p-0807" num="0790">Next, syntax example 1 will be described. <figref idref="DRAWINGS">FIG. <b>93</b></figref> is a diagram showing a syntax example of an attribute header (attribute_header) included in attribute information on a three-dimensional point. The attribute header includes PU size information (PuSize). The PU size information indicates the size of a unit (PU) of prediction of attribute values of three-dimensional points. For example, the PU size information indicates the number of three-dimensional points included in one PU. In that case, the three-dimensional data encoding device divides a plurality of three-dimensional points into a plurality of PUs by dividing the plurality of three-dimensional points in units of the indicated number of three-dimensional points in the order of processing. The three-dimensional data encoding device adds prediction mode information on a PU basis, and encodes the three-dimensional points in one PU using the same prediction mode;</p><p id="p-0808" num="0791"><figref idref="DRAWINGS">FIG. <b>94</b></figref> is a diagram showing a syntax example of attribute data (attribute_data) included in the attribute information. The attribute data includes prediction mode information (PredMode), an n-bit code, and a remaining code.</p><p id="p-0809" num="0792">The prediction mode information indicates a prediction mode for encoding or decoding of attribute information on a j-th three-dimensional point in level i. For example, the prediction mode information assumes a value from 0 to M&#x2212;1 (M represents a total number of prediction modes). When no prediction mode information is included in the bitstream (when a condition that maxdiff&#x3e;=Thfix[i]&#x26;&#x26;NumPredMode[i]&#x3e;1 is not satisfied), the three-dimensional data decoding device may estimate that the value of the prediction mode information is 0.</p><p id="p-0810" num="0793">Here, maxdiff denotes a maximum absolute difference between the pieces of attribute information on a plurality of three-dimensional points that can be referred to. Thfix[i] denotes a predetermined threshold. The value of 0 of the prediction mode information indicates a prediction mode that uses an average value of the pieces of attribute information on a plurality of three-dimensional points that can be referred to as a predicted value, for example. That is, when the difference between a plurality of pieces of attribute information that can be referred to is smaller than a predetermined value, a predetermined prediction mode is used. NumPredMode[i] indicates the number of the prediction modes that can be used. That is, when the number of the prediction modes that can be used is 1, a predetermined prediction mode is used.</p><p id="p-0811" num="0794">Note that the estimated value is not limited to 0, and the three-dimensional data decoding device may use a predetermined value selected from 0 to M&#x2212;1 as the estimated value. Furthermore, the estimated value for the case where no prediction mode information is included in the bitstream may be additionally added to the header or the like.</p><p id="p-0812" num="0795">The three-dimensional data encoding device may binarize the prediction mode information with a truncated unary code using the number of prediction modes to which a predicted value is assigned and arithmetically encodes the binarized prediction mode information. The three-dimensional data encoding device may also add the prediction mode information on a PU basis.</p><p id="p-0813" num="0796">The n-bit code is encoded data of a prediction residual, which is the difference between the value of attribute information and a predicted value. The bit length of the n-bit code depends on the value of R_TH[i]. For example, when the value indicated by R_TH[i] is 63, the bit length is 6 bits, and when the value indicated by R_TH[i] is 255, the bit length is 8 bits.</p><p id="p-0814" num="0797">The remaining code is a part of the encoded data of the prediction residual for the value of attribute information that is encoded with exponential-Golomb coding. Specifically, if the n-bit code is the same as R_TH[i], the three-dimensional data decoding device obtains the prediction residual by decoding the remaining code and summing the value of the n-bit code and the value of the remaining code. If the n-bit code is not the same as R_TH[i], the three-dimensional data decoding device does not have to decode the remaining code.</p><p id="p-0815" num="0798">That is, when the prediction residual is smaller than a predetermined threshold R_TH[i], the n-bit code, which indicates the prediction residual, is produced, but the remaining code is not produced. When the prediction residual is greater than or equal to the threshold R_TH[i], the n-bit code, which indicates the value of the threshold R_TH[i], and the remaining code, which indicates the value obtained by subtracting the threshold R_TH[i] from the prediction residual, is produced.</p><p id="p-0816" num="0799">Next, syntax example 2 will be described. <figref idref="DRAWINGS">FIG. <b>95</b></figref> is a diagram showing a syntax example of attribute data (attribute_data) in syntax example 2.</p><p id="p-0817" num="0800">The attribute data includes prediction mode information (PredMode), an n-bit code, and a remaining code.</p><p id="p-0818" num="0801">The prediction mode information indicates a prediction mode for encoding or decoding of attribute information on a j-th three-dimensional point in level i. For example, the prediction mode information assumes a value from 0 to M&#x2212;1 (M represents a total number of prediction modes). When no prediction mode information is included in the bitstream (when a condition that NumPredMode[i]&#x3e;1 is not satisfied), the three-dimensional data decoding device may estimate that the value of the prediction mode information is 0. Note that the estimated value is not limited to 0, and the three-dimensional data decoding device may use a predetermined value selected from 0 to M&#x2212;1 as the estimated value. Furthermore, the estimated value for the case where no prediction mode information is included in the bitstream may be additionally added to the header or the like.</p><p id="p-0819" num="0802">The three-dimensional data encoding device may binarize the prediction mode information with a truncated unary code using the value of the total number M of prediction modes and arithmetically encodes the binarized prediction mode information. The three-dimensional data encoding device may encode the value of the total number M of prediction modes and add the value to the header as prediction mode number information (NumPredMode). In that case, the three-dimensional data decoding device can decode the prediction mode number information in the header to calculate the total number M of prediction modes, and decode the prediction mode information using the total number M of prediction modes. Therefore, the three-dimensional data decoding device can perform arithmetic decoding of the bitstream without waiting until peripheral three-dimensional points that can be used for prediction are calculated by generating LoDs and calculating the number of prediction modes to which a predicted value is assigned. That is, the three-dimensional data decoding device can perform the process of arithmetically decoding the bitstream and the process of generating LoDs or other processes in parallel, so that the overall throughput of the decoding process can be improved.</p><p id="p-0820" num="0803">The three-dimensional data encoding device may also add the prediction mode information on a PU basis. Note that the n-bit code and the remaining code are the same as those shown in <figref idref="DRAWINGS">FIG. <b>94</b></figref>;</p><p id="p-0821" num="0804"><figref idref="DRAWINGS">FIG. <b>96</b></figref> is a flowchart of a process of encoding prediction mode information (PredMode). First, the three-dimensional data encoding device binarizes prediction mode information with a truncated unary code using a total number M of prediction modes (S<b>6001</b>). The three-dimensional data encoding device then arithmetically encodes the binarized data of the truncated unary code (S<b>6002</b>). The three-dimensional data encoding device then adds (encodes) the total number M of prediction modes to the header as prediction mode number information (NumPredMode) (S<b>6003</b>);</p><p id="p-0822" num="0805"><figref idref="DRAWINGS">FIG. <b>97</b></figref> is a flowchart of a process of decoding prediction mode information (PredMode). First, the three-dimensional data decoding device decodes the prediction mode number information (NumPredMode) in the header, and sets the total number M of prediction modes indicated by the prediction mode number information (S<b>6011</b>). The three-dimensional data decoding device then arithmetically decodes the prediction mode information (PredMode) using the total number M of prediction modes, thereby generating the binarized data of the truncated unary code (S<b>6012</b>). The three-dimensional data decoding device then calculates the prediction mode from the binarized data of the truncated unary code (S<b>6013</b>).</p><p id="p-0823" num="0806">Next, a flow of an encoding process performed by the three-dimensional data encoding device will be described. <figref idref="DRAWINGS">FIG. <b>98</b></figref> is a flowchart of the encoding process performed by the three-dimensional data encoding device. First, the three-dimensional data encoding device encodes geometry information (geometry) (S<b>6021</b>). For example, the three-dimensional data encoding device performs the encoding using an octree representation.</p><p id="p-0824" num="0807">The three-dimensional data encoding device then converts attribute information (S<b>6022</b>). For example, after the encoding of the geometry information, if the position of a three-dimensional point is changed because of quantization or the like, the three-dimensional data encoding device reassigns the attribute information on the original three-dimensional point to the three-dimensional point changed in position. Note that the three-dimensional data encoding device may perform the reassignment by interpolation of values of the attribute information according to the amount of change in position. For example, the three-dimensional data encoding device calculates the value of the attribute information on the three-dimensional point changed in position by detecting N three-dimensional points yet to be changed in position close to the three-dimensional position of the three-dimensional point changed in position and taking a weighted average of the values of the attribute information on the N three-dimensional points based on the distance between the three-dimensional position of the three-dimensional point changed in position and each of the N three-dimensional points. If the three-dimensional positions of two or more three-dimensional points are changed to the same three-dimensional position because of quantization or the like, the three-dimensional data encoding device may assign an average value of the attribute information on the two or more three-dimensional points yet to be changed in position as the value of the attribute information on the three-dimensional points changed in position.</p><p id="p-0825" num="0808">The three-dimensional data encoding device then encodes the attribute information (S<b>6023</b>). Note that when the three-dimensional data encoding device encodes a plurality of kinds of attribute information, the three-dimensional data encoding device may sequentially encode the plurality of kinds of attribute information. For example, when the three-dimensional data encoding device encodes color and reflectance as attribute information, the three-dimensional data encoding device generates a bitstream including the result of encoding of color followed by the result of encoding of reflectance. Note that the order of the results of encoding of attribute information included in a bitstream can be any order.</p><p id="p-0826" num="0809">The three-dimensional data encoding device may add information indicating a starting point of the encoded data of each attribute information in the bitstream to the header or the like. This allows the three-dimensional data decoding device to selectively decode attribute information that needs to be decoded, so that the decoding process for attribute information that does not need to be decoded can be omitted, and the processing amount can be reduced. The three-dimensional data encoding device may encode a plurality of pieces of attribute information in parallel, and integrate the results of the encoding into one bitstream. In this way, the three-dimensional data encoding device can encode a plurality of pieces of attribute information at a high speed;</p><p id="p-0827" num="0810"><figref idref="DRAWINGS">FIG. <b>99</b></figref> is a flowchart of the attribute information encoding process (S<b>6023</b>). First, the three-dimensional data encoding device sets an LoD (S<b>6031</b>). That is, the three-dimensional data encoding device assigns each three-dimensional point to any of a plurality of LoDs.</p><p id="p-0828" num="0811">The three-dimensional data encoding device then starts a loop on an LoD basis (S<b>6032</b>). That is, the three-dimensional data encoding device repeatedly performs the process from step S<b>6033</b> to step S<b>6043</b> for each LoD.</p><p id="p-0829" num="0812">The three-dimensional data encoding device then starts a loop on a basis of a three-dimensional point in an LoD (S<b>6033</b>). That is, the three-dimensional data encoding device repeatedly performs the process from step S<b>6034</b> to step S<b>6042</b> for each three-dimensional point.</p><p id="p-0830" num="0813">The three-dimensional data encoding device then starts a loop on a basis of a three-dimensional point in a PU (S<b>6034</b>). That is, the three-dimensional data encoding device repeatedly performs the process from step S<b>6035</b> to step S<b>6041</b> for each three-dimensional point.</p><p id="p-0831" num="0814">The three-dimensional data encoding device generates a predicted value of attribute information according to the restrictions of definition example 1 or definition example 2 of PU described above, and encodes a quantized difference (prediction residual).</p><p id="p-0832" num="0815">Specifically, first, the three-dimensional data encoding device searches for a plurality of peripheral points, which are three-dimensional points present in the periphery of the current three-dimensional point, that are to be used for calculation of a predicted value of the current three-dimensional point to be processed (S<b>6035</b>). The three-dimensional data encoding device then calculates a weighted average of values of the attribute information on the plurality of peripheral points, and sets the obtained value as predicted value P (S<b>6036</b>). The three-dimensional data encoding device then calculates a prediction residual, which is the difference between the attribute information and the predicted value of the current three-dimensional point (S<b>6037</b>). The three-dimensional data encoding device then calculates a quantized value by quantizing the prediction residual (S<b>6038</b>). The three-dimensional data encoding device then arithmetically encodes the quantized value (S<b>6039</b>).</p><p id="p-0833" num="0816">The three-dimensional data encoding device then calculates an inverse-quantized value by inverse-quantizing the quantized value (S<b>6040</b>). The three-dimensional data encoding device then generates a decoded value by adding the predicted value to the inverse-quantized value (S<b>6041</b>). The three-dimensional data encoding device then ends the loop on a basis of a three-dimensional point in the PU (S<b>6042</b>). The three-dimensional data encoding device then ends the loop on a basis of a three-dimensional point in the LoD (S<b>6043</b>). The three-dimensional data encoding device then ends the loop on an LoD basis (S<b>6044</b>).</p><p id="p-0834" num="0817">In the following, a flow of a process performed by the three-dimensional data decoding device will be described. <figref idref="DRAWINGS">FIG. <b>100</b></figref> is a flowchart of a three-dimensional data decoding process performed by the three-dimensional data decoding device. First, the three-dimensional data decoding device decodes the geometry information (geometry) from the bitstream (S<b>6051</b>). For example, the three-dimensional data decoding device performs the decoding using an octree representation.</p><p id="p-0835" num="0818">The three-dimensional data decoding device then decodes the attribute information (Attribute) from the bitstream (S<b>6052</b>). For example, when the three-dimensional data decoding device decodes a plurality of kinds of attribute information, the three-dimensional data decoding device may sequentially decode the plurality of kinds of attribute information. For example, when the three-dimensional data decoding device decodes color and reflectance as attribute information, the three-dimensional data decoding device decodes the result of encoding of color and the result of encoding of reflectance in the order thereof in the bitstream. For example, if the result of encoding of color is followed by the result of encoding of reflectance in the bitstream, the three-dimensional data decoding device first decodes the result of encoding of color and then decodes the result of encoding of reflectance. Note that the three-dimensional data decoding device can decode the result of encoding of attribute information in the bitstream in any order.</p><p id="p-0836" num="0819">The three-dimensional data decoding device may obtain the information indicating the starting point of the encoded data of each piece of attribute information in the bitstream by decoding the header or the like. In this way, the three-dimensional data decoding device can selectively decode attribute information that needs to be decoded, and therefore can omit the decoding process for attribute information that does not need to be decoded. Therefore, the processing amount of the three-dimensional data decoding device can be reduced. The three-dimensional data decoding device may decode a plurality of kinds of attribute information in parallel, and integrate the results of the decoding into one three-dimensional point cloud. In this way, the three-dimensional data decoding device can decode a plurality of kinds of attribute information at a high speed;</p><p id="p-0837" num="0820"><figref idref="DRAWINGS">FIG. <b>101</b></figref> is a flowchart of the attribute information decoding process (S<b>6052</b>). First, the three-dimensional data decoding device sets an LoD (S<b>6061</b>). That is, the three-dimensional data decoding device assigns each of a plurality of three-dimensional points having decoded geometry information to any of a plurality of LoDs. For example, the method of the assignment is the same as the method of assignment used in the three-dimensional data encoding device.</p><p id="p-0838" num="0821">The three-dimensional data decoding device then starts a loop on an LoD basis (S<b>6062</b>). That is, the three-dimensional data decoding device repeatedly performs the process from step S<b>6063</b> to step S<b>6071</b> for each LoD.</p><p id="p-0839" num="0822">The three-dimensional data decoding device then starts a loop on a basis of a three-dimensional point in an LoD (S<b>6063</b>). That is, the three-dimensional data decoding device repeatedly performs the process from step S<b>6064</b> to step S<b>6070</b> for each three-dimensional point.</p><p id="p-0840" num="0823">The three-dimensional data decoding device then starts a loop on a basis of a three-dimensional point in a PU (S<b>6064</b>). That is, the three-dimensional data decoding device repeatedly performs the process from step S<b>6065</b> to step S<b>6069</b>.</p><p id="p-0841" num="0824">The three-dimensional data decoding device generates a predicted value of an attribute value according to the restrictions of definition example 1 or definition example 2 of PU described above, and decodes the attribute information by summing the decoded difference (prediction residual) and the predicted value.</p><p id="p-0842" num="0825">Specifically, first, the three-dimensional data decoding device searches for a plurality of peripheral points, which are three-dimensional points present in the periphery of the current three-dimensional point, that are to be used for calculation of a predicted value of the current three-dimensional point to be processed (S<b>6065</b>). The three-dimensional data decoding device then calculates a weighted average of values of the attribute information on the plurality of peripheral points, and sets the obtained value as predicted value P (S<b>6066</b>). Note that these processings are the same as those in the three-dimensional data encoding device.</p><p id="p-0843" num="0826">The three-dimensional data decoding device then arithmetically decodes the quantized value from the bitstream (S<b>6067</b>). The three-dimensional data decoding device then calculates an inverse-quantized value by inverse-quantizing the decoded quantized value (S<b>6068</b>). The three-dimensional data decoding device then generates a decoded value by adding the predicted value to the inverse-quantized value (S<b>6069</b>). The three-dimensional data decoding device then ends the loop on a basis of a three-dimensional point in the PU (S<b>6070</b>). The three-dimensional data decoding device then ends the loop on a basis of a three-dimensional point in the LoD (S<b>6071</b>). The three-dimensional data decoding device then ends the loop on an LoD basis (S<b>6072</b>).</p><p id="p-0844" num="0827">As stated above, the three-dimensional data encoding device according to the present embodiment performs the process shown in <figref idref="DRAWINGS">FIG. <b>102</b></figref>. The three-dimensional data encoding device: divides three-dimensional points included in point cloud data into processing units (e.g., PUs) each of which includes one or more of the three-dimensional points (S<b>6081</b>); and encodes attribute information of a current three-dimensional point included in a current processing unit, by reference to an encoded processing unit, to generate a bitstream (S<b>6082</b>). It should be noted that a processing unit is not limited to a PU, and may be another unit. For example, a processing unit may be an LoD.</p><p id="p-0845" num="0828">With such a configuration, the three-dimensional data encoding device can control the reference relationship using the processing unit, and thus can reduce the amount of processing.</p><p id="p-0846" num="0829">For example, as shown by <figref idref="DRAWINGS">FIG. <b>91</b></figref>, the three-dimensional data encoding device does not refer to a processed three-dimensional point included in the current processing unit, in the encoding of the attribute information of the current three-dimensional point (the reference is prohibited).</p><p id="p-0847" num="0830">With such a configuration, the three-dimensional data encoding device can process in parallel three-dimensional points included in the same processing unit.</p><p id="p-0848" num="0831">For example, as shown by <figref idref="DRAWINGS">FIG. <b>92</b></figref>, the three-dimensional data encoding device refers to a processed three-dimensional point included in the current processing unit, in the encoding of the attribute information of the current three-dimensional point (the reference is allowed).</p><p id="p-0849" num="0832">With such a configuration, the three-dimensional data encoding device can improve the coding efficiency by allowing reference to another three-dimensional point included in the same processing unit.</p><p id="p-0850" num="0833">For example, the three-dimensional data encoding device: encodes three-dimensional points included in each of the processing units, using a same prediction mode; and appends, to the bitstream, information (e.g., PredMode) indicating a prediction mode used for encoding each of the processing units. To put it another way, the three-dimensional data encoding device sets a prediction mode on a processing unit basis, and encodes three-dimensional points included in each processing unit, using the same prediction mode set on the processing unit basis.</p><p id="p-0851" num="0834">With such a configuration, the processing amount can be reduced by setting a prediction mode on a processing unit basis. In addition, the data amount can be reduced compared with a case where information indicating a prediction mode on a three-dimensional point basis is added to the bitstream.</p><p id="p-0852" num="0835">For example, when a difference between pieces of referable attribute information is less than a predetermined value or a total number of available prediction modes is 1, the three-dimensional data encoding device does not append, to the bitstream, the information (e.g., PredMode) indicating a prediction mode used for encoding the current processing unit. When the difference between the pieces of referable attribute information is greater than the predetermined value and the total number of the available prediction modes is greater than 1, the three-dimensional data encoding device appends, to the bitstream, the information (e.g., PredMode) indicating the prediction mode used for encoding the current processing unit.</p><p id="p-0853" num="0836">With such a configuration, the three-dimensional data encoding device can reduce the data amount of the bitstream.</p><p id="p-0854" num="0837">For example, the bitstream includes information (e.g., PuSize) indicating a total number of three-dimensional points included in each of the processing units.</p><p id="p-0855" num="0838">For example, the three-dimensional data encoding device includes a processor and memory, and the processor performs the above-described process using the memory.</p><p id="p-0856" num="0839">The three-dimensional data decoding device according to the present embodiment performs the process shown by <figref idref="DRAWINGS">FIG. <b>103</b></figref>. The three-dimensional data decoding device: obtains, from a bitstream, encoded data generated by encoding processing units (e.g., PUs) into which three-dimensional points included in point cloud data are divided and each of which includes one or more of the three-dimensional points (S<b>6091</b>); and decodes, from the encoded data, attribute information of a current three-dimensional point included in a current processing unit, by reference to a decoded processing unit (S<b>6092</b>). It should be noted that a processing unit is not limited to a PU, and may be another unit. For example, a processing unit may be an LoD.</p><p id="p-0857" num="0840">With such a configuration, the three-dimensional data decoding device can control the reference relationship using the processing unit, and thus can reduce the amount of processing.</p><p id="p-0858" num="0841">For example, as shown by <figref idref="DRAWINGS">FIG. <b>91</b></figref>, the three-dimensional data decoding device does not refer to a processed three-dimensional point included in the current processing unit, in the decoding of the attribute information of the current three-dimensional point (the reference is prohibited).</p><p id="p-0859" num="0842">With such a configuration, the three-dimensional data decoding device can process in parallel three-dimensional points included in the same processing unit.</p><p id="p-0860" num="0843">For example, as shown by <figref idref="DRAWINGS">FIG. <b>92</b></figref>, the three-dimensional data decoding device refers to a processed three-dimensional point included in the current processing unit, in the decoding of the attribute information of the current three-dimensional point (the reference is allowed).</p><p id="p-0861" num="0844">With such a configuration, the three-dimensional data decoding device can improve the coding efficiency by allowing reference to another three-dimensional point included in the same processing unit.</p><p id="p-0862" num="0845">For example, the bitstream includes information (e.g., PredMode) indicating a prediction mode used for encoding each of the processing units, and three-dimensional points included in each of the processing units are decoded based on the information, using a same prediction mode.</p><p id="p-0863" num="0846">With such a configuration, the processing amount can be reduced by setting a prediction mode on a processing unit basis. In addition, the data amount can be reduced compared with a case where information indicating a prediction mode on a three-dimensional point basis is added to the bitstream.</p><p id="p-0864" num="0847">For example, in the decoding of the attribute information of the current three-dimensional point, when the information (e.g., PredMode) indicating a prediction mode used for encoding the current processing unit is not appended to the bitstream, the three-dimensional data decoding device decodes the attribute information of the current three-dimensional point using a predetermined prediction mode among prediction modes.</p><p id="p-0865" num="0848">With such a configuration, the data amount of the bitstream can be reduced.</p><p id="p-0866" num="0849">For example, the bitstream includes information (e.g., PuSize) indicating a total number of three-dimensional points included in each of the processing units.</p><p id="p-0867" num="0850">For example, the three-dimensional data decoding device includes a processor and memory, and the processor performs the above-described process using the memory.</p><p id="p-0868" num="0851">A three-dimensional data encoding device, a three-dimensional data decoding device, and the like according to the embodiments of the present disclosure have been described above, but the present disclosure is not limited to these embodiments.</p><p id="p-0869" num="0852">Note that each of the processors included in the three-dimensional data encoding device, the three-dimensional data decoding device, and the like according to the above embodiments is typically implemented as a large-scale integrated (LSI) circuit, which is an integrated circuit (IC). These may take the form of individual chips, or may be partially or entirely packaged into a single chip.</p><p id="p-0870" num="0853">Such IC is not limited to an LSI, and thus may be implemented as a dedicated circuit or a general-purpose processor. Alternatively, a field programmable gate array (FPGA) that allows for programming after the manufacture of an LSI, or a reconfigurable processor that allows for reconfiguration of the connection and the setting of circuit cells inside an LSI may be employed.</p><p id="p-0871" num="0854">Moreover, in the above embodiments, the structural components may be implemented as dedicated hardware or may be realized by executing a software program suited to such structural components. Alternatively, the structural components may be implemented by a program executor such as a CPU or a processor reading out and executing the software program recorded in a recording medium such as a hard disk or a semiconductor memory.</p><p id="p-0872" num="0855">The present disclosure may also be implemented as a three-dimensional data encoding method, a three-dimensional data decoding method, or the like executed by the three-dimensional data encoding device, the three-dimensional data decoding device, and the like.</p><p id="p-0873" num="0856">Also, the divisions of the functional blocks shown in the block diagrams are mere examples, and thus a plurality of functional blocks may be implemented as a single functional block, or a single functional block may be divided into a plurality of functional blocks, or one or more functions may be moved to another functional block. Also, the functions of a plurality of functional blocks having similar functions may be processed by single hardware or software in a parallelized or time-divided manner.</p><p id="p-0874" num="0857">Also, the processing order of executing the steps shown in the flowcharts is a mere illustration for specifically describing the present disclosure, and thus may be an order other than the shown order. Also, one or more of the steps may be executed simultaneously (in parallel) with another step.</p><p id="p-0875" num="0858">A three-dimensional data encoding device, a three-dimensional data decoding device, and the like according to one or more aspects have been described above based on the embodiments, but the present disclosure is not limited to these embodiments. The one or more aspects may thus include forms achieved by making various modifications to the above embodiments that can be conceived by those skilled in the art, as well forms achieved by combining structural components in different embodiments, without materially departing from the spirit of the present disclosure.</p><p id="p-0876" num="0859">Although only some exemplary embodiments of the present disclosure have been described in detail above, those skilled in the art will readily appreciate that many modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the present disclosure. Accordingly, all such modifications are intended to be included within the scope of the present disclosure.</p><heading id="h-0018" level="1">INDUSTRIAL APPLICABILITY</heading><p id="p-0877" num="0860">The present disclosure is applicable to a three-dimensional data encoding device and a three-dimensional data decoding device.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001 MATH-US-00001-2" nb-file="US20230007300A1-20230105-M00001.NB"><img id="EMI-M00001" he="24.72mm" wi="76.20mm" file="US20230007300A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002 MATH-US-00002-2" nb-file="US20230007300A1-20230105-M00002.NB"><img id="EMI-M00002" he="21.17mm" wi="76.20mm" file="US20230007300A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230007300A1-20230105-M00003.NB"><img id="EMI-M00003" he="17.61mm" wi="76.20mm" file="US20230007300A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-01-14" num="01-14"><claim-text><b>1</b>-<b>14</b>. (canceled)</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A three-dimensional data encoding method, comprising:<claim-text>encoding attribute information of a current three-dimensional point included in a current processing unit, by prediction process with reference to an encoded processing unit; and</claim-text><claim-text>generating a bitstream including the encoded attribute information, wherein</claim-text><claim-text>a plurality of three-dimensional points divided into processing units are included in one frame of point cloud data, each of the processing units including one or more three-dimensional points included in the plurality of three-dimensional points.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>,<claim-text>wherein in the encoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit is not referred to.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>,<claim-text>wherein in the encoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit is referred to.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>encoding three-dimensional points included in each of the processing units, using a same prediction mode; and</claim-text><claim-text>appending, to the bitstream, information indicating a prediction mode used for encoding each of the processing units.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The three-dimensional data encoding method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>,<claim-text>wherein the bitstream includes information indicating a total number of three-dimensional points included in each of the processing units.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A three-dimensional data decoding method, comprising:<claim-text>obtaining, from a bitstream, encoded data; and</claim-text><claim-text>decoding, from the encoded data, attribute information of a current three-dimensional point included in a current processing unit, by prediction process with reference to a decoded processing unit, wherein</claim-text><claim-text>a plurality of three-dimensional points divided into processing units are included in one frame of point cloud data, each of the processing units including one or more three-dimensional points included in the plurality of three-dimensional points.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>,<claim-text>wherein in the decoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit is not referred to.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>,<claim-text>wherein in the decoding of the attribute information of the current three-dimensional point, a processed three-dimensional point included in the current processing unit is referred to.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>,<claim-text>wherein the bitstream includes information indicating a prediction mode used for encoding each of the processing units, and</claim-text><claim-text>three-dimensional points included in each of the processing units are decoded based on the information, using a same prediction mode.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The three-dimensional data decoding method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>,<claim-text>wherein the bitstream includes information indicating a total number of three-dimensional points included in each of the processing units.</claim-text></claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. A three-dimensional data encoding device, comprising:<claim-text>a processor; and</claim-text><claim-text>memory,</claim-text><claim-text>wherein using the memory, the processor:<claim-text>encodes attribute information of a current three-dimensional point included in each of processing units, by reference to an encoded processing unit of the current three-dimensional point; and</claim-text><claim-text>generates a bitstream including the encoded attribute information, wherein</claim-text></claim-text><claim-text>a plurality of three-dimensional points included in one frame of point cloud data are divided into processing units in which each of the processing units includes one or more three-dimensional points included in the plurality of three-dimensional points.</claim-text></claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. A three-dimensional data decoding device, comprising:<claim-text>a processor; and</claim-text><claim-text>memory,</claim-text><claim-text>wherein using the memory, the processor:<claim-text>obtains, from a bitstream, encoded data generated by encoding processing units into which a plurality of three-dimensional points included in one frame of point cloud data are divided and each of which includes one or more three-dimensional points included in the plurality of three-dimensional points; and</claim-text><claim-text>decodes, from the encoded data, the attribute information of a current three-dimensional point included in a current processing unit, by reference to the decoded processing unit.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>