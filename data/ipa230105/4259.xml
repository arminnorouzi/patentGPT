<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004260A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004260</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17447121</doc-number><date>20210908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0482</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">HYBRID SEARCH SYSTEM FOR CUSTOMIZABLE MEDIA</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217030</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Snap Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Kotsopoulos</last-name><first-name>Bradley</first-name><address><city>Pickering</city><country>CA</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>He</last-name><first-name>Jiayu</first-name><address><city>Toronto</city><country>CA</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The technical problem of reducing the amount of processing involved when searching for customizable media content items that are suitable for incorporating input text is addressed by providing a hybrid search system. In some examples, the hybrid search system executes a rough search first, to determine whether a line of text can be incorporated into a media content item, based on character count conditions associated with the media content item. A more thorough evaluation of the input text with respect to the media content item is executed subsequent to the rough search if the rough search produces a result indicating uncertainty with respect to whether the combination of specific characters included in the input text can or cannot be incorporated into the media content item.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="146.39mm" wi="148.42mm" file="US20230004260A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="226.31mm" wi="148.93mm" file="US20230004260A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="201.08mm" wi="146.30mm" file="US20230004260A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="175.01mm" wi="150.45mm" file="US20230004260A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="218.02mm" wi="141.31mm" file="US20230004260A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="221.32mm" wi="145.46mm" file="US20230004260A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.60mm" wi="143.93mm" file="US20230004260A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="230.63mm" wi="121.41mm" file="US20230004260A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="227.92mm" wi="120.99mm" file="US20230004260A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="230.63mm" wi="121.41mm" file="US20230004260A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="230.80mm" wi="160.10mm" file="US20230004260A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="221.40mm" wi="143.51mm" file="US20230004260A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CLAIM OF PRIORITY</heading><p id="p-0002" num="0001">This application claims the benefit of priority to U.S. Provisional Application Ser. No. 63/217,030, filed Jun. 30, 2021, which is incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates generally to creating and manipulating digital content.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">As the popularity of mobile based social networking systems continues to grow, users increasingly share media content items, such as electronic images, animations, or videos with each other. These media content items are typically uniquely personalized, and thus, reflect a demand to encourage electronic visual communication on a global scale.</p><p id="p-0005" num="0004">Social networking systems comprise millions of users. Each user in a social networking system can transmit media content items between members of his or her individual social networking profile or to individuals outside of the social networking profile.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading><p id="p-0006" num="0005">In the drawings, which are not necessarily drawn to scale, like numerals may describe similar components in different views. To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced. Some nonlimiting examples are illustrated in the figures of the accompanying drawings in which:</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagrammatic representation of a networked environment in which the present disclosure may be deployed, in accordance with some examples.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagrammatic representation of a messaging system, in accordance with some examples, that has both client-side and server-side functionality.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagrammatic representation of a data structure as maintained in a database, in accordance with some examples.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagrammatic representation of a message, in accordance with some examples.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart for an access-limiting process, in accordance with some examples.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a flowchart for a hybrid search process, in accordance with some examples.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagrammatic representation of an item selection user interface in accordance with some examples.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagrammatic representation of a context user interface that includes a personalized media content item, in accordance with some examples.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagrammatic representation of a further context user interface that includes a personalized media content item, in accordance with some examples.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagrammatic representation of a machine in the form of a computer system within which a set of instructions may be executed for causing the machine to perform any one or more of the methodologies discussed herein, in accordance with some examples.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram showing a software architecture within which examples may be implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0018" num="0017">The description that follows includes systems, methods, techniques, instruction sequences, and computing machine program products that embody illustrative embodiments of the disclosure. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident, however, to those skilled in the art, that embodiments of the inventive subject matter may be practiced without these specific details. In general, well-known instruction instances, protocols, structures, and techniques are not necessarily shown in detail.</p><p id="p-0019" num="0018">In social networking systems, such as a messaging system, digital representations of respective users, known as avatars, can be rendered in two-dimensional or three dimensional form and can be integrated into virtual gaming, messaging systems, or interactive software applications. The avatars are designed on the back-end of the messaging system and are stored in an image database. An avatar can be made accessible by the messaging system, for individual user configurations, e.g., for adding features, text, or the like.</p><p id="p-0020" num="0019">In one example, the messaging system provides avatars configured to incorporate textual phrases and to permit a user to personalize an avatar by specifying the text to be incorporated into the presentation of the avatar. Avatars that can be personalized by specifying the text to be incorporated into an avatar are referred to as customizable avatars, for the purposes of this description. An avatar that has been configured to incorporate text provided by a user is referred to as a personalized avatar. A personalized avatar that integrates user-provided input, such as letters, words, phrases, and expressions, can be overlaid on top of media content items (such as photos or videos), can be included in chat messages, can be stored for future use, and so on.</p><p id="p-0021" num="0020">Depending on the text characteristics of a given avatar (such as the size of a text placeholder associated with an avatar, for example), not every avatar may be suitable for the input text provided by a user. For example, if the text characteristics of an avatar indicate that the avatar can incorporate no more than a single line or text that is no longer than 5 characters, the text input spelling &#x201c;FAREWELL!&#x201d; would not be considered a match with respect to that avatar. On the other hand, if an avatar is configured such that it can incorporate three lines of text, up to 5 character each, the text input spelling &#x201c;FARE THEE WELL!&#x201d; and the text characteristics of the avatar would be considered a match, because the text input can be incorporated into the three lines of text in the avatar as &#x201c;FARE&#x201d; and &#x201c;THEE&#x201d; and &#x201c;WELL!&#x201d; The messaging system can be configured to detect text input provided by a user and identify customizable avatars that are suitable for incorporating the text input.</p><p id="p-0022" num="0021">The technical problem of reducing the amount of processing involved when searching for customizable avatars that are suitable for incorporating the text input provided by a user, while maintaining a good recall and precision rate, is addressed by providing a hybrid search system described herein.</p><p id="p-0023" num="0022">In some examples, the hybrid search system executes a rough search first to determine, with respect to each customizable avatar, whether it is fit for incorporating the input text entered by a user, whether it is unfit for incorporating the text entered by a user, or if it is uncertain whether it is fit or unfit for incorporating the text entered by a user. The rough search is based on comparing the character count in the input text to the thresholds stored as associated with individual avatars. A more thorough search is executed subsequent to the rough search, only with respect to those customizable avatars, for which the rough search did not produce a definitive indication of whether the text entered by a user can or cannot be incorporated into the avatar.</p><p id="p-0024" num="0023">In order to implement a hybrid search methodology, the hybrid search system associates each customizable avatar with a set of parameters, referred to as character count conditions (CCCs) for the purposes of this description. The CCCs include a minimum threshold, an uncertain threshold, and a maximum threshold. The minimum threshold indicates the minimum number of characters that can be incorporated into a line of text in the customizable avatar. For example, a customizable avatar may be configured to require that the line of text cannot be empty or that the line should include at least two characters. The uncertain threshold indicates the maximum number of characters that can be presented as a line of text, if the line is completely filled with the largest character (for example, &#x201c;W&#x201d;). The maximum threshold indicates the maximum number of characters that can be included in a line of text, if the line is completely filled with the smallest character (for example, &#x201c;i&#x201d;). If the character count in the text entered by a user is less than or equal to the maximum number of largest characters (the uncertain threshold), it is certain that the text can be incorporated in the associated line in the customizable avatar. If the character count in the text entered by a user is greater than the maximum number of smallest characters (the maximum threshold), it is certain that the text cannot be incorporated in the associated line in the customizable avatar. A customizable avatar is stored as associated with a data structure, which includes the identifier for the avatar, a value indicating the number of lines of text that can be incorporated into the avatar, and respective CCCs associated with each line.</p><p id="p-0025" num="0024">The process performed by the hybrid search system may be described as follows. The system detects user input in the form of text. The detected input text is then used to generate split options that include various combinations of parts of the text input separated into one or more lines. For example, the input text &#x201c;Be My Valentine&#x201d; may be split into the following four split options, as shown in Example 1 below.</p><heading id="h-0006" level="1">Example 1</heading><p id="p-0026" num="0025">Option (1) &#x201c;Be My Valentine&#x201d;</p><p id="p-0027" num="0026">Option (2) &#x201c;Be My&#x201d; and &#x201c;Valentine&#x201d;</p><p id="p-0028" num="0027">Option (3) &#x201c;Be&#x201d; and &#x201c;My Valentine&#x201d;</p><p id="p-0029" num="0028">Option (4) &#x201c;Be&#x201d; and &#x201c;My&#x201d; and &#x201c;Valentine&#x201d;</p><p id="p-0030" num="0029">With respect to each split option, the hybrid search system performs a rough search to identify each customizable avatar as fit, unfit, or uncertain, based on their CCCs. Using the split options shown in Example 1, the rough search may identify, as fit with respect to split option (4), an avatar configured to incorporate three lines of text, the first line CCCs being (1, 2, 4), the second line CCCs being (1, 4, 6), the third line CCCs being (1, 10, 12). Such avatar can be personalized to include &#x201c;Be&#x201d; in the first line, &#x201c;My&#x201d; in the second line, and &#x201c;Valentine&#x201d; in the third line. The rough search may identify, as unfit with respect to the split option (4), an avatar that has less than three lines or where the avatar has three lines, but where the maximum threshold for each line is 7, which is less than the number of characters in the word &#x201c;Valentine.&#x201d; The rough search may identify, as uncertain with respect to the split option (4), an avatar that has three lines, the first line CCCs being (1, 2, 3), the second line CCCs being (1, 4, 5), the third line CCCs being (1, 8, 9). In this case, the uncertain and maximum thresholds for the third line being 8 and 9 respectively, and the third word in the split option (4) having 9 characters, the word may or may not fit in line <b>3</b> of the text placeholder, depending on the specific combination of characters in that word, because some characters may be wider, and some may be narrower than others.</p><p id="p-0031" num="0030">The outcomes of the rough search can be characterized in terms of the respective split options being fit, unfit, or uncertain with respect to a given customizable avatar. If, based on the rough search, at least one of the split options generated for the input text has been identified as fit with respect to a given avatar, the avatar is personalized by incorporating the input text in the form of that split option and presented on a display device as a selection choice for the user. If, based on the rough search, all of the split options generated for the input text has been identified as unfit with respect to a given avatar, the avatar is no longer regarded as a candidate for personalization with the input text. If, based on the rough search, none of the split options generated for the input text have been identified as fit with respect to a given avatar, and at least one of the split options generated for the input text has been identified as uncertain with respect to the given avatar, the hybrid search system may proceed with a thorough search, which involves computationally more expensive text-based logic, to determine whether the split option can be recharacterized as fit for being incorporated into the given avatar. In some examples, the text-based logic may entail evaluating respective glyph characteristics of individual characters in the one or more lines in the uncertain split option. The glyph characteristics include one or more of the font type, size, dimensions, kerning, and shape of each individual character in a line of text.</p><p id="p-0032" num="0031">If, based on the thorough search, the split option has been recharacterized as fit for being incorporated into the given avatar, the avatar is personalized by incorporating the input text in the form of that split option and presented on a display device as a selection choice for the user.</p><p id="p-0033" num="0032">When a user selects one of the personalized avatars presented on a display device, the messaging system detects the selection and, in response, includes the selected personalized avatar into a context user interface, such as, for example, a chat messaging user interface (that permits users to create, send, and receive messages over a network), an image editing user interface (that permits users to edit previously captured images), and so on.</p><p id="p-0034" num="0033">It will be noted that while the methodologies are described herein with respect to customizable avatars, these methodologies can be used beneficially with respect to any media content items that can be associated with character count conditions and configured to incorporate text data provided by a user.</p><p id="p-0035" num="0034">Networked Computing Environment</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system <b>100</b> for exchanging data (e.g., messages and associated content) over a network. The messaging system <b>100</b> includes multiple instances of a client device <b>102</b>, each of which hosts a number of applications, including a messaging client <b>104</b>. Each messaging client <b>104</b> is communicatively coupled to other instances of the messaging client <b>104</b> and a messaging server system <b>108</b> via a network <b>106</b> (e.g., the Internet).</p><p id="p-0037" num="0036">A messaging client <b>104</b> is able to communicate and exchange data with another messaging client <b>104</b> and with the messaging server system <b>108</b> via the network <b>106</b>. The data exchanged between messaging client <b>104</b>, and between a messaging client <b>104</b> and the messaging server system <b>108</b>, includes functions (e.g., commands to invoke functions) as well as payload data (e.g., text, audio, video or other multimedia data).</p><p id="p-0038" num="0037">The messaging server system <b>108</b> provides server-side functionality via the network <b>106</b> to a particular messaging client <b>104</b>. While certain functions of the messaging system <b>100</b> are described herein as being performed by either a messaging client <b>104</b> or by the messaging server system <b>108</b>, the location of certain functionality either within the messaging client <b>104</b> or the messaging server system <b>108</b> may be a design choice. For example, it may be technically preferable to initially deploy certain technology and functionality within the messaging server system <b>108</b> but to later migrate this technology and functionality to the messaging client <b>104</b> where a client device <b>102</b> has sufficient processing capacity.</p><p id="p-0039" num="0038">The messaging server system <b>108</b> supports various services and operations that are provided to the messaging client <b>104</b>. Such operations include transmitting data to, receiving data from, and processing data generated by the messaging client <b>104</b>. This data may include, as examples, message content, client device information, geolocation information, media augmentation and overlays, message content persistence conditions, social network information, live event information, as well as images and video captured with a front facing camera of an associated client device using a viewfinder ring flash. Data exchanges within the messaging system <b>100</b> are invoked and controlled through functions available via user interfaces (UIs) of the messaging client <b>104</b>. For example, the messaging client <b>104</b> can present a camera view UI that displays the output of a digital image sensor of a camera provided with the client device <b>102</b>, a chat messaging UI that permits users to create, send, and receive messages over a network, an image editing user interface that permits users to edit images (such as, for example images previously captured using the camera view UI), and so on.</p><p id="p-0040" num="0039">Turning now specifically to the messaging server system <b>108</b>, an Application Program Interface (API) server <b>110</b> is coupled to, and provides a programmatic interface to, application servers <b>112</b>. The application servers <b>112</b> are communicatively coupled to a database server <b>118</b>, which facilitates access to a database <b>120</b> that stores data associated with messages processed by the application servers <b>112</b>. Similarly, a web server <b>124</b> is coupled to the application servers <b>112</b>, and provides web-based interfaces to the application servers <b>112</b>. To this end, the web server <b>124</b> processes incoming network requests over the Hypertext Transfer Protocol (HTTP) and several other related protocols.</p><p id="p-0041" num="0040">The Application Program Interface (API) server <b>110</b> receives and transmits message data (e.g., commands and message payloads) between the client device <b>102</b> and the application servers <b>112</b>. Specifically, the Application Program Interface (API) server <b>110</b> provides a set of interfaces (e.g., routines and protocols) that can be called or queried by the messaging client <b>104</b> in order to invoke functionality of the application servers <b>112</b>. The Application Program Interface (API) server <b>110</b> exposes various functions supported by the application servers <b>112</b>, including account registration, login functionality, the sending of messages, via the application servers <b>112</b>, from a particular messaging client <b>104</b> to another messaging client <b>104</b>, the sending of media files (e.g., images or video) from a messaging client <b>104</b> to a messaging server <b>114</b>, and for possible access by another messaging client <b>104</b>, the settings of a collection of media data (e.g., story), the retrieval of a list of friends of a user of a client device <b>102</b>, the retrieval of such collections, the retrieval of messages and content, the addition and deletion of entities (e.g., friends) to an entity graph (e.g., a social graph), the location of friends within a social graph, and opening an application event (e.g., relating to the messaging client <b>104</b>).</p><p id="p-0042" num="0041">The application servers <b>112</b> host a number of server applications and subsystems, including for example a messaging server <b>114</b>, an image processing server <b>116</b>, and a social network server <b>122</b>. The messaging server <b>114</b> implements a number of message processing technologies and functions, particularly related to the aggregation and other processing of content (e.g., textual and multimedia content) included in messages received from multiple instances of the messaging client <b>104</b>. As will be described in further detail, the text and media content from multiple sources may be aggregated into collections of content (e.g., called stories or galleries). These collections are then made available to the messaging client <b>104</b>. In some examples, a collection may include an item that has an overlayed personalized media content item, such as, for example, a personalized avatar that includes text corresponding to text input provided by a user. Other processor and memory intensive processing of data may also be performed server-side by the messaging server <b>114</b>, in view of the hardware requirements for such processing.</p><p id="p-0043" num="0042">The application servers <b>112</b> also include an image processing server <b>116</b> that is dedicated to performing various image processing operations, typically with respect to images or video within the payload of a message sent from or received at the messaging server <b>114</b>. Some of the various image processing operations may be performed by various AR components, which can be hosted or supported by the image processing server <b>116</b>. In some examples, an image processing server <b>116</b> is configured to provide the functionality of the hybrid search system described herein, which facilitates reducing the amount of processing involved when searching for customizable media content items that are suitable for incorporating the text input provided by a user, while maintaining a good recall and precision rate.</p><p id="p-0044" num="0043">The social network server <b>122</b> supports various social networking functions and services and makes these functions and services available to the messaging server <b>114</b>. To this end, the social network server <b>122</b> maintains and accesses an entity graph <b>306</b> (as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) within the database <b>120</b>. Examples of functions and services supported by the social network server <b>122</b> include the identification of other users of the messaging system <b>100</b> with which a particular user has a &#x201c;friend&#x201d; relationship or is &#x201c;following,&#x201d; and also the identification of other entities and interests of a particular user.</p><p id="p-0045" num="0044">System Architecture</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating further details regarding the messaging system <b>100</b>, according to some examples. Specifically, the messaging system <b>100</b> is shown to comprise the messaging client <b>104</b> and the application servers <b>112</b>. The messaging system <b>100</b> embodies a number of subsystems, which are supported on the client-side by the messaging client <b>104</b>, and on the sever-side by the application servers <b>112</b>. These subsystems include, for example, an ephemeral timer system <b>202</b>, a collection management system <b>204</b>, an augmentation system <b>206</b>, and a hybrid search system <b>208</b>.</p><p id="p-0047" num="0046">The hybrid search system <b>208</b> is configured to identify customizable media content items that can be personalized by incorporating text input provided by a user, as described herein.</p><p id="p-0048" num="0047">The ephemeral timer system <b>202</b> is responsible for enforcing the temporary or time-limited access to content by the messaging client <b>104</b> and the messaging server <b>114</b>. The ephemeral timer system <b>202</b> incorporates a number of timers that, based on duration and display parameters associated with a message, or collection of messages (e.g., a story), selectively enable access (e.g., for presentation and display) to messages and associated content via the messaging client <b>104</b>. Further details regarding the operation of the ephemeral timer system <b>202</b> are provided below.</p><p id="p-0049" num="0048">The collection management system <b>204</b> is responsible for managing sets or collections of media (e.g., collections of text, image, video, and audio data). A collection of content (e.g., messages, including images, video, text, and audio) may be organized into an &#x201c;event gallery&#x201d; or an &#x201c;event story.&#x201d; Such a collection may be made available for a specified time period, such as the duration of an event to which the content relates. For example, content relating to a music concert may be made available as a &#x201c;story&#x201d; for the duration of that music concert. In a further example, a collection may include content, which was generated using one or more AR components. In some examples, a media content item in a collection includes overlayed augmentation data in the form of a personalized media content item, such as a personalized avatar. The collection management system <b>204</b> may also be responsible for publishing an icon that provides notification of the existence of a particular collection to the user interface of the messaging client <b>104</b>.</p><p id="p-0050" num="0049">The collection management system <b>204</b> furthermore includes a curation interface <b>212</b> that allows a collection manager to manage and curate a particular collection of content. For example, the curation interface <b>212</b> enables an event organizer to curate a collection of content relating to a specific event (e.g., delete inappropriate content or redundant messages). Additionally, the collection management system <b>204</b> employs machine vision (or image recognition technology) and content rules to automatically curate a content collection. In certain examples, compensation may be paid to a user for the inclusion of user-generated content into a collection. In such cases, the collection management system <b>204</b> operates to automatically make payments to such users for the use of their content.</p><p id="p-0051" num="0050">The augmentation system <b>206</b> provides various functions that enable a user to augment (e.g., annotate or otherwise modify or edit) media content, which may be associated with a message. For example, the augmentation system <b>206</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The media overlays may be stored in the database <b>120</b> and accessed through the database server <b>118</b>.</p><p id="p-0052" num="0051">The augmentation system <b>206</b> provides various functions that enable a user to augment (e.g., annotate or otherwise modify or edit) media content associated with a message. For example, the augmentation system <b>206</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The augmentation system <b>206</b> operatively supplies a media overlay or augmentation (e.g., an image filter) to the messaging client <b>104</b> based on a geolocation of the client device <b>102</b>. In another example, the augmentation system <b>206</b> operatively supplies a media overlay to the messaging client <b>104</b> based on other information, such as social network information of the user of the client device <b>102</b>. A media overlay may include audio and visual content and visual effects. Examples of audio and visual content include pictures, texts, logos, animations, and sound effects. An example of a visual effect includes color overlaying.</p><p id="p-0053" num="0052">The audio and visual content or the visual effects can be applied to a media content item (e.g., a photo) at the client device <b>102</b>. For example, a media overlay may include text or image that can be overlaid on top of a photograph taken by the client device <b>102</b> or included in a message sent from the messaging client executing of one client device to the messaging client executing on another client device. A media overlay may be configured to incorporate custom text provided by a user and can be identified as fit or unfit for incorporation of the input text using the methodologies described herein with respect to the hybrid search system.</p><p id="p-0054" num="0053">In another example, the media overlay includes an identification of a location overlay (e.g., Venice beach), a name of a live event, or a name of a merchant overlay (e.g., Beach Coffee House). In another example, the augmentation system <b>206</b> uses the geolocation of the client device <b>102</b> to identify a media overlay that includes the name of a merchant at the geolocation of the client device <b>102</b>. The media overlay may include other indicia associated with the merchant. The media overlays may be stored in the database <b>126</b> and accessed through the database server <b>118</b>.</p><p id="p-0055" num="0054">In some examples, the augmentation system <b>206</b> is configured to provide access to AR components that can be implemented using a programming language suitable for app development, such as, e.g., JavaScript or Java and that are identified in the messaging server system by respective AR component identifiers. An AR component may include or reference various image processing operations corresponding to an image modification, filter, media overlay, transformation, and the like. These image processing operations can provide an interactive experience of a real-world environment, where objects, surfaces, backgrounds, lighting etc., captured by a digital image sensor or a camera, are enhanced by computer-generated perceptual information. In this context an AR component comprises the collection of data, parameters, and other assets needed to apply a selected augmented reality experience to an image or a video feed.</p><p id="p-0056" num="0055">In some embodiments, an AR component includes modules configured to modify or transform image data presented within a graphical user interface (GUI) of a client device in some way. For example, complex additions or transformations to the content images may be performed using AR component data, such as adding rabbit ears to the head of a person in a video clip, adding floating hearts with background coloring to a video clip, altering the proportions of a person's features within a video clip, or many numerous other such transformations. This includes both real-time modifications that modify an image as it is captured using a camera associated with a client device and then displayed on a screen of the client device with the AR component modifications, as well as modifications to stored content, such as video clips in a gallery that may be modified using AR components.</p><p id="p-0057" num="0056">Various augmented reality functionality that may be provided by an AR component include detection of objects (e.g. faces, hands, bodies, cats, dogs, surfaces, objects, etc.), tracking of such objects as they leave, enter, and move around the field of view in video frames, and the modification or transformation of such objects as they are tracked. In various embodiments, different methods for achieving such transformations may be used. For example, some embodiments may involve generating a 3D mesh model of the object or objects, and using transformations and animated textures of the model within the video to achieve the transformation. In other embodiments, tracking of points on an object may be used to place an image or texture, which may be two dimensional or three dimensional, at the tracked position. In still further embodiments, neural network analysis of video frames may be used to place images, models, or textures in content (e.g. images or frames of video). AR component data thus refers to both to the images, models, and textures used to create transformations in content, as well as to additional modeling and analysis information needed to achieve such transformations with object detection, tracking, and placement.</p><p id="p-0058" num="0057">Data Architecture</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram illustrating data structures <b>300</b>, which may be stored in the database <b>120</b> of the messaging server system <b>108</b>, according to certain examples. While the content of the database <b>120</b> is shown to comprise a number of tables, it will be appreciated that the data could be stored in other types of data structures (e.g., as an object-oriented database).</p><p id="p-0060" num="0059">The database <b>120</b> includes message data stored within a message table <b>302</b>. This message data includes, for any particular one message, at least message sender data, message recipient (or receiver) data, and a payload. The payload of a message may include content generated using a viewfinder ring flash. Further details regarding information that may be included in a message, and included within the message data stored in the message table <b>302</b> is described below with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0061" num="0060">An entity table <b>304</b> stores entity data, and is linked (e.g., referentially) to an entity graph <b>306</b> and profile data <b>308</b>. Entities for which records are maintained within the entity table <b>304</b> may include individuals, corporate entities, organizations, objects, places, events, and so forth. Regardless of entity type, any entity regarding which the messaging server system <b>108</b> stores data may be a recognized entity. Each entity is provided with a unique identifier, as well as an entity type identifier (not shown).</p><p id="p-0062" num="0061">The entity graph <b>306</b> stores information regarding relationships and associations between entities. Such relationships may be social, professional (e.g., work at a common corporation or organization) interested-based or activity-based, merely for example. With reference to the functionality provided by the AR component, the entity graph <b>306</b> stores information that can be used, in cases where the AR component is configured to permit using a portrait image of a user other than that of the user controlling the associated client device for modifying the target media content object, to determine a further profile that is connected to the profile representing the user controlling the associated client device. As mentioned above, the portrait image of a user may be stored in a user profile representing the user in the messaging system.</p><p id="p-0063" num="0062">The profile data <b>308</b> stores multiple types of profile data about a particular entity. The profile data <b>308</b> may be selectively used and presented to other users of the messaging system <b>100</b>, based on privacy settings specified by a particular entity. Where the entity is an individual, the profile data <b>308</b> includes, for example, a user name, telephone number, address, settings (e.g., notification and privacy settings), as well as a user-selected avatar representation (or collection of such avatar representations). A particular user may then selectively include one or more of these avatar representations within the content of messages communicated via the messaging system <b>100</b>, and on map interfaces displayed by messaging clients <b>104</b> to other users. The collection of avatar representations may include &#x201c;status avatars,&#x201d; which present a graphical representation of a status or activity that the user may select to communicate at a particular time.</p><p id="p-0064" num="0063">The database <b>120</b> also stores augmentation data in an augmentation table <b>310</b>. The augmentation data is associated with and applied to videos (for which data is stored in a video table <b>314</b>) and images (for which data is stored in an image table <b>316</b>). In some examples, the augmentation data is used by various AR components, including the AR component. An example of augmentation data is augmented reality (AR) tools that can be used in AR components to effectuate image transformations. Image transformations include real-time modifications, which modify an image (e.g., a video frame) as it is captured using a digital image sensor of a client device <b>102</b>. The modified image is displayed on a screen of the client device <b>102</b> with the modifications.</p><p id="p-0065" num="0064">A story table <b>312</b> stores data regarding collections of messages and associated image, video, or audio data, which are compiled into a collection (e.g., a story or a gallery). The creation of a particular collection may be initiated by a particular user (e.g., each user for which a record is maintained in the entity table <b>304</b>). A user may create a &#x201c;personal story&#x201d; in the form of a collection of content that has been created and sent/broadcast by that user. To this end, the user interface of the messaging client <b>104</b> may include an icon that is user-selectable to enable a sending user to add specific content to his or her personal story. In some examples, the story table <b>312</b> stores one or more images or videos that were created using a viewfinder ring flash.</p><p id="p-0066" num="0065">As mentioned above, the video table <b>314</b> stores video data that, in one example, is associated with messages for which records are maintained within the message table <b>302</b>. Similarly, the image table <b>316</b> stores image data, which may be associated with messages for which message data is stored in the entity table <b>304</b>. In some examples, the image table <b>316</b> stores customizable overlays, such as, for example, customizable avatars. The entity table <b>304</b> may associate various augmentations from the augmentation table <b>310</b> with various images and videos stored in the image table <b>316</b> and the video table <b>314</b>.</p><p id="p-0067" num="0066">Data Communications Architecture</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram illustrating a structure of a message <b>400</b>, according to some examples, generated by a messaging client <b>104</b> for communication to a further messaging client <b>104</b> or the messaging server <b>114</b>. The content of a particular message <b>400</b> is used to populate the message table <b>302</b> stored within the database <b>120</b>, accessible by the messaging server <b>114</b>. Similarly, the content of a message <b>400</b> is stored in memory as &#x201c;in-transit&#x201d; or &#x201c;in-flight&#x201d; data of the client device <b>102</b> or the application servers <b>112</b>. The content of a message <b>400</b>, in some examples, includes an image or a video that was created using the AR component. A message <b>400</b> is shown to include the following example components:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0068">message identifier <b>402</b>: a unique identifier that identifies the message <b>400</b>.</li>        <li id="ul0002-0002" num="0069">message text payload <b>404</b>: text, to be generated by a user via a user interface of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0003" num="0070">message image payload <b>406</b>: image data, captured by a camera component of a client device <b>102</b> or retrieved from a memory component of a client device <b>102</b>, and that is included in the message <b>400</b>. Image data for a sent or received message <b>400</b> may be stored in the image table <b>316</b>. In some examples, the image data may include a personalized image, such as, for example, a personalized avatar that includes text corresponding to text input by a user.</li>        <li id="ul0002-0004" num="0071">message video payload <b>408</b>: video data, captured by a camera component or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>. Video data for a sent or received message <b>400</b> may be stored in the video table <b>314</b>. The video data may include content generated using a viewfinder ring flash.</li>        <li id="ul0002-0005" num="0072">message audio payload <b>410</b>: audio data, captured by a microphone or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0006" num="0073">message augmentation data <b>412</b>: augmentation data (e.g., filters, stickers, or other annotations or enhancements) that represents augmentations to be applied to message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b> of the message <b>400</b>. Augmentation data for a sent or received message <b>400</b> may be stored in the augmentation table <b>310</b>.</li>        <li id="ul0002-0007" num="0074">message duration parameter <b>414</b>: parameter value indicating, in seconds, the amount of time for which content of the message (e.g., the message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b>) is to be presented or made accessible to a user via the messaging client <b>104</b>.</li>        <li id="ul0002-0008" num="0075">message geolocation parameter <b>416</b>: geolocation data (e.g., latitudinal and longitudinal coordinates) associated with the content payload of the message. Multiple message geolocation parameter <b>416</b> values may be included in the payload, each of these parameter values being associated with respect to content items included in the content (e.g., a specific image into within the message image payload <b>406</b>, or a specific video in the message video payload <b>408</b>).</li>        <li id="ul0002-0009" num="0076">message story identifier <b>418</b>: identifier values identifying one or more content collections (e.g., &#x201c;stories&#x201d; identified in the story table <b>312</b>) with which a particular content item in the message image payload <b>406</b> of the message <b>400</b> is associated. For example, multiple images within the message image payload <b>406</b> may each be associated with multiple content collections using identifier values.</li>        <li id="ul0002-0010" num="0077">message tag <b>420</b>: each message <b>400</b> may be tagged with multiple tags, each of which is indicative of the subject matter of content included in the message payload. For example, where a particular image included in the message image payload <b>406</b> depicts an animal (e.g., a lion), a tag value may be included within the message tag <b>420</b> that is indicative of the relevant animal. Tag values may be generated manually, based on user input, or may be automatically generated using, for example, image recognition.</li>        <li id="ul0002-0011" num="0078">message sender identifier <b>422</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the Client device <b>102</b> on which the message <b>400</b> was generated and from which the message <b>400</b> was sent.</li>        <li id="ul0002-0012" num="0079">message receiver identifier <b>424</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the client device <b>102</b> to which the message <b>400</b> is addressed.</li>    </ul>    </li></ul></p><p id="p-0069" num="0080">The contents (e.g., values) of the various components of message <b>400</b> may be pointers to locations in tables within which content data values are stored. For example, an image value in the message image payload <b>406</b> may be a pointer to (or address of) a location within an image table <b>316</b>. Similarly, values within the message video payload <b>408</b> may point to data stored within a video table <b>314</b>, values stored within the message augmentations <b>412</b> may point to data stored in an augmentation table <b>310</b>, values stored within the message story identifier <b>418</b> may point to data stored in a story table <b>312</b>, and values stored within the message sender identifier <b>422</b> and the message receiver identifier <b>424</b> may point to user records stored within an entity table <b>304</b>.</p><p id="p-0070" num="0081">Time-Based Access Limitation Architecture</p><p id="p-0071" num="0082"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram illustrating an access-limiting process <b>500</b>, in terms of which access to content (e.g., an ephemeral message <b>502</b>, and associated multimedia payload of data) or a content collection (e.g., an ephemeral message group <b>504</b>) may be time-limited (e.g., made ephemeral). The content of an ephemeral message <b>502</b>, in some examples, includes an image or a video that was created using a viewfinder ring flash.</p><p id="p-0072" num="0083">An ephemeral message <b>502</b> is shown to be associated with a message duration parameter <b>506</b>, the value of which determines an amount of time that the ephemeral message <b>502</b> will be displayed to a receiving user of the ephemeral message <b>502</b> by the messaging client <b>104</b>. In one example, an ephemeral message <b>502</b> is viewable by a receiving user for up to a maximum of 10 seconds, depending on the amount of time that the sending user specifies using the message duration parameter <b>506</b>. In some examples, the ephemeral message <b>502</b> may include a personalized image, such as, for example, a personalized avatar that includes text corresponding to text input by a user.</p><p id="p-0073" num="0084">The message duration parameter <b>506</b> and the message receiver identifier <b>424</b> are shown to be inputs to a message timer <b>512</b>, which is responsible for determining the amount of time that the ephemeral message <b>502</b> is shown to a particular receiving user identified by the message receiver identifier <b>424</b>. In particular, the ephemeral message <b>502</b> will only be shown to the relevant receiving user for a time period determined by the value of the message duration parameter <b>506</b>. The message timer <b>512</b> is shown to provide output to a more generalized ephemeral timer system <b>202</b>, which is responsible for the overall timing of display of content (e.g., an ephemeral message <b>502</b>) to a receiving user.</p><p id="p-0074" num="0085">The ephemeral message <b>502</b> is shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to be included within an ephemeral message group <b>504</b> (e.g., a collection of messages in a personal story, or an event story). The ephemeral message group <b>504</b> has an associated group duration parameter <b>508</b>, a value of which determines a time duration for which the ephemeral message group <b>504</b> is presented and accessible to users of the messaging system <b>100</b>. The group duration parameter <b>508</b>, for example, may be the duration of a music concert, where the ephemeral message group <b>504</b> is a collection of content pertaining to that concert. Alternatively, a user (either the owning user or a curator user) may specify the value for the group duration parameter <b>508</b> when performing the setup and creation of the ephemeral message group <b>504</b>.</p><p id="p-0075" num="0086">Additionally, each ephemeral message <b>502</b> within the ephemeral message group <b>504</b> has an associated group participation parameter <b>510</b>, a value of which determines the duration of time for which the ephemeral message <b>502</b> will be accessible within the context of the ephemeral message group <b>504</b>. Accordingly, a particular ephemeral message group <b>504</b> may &#x201c;expire&#x201d; and become inaccessible within the context of the ephemeral message group <b>504</b>, prior to the ephemeral message group <b>504</b> itself expiring in terms of the group duration parameter <b>508</b>. The group duration parameter <b>508</b>, group participation parameter <b>510</b>, and message receiver identifier <b>424</b> each provide input to a group timer <b>514</b>, which operationally determines, firstly, whether a particular ephemeral message <b>502</b> of the ephemeral message group <b>504</b> will be displayed to a particular receiving user and, if so, for how long. Note that the ephemeral message group <b>504</b> is also aware of the identity of the particular receiving user as a result of the message receiver identifier <b>424</b>.</p><p id="p-0076" num="0087">Accordingly, the group timer <b>514</b> operationally controls the overall lifespan of an associated ephemeral message group <b>504</b>, as well as an individual ephemeral message <b>502</b> included in the ephemeral message group <b>504</b>. In one example, each and every ephemeral message <b>502</b> within the ephemeral message group <b>504</b> remains viewable and accessible for a time period specified by the group duration parameter <b>508</b>. In a further example, a certain ephemeral message <b>502</b> may expire, within the context of ephemeral message group <b>504</b>, based on a group participation parameter <b>510</b>. Note that a message duration parameter <b>506</b> may still determine the duration of time for which a particular ephemeral message <b>502</b> is displayed to a receiving user, even within the context of the ephemeral message group <b>504</b>. Accordingly, the message duration parameter <b>506</b> determines the duration of time that a particular ephemeral message <b>502</b> is displayed to a receiving user, regardless of whether the receiving user is viewing that ephemeral message <b>502</b> inside or outside the context of an ephemeral message group <b>504</b>.</p><p id="p-0077" num="0088">The ephemeral timer system <b>202</b> may furthermore operationally remove a particular ephemeral message <b>502</b> from the ephemeral message group <b>504</b> based on a determination that it has exceeded an associated group participation parameter <b>510</b>. For example, when a sending user has established a group participation parameter <b>510</b> of 24 hours from posting, the ephemeral timer system <b>202</b> will remove the relevant ephemeral message <b>502</b> from the ephemeral message group <b>504</b> after the specified 24 hours. The ephemeral timer system <b>202</b> also operates to remove an ephemeral message group <b>504</b> when either the group participation parameter <b>510</b> for each and every ephemeral message <b>502</b> within the ephemeral message group <b>504</b> has expired, or when the ephemeral message group <b>504</b> itself has expired in terms of the group duration parameter <b>508</b>.</p><p id="p-0078" num="0089">In certain use cases, a creator of a particular ephemeral message group <b>504</b> may specify an indefinite group duration parameter <b>508</b>. In this case, the expiration of the group participation parameter <b>510</b> for the last remaining ephemeral message <b>502</b> within the ephemeral message group <b>504</b> will determine when the ephemeral message group <b>504</b> itself expires. In this case, a new ephemeral message <b>502</b>, added to the ephemeral message group <b>504</b>, with a new group participation parameter <b>510</b>, effectively extends the life of an ephemeral message group <b>504</b> to equal the value of the group participation parameter <b>510</b>.</p><p id="p-0079" num="0090">Responsive to the ephemeral timer system <b>202</b> determining that an ephemeral message group <b>504</b> has expired (e.g., is no longer accessible), the ephemeral timer system <b>202</b> communicates with the messaging system <b>100</b> (and, for example, specifically the messaging client <b>104</b>) to cause an indicium (e.g., an icon) associated with the relevant ephemeral message group <b>504</b> to no longer be displayed within a user interface of the messaging client <b>104</b>. Similarly, when the ephemeral timer system <b>202</b> determines that the message duration parameter <b>506</b> for a particular ephemeral message <b>502</b> has expired, the ephemeral timer system <b>202</b> causes the messaging client <b>104</b> to no longer display an indicium (e.g., an icon or textual identification) associated with the ephemeral message <b>502</b>.</p><p id="p-0080" num="0091">Process Flow and User Interfaces</p><p id="p-0081" num="0092"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a flowchart for a hybrid search process <b>600</b>, in accordance with some examples. While certain operations of the process <b>600</b> may be described as being performed by certain devices, in different examples, different devices or a combination of devices may perform these operations. For example, operations described below may be performed by the client device <b>102</b> or in combination with a server-side computing device (e.g., the message messaging server system <b>108</b>), or a third-party server computing device.</p><p id="p-0082" num="0093">The method commences, at operation <b>610</b>, with accessing text input, which may be provided by a user. The text input is associated with a character count. Operation <b>620</b> comprises identifying, each item from the media content items stored in a database, as fit, unfit or uncertain with respect to the text input. Identifying a media content item as uncertain indicates that the item is suitable to fit the character count of a first size (the smallest size, for example) and not suitable to fit the character count of a second size (a larger size).</p><p id="p-0083" num="0094">As explained above, each customizable media content item is associated with CCCs comprising a first condition, a second condition and a third condition. For a given media content item, the value of the first condition is the minimum threshold, the value of the second condition is the uncertain threshold (that indicates the maximum number of characters that can be presented as a line of text, if the line is completely filled with the largest character), and the value of the third condition is the maximum threshold (that indicates the maximum number of characters that can be included in a line of text, if the line is completely filled with the smallest character).</p><p id="p-0084" num="0095">For example, suppose the text input is &#x201c;HELLO,&#x201d; which has the character count <b>5</b>. Also suppose a customizable media content item is associated with CCCs (1, 4, 7), which indicates that it can incorporate up to 7 small characters or text, such as, for example, &#x201c;iiiiiii,&#x201d; but no more than 4 large characters, such that the text can't be larger than &#x201c;WWWW.&#x201d; While the character count of &#x201c;HELLO&#x201d; is less than 7, it can't be determined with certainty that such input text can be incorporated in the customizable media content item without evaluating glyph characteristics of the individual characters in &#x201c;HELLO.&#x201d;</p><p id="p-0085" num="0096">As explained above, identifying a media content item as fit with respect to input text, by performing a rough search, comprises determining that the character count of the input text is greater than a value associated with the first condition and less than a value associated with the third condition. Identifying a media content items as unfit comprises determining that the character count of the input text is greater than a value associated with the third condition. Identifying a media content items as uncertain comprises determining that the character count of the input text is greater than a value associated with the second condition and less than a value associated with the third condition.</p><p id="p-0086" num="0097">Operation <b>630</b> comprises applying text fit logic to the text input with respect to each media content item identified as uncertain, in order to clarify the uncertainty and identify the respective item as either fit or unfit. Applying the text fit logic comprises evaluating glyph characteristics of individual characters with respect to a customizable media content item.</p><p id="p-0087" num="0098">As explained above, a customizable media content item may be suitable for incorporating one or more lines of text and can be stored as associated with a data structure, which includes the identifier for the avatar, a value indicating the number of lines of text that can be incorporated into the avatar (a line count), and respective CCCs associated with each line a set of line count text rendering conditions. Each member in the set of line count text rendering conditions comprises a first condition, a second condition and a third condition. In some examples, the input text is used to generate split options, where each option comprises the text input being split into one or more lines. A customizable media content item is identified as fit with respect to the text input if it is determined that it can incorporate at least one of the split options. A customizable media content item is identified as unfit with respect to the text input if it is determined that that it can incorporate none of the split options, based on the CCCs associated with the customizable media content item.</p><p id="p-0088" num="0099">A customizable media content item is identified as uncertain with respect to the text input if it is determined, based on the CCCs associated with the customizable media content item, that (1) for none of the split options, the number of characters in each line is less than or equal to the value of the associated second condition from the CCCs (the maximum of the largest characters), and (2) for at least one of the split options the number of characters in each line is less than or equal to the value of the associated third condition (the maximum of the smallest characters). Determining that the number of characters in a line of text is less than or equal to the value of the associated second condition from the CCCs can be referred to as a match with respect to the second condition. Determining that the number of characters in a line of text is less than or equal to the value of the associated third condition from the CCCs can be referred to as a match with respect to the third condition.</p><p id="p-0089" num="0100">A split option identified as uncertain with respect to the input text can be further analyzed by evaluating respective glyph characteristics of individual characters in the uncertain option with respect to the customizable media content item. Based on the result of the evaluating, the customizable media content item can be recharacterized as fit or unfit with respect to the uncertain option.</p><p id="p-0090" num="0101">Returning to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, operation <b>640</b> comprises generating personalized media content items by incorporating the text input into each of the media content items that have been identified as fit. In one example, a personalized media content item includes two image layers. The first image layer may include the text generated based on the input text that is overlaid over a predetermined position in the second image layer, and the second image layer may include an image stored in the associated customizable media content item. In some examples, in generating the personalized media content item, the system manipulates the text (for example, letter spacing, letter size, letter font, and so on). In another example, the system manipulates the characteristics of the customizable media content item (such as avatar orientation and alignment, rotation, media object placement, and so on) in order to integrate the text into the media content item.</p><p id="p-0091" num="0102">Operation <b>650</b> comprises generating an item selection user interface that includes one or more of the personalized media content items. An example of an item selection user interface, included in diagrammatic representation <b>700</b>, is shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates the text input &#x201c;HELLO&#x201d; in area <b>710</b> and presentations <b>720</b> of the personalized media content items, which are avatars in this example.</p><p id="p-0092" num="0103">After the item selection user interface is presented on a display device, and in response to receiving an indication of a selected item from the personalized media content items in the item selection user interface, the selected item is included in a context user interface. An example of a context user interface, included in diagrammatic representation <b>800</b>, is shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>. <figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a chat messaging user interface, in which a personalized avatar incorporating the text input &#x201c;HELLO&#x201d; is included in area <b>810</b>. Another example of a context user interface is shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, as a diagrammatic representation <b>900</b>, in which a personalized avatar incorporating the text input &#x201c;HELLO&#x201d; is included in an image editing user interface in area <b>910</b>. Shown in the area <b>910</b> is an image of clouds (representing a previously captured photo, for example) with the personalized avatar incorporating the text input &#x201c;HELLO&#x201d; overlaid over the image of clouds.</p><p id="p-0093" num="0104">Machine Architecture</p><p id="p-0094" num="0105"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagrammatic representation of the machine <b>1000</b> within which instructions <b>1008</b> (e.g., software, a program, an application, an applet, an app, or other executable code) for causing the machine <b>1000</b> to perform any one or more of the methodologies discussed herein may be executed. For example, the instructions <b>1008</b> may cause the machine <b>1000</b> to execute any one or more of the methods described herein. The instructions <b>1008</b> transform the general, non-programmed machine <b>1000</b> into a particular machine <b>1000</b> programmed to carry out the described and illustrated functions in the manner described. The machine <b>1000</b> may operate as a standalone device or may be coupled (e.g., networked) to other machines. In a networked deployment, the machine <b>1000</b> may operate in the capacity of a server machine or a client machine in a server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine <b>1000</b> may comprise, but not be limited to, a server computer, a client computer, a personal computer (PC), a tablet computer, a laptop computer, a netbook, a set-top box (STB), a personal digital assistant (PDA), an entertainment media system, a cellular telephone, a smartphone, a mobile device, a wearable device (e.g., a smartwatch), a smart home device (e.g., a smart appliance), other smart devices, a web appliance, a network router, a network switch, a network bridge, or any machine capable of executing the instructions <b>1008</b>, sequentially or otherwise, that specify actions to be taken by the machine <b>1000</b>. Further, while only a single machine <b>1000</b> is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include a collection of machines that individually or jointly execute the instructions <b>1008</b> to perform any one or more of the methodologies discussed herein. The machine <b>1000</b>, for example, may comprise the client device <b>102</b> or any one of a number of server devices forming part of the messaging server system <b>108</b>. In some examples, the machine <b>1000</b> may also comprise both client and server systems, with certain operations of a particular method or algorithm being performed on the server-side and with certain operations of the particular method or algorithm being performed on the client-side.</p><p id="p-0095" num="0106">The machine <b>1000</b> may include processors <b>1002</b>, memory <b>1004</b>, and input/output I/O components <b>1038</b>, which may be configured to communicate with each other via a bus <b>1040</b>. In an example, the processors <b>1002</b> (e.g., a Central Processing Unit (CPU), a Reduced Instruction Set Computing (RISC) Processor, a Complex Instruction Set Computing (CISC) Processor, a Graphics Processing Unit (GPU), a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Radio-Frequency Integrated Circuit (RFIC), another processor, or any suitable combination thereof) may include, for example, a processor <b>1006</b> and a processor <b>1010</b> that execute the instructions <b>1008</b>. The term &#x201c;processor&#x201d; is intended to include multi-core processors that may comprise two or more independent processors (sometimes referred to as &#x201c;cores&#x201d;) that may execute instructions contemporaneously. Although <figref idref="DRAWINGS">FIG. <b>10</b></figref> shows multiple processors <b>1002</b>, the machine <b>1000</b> may include a single processor with a single-core, a single processor with multiple cores (e.g., a multi-core processor), multiple processors with a single core, multiple processors with multiples cores, or any combination thereof.</p><p id="p-0096" num="0107">The memory <b>1004</b> includes a main memory <b>1012</b>, a static memory <b>1014</b>, and a storage unit <b>1016</b>, both accessible to the processors <b>1002</b> via the bus <b>1040</b>. The main memory <b>1004</b>, the static memory <b>1014</b>, and storage unit <b>1016</b> store the instructions <b>1008</b> embodying any one or more of the methodologies or functions described herein. The instructions <b>1008</b> may also reside, completely or partially, within the main memory <b>1012</b>, within the static memory <b>1014</b>, within machine-readable medium <b>1018</b> within the storage unit <b>1016</b>, within at least one of the processors <b>1002</b> (e.g., within the Processor's cache memory), or any suitable combination thereof, during execution thereof by the machine <b>1000</b>.</p><p id="p-0097" num="0108">The I/O components <b>1038</b> may include a wide variety of components to receive input, provide output, produce output, transmit information, exchange information, capture measurements, and so on. The specific I/O components <b>1038</b> that are included in a particular machine will depend on the type of machine. For example, portable machines such as mobile phones may include a touch input device or other such input mechanisms, while a headless server machine will likely not include such a touch input device. It will be appreciated that the l/O components <b>1038</b> may include many other components that are not shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. In various examples, the I/O components <b>1038</b> may include user output components <b>1024</b> and user input components <b>1026</b>. The user output components <b>1024</b> may include visual components (e.g., a display such as a plasma display panel (PDP), a light-emitting diode (LED) display, a liquid crystal display (LCD), a projector, or a cathode ray tube (CRT)), acoustic components (e.g., speakers), haptic components (e.g., a vibratory motor, resistance mechanisms), other signal generators, and so forth. The user input components <b>1026</b> may include alphanumeric input components (e.g., a keyboard, a touch screen configured to receive alphanumeric input, a photo-optical keyboard, or other alphanumeric input components), point-based input components (e.g., a mouse, a touchpad, a trackball, a joystick, a motion sensor, or another pointing instrument), tactile input components (e.g., a physical button, a touch screen that provides location and force of touches or touch gestures, or other tactile input components), audio input components (e.g., a microphone), and the like.</p><p id="p-0098" num="0109">In further examples, the I/O components <b>1038</b> may include biometric components <b>1028</b>, motion components <b>1030</b>, environmental components <b>1032</b>, or position components <b>1034</b>, among a wide array of other components. For example, the biometric components <b>1028</b> include components to detect expressions (e.g., hand expressions, facial expressions, vocal expressions, body gestures, or eye-tracking), measure biosignals (e.g., blood pressure, heart rate, body temperature, perspiration, or brain waves), identify a person (e.g., voice identification, retinal identification, facial identification, fingerprint identification, or electroencephalogram-based identification), and the like. The motion components <b>1030</b> include acceleration sensor components (e.g., accelerometer), gravitation sensor components, rotation sensor components (e.g., gyroscope).</p><p id="p-0099" num="0110">The environmental components <b>1032</b> include, for example, one or more cameras (with still image/photograph and video capabilities), illumination sensor components (e.g., photometer), temperature sensor components (e.g., one or more thermometers that detect ambient temperature), humidity sensor components, pressure sensor components (e.g., barometer), acoustic sensor components (e.g., one or more microphones that detect background noise), proximity sensor components (e.g., infrared sensors that detect nearby objects), gas sensors (e.g., gas detection sensors to detection concentrations of hazardous gases for safety or to measure pollutants in the atmosphere), or other components that may provide indications, measurements, or signals corresponding to a surrounding physical environment.</p><p id="p-0100" num="0111">With respect to cameras, the client device <b>102</b> may have a camera system comprising, for example, front facing cameras on a front surface of the client device <b>102</b> and rear cameras on a rear surface of the client device <b>102</b>. The front facing cameras may, for example, be used to capture still images and video of a user of the client device <b>102</b> (e.g., &#x201c;selfies&#x201d;), which may then be augmented with augmentation data (e.g., filters) described above. In the examples where the front facing camera is used with a viewfinder ring flash described herein, the user has the ability to use augmented reality face filters in low light conditions, even in complete darkness, as the viewfinder ring flash illuminates the user's face without obscuring the output of the digital image sensor. The rear cameras may, for example, be used to capture still images and videos in a more traditional camera mode, with these images similarly being augmented with augmentation data. In addition to front and rear cameras, the client device <b>102</b> may also include a 360&#xb0; camera for capturing 3600 photographs and videos.</p><p id="p-0101" num="0112">Further, the camera system of a client device <b>102</b> may include dual rear cameras (e.g., a primary camera as well as a depth-sensing camera), or even triple, quad or penta rear camera configurations on the front and rear sides of the client device <b>102</b>. These multiple cameras systems may include a wide camera, an ultra-wide camera, a telephoto camera, a macro camera and a depth sensor, for example.</p><p id="p-0102" num="0113">The position components <b>1034</b> include location sensor components (e.g., a GPS receiver component), altitude sensor components (e.g., altimeters or barometers that detect air pressure from which altitude may be derived), orientation sensor components (e.g., magnetometers), and the like.</p><p id="p-0103" num="0114">Communication may be implemented using a wide variety of technologies. The I/O components <b>1038</b> further include communication components <b>1036</b> operable to couple the machine <b>1000</b> to a network <b>1020</b> or devices <b>1022</b> via respective coupling or connections. For example, the communication components <b>1036</b> may include a network interface Component or another suitable device to interface with the network <b>1020</b>. In further examples, the communication components <b>1036</b> may include wired communication components, wireless communication components, cellular communication components, Near Field Communication (NFC) components, Bluetooth&#xae; components (e.g., Bluetooth&#xae; Low Energy), Wi-Fi&#xae; components, and other communication components to provide communication via other modalities. The devices <b>1022</b> may be another machine or any of a wide variety of peripheral devices (e.g., a peripheral device coupled via a USB).</p><p id="p-0104" num="0115">Moreover, the communication components <b>636</b> may detect identifiers or include components operable to detect identifiers. For example, the communication components <b>636</b> may include Radio Frequency Identification (RFID) tag reader components, NFC smart tag detection components, optical reader components (e.g., an optical sensor to detect one-dimensional bar codes such as Universal Product Code (UPC) bar code, multi-dimensional bar codes such as Quick Response (QR) code, Aztec code, Data Matrix, Dataglyph, MaxiCode, PDF410, Ultra Code, UCC RSS-2D bar code, and other optical codes), or acoustic detection components (e.g., microphones to identify tagged audio signals). In addition, a variety of information may be derived via the communication components <b>1036</b>, such as location via Internet Protocol (IP) geolocation, location via Wi-Fi&#xae; signal triangulation, location via detecting an NFC beacon signal that may indicate a particular location, and so forth.</p><p id="p-0105" num="0116">The various memories (e.g., main memory <b>1012</b>, static memory <b>1014</b>, and memory of the processors <b>1002</b>) and storage unit <b>1016</b> may store one or more sets of instructions and data structures (e.g., software) embodying or used by any one or more of the methodologies or functions described herein. These instructions (e.g., the instructions <b>1008</b>), when executed by processors <b>1002</b>, cause various operations to implement the disclosed examples.</p><p id="p-0106" num="0117">The instructions <b>1008</b> may be transmitted or received over the network <b>1020</b>, using a transmission medium, via a network interface device (e.g., a network interface component included in the communication components <b>1036</b>) and using any one of several well-known transfer protocols (e.g., hypertext transfer protocol (HTTP)). Similarly, the instructions <b>1008</b> may be transmitted or received using a transmission medium via a coupling (e.g., a peer-to-peer coupling) to the devices <b>1022</b>.</p><p id="p-0107" num="0118">Software Architecture</p><p id="p-0108" num="0119"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram <b>1100</b> illustrating a software architecture <b>1104</b>, which can be installed on any one or more of the devices described herein. The software architecture <b>1104</b> is supported by hardware such as a machine <b>1102</b> that includes processors <b>1120</b>, memory <b>1126</b>, and I/O components <b>1138</b>. In this example, the software architecture <b>1104</b> can be conceptualized as a stack of layers, where each layer provides a particular functionality. The software architecture <b>1104</b> includes layers such as an operating system <b>1112</b>, libraries <b>1110</b>, frameworks <b>1108</b>, and applications <b>1106</b>. Operationally, the applications <b>1106</b> invoke API calls <b>11110</b> through the software stack and receive messages <b>11112</b> in response to the API calls <b>11110</b>.</p><p id="p-0109" num="0120">The operating system <b>1112</b> manages hardware resources and provides common services. The operating system <b>1112</b> includes, for example, a kernel <b>1114</b>, services <b>1116</b>, and drivers <b>1122</b>. The kernel <b>1114</b> acts as an abstraction layer between the hardware and the other software layers. For example, the kernel <b>1114</b> provides memory management, processor management (e.g., scheduling), component management, networking, and security settings, among other functionality. The services <b>1116</b> can provide other common services for the other software layers. The drivers <b>1122</b> are responsible for controlling or interfacing with the underlying hardware. For instance, the drivers <b>1122</b> can include display drivers, camera drivers, BLUETOOTH&#xae; or BLUETOOTH&#xae; Low Energy drivers, flash memory drivers, serial communication drivers (e.g., USB drivers), WI-FI&#xae; drivers, audio drivers, power management drivers, and so forth.</p><p id="p-0110" num="0121">The libraries <b>1110</b> provide a common low-level infrastructure used by the applications <b>1106</b>. The libraries <b>1110</b> can include system libraries <b>1118</b> (e.g., C standard library) that provide functions such as memory allocation functions, string manipulation functions, mathematic functions, and the like. In addition, the libraries <b>1110</b> can include API libraries <b>1124</b> such as media libraries (e.g., libraries to support presentation and manipulation of various media formats such as Moving Picture Experts Group-4 (MPEG4), Advanced Video Coding (H.264 or AVC), Moving Picture Experts Group Layer-3 (MP3), Advanced Audio Coding (AAC), Adaptive Multi-Rate (AMR) audio codec, Joint Photographic Experts Group (JPEG or JPG), or Portable Network Graphics (PNG)), graphics libraries (e.g., an OpenGL framework used to render in two dimensions (2D) and three dimensions (3D) in a graphic content on a display), database libraries (e.g., SQLite to provide various relational database functions), web libraries (e.g., WebKit to provide web browsing functionality), and the like. The libraries <b>1110</b> can also include a wide variety of other libraries <b>1128</b> to provide many other APIs to the applications <b>1106</b>.</p><p id="p-0111" num="0122">The frameworks <b>1108</b> provide a common high-level infrastructure that is used by the applications <b>1106</b>. For example, the frameworks <b>1108</b> provide various graphical user interface (GUI) functions, high-level resource management, and high-level location services. The frameworks <b>1108</b> can provide a broad spectrum of other APIs that can be used by the applications <b>1106</b>, some of which may be specific to a particular operating system or platform.</p><p id="p-0112" num="0123">In an example, the applications <b>1106</b> may include a home application <b>1136</b>, a contacts application <b>1130</b>, a browser application <b>1132</b>, a book reader application <b>1134</b>, a location application <b>1142</b>, a media application <b>1144</b>, a messaging application <b>1146</b>, a game application <b>1148</b>, and a broad assortment of other applications such as a third-party application <b>1140</b>. The applications <b>1106</b> are programs that execute functions defined in the programs. Various programming languages can be employed to create one or more of the applications <b>1106</b>, structured in a variety of manners, such as object-oriented programming languages (e.g., Objective-C, Java, or C++) or procedural programming languages (e.g., C or assembly language). In a specific example, the third-party application <b>1140</b> (e.g., an application developed using the ANDROID&#x2122; or IOS&#x2122; software development kit (SDK) by an entity other than the vendor of the particular platform) may be mobile software running on a mobile operating system such as IOS&#x2122;, ANDROID&#x2122;, WINDOWS&#xae; Phone, or another mobile operating system. In this example, the third-party application <b>1140</b> can invoke the API calls <b>11110</b> provided by the operating system <b>1112</b> to facilitate functionality described herein.</p><heading id="h-0007" level="1">Glossary</heading><p id="p-0113" num="0124">&#x201c;Carrier signal&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible media to facilitate communication of such instructions. Instructions may be transmitted or received over a network using a transmission medium via a network interface device.</p><p id="p-0114" num="0125">&#x201c;Client device&#x201d; refers to any machine that interfaces to a communications network to obtain resources from one or more server systems or other client devices. A client device may be, but is not limited to, a mobile phone, desktop computer, laptop, portable digital assistants (PDAs), smartphones, tablets, ultrabooks, netbooks, laptops, multi-processor systems, microprocessor-based or programmable consumer electronics, game consoles, set-top boxes, or any other communication device that a user may use to access a network.</p><p id="p-0115" num="0126">&#x201c;Communication network&#x201d; refers to one or more portions of a network that may be an ad hoc network, an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a wireless WAN (WWAN), a metropolitan area network (MAN), the Internet, a portion of the Internet, a portion of the Public Switched Telephone Network (PSTN), a plain old telephone service (POTS) network, a cellular telephone network, a wireless network, a Wi-Fi&#xae; network, another type of network, or a combination of two or more such networks. For example, a network or a portion of a network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access (CDMA) connection, a Global System for Mobile communications (GSM) connection, or other types of cellular or wireless coupling. In this example, the coupling may implement any of a variety of types of data transfer technology, such as Single Carrier Radio Transmission Technology (1&#xd7;RTT), Evolution-Data Optimized (EVDO) technology, General Packet Radio Service (GPRS) technology, Enhanced Data rates for GSM Evolution (EDGE) technology, third Generation Partnership Project (3GPP) including 3G, fourth generation wireless (4G) networks, Universal Mobile Telecommunications System (UMTS), High Speed Packet Access (HSPA), Worldwide Interoperability for Microwave Access (WiMAX), Long Term Evolution (LTE) standard, others defined by various standard-setting organizations, other long-range protocols, or other data transfer technology.</p><p id="p-0116" num="0127">&#x201c;Component&#x201d; refers to a device, physical entity, or logic having boundaries defined by function or subroutine calls, branch points, APIs, or other technologies that provide for the partitioning or modularization of particular processing or control functions. Components may be combined via their interfaces with other components to carry out a machine process. A component may be a packaged functional hardware unit designed for use with other components and a part of a program that usually performs a particular function of related functions. Components may constitute either software components (e.g., code embodied on a machine-readable medium) or hardware components. A &#x201c;hardware component&#x201d; is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments, one or more computer systems (e.g., a standalone computer system, a client computer system, or a server computer system) or one or more hardware components of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware component that operates to perform certain operations as described herein. A hardware component may also be implemented mechanically, electronically, or any suitable combination thereof. For example, a hardware component may include dedicated circuitry or logic that is permanently configured to perform certain operations. A hardware component may be a special-purpose processor, such as a field-programmable gate array (FPGA) or an application specific integrated circuit (ASIC). A hardware component may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example, a hardware component may include software executed by a general-purpose processor or other programmable processor. Once configured by such software, hardware components become specific machines (or specific components of a machine) uniquely tailored to perform the configured functions and are no longer general-purpose processors. It will be appreciated that the decision to implement a hardware component mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software), may be driven by cost and time considerations. Accordingly, the phrase &#x201c;hardware component&#x201d; (or &#x201c;hardware-implemented component&#x201d;) should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering embodiments in which hardware components are temporarily configured (e.g., programmed), each of the hardware components need not be configured or instantiated at any one instance in time. For example, where a hardware component comprises a general-purpose processor configured by software to become a special-purpose processor, the general-purpose processor may be configured as respectively different special-purpose processors (e.g., comprising different hardware components) at different times. Software accordingly configures a particular processor or processors, for example, to constitute a particular hardware component at one instance of time and to constitute a different hardware component at a different instance of time. Hardware components can provide information to, and receive information from, other hardware components. Accordingly, the described hardware components may be regarded as being communicatively coupled. Where multiple hardware components exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) between or among two or more of the hardware components. In embodiments in which multiple hardware components are configured or instantiated at different times, communications between such hardware components may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware components have access. For example, one hardware component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware component may then, at a later time, access the memory device to retrieve and process the stored output. Hardware components may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information). The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented components that operate to perform one or more operations or functions described herein. As used herein, &#x201c;processor-implemented component&#x201d; refers to a hardware component implemented using one or more processors. Similarly, the methods described herein may be at least partially processor-implemented, with a particular processor or processors being an example of hardware. For example, at least some of the operations of a method may be performed by one or more processors or processor-implemented components. Moreover, the one or more processors may also operate to support performance of the relevant operations in a &#x201c;cloud computing&#x201d; environment or as a &#x201c;software as a service&#x201d; (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), with these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., an API). The performance of certain of the operations may be distributed among the processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processors or processor-implemented components may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other example embodiments, the processors or processor-implemented components may be distributed across a number of geographic locations.</p><p id="p-0117" num="0128">&#x201c;Computer-readable storage medium&#x201d; refers to both machine-storage media and transmission media. Thus, the terms include both storage devices/media and carrier waves/modulated data signals. The terms &#x201c;machine-readable medium,&#x201d; &#x201c;computer-readable medium&#x201d; and &#x201c;device-readable medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><p id="p-0118" num="0129">&#x201c;Machine storage medium&#x201d; refers to a single or multiple storage devices and media (e.g., a centralized or distributed database, and associated caches and servers) that store executable instructions, routines and data. The term shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media, including memory internal or external to processors. Specific examples of machine-storage media, computer-storage media and device-storage media include non-volatile memory, including by way of example semiconductor memory devices, e.g., erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), FPGA, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks The terms &#x201c;machine-storage medium,&#x201d; &#x201c;device-storage medium,&#x201d; &#x201c;computer-storage medium&#x201d; mean the same thing and may be used interchangeably in this disclosure. The terms &#x201c;machine-storage media,&#x201d; &#x201c;computer-storage media,&#x201d; and &#x201c;device-storage media&#x201d; specifically exclude carrier waves, modulated data signals, and other such media, at least some of which are covered under the term &#x201c;signal medium.&#x201d;</p><p id="p-0119" num="0130">&#x201c;Non-transitory computer-readable storage medium&#x201d; refers to a tangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine.</p><p id="p-0120" num="0131">&#x201c;Signal medium&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine and includes digital or analog communications signals or other intangible media to facilitate communication of software or data. The term &#x201c;signal medium&#x201d; shall be taken to include any form of a modulated data signal, carrier wave, and so forth. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a matter as to encode information in the signal. The terms &#x201c;transmission medium&#x201d; and &#x201c;signal medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>storing media content items in a database;</claim-text><claim-text>accessing text input associated with a character count;</claim-text><claim-text>identifying each item from the media content items as fit, unfit or uncertain with respect to the text input, an item identified as uncertain indicating that the item is suitable to fit the character count of characters of a first size and not suitable to fit the character count of characters of a second size;</claim-text><claim-text>applying text fit logic to the text input with respect to each item identified as uncertain, to identify the item as either fit or unfit;</claim-text><claim-text>generating personalized media content items by incorporating the text input into each of the media content items identified as fit; and</claim-text><claim-text>generating an item selection user interface, the item selection user interface including one or more items from the personalized media content items.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>each item from the media content items is associated with a first condition, a second condition and a third condition; and</claim-text><claim-text>the identifying of an item from the media content items as fit comprises determining that the character count is greater than or equal to a value associated with the first condition and less than or equal to a value associated with the second condition.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the identifying of an item from the media content items as unfit comprises determining that the character count is greater than a value associated with the third condition.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the identifying of an item from the media content items as uncertain comprises determining that the character count is greater than a value associated with the second condition and less than a value associated with the third condition.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the applying of the text fit logic comprises evaluating respective glyph characteristics of individual characters in the text input.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each item from the media content items is suitable for incorporating one or more lines of text and is associated with a line count and a set of line count text rendering conditions, each member in the set of line count text rendering conditions comprising a first condition, a second condition and a third condition, the method comprising:<claim-text>generating a plurality of split options based on the text input, each option from the plurality of split options comprising the text input split into one or more lines; and</claim-text><claim-text>identifying a first item from the media content items as fit in response to determining that, at least one from the plurality of split options is suitable for incorporation into the first item based on the set of line count text rendering conditions associated with the first item.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, comprising identifying a second item from the media content items as unfit in response to determining that, none from the plurality of split options are suitable for incorporation into the first item based on the set of line count text rendering conditions associated with the second item.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, comprising, with respect to a third item from the media content items:<claim-text>determining that for none from the plurality of split options is a match with respect to the second condition from the set of line count text rendering conditions associated with the third item;</claim-text><claim-text>determining that an uncertain option from the plurality of split options is a match with respect to the third condition;</claim-text><claim-text>evaluating respective glyph characteristics of individual characters in the uncertain option; and</claim-text><claim-text>identifying the third item as fit with respect to the uncertain option, in response to a result of the evaluating.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising:<claim-text>causing presentation of the item selection user interface on a display device;</claim-text><claim-text>receiving an indication of a selected item from the personalized media content items in the item selection user interface; and</claim-text><claim-text>including the selected item in a context user interface.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the context user interface is a chat messaging user interface or an image editing user interface.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system comprising:<claim-text>one or more processors; and</claim-text><claim-text>a non-transitory computer readable storage medium comprising instructions that when executed by the one or more processors cause the one or more processors to perform operations comprising:</claim-text><claim-text>storing media content items in a database;</claim-text><claim-text>accessing text input associated with a character count;</claim-text><claim-text>identifying each item from the media content items as fit, unfit or uncertain with respect to the text input, an item identified as uncertain indicating that the item is suitable to fit the character count of characters of a first size and not suitable to fit the character count of characters of a second size;</claim-text><claim-text>applying text fit logic to the text input with respect to each item identified as uncertain, to identify the item as either fit or unfit;</claim-text><claim-text>generating personalized media content items by incorporating the text input into each of the media content items identified as fit; and</claim-text><claim-text>generating an item selection user interface, the item selection user interface including one or more items from the personalized media content items.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>each item from the media content items is associated with a first condition, a second condition and a third condition; and</claim-text><claim-text>the identifying of an item from the media content items as fit comprises determining that the character count is greater than or equal to a value associated with the first condition and less than or equal to a value associated with the second condition.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the identifying of an item from the media content items as unfit comprises determining that the character count is greater than a value associated with the third condition.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the identifying of an item from the media content items as uncertain comprises determining that the character count is greater than a value associated with the second condition and less than a value associated with the third condition.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the applying of the text fit logic comprises evaluating respective glyph characteristics of individual characters in the text input.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein each item from the media content items is suitable for incorporating one or more lines of text and is associated with a line count and a set of line count text rendering conditions, each member in the set of line count text rendering conditions comprising a first condition, a second condition and a third condition, the operations comprising:<claim-text>generating a plurality of split options based on the text input, each option from the plurality of split options comprising the text input split into one or more lines; and</claim-text><claim-text>identifying a first item from the media content items as fit in response to determining that, at least one from the plurality of split options is suitable for incorporation into the first item based on the set of line count text rendering conditions associated with the first item.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, the operations comprising identifying a second item from the media content items as unfit in response to determining that, none from the plurality of split options are suitable for incorporation into the first item based on the set of line count text rendering conditions associated with the second item.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, the operations comprising, with respect to a third item from the media content items:<claim-text>determining that for none from the plurality of split options is a match with respect to the second condition from the set of line count text rendering conditions associated with the third item;</claim-text><claim-text>determining that an uncertain option from the plurality of split options is a match with respect to the third condition;</claim-text><claim-text>evaluating respective glyph characteristics of individual characters in the uncertain option; and</claim-text><claim-text>identifying the third item as fit with respect to the uncertain option, in response to a result of the evaluating.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, the operations comprising:<claim-text>causing presentation of the item selection user interface on a display device;</claim-text><claim-text>receiving an indication of a selected item from the personalized media content items in the item selection user interface; and</claim-text><claim-text>including the selected item in a context user interface.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A machine-readable non-transitory storage medium having instruction data executable by a machine to cause the machine to perform operations comprising:<claim-text>storing media content items in a database;</claim-text><claim-text>accessing text input associated with a character count;</claim-text><claim-text>identifying each item from the media content items as fit, unfit or uncertain with respect to the text input, an item identified as uncertain indicating that the item is suitable to fit the character count of characters of a first size and not suitable to fit the character count of characters of a second size;</claim-text><claim-text>applying text fit logic to the text input with respect to each item identified as uncertain, to identify the item as either fit or unfit;</claim-text><claim-text>generating personalized media content items by incorporating the text input into each of the media content items identified as fit; and</claim-text><claim-text>generating an item selection user interface, the item selection user interface including one or more items from the personalized media content items.</claim-text></claim-text></claim></claims></us-patent-application>