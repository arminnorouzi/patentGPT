<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005195A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005195</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363356</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>11</main-group><subgroup>20</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>7</main-group><subgroup>13</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0484</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>11</main-group><subgroup>203</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20170101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>7</main-group><subgroup>13</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>K</subclass><main-group>9</main-group><subgroup>325</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04845</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Free Form Radius Editing</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Adobe Inc.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Jain</last-name><first-name>Arushi</first-name><address><city>Ashok Vihar</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Dhanuka</last-name><first-name>Praveen Kumar</first-name><address><city>Howrah</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Jain</last-name><first-name>Gaurav</first-name><address><city>Noida</city><country>IN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Adobe Inc.</orgname><role>02</role><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In implementations for free form radius editing, a computing device implements a radius editing system, such as may be integrated with an image editing application. The radius editing system can determine the edge segments for outlines of image objects depicted in a digital image, where the edge segments include corner segments of the image objects. The radius editing system can also determine the radius values of the corner segments of the image objects, and the radius values of the corner segments are maintained in a cache as part of object data corresponding to the image objects depicted in the digital image. The radius editing system can also identify one or more similar corner segments of the image objects that have an equivalent radius value as a selected corner segment responsive to an editing input of a radius of the selected corner segment of an image object.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="234.95mm" wi="155.11mm" file="US20230005195A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="255.78mm" wi="160.10mm" file="US20230005195A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="255.78mm" wi="169.59mm" file="US20230005195A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="249.85mm" wi="168.32mm" file="US20230005195A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="241.64mm" wi="150.37mm" file="US20230005195A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="249.43mm" wi="146.90mm" file="US20230005195A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="249.43mm" wi="153.50mm" file="US20230005195A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="256.03mm" wi="148.08mm" file="US20230005195A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="249.43mm" wi="134.03mm" file="US20230005195A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="249.85mm" wi="140.97mm" file="US20230005195A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Generally, graphic designers or other similar computer users utilize computer-based image editing and graphics design software applications to develop many different types of digital artworks, such as images that are designed for posters, magazine pages, flyers, book pages, advertisements, and any other type of design documents. Text and other image objects are often incorporated in digital artwork images. For example, text may be added to a digital image to enhance the image and/or to add more context to the visual content of the image. Editing the appearance of text and other image objects depicted in digital images is a very common aspect of developing digital artwork, and more specifically, changing the corner radius of rounded corners of image objects, such as to modify the appearance of text or other shapes displayed in a digital image.</p><p id="p-0003" num="0002">Typically, image editing applications provide that a user can change the corner radius of a corner of an image object depicted in a digital image by dragging an object handle associated with the corner of the image object. Alternatively, and more precisely, a user can utilize the shape options editing for a particular image object by manually setting the drawing constraints for the corner radius of the rounded corners of an image object. However, a graphic designer can incur significant development time and effort to set the rounding radius of multiple rounded corners for the image objects depicted in a digital image, particularly when trying to maintain an overall symmetry of the many edges and corners for multiple image objects in digital artwork.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0004" num="0003">This Summary introduces features and concepts of free form radius editing, which is further described below in the Detailed Description and shown in the Figures. This Summary should not be considered to describe essential features of the claimed subject matter, nor used to determine or limit the scope of the claimed subject matter.</p><p id="p-0005" num="0004">Aspects of free form radius editing are described. A computing device implements a radius editing system, which can include various components, such as models, algorithms, and/or modules, configured together to facilitate globally changing the radius of multiple rounded corners of image objects without having to first select and group each corner segment of the image objects that will be subject to the change. Rather than a user of an image editing application having to manually select, analyze, and update the radius value of each individual corner to be changed, the user can simply select one of the corner segments to change the radius, and the similar radius corners of the other image objects can also change and update based on the user resizing the one selected corner segment.</p><p id="p-0006" num="0005">In aspects of free form radius editing, the radius editing system implemented by a computing device can be integrated with an image editing application. Generally, a user interface of the image editing application displays a digital image, which may include text objects and/or shape objects depicted as image objects in the digital image. The user interface of the image editing application can also receive an editing input, such as when initiated by a user of the computing device, to edit the radius of a selected corner segment of an image object.</p><p id="p-0007" num="0006">The radius editing system includes an edge detection module to determine the edge segments for the outlines of the image objects depicted in the digital image. Generally, the edge segments of the outlines of the image objects also include corner segments of the image objects. A corner detection module of the radius editing system can then determine the radius values of the corner segments of the image objects. The determined radius values of the corner segments of the image objects are stored in a cache as part of object data maintained by the system. Additionally, the corner detection module can approximate one or more of the corner segments based on path segments of an image object. In implementations, the approximation of a corner segment includes calculating a piecewise curvature from sample points on the path segments of an image object to define a curvature function of the corner segment.</p><p id="p-0008" num="0007">The radius editing system also includes a radius modification module that utilizes the stored cache of image objects data, which includes the determined radius values, to identify one or more similar corner segments of the image objects having an equivalent radius value as a selected corner segment. For example, a user may initiate an editing input to a selected corner of an image object depicted in a digital image, and responsive to the editing input, the radius modification module identifies one or more similar corner segments of the image objects having an equivalent radius value as the selected corner segment.</p><p id="p-0009" num="0008">In implementations, the radius editing system can initiate to display an enhanced visual indication, such as highlighting, the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input. Alternatively or in addition, the radius editing system can also initiate to jointly edit the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input. Alternatively or in addition, the radius editing system can initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input.</p><p id="p-0010" num="0009">In further aspects of free form radius editing, the image objects depicted in a digital image are text objects of text letters. The edge detection module of the radius editing system can determine the edge segments for the outlines of the text letters, and the corner detection module determines the radius values of the corner segments of the text letters. The radius modification module of the radius editing system can then identify the one or more similar corner segments of the text letters that have an equivalent radius value as a selected corner segment responsive to an editing input of the radius of the selected corner segment. The radius modification module can identify the one or more similar corner segments of the text letters for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment. Alternatively or in addition, the radius modification module can identify the one or more similar corner segments of the text letters with an enhanced visual indication that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010">Implementations of free form radius editing are described with reference to the following Figures. The same numbers may be used throughout to reference similar features and components that are shown in the Figures:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example of a radius editing system and computing device that can implement aspects of the techniques for free form radius editing.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> further illustrates examples of features of the radius editing system implemented for free form radius editing of a text object, as described herein.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> further illustrates examples of features of the radius editing system implemented for free form radius editing of a text object, as described herein.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> further illustrates examples of features of the radius editing system implemented for free form radius editing of text objects as text letters, as described herein.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> further illustrates examples of features of the radius editing system implemented for free form radius editing of shape objects, as described herein.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> further illustrates examples of features of the radius editing system implemented for free form radius editing of a pattern of a shape object, as described herein.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates example methods of free form radius editing in accordance with one or more implementations.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates example methods of free form radius editing in accordance with one or more implementations.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an example system with an example device that can implement aspects of the techniques for free form radius editing.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0021" num="0020">Implementations of free form radius editing are described, and provide techniques to facilitate a user being able to globally change the radius of multiple rounded corners on one or more image objects without the tedious task of having to first select and group each corner segment of the image objects that will be subject to the change. Rather than a user of an image editing application having to manually select, analyze, and update the radius value of each individual corner to be changed, the user can simply select one of the corner segments to change the radius, and the similar radius corners of the other one or more image objects are also updated based on the user resizing the one selected corner segment. This type of simultaneous corner segment editing facilitates a user being able to maintain a synchronous appearance of the corner segments of image objects in digital image artwork, without having to manually update each corner segment individually, as well as maintain appearance consistency between text objects (glyph objects) and shape objects depicted in a digital image.</p><p id="p-0022" num="0021">In implementations, a radius editing system is implemented by a computing device, and the radius editing system can be integrated with an image editing application. A graphic designer working in an image editing application can then utilize aspects of the radius editing system to facilitate editing the corner segments of image objects depicted in a digital image. Generally, a user interface of the image editing application displays a digital image, which can include text objects and/or shape objects depicted as the image objects in the digital image. The user interface of the image editing application can also receive an editing input, such as when initiated by a user of the computing device, to edit the radius of a selected corner segment of an image object.</p><p id="p-0023" num="0022">In conventional image editing and graphics design software applications, constraints are an integral part of the design and drawing tools that are selectable by a user to align, edit, and/or change the overall shapes of image objects depicted in digital image artwork. Some image editing and design applications also allow for editing the attributes of similar looking shapes. However, this feature is limited to an overall global change of image attributes for similar image objects. These constraint and similar attribute editing features do not provide a user of an image editing and design application with the granular option of being able to synchronously edit and resize individual segments of multiple image objects, such as changing the rounding radius of multiple rounded corners for multiple, different image objects depicted in a digital image.</p><p id="p-0024" num="0023">The techniques for free form radius editing include a radius editing system that allows a user to edit a corner segment of an image object with the same radius as that of another existing corner already depicted in the digital image. Notably, a user may want to change all of the rounded corners of a particular radius value, applied to different types of shape objects and/or text objects at some of the corners, for global editing to a new radius value. Generally, a text object is a text letter, also referred to as a glyph, and the radius editing system determines a path object as a vector representation of the edge segments of an outline of a text object depicted in a digital image. Additionally, a shape object is representative of an object or shape depicted in a digital image, and the radius editing system utilizes the path object vectors of the shape object to determine the edge segments of an outline of the shape object.</p><p id="p-0025" num="0024">In aspects of free form radius editing, the radius editing system includes an edge detection module to determine the edge segments for the outlines of the image objects depicted in the digital image. Generally, the edge segments of the outlines of the image objects also include corner segments of the image objects. A corner detection module of the radius editing system can then determine the radius values of the corner segments of the image objects. The determined radius values of the corner segments of the image objects are stored in a cache as part of image objects data maintained by the system. Additionally, the corner detection module can approximate one or more of the corner segments based on path segments of an image object. In implementations, the approximation of a corner segment includes calculating a piecewise curvature from sample points on the path segments of an image object to define a curvature function of the corner segment.</p><p id="p-0026" num="0025">The radius editing system also includes a radius modification module that utilizes the stored cache of image objects data, which includes the determined radius values, to identify one or more similar corner segments of the image objects having an equivalent radius value as a selected corner segment. For example, a user may initiate an editing input to a selected corner of an image object depicted in a digital image, and responsive to the editing input, the radius modification module identifies one or more similar corner segments of the image objects having an equivalent radius value as the selected corner segment.</p><p id="p-0027" num="0026">In implementations, the radius editing system can initiate to display an enhanced visual indication, such as highlighting, the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input. Alternatively or in addition, the radius editing system can also initiate to jointly edit the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input. Alternatively or in addition, the radius editing system can initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input.</p><p id="p-0028" num="0027">In further aspects of free form radius editing, the image objects depicted in a digital image are text objects of text letters. The edge detection module of the radius editing system can determine the edge segments for the outlines of the text letters, and the corner detection module determines the radius values of the corner segments of the text letters. Notably, the edge detection module can determine the edge segments for the outlines of the text letters without converting the text letters into path outlines, thereby maintaining the glyph features of the text letters, such as font type and font size. A graphic designer can easily synchronize the appearance of rounded corners across different image objects depicted in digital image artwork, and for glyphs of text letters in different fonts, maintain intact the typographic properties of the text letters.</p><p id="p-0029" num="0028">The radius modification module of the radius editing system can then identify the one or more similar corner segments of the text letters that have an equivalent radius value as a selected corner segment responsive to an editing input of the radius of the selected corner segment. The radius modification module can identify the one or more similar corner segments of the text letters for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment. Alternatively or in addition, the radius modification module can identify the one or more similar corner segments of the text letters with an enhanced visual indication, such as highlighting, to indicate that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</p><p id="p-0030" num="0029">While features and concepts of free form radius editing can be implemented in any number of different devices, systems, networks, environments, and/or configurations, implementations of free form radius editing are described in the context of the following example devices, systems, and methods.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example <b>100</b> of a computing device <b>102</b> that can implement aspects of the techniques for free form radius editing, as described herein. The computing device <b>102</b> implements features of a radius editing system <b>104</b> for free form radius editing of corner segments of image objects depicted in a digital image <b>106</b>. For example, a digital image <b>106</b> can include image objects <b>108</b>, which may be text objects <b>110</b> and/or shape objects <b>112</b> depicted in the image. Generally, a text object <b>110</b> is a text letter, also commonly referred to as a glyph, and the radius editing system <b>104</b> determines a path object as a vector representation of the edge segments of an outline of a text object depicted in a digital image. Additionally, a shape object <b>112</b> is representative of an object or shape depicted in a digital image, and the radius editing system <b>104</b> utilizes the path object vectors of the shape object to determine the edge segments of an outline of the shape object. As further described in detail below, the radius editing system <b>104</b> can then determine which of the edge segments of the outlines are corner segments of the text objects and shape objects, and then determine the radius values of each of the corner segments.</p><p id="p-0032" num="0031">In this example, the computing device <b>102</b> may be any type of consumer electronic device, computing device, client device, tablet device, mobile device, wireless device, and/or any other type of electronic, computing, and/or communication device. The computing device <b>102</b> can also be implemented with various components, such as any number and combination of different components as further described with reference to the example device shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. Generally, the computing device <b>102</b> includes a memory <b>114</b> and a processor <b>116</b>, as well as a display device <b>118</b> on which digital images and content can be displayed in application user interfaces.</p><p id="p-0033" num="0032">In this example <b>100</b>, the computing device <b>102</b> includes an image editing application <b>120</b>, which a designer may use to graphically edit, design, and/or enhance digital images and artwork, such as the digital image <b>106</b>, which displays in a user interface <b>122</b> of the image editing application <b>120</b> on the display device <b>118</b> of the computing device. The image editing application <b>120</b> is an example of any type of a computer-based image editing and graphics design software application that a designer (e.g., computing device user) may use to edit and design digital images and graphics, such as the digital image <b>106</b>.</p><p id="p-0034" num="0033">The computing device <b>102</b> implements the radius editing system <b>104</b>, which can be implemented as one or more modules that may include independent processing, memory, and/or logic components functioning as a computing and/or electronic device integrated with the computing device. Alternatively or in addition, the radius editing system <b>104</b> can be implemented in software, in hardware, or as a combination of software and hardware components. In this example <b>100</b>, the radius editing system <b>104</b> is integrated with the image editing application <b>120</b>, and is implemented as components or modules of a software application, such as executable software instructions (e.g., computer-executable instructions) that are executable with a processing system (e.g., the processor <b>116</b>, a graphics processor, and the like) of the computing device <b>102</b> to implement aspects of the described techniques for free form radius editing.</p><p id="p-0035" num="0034">As components or modules of a software application, the radius editing system <b>104</b> can be stored in memory of the device (e.g., in the device memory <b>114</b>), or in any other suitable memory device or electronic data storage implemented with the radius editing system. Alternatively or in addition, the radius editing system <b>104</b> may be implemented in firmware and/or at least partially in computer hardware. For example, at least part of the radius editing system <b>104</b> may be executable by a computer processor, and/or at least part of the radius editing system may be implemented in logic circuitry.</p><p id="p-0036" num="0035">In implementations, the radius editing system <b>104</b> includes an edge detection module <b>124</b>, a corner detection module <b>126</b>, and a radius modification module <b>128</b>. The edge detection module <b>124</b> is implemented in the radius editing system <b>104</b> to determine the edge segments <b>130</b> for the outlines of the image objects <b>108</b> depicted in the digital image <b>106</b>. The edge segments <b>130</b> also include corner segments <b>132</b> of the outline boundaries of the image objects <b>108</b>, and the edge detection module <b>124</b> can determine and identify the corner segments. Generally, the edge detection module <b>124</b> can implement any type of known procedure or algorithm to determine the rounded corner segments <b>132</b>, given the vector inputs of the boundary outlines of the image objects <b>108</b>. The identified corner segments <b>132</b> of the outlines of the image objects <b>108</b> can be stored as part of the image objects data <b>134</b> in a cache <b>136</b> in the device memory <b>114</b>. The image objects data <b>134</b> stored in the cache <b>136</b> correlates the corner segments <b>132</b> with identifiers of the respective image objects <b>108</b> depicted in the digital image <b>106</b> for subsequent reference. These features of the cache <b>136</b> and the image objects data <b>134</b> are further shown and described below with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0037" num="0036">Additionally, the corner detection module <b>126</b> is implemented in the radius editing system <b>104</b> to determine the corner radius values <b>138</b> of each of the corner segments <b>132</b> of the image objects <b>108</b>, and the corner radius values <b>138</b> are also stored as part of the image objects data <b>134</b> in the cache <b>136</b>. Notably, the edge detection module <b>124</b> and/or the corner detection module <b>126</b> can also be implemented with a procedure or algorithm to approximate the rounded corner segments <b>132</b> of the image objects <b>108</b> depicted in the digital image <b>106</b>. Generally, some rounded corners of the image objects <b>108</b> depicted in digital images may not be actual rounded corners, but rather consecutive segment lines that appear as a single corner segment of some defined radius. In implementations, the corner detection module <b>126</b> can approximate one or more of the corner segments based on the path segments of an image object, where the approximation of a corner segment includes calculating a piecewise curvature from sample points on the path segments of the image object to define a curvature function of the corner segment.</p><p id="p-0038" num="0037">The radius editing system <b>104</b> can implement an approximation algorithm integrated with the edge detection module <b>124</b> and/or the corner detection module <b>126</b> to calculate approximate rounded corner segments. For example, the input Bezier geometry of the edge segments <b>130</b> is sampled and the curvature at each sample point is calculated using an approximation method as described and detailed in the document &#x201c;Sketching Piecewise Clothoid Curves&#x201d; by J. McCrae (In <i>Proceedings of the Fifth Eurographics Conference on Sketch</i>-<i>Based Interfaces and Modeling</i>, SBM'08, page 1-8, Goslar, D E U, 2008. Eurographics Association), which is incorporated by reference herein. A curvature function is defined at each sample point of a corner segment <b>132</b>, and to generate a constant curvature, the horizontal or vertical linear line is defined at each sample point, over which primitives can be fitted as described and detailed in the document &#x201c;Sketching Clothoid Splines using Shortest Paths by I. Baran (<i>Computer Graphics Forum, </i>29:655-664, 05 2010), which is incorporated by reference herein. The lines can then be filtered out after fitting, which provides the segments corresponding to the approximated rounded corners along with the approximated curvature information of the corner segments <b>132</b>.</p><p id="p-0039" num="0038">As indicated above, the cache <b>136</b> maintains the image objects data <b>134</b>, which includes the corner segments <b>132</b>, each uniquely identified and corresponding to the respective image objects <b>108</b> depicted in the digital image <b>106</b>, as well as the determined corner radius values <b>138</b> of each of the corner segments. Given the snapping and visual indication hinting (e.g., highlighting) features described herein with reference to free form radius editing, a dynamic corner segment tolerance is defined for the cache entries (e.g., the image objects data <b>134</b>), and to incorporate the tolerance, the floating range is divided into buckets [0, &#x3b5;], [&#x3b5;, 2&#x3b5;] . . . . For performant snapping and highlighting, the image objects data <b>134</b> is cached efficiently as an ordered hash between the corner radius values <b>138</b> and the corner segments information, which includes the Bezier segments information corresponding to a particular corner segment <b>132</b>.</p><p id="p-0040" num="0039">The radius modification module <b>128</b> of the radius editing system <b>104</b> can receive an editing input <b>140</b>, via the user interface <b>122</b> of the image editing application <b>120</b>, to edit the radius of a selected corner segment of one of the image objects <b>108</b> depicted in the digital image <b>106</b> that is displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. For example, a user may select the corner of a text letter to resize the radius of the corner segment <b>132</b>, such as with a mouse, a stylus, by touch control, and/or by any other editing input technique on the user interface. The radius modification module <b>128</b> of the radius editing system <b>104</b>, which is integrated with the image editing application <b>120</b>, can receive the editing input <b>140</b>. The radius modification module <b>128</b> can then identify one or more similar corner segments <b>142</b> of the image objects <b>108</b> that have an equivalent radius value as the selected corner segment responsive to the editing input <b>140</b> to the radius of the selected corner segment of the image object.</p><p id="p-0041" num="0040">The radius modification module <b>128</b> can identify the one or more similar corner segments <b>142</b> of the image objects <b>108</b> from the image objects data <b>134</b> maintained in the cache <b>136</b> in the device memory <b>114</b>. In aspects of the described features for free form radius editing, the similar corner segments <b>142</b> can be highlighted for display on the digital image <b>106</b> in the user interface <b>122</b>. For example, the radius modification module <b>128</b> is implemented to initiate an enhanced visual indication, such as highlighting, the one or more similar corner segments <b>142</b> identified as having an equivalent radius value as the selected corner segment responsive to the editing input <b>140</b> from the user.</p><p id="p-0042" num="0041">Alternatively or in addition, the similar corner segments <b>142</b> can be jointly edited along with the selected corner segment responsive to the editing input <b>140</b>. For example, the radius modification module <b>128</b> is implemented to initiate jointly editing the radius of each of the one or more similar corner segments <b>142</b> along with the radius of the selected corner segment responsive to the editing input <b>140</b>. Alternatively or in addition, the selected corner segment of the editing input <b>140</b> can snap to the radius setting or value of the similar corner segments <b>142</b>. For example, the radius modification module <b>128</b> is implemented to initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments <b>142</b> responsive to the editing input. These highlight, snapping, and joint editing features are further shown and described below with reference to <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>6</b></figref>.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>2</b></figref> further illustrates examples <b>200</b> of the features implemented by the radius editing system <b>104</b>, as shown and described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, an image object is depicted in a digital image <b>106</b>, such as would be displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. In this example, the image object depicted in the digital image <b>106</b> is a text object, shown as a text letter <b>202</b> (i.e., the text letter &#x201c;A&#x201d;), which is also commonly referred to as a glyph. It should be noted that, although the text objects <b>110</b> are shown and discussed herein as text letters, the techniques described for free form radius editing are applicable to any shape objects, as well as text objects that are depicted in a digital image <b>106</b> as numbers. Accordingly, text objects referred to herein encompasses numbers, text letters, and any other type of glyphs and fonts.</p><p id="p-0044" num="0043">An example of the cache <b>136</b> described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref> is also shown, including at least part of the image objects data <b>134</b> corresponding to the text letter <b>202</b> that is maintained in the cache <b>136</b> in the device memory <b>114</b> of the computing device <b>102</b>. The text letter <b>202</b> has multiple corner segments, of two different corner radius values, listed in the cache data as radius values <b>204</b> of radius &#x201c;5&#x201d; and radius &#x201c;1&#x201d; simply for discussion. The image objects data <b>134</b> corresponding to the text letter <b>202</b> and maintained in the cache includes an image object identifier <b>206</b> of the text letter, radius grouping identifiers <b>208</b>, the radius values <b>204</b> of the corner segments <b>132</b> in a respective radius grouping, and corner handle identifiers <b>210</b> of each of the corner segments <b>132</b> in a respective radius grouping. Notably, the corner handle identifiers <b>210</b> shown in the digital image (i.e., the identifiers numbered 1-11) would not typically be displayed, but are shown in this example simply for discussion purposes. However, the corner handles for editing the corner segments <b>132</b> of the text letter <b>202</b> are displayed in the digital image when the image object is selected for editing, such as the corner handle <b>212</b> that a user can manipulate to edit the radius of the corner segment corresponding to the corner handle identifier number three (3).</p><p id="p-0045" num="0044">As further illustrated at <b>214</b>, a user can initiate an editing input to resize the radius of a selected corner segment <b>216</b> of the text letter <b>202</b>, such as with a pointing device <b>218</b> to click-select and drag the corner handle <b>212</b>, which resizes the radius of the selected corner segment <b>216</b> of the text letter. As the resizing of the radius of the selected corner segment <b>216</b> increases from the initial radius value of one (1) and approaches the radius value of five (5), the radius modification module <b>128</b> can initiate snapping the radius of the selected corner segment <b>216</b> to the equivalent radius value of the other similar corner segments <b>220</b> of the text letter <b>202</b> responsive to the editing input. The efficiencies of the cache <b>136</b> provide for a highly performant radius edit process and keeps the entire edit resizing session very smooth and fluent.</p><p id="p-0046" num="0045">The radius modification module <b>128</b> can identify the similar corner segments <b>220</b> of the text letter <b>202</b> (e.g., a text object) that have an equivalent radius value as the selected corner segment <b>216</b> from the image objects data <b>134</b> maintained in the cache <b>136</b>. Additionally, the similar corner segments <b>220</b> can be highlighted for display on the digital image <b>106</b> in the user interface <b>122</b>. The radius modification module <b>128</b> is implemented to initiate an enhanced visual indication, such as highlighting, the similar corner segments <b>220</b> identified as having an equivalent radius value as the selected corner segment <b>216</b> responsive to the editing input from the user.</p><p id="p-0047" num="0046">For example, the selected corner segment <b>216</b> is resized to the radius value of five (5) based on the editing input. Accordingly, the similar corner segments <b>220</b> (also identified by the corner handle identifiers numbered 1, 2, and 6-11), are all highlighted to indicate the similar corner segments having the same radius value as the selected corner segment. Although the similar corner segments <b>220</b> are all shown as highlighted in this illustrated example, the radius modification module <b>128</b> can initiate any type of enhanced visual indication of the similar corner segments, such as with dashed lines, different colors, bolder lines, and/or any other type of visual enhancements.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>3</b></figref> further illustrates examples <b>300</b> of the features implemented by the radius editing system <b>104</b>, as shown and described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>. For example, an image object is depicted in a digital image <b>106</b>, such as would be displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. In this example, the image object depicted in the digital image <b>106</b> is a text object, shown as a text letter <b>302</b> (i.e., the text letter &#x201c;A&#x201d;). Notably, the corner segments of the text letter <b>302</b> have larger radius values than the corner segments of the text letter <b>202</b> shown and described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The corner handles for editing the corner segments of the text letter <b>302</b> are also displayed in the digital image <b>106</b>, such as the corner handle <b>304</b> that a user can manipulate to edit the radius of the corner segment corresponding to the corner handle identifier number two (2).</p><p id="p-0049" num="0048">In this example, interactive free form editing of similar looking rounded corner segments of image objects depicted in the digital image <b>106</b> are jointly edited to preserve the visual consistency and coherency of the image objects appearance. As further illustrated at <b>306</b>, a user can initiate an editing input to resize the radius of a selected corner segment <b>308</b> of the text letter <b>302</b>, such as with a pointing device <b>310</b> to click-select and drag the corner handle <b>304</b>, which resizes the radius of the selected corner segment <b>308</b> of the text letter <b>302</b>.</p><p id="p-0050" num="0049">The radius modification module <b>128</b> can identify the similar corner segments of the text letter <b>302</b> (e.g., a text object) that have an equivalent radius value as the selected corner segment <b>308</b> from the image objects data <b>134</b> maintained in the cache <b>136</b>. Additionally, the similar corner segments can be highlighted for display on the digital image <b>106</b> in the user interface <b>122</b> responsive to the editing input from the user. For example, the selected corner segment <b>308</b> is subject to an editing input, and the similar corner segments (identified by the corner handle identifiers numbered 1 and 6-11), are all highlighted to indicate the similar corner segments having the same radius value as the selected corner segment.</p><p id="p-0051" num="0050">Additionally, the similar corner segments of the text letter <b>302</b> can be jointly edited along with the selected corner segment <b>308</b>. As shown at <b>314</b>, the radius modification module <b>128</b> is implemented to jointly edit the radius of each of the similar corner segments <b>312</b> along with the radius of the selected corner segment <b>308</b> responsive to the editing input, which maintains the appearance consistency of the displayed text letter. Notably, the user may also deselect any of the similar corner segments which the user chooses not to subject to the editing input.</p><p id="p-0052" num="0051">In the described aspects of free form radius editing, the radius modification module <b>128</b> can initiate to highlight the similar corner segments of one or more image objects depicted in a digital image, and then jointly edit the similar corner segments along with the selected corner segment. Further, as described above, the radius modification module <b>128</b> can initiate snapping the radius of the selected corner segment to the equivalent radius value of the similar corner segments of one or more image objects depicted in a digital image, and also highlight the similar corner segments of the one or more image objects. In implementations, the user interface <b>122</b> of the image editing application <b>120</b> may include a user-selectable toggle by which a user can select any one or combination of the highlight, snapping, and joint editing features of free form radius editing.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>4</b></figref> further illustrates examples <b>400</b> of the features implemented by the radius editing system <b>104</b>, as shown and described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, text objects <b>402</b> may be depicted in a digital image <b>106</b> as displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. In this example, the individual text objects <b>402</b> each correspond to the respective text letters &#x201c;T&#x201d;, &#x201c;E&#x201d;, &#x201c;X&#x201d;, and &#x201c;T&#x201d;, which are glyphs of the text letters. The similar corner segments of the text objects <b>402</b> can be jointly edited to preserve the visual consistency and coherency of the text objects appearance. As illustrated, a user can initiate an editing input to resize the radius of a selected corner segment <b>404</b> of the text letter <b>406</b>, such as with a pointing device <b>408</b> to click-select and drag a corner handle <b>410</b> that is associated with the selected corner segment.</p><p id="p-0054" num="0053">The radius modification module <b>128</b> can identify the similar corner segments <b>412</b> of all the text objects <b>402</b> that have an equivalent radius value as the selected corner segment <b>404</b> from the image objects data <b>134</b> maintained in the cache <b>136</b>. In this example, the text letter &#x201c;E&#x201d; also has corner segments <b>414</b> that do not have a similar radius value as the selected corner segment <b>404</b>. The radius modification module <b>128</b> can initiate the enhanced visual indication (e.g., highlighting) of the similar corner segments <b>412</b> of the text objects <b>402</b>. Further, as the radius of the selected corner segment <b>404</b> of the text letter <b>406</b> is resized responsive to the editing input, the radius modification module <b>128</b> is implemented to jointly edit the radius of each of the similar corner segments <b>412</b> along with the radius of the selected corner segment. Notably, the corner segments <b>414</b> of the text letter &#x201c;E&#x201d; that do not have the similar radius value as the selected corner segment <b>404</b> are not edited, as shown in the modified and jointly edited letters &#x201c;T E X T&#x201d; at <b>416</b>.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>5</b></figref> further illustrates examples <b>500</b> of the features implemented by the radius editing system <b>104</b>, as shown and described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, several shape objects may be depicted in a digital image <b>106</b> as displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. In this example, the individual shape objects <b>502</b>, <b>504</b> have similar corner segments <b>506</b> with equal radius values. The similar corner segments <b>506</b> of the shape objects <b>502</b>, <b>504</b> can be jointly edited to preserve the visual consistency and coherency of the shape objects appearance. As illustrated, a user can initiate an editing input to resize the radius of a selected corner segment <b>508</b> of the shape object <b>502</b>, such as with a pointing device <b>510</b> to click-select and drag a corner handle <b>512</b> that is associated with the selected corner segment.</p><p id="p-0056" num="0055">The radius modification module <b>128</b> can identify the similar corner segments <b>506</b> of all the shape objects that have an equivalent radius value as the selected corner segment <b>508</b> from the image objects data <b>134</b> maintained in the cache <b>136</b>. In this example, the shape objects <b>502</b>, <b>504</b> have the corner segments <b>506</b> that are of a similar radius value as the selected corner segment <b>508</b>. The radius modification module <b>128</b> can initiate the enhanced visual indication (e.g., highlighting) of the similar corner segments <b>506</b> of the shape objects <b>502</b>, <b>504</b>. Further, as the radius of the selected corner segment <b>508</b> of the shape object <b>502</b> is resized responsive to the editing input, and the radius modification module <b>128</b> is implemented to jointly edit the radius of each of the similar corner segments <b>506</b> along with the radius of the selected corner segment.</p><p id="p-0057" num="0056">Further, as shown at <b>514</b>, the radius of the selected corner segment <b>508</b> of the shape object <b>502</b> continues to be resized responsive to the editing input, and the radius modification module <b>128</b> is implemented to snap the selected corner segment <b>508</b> to the radius value of the other similar corner segments <b>516</b> of the shape objects <b>518</b>, <b>520</b>. The radius modification module <b>128</b> can also initiate the enhanced visual indication (e.g., highlighting) of the similar corner segments <b>516</b> of the shape objects <b>518</b>, <b>520</b> along with the selected corner segment <b>508</b> of the shape object <b>502</b>.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>6</b></figref> further illustrates examples <b>600</b> of the features implemented by the radius editing system <b>104</b>, as shown and described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, a shape object <b>602</b> with a pattern may be depicted in a digital image <b>106</b> as displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. In this example, the shape object <b>602</b> has a pattern of similar corner segments <b>604</b> with equal radius values, and the similar corner segments of the pattern of the shape object can be jointly edited to preserve the visual consistency and coherency of the pattern appearance. As illustrated at <b>606</b>, a user can initiate an editing input to resize the radius of a selected corner segment <b>608</b> of the shape object <b>602</b>, such as with a pointing device <b>610</b> to click-select and drag a corner handle <b>612</b> that is associated with the selected corner segment.</p><p id="p-0059" num="0058">The radius modification module <b>128</b> can identify the similar corner segments <b>604</b> of the pattern of the shape object <b>602</b> that have an equivalent radius value as the selected corner segment <b>608</b> from the image objects data <b>134</b> maintained in the cache <b>136</b>. The radius modification module <b>128</b> can then initiate to jointly edit the radius of each of the similar corner segments <b>604</b> along with the radius of the selected corner segment <b>608</b> as the radius of the selected corner segment of the pattern of the shape object <b>602</b> is resized responsive to the editing input. The pattern of the shape object <b>602</b> is modified as shown at <b>614</b> responsive to the editing input and the joint editing of the similar corner segments <b>604</b>.</p><p id="p-0060" num="0059">Example methods <b>700</b> and <b>800</b> are described with reference to respective <figref idref="DRAWINGS">FIGS. <b>7</b> and <b>8</b></figref> in accordance with one or more aspects of free form radius editing. Generally, any of the components, modules, methods, and operations described herein can be implemented using software, firmware, hardware (e.g., fixed logic circuitry), manual processing, or any combination thereof. Some operations of the example methods may be described in the general context of executable instructions stored on computer-readable storage memory that is local and/or remote to a computer processing system, and implementations can include software applications, programs, functions, and the like. Alternatively, or in addition, any of the functionality described herein can be performed, at least in part, by one or more hardware logic components, such as, and without limitation, Field-programmable Gate Arrays (FPGAs), Application-specific Integrated Circuits (ASICs), Application-specific Standard Products (ASSPs), System-on-a-chip systems (SoCs), Complex Programmable Logic Devices (CPLDs), and the like.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates example method(s) <b>700</b> for free form radius editing, and is generally described with reference to the radius editing system implemented by a computing device as shown and described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b></figref>. The order in which the method is described is not intended to be construed as a limitation, and any number or combination of the method operations can be combined in any order to implement a method, or an alternate method.</p><p id="p-0062" num="0061">At <b>702</b>, edge segments are determined for outlines of image objects depicted in a digital image, the edge segments including corner segments of the image objects. For example, the edge detection module <b>124</b> implemented in the radius editing system <b>104</b> determines the edge segments <b>130</b> for the outlines of the image objects <b>108</b> depicted in the digital image <b>106</b>. The edge segments <b>130</b> also include the corner segments <b>132</b> of the outline boundaries of the image objects <b>108</b>, and the edge detection module <b>124</b> determines and identifies the corner segments. Generally, the image objects <b>108</b> may be text objects <b>110</b> of text letters and/or shape objects <b>112</b> depicted in the digital image <b>106</b>. The corner detection module <b>126</b> can also approximate the rounded corner segments <b>132</b> of the image objects <b>108</b> depicted in the digital image <b>106</b> for the corner segments that are not actual rounded corners. In implementations, the corner detection module <b>126</b> approximates one or more of the corner segments <b>132</b> based on path segments of an image object, where the approximation of a corner segment includes calculating a piecewise curvature from sample points on the path segments to define a curvature function of the corner segment.</p><p id="p-0063" num="0062">At <b>704</b>, radius values of the corner segments of the image objects are determined. For example, the corner detection module <b>126</b> implemented in the radius editing system <b>104</b> determines the corner radius values <b>138</b> of each of the corner segments <b>132</b> of the image objects <b>108</b>. At <b>706</b>, the radius values of the corner segments are maintained in a cache as at least part of object data corresponding to the image objects depicted in the digital image. For example, the cache <b>136</b> maintains the image objects data <b>134</b>, which includes the corner segments <b>132</b>, each uniquely identified and corresponding to the respective image objects <b>108</b> depicted in the digital image <b>106</b>, as well as the determined corner radius values <b>138</b> of each of the corner segments.</p><p id="p-0064" num="0063">At <b>708</b>, an editing input is received to edit the radius of a selected corner segment of the image object. For example, the radius modification module <b>128</b> of the radius editing system <b>104</b> receives an editing input <b>140</b> to edit the radius of a selected corner segment of one of the image objects <b>108</b> depicted in the digital image <b>106</b> that is displayed in the user interface <b>122</b> on the display device <b>118</b> of the computing device <b>102</b>. A user may select the corner of a text letter to resize the radius of the corner segment <b>132</b>, such as with a mouse, a stylus, by touch control, and/or by any other editing input technique on the user interface. The radius modification module <b>128</b> of the radius editing system <b>104</b>, which is integrated with the image editing application <b>120</b>, receives the editing input <b>140</b>.</p><p id="p-0065" num="0064">At <b>710</b>, one or more similar corner segments of the image objects are identified that have an equivalent radius value as a selected corner segment responsive to the editing input. For example, the radius modification module <b>128</b> of the radius editing system <b>104</b> identifies one or more similar corner segments <b>142</b> of the image objects <b>108</b> that have an equivalent radius value as the selected corner segment responsive to the editing input <b>140</b> to the radius of the selected corner segment of the image object. The radius modification module <b>128</b> identifies the one or more similar corner segments <b>142</b> of the image objects <b>108</b> from the image objects data <b>134</b> maintained in the cache <b>136</b> in the device memory <b>114</b>.</p><p id="p-0066" num="0065">At <b>712</b>, an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment are displayed responsive to the editing input. For example, the similar corner segments <b>142</b> are highlighted for display on the digital image <b>106</b> in the user interface <b>122</b>. The radius modification module <b>128</b> of the radius editing system <b>104</b> initiates an enhanced visual indication, such as highlighting, the one or more similar corner segments <b>142</b> identified as having an equivalent radius value as the selected corner segment responsive to the editing input <b>140</b> from the user.</p><p id="p-0067" num="0066">At <b>714</b>, the radius of each of the one or more similar corner segments are edited along with the radius of the selected corner segment responsive to the editing input. For example, the similar corner segments <b>142</b> are jointly edited along with the selected corner segment responsive to the editing input <b>140</b>. The radius modification module <b>128</b> of the radius editing system <b>104</b> initiates joint editing the radius of each of the one or more similar corner segments <b>142</b> along with the radius of the selected corner segment responsive to the editing input.</p><p id="p-0068" num="0067">At <b>716</b>, the radius of the selected corner segment is snapped to the equivalent radius value of the one or more similar corner segments responsive to the editing input. For example, the selected corner segment of the editing input <b>140</b> snaps to the radius setting or value of the similar corner segments <b>142</b>. The radius modification module <b>128</b> of the radius editing system <b>104</b> initiates snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments <b>142</b> responsive to the editing input. Notably, the highlight, snapping, and/or joint editing features can be implemented independently or together in any combination.</p><p id="p-0069" num="0068">In described aspects of free form radius editing, the radius modification module <b>128</b> initiates to highlight the similar corner segments of one or more image objects depicted in a digital image, and then jointly edits the similar corner segments along with the selected corner segment. Further, as described above, the radius modification module <b>128</b> initiates snapping the radius of the selected corner segment to the equivalent radius value of the similar corner segments of one or more image objects depicted in a digital image, and also highlights the similar corner segments of one or more image objects. In implementations, the user interface <b>122</b> of the image editing application <b>120</b> may include a user-selectable toggle by which a user can select any one or combination of the highlighting, snapping, and joint editing features of free form radius editing, as described herein.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates example method(s) <b>800</b> for free form radius editing, and is generally described with reference to the radius editing system implemented by a computing device as shown and described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b></figref>. The order in which the method is described is not intended to be construed as a limitation, and any number or combination of the method operations can be combined in any order to implement a method, or an alternate method.</p><p id="p-0071" num="0070">At <b>802</b>, edge segments are determined for outlines of text objects of text letters depicted in a digital image, the edge segments including corner segments of the text letters. For example, the edge detection module <b>124</b> implemented in the radius editing system <b>104</b> determines the edge segments for the outlines of the text objects <b>402</b> depicted as the text letters in the digital image <b>106</b>. The edge segments also include the corner segments of the outline boundaries of the text objects <b>402</b>, and the edge detection module <b>124</b> determines and identifies the corner segments. The edge detection module <b>124</b> can also approximate the rounded corner segments of the image objects <b>108</b> depicted in the digital image <b>106</b> for the corner segments that are not actual rounded corners.</p><p id="p-0072" num="0071">At <b>804</b>, radius values of the corner segments of the text letters are determined. For example, the corner detection module <b>126</b> implemented in the radius editing system <b>104</b> determines the corner radius values of each of the corner segments of the text objects <b>402</b> depicted as the text letters in the digital image <b>106</b>. The cache <b>136</b> maintains the image objects data <b>134</b>, which includes the corner segments of the text objects <b>402</b> as the text letters, each uniquely identified and corresponding to the respective text objects depicted in the digital image <b>106</b>, as well as the determined corner radius values of each of the corner segments.</p><p id="p-0073" num="0072">At <b>806</b>, an editing input is received to edit the radius of a selected corner segment of a text letter. For example, the similar corner segments <b>412</b> of the text objects <b>402</b> are jointly edited to preserve the visual consistency and coherency of the text objects appearance. A user can initiate an editing input to resize the radius of a selected corner segment <b>404</b> of the text letter <b>406</b>, such as with a pointing device <b>408</b> to click-select and drag a corner handle <b>410</b> that is associated with the selected corner segment. The editing input is received by radius modification module <b>128</b> of the radius editing system <b>104</b> via the user interface <b>122</b> of the image editing application <b>120</b> displayed on the display device <b>118</b> of the computing device <b>102</b>.</p><p id="p-0074" num="0073">At <b>808</b>, one or more similar corner segments of the text letters that have an equivalent radius value as the selected corner segment are identified responsive to the editing input of the radius of the selected corner segment of the text letter. For example, the radius modification module <b>128</b> of the radius editing system <b>104</b> identifies the similar corner segments <b>412</b> of all the text objects <b>402</b> that have an equivalent radius value as the selected corner segment <b>404</b> from the image objects data <b>134</b> maintained in the cache <b>136</b>. In implementations, the one or more similar corner segments of the text letters are identified for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment of the text letter. Alternatively or in addition, the one or more similar corner segments of the text letters are identified with an enhanced visual indication that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an example system <b>900</b> that includes an example device <b>902</b>, which can implement techniques of free form radius editing. The example device <b>902</b> can be implemented as any of the computing devices, mobile devices, server devices, and/or services described with reference to the previous <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>8</b></figref>, such as any type of computing device, client device, mobile phone, tablet, communication, entertainment, gaming, media playback, and/or other type of device. For example, the radius editing system <b>104</b> can be implemented by the example device <b>902</b>.</p><p id="p-0076" num="0075">The example device <b>902</b> includes communication devices <b>904</b> that enable wired and/or wireless communication of device data <b>906</b>, such as any of the image object content, digital images, and/or any other of the radius editing system data, as well as computer applications data and content that is transferred from one computing device to another, and/or synched between multiple computing devices. The device data <b>906</b> can include any type of audio, video, image, and/or graphic data that is received and/or generated by applications executing on the device. The communication devices <b>904</b> can also include transceivers for cellular phone communication and/or for network data communication.</p><p id="p-0077" num="0076">The device <b>902</b> also includes input/output (I/O) interfaces <b>908</b>, such as data network interfaces that provide connection and/or communication links between the device, data networks, and other devices. The I/O interfaces can be used to couple the device to any type of components, peripherals, and/or accessory devices, such as a digital camera device <b>910</b> and/or computer input device that may be integrated with the example device <b>902</b>. The I/O interfaces also include data input ports via which any type of data, media content, and/or inputs can be received, such as user inputs to the device, as well as any type of audio, video, and/or image data received from any content and/or data source.</p><p id="p-0078" num="0077">The device <b>902</b> includes a processor system <b>912</b> that may be implemented at least partially in hardware, such as with any type of microprocessors, controllers, and the like that process executable instructions. The processor system <b>912</b> can include components of an integrated circuit, programmable logic device, a logic device formed using one or more semiconductors, and other implementations in silicon and/or hardware, such as a processor and memory system implemented as a system-on-chip (SoC). Alternatively or in addition, the device <b>902</b> can be implemented with any one or combination of software, hardware, firmware, or fixed logic circuitry that may be implemented with processing and control circuits. The device <b>902</b> may further include any type of a system bus or other data and command transfer system that couples the various components within the device. A system bus can include any one or combination of different bus structures and architectures, as well as control and data lines.</p><p id="p-0079" num="0078">The example device <b>902</b> also includes computer-readable storage memory <b>914</b>, such as data storage devices implemented in hardware that can be accessed by a computing device, and that provide persistent storage of data and executable instructions (e.g., software applications, modules, programs, functions, and the like). The computer-readable storage memory described herein excludes propagating signals. Examples of computer-readable storage memory include volatile memory and non-volatile memory, fixed and removable media devices, and any suitable memory device or electronic data storage that maintains data for computing device access. The computer-readable storage memory <b>914</b> can include various implementations of random access memory (RAM), read-only memory (ROM), flash memory, and other types of storage memory in various memory device configurations.</p><p id="p-0080" num="0079">The computer-readable storage memory <b>914</b> provides storage of the device data <b>906</b> and various device applications <b>916</b>, such as an operating system that is maintained as a software application with the computer-readable storage memory and executed by the processor system <b>912</b>. In this example, the device <b>902</b> includes a radius editing system <b>918</b> that implements the described techniques of free form radius editing. The radius editing system <b>918</b> may be implemented with hardware components and/or in software as one of the device applications <b>916</b>, such as when the radius editing system is implemented by the example device <b>902</b>. An example of the radius editing system <b>918</b> includes the radius editing system <b>104</b>, which can be implemented with various components, such as models, systems, algorithms, and/or networks. In implementations, the radius editing system <b>918</b> may include independent processing, memory, and logic components as a computing and/or electronic device integrated with the device <b>902</b>.</p><p id="p-0081" num="0080">In implementations, the radius editing system <b>918</b> and/or any of the components of the radius editing system can be implemented as any type of machine learning or neural network with trained classifiers, such as in software and/or in hardware in any type of computing device. The machine learning can be implemented by the device <b>902</b> as any type of a neural network or machine learning model, referring to a computer representation that can be tuned or trained based on inputs to approximate unknown functions. In particular, the term &#x201c;machine learning model&#x201d; can include a model that utilizes algorithms to learn from, and make predictions on, known data by analyzing the known data to learn to generate outputs that reflect patterns and attributes of the known data. For instance, a machine-learning model can include but is not limited to, decision trees, support vector machines, linear regression, logistic regression, Bayesian networks, random forest learning, dimensionality reduction algorithms, boosting algorithms, artificial neural networks, deep learning, and the like. Thus, a machine-learning model makes high-level abstractions in data by generating data-driven predictions or decisions from the known input data.</p><p id="p-0082" num="0081">The device <b>902</b> also includes an audio and/or video system <b>920</b> that generates audio data for an audio device <b>922</b> and/or generates display data for a display device <b>924</b>. The audio device and/or the display device include any devices that process, display, and/or otherwise render audio, video, display, and/or image data. In implementations, the audio device and/or the display device are integrated components of the example device <b>902</b>. Alternatively, the audio device and/or the display device are external, peripheral components to the example device. In embodiments, at least part of the techniques described for free form radius editing may be implemented in a distributed system, such as over a &#x201c;cloud&#x201d; <b>926</b> in a platform <b>928</b>. The cloud <b>926</b> includes and/or is representative of the platform <b>928</b> for services <b>930</b> and/or resources <b>932</b>.</p><p id="p-0083" num="0082">The platform <b>928</b> abstracts underlying functionality of hardware, such as server devices (e.g., included in the services <b>930</b>) and/or software resources (e.g., included as the resources <b>932</b>), and connects the example device <b>902</b> with other devices, servers, etc. The resources <b>932</b> may also include applications and/or data that can be utilized while computer processing is executed on servers that are remote from the example device <b>902</b>. Additionally, the services <b>930</b> and/or the resources <b>932</b> may facilitate subscriber network services, such as over the Internet, a cellular network, or Wi-Fi network. The platform <b>928</b> may also serve to abstract and scale resources to service a demand for the resources <b>932</b> that are implemented via the platform, such as in an interconnected device embodiment with functionality distributed throughout the system <b>900</b>. For example, the functionality may be implemented in part at the example device <b>902</b> as well as via the platform <b>928</b> that abstracts the functionality of the cloud <b>926</b>.</p><p id="p-0084" num="0083">Although implementations of free form radius editing have been described in language specific to features and/or methods, the appended claims are not necessarily limited to the specific features or methods described. Rather, the specific features and methods are disclosed as example implementations of free form radius editing, and other equivalent features and methods are intended to be within the scope of the appended claims. Further, various different examples are described and it is to be appreciated that each described example can be implemented independently or in connection with one or more other described examples, such as the following:</p><p id="p-0085" num="0084">A computing device implemented for free form radius editing, the computing device comprising: a memory to maintain a digital image and a cache of object data corresponding to edge segments for outlines of image objects depicted in the digital image; a radius editing system implemented at least partially in computer hardware, the radius editing system including: an edge detection module to determine the edge segments for the outlines of the image objects depicted in the digital image, the edge segments including corner segments of the image objects; a corner detection module to determine radius values of the corner segments of the image objects, the radius values stored as at least part of the object data in the cache; and a radius modification module to identify one or more similar corner segments of the image objects that have an equivalent radius value as a selected corner segment responsive to an editing input of a radius of the selected corner segment of an image object.</p><p id="p-0086" num="0085">Alternatively or in addition to the above described computing device, any one or combination of: the radius editing system is integrated with an image editing application; and a user interface of the image editing application is configured to display the digital image and receive the editing input to edit the radius of the selected corner segment of the image object. The corner detection module is configured to approximate one or more of the corner segments based on path segments of the image object, the approximation of a corner segment including to calculate a piecewise curvature from sample points on the path segments to define a curvature function of the corner segment. The radius modification module is configured to initiate an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input. The radius modification module is configured to initiate jointly editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input. The radius modification module is configured to initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input. Responsive to the editing input, the radius modification module is configured to: initiate an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment; and initiate jointly editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment. Responsive to the editing input, the radius modification module is configured to: initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments; and initiate an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment. The image objects are text objects of text letters; the edge detection module is configured to determine the edge segments for the outlines of the text letters; the corner detection module is configured to determine the radius values of the corner segments of the text letters; and the radius modification module is configured to identify the one or more similar corner segments of the text letters that have the equivalent radius value as the selected corner segment responsive to the editing input of the radius of the selected corner segment. The radius modification module is configured to at least one of: identify the one or more similar corner segments of the text letters for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment; or identify the one or more similar corner segments of the text letters with an enhanced visual indication that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</p><p id="p-0087" num="0086">A method implemented by a computing device in a digital medium environment for free form radius editing, the method comprising: determining edge segments for outlines of image objects depicted in a digital image, the edge segments including corner segments of the image objects; determining radius values of the corner segments of the image objects; maintaining the radius values of the corner segments in a cache as at least part of object data corresponding to the image objects depicted in the digital image; and identifying one or more similar corner segments of the image objects that have an equivalent radius value as a selected corner segment responsive to an editing input of a radius of the selected corner segment of an image object.</p><p id="p-0088" num="0087">Alternatively or in addition to the above described method, any one or combination of: approximating one or more of the corner segments based on path segments of the image object, the approximation of a corner segment including calculating a piecewise curvature from sample points on the path segments to define a curvature function of the corner segment. Displaying an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input. Editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input. Snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input. Displaying an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input; and editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input. Snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input; and displaying an enhanced visual indication of the one or more similar corner segments responsive to the snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments. The image objects are text objects of text letters; the edge segments for the outlines of the text letters are determined; the radius values of the corner segments of the text letters are determined; and the one or more similar corner segments of the text letters that have the equivalent radius value as the selected corner segment are identified responsive to the editing input of the radius of the selected corner segment.</p><p id="p-0089" num="0088">A method implemented by a computing device in a digital medium environment for free form radius editing, the method comprising: determining edge segments for outlines of text objects of text letters depicted in a digital image, the edge segments including corner segments of the text letters; determining radius values of the corner segments of the text letters; receiving an editing input to edit the radius of a selected corner segment of a text letter; and identifying one or more similar corner segments of the text letters that have an equivalent radius value as the selected corner segment responsive to the editing input of the radius of the selected corner segment of the text letter.</p><p id="p-0090" num="0089">Alternatively or in addition to the above described method, any one or combination of: the one or more similar corner segments of the text letters are at least one of identified for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment of the text letter; or with an enhanced visual indication that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computing device implemented for free form radius editing, the computing device comprising:<claim-text>a memory to maintain a digital image and a cache of object data corresponding to edge segments for outlines of image objects depicted in the digital image;</claim-text><claim-text>a radius editing system implemented at least partially in computer hardware, the radius editing system including:<claim-text>an edge detection module to determine the edge segments for the outlines of the image objects depicted in the digital image, the edge segments including corner segments of the image objects;</claim-text><claim-text>a corner detection module to determine radius values of the corner segments of the image objects, the radius values stored as at least part of the object data in the cache; and</claim-text><claim-text>a radius modification module to identify one or more similar corner segments of the image objects that have an equivalent radius value as a selected corner segment responsive to an editing input of a radius of the selected corner segment of an image object.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the radius editing system is integrated with an image editing application; and</claim-text><claim-text>a user interface of the image editing application is configured to display the digital image and receive the editing input to edit the radius of the selected corner segment of the image object.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the corner detection module is configured to approximate one or more of the corner segments based on path segments of the image object, the approximation of a corner segment including to calculate a piecewise curvature from sample points on the path segments to define a curvature function of the corner segment.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the radius modification module is configured to initiate an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the radius modification module is configured to initiate jointly editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the radius modification module is configured to initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, responsive to the editing input, the radius modification module is configured to:<claim-text>initiate an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment; and</claim-text><claim-text>initiate jointly editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, responsive to the editing input, the radius modification module is configured to:<claim-text>initiate snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments; and</claim-text><claim-text>initiate an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computing device as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the image objects are text objects of text letters;</claim-text><claim-text>the edge detection module is configured to determine the edge segments for the outlines of the text letters;</claim-text><claim-text>the corner detection module is configured to determine the radius values of the corner segments of the text letters; and</claim-text><claim-text>the radius modification module is configured to identify the one or more similar corner segments of the text letters that have the equivalent radius value as the selected corner segment responsive to the editing input of the radius of the selected corner segment.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computing device as recited in <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the radius modification module is configured to at least one of:<claim-text>identify the one or more similar corner segments of the text letters for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment; or</claim-text><claim-text>identify the one or more similar corner segments of the text letters with an enhanced visual indication that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method implemented by a computing device in a digital medium environment for free form radius editing, the method comprising:<claim-text>determining edge segments for outlines of image objects depicted in a digital image, the edge segments including corner segments of the image objects;</claim-text><claim-text>determining radius values of the corner segments of the image objects;</claim-text><claim-text>maintaining the radius values of the corner segments in a cache as at least part of object data corresponding to the image objects depicted in the digital image; and</claim-text><claim-text>identifying one or more similar corner segments of the image objects that have an equivalent radius value as a selected corner segment responsive to an editing input of a radius of the selected corner segment of an image object.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>approximating one or more of the corner segments based on path segments of the image object, the approximation of a corner segment including calculating a piecewise curvature from sample points on the path segments to define a curvature function of the corner segment.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>displaying an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>displaying an enhanced visual indication of the one or more similar corner segments identified as having the equivalent radius value as the selected corner segment responsive to the editing input; and</claim-text><claim-text>editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment responsive to the editing input.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments responsive to the editing input; and</claim-text><claim-text>displaying an enhanced visual indication of the one or more similar corner segments responsive to the snapping the radius of the selected corner segment to the equivalent radius value of the one or more similar corner segments.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>the image objects are text objects of text letters;</claim-text><claim-text>the edge segments for the outlines of the text letters are determined;</claim-text><claim-text>the radius values of the corner segments of the text letters are determined; and</claim-text><claim-text>the one or more similar corner segments of the text letters that have the equivalent radius value as the selected corner segment are identified responsive to the editing input of the radius of the selected corner segment.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A method implemented by a computing device in a digital medium environment for free form radius editing, the method comprising:<claim-text>determining edge segments for outlines of text objects of text letters depicted in a digital image, the edge segments including corner segments of the text letters;</claim-text><claim-text>determining radius values of the corner segments of the text letters;</claim-text><claim-text>receiving an editing input to edit the radius of a selected corner segment of a text letter; and</claim-text><claim-text>identifying one or more similar corner segments of the text letters that have an equivalent radius value as the selected corner segment responsive to the editing input of the radius of the selected corner segment of the text letter.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method as recited in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the one or more similar corner segments of the text letters are at least one of identified:<claim-text>for joint editing the radius of each of the one or more similar corner segments along with the radius of the selected corner segment of the text letter; or</claim-text><claim-text>with an enhanced visual indication that the selected corner segment has been edited to match the one or more similar corner segments of the text letters.</claim-text></claim-text></claim></claims></us-patent-application>