<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004403A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004403</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17365787</doc-number><date>20210701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>445</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>34</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>656</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>44505</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>302</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>3428</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20180201</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>8</main-group><subgroup>656</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">APPLICATION TUNING BASED ON PERFORMANCE CHARACTERISTICS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>MICRO FOCUS LLC</orgname><address><city>SANTA CLARA</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SOMISETTY</last-name><first-name>Harish Kumar</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>MICRO FOCUS LLC</orgname><role>02</role><address><city>SANTA CLARA</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">According to examples, an apparatus may include a processor and a memory on which are stored machine-readable instructions that when executed by the processor, may cause the processor to receive information regarding a performance characteristic of an application during predetermined time periods. The processor may calculate a rate of change in the performance characteristic over the predetermined time periods. Based on a determination that the performance characteristic of the application has changed over the predetermined time periods, the processor may tune values of a set of parameters for the application based on the calculated rate of change in the performance characteristic.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="149.69mm" wi="132.16mm" file="US20230004403A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="173.06mm" wi="134.20mm" file="US20230004403A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="190.67mm" wi="138.94mm" file="US20230004403A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="212.94mm" wi="153.42mm" file="US20230004403A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="151.47mm" wi="75.35mm" file="US20230004403A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="195.66mm" wi="112.78mm" file="US20230004403A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Applications may have a plurality of parameters that may control performance of the applications. The parameters may be tuned to optimize performance of the applications.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0003" num="0002">Features of the present disclosure are illustrated by way of example and not limited in the following figure(s), in which like numerals indicate like elements, in which:</p><p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a block diagram of an example apparatus that may receive information regarding a performance characteristic of an application, calculate a rate of change in the performance characteristic, and tune values of a set of parameters for the application based on the calculated rate of change in the performance characteristic;</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a block diagram of an example system in which the example apparatus depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented;</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref> depict graphs of example occurrences of events of an application and example lines that represent rates of change in the occurrence of the events of the application;</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a flow diagram of an example method for calculating a rate of change in occurrences of a plurality of events of an application and tuning values of a set of parameters for the application based on the calculated rate of change; and</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of an example non-transitory computer-readable medium that may have stored thereon machine readable instructions to detect events of an application, calculate a rate of change in levels associated with the events of the application, and tune values of a set of parameters for the application in proportion to the calculated rate of change in the levels associated with the events of the application.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0003" level="1">DETAILED DESCRIPTION</heading><p id="p-0009" num="0008">For simplicity and illustrative purposes, the present disclosure is described by referring mainly to examples. In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It will be readily apparent however, that the present disclosure may be practiced without limitation to these specific details. In other instances, some methods and structures have not been described in detail so as not to unnecessarily obscure the present disclosure.</p><p id="p-0010" num="0009">Throughout the present disclosure, the terms &#x201c;a&#x201d; and &#x201c;an&#x201d; are intended to denote at least one of a particular element. As used herein, the term &#x201c;includes&#x201d; means includes but not limited to, the term &#x201c;including&#x201d; means including but not limited to. The term &#x201c;based on&#x201d; means based at least in part on.</p><p id="p-0011" num="0010">Generally, applications may provide a rich set of customization parameters, which an administrator may manually tune. In many instances, a significant number of performance-related issues may be resolved by changing one or more parameter values for the application. In order to tune the parameters, a user may consult with an administrator to identify the parameter and their values, manually configure them to new values, observe the resulting performance to determine if further tuning is required, and in some cases, perform a system restart for the changes to take effect, which may increase downtime of the application.</p><p id="p-0012" num="0011">Disclosed herein are methods, apparatuses, and computer-readable mediums that may allow for parameters of an application to be auto-tuned by self-learning. In some examples, a processor may dynamically tune values of a set of parameters based on monitored performance characteristics of the application. In these examples, the processor may receive information regarding a performance characteristic of the application during predetermined time periods. By way of particular examples and for purposes of illustration, the information regarding the performance characteristic may be related to a number of caching events. In this example, a trend in the number of caching events may be indicative of performance issues, particularly in an optimal number of threads that may be allocated to the application. For instance, a relatively large increase in the number of caching events may be indicative of insufficient number of threads to process the events. Alternatively, a relatively large decrease in the number of caching events may indicate that there may be more threads allocated to process the events than may be needed. In this manner, the processor may detect performance characteristics of the application to self-learn conditions of the application, and may tune a set of parameters of the application. In some examples, the processor may calculate a rate of change in the performance characteristic over predetermined time periods, and based on a determination that the performance characteristic of the application has changed over the predetermined time periods, the processor may tune values for the set of parameters for the application based on the rate of change of the performance characteristic.</p><p id="p-0013" num="0012">By enabling a processor to dynamically tune a set of parameters for an application, a mean time to repair (MTTR) may be improved by avoiding manual efforts and downtime by automatically tuning the parameters leading to greater efficiency levels. Automated tuning may also reduce potential delays and human errors associated with manual tuning of application parameters, thereby reducing downtime and reducing potential loss of security events. The implementation of the features of the present disclosure may also enhance efficiency of the processor based on tuning of the set of parameters, thereby reducing consumption of energy and computing resources by the processor.</p><p id="p-0014" num="0013">Reference is made to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>A and <b>3</b>B</figref>. <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a block diagram of an example apparatus <b>100</b> that may receive information regarding a performance characteristic of an application, calculate a rate of change in the performance characteristic, and tune values of a set of parameters for the application based on the calculated rate of change in the performance characteristic. <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a block diagram of an example system <b>200</b> in which the example apparatus <b>100</b> depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented. <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref> depict graphs <b>302</b> and <b>304</b> of example occurrences of events of an application and example lines that represent rates of change in the occurrence of the events of the application. It should be understood that the example apparatus <b>100</b> depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the example system <b>200</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and the example graphs <b>302</b> and <b>304</b> depicted in <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref> may include additional features and that some of the features described herein may be removed and/or modified without departing from the scopes of the apparatus <b>100</b>, the system <b>200</b>, and/or the graphs <b>302</b> and <b>304</b>.</p><p id="p-0015" num="0014">The apparatus <b>100</b> may be a server (such as a management server), a node in a network (such as a data center), a personal computer, a laptop computer, a tablet computer, a smartphone, and/or the like. As shown, the apparatus <b>100</b> may include a processor <b>102</b> and a memory <b>110</b>, e.g., a non-transitory computer-readable medium. In some examples, the apparatus <b>100</b> may be a management server in a cloud-based management platform that has stored thereon instructions that may cause the processor <b>102</b> to auto-tune parameters of application programs residing on the apparatus <b>100</b>. As used herein, the terms auto-tune or self-tune may refer to systems in which the system itself may be implemented to optimize internal running parameters in order to maximize efficiency or minimize errors, for instance, without user or administrator intervention.</p><p id="p-0016" num="0015">The processor <b>102</b> may be a semiconductor-based microprocessor, a central processing unit (CPU), an application specific integrated circuit (ASIC), a field-programmable gate array (FPGA), and/or other hardware device. Although the apparatus <b>100</b> is depicted as having a single processor <b>102</b>, it should be understood that the apparatus <b>100</b> may include additional processors and/or cores without departing from a scope of the apparatus <b>100</b>. In this regard, references to a single processor <b>102</b> as well as to a single memory <b>110</b> may be understood to additionally or alternatively pertain to multiple processors <b>102</b> and/or multiple memories <b>110</b>.</p><p id="p-0017" num="0016">The memory <b>110</b> may be an electronic, magnetic, optical, or other physical storage device that contains or stores executable instructions. The memory <b>110</b> may be, for example, Read Only Memory (ROM), flash memory, solid state drive, Random Access memory (RAM), an Erasable Programmable Read-Only Memory (EPROM), an Electrically Erasable Programmable Read-Only Memory (EEPROM), a storage device, an optical disc, or the like. The memory <b>110</b> may be a non-transitory computer-readable medium. The term &#x201c;non-transitory&#x201d; does not encompass transitory propagating signals.</p><p id="p-0018" num="0017">As shown, the memory <b>110</b> may have stored thereon instructions <b>112</b>-<b>116</b> that the processor <b>102</b> may fetch, decode, and execute. Particularly, the processor <b>102</b> may execute the instructions <b>112</b>-<b>116</b> to tune values of a set of parameters for an application <b>214</b>. The instructions <b>112</b>-<b>116</b> may be non-transitory machine-readable instructions (or equivalently, non-transitory computer-readable instructions).</p><p id="p-0019" num="0018">The processor <b>102</b> may fetch, decode, and execute the instructions <b>112</b> to receive information <b>212</b> regarding a performance characteristic of an application <b>214</b> during predetermined time periods. By way of particular example and for purposes of illustration, the information <b>212</b> regarding the performance characteristic is described herein as being information regarding a number of events that are cached during predetermined time periods, also referred to herein as caching events of an application <b>214</b>. It should be understood, however, that the information <b>212</b> regarding the performance characteristic may include various types of information regarding performance trends of the application <b>214</b>. In some examples, the information <b>212</b> regarding the performance characteristic may include information regarding an amount of time to load content, such as, web pages, information regarding temporary file sizes that are allocated, a rate of incoming events, CPU usage, cache utilization percentage, and/or other types of performance characteristics that may represent symptoms of the application <b>214</b>, which may be associated with degraded performance of the application <b>214</b>. In some examples, information <b>212</b> regarding the performance characteristic may include information for a combination of different performance characteristics, such as a combination of memory utilization and CPU utilization, and/or the like. The information <b>212</b> regarding the performance characteristic, which may be detected by the processor <b>102</b> and associated with certain parameters of the application <b>214</b>, may be user-defined, based on testing, modeling, simulations, and/or the like.</p><p id="p-0020" num="0019">The processor <b>102</b> may fetch, decode, and execute the instructions <b>114</b> to calculate a rate of change <b>216</b> in the performance characteristic over the predetermined time periods. In some examples, the information <b>212</b> regarding the performance characteristic may be associated with an event occurring in the application <b>214</b>, and the processor <b>102</b> may calculate the rate of change <b>216</b> in the occurrence of the event in the application <b>214</b>.</p><p id="p-0021" num="0020">Continuing with the example in which the event is a caching event of the application <b>214</b>, the information <b>212</b> may include event counts for the caching events. In this regard, the processor <b>102</b> may cache events of the application <b>214</b> in cases where resources allocated to the application <b>214</b> for processing the event may be limited. As such, a trend in which the processor <b>102</b> increases the number of caching events may indicate that there may be insufficient allocated resources, such as an insufficient number of threads to process the events. Alternatively or additionally, a trend in which the processor <b>102</b> decreases the number of caching events may indicate that there may be more threads allocated to process the events than may be optimal. In some examples, the processor <b>102</b> may compare the change in the number of caching events to predetermined thresholds to identify presence of trends for the events. The predetermined thresholds may be user-defined, based on historical data, experimentation, modeling, and/or the like.</p><p id="p-0022" num="0021">Referring now to <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref>, the processor <b>102</b> may monitor the application <b>214</b> to detect events associated with the application <b>214</b>, such as caching events for the application <b>214</b>, and/or the like. In this example, the processor <b>102</b> may maintain an event count at predetermined time periods. For instance, at each instance of a caching event, the processor <b>102</b> may record the event along with a timestamp. At each of the predetermined time periods, such as at 1 minute, 2 minute, 5 minute, etc., time intervals, the processor <b>102</b> may record an event count of the events occurring during that predetermined time period. For example, as depicted in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, at the 1 minute mark, the processor <b>102</b> may record an event count <b>306</b><i>a </i>representing <b>11</b> events occurring during the first minute, at the 2 minute mark, the processor <b>102</b> may record an event count <b>306</b><i>b </i>representing <b>9</b> events occurring during the second minute, and so on.</p><p id="p-0023" num="0022">The processor <b>102</b> may calculate the rate of change <b>216</b> in the performance characteristic based on the changes in the event counts for the event occurring in the application <b>214</b> among the predetermined time periods, such as event counts <b>306</b><i>a </i>to <b>306</b><i>n</i>. By way of particular example and for purposes of illustration, the processor <b>102</b> may calculate the rate of change <b>216</b> as a linear regression-based line, such as depicted by line <b>310</b> in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>. It should be understood that, while the rate of change <b>216</b> is described herein as being calculated using a linear regression model for purposes of description, the rate of change <b>216</b> may be calculated using other types of models.</p><p id="p-0024" num="0023">The processor <b>102</b> may fetch, decode, and execute the instructions <b>116</b> to tune values of a set of parameters <b>218</b> for the application <b>214</b> based on the calculated rate of change <b>216</b> in the performance characteristic. The processor <b>102</b> may tune the values of the set of parameters <b>218</b> based on a determination that the performance characteristic of the application <b>214</b> has changed over the predetermined time periods. The processor <b>102</b> may execute the application <b>214</b> based on the tuned values of the set of parameters <b>218</b> for the application <b>214</b>.</p><p id="p-0025" num="0024">In some examples, the processor <b>102</b> may increase or decrease the values of the set of parameters <b>218</b> for the application <b>214</b> in proportion to the calculated rate of change <b>216</b> in the performance characteristic based on changes in the event counts <b>306</b><i>a </i>to <b>306</b><i>n </i>for the event occurring in the application <b>214</b> among the predetermined time periods. In some examples, based on the calculated rate of change <b>216</b> being an increase in the rate of change in the performance characteristic, for instance as depicted by the positively sloped line <b>310</b>, the processor <b>102</b> may increase the values of the set of parameters <b>218</b> for the application <b>214</b> in proportion to the increase in the rate of change <b>216</b> in the performance characteristic. In this regard, a relatively greater positive slope of the line <b>310</b> or a value of the rate of change <b>216</b> may correlate with a greater increase in the values of the set of parameters <b>218</b>.</p><p id="p-0026" num="0025">By way of particular example and for purposes of illustration, the information <b>212</b> regarding a performance characteristic of the application <b>214</b> may be memory utilization and the set of parameters <b>218</b> may be memory allocation. In some examples, the processor <b>102</b> may tune the memory allocation value in proportion to a rate of incoming events. For instance, the event may be memory utilization exceeding a predetermined threshold, such as 90% memory utilization. When two occurrences of the memory utilization event are detected 5 minutes apart, the processor <b>102</b> may tune the value for memory allocation to increase by 10%, and when two occurrences of the memory utilization event are detected 2 minutes apart, the processor <b>102</b> may tune the value for memory allocation to be increased by 30%.</p><p id="p-0027" num="0026">In some examples, based on the calculated rate of change <b>216</b> being a decrease in the rate of change <b>216</b> in the performance characteristic, for instance as depicted by the negatively sloped line <b>312</b> in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, the processor <b>102</b> may decrease the values of the set of parameters <b>218</b> for the application <b>214</b> in proportion to the decrease in the rate of change <b>216</b> in the performance characteristic. In this regard, a relatively greater negative slope of the line <b>312</b> or value of the rate of change <b>216</b> may correlate with a greater decrease in the values of the set of parameters <b>218</b>. The amount of change in the set of parameters <b>218</b> correlating to the calculated rate of change <b>216</b> may be user-defined, and may be determined based on testing, modeling, simulations, and/or the like.</p><p id="p-0028" num="0027">In some examples, the set of parameters <b>218</b> for the application <b>214</b> may include a number of threads for the application, a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like. It should be understood that, while for purposes of description the set of parameters <b>218</b> for the application <b>214</b> is described herein as including the number of threads and the size of the memory allocated, the set of parameters <b>218</b> for the application <b>214</b> may include various types and/or groups of parameters for the application <b>214</b>.</p><p id="p-0029" num="0028">In some examples, the processor <b>102</b> may calculate the rate of change <b>216</b> in the number of events that are cached during each of the predetermined time periods, and may change a set of parameters <b>218</b>, such as the number of threads for the application <b>214</b>, the size of memory allocated for the application <b>214</b>, and/or the like, or a combination thereof, based on the calculated rate of change <b>216</b> in the number of events that are cached during each of the predetermined time periods. In some examples, the processor <b>102</b> may change the set of parameters <b>218</b> by an amount in proportion to the value of the rate of change <b>216</b> in the performance characteristic.</p><p id="p-0030" num="0029">In some examples, in response to the values of the set of parameters <b>218</b> for the application <b>214</b> being tuned, the processor <b>102</b> may continue to monitor the application <b>214</b> and may tune additional and/or different parameters of the application <b>214</b>. By way of particular example and for purposes of illustration, the processor <b>102</b> may detect that the change in the set of parameters <b>218</b>, such as that based on the positive rate of change <b>216</b> depicted by the line <b>310</b> as described above, has not resulted in a desired or expected change in the performance of the application <b>214</b>. In such instances, the processor <b>102</b> may receive second information regarding the performance characteristic of the application <b>214</b> and may calculate a second rate of change in the performance characteristic. In some examples, based on the calculated second rate of change in the performance characteristic being the same as the rate of change <b>216</b> in the performance characteristic, the processor <b>102</b> may tune values for a second set of parameters for the application <b>214</b> in proportion to the second rate of change in the performance characteristic. The second set of parameters for the application <b>214</b> may be a different set of parameters than the set of parameters <b>218</b> for the application <b>214</b> that were previously updated.</p><p id="p-0031" num="0030">In some examples, the second information may include one or more than one of caching events, an amount of time to load content such as web pages, information regarding temporary file sizes that are allocated, a rate of incoming events, CPU usage, cache utilization percentage, and/or other types of performance characteristics that may represent symptoms of the application <b>214</b>, which may be associated with degraded performance of the application <b>214</b>. The second set of parameters for the application <b>214</b> may include one or more than one of a number of threads for the application, a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like.</p><p id="p-0032" num="0031">By way of particular example and for purposes of illustration, in a case where the processor <b>102</b> may detect that change in the set of parameters <b>218</b>, such as an increase in thread counts, has not resulted in a desired or expected change in the performance of the application <b>214</b>, the processor <b>102</b> may change a second set of parameters, such as a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like, based on a second set of events. In some examples, in response to a determination that memory utilization remains relatively high, but CPU utilization is within predetermined thresholds, the processor <b>102</b> may increase a value for batch size, batch timeout, memory allocation, thread count, and/or the like.</p><p id="p-0033" num="0032">In some examples, the processor <b>102</b> may determine whether the set of parameters <b>218</b> are parameters for which updates may be applied without an application restart, or parameters for which updates may be applied after an application restart. An indication for whether the set of parameters <b>218</b> for the application <b>214</b> is a type that may require an application restart or a type that may not require an application restart may be user-defined, based on prior knowledge, known application capabilities, testing, modeling, simulations, and/or the like.</p><p id="p-0034" num="0033">The processor <b>102</b> may apply the tuned values of the set of parameters <b>218</b> for the application <b>214</b> without an application restart based on a determination that the set of parameters <b>218</b> does not require an application restart to apply the changes to the set of parameters <b>218</b> for the application <b>214</b>. In some examples, based on a determination that the set of parameters <b>218</b> for the application <b>214</b> may require an application restart to apply changes to the value of the set of parameters <b>218</b> for the application <b>214</b>, the processor <b>102</b> may change the values of the set of parameters <b>218</b> in a configuration file (not shown) associated with the set of parameters <b>218</b> for the application <b>214</b> and may output a notification (not shown) to restart the application <b>214</b>.</p><p id="p-0035" num="0034">In some examples, the application <b>214</b> may be stored and executed on another apparatus, such as a server <b>220</b> or a group of servers <b>220</b> on a network <b>222</b>. In these instances, the information <b>212</b> regarding the performance characteristic of the application <b>214</b> may be distributed among multiple servers <b>220</b>. In some examples, the server <b>220</b> may include a data store <b>224</b> that may store the application <b>214</b> and/or the information <b>212</b> regarding the performance characteristic of the application <b>214</b>. In some examples, the application <b>214</b> may be executed on virtual machines hosted on one or more of the servers <b>220</b>.</p><p id="p-0036" num="0035">Various manners in which the processor <b>102</b> may operate are discussed in greater detail with respect to the method <b>400</b> depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. <figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a flow diagram of an example method <b>400</b> for calculating a rate of change <b>216</b> in occurrences of a plurality of events of an application <b>214</b> and tuning values of a set of parameters <b>218</b> for the application <b>214</b> based on the calculated rate of change <b>216</b>. It should be understood that the method <b>400</b> depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref> may include additional operations and that some of the operations described therein may be removed and/or modified without departing from the scope of the method <b>400</b>. The description of the method <b>400</b> is made with reference to the features depicted in <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>A and <b>3</b>B</figref> for purposes of illustration.</p><p id="p-0037" num="0036">At block <b>402</b>, the processor <b>102</b> may detect a plurality of events of an application, such as the application <b>214</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The plurality of events of the application <b>214</b> may be associated with a performance characteristic of the application <b>214</b>.</p><p id="p-0038" num="0037">At block <b>404</b>, the processor <b>102</b> may calculate a rate of change in occurrences of the plurality of events of the application <b>214</b>, such as the rate of change <b>216</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The rate of change may be a rate in which a number of occurrences of the plurality of events may increase or decrease over predetermined time periods.</p><p id="p-0039" num="0038">At block <b>406</b>, the processor <b>102</b> may tune values of a set of parameters, such as the set of parameters <b>218</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, for the application <b>214</b> based on the calculated rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>. In some examples, the processor <b>102</b> may tune the values of the set of parameters <b>218</b> in proportion to the calculated the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>. The processor <b>102</b> may execute the application <b>214</b> based on the tuned values of the set of parameters <b>218</b> for the application <b>214</b>.</p><p id="p-0040" num="0039">In some examples, the processor <b>102</b> may maintain event counts, such as the event counts <b>306</b><i>a </i>to <b>306</b><i>n </i>depicted in <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref>, for the plurality of events of the application <b>214</b> for the predetermined time periods. The processor <b>102</b> may calculate the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b> based on changes in the event counts <b>306</b><i>a </i>to <b>306</b><i>n </i>for the plurality of events of the application <b>214</b> over the predetermined time periods. The processor <b>102</b> may increase or decrease the values of the set of parameters <b>218</b> for the application <b>214</b> in proportion to the calculated rate of change <b>216</b>, such as that depicted by lines <b>310</b> or <b>312</b> in <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref>, in occurrences of the plurality of events of the application <b>214</b>.</p><p id="p-0041" num="0040">In some examples, based on the calculated rate of change <b>216</b> being an increase in the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>, the processor <b>102</b> may increase the values of the set of parameters <b>218</b> for the application <b>214</b> in proportion to the increase in the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>. In some examples, based on the calculated rate of change <b>216</b> being a decrease in the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>, the processor <b>102</b> may decrease the values of the set of parameters <b>218</b> for the application <b>214</b> in proportion to the decrease in the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>. In some examples, the processor <b>102</b> may increase the values of the set of parameters <b>218</b> based on a decrease in the rate of change <b>216</b>, and vice versa, based on a predetermined relationship that is set between the set of parameters <b>218</b> and the calculated rate of change <b>216</b>.</p><p id="p-0042" num="0041">In some examples, in response to the values of the set of parameters <b>218</b> for the application <b>214</b> being tuned as described previously, the processor <b>102</b> may detect a second plurality of events of the application <b>214</b>. The processor <b>102</b> may calculate a second rate of change in occurrences of the second plurality of events of the application, and may determine whether the second rate of change in occurrences of the second plurality of events is different than the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b>. Based on a determination that the second rate of change in occurrences of the second plurality of events of the application is the same as the rate of change in occurrences of the plurality of events of the application, the processor <b>102</b> may tune values for a second set of parameters for the application <b>214</b> in proportion to the second rate of change in occurrences of the plurality of events of the application <b>214</b>. In some examples, the second plurality of events of the application <b>214</b>, the second rate of change, and the second set of parameters of the application <b>214</b> may be subsequent events and may be similar to the rate of change <b>216</b> and the set of parameters <b>218</b>, as previously described. In this example, the second set of parameters for the <b>214</b> may be a different set of parameters as compared to the previously tuned set of parameters <b>218</b> for the application <b>214</b>.</p><p id="p-0043" num="0042">In some examples, the second plurality of events may include one or more than one of caching events, an amount of time to load content such as web pages, information regarding temporary file sizes that are allocated, a rate of incoming events, a CPU usage value, cache utilization percentage, and/or other types of performance characteristics that may represent symptoms of the application <b>214</b>, which may be associated with degraded performance of the application <b>214</b>. The second set of parameters for the application <b>214</b> may include one or more than one of a number of threads for the application, a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like.</p><p id="p-0044" num="0043">By way of particular example and for purposes of illustration, in a case where the processor <b>102</b> may detect that change in the set of parameters <b>218</b>, such as an increase in thread counts, has not resulted in a desired or expected change in the performance of the application <b>214</b>, the processor <b>102</b> may change a second set of parameters, such as a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like, based on a second set of events. In some examples, in response to a determination that memory utilization remains relatively high, but CPU utilization is within predetermined thresholds, the processor <b>102</b> may increase a value for batch size, batch timeout, memory allocation, thread count, and/or the like.</p><p id="p-0045" num="0044">In some examples, the processor <b>102</b> may determine whether the set of parameters <b>218</b> are parameters that may require an application restart to apply changes to the set of parameters <b>218</b> for the application <b>214</b>. In cases in which updates to the set of parameters <b>218</b> may be applied without an application restart, the processor <b>102</b> may apply the tuned values for the set of parameters <b>218</b> for the application <b>214</b> without first restarting the application <b>214</b>. In some examples, based on a determination that the set of parameters <b>218</b> for the application <b>214</b> requires an application restart to apply changes to the set of parameters <b>218</b> for the application <b>214</b>, the processor may change the values of the set of parameters <b>218</b> for the application <b>214</b> in a configuration file (not shown) associated with the set of parameters <b>218</b> for the application <b>214</b> and may output a notification (not shown) to restart the application <b>214</b>.</p><p id="p-0046" num="0045">In some examples, the plurality of events of the application <b>214</b>, such as the events <b>306</b><i>a </i>to <b>306</b><i>n</i>, may include caching events during predetermined time periods, and the set of parameters <b>218</b> for the application <b>214</b> may include a number of threads for the application, a size of memory allocated for the application, and/or the like, or a combination thereof. The processor <b>102</b> may calculate the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b> based on changes in a number of the caching events during each of the predetermined time periods, such as the increasing or decreasing rate of change <b>216</b> of respective lines <b>310</b> and <b>312</b>, which may be calculated based on the caching events <b>306</b><i>a </i>to <b>306</b><i>n </i>depicted in <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref>. The processor <b>102</b> may change the number of threads for the application <b>214</b>, the size of memory allocated for the application <b>214</b>, and/or the like, or a combination thereof, in proportion to the rate of change in occurrences of the plurality of events of the application <b>214</b>.</p><p id="p-0047" num="0046">In some examples, based on a determination that the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b> may be increasing by a first rate, the processor <b>102</b> may increase a level of a parameter among the set of parameters <b>218</b> by a first amount that may correlate to the first rate. Based on a determination that the rate of change <b>216</b> in occurrences of the plurality of events of the application <b>214</b> may be increasing by a second rate that is greater than the first rate, the processor <b>102</b> may increase the level of the parameter <b>218</b> among the set of parameters by a second amount that correlates to the second rate.</p><p id="p-0048" num="0047">Some or all of the operations set forth in the method <b>400</b> may be included as utilities, programs, or subprograms, in any desired computer accessible medium. In addition, the method <b>400</b> may be embodied by computer programs, which may exist in a variety of forms both active and inactive. For example, they may exist as machine readable instructions, including source code, object code, executable code or other formats. Any of the above may be embodied on a non-transitory computer-readable storage medium.</p><p id="p-0049" num="0048">Examples of non-transitory computer-readable storage media include computer system RAM, ROM, EPROM, EEPROM, and magnetic or optical disks or tapes. It is therefore to be understood that any electronic apparatus capable of executing the above-described functions may perform those functions enumerated above.</p><p id="p-0050" num="0049">Turning now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there is shown a block diagram of an example non-transitory computer-readable medium <b>500</b> that may have stored thereon machine readable instructions to detect events of an application, calculate a rate of change in levels associated with the events of the application, and tune values of a set of parameters for the application in proportion to the calculated rate of change in the levels associated with the events of the application. It should be understood that the computer-readable medium <b>500</b> depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may include additional instructions and that some of the instructions described herein may be removed and/or modified without departing from the scope of the computer-readable medium <b>500</b> disclosed herein. The computer-readable medium <b>500</b> may be a non-transitory computer-readable medium. The term &#x201c;non-transitory&#x201d; does not encompass transitory propagating signals. The description of the non-transitory computer-readable medium <b>500</b> is also made with reference to the features depicted in <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>A and <b>3</b>B</figref> for purposes of illustration. Particularly, the processor <b>102</b> of the apparatus <b>100</b> may execute some or all of the instructions <b>502</b>-<b>508</b> included in the non-transitory computer-readable medium <b>500</b>.</p><p id="p-0051" num="0050">The computer-readable medium <b>500</b> may have stored thereon machine-readable instructions <b>502</b>-<b>508</b> that a processor, such as the processor <b>102</b> depicted in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, may execute. The computer-readable medium <b>500</b> may be an electronic, magnetic, optical, or other physical storage device that contains or stores executable instructions. The computer-readable medium <b>500</b> may be, for example, RAM, EEPROM, a storage device, an optical disc, or the like.</p><p id="p-0052" num="0051">The processor may fetch, decode, and execute the instructions <b>502</b> to detect events of an application, such as the application <b>214</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The events may be associated with a performance characteristic of the application <b>214</b>. The processor may fetch, decode, and execute the instructions <b>504</b> to identify levels associated with the events of the application <b>214</b> for predetermined time periods.</p><p id="p-0053" num="0052">The processor may fetch, decode, and execute the instructions <b>506</b> to calculate a rate of change in the identified levels associated with the events of the application <b>214</b>, such as the rate of change <b>216</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, over the predetermined time periods. The processor may fetch, decode, and execute the instructions <b>508</b> to tune values of a set of parameters for the application <b>214</b>, such as the parameters <b>218</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in proportion to the rate of change <b>216</b> in the levels associated with the events of the application <b>214</b> over the predetermined time periods. The processor may execute the application <b>214</b> based on the tuned values of the set of parameters <b>218</b> for the application <b>214</b>.</p><p id="p-0054" num="0053">In some examples, based on an increase in the rate of change <b>216</b> in the levels associated with the events of the application <b>214</b>, the processor may increase the values for the set of parameters <b>218</b> for the application <b>214</b> in proportion to the increase in the rate of change <b>216</b> in the levels associated with the events of the application <b>214</b>. In some examples, based on a decrease in the rate of change <b>216</b> in the levels associated with the events of the application <b>214</b>, the processor <b>102</b> may decrease the values for the set of parameters <b>218</b> for the application <b>214</b> in proportion to the decrease in the rate of change in the levels associated with the events of the application <b>214</b>.</p><p id="p-0055" num="0054">In some examples, in response to the values for the set of parameters <b>218</b> for the application <b>214</b> being tuned, the processor may detect second events of the application <b>214</b>. The second events may be associated with the performance characteristic of the application <b>214</b>. In this regard, the performance characteristics associated with the second events may be the same as or different than the previously monitored performance characteristics associated with the rate of change <b>216</b>. The processor may calculate a second rate of change in levels associated with the second events of the application. Based on the second rate of change in the levels associated with the second events of the application <b>214</b> being the same as the rate of change <b>216</b> in the levels associated with the events of the application <b>214</b>, the processor may tune values of a second set of parameters for the application <b>214</b> in proportion to the second rate of change in the levels associated with the second events of the application <b>214</b>. In some examples, the second set of parameters for the application <b>214</b> may be different than the set of parameters <b>218</b> for the application <b>214</b>.</p><p id="p-0056" num="0055">In some examples, the second information may include one or more than one of caching events, an amount of time to load content such as web pages, information regarding temporary file sizes that are allocated, a rate of incoming events, CPU usage, cache utilization percentage, and/or other types of performance characteristics that may represent symptoms of the application <b>214</b>, which may be associated with degraded performance of the application <b>214</b>. The second set of parameters for the application <b>214</b> may include one or more than one of a number of threads for the application, a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like.</p><p id="p-0057" num="0056">By way of particular example and for purposes of illustration, in a case where the processor may detect that change in the set of parameters <b>218</b>, such as an increase in thread counts, has not resulted in a desired or expected change in the performance of the application <b>214</b>, the processor may change a second set of parameters, such as a size of a memory allocated for the application <b>214</b>, a batch size, a batch timeout, CPU allocation, a size of cache allocated, a number of web servers allocated, and/or the like, based on a second set of events. In some examples, in response to a determination that memory utilization remains relatively high, but CPU utilization is within predetermined thresholds, the processor may increase a value for batch size, batch timeout, memory allocation, thread count, and/or the like.</p><p id="p-0058" num="0057">In some examples, based on a determination that the set of parameters for the application <b>214</b> does not require an application restart to apply changes to the set of parameters <b>218</b> for the application <b>214</b>, the processor may apply the tuned values of the set of parameters <b>218</b> for the application <b>214</b> without the application restart. In some examples, based on a determination that the set of parameters <b>218</b> for the application <b>214</b> requires the application restart to apply changes to the set of parameters <b>218</b> for the application <b>214</b>, the processor may change the values for the set of parameters <b>218</b> in a configuration file (not shown) associated with the set of parameters <b>218</b> for the application <b>214</b>, and may output a notification (not shown) to restart the application <b>214</b>.</p><p id="p-0059" num="0058">Although described specifically throughout the entirety of the instant disclosure, representative examples of the present disclosure have utility over a wide range of applications, and the above discussion is not intended and should not be construed to be limiting, but is offered as an illustrative discussion of aspects of the disclosure.</p><p id="p-0060" num="0059">What has been described and illustrated herein is an example of the disclosure along with some of its variations. The terms, descriptions and figures used herein are set forth by way of illustration and are not meant as limitations. Many variations are possible within the scope of the disclosure, which is intended to be defined by the following claims&#x2014;and their equivalents&#x2014;in which all terms are meant in their broadest reasonable sense unless otherwise indicated.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus comprising:<claim-text>a processor; and</claim-text><claim-text>a memory on which are stored machine-readable instructions that when executed by the processor, cause the processor to:<claim-text>receive information regarding a performance characteristic of an application during predetermined time periods;</claim-text><claim-text>calculate a rate of change in the performance characteristic over the predetermined time periods; and</claim-text><claim-text>based on a determination that the performance characteristic of the application has changed over the predetermined time periods, tune values of a set of parameters for the application based on the calculated rate of change in the performance characteristic, wherein the application is executed based on the tuned values of the set of parameters for the application.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions cause the processor to:<claim-text>tune the values of the set of parameters for the application in proportion to the calculated rate of change in the performance characteristic.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performance characteristic is associated with an event occurring in the application, and the instructions cause the processor to:<claim-text>maintain event counts for the event occurring in the application during the predetermined time periods;</claim-text><claim-text>calculate the rate of change in the performance characteristic based on changes in the event counts for the event occurring in the application during the predetermined time periods; and</claim-text><claim-text>increase or decrease the values of the set of parameters for the application in proportion to the calculated rate of change in the performance characteristic based on changes in the event counts for the event occurring in the application during the predetermined time periods.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions cause the processor to:<claim-text>based on the calculated rate of change being an increase in the rate of change in the performance characteristic, increase the values of the set of parameters for the application in proportion to the increase in the rate of change in the performance characteristic; and</claim-text><claim-text>based on the calculated rate of change being a decrease in the rate of change in the performance characteristic, decrease the values of the set of parameters for the application in proportion to the decrease in the rate of change in the performance characteristic.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions cause the processor to:<claim-text>in response to the values of the set of parameters for the application being tuned, receive second information regarding the performance characteristic of the application;</claim-text><claim-text>calculate a second rate of change in the performance characteristic; and</claim-text><claim-text>based on the calculated second rate of change in the performance characteristic being the same as the rate of change in the performance characteristic, tune values for a second set of parameters for the application in proportion to the second rate of change in the performance characteristic, the second set of parameters for the application being different than the set of parameters for the application.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions cause the processor to:<claim-text>apply the tuned values of the set of parameters for the application without an application restart.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions cause the processor to:<claim-text>based on a determination that the set of parameters for the application requires an application restart to apply changes to the values of the set of parameters for the application,<claim-text>change the values of the set of parameters in a configuration file associated with the set of parameters for the application; and</claim-text><claim-text>output a notification to restart the application.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information regarding the performance characteristic includes information regarding a number of events that are cached during each of the predetermined time periods, an amount of time to load content, information regarding temporary file sizes that are allocated, a rate of incoming events, CPU usage, cache utilization percentage, or a combination thereof, and the set of parameters for the application includes a number of threads for the application, a size of memory allocated for the application, a batch size, a batch timeout value, CPU allocation, a size of cache allocated, a number of web servers allocated, or a combination thereof, and the instructions cause the processor to:<claim-text>calculate a rate of change in the performance characteristic during each of the predetermined time periods; and</claim-text><claim-text>change the number of threads for the application, the size of memory allocated for the application, the batch size, the batch timeout value, the CPU allocation, the size of cache allocated, the number of web servers allocated, or a combination thereof, in proportion to the calculated rate of change in the performance characteristic during each of the predetermined time periods.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A method comprising:<claim-text>detecting, by a processor, a plurality of events of an application, the plurality of events of the application being associated with a performance characteristic of the application;</claim-text><claim-text>calculating, by the processor, a rate of change in occurrences of the plurality of events of the application; and</claim-text><claim-text>based on the rate of change in occurrences of the plurality of events of the application, tuning, by the processor, values of a set of parameters for the application in proportion to the calculated rate of change in occurrences of the plurality of events of the application, wherein the application is executed based on the tuned values of the set of parameters for the application.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>maintaining event counts for the plurality of events of the application for predetermined time periods;</claim-text><claim-text>calculating the rate of change in occurrences of the plurality of events of the application based on changes in the event counts for the plurality of events of the application over the predetermined time periods; and</claim-text><claim-text>increasing or decreasing the values of the set of parameters for the application in proportion to the calculated rate of change in occurrences of the plurality of events of the application.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>based on the calculated rate of change being an increase in the rate of change in occurrences of the plurality of events of the application, increase the values of the set of parameters for the application in proportion to the increase in the rate of change in occurrences of the plurality of events of the application; and</claim-text><claim-text>based on the calculated rate of change being a decrease in the rate of change in occurrences of the plurality of events of the application, decrease the values of the set of parameters for the application in proportion to the decrease in the rate of change in occurrences of the plurality of events of the application.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>in response to the values of the set of parameters for the application being tuned, detecting a second plurality of events of the application;</claim-text><claim-text>calculating a second rate of change in occurrences of the second plurality of events of the application;</claim-text><claim-text>determining whether the second rate of change in occurrences of the second plurality of events is different than the rate of change in occurrences of the plurality of events of the application; and</claim-text><claim-text>based on a determination that the second rate of change in occurrences of the second plurality of events of the application is the same as the rate of change in occurrences of the plurality of events of the application, tuning values for a second set of parameters for the application in proportion to the second rate of change in occurrences of the plurality of events of the application, the second set of parameters for the application being different than the set of parameters for the application.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>applying the tuned values for the set of parameters for the application without first restarting the application.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>based on a determination that the set of parameters for the application requires an application restart to apply changes to the set of parameters for the application,<claim-text>changing the values of the set of parameters for the application in a configuration file associated with the set of parameters for the application; and</claim-text><claim-text>outputting a notification to restart the application.</claim-text></claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein detecting the plurality of events of the application includes detecting caching events during predetermined time periods, an amount of time to load content, temporary file sizes that are allocated, a rate of incoming events, a CPU usage value, a cache utilization percentage, or a combination thereof, and the set of parameters for the application includes a number of threads for the application, a size of memory allocated for the application, a batch size, a batch timeout value, CPU allocation, a size of cache allocated, a number of web servers allocated, or a combination thereof, the method further comprising:<claim-text>calculating the rate of change in occurrences of the plurality of events of the application during each of the predetermined time periods; and</claim-text><claim-text>changing the number of threads for the application, the size of memory allocated for the application, the batch size, the batch timeout value, the CPU allocation, the size of cache allocated, the number of web servers allocated, or a combination thereof, in proportion to the rate of change in occurrences of the plurality of events of the application.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>based on a determination that the rate of change in occurrences of the plurality of events of the application is increasing by a first rate, increasing a value of a parameter among the set of parameters by a first amount that correlates to the first rate; and</claim-text><claim-text>based on a determination that the rate of change in occurrences of the plurality of events of the application is increasing by a second rate that is greater than the first rate, increasing the value of the parameter among the set of parameters by a second amount that correlates to the second rate.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory computer-readable medium on which is stored machine-readable instructions that, when executed by a processor, cause the processor to:<claim-text>detect events of an application, the events being associated with a performance characteristic of the application;</claim-text><claim-text>identify levels associated with the events of the application for predetermined time periods;</claim-text><claim-text>calculate a rate of change in the identified levels associated with the events of the application over the predetermined time periods; and</claim-text><claim-text>tune values of a set of parameters for the application in proportion to the rate of change in the levels associated with the events of the application over the predetermined time periods, wherein the application is executed based on the tuned values of the set of parameters for the application.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the instructions cause the processor to:<claim-text>based on an increase in the rate of change in the levels associated with the events of the application, increase the values for the set of parameters for the application in proportion to the increase in the rate of change in the levels associated with the events of the application; and</claim-text><claim-text>based on a decrease in the rate of change in the levels associated with the events of the application, decrease the values for the set of parameters for the application in proportion to the decrease in the rate of change in the levels associated with the events of the application.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the instructions cause the processor to:<claim-text>in response to the values for the set of parameters for the application being tuned, detect second events of the application, the second events being associated with the performance characteristic of the application;</claim-text><claim-text>calculate a second rate of change in levels associated with the second events of the application; and</claim-text><claim-text>based on the second rate of change in the levels associated with the second events of the application being the same as the rate of change in the levels associated with the events of the application, tune values of a second set of parameters for the application in proportion to the second rate of change in the levels associated with the second events of the application, the second set of parameters for the application being different than the set of parameters for the application.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the instructions cause the processor to:<claim-text>based on a determination that the set of parameters for the application does not require an application restart to apply changes to the set of parameters for the application,<claim-text>apply the tuned values of the set of parameters for the application without the application restart; and</claim-text></claim-text><claim-text>based on a determination that the set of parameters for the application requires the application restart to apply changes to the set of parameters for the application,<claim-text>change the values for the set of parameters in a configuration file associated with the set of parameters for the application; and</claim-text><claim-text>output a notification to restart the application.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>