<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006867A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006867</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17365620</doc-number><date>20210701</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>25</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>25</main-group><subgroup>03</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>25</main-group><subgroup>062</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>25</main-group><subgroup>03006</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>0626</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>M</subclass><main-group>1</main-group><subgroup>186</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>25</main-group><subgroup>0258</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">FEED FORWARD FILTER EQUALIZER ADAPTATION USING A CONSTRAINED FILTER TAP COEFFICIENT VALUE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NVIDIA Corporation</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Balan</last-name><first-name>Vishnu</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Aziz</last-name><first-name>Pervez Mirza</first-name><address><city>Dallas</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Gau</last-name><first-name>Guo Hau</first-name><address><city>Zhubei City</city><country>TW</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A feed forward equalizer including a first set of filter taps having a first set of filter tap coefficients to be adapted and a second set of one or more filter taps having one or more filter tap coefficients to be constrained. The feed forward equalizer includes an adaptation component to determine a set of adapted filter tap coefficient values corresponding to the first set of filter tap coefficients and a constraint function component to determine a constrained filter tap coefficient value for the second set of the one or more filter taps having the one or more filter tap coefficients to be constrained using a constraint function based on at least a portion of the set of adapted filter tap coefficient values. The feed forward equalizer generates, based at least in part on the constrained filter tap coefficient value, an equalized signal including a set of estimated symbol values.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="79.67mm" wi="158.75mm" file="US20230006867A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="228.43mm" wi="155.11mm" orientation="landscape" file="US20230006867A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.88mm" wi="140.29mm" orientation="landscape" file="US20230006867A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="247.48mm" wi="147.32mm" orientation="landscape" file="US20230006867A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="228.68mm" wi="150.45mm" orientation="landscape" file="US20230006867A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="249.26mm" wi="147.07mm" orientation="landscape" file="US20230006867A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="204.05mm" wi="150.20mm" orientation="landscape" file="US20230006867A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="232.49mm" wi="164.17mm" orientation="landscape" file="US20230006867A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="229.19mm" wi="144.02mm" file="US20230006867A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="240.37mm" wi="152.06mm" file="US20230006867A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">At least one embodiment pertains to processing resources used to perform high-speed communications. For example, at least one embodiment pertains to technology for optimizing a feed forward equalizer (FFE) used in a communication channel to reduce intersymbol interference (ISI).</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Communication systems employ a modulation scheme (e.g., a pulse amplitude modulation (PAM) scheme such as PAM2, PAM4, PAM8, PAM16, etc.) for the transmission of signals from a transmitter to a receiver via a communication channel or medium (e.g., cables, printed circuit boards, optical fibers, etc.). The use of PAM modulation results in the need for a communication channel to optimize equalization of the signal to achieve a desired bit error ratio (BER). A typical digital signal processing (DSP)-based receiver equalizes a received signal using a receiver (RX) feed forward equalizer (FFE) having a multi-tap adaptive finite impulse response (FIR) filter. The FIR filter of the RX FFE employs multiple taps, each associated with a weight or &#x201c;filter tap coefficient&#x201d; to adjust the filter's response to compensate for unknown factors and elements of the communication medium between the transmitter and the receiver.</p><p id="p-0004" num="0003">The RX FFE may employ an adaptation scheme to provide a means to optimize the filter tap coefficients or weights autonomously. This practice is useful not only for unknown channels but also to compensate for variations in device characteristics over time, such as temperature and device aging. The equalization performed by the RX FFE, though needed, can come at the cost of enhancing the noise associated with the data signal. The noise enhancement penalty associated with the equalization performed by a typical RX FFE using conventional adaptation schemes results in an undesired BER. In addition, conventional adaptation schemes may result in less robust adaptation when the RX FFE and clock data recovery (CDR) are jointly adapted.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0005" num="0004">Various embodiments in accordance with the present disclosure will be described with reference to the drawings, in which:</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates an example communication system, in accordance with at least some embodiments.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates a block diagram of an exemplary communication system employing an example modulation scheme, in accordance with at least some embodiments.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example device including a constrained feed forward equalizer to perform adaptation processing of filter tap coefficients, in accordance with at least some embodiments.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example constrained feed forward equalizer, in accordance with at least some embodiments.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a block diagram of an exemplary multi-tap digital filter structure of a constrained feed forward equalizer, in accordance with at least some embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an exemplary constrained feed forward equalizer including an adaptation component and a constraint function component, in accordance with at least some embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example generation of a set of adapted filter tap coefficient values by an adaptation component and a constrained filter tap coefficient value by a constraint function component for a set of filter taps of a multi-tap digital filter structure, in accordance with at least some embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a method of generating an equalized signal based on a set of adjusted filter tap coefficient values and constrained filter tap coefficient value of filter taps of a multi-tap digital filter structure of a receiver in a communication system, in accordance with at least some embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example computer system including a wireless transceiver including a constrained feed forward equalizer, in accordance with at least some embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0015" num="0014">As described above, desired BER performance targets cannot be met by a typical feed forward equalizer (FFE) performing noise-enhancing equalization using a multi-tap RX FFE employing a standard adaptation scheme (e.g., a least mean squared (LMS) adaptation scheme or a zero-forcing (ZF) adaptation scheme) that allows all taps except for the &#x201c;main&#x201d; tap or cursor tap to adapt. Advantageously, aspects of the present disclosure are directed to a multi-tap RX FFE configured to perform a constrained FFE adaptation to adapt a set of filter tap coefficient values using a first adaptation scheme (e.g., an LMS adaptation scheme, a ZF adaptation scheme, etc.) to produce a set of adapted filter tap coefficient values, where one or more designated or key filter tap coefficient values (also referred to in the singular form as a &#x201c;designated tap value&#x201d; or &#x201c;key tap value&#x201d;) are not adapted using the first adaptation scheme or algorithm. According to embodiments, the RX FFE computes the &#x201c;constrained&#x201d; key filter tap coefficient value using a constraint function based on at least a portion of the adapted filter tap coefficient values. The constrained adaptation where the key tap value is not adapted using a first adaptation scheme but instead is computed using the constraint function based on the adapted filter tap coefficient values of other filter taps provides for settled tap values while providing the desired equalization within the frequency bandwidth of interest. The equalization achieved using the constrained adaptation of the present disclosure achieves a roll-off (i.e., low-pass behavior) at frequencies higher than the signal bandwidth, which allows for high-frequency noise to be attenuated to minimize the noise enhancement penalty and achieve an improved better bit error rate. In addition, the constrained adaptation schemes achieves a more robust adaptation when the RX FFE and clock data recovery (CDR) are jointly adapted. It is noted that although the present disclosure includes examples relating to a receiver-side FFE (e.g., an RX FFE), it is to be appreciated that the constrained FFE described herein can be employed on the transmitter-side of the communications systems (e.g., a TX FFE).</p><p id="p-0016" num="0015">Embodiments of the present application allow for enhanced noise management performance while controlling a sampling phase relative to a clock data recovery (CDR) settled sample point. According to embodiments, the computation of the constraint function with respect to the key tap value can be performed with an offset (e.g., a programmable constant value) which changes to enable the CDR to sample relative to a nominal sampling point without this offset. As an example, the key filter tap coefficient value can be computed from a linear sum of one or more of the adjusted filter tap coefficient values corresponding to the other filter taps.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates an example communication system <b>100</b> according to at least one example embodiment. The system <b>100</b> includes a device <b>110</b>, a communication network <b>108</b> including a communication channel <b>109</b>, and a device <b>112</b>. In at least one example embodiment, devices <b>104</b> and <b>112</b> correspond to one or more of a Personal Computer (PC), a laptop, a tablet, a smartphone, a server, a collection of servers, or the like. In some embodiments, the devices <b>104</b> and <b>112</b> may correspond to any appropriate type of device that communicates with other devices also connected to a common type of communication network <b>108</b>. According to embodiments, the receiver <b>104</b> of devices <b>110</b> or <b>112</b> may correspond to a graphics processing unit (GPU), a switch (e.g., a high-speed network switch), a network adapter, a central processing unit (CPU), etc. As another specific but non-limiting example, the devices <b>104</b> and <b>112</b> may correspond to servers offering information resources, services and/or applications to user devices, client devices, or other hosts in the system <b>100</b>.</p><p id="p-0018" num="0017">Examples of the communication network <b>108</b> that may be used to connect the devices <b>104</b> and <b>112</b> include an Internet Protocol (IP) network, an Ethernet network, an InfiniBand (IB) network, a Fibre Channel network, the Internet, a cellular communication network, a wireless communication network, combinations thereof (e.g., Fibre Channel over Ethernet), variants thereof, and/or the like. In one specific, but non-limiting example, the communication network <b>108</b> is a network that enables data transmission between the devices <b>104</b> and <b>112</b> using data signals (e.g., digital, optical, wireless signals).</p><p id="p-0019" num="0018">The device <b>104</b> includes a transceiver <b>116</b> for sending and receiving signals, for example, data signals. The data signals may be digital or optical signals modulated with data or other suitable signal for carrying data.</p><p id="p-0020" num="0019">The transceiver <b>116</b> may include a digital data source <b>120</b>, a transmitter <b>102</b>, a receiver <b>104</b>, and processing circuitry <b>132</b> that controls the transceiver <b>116</b>. The digital data generator <b>120</b> may include suitable hardware and/or software for outputting data in a digital format (e.g., in binary code and/or thermometer code). The digital data output by the digital data source <b>120</b> may be retrieved from memory (not illustrated) or generated according to input (e.g., user input).</p><p id="p-0021" num="0020">The transmitter <b>124</b> includes suitable software and/or hardware for receiving digital data from the digital data source <b>120</b> and outputting data signals according to the digital data for transmission over the communication network <b>108</b> to a receiver <b>104</b> of device <b>112</b>. Additional details of the structure of the transmitter <b>124</b> are discussed in more detail below with reference to the figures.</p><p id="p-0022" num="0021">The receiver <b>104</b> of device <b>110</b> and device <b>112</b> may include suitable hardware and/or software for receiving signals, for example, data signals from the communication network <b>108</b>. For example, the receiver <b>104</b> may include components for receiving processing signals to extract the data for storing in a memory, as described in detail below with respect to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>-<figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0023" num="0022">The processing circuitry <b>132</b> may comprise software, hardware, or a combination thereof. For example, the processing circuitry <b>132</b> may include a memory including executable instructions and a processor (e.g., a microprocessor) that executes the instructions on the memory. The memory may correspond to any suitable type of memory device or collection of memory devices configured to store instructions. Non-limiting examples of suitable memory devices that may be used include Flash memory, Random Access Memory (RAM), Read Only Memory (ROM), variants thereof, combinations thereof, or the like. In some embodiments, the memory and processor may be integrated into a common device (e.g., a microprocessor may include integrated memory). Additionally or alternatively, the processing circuitry <b>132</b> may comprise hardware, such as an application specific integrated circuit (ASIC). Other non-limiting examples of the processing circuitry <b>132</b> include an Integrated Circuit (IC) chip, a Central Processing Unit (CPU), a General Processing Unit (GPU), a microprocessor, a Field Programmable Gate Array (FPGA), a collection of logic gates or transistors, resistors, capacitors, inductors, diodes, or the like. Some or all of the processing circuitry <b>132</b> may be provided on a Printed Circuit Board (PCB) or collection of PCBs. It should be appreciated that any appropriate type of electrical component or collection of electrical components may be suitable for inclusion in the processing circuitry <b>132</b>. The processing circuitry <b>132</b> may send and/or receive signals to and/or from other elements of the transceiver <b>116</b> to control overall operation of the transceiver <b>116</b>.</p><p id="p-0024" num="0023">The transceiver <b>116</b> or selected elements of the transceiver <b>116</b> may take the form of a pluggable card or controller for the device <b>110</b>. For example, the transceiver <b>116</b> or selected elements of the transceiver <b>116</b> may be implemented on a network interface card (NIC).</p><p id="p-0025" num="0024">The device <b>112</b> may include a transceiver <b>136</b> for sending and receiving signals, for example, data signals over a channel <b>109</b> of the communication network <b>108</b>. The same or similar structure of the transceiver <b>116</b> may be applied to transceiver <b>136</b>, and thus, the structure of transceiver <b>136</b> is not described separately.</p><p id="p-0026" num="0025">Although not explicitly shown, it should be appreciated that devices <b>110</b> and <b>112</b> and the transceivers <b>116</b> and <b>120</b> may include other processing devices, storage devices, and/or communication interfaces generally associated with computing tasks, such as sending and receiving data.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates a block diagram of an exemplary communication system <b>100</b> employing a PAM modulation scheme. In the example shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a PAM level-4 (PAM4) modulation scheme is employed with respect to the transmission of a signal (e.g., digitally encoded data) from a transmitter (TX) <b>102</b> to a receiver (RX) <b>104</b> via a communication channel <b>106</b> (e.g., a transmission medium). In this example, the transmitter <b>102</b> receives <b>101</b> an input data (i.e., the input data at time n is represented as &#x201c;a(n)&#x201d;), which is modulated in accordance with a modulation scheme (e.g., PAM4) and sends <b>103</b> the signal a(n) including a set of data symbols (e.g., symbols &#x2212;3, &#x2212;1, 1, 3, wherein the symbols represent coded binary data). It is noted that while the use of the PAM4 modulation scheme is described herein by way of example, other data modulation schemes can be used in accordance with embodiments of the present disclosure, including for example, a non-return-to-zero (NRZ) modulation scheme, PAM8, PAM16, etc. For example, for a non-return to zero (NRZ)-based system, the transmitted data symbols consist of symbols &#x2212;1 and 1, with each symbol value representing a binary bit. This is also known as a PAM level-2 or PAM2 system as there are 2 unique values of transmitted symbols. Typically a binary bit <b>0</b> is encoded as &#x2212;1, and a bit <b>1</b> is encoded as 1 as the PAM2 values.</p><p id="p-0028" num="0027">In the example shown, the PAM4 modulation scheme uses four (4) unique values of transmitted symbols to achieve higher efficiency and performance. The four levels are denoted by symbol values &#x2212;3, &#x2212;1, 1, 3, with each symbol representing a corresponding unique combination of binary bits (e.g., 00, 01, 10, 11).</p><p id="p-0029" num="0028">The communication channel <b>106</b> is a destructive medium in that the channel acts as a low pass filter which attenuates higher frequencies more than it attenuates lower frequencies and introduces intersymbol interference (ISI). The communication channel <b>106</b> can be over serial links (e.g., a cable, printed circuit boards (PCBs) traces, copper cables, optical fibers, or the like), read channels for data storage (e.g., hard disk, flash solid-state drives (SSDs), high-speed serial links, deep space satellite communication channels, applications, or the like. As described above, the communication channel <b>106</b> introduces ISI to the transmitted data at the channel output.</p><p id="p-0030" num="0029">The receiver (RX) <b>104</b> includes an FFE (also referred to as the &#x201c;RX FFE&#x201d;) <b>108</b>, which is a circuit configured as a transversal filter to compensate for frequency-dependent loss caused by the communication channel <b>106</b>. Equalizers in the receiver <b>104</b> are used to mitigate the effects of ISI. Examples of equalizers are continuous-time linear equalizer (CTLE), sampled data finite impulse response (FIR) filter, decision feed forward equalization (DFFE), or decision feedback equalization (DFE). One or more of these equalizers may be optionally used in the communication system <b>100</b>. In at least one embodiment, the equalizer in the receiver <b>104</b> can mitigate the effects of ISI by sampling the channel output at desirable time instances to properly detect the received data such that the recovered data is error-free or received with a very low error rate.</p><p id="p-0031" num="0030">Accordingly, the receiver <b>104</b> compensates for the loss or noise introduced by the channel <b>106</b> by performing equalization to recover the transmitted data and establish the received data (i.e., the received data at time n is represented as &#x201c;v(n)&#x201d;). The equalization enables the receiver <b>104</b> to generate an output <b>107</b> of an equalized received signal, including a set of estimated symbol values at time n as v(n). In the example, the RX FFE <b>108</b> equalizes the received signal to generate received symbols [v(n)=&#x2212;3, &#x2212;1, 1, 3]. Aspects of the receiver <b>104</b> and RX FFE <b>108</b> (also referred to as a &#x201c;constrained RX FFE&#x201d; according to embodiments of the present disclosure are described in greater detail with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example receiver <b>204</b> including a constrained RX FFE <b>208</b> to perform adaptation processing of filter tap coefficients in accordance with embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the receiver <b>204</b> may include components associated with processing the receiver input to generate the received data v(n). In an embodiment, the receiver <b>204</b> includes an equalizer <b>202</b>, an analog-to-digital converter (ADC) <b>206</b>, the constrained RX FFE <b>208</b>, a data detector <b>210</b>, a decoder <b>212</b>, and a clock data recovery (CDR) engine <b>214</b>. Once the transmitted data is passed through the communication channel (e.g., channel <b>106</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), the receiver <b>200</b> process the channel output (i.e., the receiver input) using one or more equalizers (e.g., equalizer <b>202</b> and the constrained RX FFE <b>208</b>) to mitigate the effects of ISI and sample the channel output at desirable time instances to properly detect the received data v(n) such that the recovered data is error-free or recovered with a very low error rate. Example equalizers <b>202</b> may include a continuous-time linear equalizer (CTLE), a sampled data finite impulse response (FIR) filter (also known as an RX FFE), or a decision feedback equalizer (DFE).</p><p id="p-0033" num="0032">In the example described herein, equalizer <b>202</b> includes a CTLE configured to perform an initial equalization of the received signal (i.e., the receiver input), such as, for example, frequency equalization, gain adjustment, etc. According to embodiments, the CTLE is a linear filter applied at the receiver <b>200</b> that attenuates low-frequency signal components, amplifies components around the Nyquist frequency, and filters off higher frequencies. A CTLE gain can be adjusted to optimize the ratio of low-frequency attenuation to high-frequency amplification.</p><p id="p-0034" num="0033">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, data from the equalizer <b>202</b> can be sampled using a clock data recovery (CDR) engine <b>214</b>. In an embodiment, an adaptive loop is established in which samples are taken using a sampling phase <b>204</b> adjusted by the CDR engine <b>214</b> and passed as an input <b>205</b> to the ADC <b>206</b> to generate a digital signal (i.e., the digital signal at time n is represented as &#x201c;w(n)&#x201d;) which is provided as an input <b>207</b> to the constrained RX FFE <b>208</b> to perform further equalization in the digital domain. In an embodiment, the constrained RX FFE <b>208</b> generates an &#x201c;equalized&#x201d; output (i.e., the data detector <b>210</b> output at time n is represented as &#x201c;y(n)&#x201d;), which is provided as an input <b>209</b> to the data detector <b>210</b>.</p><p id="p-0035" num="0034">In an example, the output of the constrained RX FFE <b>208</b> at time n (i.e., y(n)) includes the data symbols and all related impairments or noise introduced by the channel (e.g., noise due to the effects of ISI or other noise sources). In an embodiment, the output of the constrained RX FFE <b>208</b> can be represented by the following expression:</p><p id="p-0036" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>(<i>n</i>)=<i>a</i>(<i>n</i>)+<i>a</i>(<i>n&#x2212;</i>1)+<i>q</i>(<i>n</i>);&#x2003;&#x2003;Expression 1<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0037" num="0000">where y(n) is the output at symbol time n, a(n) and a(n&#x2212;1) are the transmitted data symbols at symbol times n and n&#x2212;1, respectively, and q(n) is the combination of residual noise and inter symbol interference and other residual impairments at symbol time n. For example, for PAM4 transmitted symbols of a(n, n&#x2212;1)=&#x2212;3, &#x2212;1, 1, 3, y(n) can includes values 6.1, &#x2212;2.9, 1.2, &#x2212;5.9, etc. which represent the addition of corresponding PAM4 modulation symbol value a(n) and a(n&#x2212;1) as impacted by the channel noise (e(n)) in accordance with Expression 1. In an embodiment, the output of the constrained RX FFE <b>208</b> is provided to the data detector <b>210</b>.</p><p id="p-0038" num="0035">In an embodiment, the data detector <b>210</b> is configured to perform detection on the signal to recover the actual data that was transmitted. In an embodiment, the data detector <b>210</b> is configured to produce detected data bits or symbols (represented as <b>9</b>(<i>n</i>) at time n in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). For example, the data detector <b>210</b> can include one or more latches which &#x201c;slice&#x201d; a voltage at a programmable threshold or an ADC, which produces a multi-bit output from which the data can be detected and from which an estimate of the error (i.e., estimated error at time n is represented e(n)). In another example, the data detector <b>210</b> can include a maximum likelihood sequence detector (also known as a Viterbi detector) which can be used in conjunction with a preceding ADC.</p><p id="p-0039" num="0036">In an embodiment, the output of the data detector <b>210</b> generates the decision estimates based on the impaired partial response symbols (i.e., y(n)+e(n)) to generate the estimated data symbol (&#x177;(n)) and the estimated error component e(n). In an embodiment, the error (e(n)) is the difference between the received symbol (y(n)) and the decision estimate (&#x177;(n)), as represented by the following expression:</p><p id="p-0040" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>e</i>(<i>n</i>)=<i>y</i>(<i>n</i>)&#x2212;<i>&#x177;</i>(<i>n</i>)&#x2003;&#x2003;Expression 2<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0041" num="0037">In this example, the digital detector <b>210</b> performs a slicing operation to convert the y(n)=6.1 to a decision estimate y(n)=6, thereby reflecting a filtered or equalized version of the equalized input signal. In an embodiment, the data detector <b>210</b> can be a latch or slicer which slices a voltage at a programmable threshold or an analog to digital converter (ADC), which produces a multi-bit output from which the data can be detected and from which an estimate of the error in the detected data can also be computed. For example, for a received symbol y(n)=6.1 and a decision estimate &#x177;(n)=6.0, the error estimate e(n)=0.1. In this example, the data detector <b>210</b> converts the noisy received data (equalized data) into discrete detected data &#x177;(n) (e.g., &#x2212;6, &#x2212;4, &#x2212;2, 0, 2, 4, 6) and provides a metric of the noise or error level (i.e., e(n)).</p><p id="p-0042" num="0038">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the &#x177;(n) and e(n) are fed back (i.e., feedback loop <b>213</b>) to the CDR engine <b>214</b> for use by the CDR engine <b>214</b> to change or adjust the phase of the sampling for the ADC <b>206</b>. In an embodiment, the data detector <b>210</b> outputs ideal (&#x177;(n)), actual (y(n)), and error (e(n)) metrics that are fed back via feedback loop <b>213</b> to make an adjustment to the sampling via the CDR engine <b>214</b> (e.g., by changing the rate of the sampling based on fed back metrics) and/or controlling the adaptation of the filter tap coefficient values of the filter taps of the constrained RX FFE <b>208</b>, as described in greater detail below.</p><p id="p-0043" num="0039">In an embodiment, the digital detector <b>210</b> further provides output <b>211</b> to the decoder <b>212</b> configured to map the &#x177;(n) value (e.g., 6.0 in the example above) to a received data value (e.g., v(n)) in accordance with the applicable modulation scheme. For example, for a PAM4-based modulation scheme, the decoder <b>212</b> maps the &#x177;(n) value (e.g., &#x2212;6, &#x2212;4, &#x2212;2, 0, 2, 4, 6) to a corresponding receive data value (e.g., &#x2212;3, &#x2212;1, 1, 3).</p><p id="p-0044" num="0040"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example constrained RX FFE <b>308</b> according to embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the constrained RX FFE <b>308</b> includes a multi-tap digital filter structure <b>320</b>, an adaptation component <b>322</b>, and a constraint function component <b>324</b>. The multi-tap digital filter structure <b>320</b> receives the digital input w(n) (e.g., a multi-bit number) from the ADC <b>206</b> and uses a series of filter taps to generate the output (y(n)) of the constrained RX FFE <b>308</b>. The series of filters are used to &#x201c;tap&#x201d; different points in the delay line and weight the tapped values with a corresponding filter tap coefficient value. In an embodiment, the weighted tap values are summed to generate the output (y(n) of the constrained RX FFE <b>308</b>.</p><p id="p-0045" num="0041">According to embodiments, each filter tap is a two-input multiplier circuit configured to receive a digital signal (e.g., w(n)) and a filter tap weight or coefficient (f(i)) as inputs and multiply those values to generate a filter tap output. In an embodiment, the multi-tap digital filter structure <b>320</b> further includes a summation component to sum the respective outputs of the filter taps to generate the output (y(n)) of the constrained RX FFE <b>308</b>. An example of the multi-tap digital filter structure <b>320</b> is described in greater detail below with respect to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0046" num="0042">According to embodiments, the adaptation component <b>322</b> is configured to execute an adaptation process (e.g., an LMS adaptation process, a ZF adaptation process, etc.) to generate a set of adapted filter tap coefficient values for a portion of the filter taps of the multi-tap digital filter structure <b>320</b>, as described below in greater detail with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>. According to embodiments, the constraint function component <b>324</b> is configured to compute a constrained filter tap coefficient value using a constraint function based on at least a portion of the set of adapted filter tap coefficient values for a designated or &#x201c;key&#x201d; filter tap of the multi-tap digital filter structure <b>320</b>, as described in greater detail below with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0047" num="0043"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a block diagram of an exemplary multi-tap digital filter structure (e.g., multi-tap digital filter structure <b>320</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>) of the constrained RX FFE (e.g., constrained RX FFE <b>308</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>) according to embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the multi-tap digital filter structure <b>420</b> includes a series of filter taps <b>421</b>A, <b>421</b>B, <b>421</b>C, <b>421</b>D, <b>421</b>E, <b>421</b>F . . . <b>421</b>X. In an embodiment, the series of filter taps of the multi-tap digital filter structure <b>420</b> includes a set of &#x201c;pre-cursor&#x201d; taps (taps <b>421</b>A, <b>421</b>B, and <b>421</b>C), a set of &#x201c;post-cursor&#x201d; taps (taps <b>421</b>E, <b>421</b>F . . . <b>421</b>X), and a main tap (<b>421</b>D). The multi-tap FFE digital filter structure <b>420</b> can have any number of post-cursor taps (e.g., where L1 equals the number of post-cursor taps) and any number of pre-cursor taps (e.g., where L2 equals the number of pre-cursor taps). In the example shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, L2=3 such that there are 3 pre-cursor taps (taps <b>421</b>A, <b>421</b>B, and <b>421</b>C).</p><p id="p-0048" num="0044">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the multi-tap FFE filter component <b>420</b> includes a delay line with a series of flip-flop circuits (FF<b>1</b>, FF<b>2</b>, FF<b>3</b>, etc.) corresponding to respective filter taps (e.g., <b>421</b>B, <b>421</b>C, <b>421</b>D, etc.) It is noted that the first pre-cursor tap (<b>421</b>A) receives the digital signal w(n), which is the input to the constrained RX FFE, and as such, no delay FF is associated with pre-cursor tap <b>421</b>A. In an embodiment, FF<b>1</b> of the delay line generates an output of w(n&#x2212;1) which is provided as an input to pre-cursor tap <b>421</b>B, FF<b>2</b> of the delay line generates an output of w(n&#x2212;2) which is provided as an input to pre-cursor tap <b>421</b>C, FF<b>3</b> of the delay line generates an output of w(n&#x2212;3) which is provided as an input to the main tap <b>421</b>D, and so on, as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0049" num="0045">Each filter tap is a two-input multiplier circuit configured to receive a digital signal (e.g., w(n)) and a filter tap weight or coefficient (f) as inputs and multiply those values to generate a filter tap output. In an embodiment, a set of adapted filter tap coefficients are generated by the adaptation component (e.g., the adaptation component <b>322</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>) and provided as inputs f(&#x2212;3), f(&#x2212;2), f(&#x2212;1), f(0), f(2) . . . f(L1). In an embodiment, in the example shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, tap <b>421</b>E is designated as the key tap, and its corresponding filter tap coefficient value f(1) is generated by the constraint function component (e.g., constraint function component <b>324</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>). As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the multi-tap digital filter structure <b>420</b> includes a summation component <b>423</b> to sum the respective outputs of the filter taps to generate the output (y(n)) of the constrained RX FFE (e.g., constrained RX FFE <b>308</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>).</p><p id="p-0050" num="0046">With reference to <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref>, in an embodiment, the output (y(n)) of the constrained RX FFE is represented by the following expression:</p><p id="p-0051" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>(<i>n</i>)=&#x3a3;<sub>l=&#x2212;L2</sub><sup>l=L1</sup>&#x192;(<i>l</i>)<i>w</i>(<i>n&#x2212;</i>1);&#x2003;&#x2003;Expression 3<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0052" num="0000">where &#x192;(l) is the RX FFE tap values generated by the adaptation component (e.g., adaptation component <b>322</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>) and constraint function component (e.g., constraint function component <b>324</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>), w(n) is the input to the constrained RX FFE and L2 and L1 represent the number of &#x201c;pre-cursor&#x201d; taps and &#x201c;post-cursor&#x201d; taps respectively.</p><p id="p-0053" num="0047"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an exemplary constrained RX FFE <b>508</b> including an adaptation component <b>522</b> and a constraint function component <b>524</b> according to embodiments of the present disclosure. The adaptation component <b>522</b> is configured to execute an adaptation process to generate a set of adapted filter tap coefficient values for use by the multi-tap digital filter structure. During the adaptation process, the adaptation component <b>522</b> obtains the lth tap at time n&#x2212;1 (denoted as &#x192;(l,n&#x2212;1)) and obtains the lth tap at time n (denoted as &#x192;(n,l) from &#x192;(l,n&#x2212;1).</p><p id="p-0054" num="0048">In one embodiment, the adaptation component <b>522</b> executes an LMS adaptation process to determine &#x192;(n,l), according to the following expression:</p><p id="p-0055" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x192;(<i>n,l</i>)=&#x192;(<i>n&#x2212;</i>1,<i>l</i>)&#x2212;&#x3bc;*<i>e</i>(<i>n</i>)<i>w</i>(<i>n&#x2212;l</i>);&#x2003;&#x2003;Expression 4<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0056" num="0000">where &#x3bc; is a constant which controls the rate of adaptation of the taps.</p><p id="p-0057" num="0049">In one embodiment, the adaptation component <b>522</b> executes a ZF adaptation process to determine f(n,1), according to the following expression:</p><p id="p-0058" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x192;(<i>n,l</i>)=&#x192;(<i>n&#x2212;</i>1,<i>l</i>)&#x2212;&#x3bc;*<i>e</i>(<i>n</i>)<i>&#x177;</i>(<i>n&#x2212;l</i>);&#x2003;&#x2003;Expression 5<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0059" num="0000">where &#x3bc; is a constant which controls the rate of adaptation of the taps.</p><p id="p-0060" num="0050">In an embodiment, the adaptation component <b>522</b> executes one of the aforementioned adaptation processes (e.g., the LMS adaptation process or the ZF adaptation process) to adapt the filter tap coefficient values for a first set of filter taps of the series of filter taps of the multi-tap digital filter structure. In an embodiment, the first set of filter taps to be adapted by the adaptation component <b>522</b> includes the set of taps of the multi-tap digital filter with the exception of one or more designated or key taps. For example, if tap <b>421</b>E of <figref idref="DRAWINGS">FIG. <b>4</b></figref> is designated as the key tap, then the set of filter tap coefficients values adapted by the adaptation component <b>522</b> includes &#x192;(&#x2212;3), &#x192;(&#x2212;2), &#x192;(&#x2212;1), &#x192;(0), &#x192;(2) . . . &#x192;(L1). As illustrated by this example, the filter tap coefficient value (&#x201c;&#x192;(k)&#x201d;) associated with key tap (e.g., &#x192;(1), where k=1) is not adapted by the adaptation component <b>522</b> since &#x192;(1) corresponds to the key tap <b>421</b>E. In some embodiments, one or more taps may be designated as key taps. In these embodiments, the filter tap coefficient values of the one or more key taps are adapted by the adaptation component <b>524</b>.</p><p id="p-0061" num="0051">In an embodiment, the filter tap coefficient value of the key tap &#x192;(k) is adapted or computed by the constraint function component <b>524</b>. In an embodiment, the constraint function component <b>524</b> adapts or computes &#x192;(k) based on at least a portion of the set of adapted filter tap coefficients using a constraint function (&#x201c;G(x)&#x201d;).</p><p id="p-0062" num="0052">In an embodiment, the constraint function G(x) can be computed according to the following expression:</p><p id="p-0063" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x192;(<i>k</i>)=<i>G</i>(&#x192;(<i>l</i>)), <i>l</i>=at least a portion of the adjusted filter tap coefficients for taps&#x2014;<i>L</i>2 to <i>L</i>1, <i>l </i>unequal to <i>k.</i>&#x2003;&#x2003;Expression 6<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0064" num="0053">In an embodiment, G(x) is the constraint function computed based on at least a portion of the set of adapted filter tap coefficients values (e.g., &#x192;(&#x2212;L2) . . . &#x192;(L1); not including &#x192;(k)).</p><p id="p-0065" num="0054">For example, if the key tap is designated as the first post-cursor tap (i.e., k=1), the corresponding filter tap coefficient value (&#x192;(1)) can be computed by the constraint function component <b>524</b> according to the following constraint function expression:</p><p id="p-0066" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x192;(1)=&#x192;(0)+&#x192;(&#x2212;1)&#x2212;&#x192;(2)+fDTarg;&#x2003;&#x2003;Expression 7<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0067" num="0000">where fDTarg is a programmable offset value. In an embodiment, if one or more characteristics of the channel (e.g., channel <b>106</b>) are known in advance of the adaptation and constraint processing or are determinable in real-time, the fDTarg can be selected based on apriori simulation analysis of channels of various losses. The simulation data can be used to predict a desired or low BER value corresponding to the identified channel loss, and the value of the fDTarg can be selected and programmed to a value which optimizes the BER value. In an embodiment, fDTarg can be optimized by the receiver by sweeping it across an apriori range and measuring a quality metric such as signal to noise ratio (SNR), eye opening metric (EOM) or BER for each value of fDTarg and choosing the value which yields the optimum SNR or BER. Note that varying fDTarg can also shift the sample phase at which the CDR samples in the absence of having any fDTarg applied (fDTarg=0). As such, fDTarg can be optimized using an alternative criterion that optimizes the performance of the CDR without a significant negative impact in BER.</p><p id="p-0068" num="0055">In this example, the constraint function component <b>524</b> can apply G(x) according to Expression 7 to compute f(k) based on the portion of the set of adapted filter tap coefficient values including &#x192;(0), &#x192;(&#x2212;1), and &#x192;(2).</p><p id="p-0069" num="0056">It is noted that fDTarg can have a value of 0, such that &#x192;(1) can be computed by the constraint function component <b>524</b> according to the following constraint function expression:</p><p id="p-0070" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x192;(1)=&#x192;(0)+&#x192;(&#x2212;1)&#x2212;&#x192;(2)&#x2003;&#x2003;Expression 8<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0071" num="0057">In another embodiment, for k=1, the constrained filter tap coefficient value (&#x192;(1)) can be computed by the constraint function component <b>524</b> according to the following constraint function expression:</p><p id="p-0072" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x192;(1)=&#x192;(0)+&#x192;(&#x2212;1)+fDTarg;&#x2003;&#x2003;Expression 9<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0073" num="0058">In this example, the constraint function component <b>524</b> can apply G(x) according to Expression 9 to compute &#x192;(k) based on the portion of the set of adapted filter tap coefficient values, including &#x192;(0) and &#x192;(&#x2212;1).</p><p id="p-0074" num="0059">According to embodiments, the adaptation component <b>522</b> executes the adaptation process (e.g., an LMS adaptation process according to Expression 4 above or a ZF adaptation process according to Expression 5 above) to generate a set of adapted filter tap coefficient values for each of the taps including filter tap coefficients &#x192;(l) (where l does not equal k) and the constraint function component <b>524</b> generates a constrained filter tap coefficient value (&#x192;(k)) for the designated or key tap using a constraint function (G(x)) based on at least a portion of the set of adapted filter tap coefficient values (e.g., at least a portion of &#x192;(&#x2212;L2) to &#x192;(L1); not including &#x192;(k)).</p><p id="p-0075" num="0060"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example of the generation of a set of adapted filter tap coefficient values by an adaptation component <b>622</b> and a constrained filter tap coefficient value by a constraint function component <b>624</b> for a set of filter taps of a multi-tap digital filter structure (e.g., multi-tap digital filter structure <b>320</b> of <figref idref="DRAWINGS">FIG. <b>3</b> or <b>420</b></figref> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>). In the example shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the multi-tap digital filter structure has a set of L1=3 post-cursor taps and corresponding tap coefficients (&#x192;(1), &#x192;(2), &#x192;(3)), a set of L2=3 pre-cursor taps and corresponding tap coefficients (&#x192;(&#x2212;3), &#x192;(&#x2212;2), &#x192;(&#x2212;1)), and a main tap associated with tap coefficient &#x192;(0).</p><p id="p-0076" num="0061">In this example, the first post-cursor tap having tap coefficient &#x192;(1) is designated as the key tap. According to embodiments, the adaptation component <b>622</b> generates a set of filter tap coefficient values for the filter taps &#x192;(&#x2212;3), &#x192;(&#x2212;2), &#x192;(&#x2212;1), &#x192;(0), &#x192;(2), and &#x192;(3) using an adaptation process (e.g., the LMS adaptation process or the ZF adaptation process). In this example, the constraint function component <b>624</b> receives a portion of the set of adjusted filter tap coefficient values (i.e., &#x192;(0), &#x192;(&#x2212;1), and &#x192;(&#x2212;2)) to be used in computing &#x192;(1) (i.e., the filter tap coefficient corresponding to the key tap) using a constraint function &#x192;(k)=G[x]=&#x192;(0)+&#x192;(&#x2212;1)&#x2212;&#x192;(&#x2212;2)+fDTarg, where &#x201c;x&#x201d; represents the set of adapted filter taps used to compute the key tap. In one embodiment, the main tap (&#x192;(0)) is fixed and is not adapted.</p><p id="p-0077" num="0062">As illustrated in this example, the filter tap coefficient value &#x192;(1) of the key tap is not adapted by the adaptation component <b>622</b>, but is instead computed using the constraint function based on at least a portion of the set of adapted filter tap coefficient values (i.e., &#x192;(0), &#x192;(&#x2212;1), and (&#x192;&#x2212;2)). In one embodiment, the filter tap coefficient value &#x192;(1) of the key tap is computed in accordance with the constraint function G[x], wherein f(0) is fixed and the one or more other filter tap coefficients (e.g., f(&#x2212;1), f(&#x2212;2)) are adapted by the adaptation component <b>622</b>.</p><p id="p-0078" num="0063"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a method <b>700</b> of generating an equalized signal based on a set of adjusted filter tap coefficient values and constrained filter tap coefficient value of filter taps of a multi-tap digital filter structure of a receiver in a communication system. The method <b>700</b> can be performed by processing logic comprising hardware, software, firmware, or any combination thereof. In at least one embodiment, the method <b>700</b> is performed by the constrained RX FFE <b>208</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the constrained RX FFE <b>308</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, or the constrained RX FFE <b>508</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>. In at least one embodiment, the method <b>500</b> is performed by various components of the constrained RX FFE <b>208</b>, <b>308</b>, <b>508</b>, as directed by control logic, which is processing logic in some embodiments. According to embodiments, the method <b>700</b> can be performed by a transmitter having an FFE with a multi-tap digital filter, in accordance with the embodiments described herein with reference to a receiver-side FFE and filter. Although shown in a particular sequence or order, unless otherwise specified, the order of the processes can be modified. Thus, the illustrated embodiments should be understood only as examples, and the illustrated processes can be performed in a different order, and some processes can be performed in parallel. Additionally, one or more processes can be omitted in various embodiments. Thus, not all processes are required in every embodiment. Other process flows are possible.</p><p id="p-0079" num="0064">At operation <b>710</b>, the processing logic receives a digital input including a set of bits corresponding to a received signal. In an embodiment, the processing logic of the constrained RX FFE receives the digital input from an ADC of the receiver. In an embodiment, the received signal is transmitted from a transmitter via a channel of a communication system (e.g., as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>)</p><p id="p-0080" num="0065">At operation <b>720</b>, the processing logic determines a set of adapted filter tap coefficient values corresponding to a set of filter tap coefficients associated with a first set of filter taps. In an embodiment, the first set of filter taps includes each of the filter taps of a multi-tap digital filter structure except for a designated key filter tap. In an embodiment, the first set of filter taps includes all of the filter taps of the multi-tap digital filter structure except for the key tap. In an embodiment, the processing logic executes an adaptation process (e.g., the LMS adaptation process or the ZF adaptation process) to determine the set of adapted filter tap coefficient values.</p><p id="p-0081" num="0066">At operation <b>730</b>, the processing logic determines, using a constraint function based on at least a portion of the set of adapted filter tap coefficient values, a constrained filter tap coefficient value for a designated filter tap having a filter tap coefficient to be constrained. In an embodiment, the filter tap coefficient value for the designated or key filter tap (e.g., &#x192;(1) in <figref idref="DRAWINGS">FIG. <b>6</b></figref>) is computed based on the portion of the set of adapted filter tap coefficient values (e.g., &#x192;(0), &#x192;(&#x2212;1), and &#x192;(&#x2212;2) in the example shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>). It is noted that the constraint function G(x) can be executed by the processing logic to compute the constrained filter tap coefficient value for the designated filter tap based on one or more other portions of the set of adjusted filter tap coefficient values (e.g., &#x192;(0) and &#x192;(&#x2212;1) in accordance with the constraint function of Expression 9 above).</p><p id="p-0082" num="0067">At operation <b>740</b>, the processing logic generates, based at least in part on the constrained filter tap coefficient value, an equalized signal comprising a set of estimated symbol values. In an embodiment, the processing logic uses the constrained filter tap coefficient value and the set of adapted filter tap coefficient values to compute corresponding filter tap outputs (e.g., outputs of the filter taps <b>421</b>A, <b>421</b>B, <b>421</b>C . . . <b>421</b>X of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) to be summed (e.g., by summation component <b>423</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>) to generate the equalized signal y(n).</p><p id="p-0083" num="0068"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a computer system <b>800</b>, in accordance with at least one embodiment. In at least one embodiment, computer system <b>800</b> may be a system with interconnected devices and components, an SOC, or some combination. In at least on embodiment, computer system <b>800</b> is formed with a processor <b>802</b> that may include execution units to execute an instruction. In at least one embodiment, computer system <b>800</b> may include, without limitation, a component, such as processor <b>802</b> to employ execution units including logic to perform algorithms for processing data. In at least one embodiment, computer system <b>800</b> may include processors, such as PENTIUM&#xae; Processor family, Xeon&#x2122;, Itanium&#xae;, XScale&#x2122; and/or StrongARM&#x2122;, Intel&#xae; Core&#x2122;, or Intel&#xae; Nervana&#x2122; microprocessors available from Intel Corporation of Santa Clara, Calif., although other systems (including PCs having other microprocessors, engineering workstations, set-top boxes and like) may also be used. In at least one embodiment, computer system <b>800</b> may execute a version of WINDOWS' operating system available from Microsoft Corporation of Redmond, Wash., although other operating systems (UNIX and Linux for example), embedded software, and/or graphical user interfaces, may also be used.</p><p id="p-0084" num="0069">In at least one embodiment, computer system <b>800</b> may be used in other devices such as handheld devices and embedded applications. Some examples of handheld devices include cellular phones, Internet Protocol devices, digital cameras, personal digital assistants (&#x201c;PDAs&#x201d;), and handheld PCs. In at least one embodiment, embedded applications may include a microcontroller, a digital signal processor (DSP), an SoC, network computers (&#x201c;NetPCs&#x201d;), set-top boxes, network hubs, wide area network (&#x201c;WAN&#x201d;) switches, or any other system that may perform one or more instructions. In an embodiment, computer system <b>800</b> may be used in devices such as graphics processing units (GPUs), network adapters, central processing units and network devices such as switch (e.g., a high-speed direct GPU-to-GPU interconnect such as the NVIDIA GH100 NVLINK or the NVIDIA Quantum 2 64 Ports InfiniBand NDR Switch).</p><p id="p-0085" num="0070">In at least one embodiment, computer system <b>800</b> may include, without limitation, processor <b>802</b> that may include, without limitation, one or more execution units <b>807</b> that may be configured to execute a Compute Unified Device Architecture (&#x201c;CUDA&#x201d;) (CUDA&#xae; is developed by NVIDIA Corporation of Santa Clara, Calif.) program. In at least one embodiment, a CUDA program is at least a portion of a software application written in a CUDA programming language. In at least one embodiment, computer system <b>800</b> is a single processor desktop or server system. In at least one embodiment, computer system <b>800</b> may be a multiprocessor system. In at least one embodiment, processor <b>802</b> may include, without limitation, a CISC microprocessor, a RISC microprocessor, a VLIW microprocessor, a processor implementing a combination of instruction sets, or any other processor device, such as a digital signal processor, for example. In at least one embodiment, processor <b>802</b> may be coupled to a processor bus <b>810</b> that may transmit data signals between processor <b>802</b> and other components in computer system <b>800</b>.</p><p id="p-0086" num="0071">In at least one embodiment, processor <b>802</b> may include, without limitation, a Level 1 (&#x201c;L1&#x201d;) internal cache memory (&#x201c;cache&#x201d;) <b>804</b>. In at least one embodiment, processor <b>802</b> may have a single internal cache or multiple levels of internal cache. In at least one embodiment, cache memory may reside external to processor <b>802</b>. In at least one embodiment, processor <b>802</b> may also include a combination of both internal and external caches. In at least one embodiment, a register file <b>806</b> may store different types of data in various registers including, without limitation, integer registers, floating point registers, status registers, and instruction pointer register.</p><p id="p-0087" num="0072">In at least one embodiment, execution unit <b>807</b>, including, without limitation, logic to perform integer and floating point operations, also resides in processor <b>802</b>. Processor <b>802</b> may also include a microcode (&#x201c;ucode&#x201d;) read only memory (&#x201c;ROM&#x201d;) that stores microcode for certain macro instructions. In at least one embodiment, execution unit <b>807</b> may include logic to handle a packed instruction set <b>809</b>. In at least one embodiment, by including packed instruction set <b>809</b> in an instruction set of a general-purpose processor <b>802</b>, along with associated circuitry to execute instructions, operations used by many multimedia applications may be performed using packed data in a general-purpose processor <b>802</b>. In at least one embodiment, many multimedia applications may be accelerated and executed more efficiently by using full width of a processor's data bus for performing operations on packed data, which may eliminate a need to transfer smaller units of data across a processor's data bus to perform one or more operations one data element at a time.</p><p id="p-0088" num="0073">In at least one embodiment, an execution unit may also be used in microcontrollers, embedded processors, graphics devices, DSPs, and other types of logic circuits. In at least one embodiment, computer system <b>800</b> may include, without limitation, a memory <b>820</b>. In at least one embodiment, memory <b>820</b> may be implemented as a DRAM device, an SRAM device, flash memory device, or other memory device. Memory <b>820</b> may store instruction(s) <b>819</b> and/or data <b>821</b> represented by data signals that may be executed by processor <b>802</b>.</p><p id="p-0089" num="0074">In at least one embodiment, a system logic chip may be coupled to processor bus <b>810</b> and memory <b>820</b>. In at least one embodiment, the system logic chip may include, without limitation, a memory controller hub (&#x201c;MCH&#x201d;) <b>816</b>, and processor <b>802</b> may communicate with MCH <b>816</b> via processor bus <b>810</b>. In at least one embodiment, MCH <b>816</b> may provide a high bandwidth memory path <b>818</b> to memory <b>820</b> for instruction and data storage and for storage of graphics commands, data and textures. In at least one embodiment, MCH <b>816</b> may direct data signals between processor <b>802</b>, memory <b>820</b>, and other components in computer system <b>800</b> and to bridge data signals between processor bus <b>810</b>, memory <b>820</b>, and a system I/O <b>822</b>. In at least one embodiment, system logic chip may provide a graphics port for coupling to a graphics controller. In at least one embodiment, MCH <b>816</b> may be coupled to memory <b>820</b> through high bandwidth memory path <b>818</b> and graphics/video card <b>812</b> may be coupled to MCH <b>816</b> through an Accelerated Graphics Port (&#x201c;AGP&#x201d;) interconnect <b>814</b>.</p><p id="p-0090" num="0075">In at least one embodiment, computer system <b>800</b> may use system I/O <b>822</b> that is a proprietary hub interface bus to couple MCH <b>816</b> to I/O controller hub (&#x201c;ICH&#x201d;) <b>830</b>. In at least one embodiment, ICH <b>830</b> may provide direct connections to some I/O devices via a local I/O bus. In at least one embodiment, local I/O bus may include, without limitation, a high-speed I/O bus for connecting peripherals to memory <b>820</b>, a chipset, and processor <b>802</b>. Examples may include, without limitation, an audio controller <b>829</b>, a firmware hub (&#x201c;flash BIOS&#x201d;) <b>828</b>, a wireless transceiver <b>826</b>, a data storage <b>824</b>, a legacy I/O controller <b>823</b> containing a user input interface <b>825</b> and a keyboard interface, a serial expansion port <b>827</b>, such as a USB, and a network controller <b>834</b>. Data storage <b>824</b> may comprise a hard disk drive, a floppy disk drive, a CD-ROM device, a flash memory device, or other mass storage device. In an embodiment, the wireless transceiver <b>826</b> includes a constrained FFE <b>808</b> (e.g., the constrained RX FFE <b>108</b>, <b>208</b>, <b>308</b>, and <b>508</b> of <figref idref="DRAWINGS">FIGS. <b>1</b>B, <b>2</b>, <b>3</b>, and <b>5</b></figref>, respectively.</p><p id="p-0091" num="0076">In at least one embodiment, <figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a system, which includes interconnected hardware devices or &#x201c;chips.&#x201d; In at least one embodiment, <figref idref="DRAWINGS">FIG. <b>8</b></figref> may illustrate an exemplary SoC. In at least one embodiment, devices illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref> may be interconnected with proprietary interconnects, standardized interconnects (e.g., PCIe), or some combination thereof. In at least one embodiment, one or more components of system <b>800</b> are interconnected using compute express link (&#x201c;CXL&#x201d;) interconnects.</p><p id="p-0092" num="0077">Other variations are within spirit of present disclosure. Thus, while disclosed techniques are susceptible to various modifications and alternative constructions, certain illustrated embodiments thereof are shown in drawings and have been described above in detail. It should be understood, however, that there is no intention to limit the disclosure to a specific form or forms disclosed, but on the contrary, the intention is to cover all modifications, alternative constructions, and equivalents falling within the spirit and scope of the disclosure, as defined in appended claims.</p><p id="p-0093" num="0078">Use of terms &#x201c;a&#x201d; and &#x201c;an&#x201d; and &#x201c;the&#x201d; and similar referents in the context of describing disclosed embodiments (especially in the context of following claims) are to be construed to cover both singular and plural, unless otherwise indicated herein or clearly contradicted by context, and not as a definition of a term. Terms &#x201c;comprising,&#x201d; &#x201c;having,&#x201d; &#x201c;including,&#x201d; and &#x201c;containing&#x201d; are to be construed as open-ended terms (meaning &#x201c;including, but not limited to,&#x201d;) unless otherwise noted. &#x201c;Connected,&#x201d; when unmodified and referring to physical connections, is to be construed as partly or wholly contained within, attached to, or joined together, even if there is something intervening. Recitations of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range, unless otherwise indicated herein, and each separate value is incorporated into the specification as if it were individually recited herein. In at least one embodiment, the use of the term &#x201c;set&#x201d; (e.g., &#x201c;a set of items&#x201d;) or &#x201c;subset&#x201d; unless otherwise noted or contradicted by context, is to be construed as a nonempty collection comprising one or more members. Further, unless otherwise noted or contradicted by context, the term &#x201c;subset&#x201d; of a corresponding set does not necessarily denote a proper subset of the corresponding set, but subset and corresponding set may be equal.</p><p id="p-0094" num="0079">Conjunctive language, such as phrases of the form &#x201c;at least one of A, B, and C,&#x201d; or &#x201c;at least one of A, B and C,&#x201d; unless specifically stated otherwise or otherwise clearly contradicted by context, is otherwise understood with the context as used in general to present that an item, term, etc., may be either A or B or C, or any nonempty subset of the set of A and B and C. For instance, in an illustrative example of a set having three members, conjunctive phrases &#x201c;at least one of A, B, and C&#x201d; and &#x201c;at least one of A, B and C&#x201d; refer to any of the following sets: {A}, {B}, {C}, {A, B}, {A, C}, {B, C}, {A, B, C}. Thus, such conjunctive language is not generally intended to imply that certain embodiments require at least one of A, at least one of B and at least one of C each to be present. In addition, unless otherwise noted or contradicted by context, the term &#x201c;plurality&#x201d; indicates a state of being plural (e.g., &#x201c;a plurality of items&#x201d; indicates multiple items). In at least one embodiment, the number of items in a plurality is at least two, but can be more when so indicated either explicitly or by context. Further, unless stated otherwise or otherwise clear from context, the phrase &#x201c;based on&#x201d; means &#x201c;based at least in part on&#x201d; and not &#x201c;based solely on.&#x201d;</p><p id="p-0095" num="0080">Operations of processes described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. In at least one embodiment, a process such as those processes described herein (or variations and/or combinations thereof) is performed under control of one or more computer systems configured with executable instructions and is implemented as code (e.g., executable instructions, one or more computer programs or one or more applications) executing collectively on one or more processors, by hardware or combinations thereof. In at least one embodiment, code is stored on a computer-readable storage medium, for example, in the form of a computer program comprising a plurality of instructions executable by one or more processors. In at least one embodiment, a computer-readable storage medium is a non-transitory computer-readable storage medium that excludes transitory signals (e.g., a propagating transient electric or electromagnetic transmission) but includes non-transitory data storage circuitry (e.g., buffers, cache, and queues) within transceivers of transitory signals. In at least one embodiment, code (e.g., executable code or source code) is stored on a set of one or more non-transitory computer-readable storage media having stored thereon executable instructions (or other memory to store executable instructions) that, when executed (i.e., as a result of being executed) by one or more processors of a computer system, cause a computer system to perform operations described herein. In at least one embodiment, a set of non-transitory computer-readable storage media comprises multiple non-transitory computer-readable storage media and one or more of individual non-transitory storage media of multiple non-transitory computer-readable storage media lack all of the code while multiple non-transitory computer-readable storage media collectively store all of the code. In at least one embodiment, executable instructions are executed such that different instructions are executed by different processors.</p><p id="p-0096" num="0081">Accordingly, in at least one embodiment, computer systems are configured to implement one or more services that singly or collectively perform operations of processes described herein and such computer systems are configured with applicable hardware and/or software that enable the performance of operations. Further, a computer system that implements at least one embodiment of present disclosure is a single device and, in another embodiment, is a distributed computer system comprising multiple devices that operate differently such that distributed computer system performs operations described herein and such that a single device does not perform all operations.</p><p id="p-0097" num="0082">Use of any and all examples, or exemplary language (e.g., &#x201c;such as&#x201d;) provided herein, is intended merely to better illuminate embodiments of the disclosure and does not pose a limitation on the scope of the disclosure unless otherwise claimed. No language in the specification should be construed as indicating any non-claimed element as essential to the practice of the disclosure.</p><p id="p-0098" num="0083">All references, including publications, patent applications, and patents, cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.</p><p id="p-0099" num="0084">In description and claims, terms &#x201c;coupled&#x201d; and &#x201c;connected,&#x201d; along with their derivatives, may be used. It should be understood that these terms may not be intended as synonyms for each other. Rather, in particular examples, &#x201c;connected&#x201d; or &#x201c;coupled&#x201d; may be used to indicate that two or more elements are in direct or indirect physical or electrical contact with each other. &#x201c;Coupled&#x201d; may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other.</p><p id="p-0100" num="0085">Unless specifically stated otherwise, it may be appreciated that throughout specification terms such as &#x201c;processing,&#x201d; &#x201c;computing,&#x201d; &#x201c;calculating,&#x201d; &#x201c;determining,&#x201d; or like, refer to action and/or processes of a computer or computing system, or similar electronic computing device, that manipulate and/or transform data represented as physical, such as electronic, quantities within computing system's registers and/or memories into other data similarly represented as physical quantities within computing system's memories, registers or other such information storage, transmission or display devices.</p><p id="p-0101" num="0086">In a similar manner, the term &#x201c;processor&#x201d; may refer to any device or portion of a device that processes electronic data from registers and/or memory and transform that electronic data into other electronic data that may be stored in registers and/or memory. As non-limiting examples, a &#x201c;processor&#x201d; may be a network device or a MACsec device. A &#x201c;computing platform&#x201d; may comprise one or more processors. As used herein, &#x201c;software&#x201d; processes may include, for example, software and/or hardware entities that perform work over time, such as tasks, threads, and intelligent agents. Also, each process may refer to multiple processes, for carrying out instructions in sequence or in parallel, continuously or intermittently. In at least one embodiment, terms &#x201c;system&#x201d; and &#x201c;method&#x201d; are used herein interchangeably insofar as the system may embody one or more methods and methods may be considered a system.</p><p id="p-0102" num="0087">In the present document, references may be made to obtaining, acquiring, receiving, or inputting analog or digital data into a subsystem, computer system, or computer-implemented machine. In at least one embodiment, the process of obtaining, acquiring, receiving, or inputting analog and digital data can be accomplished in a variety of ways such as by receiving data as a parameter of a function call or a call to an application programming interface. In at least one embodiment, processes of obtaining, acquiring, receiving, or inputting analog or digital data can be accomplished by transferring data via a serial or parallel interface. In at least one embodiment, processes of obtaining, acquiring, receiving, or inputting analog or digital data can be accomplished by transferring data via a computer network from providing entity to acquiring entity. In at least one embodiment, references may also be made to providing, outputting, transmitting, sending, or presenting analog or digital data. In various examples, processes of providing, outputting, transmitting, sending, or presenting analog or digital data can be accomplished by transferring data as an input or output parameter of a function call, a parameter of an application programming interface or inter-process communication mechanism.</p><p id="p-0103" num="0088">Although descriptions herein set forth example embodiments of described techniques, other architectures may be used to implement described functionality, and are intended to be within the scope of this disclosure. Furthermore, although specific distributions of responsibilities may be defined above for purposes of description, various functions and responsibilities might be distributed and divided in different ways, depending on circumstances.</p><p id="p-0104" num="0089">Furthermore, although the subject matter has been described in language specific to structural features and/or methodological acts, it is to be understood that subject matter claimed in appended claims is not necessarily limited to specific features or acts described. Rather, specific features and acts are disclosed as exemplary forms of implementing the claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A device comprising:<claim-text>an analog-to-digital converter to generate a digital output comprising a set of bits corresponding to a received signal; and</claim-text><claim-text>a feed forward equalizer component comprising:<claim-text>a plurality of filter taps comprising a first set of filter taps having a first set of filter tap coefficients to be adapted and a second set of one or more filter taps having one or more filter tap coefficients to be constrained;</claim-text><claim-text>an adaptation component to:<claim-text>receive the digital output; and</claim-text><claim-text>determine a set of adapted filter tap coefficient values corresponding to the first set of filter tap coefficients; and</claim-text></claim-text><claim-text>a constraint function component to:<claim-text>determine a constrained filter tap coefficient value for the second set of the one or more filter taps having the one or more filter tap coefficients to be constrained using a constraint function based on at least a portion of the set of adapted filter tap coefficient values; and</claim-text><claim-text>generate, based at least in part on the constrained filter tap coefficient value, an equalized signal comprising a set of estimated symbol values.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the equalized signal is further based on the set of adapted filter tap coefficient values.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the adaptation component determines the set of adapted filter tap coefficient values based on a least-mean-square (LMS) adaptation process.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the adaptation component determines the set of adapted filter tap coefficient values based on a zero-forcing (ZF) adaptation process.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of filter taps are organized in a sequence comprising a set of pre-cursor filter taps, a main filter tap, and a set of post-cursor filter taps, wherein the second set of the one or more filter taps comprises a first post-cursor tap in a set of post-cursor taps following the main filter tap.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The device of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the constraint function determines the constrained filter tap coefficient value based at least in part on:<claim-text>adding a first adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a first filter tap and a second adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a second filter tap; and</claim-text><claim-text>subtracting a third adapted filter tap coefficient of the set of adapted filter tap coefficient values corresponding to a third filter tap.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the first filter tap comprises the main filter tap, the second filter tap comprises a first pre-cursor filter tap of the set of pre-cursor filter taps, and the third filter tap comprises a second post-cursor filter tap of the set of post-cursor filter taps.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the constrained filter tap coefficient value is further based on adding a constant offset value.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The device of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the constraint function determines the constrained filter tap coefficient value based at least in part on adding a first adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a first filter tap and a second adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a second filter tap.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the first filter tap comprises the main filter tap and the second filter tap comprises a first pre-cursor filter tap, and wherein the constrained filter tap coefficient value is further based on adding a constant offset value.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A feed forward equalizer comprising:<claim-text>a plurality of filter taps comprising a set of filter taps to be adapted and a designated filter tap to be constrained;</claim-text><claim-text>an adaptation component to:<claim-text>determine a set of adapted filter tap coefficient values corresponding to the set of filter taps to be adapted; and</claim-text><claim-text>a constraint function component to determine a constrained filter tap coefficient value for the designated filter tap using a constraint function based on at least a portion of the set of adapted filter tap coefficient values, wherein an equalized signal is generated based at least in part on the set of adapted filter tap coefficient values and the constrained filter tap coefficient value.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The feed forward equalizer of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the adaptation component determines the set of adapted filter tap coefficient values based on one of a least-mean-square (LMS) adaptation process or a zero-forcing (ZF) adaptation process.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The feed forward equalizer of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the plurality of filter taps are organized in a sequence comprising a set of pre-cursor filter taps, a main filter tap, and a set of post-cursor filter taps, wherein the designated filter tap comprises a first post-cursor filter tap in the set of post-cursor filter taps following the main filter tap.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The feed forward equalizer of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the constraint function determines the constrained filter tap coefficient value based at least in part on:<claim-text>adding a first adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a first filter tap and a second adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a second filter tap; and</claim-text><claim-text>subtracting a third adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a third filter tap.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The feed forward equalizer of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the first filter tap comprises the main filter tap, the second filter tap comprises a first pre-cursor filter tap of the set of pre-cursor filter taps, and the third filter tap comprises a second post-cursor filter tap of the set of post-cursor filter taps.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The feed forward equalizer of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the constrained filter tap coefficient value is further based on adding a constant offset value.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The feed forward equalizer of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the constraint function determines the constrained filter tap coefficient value based at least in part on adding a first adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a first filter tap and a second adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a second filter tap.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The feed forward equalizer of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the first filter tap comprises the main filter tap and the second filter tap comprises a first pre-cursor filter tap, and wherein the constrained filter tap coefficient value is further based on adding a constant offset value.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A method comprising:<claim-text>determining, based on a signal, a set of adapted filter tap coefficient values corresponding to a set of filter taps to be adapted of a plurality of filter taps of a multi-tap filter structure;</claim-text><claim-text>determining a constrained filter tap coefficient value for a designated filter tap using a constraint function based on at least a portion of the set of adapted filter tap coefficient values, wherein the designated filter tap comprises a first post-cursor filter tap of the plurality of filter taps; and</claim-text><claim-text>generating an equalized signal based at least in part on the set of adapted filter tap coefficient values and the constrained filter tap coefficient value.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the constraint function determines the constrained filter tap coefficient value by:<claim-text>adding a first adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a first filter tap and a second adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a second filter tap, wherein the first filter tap comprises a main filter tap and the second filter tap comprises a first pre-cursor filter tap;</claim-text><claim-text>subtracting a third adapted filter tap coefficient value of the set of adapted filter tap coefficient values corresponding to a third filter tap, wherein the third filter tap comprises a second post-cursor filter tap of the plurality of filter taps; and</claim-text><claim-text>adding a constant offset value.</claim-text></claim-text></claim></claims></us-patent-application>