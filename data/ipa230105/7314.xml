<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007315A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007315</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17682801</doc-number><date>20220228</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2021-110018</doc-number><date>20210701</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>234</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>845</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>234</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>21</main-group><subgroup>8456</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">STREAMING SERVER, TRANSMISSION METHOD, AND PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>KABUSHIKI KAISHA TOSHIBA</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Mizoguchi</last-name><first-name>Yu</first-name><address><city>Kawasaki Kanagawa</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Gondo</last-name><first-name>Shunichi</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Minematsu</last-name><first-name>Mika</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Maegawa</last-name><first-name>Tomonori</first-name><address><city>Tokyo</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>KABUSHIKI KAISHA TOSHIBA</orgname><role>03</role><address><city>Tokyo</city><country>JP</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">According to one embodiment, a streaming server that outputs chunk data obtained by dividing picture data into chunks as streaming data, comprises a chunk length determination unit, and a data generation unit. The chunk length determination unit that calculates a chunk length which is a time length of the chunk, and the data generation unit that generates the chunk data by dividing the picture data into the chunks in accordance with the chunk length.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="96.27mm" wi="158.75mm" file="US20230007315A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="149.86mm" wi="135.97mm" file="US20230007315A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.54mm" wi="149.10mm" orientation="landscape" file="US20230007315A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="225.04mm" wi="130.22mm" orientation="landscape" file="US20230007315A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="232.24mm" wi="145.71mm" orientation="landscape" file="US20230007315A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="229.79mm" wi="113.45mm" file="US20230007315A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="238.34mm" wi="151.30mm" orientation="landscape" file="US20230007315A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="211.84mm" wi="141.99mm" orientation="landscape" file="US20230007315A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="236.56mm" wi="151.64mm" orientation="landscape" file="US20230007315A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="185.76mm" wi="99.06mm" file="US20230007315A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is based upon and claims the benefit of priority from Japanese Patent Application No. 2021-110018, filed Jul. 1, 2021, the entire contents of which are incorporated herein by reference.</p><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">Embodiments described herein relate generally to a streaming server, a transmission method, and a program for video distribution.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Low-latency video streaming over the Internet is implemented by a method based on the Common Media Application Format (CMAF), which is a low-latency media format specification. In the CMAF, a server divides transmission data into chunks, and a chunk length is generally set based on time and to a fixed length.</p><p id="p-0005" num="0004">However, since picture data that is encoded video frame data generally has a different data size for each frame, a large delay time may occur in reception by a viewer depending on the picture data. The influence may increase depending on factors such as the resolution and frame rate of the distribution program.</p><p id="p-0006" num="0005">An object of the present invention is to provide a streaming server, a transmission method, and a program for streaming video distribution that determine a chunk length for each chunk of streaming data.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a functional block diagram illustrating a configuration example of a system according to an embodiment.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram illustrating a configuration example of streaming data according to an embodiment.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating a data configuration of a segment and a chunk of streaming data according to an embodiment.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a functional block diagram illustrating a configuration example of a streaming data generation unit of a server according to an embodiment.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart illustrating a processing operation example of a streaming data generation unit according to a first embodiment.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating a relationship between server transmission and viewer reception of the streaming data according to the first embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a viewable time of a chunk according to the first embodiment.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating an example of a relationship between a segment and a chunk of streaming data according to the first embodiment.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart illustrating a processing operation example of a streaming data generation unit according to a second embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0016" num="0015">In general, according to one embodiment, a streaming server that outputs chunk data obtained by dividing picture data into chunks as streaming data, comprises a chunk length determination unit, and a data generation unit.</p><p id="p-0017" num="0016">The chunk length determination unit that calculates a chunk length which is a time length of the chunk, and the data generation unit that generates the chunk data by dividing the picture data into the chunks in accordance with the chunk length.</p><p id="p-0018" num="0017">An embodiment will be described with reference to the drawings below.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a functional block diagram illustrating a configuration example of a system according to an embodiment.</p><p id="p-0020" num="0019">A server <b>1</b> is a streaming server that provides streaming content (which may include video, audio, and the like) to a client connected to a network <b>4</b>, and may include, for example, a CPU, a memory, a computer having a communication function, a cloud, and the like. For example, the server <b>1</b> may receive video data (which may include audio data or the like) from a live camera (not illustrated) or the like connected to the network <b>4</b>, output the received video data to the network <b>4</b> as streaming data, and provide the video data to a receiving device <b>2</b> (client) connected to the network <b>4</b>. The server <b>1</b> may include a video encoding unit <b>11</b> for encoding (information source compression encoding) the received video data, and includes a streaming data generation unit <b>10</b> for generating streaming data from the encoded video data and outputting the streaming data to the network <b>4</b>. The server <b>1</b> may receive encoded video data corresponding to the encoded data output from the video encoding unit <b>11</b> from the outside, directly input the received encoded video data to the streaming data generation unit <b>10</b>, and generate and output streaming data.</p><p id="p-0021" num="0020">The receiving device <b>2</b> is a client that receives the streaming data output from the server <b>1</b>, and may include, for example, a CPU, a memory, a computer having a communication function, and the like. As long as the receiving device <b>2</b> has a computer function, a communication function capable of being connected to the network <b>4</b>, and the like, the receiving device <b>2</b> may be a terminal such as a television receiving device of digital broadcasting or a smartphone, for example. The receiving device <b>2</b> can output (present) the streaming content obtained by decoding the received streaming data from a viewer <b>20</b>. The user can view the streaming content by the viewer <b>20</b>. The viewer <b>20</b> is, for example, application software for receiving and displaying and outputting streaming content, and is installed in the receiving device <b>2</b>. The viewer <b>20</b> has a function of a decoder of streaming data, and may be, for example, Media Source Extensions of a browser standard API.</p><p id="p-0022" num="0021">A proxy server <b>3</b> is, for example, a computer having a CPU, a memory, a communication function, and the like connected to the network <b>4</b>, and may have a cache function, a data transfer function, and the like. The data transfer unit <b>30</b> may receive streaming data output from the server <b>1</b> via the network <b>4</b>, store the streaming data in a memory (not illustrated) or the like, and output the stored streaming data to the receiving device <b>2</b> in response to a request.</p><p id="p-0023" num="0022">The network <b>4</b> is a network to which the server <b>1</b>, the receiving device <b>2</b>, the proxy server <b>3</b>, and the like are connected and capable of communicating, and is, for example, the Internet. The network <b>4</b> is not limited to the Internet, and may be a network including a plurality of different networks regardless of wired or radio as long as each device can communicate with each other.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram illustrating a configuration example of streaming data according to the embodiment, and illustrates an example of general picture data, segment, chunk, and the like as a unit of video data and streaming data.</p><p id="p-0025" num="0024">The server <b>1</b> receives, for example, video data output from a live video camera or the like, and the video encoding unit <b>11</b> encodes the received video data to be converted into encoded video data (picture data). Picture data <b>501</b> is an example in which generated pieces of picture data are arranged in an order of reproduction (time), and three types of examples are illustrated as picture data. The I picture, the B picture, and the P picture are general techniques and terms, and have the following features although details are not described. The I picture is a picture completed with one picture. The P picture is a difference image from a preceding I picture, and cannot be decoded unless the preceding I picture is referred to. The B picture cannot be decoded without referring to all the related preceding and succeeding pictures (I picture, B picture, P picture). A group of pictures from an I picture to a next I picture is referred to as a group of pictures (GOP). The picture data <b>501</b> is an example in which a B picture and a P picture are generated between 1 and 16 which are I pictures, and the GOP is 15. In the GOP unit, the GOP can be understood as a unit that can be decoded by always considering the I picture as a start. From the above characteristics, the I picture generally has a larger data amount (data size) than other pictures.</p><p id="p-0026" num="0025">A segment <b>502</b> is a unit that can be decoded in the streaming of the video data, and is an example in a case where one segment includes 1 GOP. Chunks <b>503</b>, <b>504</b> are examples of chunks defined by the Common Media Application Format (CMAF) which is a media format standard. In the chunk, a segment is divided into finer time lengths (generally less than one second) so that video data can be stored. The time length of the chunk may be referred to as a chunk length. The CMAF conforming server outputs and distributes streaming data for each chunk, thereby implementing low-latency video streaming. In the CMAF conforming segment generally used for low latency video distribution, a chunk length is a fixed length. The chunk <b>503</b> is an example in a case where the chunk length is set to a fixed length, and all the chunk lengths in the segment are the same (for example, 0.5 seconds). In general, a user or the like sets the chunk length with a time length (specified in seconds), but the chunk length can be understood as the number of pictures (the number of image frames) transmitted with the set time length. For example, in a case where the chunk length is set to one second, the chunk length can be understood as a value of the image frame rate (the number of transmission image frames per one second). In the present embodiment, the chunk length is a time length, and is determined by the streaming data generation unit <b>10</b> of the server <b>1</b>, for example.</p><p id="p-0027" num="0026">In a case where the chunk length is set to a fixed length, if the type of picture data or the type of media data stored for each chunk is different, the chunk length is the same, but a difference may occur in the data amount (data size). For example, since the data size of the I picture is generally larger than that of the P picture, the data size of the chunk in which the I picture is stored tends to increase as compared with the others (for example, the chunk in which only the P picture is stored). Therefore, the data size is different for each chunk, and there is a possibility that the time required to download the data varies for each chunk. In particular, there is a possibility of causing a large delay in downloading a chunk in which an I picture having a large data size is stored, and further, when a proxy server or the like is interposed, the influence may increase.</p><p id="p-0028" num="0027">In the present embodiment, the chunk length (time length) in the segment is variable, and the server <b>1</b> determines the chunk length for each chunk and generates a chunk of the determined chunk length. The chunk <b>504</b> is an example in a case where the chunk length (time length) in the segment is variable, and there is a possibility that chunks having different chunk lengths are included in the same segment. The chunk length may be defined as the number of image frames instead of time.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating a data configuration of a segment and a chunk of streaming data according to the embodiment, and illustrates a data structure of a segment and a chunk conforming to CMAF. A segment <b>511</b> indicates a configuration of a segment, and in a CMAF conforming segment (CMAF.m4s), one or more chunks are stored subsequently to a header called a segment type box (styp) indicating a type of segment.</p><p id="p-0030" num="0029">The chunk <b>512</b> indicates a configuration of a chunk, and each chunk includes one media data box (mdat) that stores a picture data body and one movie fragment box (moof) that stores meta information regarding the mdat. The moof can include information such as a data size of picture data stored in the mdat of the same chunk. The data size generally includes the data size of the moof. The server <b>1</b> outputs and distributes the streaming data for each chunk, and the viewer <b>20</b> inputs the acquired chunk to the decoding function to output the video content, so that the user can view the video content.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a functional block diagram illustrating a configuration example of a streaming data generation unit of a server according to an embodiment.</p><p id="p-0032" num="0031">The streaming data generation unit <b>10</b> includes: means that receives picture data and meta information thereof for each piece of picture data; a control unit <b>100</b> that determines a chunk length of a chunk that stores the picture data according to the received information; and a package unit <b>120</b> that packages the picture data with the chunk length determined by the control unit <b>100</b> and outputs the packaged picture data as a chunk (or a segment).</p><p id="p-0033" num="0032">The control unit <b>100</b> includes: a data receiving unit <b>110</b> that receives picture data and meta information; a chunk generation determination unit <b>101</b> that determines whether to generate a new chunk based on a data output situation (feedback information) input from a data output unit <b>106</b>; a picture information extraction unit <b>102</b> that extracts picture information (a type of picture, a data size, or the like) from the picture data; a picture buffering unit <b>103</b> that temporarily stores the picture data; a meta information update unit <b>104</b> that updates the meta information based on the feedback information; a chunk length determination unit <b>105</b> that determines or calculates a chunk length for each chunk based on the updated meta information, the picture information, or the like; and the data output unit <b>106</b> that outputs the chunk length and the picture data to the package unit <b>120</b> and outputs the feedback information to the chunk generation determination unit <b>101</b>.</p><p id="p-0034" num="0033">The picture information is information such as a picture type and a data size, and may be extracted by analyzing picture data. The meta information is information such as resolution, a frame rate (image frame rate), an average bit rate, and a GOP of video data. The frame rate may be, for example, the number of image frames (the number of pictures) received by the data receiving unit <b>110</b> per one second. The average bit rate may be, for example, a second average of data sizes of all frames (pictures), an average for each chunk, or the like received by the data receiving unit <b>110</b> in the past. The average bit rate may be an average of picture data other than the I picture, and an arbitrary average bit rate can be defined. The feedback information is information generated and output by the data output unit <b>106</b>, and may be, for example, information indicating how many chunks have been output in the segment. The data output unit <b>106</b> may output information on a timing at which the chunk is output to the package unit <b>120</b> as the feedback information.</p><p id="p-0035" num="0034">The package unit <b>120</b> includes a package processing unit <b>121</b> that packages the picture data input from the data output unit <b>106</b> (stores the picture data in units of chunks) based on the chunk length received from the data output unit <b>106</b>. Packaging data generated by the package processing unit <b>121</b> is basically data in units of chunks, and the data output according to the output timing of the package processing unit <b>121</b> may be in units of chunks or in units of segments. The package processing unit <b>121</b> outputs the packaging data to a communication unit (not illustrated) or the like, and outputs the packaging data from the communication unit to the network <b>4</b>.</p><heading id="h-0006" level="1">First Embodiment</heading><p id="p-0036" num="0035">In a first embodiment, an example is illustrated in which a server that generates and outputs streaming data determines a chunk length when generating a chunk.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart illustrating a processing operation example of a streaming data generation unit according to the first embodiment.</p><p id="p-0038" num="0037">It is assumed that a user is viewing streaming content provided by the server <b>1</b> on the viewer <b>20</b> of the receiving device <b>2</b>. For the streaming content, for example, video data captured by a live camera is received by the server <b>1</b> via the network <b>4</b>, and is distributed to the receiving device <b>2</b> by the server <b>1</b>. When receiving the video data, the server <b>1</b> encodes the video data by the video encoding unit <b>11</b> to obtain picture data. When receiving the picture data and the meta information, the data receiving unit <b>110</b> inputs the picture data and the meta information to the chunk generation determination unit <b>101</b> (step S<b>101</b>).</p><p id="p-0039" num="0038">The chunk generation determination unit <b>101</b> determines whether to generate a new chunk (step S<b>102</b>). The determination of the generation of the new chunk may be performed based on the picture data and the meta information from the data receiving unit <b>110</b> or the feedback information from the data output unit <b>106</b>. More specifically, the chunk generation determination unit <b>101</b> may determine that the chunk is newly generated when the data output unit <b>106</b> recognizes that the chunk or the segment is output based on the timing at which the chunk or the segment of the feedback information is output. The chunk generation determination unit <b>101</b> may analyze the picture data received by the data receiving unit <b>110</b>, and may determine to newly generate a chunk, for example, when recognizing that a picture (for example, an I picture) having a large data amount has been received. The chunk generation determination unit <b>101</b> may analyze all the picture data received by the data receiving unit <b>110</b>, or may analyze the picture data at an arbitrary timing. The chunk generation determination unit <b>101</b> may set a threshold or the like in advance in a memory (not illustrated) or the like, compare the threshold with the data size of the picture data, and determine the magnitude of the data amount. The chunk generation determination unit <b>101</b> may determine that a new chunk is generated depending on the type of the received picture data. For example, the chunk generation determination unit <b>101</b> may always determine to generate a new chunk when receiving an I picture.</p><p id="p-0040" num="0039">The chunk generation determination unit <b>101</b> may determine whether to generate a new chunk depending on the data output situation when the feedback information related to the data output situation is acquired from the data output unit <b>106</b>. Specifically, in a case where there is a large amount of chunk data stored in a buffer (which may be the picture buffering unit <b>103</b>) (not illustrated) of the data output unit <b>106</b>, the chunk generation determination unit <b>101</b> determines that the data transmission speed to the viewer <b>20</b> is low and determines to generate a new chunk. On the other hand, in a case where the amount of chunk data stored in a buffer (not illustrated) of the data output unit <b>106</b> is small, the chunk generation determination unit <b>101</b> may determine that the data transmission speed to the viewer <b>20</b> is high, and determine to refrain from generating a new chunk.</p><p id="p-0041" num="0040">When determining to generate a new chunk, the chunk generation determination unit <b>101</b> transmits the picture data to the picture information extraction unit <b>102</b>. The chunk generation determination unit <b>101</b> inputs the meta information acquired from data receiving unit <b>110</b> and the feedback information acquired from data output unit <b>106</b> to the meta information update unit <b>104</b> (YES in step S<b>102</b>).</p><p id="p-0042" num="0041">The behavior of the picture information extraction unit <b>102</b> varies depending on the chunk generation of the chunk generation determination unit <b>101</b> in step S<b>102</b>. In a case where a new chunk is not generated, the picture information extraction unit <b>102</b> immediately inputs the picture data to the picture buffering unit <b>103</b> (NO in step S<b>102</b>, S<b>106</b>). On the other hand, in a case where a new chunk is generated, the picture information extraction unit <b>102</b> extracts the picture information from the picture data and inputs the picture information to the chunk length determination unit <b>105</b> (step S<b>103</b>), and the meta information update unit <b>104</b> receives the meta information and the feedback information from the chunk generation determination unit <b>101</b>, updates the meta information based on the meta information and the feedback information, and inputs the result to the chunk length determination unit <b>105</b> (step S<b>104</b>). The processing in steps S<b>103</b> and S<b>104</b> may be performed in parallel.</p><p id="p-0043" num="0042">Next, the chunk length determination unit <b>105</b> determines the chunk length of the newly generated chunk based on the updated meta information received from the meta information update unit <b>104</b>, the picture information received from the picture information extraction unit <b>102</b>, the feedback information, and the like (step S<b>105</b>). For example, when recognizing that a received picture is a picture (for example, an I picture) having a large data size from the picture information, the chunk length determination unit <b>105</b> may set the chunk length to be shorter than the chunk length set as the fixed length.</p><p id="p-0044" num="0043">The chunk length determination unit <b>105</b> may recognize up to which picture data in the current segment is output as the chunk based on the video data information (resolution, frame rate, average bit rate, GOP length, and the like) acquired from the updated meta information and the feedback information (data output situation), and determine the chunk length according to the remaining data amount of the current segment. At this time, for example, the chunk length may be determined so that the number of bits (data amount, data size) included in one chunk does not exceed the average bit rate.</p><p id="p-0045" num="0044">For example, when recognizing that the picture whose data is not output is only a picture having a small data size (for example, only a picture other than the I picture) from the feedback information, since the chunk size does not increase even if the chunk length is increased, the chunk length determination unit <b>105</b> may determine to set the chunk length of the newly generated chunk to be large. When determining that a picture (for example, an I picture) having a large data size is included in a picture whose data is not output and a picture having a large data size is included in a newly generated chunk from the feedback information, since the chunk size increases when the chunk length is increased and the delay time of download of the chunk in the receiving device <b>2</b> increases, the chunk length determination unit <b>105</b> may set the chunk length of the newly generated chunk to be short. When the chunk generation determination unit <b>101</b> determines that the data transmission speed from the server <b>1</b> to the viewer <b>20</b> is low, the chunk length determination unit <b>105</b> may set the chunk length to be shorter, for example, by setting the chunk length to be half the chunk length set as the fixed length.</p><p id="p-0046" num="0045">When determining the chunk length, the chunk length determination unit <b>105</b> may consider the number of already output chunks in the same segment (which may be included in the feedback information). For example, when the chunk length is shortened, the transmission time of the chunk can be shortened, but the number of chunks in the segment increases. Since the metadata (moof of the chunk <b>512</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) is added to each chunk, the number of chunks increases and at the same time, the metadata which is overhead increases, and as a result, the amount of data (data size) to be transmitted in one segment increases. In such a case, the chunk length determination unit <b>105</b> desirably determines the chunk length so that the number of chunks does not increase so as to suppress the data amount in one segment as much as possible. That is, the chunk length determination unit <b>105</b> may determine the chunk length so as to increase the data size of one chunk as much as possible. In this case, the upper limit of the data size may be determined based on information such as an average bit rate. For example, in a case where the number of already output chunks in the same segment acquired from the feedback information is larger than a certain threshold, the chunk length determination unit <b>105</b> may determine the chunk length so as not to newly generate a chunk in the same segment thereafter.</p><p id="p-0047" num="0046">The chunk length determination unit <b>105</b> may determine the chunk length in consideration of the video data information such as the resolution, the frame rate, and the average bit rate in the determination and setting processing of the chunk length. For example, in a case where the chunk generation determination unit <b>101</b> recognizes that the type of the picture whose data is not output in the segment is only a picture having a small data size (for example, only a picture other than an I picture), but at the same time, the average bit rate of each picture is high, the chunk length may be set to be shorter than the chunk length set as the fixed length regardless of the type of the picture.</p><p id="p-0048" num="0047">The chunk length determination unit <b>105</b> may determine the chunk length according to the picture data to be stored for each chunk based on the type of the picture, the data size, and the like obtained from the picture information. Specifically, in a case where the chunk length determination unit <b>105</b> recognizes that the type of the received picture is an I picture having a large data size, it is conceivable to set the chunk length to be shorter, for example, to half the chunk length set as the fixed length.</p><p id="p-0049" num="0048">As the chunk length, a data size of a picture to be stored in the newly generated chunk in the future may be estimated based on, for example, an average bit rate, and the chunk length may be determined based on the estimated data size. For example, the number of frames of a picture to be stored in the future may be determined such that the total number of bits estimated to be stored in a newly generated chunk (the data size of the chunk) does not exceed a preset first threshold. A second threshold for determining a threshold excess amount of the estimated data size may be set. In this case, even if the estimated data size exceeds the first threshold, if the estimated data size falls below the second threshold, the chunk length corresponding to the estimated data size is determined as the chunk length of the newly generated chunk. For example, several chunk lengths such as large, medium, and small may be determined in advance, and the chunk length may be automatically selected according to the type of the received picture, the feedback information, and the like. For example, the chunk length determination unit <b>105</b> may select &#x201c;small&#x201d; as the chunk length when the I picture is received. In a case where the chunk generation determination unit <b>101</b> determines, from the feedback information, that the data transmission speed from the server <b>1</b> to the viewer <b>20</b> is high, the chunk length determination unit <b>105</b> may select &#x201c;long&#x201d; as the chunk length.</p><p id="p-0050" num="0049">The chunk length determination unit <b>105</b> may calculate the data output speed by the data output unit <b>106</b> from the feedback information and determine the chunk length according to the data output speed. Specifically, in a case where the data output speed of the data output unit <b>106</b> is high, the chunk length determination unit <b>105</b> may determine that the data transmission speed from the server <b>1</b> to the viewer <b>20</b> is high and make the chunk length as long as possible, and in a case where the data output speed of the data output unit <b>106</b> is low, the chunk length determination unit may determine that the data transmission speed from the server <b>1</b> to the viewer <b>20</b> is low and make the chunk length as short as possible.</p><p id="p-0051" num="0050">The picture buffering unit <b>103</b> stores the picture data in the buffer in the order of the received picture data (step S<b>106</b>). The data output unit <b>106</b> determines whether to output data in a chunk (step S<b>107</b>). Specifically, the data output unit <b>106</b> may determine to output the chunk when receiving the chunk length from the chunk length determination unit <b>105</b>. When determining not to output the chunk, the data output unit <b>106</b> performs receiving processing of the next picture data (NO in step S<b>107</b>). When determining to output data, the data output unit <b>106</b> extracts the picture data corresponding to the determined chunk length from the picture buffering unit <b>103</b>, and outputs the chunk length and the picture data to the package unit <b>120</b> (step S<b>108</b>). At the same time, the data output unit <b>106</b> outputs, to the chunk generation determination unit <b>101</b>, feedback information of the data output situation such as how much the chunk in the current segment has been output and how much the B picture and the P picture have been output after the segment or the I picture at the head of the GOP (step S<b>109</b>).</p><p id="p-0052" num="0051">When receiving the chunk length and the picture data, the package processing unit <b>121</b> packages the received picture data with the received chunk length, and generates and outputs a chunk (or segment) (step S<b>110</b>). Since the chunk segment output by the above procedure conforms to the CMAF format, the viewer <b>20</b> of the receiving device <b>2</b> can receive the chunk generated and output according to the present embodiment and display the streaming content without particularly requiring correction as long as the chunk segment conforms to the CMAF format, for example.</p><p id="p-0053" num="0052">As described above, the server <b>1</b> can eliminate the variation in the data size between the chunks to be output by variably setting the chunk length, and it is possible to prevent a large delay due to a specific chunk having a large data size at the time of download by the receiving device <b>2</b>.</p><p id="p-0054" num="0053">When a network of a company or a local government is connected to the Internet, it is usually necessary to pass through a plurality of proxy servers, and there is a possibility that a communication response is affected (delayed) by passing through the proxy server. Since the chunk division in the segment is generally performed in units of time and with a fixed length, it takes time to acquire a specific chunk having a large data size, but the influence becomes large particularly when a proxy server is used, and there is a case where low-delay video distribution intended by CMAF cannot be performed. In the present embodiment, the effect is particularly remarkable under a network environment via such a proxy server, and low-delay video distribution can be performed.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating a relationship between server transmission and viewer reception of the streaming data according to the first embodiment. <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (a) illustrates an example by segment distribution (segment length is four seconds), <figref idref="DRAWINGS">FIG. <b>6</b></figref> part (b) illustrates an example of distribution of a chunk having a fixed length in a CMAF conforming format (segment length is four seconds, chunk length is one second), and <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (c) illustrates an example of distribution according to the present embodiment in a case where the chunk has a variable length in the CMAF conforming format.</p><p id="p-0056" num="0055">As illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (a), in the segment distribution method, 4+&#x3b1;+&#x3b2; seconds are required after the server generates and transmits the segment <b>4</b> until the viewer receives the segment <b>4</b> and the segment <b>4</b> becomes viewable by the user. This breakdown is a transmission time of four seconds by the server of the segment <b>4</b>, a network delay of a seconds including processing by proxy or the like, and a processing time of &#x3b2; seconds such as a download time of a viewer other than the above.</p><p id="p-0057" num="0056">As illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (b), in a case where the chunk length is fixed, 1+&#x3b1;+&#x3b2; seconds are required after the server generates and transmits the chunk <b>4</b>A of the segment <b>4</b> until the viewer receives the chunk <b>4</b>A and the chunk <b>4</b>A becomes viewable by the user. This breakdown is a transmission delay time of one second by the server of the chunk <b>4</b>A, a network delay of a seconds including processing by proxy or the like, and a processing time of &#x3b2; seconds such as a download time of a viewer other than the above. Accordingly, in <figref idref="DRAWINGS">FIG. <b>6</b></figref> part (b), as compared with <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (a), the transmission time by the server, the network delay of a seconds, and the processing time of &#x3b2; seconds are shortened, and the viewable time of the chunk <b>4</b>A (corresponding to the head portion of the segment <b>4</b>) is improved.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (c) illustrates an example in which the chunk length of the chunk <b>4</b>A in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (b) according to the present embodiment is shortened, and the transmission delay time by the server is shorter than one second illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (b) by the shortened chunk length of the chunk <b>4</b>A. As similar to this, since the network transmission delay of a seconds also decreases when the size of data to be transmitted is reduced, it is possible to reduce the network transmission delay of &#x3b1; seconds in <figref idref="DRAWINGS">FIG. <b>6</b></figref> part (c) as compared with the case of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (b). This effect is particularly remarkable, for example, when the proxy server <b>3</b> is used for data transmission from the server <b>1</b> to the receiving device <b>2</b>. As similar to this, since the processing delay of &#x3b2; seconds also decreases when the size of data to be transmitted is reduced, it is possible to reduce processing delay of &#x3b2; seconds in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (c) in the present embodiment as compared with the case of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (b). Accordingly, in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (c), as compared with <figref idref="DRAWINGS">FIG. <b>6</b></figref>, part (b), the transmission time by the server, the network delay of a seconds, and the processing time of &#x3b2; seconds are shortened, and the viewable time of the chunk <b>4</b>A is improved.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a viewable time of a chunk according to the first embodiment.</p><p id="p-0060" num="0059">Picture data <b>521</b> is an example of pictures continuous from an I picture which is picture <b>1</b> with a horizontal axis as a data size. The picture <b>2</b> and subsequent pictures are, for example, B pictures or P pictures. In the picture data <b>521</b>, each horizontal width of each picture indicates a data size, indicating that the data size of the picture <b>1</b>, which is an I picture, is the largest. A chunk <b>522</b> illustrates an example of each chunk when the chunk length of the picture data <b>521</b> is a fixed length and a variable length in a case where the horizontal axis is time. When the chunk <b>522</b> has a fixed length, the picture data <b>521</b> is stored in one chunk. In a case where the chunk <b>522</b> has a variable length, the picture data <b>521</b> is divided into two or more chunks with the chunk length set in step S<b>105</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. In the chunk <b>522</b>, it is indicated that the viewable time by the user can be made shorter in a case where the chunk length is a variable length than in a case where the chunk length is a fixed length.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating an example of a relationship between a segment and a chunk of streaming data according to the first embodiment. <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (a) is an example of a segment chunked with a fixed length, and <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (b) is an example of a segment chunked with a variable length.</p><p id="p-0062" num="0061">As illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (a), in the segment chunked with the fixed length, all the chunks are set to the fixed length (0.5 seconds in this example). On the other hand, as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (b), since the segment according to the present embodiment is formed into a chunk with a variable length, chunks having different chunk lengths are included. For example, a chunk in which an I picture having a large data size is stored is short (0.1 seconds in <figref idref="DRAWINGS">FIG. <b>5</b></figref>), and other chunks are chunks having a chunk length determined by the flowchart of <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Depending on the type and data size of the picture data to be continuously transmitted, the chunk length may be larger than 0.5 seconds and 0.6 seconds, or may be smaller than 0.5 seconds. However, regarding the data size of each chunk, in step S<b>105</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, for example, by determining the chunk length using the average bit rate as a threshold, it is possible to suppress variation in the data size of the chunk to be small.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (c) and part (d) illustrate examples of a case where there are a plurality of pieces of data (for example, I pictures) having a large data size in one segment, <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (c) illustrates an example of a case where a segment is chunked with a fixed length, and <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (d) illustrates an example of a case where a segment is chunked with a variable length. In step S<b>102</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, by determining whether to generate a chunk based on the type of the picture data from the data receiving unit <b>110</b>, even in a case where the I picture is included in the middle of the segment as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (d), the chunk length for storing the I picture can be variably set, and variation in the data size for each chunk can be suppressed. Since the case as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, part (d) is possible according to the present embodiment, it is possible to partition chunks in GOP units on the assumption of content acquisition (HTTP Range GET or the like) from the middle of the segment in addition to delivery from the first chunk of the segment by HTTP/1.1 GET or the like. As a result, the viewer <b>20</b> can decode, output, and display the picture data of the received chunk without waiting for a plurality of chunks.</p><p id="p-0064" num="0063">As described above, in the present embodiment, the chunk or the segment having the structure conforming to each low latency media format such as CMAF is output by the package processing unit <b>121</b>, so that it is possible to view the low latency video streaming content in units of chunks without the need for modification or the like in a standard environment such as a browser, in the receiving device <b>2</b>.</p><p id="p-0065" num="0064">As described above, according to the server <b>1</b> (streaming data generation unit <b>10</b>) of the first embodiment, it is possible to distribute the video streaming content with a low delay by setting the chunk length for each chunk and packaging.</p><heading id="h-0007" level="1">Second Embodiment</heading><p id="p-0066" num="0065">In the present embodiment, an example will be described in which the chunk length is determined immediately before the picture data is output from the data output unit <b>106</b>.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart illustrating a processing operation example of a streaming data generation unit according to a second embodiment.</p><p id="p-0068" num="0067">As similar to the first embodiment, when receiving the video data, the server <b>1</b> encodes the video data by the video encoding unit <b>11</b> to obtain picture data. When receiving the picture data and the meta information, the data receiving unit <b>110</b> inputs the picture data and the meta information to the chunk generation determination unit <b>101</b> (step S<b>201</b>). The chunk generation determination unit <b>101</b> stores the received data in the picture buffering unit <b>103</b> (step S<b>202</b>). The chunk generation determination unit <b>101</b> counts the data size of all the received pictures and the number of pictures (step S<b>203</b>). The chunk generation determination unit <b>101</b> provides a threshold in a memory (not illustrated), and determines to generate a chunk at a timing when the counted data size exceeds the threshold (YES in step S<b>204</b>). The chunk generation determination unit <b>101</b> calculates the chunk length from the count value of the number of pictures and the image frame rate when it is determined to generate the chunk (step S<b>205</b>). Step S<b>206</b> and the subsequent steps are similar to step S<b>108</b> and the subsequent steps in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and thus description thereof is omitted. The threshold used by the chunk generation determination unit <b>101</b> in step S<b>204</b> may be set in advance, or for example, an average bit rate to be calculated may be sequentially set as the threshold. According to the above procedure, the server <b>1</b> (streaming data generation unit <b>10</b>) can determine the chunk length immediately before generating the chunk based on the chunk size.</p><p id="p-0069" num="0068">According to at least one embodiment as described above, it is possible to provide a streaming server, a transmission method, and a program for streaming video distribution that determine a chunk length for each chunk of streaming data.</p><p id="p-0070" num="0069">While certain embodiments have been described, these embodiments have been presented by way of example only, and are not intended to limit the scope of the inventions. Indeed, the novel embodiments described herein may be embodied in a variety of other forms; furthermore, various omissions, substitutions and changes in the form of the embodiments described herein may be made without departing from the spirit of the inventions. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the inventions.</p><p id="p-0071" num="0070">Furthermore, in each constituent element of the claims, a case where a constituent element is divided and expressed, a case where a plurality of constituent elements are expressed together, or a case where a plurality of constituent elements are expressed in combination is also within the scope of the present invention. In addition, a plurality of embodiments may be combined, and examples configured by this combination are also within the scope of the invention. In addition, some components may be deleted from all the components illustrated in the embodiment. Furthermore, the components of different embodiments may be appropriately combined.</p><p id="p-0072" num="0071">In addition, in order to make the description clearer, the drawings may schematically represent the width, thickness, shape, and the like of each part as compared with an actual aspect. In the block diagram, data and signals may be exchanged between blocks that are not connected or in a direction in which an arrow is not shown even if the blocks are connected. The processing illustrated in the flowchart, the sequence chart, or the like may be implemented by software (such as a program) operated by hardware such as an IC chip or a digital signal processor (Digital Signal Processor or DSP) or a computer including a microcomputer, or a combination of hardware and software. The device of the present invention is also applied to a case where a claim is expressed as a control logic, a case where a claim is expressed as a program including an instruction for executing a computer, and a case where a claim is expressed as a computer-readable recording medium describing the instruction. In addition, names and terms used are not limited, and even other expressions are included in the present invention as long as they have substantially the same content and the same purpose.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A streaming server compliant with the Common Media Application Format (CMAF) for outputting chunk data obtained by dividing a segment, which is a transmission unit of picture data, into chunks, which are transmission units smaller than the segment, as streaming data, the streaming server comprising:<claim-text>a chunk length determination unit that calculates a chunk length which is a time length of the chunk; and</claim-text><claim-text>a data generation unit that generates the chunk data by dividing segment data, which is data of the segment, into the chunks in accordance with the chunk length.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The streaming server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a chunk generation determination unit that determines whether to generate a new chunk every time the picture data is received.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The streaming server according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the chunk length determination unit determines a chunk length for each of the chunks.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The streaming server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the chunk length determination unit determines the chunk length based on a data size of picture data to be included in the chunk.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The streaming server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the chunk length determination unit determines the chunk length based on an output situation of the chunk data.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The streaming server according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the chunk generation determination unit determines whether to generate the new chunk according to a type of the picture data.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The streaming server according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the chunk generation determination unit determines whether to generate the new chunk based on an output situation of the chunk data.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A transmission method of streaming data conforming to the Common Media Application Format (CMAF) for outputting chunk data obtained by dividing a segment, which is a transmission unit of picture data, into chunks, which are transmission units smaller than the segment, as streaming data, the transmission method comprising:<claim-text>calculating a chunk length which is a time length of the chunk; and</claim-text><claim-text>generating the chunk data by dividing segment data, which is data of the segment, into chunks in accordance with the chunk length.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. non-transitory computer-readable medium having instructions, wherein the instructions, when executed by a computer, cause the computer to:<claim-text>transmit streaming data conforming to the Common Media Application Format (CMAF) for outputting chunk data obtained by dividing a segment, which is transmission unit of picture data, into chunks, which are transmission units smaller than the segment, as the streaming data;</claim-text><claim-text>calculate a chunk length which is a time length of the chunk; and</claim-text><claim-text>generate the chunk data by dividing segment data, which is data of the segment, into chunks in accordance with the chunk length.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The streaming server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the chunk length determination unit determines the chunk length based on the number of output chunks among the chunks in the same segment.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The streaming server according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein when the number of output chunks exceeds a threshold, the chunk length determining unit determines the chunk length so as not to generate new chunks for the same segment.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The streaming server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the chunk length determination unit determines the chunk length based on the amount of segment data that has not yet been output in the same segment.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The streaming server according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the chunk length determination unit determines the chunk length so that the amount of data included in one chunk does not exceed an average bit rate for each chunk calculated based on previously received picture data.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The streaming server according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the chunk generation determination unit determines whether or not to generate the new chunk based on the type of the picture data that has not been output in the same segment.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The streaming server according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the chunk generation determination unit determines whether to generate the new chunk based on output status of the chunk data within the same segment.</claim-text></claim></claims></us-patent-application>