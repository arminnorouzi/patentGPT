<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004489A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004489</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17854772</doc-number><date>20220630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>IN</country><doc-number>202141029449</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>063</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2212</main-group><subgroup>206</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD AND NMP DIMM FOR MANAGING ADDRESS MAP</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SAMSUNG ELECTRONICS CO., LTD.</orgname><address><city>Suwon-si</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>TALANKI</last-name><first-name>Raghu Vamsi Krishna</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Thombra Mathew</last-name><first-name>Eldho Pathiyakkara</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Thummala</last-name><first-name>Vishnu Charan</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Srinivasan</last-name><first-name>Vinod Kumar</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>So</last-name><first-name>Jin ln</first-name><address><city>Hwaseong-si</city><country>KR</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Lee</last-name><first-name>Jong-Geon</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>SAMSUNG ELECTRONICS CO., LTD.</orgname><role>03</role><address><city>Suwon-si</city><country>KR</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A Near Memory Processing (NMP) dual in-line memory module (DIMM) for managing an address map is provided. The NMP DIMM includes: a static random-access memory (SRAM) provided on a Double Data Rate (DDR) interface; and an address management controller coupled to the SRAM, and configured to control the NMP DIMM to: receive a first indication from a host system to perform interface training for operating an SRAM space; perform the interface training using a first address map based on the first indication; receive a second indication from the host system indicating completion of the interface training for operating the SRAM space; switch from the first address map to a second address map for operating the SRAM space in response based on the second indication; and operate the SRAM space using the second address map.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="76.54mm" wi="158.75mm" file="US20230004489A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="190.50mm" wi="104.82mm" orientation="landscape" file="US20230004489A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="158.33mm" wi="145.12mm" file="US20230004489A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="155.70mm" wi="143.34mm" file="US20230004489A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="211.92mm" wi="138.60mm" orientation="landscape" file="US20230004489A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="175.34mm" wi="139.19mm" orientation="landscape" file="US20230004489A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="85.01mm" wi="124.97mm" file="US20230004489A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="102.95mm" wi="120.40mm" file="US20230004489A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="83.74mm" wi="119.72mm" file="US20230004489A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="83.74mm" wi="119.80mm" file="US20230004489A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO THE RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims priority from Indian Patent Application No. 202141029449, filed on Jun. 30, 2021 in the Office of the Controller General of Patents, Designs and Trade Marks (Indian Patent Office), the disclosure of which is incorporated herein by reference in its entirety.</p><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">1. Field</heading><p id="p-0003" num="0002">Methods, apparatuses and systems consistent with example embodiments relate to memory management in electronic devices, and more particularly to method and a Near Memory Processing (NMP) dual in-line memory module (DIMM) for managing an address map of the NMP DIMM.</p><heading id="h-0004" level="1">2. Related Art</heading><p id="p-0004" num="0003">An NMP DIMM includes multiple dynamic random access memories (DRAMs) and a static random access memory (SRAM), which acts as an internal memory. A DRAM includes ranks, bank groups, banks, rows and columns which are introduced for pipelining of data. However, a host system treats the SRAM as a DRAM, and therefore accesses the SRAM according to DRAM commands and allocates memory space to be used by an application. In memory allocation, the host system prepares an address map for the NMP DIMM by mapping physical addresses of the host system with corresponding physical address of the DRAM by considering interleaving at rank, bank group, bank, row and column levels. The DRAM is not directly exposed to the host system, and the SRAM acts as the interface between the host system and the NMP DIMM. However, the host system prepares the address map for the NMP DIMM based on the assumption the SRAM (i.e., interface) is a DRAM, and prepares the address map by interleaving at rank, bank group, bank, row and column levels. Because the SRAM is very small relative to the DRAMs, and also does not include the rank, bank group, bank, the row and the column which are present in the DRAM, the address map created by the host system includes a large number of vacant spaces. As a result of the large number of vacant spaces in the address map of the NMP DIMM, the memory at the NMP DIMM is non-contiguous, which drastically slows the performance of the NMP DIMM.</p><p id="p-0005" num="0004">Thus, there is a need to address the above mentioned disadvantages or other shortcomings or at least provide a useful alternative.</p><heading id="h-0005" level="1">SUMMARY</heading><p id="p-0006" num="0005">One or more example embodiments provide a method and a NMP DIMM for managing an address map in the NMP DIMM by switching from a first address map to a second address map for operating a static random-access memory (SRAM) space. The first address map is used during interface training for operating the SRAM address space and the second address map is used for a normal mode of operating the SRAM address space which includes read and write operations. One or more example embodiments eliminate the need for a look-up table for the address map by providing continuous memory. As a result, one or more example embodiments address the problem of performance degradation caused by non-contiguous address map by providing contiguous memory at the NMP DIMM.</p><p id="p-0007" num="0006">According to an example embodiment, a method for managing an address map in a NMP DIMM is provided. The method includes: receiving, by the NMP DIMM, a first indication from a host system to perform interface training for operating an SRAM space; performing, by the NMP DIMM, the interface training using a first address map based on the first indication; receiving, by the NMP DIMM, a second indication from the host system indicating completion of the interface training for operating the SRAM space; switching, by the NMP DIMM, from the first address map to a second address map for operating the SRAM space based on the second indication; and operating, by the NMP DIMM, the SRAM space using the second address map.</p><p id="p-0008" num="0007">According to an example embodiment, a NMP DIMM for managing an address map is provided. The NMP DIMM includes: an SRAM provided on a DDR interface; and an address management controller coupled to the SRAM, and configured to control the NMP DIMM to: receive a first indication from a host system to perform interface training for operating an SRAM space; perform the interface training using a first address map based on the first indication; receive a second indication from the host system indicating completion of the interface training for operating the SRAM space; switch from the first address map to a second address map for operating the SRAM space in response based on the second indication; and operate the SRAM space using the second address map.</p><p id="p-0009" num="0008">According to an example embodiment, an address management controller is provided. The address management controller includes: an address map controller configured to communicate with a host system; a direct address map controller; an address training controller; and an adaptive address map controller. The address map controller is configured to control the address training controller to perform an interface training for operating a static random-access memory (SRAM) based on a first indication received from the host system. The address training controller is configured to perform the interface training based on a first address map. The address map controller is further configured to control the address management controller to communicate with the host system using a second address map based on a second indication received from the host system.</p><p id="p-0010" num="0009">These and other aspects will be better appreciated and understood when considered in conjunction with the following description and the accompanying drawings. It should be understood, however, that the following descriptions, while indicating example embodiments and numerous specific details thereof, are given by way of illustration and not of limitation. Many changes and modifications may be made to the example embodiments herein without departing from the scope thereof, and example embodiments include all such modifications.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF FIGURES</heading><p id="p-0011" num="0010">The above and other aspects, features and advantages will become more apparent from the following description of example embodiments with reference with reference to the accompanying drawings, in which:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system of a host and an NMP DIMM;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates hardware components of the NMP DIMM, according to example embodiments;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart illustrating a method for managing the address map in the NMP DIMM, according to example embodiments;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates example address maps created at the host system for operating an SRAM address space;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is an example illustrating the address map created at the host system for operating the SRAM address space, according to example embodiments;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is an example illustrating a scenario of interleaved SRAM address space;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is an example illustrating a scenario of contiguous SRAM address space, according to example embodiments;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is an example illustrating a split in SRAM due to address map; and</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is an example illustrating continuity in the SRAM due to address map, according to example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION</heading><p id="p-0021" num="0020">Example embodiments, and various features and advantages thereof are explained more fully with reference to the accompanying drawings. Descriptions of well-known components and processing techniques are omitted so as to not unnecessarily obscure the example embodiments. Also, example embodiments described herein are not necessarily mutually exclusive, as some example embodiments can be combined with one or more other example embodiments to form new example embodiments. The term &#x201c;or&#x201d; as used herein, refers to a non-exclusive or, unless otherwise indicated. The examples used herein are intended to facilitate an understanding of ways in which example embodiments can be practiced and to further enable those skilled in the art to practice example embodiments. Accordingly, the examples should not be construed as limiting the scope of example embodiments.</p><p id="p-0022" num="0021">As is traditional in the field, example embodiments may be described and illustrated in terms of blocks which carry out a described function or functions. These blocks, which may be referred to herein as units or modules or the like, are physically implemented by analog or digital circuits such as logic gates, integrated circuits, microprocessors, microcontrollers, memory circuits, passive electronic components, active electronic components, optical components, hardwired circuits and the like, and may optionally be driven by firmware. The circuits may, for example, be embodied in one or more semiconductor chips, or on substrate supports such as printed circuit boards and the like. The circuits constituting a block may be implemented by dedicated hardware, or by a processor (e.g., one or more programmed microprocessors and associated circuitry), or by a combination of dedicated hardware to perform some functions of the block and a processor to perform other functions of the block. Each block may be physically separated into two or more interacting and discrete blocks without departing from the scope of the disclosure. Likewise, the blocks of example embodiments may be physically combined into more complex blocks without departing from the scope of the disclosure.</p><p id="p-0023" num="0022">The accompanying drawings provide an overview of technical features and it should be understood that example embodiments are not limited by the accompanying drawings. As such, the present disclosure should be construed to extend to any alterations, equivalents and substitutes in addition to those which are particularly set out in the accompanying drawings. Although the terms first, second, etc., may be used herein to describe various elements, these elements should not be limited by these terms. These terms are generally only used to distinguish one element from another.</p><p id="p-0024" num="0023">Example embodiments herein provide a method for managing an address map in a Near Memory Processing (NMP) dual in-line memory module (DIMM). The method includes receiving, by the NMP DIMM, a first indication from a host system to perform interface training for operating a static random-access memory (SRAM) space and performing, by the NMP DIMM, the interface training using a first address map in response to receiving the first indication from the host system. Further, the method includes receiving, by the NMP DIMM, a second indication from the host system indicating a completion of the interface training for operating the SRAM address space and determining, by the NMP DIMM, that a second address map is to be used for operating the SRAM address space in response to receiving the second indication from the host system indicating the completion of the interface training for operating the SRAM address space. The method also includes switching, by the NMP DIMM, from the first address map to the second address map for operating the SRAM address space.</p><p id="p-0025" num="0024">In related methods and systems, the host system assumes the SRAM to be a DRAM which includes ranks, bank groups, banks, rows and columns used for data pipelining. As a result, the host system performs the interface training and prepares the address map of the SRAM by considering the ranks, the bank groups, the banks, the rows and the columns in interleaved manner, which results in a large number of vacant spaces and non-contiguous address map at the NMP DIMM. The non-contiguous address map drastically reduces the performance speed of the NMP DIMM. Unlike to the related methods and systems, the NMP DIMM uses a first address map when the host system performs the interface training of the NMP DIMM and switches to the second address map which manages interleaving of address space. As a result, the address map at the NMP DIMM is contiguous and enhances the performance of the NMP DIMM.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a system of a host system (<b>200</b>) and an NMP DIMM (<b>100</b>) used in generating an address map.</p><p id="p-0027" num="0026">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a system for generating the address map of NMP DIMMs, includes the NMP DIMM (<b>100</b>) and the host system (<b>200</b>). The host system (<b>200</b>) may be, for example, a mobile electronic device, a smart electronic device, Personal Digital Assistant (PDA), a tablet, a wearable device, an Internet of Things (IoT) device, a virtual reality device, a foldable device, a flexible device, a display device, an immersive system or other electronic device. The host system (<b>200</b>) includes a host central processing unit (CPU) (<b>220</b>) and a memory controller (<b>240</b>). The host CPU (<b>220</b>) performs standard functions of the host system (<b>200</b>) after entry into operating system (OS) of the host system (<b>200</b>). The memory controller (<b>240</b>) is configured to send a power ON indication to the NMP DIMM (<b>100</b>) for initiating the interface training and to send an indication of completion of the interface training upon completion of the interface training.</p><p id="p-0028" num="0027">The NMP DIMM (<b>100</b>) includes processing node <b>150</b> (e.g., a central processing unit (CPU)), multiple dynamic random access memory (DRAM) (<b>160</b><i>a </i>-<b>160</b><i>b</i>) and an SRAM (<b>130</b>) which is mounted on a double data rate (DDR) interface. Each DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>) is controlled by a respective memory controller (<b>140</b><i>a</i>/<b>140</b><i>b</i>) through the DDR interface. The SRAM (<b>130</b>) present in the NMP DIMM (<b>100</b>) acts an interface between the memory controller (<b>240</b>) of the host system (<b>200</b>) and the memory controllers (<b>140</b><i>a</i>/<b>140</b><i>b</i>) of the NMP DIMM (<b>100</b>). The DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>) is not directly exposed to the host system (<b>200</b>) and the SRAM (<b>130</b>) acts as an intermediate buffer to facilitate communication between the host system (<b>200</b>) and the DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>) of the NMP DIMM (<b>100</b>).</p><p id="p-0029" num="0028">The memory controller (<b>240</b>) of the host system (<b>200</b>) identifies the DRAMs (<b>160</b><i>a</i>/<b>160</b><i>b</i>), and the SRAM (<b>130</b>) as DRAMs, and trains the interface based on the identified DRAMs. The NMP DIMM (<b>100</b>) consists of ranks. A rank is group of DRAM chips. For example, one rank may be provided on one side of the NMP DIMM (<b>100</b>) and another rank may be provided on the other side of the NMP DIMM (<b>100</b>). Each DRAM chip (<b>160</b><i>a</i>/<b>160</b><i>b</i>) consists of Bank Groups which are divided into Banks. A bank consists of row and columns which are introduced for increasing the performance with pipelining and parallel access of the address space i.e., for example when data is getting transferred to or from one bank, another bank can be activated. A read or write operation in the DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>) is performed by activating a first row in the bank and then issuing a read command or a write command to the first row. To access a second row in the bank, the row needs to be pre-charged.</p><p id="p-0030" num="0029">The memory controller (<b>240</b>) of the host system (<b>200</b>) determines normal DIMMs and the NMP DIMM (<b>100</b>) as system memory and prepares the address map by considering interleaving at rank, bank group, bank, row and column level. However, the SRAM (<b>130</b>) is an acting internal memory and hence is limited in size (i.e., the size may be limited to a few KBs 16 KB, 32 KB, 512 KB, etc.) in the NMP DIMM (<b>100</b>). Further, the SRAM (<b>130</b>) does not include the rank, bank group, bank, row and column which are present in the DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>), as a result when the host system (<b>200</b>) assumes the SRAM (<b>130</b>) to be the DRAM, prepares the address map a large number of vacant spaces are created in the address map of the NMP DIMM (<b>100</b>). As a result, the address map at the NMP DIMM (<b>100</b>) is non-contiguous and drastically impacts the performance of the NMP DIMM (<b>100</b>).</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates various hardware components of the NMP DIMM (<b>100</b>) for managing the address map of the NMP DIMM (<b>100</b>), according to example embodiments.</p><p id="p-0032" num="0031">The memory controller (<b>240</b>) of the host system (<b>200</b>) prepares the address map by interleaving addresses across the ranks, the bank groups, the banks, the rows and the columns, and the interleaving of the addresses may improve performance at the NMP DIMM (<b>100</b>). However, although the SRAM (<b>130</b>) is identified by the host device (<b>200</b>) as a DRAM with ranks, bank groups, banks, rows and columns, the SRAM (<b>130</b>) does not have the ranks, the bank groups, the banks, the rows and the columns, and any address can be accessed in any manner. Because the size of the SRAM (<b>130</b>) is relatively small compared to the DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>) and the host system (<b>200</b>) maps physical address to the address of the DRAM (<b>160</b><i>a</i>/<b>160</b><i>b</i>) by considering the bank and the rank interleaving, the SRAM (<b>130</b>) address space is not seen as continuous memory space by the host system (<b>200</b>). As a result, the host system (<b>200</b>) needs to allocate a large amount of memory because of the vacant spaces in the address map. Further, the host system (<b>200</b>) will also create a record of valid and invalid addresses with mechanisms such as, for example, a look-up table. The creation of the record adds overhead, consumes space and impacts the performance at the NMP DIMM (<b>100</b>).</p><p id="p-0033" num="0032">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in conjunction with <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the NMP DIMM (<b>100</b>) includes a PHY (<b>110</b>), an address management controller (<b>120</b>), the SRAM (<b>130</b>) and a LinkUP (<b>132</b>).</p><p id="p-0034" num="0033">In an example embodiment, the PHY (<b>110</b>) is configured to provide device level interface to physical channel of standard DIMM interface. The PHY (<b>110</b>) is compliant to protocol standard and takes care of required parameters for proper operations of the interface.</p><p id="p-0035" num="0034">The address management controller (<b>120</b>) includes an address map controller (<b>122</b>), a direct address map controller (<b>124</b>), an address training controller (<b>126</b>) and an adaptive address map controller (<b>128</b>). The address map controller (<b>122</b>) is configured to receive a first indication from the host system (<b>200</b>) to perform the interface training for operating the SRAM (<b>130</b>) address space at power ON of the host system (<b>200</b>). Further, the address map controller (<b>122</b>), based on the first indication, indicates the direct address map controller (<b>124</b>) to initiate interface training using a first address map. The direct address map controller (<b>124</b>) performs the interface training using the first address map based on the first indication. The first address map is a direct address which is prepared using the address map by considering interleaving at the rank, the bank group, the bank, the row and the column level.</p><p id="p-0036" num="0035">Further, the address map controller (<b>122</b>) receives a second indication from the host system (<b>200</b>) indicating completion of the interface training and for initiating operation of the SRAM (<b>130</b>) space. The address map controller (<b>122</b>) then indicates the address training controller (<b>126</b>) to switch the address map from the first address map to a second address map in post-training phase. The second indication from the host system (<b>200</b>) can be sent as one of mode register (MR) commands, NMP configuration register write, predefined sequence of data of address lines and a predefined data pattern to the NMP DIMM (<b>100</b>). The predefined data pattern may be provided by a NMP DIMM manufacturer. The predefined data pattern can be sent on address lines, data lines or both. Based on receiving the second indication from the address map controller (<b>122</b>), the address training controller (<b>126</b>) determines that the second address map needs to be used for operating the SRAM (<b>130</b>) space in post-training phase, and switches from the first address map to the second address map for operating the SRAM (<b>130</b>) space. The second address map is an adaptive address map to provide contiguous memory address at the SRAM (<b>130</b>) space. Therefore, during regular host system (<b>200</b>) accesses for operations, such as the read operation and the write operation, the second address map is used by the NMP DIMM (<b>100</b>), thereby eliminating the need for the look-up table identifying valid and invalid addresses, and thereby reducing the overhead for the read operation and the write operation.</p><p id="p-0037" num="0036">According to example embodiments, there may be a dynamic number of DIMMs and NMP DIMMs. The adaptive address map controller (<b>128</b>) is configured to receive data traffic from the host system (<b>200</b>) and determine an address pattern of the data traffic received from the host system (<b>200</b>). Further, adaptive address map controller (<b>128</b>) is configured to learn a host address map pattern and accommodate the data traffic received from the host system (<b>200</b>) in the SRAM (<b>130</b>) address space based on the learning. The data traffic is interleaved at the rank, the bank group, the row and the column.</p><p id="p-0038" num="0037">According to example embodiments, there may be a fixed number of NMP DIMMs. In this case, the adaptive address map controller (<b>128</b>) can be excluded from the address management controller (<b>120</b>) as the host address map pattern will be fixed and a learning of the host address map pattern may not be required.</p><p id="p-0039" num="0038">According to example embodiments, the address management controller (<b>120</b>) is implemented by processing circuitry such as logic gates, integrated circuits, microprocessors, microcontrollers, memory circuits, passive electronic components, active electronic components, optical components, hardwired circuits, or the like, and may optionally be driven by firmware. The circuits may, for example, be embodied in one or more semiconductor chips, or on substrate supports such as printed circuit boards and the like.</p><p id="p-0040" num="0039">In an example embodiment, the LinkUP (<b>132</b>) is a status bit within the NMP DIMM (<b>100</b>) which is set on completion of the training stage indicated by the second indication method. Further, the LinkUP (<b>132</b>) can be set through the MR register or a NMP configuration register write or by sending a predefined pattern.</p><p id="p-0041" num="0040">Although <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows hardware elements of the NMP DIMM (<b>100</b>), it is to be understood that example embodiments are not limited thereon. In other example embodiments, the NMP DIMM (<b>100</b>) may include additional or fewer elements. Further, the labels or names of the elements are used only for illustrative purpose and do not limit the scope of the disclosure. One or more components can be combined together to perform same or substantially similar function.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart <b>300</b> illustrating a method for managing the address map in the NMP DIMM (<b>100</b>), according to example embodiments.</p><p id="p-0043" num="0042">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, at operation <b>302</b>, the NMP DIMM (<b>100</b>) receives the first indication from the host system (<b>200</b>) to perform the interface training for operating the SRAM (<b>130</b>) address space. For example, in the NMP DIMM (<b>100</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the address management controller (<b>120</b>) is configured to receives the first indication from the host system (<b>200</b>) to perform the interface training for operating the SRAM (<b>130</b>) address space.</p><p id="p-0044" num="0043">At operation <b>304</b>, the NMP DIMM (<b>100</b>) performs the interface training using the first address map in response to receiving the first indication from the host system (<b>200</b>). For example, in the NMP DIMM (<b>100</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the address management controller (<b>120</b>) is configured to perform the interface training using the first address map in response to receiving the first indication from the host system (<b>200</b>).</p><p id="p-0045" num="0044">At operation <b>306</b>, the NMP DIMM (<b>100</b>) receives the second indication from the host system (<b>200</b>) indicating the completion of the interface training for operating the SRAM (<b>130</b>) address space. For example, in the NMP DIMM (<b>100</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the address management controller (<b>120</b>) is configured to receive the second indication from the host system (<b>200</b>) indicating the completion of the interface training for operating the SRAM (<b>130</b>) address space.</p><p id="p-0046" num="0045">At operation <b>308</b>, the NMP DIMM (<b>100</b>) determines that the second address map is to be used for operating the SRAM (<b>130</b>) address space in response to receiving the second indication from the host system (<b>200</b>) indicating the completion of the interface training for operating the SRAM (<b>130</b>) address space. For example, in the NMP DIMM (<b>100</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the address management controller (<b>120</b>) is configured to determine that the second address map is to be used for operating the SRAM (<b>130</b>) address space in response to receiving the second indication from the host system (<b>200</b>) indicating the completion of the interface training for operating the SRAM (<b>130</b>) address space.</p><p id="p-0047" num="0046">At operation <b>310</b>, the NMP DIMM (<b>100</b>) switches from the first address map to the second address map for operating the SRAM (<b>130</b>) address space. For example, in the NMP DIMM (<b>100</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the address management controller (<b>120</b>) is configured to switch from the first address map to the second address map for operating the SRAM (<b>130</b>) address space.</p><p id="p-0048" num="0047">The various actions, acts, blocks, operations, or the like in the method may be performed in the order presented, in a different order or simultaneously. Further, in some example embodiments, some of the actions, acts, blocks, operations, or the like may be omitted, added, modified, skipped, or the like without departing from the scope of the disclosure.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates example address maps created at the host system (<b>200</b>) for operating the SRAM (<b>130</b>) address space.</p><p id="p-0050" num="0049">In general, a size of the SRAM (<b>130</b>) is small compared to DRAM (<b>160</b>) and the host system (<b>200</b>) maps the physical address to the address of the DRAM (<b>160</b>) by considering the bank and the rank interleaving. Therefore, the SRAM (<b>130</b>) address space is not seen as continuous memory space by the host system (<b>200</b>). As a result, the host system (<b>200</b>) is required to allocate two, four, eight, etc., times more memory because of the address map to accommodate the non- continuous memory space. Further, the host system (<b>200</b>) will keep note of valid and invalid addresses with mechanism such as lookup table etc., which will add overhead, consume space and impact the performance of the NMP DIMM (<b>100</b>).</p><p id="p-0051" num="0050">Referring to <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, a 512 KB SRAM (<b>130</b>), which is treated as a DRAM by the host device (<b>200</b>), is divided virtually in to the bank groups, banks, the rows and the columns so as to abide by rules of the memory controller (<b>140</b><i>a</i>/<b>140</b><i>b</i>). Example address maps are provided which may vary based on the memory controller (<b>140</b><i>a</i>/<b>140</b><i>b</i>). Block <b>1</b> of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates an example address map used during the interface training of the NMP DIMM (<b>100</b>) for establishing the interface between the DRAM (<b>160</b>) and the memory controller (<b>140</b><i>a</i>/<b>140</b><i>b</i>) in contiguous sequence. After training, the address map is prepared by BIOS based on the DIMMs, the channels, sockets etc. To accommodate 512 kb of data from the host system (<b>200</b>) the host physical addresses from 0-18 are sufficient. The same can be accommodated at 10 columns, 4 rows and 4 bank groups and banks. However, due to multiple DIMMS available when the host system (<b>200</b>) is preparing the address map for the NMP DIMM (<b>100</b>) a row bit i.e., row R<b>2</b> will come in-between the address map. The SRAM (<b>130</b>) has only row R<b>0</b> and row R<b>1</b> and there is no row R<b>2</b> in the SRAM (<b>130</b>). As a result, after every 215 addresses, there is a hole which is created (such as the row R<b>2</b>) leading to discontinuity in the address map. Further, when the host system (<b>200</b>) sends the data traffic to be accommodated at the NMP DIMM (<b>100</b>) based on the address map created and hence the data directed to the row R<b>2</b> may be accommodated elsewhere leading to confusion and performance degradation.</p><p id="p-0052" num="0051">Block <b>2</b> of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates an example address map in which the host system (<b>200</b>) identifies the SRAM (<b>130</b>) as a DRAM and allocates 1 MB to the SRAM (<b>130</b>) because of the row R<b>2</b> bit and maintains a look-up table identifying valid and invalid addresses. However, the SRAM (<b>130</b>) has only the row R<b>0</b> and the row R<b>1</b>, and there is no row R<b>2</b>.</p><p id="p-0053" num="0052">Block <b>3</b> of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates another example address map in which the host system (<b>200</b>) allocates 2 MB because of the row R<b>2</b> bit and chip set bit CS<b>0</b>, and maintains a look-up table identifying valid and invalid addresses.</p><p id="p-0054" num="0053">Block <b>4</b> of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> illustrates yet another example address map in which the host system (<b>200</b>) allocates 4 MB because of the row R<b>2</b> bit, the chip set bit CS<b>0</b> and channel bit CH<b>0</b>, and maintains a look-up table identifying valid and invalid addresses.</p><p id="p-0055" num="0054">Therefore, as shown in the above examples, the host system (<b>200</b>) address allocation size and the look-up table size increase based on changes in the address map. Generally, a server system will have multiple CPUs, multiple channels, multiple DIMMs, multiple ranks, etc., which will drastically degrade the performance of the server system.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> illustrates example address maps created at the host system (<b>200</b>) for operating the SRAM (<b>130</b>) address space, according to example embodiments.</p><p id="p-0057" num="0056">Referring to <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, the address mapping of the NMP DIMM (<b>100</b>) uses the first address map for interface training phase of the SRAM (<b>130</b>) address space. Once the host system (<b>200</b>) indicates to the NMP DIMM (<b>100</b>) that the interface training is complete, the NMP DIMM (<b>100</b>) switches to the second address map for operating the SRAM (<b>130</b>) address space such as write and read operations. The host system (<b>200</b>) indicates to the NMP DIMM (<b>100</b>) that the interface training is complete by sending a unique pattern or setting a mode register bit. In another example, a bit is used for indicating to the NMP DIMM (<b>100</b>) that the host system (<b>200</b>) has completed the interface training.</p><p id="p-0058" num="0057">Examples of bank interleaving with address mapping used by the memory controller (<b>240</b>) at different stages provided are shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>. Block <b>1</b> illustrates an example first address map used during the interface training by the host system (<b>200</b>). During the interface training phase the host system (<b>200</b>) prepares the first address map assuming the SRAM (<b>130</b>) to be a DRAM. At block <b>2</b>, the second address map is used during regular accesses by the host system (<b>200</b>) such as the read and the write operations to the SRAM (<b>130</b>). At blocks <b>3</b>-<b>5</b>, the SRAM (<b>130</b>) adapts to the second addresses map based on receiving the indication from the host system (<b>200</b>) that the interface training is completed.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is an example illustrating a scenario of interleaved SRAM (<b>130</b>) address space.</p><p id="p-0060" num="0059">Referring to <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, consider an address space of the host system (<b>200</b>) having a capacity of 512 KB with the host address map. The first <b>64</b>B (i.e., address location 0x0000_0000 in the address map) is pointing to a first address in the SRAM (<b>130</b>) but the next <b>64</b>B (i.e., Rsvd at address location 0x0000_0040) may be pointing to a tenth address and not to a second address in the SRAM (<b>130</b>). However, at the NMP DIMM (<b>100</b>) side, the address map is not synchronized with the host address map, thereby leading to the data traffic being allocated without any logic. For example, the address map at the NMP DIMM (<b>100</b>) does not know that the first <b>64</b>B of data of the 512 KB of data from the host system (<b>200</b>) should be read from the first address of the SRAM (<b>130</b>) and the next <b>64</b>B of data should be read from the tenth address of the SRAM (<b>130</b>).</p><p id="p-0061" num="0060">Therefore, when the host system (<b>200</b>) has to allocate 1 MB or 2 MB instead of the 512 KB due to the vacant spaces in the address map due to the discontinuity in the address map. As a result, size of the host address map will also be larger. Further, if the number of most significant bits (MSB) within the address space of the SRAM (<b>130</b>) is greater than the capacity, then additional space needed will be multiplied accordingly. Further, the problem of rank interleaving SRAM (<b>130</b>) also exists which contributes to degradation of the performance of the NMP DIMM (<b>100</b>).</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is an example illustrating a scenario of contiguous SRAM (<b>130</b>) address space, according to example embodiments.</p><p id="p-0063" num="0062">Referring to <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, in conjunction with <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, in the method according to example embodiments, during the interface training of the NMP DIMM (<b>100</b>), the first address map is used by the NMP DIMM (<b>100</b>). As the host system (<b>200</b>) sends the indication to the NMP DIMM (<b>100</b>) that the interface training is completed, the NMP DIMM (<b>100</b>) switches to the second address map for normal mode of operation of the SRAM (<b>130</b>) space. As a result, due to the switching of the address map from the first address map to the second address map, the entire 512 KB of the SRAM (<b>130</b>) address space is contiguous (i.e., from 0x0000_0000 to 0x0007 FFC0) which enhances performance of the NMP DIMM (<b>100</b>). Further, the SRAM (<b>130</b>) address space which is vacant (0x0008_0000 and 0x000F_FFC0) is both available and segregated, and can be used by the host system (<b>200</b>).</p><p id="p-0064" num="0063">Performance over head is created in the interleaved SRAM (<b>130</b>) address space because of the lookup operation for every read and write operation. However, the performance over head is reduced drastically in the contiguous SRAM (<b>130</b>) address space due to the switch from the first address map to the second address map. Further, a space over head for 512 KB with twice the memory allocation (1 MB) is 8 KB for maintaining validity for each 64 byte address which is also reduced drastically in the contiguous SRAM (<b>130</b>) address space.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is an example illustrating a split in SRAM (<b>130</b>) due to an address map.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> illustrates a 32-bit address space of a X86 architecture and the SRAM (<b>130</b>) which is an acting internal memory and is limited in the NMP DIMM (<b>100</b>). In related methods, the address map is interleaved and not contiguous, thereby leading to vacant spaces in memory address map. As a result of the non-contiguous address map, the data traffic received from the host system (<b>200</b>) is spread across the SRAM (<b>130</b>) which degrades the performance of the NMP DIMM (<b>100</b>).</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is an example illustrating a continuity in the SRAM (<b>130</b>) due to address map, according to example embodiments.</p><p id="p-0068" num="0067">Referring to <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> in conjunction with <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, in the method according to example embodiments, the NMP DIMM (<b>100</b>) uses the first address map for performing the interface training and upon completion of the interface training switches to the second address map for the normal operation of the NMP DIMM (<b>100</b>). As a result of the contiguous address map, the data traffic received from the host system (<b>200</b>) is also contiguous thereby enhancing the performance of the NMP DIMM (<b>100</b>).</p><p id="p-0069" num="0068">While example embodiments have been shown and described above, it will be apparent to those skilled in the art that modifications and variations could be made without departing from the scope of the present inventive concept as defined by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for managing an address map in a Near Memory Processing (NMP) dual in-line memory module (DIMM), the method comprising:<claim-text>receiving, by the NMP DIMM, a first indication from a host system to perform interface training for operating a static random-access memory (SRAM) space;</claim-text><claim-text>performing, by the NMP DIMM, the interface training using a first address map based on the first indication;</claim-text><claim-text>receiving, by the NMP DIMM, a second indication from the host system indicating completion of the interface training for operating the SRAM space;</claim-text><claim-text>switching, by the NMP DIMM, from the first address map to a second address map for operating the SRAM space based on the second indication; and</claim-text><claim-text>operating, by the NMP DIMM, the SRAM space using the second address map.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving, by the NMP DIMM, data traffic from the host system, wherein the data traffic is interleaved at, any one or any combination of a rank, a bank group, a row and a column;</claim-text><claim-text>identifying, by the NMP DIMM, an address pattern of the data traffic received from the host system;</claim-text><claim-text>learning, by the NMP DIMM, a host address map corresponding to the host system; and</claim-text><claim-text>accommodating, by the NMP DIMM, the data traffic received from the host system in the SRAM space based on the host address map.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first address map is a direct address map and the second address map is an adaptive address map.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second indication from the host system is provided by one of Mode Register (MR) commands, a NMP configuration register write, a predefined sequence of data of address lines, and a predefined data pattern to the NMP DIMM.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first indication from the host system is received at power ON of the host system.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A Near Memory Processing (NMP) dual in-line memory module (DIMM) for managing an address map, the NMP DIMM comprising:<claim-text>a static random-access memory (SRAM) provided on a Double Data Rate (DDR) interface; and</claim-text><claim-text>an address management controller coupled to the SRAM, and configured to control the NMP DIMM to:<claim-text>receive a first indication from a host system to perform interface training for operating an SRAM space;</claim-text><claim-text>perform the interface training using a first address map based on the first indication;</claim-text><claim-text>receive a second indication from the host system indicating completion of the interface training for operating the SRAM space;</claim-text><claim-text>switch from the first address map to a second address map for operating the SRAM space in response based on the second indication; and</claim-text><claim-text>operate the SRAM space using the second address map.</claim-text></claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the address management controller is further configured to control the NMP DIMM to:<claim-text>receive data traffic from the host system, wherein the data traffic is interleaved at, any one or any combination of a rank, a bank group, a row and a column;</claim-text><claim-text>identify an address pattern of the data traffic received from the host system;</claim-text><claim-text>learn a host address map corresponding to the host system; and</claim-text><claim-text>accommodate the data traffic received from the host system in the SRAM space based on the host address map.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the first address map is a direct address map and the second address map is an adaptive address map.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the second indication from the host system is provided by one of MR commands, a predefined sequence of data of address lines, NMP configuration register write and a predefined data pattern to the NMP DIMM.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the first indication from the host system is received at power ON of the host system.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein addresses of the second address map are contiguous.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the second address map are contiguous.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The NMP DIMM as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>a first dynamic random access memory (DRAM);</claim-text><claim-text>a second DRAM;</claim-text><claim-text>a first memory controller configured to control the first DRAM; and</claim-text><claim-text>a second memory controller configured to control the first DRAM.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. An address management controller comprising:<claim-text>an address map controller configured to communicate with a host system;</claim-text><claim-text>a direct address map controller;</claim-text><claim-text>an address training controller; and</claim-text><claim-text>an adaptive address map controller,</claim-text><claim-text>wherein the address map controller is configured to control the address training controller to perform an interface training for operating a static random-access memory (SRAM) based on a first indication received from the host system,</claim-text><claim-text>wherein the address training controller is configured to perform the interface training based on a first address map, and</claim-text><claim-text>wherein the address map controller is further configured to control the address management controller to communicate with the host system using a second address map based on a second indication received from the host system.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The address management controller as claimed in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the address map controller is further configured to:<claim-text>receive interleaved data traffic from the host system;</claim-text><claim-text>identify an address pattern of the data traffic received from the host system;</claim-text><claim-text>learn a host address map corresponding to the host system; and</claim-text><claim-text>accommodate the data traffic received from the host system in the SRAM based on the host address map.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The address management controller as claimed in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the data traffic is interleaved at, any one or any combination of a rank, a bank group, a row and a column.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The address management controller as claimed in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the first address map is a direct address map and the second address map is an adaptive address map.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The address management controller as claimed in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the second indication from the host system is provided by one of MR commands, a predefined sequence of data of address lines, a Near Memory Processing (NMP) configuration register write and a predefined data pattern to a NMP dual in-line memory module (DIMM).</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The address management controller as claimed in <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the address management controller is further configured to set a status bit based on the second indication.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The address management controller as claimed in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the first indication from the host system is received at power ON of the host system.</claim-text></claim></claims></us-patent-application>