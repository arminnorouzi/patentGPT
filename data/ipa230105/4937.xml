<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004938A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004938</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17810090</doc-number><date>20220630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>103</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>022</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Detecting Inactive Projects Based On Usage Signals And Machine Learning</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63202966</doc-number><date>20210701</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Google LLC</orgname><address><city>Mountain View</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Teng</last-name><first-name>Yun</first-name><address><city>Mountain View</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Google LLC</orgname><role>02</role><address><city>Mountain View</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for detecting inactive projects based on usage signals and machine learning includes receiving a plurality of cloud computing projects each associated with a client device of a cloud computing environment. For each respective cloud computing project of the plurality of cloud computing projects associated with the client device of the cloud computing environment, the method also includes determining a similarity measurement between the respective cloud computing project and a reference cloud computing project, and generating a respective project usage score for the respective cloud computing project based on the similarity measurement determined between the respective cloud computing project and the reference cloud computing project. The method also includes communicating, to the client device of the cloud computing environment, one or more of the respective project usage scores generated for the plurality of cloud computing projects.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="98.81mm" wi="158.75mm" file="US20230004938A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="221.40mm" wi="160.02mm" orientation="landscape" file="US20230004938A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="220.90mm" wi="159.85mm" orientation="landscape" file="US20230004938A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="182.03mm" wi="153.50mm" orientation="landscape" file="US20230004938A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="186.10mm" wi="153.84mm" orientation="landscape" file="US20230004938A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="189.91mm" wi="119.38mm" orientation="landscape" file="US20230004938A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="201.00mm" wi="118.19mm" file="US20230004938A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="198.37mm" wi="118.19mm" file="US20230004938A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="230.21mm" wi="139.36mm" orientation="landscape" file="US20230004938A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This U.S. patent application claims priority under 35 U.S.C. &#xa7; 119(e) to U.S. Provisional Application 63/202,966, filed on Jul. 1, 2021. The disclosure of this prior application is considered part of the disclosure of this application and is hereby incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">This disclosure relates to detecting inactive projects based on usage signals and machine learning.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Users of a cloud computing platform, such as a business, can have many cloud-based projects running concurrently. These projects can be related to various tasks that can be implemented in the cloud, such as data management and/or machine learning. As personnel and objectives of the business change over time, it can be difficult for the business to manage the portfolio of cloud-based projects.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">One aspect of the disclosure provides a computer-implemented method for using machine learning to detect inactive projects based on usage. The computer-implemented method, when executed by data processing hardware, causes the data processing hardware to perform operations that include receiving a plurality of cloud computing projects each associated with a client device of a cloud computing environment. The operations also include, for each respective cloud computing project of the plurality of cloud computing projects associated with the client device of the cloud computing environment, determining a similarity measurement between the respective cloud computing project and a reference cloud computing project and generating a respective project usage score for the respective cloud computing project based on the similarity measurement determined between the respective cloud computing project and the reference cloud computing project. The operations further include communicating one or more respective project usage scores for the plurality of cloud computing projects to the client device of the cloud computing environment.</p><p id="p-0006" num="0005">Implementations of the disclosure may include one or more of the following optional features. In some implementations, the operations further include, for each respective cloud computing project, generating a respective rank of the respective cloud computing project among the plurality of cloud computing projects based on the respective project usage scores generated for each respective cloud computing project. In these implementations, communicating the one or more respective project usage scores for the plurality of cloud computing projects to the client device may include, for each respective cloud computing project, communicating the respective project usage score for the respective cloud computing project along with the respective rank of the respective cloud computing project among the plurality of cloud computing projects.</p><p id="p-0007" num="0006">In some implementations, the operations further include determining that one of the plurality of cloud computing projects satisfies a project threshold based on the respective project usage score of the one of the plurality of cloud computing projects. The project threshold represents a predetermined activity level that corresponds to an active cloud computing project. In these implementations, the operations may further include generating a remediation recommendation for the one of the plurality of cloud computing projects that satisfies the project threshold and communicating the remediation recommendation to the client device of the cloud computing environment. In some of these implementations, the remediation recommendation may include a project cleanup recommendation or a project inspection recommendation.</p><p id="p-0008" num="0007">In some examples, determining the similarity measurement between the respective cloud computing project and the reference cloud computing project includes comparing a first value of a cloud computing project usage metric for the respective cloud computing project and a second value of the cloud computing project usage metric for the reference cloud computing project. Here, the cloud computing project usage metric may include at least one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</p><p id="p-0009" num="0008">In some implementations, determining the similarity measurement between the respective cloud computing project and the reference cloud computing project includes comparing a first set of values of a plurality of cloud computing project usage metrics for the respective cloud computing project and a second set of values of the plurality of cloud computing project usage metrics for the reference cloud computing project. In these implementations, the plurality of cloud computing project usage metrics may correspond to more than one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric. Further, the reference cloud computing project may have zero project usage during a lifetime of the reference cloud computing project.</p><p id="p-0010" num="0009">Another aspect of the disclosure provides a system for using machine learning to detect inactive projects based on usage. The system includes data processing hardware and memory hardware in communication with the data processing hardware. The memory hardware stores instructions that when executed on the data processing hardware cause the data processing hardware to perform operations. The operations include receiving a plurality of cloud computing projects each associated with a client device of a cloud computing environment. The operations also include, for each respective cloud computing project of the plurality of cloud computing projects associated with the client device of the cloud computing environment, determining a similarity measurement between the respective cloud computing project and a reference cloud computing project and generating a respective project usage score for the respective cloud computing project based on the similarity measurement determined between the respective cloud computing project and the reference cloud computing project. The operations further include communicating one or more respective project usage scores for the plurality of cloud computing projects to the client device of the cloud computing environment</p><p id="p-0011" num="0010">This aspect may include one or more of the following optional features. In some implementations, the operations further include, for each respective cloud computing project, generating a respective rank of the respective cloud computing project among the plurality of cloud computing projects based on the respective project usage scores generated for each respective cloud computing project. In these implementations, communicating the one or more respective project usage scores for the plurality of cloud computing projects to the client device may include, for each respective cloud computing project, communicating the respective project usage score for the respective cloud computing project along with the respective rank of the respective cloud computing project among the plurality of cloud computing projects.</p><p id="p-0012" num="0011">In some implementations, the operations further include determining that one of the plurality of cloud computing projects satisfies a project threshold based on the respective project usage score of the one of the plurality of cloud computing projects. The project threshold represents a predetermined activity level that corresponds to an active cloud computing project. In these implementations the operations may further include generating a remediation recommendation for the one of the plurality of cloud computing projects that satisfies the project threshold and communicating the remediation recommendation to the client device of the cloud computing environment. In some of these implementations, the remediation recommendation may include a project cleanup recommendation or a project inspection recommendation.</p><p id="p-0013" num="0012">In some examples, determining the similarity measurement between the respective cloud computing project and the reference cloud computing project includes comparing a first value of a cloud computing project usage metric for the respective cloud computing project and a second value of the cloud computing project usage metric for the reference cloud computing project. Here, the cloud computing project usage metric may include at least one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</p><p id="p-0014" num="0013">In some implementations, determining the similarity measurement between the respective cloud computing project and the reference cloud computing project includes comparing a first set of values of a plurality of cloud computing project usage metrics for the respective cloud computing project and a second set of values of the plurality of cloud computing project usage metrics for the reference cloud computing project. In these implementations, the plurality of cloud computing project usage metrics may correspond to more than one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric. Further, the reference cloud computing project may have zero project usage during a lifetime of the reference cloud computing project.</p><p id="p-0015" num="0014">The details of one or more implementations of the disclosure are set forth in the accompanying drawings and the description below. Other aspects, features, and advantages will be apparent from the description and drawings, and from the claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic view of an example system for using machine learning to detect inactive projects based on usage.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic view of an unattended project controller detecting inactive projects.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is a schematic view of the unattended project controller generating a remediation recommendation based on a first project usage metric.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a schematic view of the unattended project controller generating a remediation recommendation based on a second project usage metric.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic view of a machine learning model generating clusters for the projects.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of an exemplary arrangement of operations for a method for using machine learning to detect inactive projects based on usage.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of an exemplary arrangement of operations for a method for using machine learning to provide recommendations for projects based on usage.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic view of an example computing device that may be used to implement the systems and methods described herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0024" num="0023">Like reference symbols in the various drawings indicate like elements</p><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0025" num="0024">Businesses can use cloud computing environments to implement a large number of different projects. These projects can span in scope from one-off prototypes to applications that are essential for the business. Further, each project can be assigned to a number of managers and/or employees (i.e., project owners). Over time, as project owners switch roles or leave the business, as new projects are created, and as business objectives change, it can be difficult to manage the project portfolio and determine which projects are important and which projects are no longer needed. By keeping unused projects in the cloud computing environment, the business can face unnecessary costs, security exposure, and operational overhead.</p><p id="p-0026" num="0025">While it may be straightforward to identify unused projects (e.g., projects with zero usage during an observation period), it may be difficult to identify projects that have activity without utility. For example, a user tests a file or function in a project without cleaning up after testing. In this example, the project may appear to be active although the project is actually inactive and unneeded. These &#x201c;active&#x201d; projects may increase cost and pose greater security risks versus completely unused projects.</p><p id="p-0027" num="0026">Currently, there are rule-based methods for classifying projects (i.e., active or inactive). However, these known methods require manual inspection and do not scale. Further, it can be difficult to find a rule-based method that applies to multiple businesses. Implementations herein use machine learning to detect inactive projects in a cloud computing environment based on usage signals. In other words, a machine learning algorithm may analyze a project portfolio to determine which projects are active and which are inactive using one or more usage signals as features or inputs. The projects can then each be given a score indicating the respective project's usage and/or the projects can be ranked based on usage. In some implementations, the system generates recommendations on how to manage each project (e.g., delete, inspect, cleanup).</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic view of an example system <b>100</b> for using machine learning to detect inactive projects based on usage. The system <b>100</b> includes a client <b>10</b> using a client device <b>110</b> to access a project console <b>120</b> with a plurality of cloud computing projects <b>111</b>. The client device <b>110</b> includes data processing hardware <b>112</b> and memory hardware <b>114</b>. In some implementations, the data processing hardware <b>112</b> executes at least a portion of an unattended project controller <b>210</b>. For example, the client device <b>110</b> executes a portion of the unattended project controller <b>210</b> locally while a remaining portion of the unattended project controller <b>210</b> executes on a cloud computing environment <b>150</b>. The client device <b>110</b> can be any computing device capable of communicating with the cloud computing environment <b>150</b> through, for example, a network <b>140</b>. The client device <b>110</b> includes, but is not limited to, desktop computing devices and mobile computing devices, such as laptops, tablets, smart phones, smart speakers/displays, smart appliances, internet-of-things (IoT) devices, and wearable computing devices (e.g., headsets and/or watches).</p><p id="p-0029" num="0028">In some implementations, the client device <b>110</b> is in communication with the cloud computing environment <b>150</b> (also referred to herein as a remote system <b>150</b>) via the network <b>140</b>. The cloud computing environment <b>150</b> may be a single computer, multiple computers, or a distributed system (e.g., a cloud environment) having scalable/elastic resources <b>152</b> including computing resources <b>154</b> (e.g., data processing hardware) and/or storage resources <b>156</b> (e.g., memory hardware). A data store <b>158</b> (i.e., a remote storage device) may be overlain on the storage resources <b>156</b> to allow scalable use of the storage resources <b>156</b> by one or more client device <b>110</b> or the computing resources <b>154</b>. The clouding computing environment <b>150</b> may be used to store and host a number of cloud computing projects <b>111</b> (herein also referred to as just projects <b>111</b>). Further, the cloud computing environment <b>150</b> may execute some or all of the unattended project controller <b>210</b> which includes a machine learning model <b>450</b>. The project console <b>120</b> may execute locally on the client device <b>110</b> (e.g., on the data processing hardware <b>112</b>) or remotely (e.g., at the remote system <b>150</b>) or any combination thereof. Likewise, the unattended project controller <b>210</b> may be stored locally at the client device <b>110</b> or stored at the remote system <b>150</b> (e.g., at the data store <b>158</b>) or any combination thereof.</p><p id="p-0030" num="0029">In some examples, each cloud computing project <b>111</b> is a set of configuration settings that defines how an application interacts with services and resources associated with the cloud computing environment <b>150</b>. In this sense, a project <b>111</b> organizes cloud computing resources. A project <b>111</b> may consist of a set of users, a set of application programming interfaces (APIs), billing authentication, and/or various means of monitoring the APIs. For instance, cloud storage buckets and objects along with user permissions for accessing these buckets and objects may reside in a particular project <b>111</b>.</p><p id="p-0031" num="0030">Often, a client <b>10</b> of the cloud computing environment <b>150</b> can create multiple projects <b>111</b> and use a central hub/interface, such as the project console <b>120</b>, to organize and to manage each project <b>111</b> and the resources associated with each respective project <b>111</b>. In this sense, a project <b>111</b> functions as a resource organizer. For example, the client <b>10</b> may be developing a new version of a client resource (e.g., an application) and have a test project <b>111</b> for the new version that has not been yet released to function as a test environment and a production project <b>111</b> for the version of the client resource that is already in use/production.</p><p id="p-0032" num="0031">Each project <b>111</b> may use identity and access management (IAM) to grant the ability to particular users (e.g., employees) to manage and to work on a project <b>111</b>. In this respect, a client <b>10</b>, when granted permission/access, becomes a member of the project <b>111</b>. The IAM may also allow a project <b>111</b> to have varying degrees of access, member roles, and/or other management policies.</p><p id="p-0033" num="0032">Unfortunately, with the ability to generate multiple projects <b>111</b>, clients <b>10</b> often have projects <b>111</b> with varying degrees of activity ranging from inactive or unattended projects to active projects. Because a project <b>111</b> may occupy cloud computing resources, these inactive projects may have implications for the client <b>10</b> with respect to cost and/or security. As such, the unattended project controller <b>210</b> is configured to assess the activity level of one or more of the projects <b>111</b> for the client <b>10</b> and to generate an output <b>115</b>, such as a recommendation, or lack thereof, as to whether the client <b>10</b> should perform some housekeeping or other action with regard to a particular project <b>111</b> or group of projects <b>111</b>. For instance, the unattended project controller <b>210</b> identifies that the project <b>111</b> is inactive and generates a remediation recommendation <b>115</b>D (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) to clean up the project <b>111</b>. In another example, the unattended project controller <b>210</b> identifies that the project <b>111</b> has missing or inactive members and the output <b>115</b> recommends reassigning roles to reconcile these ownership issues.</p><p id="p-0034" num="0033">To generate the output <b>115</b>, the unattended project controller <b>210</b> collects or receives one or more usage metrics <b>113</b> for a particular project <b>111</b> and determines whether the one or more usage metrics <b>113</b> indicates that the unattended project controller <b>210</b> should generate a particular output <b>115</b>. Some examples of usage metrics <b>113</b> include a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</p><p id="p-0035" num="0034">In some configurations, the unattended project controller <b>210</b> uses the machine learning model <b>450</b> when generating the output <b>115</b>. For example, the machine learning model receives a project <b>111</b> and its associated usage metric(s) <b>113</b> and generates the output <b>115</b> predicting a level of activity for the project <b>111</b> based on reference projects <b>117</b> that the machine learning model <b>450</b> is provided. In these examples, the machine learning model <b>450</b> may be configured to perform clustering where the model <b>450</b> groups the project <b>111</b> into a cluster <b>460</b> that represents a level of activity for the project <b>111</b>. For instance, the model <b>450</b> may cluster a received project <b>111</b> into an inactive cluster <b>460</b> or an active cluster <b>460</b>. In some implementations, the inactive cluster <b>460</b> has a centroid that represents a reference project <b>117</b> with a designated level of activity to represent the cluster <b>460</b>. For example, an inactive cluster <b>460</b> has a centroid represented by a reference project <b>117</b> with zero activity (i.e., completely inactive). When a project <b>111</b> received by the model <b>450</b> is classified into a cluster <b>460</b>, such as the inactive cluster <b>460</b>, the model <b>450</b> may compare the received project <b>111</b> to the reference project <b>117</b> to determine a relative level of activity (or inactivity) for the received project <b>111</b>. For instance, the model <b>450</b> or recommender uses a similarity function that compares usage metric(s) <b>113</b> of the reference project <b>117</b> to usage metric(s) <b>113</b> of the received project <b>111</b>. Here, the unattended project controller <b>210</b> may then score the received project <b>111</b> based on its comparison to the reference project <b>117</b> to generate an output <b>115</b> of a usage score for the received project <b>111</b>. The recommender may then use the usage score to generate its recommendation for the project.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic view <b>200</b> of the unattended project controller <b>210</b> detecting inactive projects <b>111</b>. The unattended project controller <b>210</b> may receive one or more inputs including projects <b>111</b>, usage metrics <b>113</b>, <b>113</b>A-C, reference projects <b>117</b>, project thresholds <b>218</b> (also referred to herein as activity thresholds) and/or implement the machine learning model <b>450</b> to process the one or more inputs <b>111</b>, <b>113</b> to generate one or more outputs <b>115</b>, <b>115</b>A-D. The projects <b>111</b> may include a set of cloud computing projects <b>111</b> owned by a business in a cloud computing environment (e.g., cloud computing environment <b>150</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and the usage metrics <b>113</b> correspond to each project <b>111</b>. The machine learning model <b>450</b> may receive some or all of the inputs <b>111</b>, <b>113</b>, <b>117</b>, <b>218</b> from a data storage, such as data storage <b>158</b> of the cloud computing environment <b>150</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0037" num="0036">In some implementations, the usage metrics <b>113</b> include a number of API calls <b>113</b>, <b>113</b>A that have been made for the corresponding project <b>111</b>. Further, the usage metrics <b>113</b> may include a billing service metric <b>113</b>, <b>113</b>B and/or an identity and access management (IAM) metric <b>113</b>, <b>113</b>C corresponding to a project <b>111</b>. In some implementations, the usage metrics <b>113</b> are collected from a customizable period of time. For example, a business may want to know which projects are active in the last year, the last three years, etc., and the usage metrics <b>113</b> may be obtained according to the desired timeline. The above list of usage metrics <b>113</b> is for illustrative purposes and is not intended to be limiting. Any suitable metrics (e.g., access frequency, access types, access sizes, etc.) can be used to as project usage metrics <b>113</b>.</p><p id="p-0038" num="0037">The machine learning model <b>450</b> may process the projects <b>111</b> and the corresponding project usage metric <b>113</b> based on either one, or both, of the reference projects <b>117</b> and/or the project threshold score <b>218</b> to produce outputs <b>115</b>, <b>115</b>A-D. Any of the outputs <b>115</b> may be transmitted to a client device (i.e., client device <b>110</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) for display to a client <b>10</b>. As an example, the machine learning model <b>450</b> may generate a similarity measurement <b>115</b>A for each project <b>111</b> based one or more received reference projects <b>117</b>. The similarity measurement <b>115</b>A may indicate a level of similarity between the project <b>111</b> and the corresponding reference project <b>117</b>. For example, the higher the similarity measurement <b>115</b>A, the more similar the project <b>111</b> and the corresponding reference project <b>117</b> are. In some implementations, the similarity measurement <b>115</b>A between the respective cloud computing project <b>111</b> and the reference cloud computing project <b>117</b> includes comparing a first set of values of a plurality of cloud computing project usage metrics <b>113</b> for the respective cloud computing project <b>111</b> and a second set of values of the plurality of cloud computing project usage metrics <b>113</b> for the reference cloud computing project <b>117</b>. In these implementations, the similarity measurement <b>115</b>A indicates the similarity between the respective project usage metrics <b>113</b> of each project <b>111</b> with the reference project <b>117</b>. The similarity measurement <b>115</b>A may be a percentage, a numeric score, etc. In some implementations, the machine learning model <b>450</b> determines a project usage score <b>115</b>B based on the similarity measurement <b>115</b>A. For example, the project usage score <b>115</b>B may be a scaled (i.e., a log transformation) version of the similarity measurement <b>115</b>A. In some implementations the similarity measurement <b>115</b>A and the project usage score <b>115</b>B are calculated independently of each other. For example, the project usage score <b>115</b>B may be based on the project usage metrics <b>113</b> and indicate a level of activity of the project <b>111</b>.</p><p id="p-0039" num="0038">The output <b>155</b>, in some examples, includes one or more project ranks <b>115</b>C (also referred to herein as &#x201c;rankings <b>115</b>C&#x201d;). The project ranks <b>115</b>C rank one or more of the projects <b>111</b> among the plurality of cloud computing projects <b>111</b>, where the highest ranked projects <b>111</b> are the most likely to be active and the lowest ranked projects <b>111</b> are the most likely to be inactive/unattended. In some implementations, the project ranks <b>115</b>C are based on the similarity measurement <b>115</b>A or the project usage score <b>115</b>B. In other implementations, the project ranks <b>115</b>C is based on a combination of the similarity measurement <b>115</b>A and the project usage score <b>115</b>B.</p><p id="p-0040" num="0039">In some implementations, the output <b>115</b> includes one or more remediation recommendations <b>115</b>D. The remediation recommendation <b>115</b>, <b>115</b>D includes a recommendation to the client <b>10</b> on how to manage a project <b>111</b>. The remediation recommendation <b>115</b>D can be any suitable recommendation for a project such as a delete recommendation, a project cleanup recommendation, a project inspection recommendation, etc. The remediation recommendation <b>115</b>D may be based on any suitable combination of the similarity measurement <b>115</b>A, project usage score <b>115</b>B, and/or project ranks <b>115</b>C. For example, when a project <b>111</b> has a high similarity score <b>115</b>A with a reference project <b>117</b> corresponding to a level of inactivity (i.e., the reference project represents an inactive project), that project <b>111</b> may have a remediation recommendation of &#x201c;delete&#x201d; or &#x201c;cleanup.&#x201d; Alternatively, when a project <b>111</b> has a high similarity score <b>115</b>A with a reference project <b>117</b> corresponding to a level of activity (i.e., the reference project represents an active project), that project <b>111</b> may have a remediation recommendation of &#x201c;reclaim ownership&#x201d; or &#x201c;inspect.&#x201d; In some implementations, the remediation recommendation <b>115</b>D is based on the project usage score <b>115</b>B. For example, the unattended project controller <b>210</b> provides a cleanup remediation recommendation <b>115</b>D for the bottom ten percentile of projects <b>111</b> based on the project usage score <b>115</b>B. Further, the unattended project controller <b>210</b> may divide projects <b>111</b> into groups based on the project usage score <b>115</b>D, and each group may be given the same remediation recommendations <b>115</b>D. Alternatively, the unattended project controller <b>210</b> instead implements the project ranks <b>115</b>C to determine the remediation recommendation <b>115</b>D based (e.g., the bottom ten percentile based on project rank <b>115</b>C receive a cleanup recommendation).</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> includes a schematic view <b>300</b>A of the unattended project controller generating a remediation recommendation <b>115</b>D based on a first project usage metric. In some implementations, the remediation recommendation <b>115</b>D is based on one or more comparisons between usage metrics <b>113</b> of a project <b>111</b> to project thresholds <b>218</b>. Referring to the illustrative example of <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, the unattended project controller <b>210</b> receives project A <b>111</b> and a first usage metric <b>113</b>, <b>113</b><i>a </i>along with a first project threshold <b>300</b>, <b>300</b><i>a</i>. The unattended project controller <b>210</b> determines that the first usage metric <b>113</b><i>a </i>satisfies the first project threshold <b>318</b> (e.g., the first usage metric <b>113</b><i>a </i>is greater than the first project threshold <b>300</b><i>a</i>). The unattended project controller <b>210</b> thus, in this example, generates a remediation recommendation <b>115</b>D of &#x201c;cleanup,&#x201d; indicating that project A <b>111</b> is inactive. At this point, the remediation recommendation <b>115</b>D may be transmitted to client device <b>110</b> for display to the client <b>10</b>.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a schematic view <b>300</b>B of the unattended project controller generating a remediation recommendation <b>115</b>D based on a second project usage metric <b>113</b>, <b>113</b><i>b</i>. In the illustrative example of <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, the unattended project controller <b>210</b> receives project A <b>111</b> and a second usage metric <b>113</b><i>b </i>along with a second project threshold <b>300</b>, <b>300</b><i>b</i>. The unattended project controller <b>210</b> determines that the second usage metric <b>113</b><i>b </i>satisfies the second project threshold <b>300</b><i>b </i>(i.e., the second usage metric <b>113</b><i>b </i>is greater than the second project threshold <b>300</b><i>b</i>). The unattended project controller <b>210</b> thus alters the remediation recommendation <b>115</b>D to &#x201c;inspect,&#x201d; indicating that project A <b>111</b> may be active. At this point, the altered remediation recommendation <b>115</b>D may be transmitted to the client device <b>110</b> for display to the client <b>10</b>.</p><p id="p-0043" num="0042">In some implementations, the first usage metric <b>113</b><i>a </i>is different than the second usage metric <b>113</b><i>b</i>. For example, the first usage metric <b>113</b><i>a </i>may be any of API calls <b>113</b>A, Billing Service Metric <b>113</b>B, or IAM metric <b>113</b>C, while the second usage metric <b>113</b><i>b </i>is a different usage metric <b>113</b> than the first usage metric <b>113</b><i>a. </i></p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic view <b>400</b> of an example machine learning model <b>450</b> for detecting inactivity of one or more projects <b>111</b> based on usage. In some implementations, the machine learning model <b>450</b> is a self-supervised or unsupervised machine learning model, which is a machine learning model that receives unlabeled data as input <b>410</b>. Using a self-supervised machine learning model <b>450</b> can be advantageous as it can be difficult to received label data training data for inactive and active cloud based projects <b>111</b>. Further, even if labeled data was available, it might not be helpful to train a single machine learning model, as different customers will have different preferences as to what constitutes an active project and what constitutes an inactive project. Thus, it can be impractical to implement a singular model trained on a large set of data for all customers. A self-supervised learning model can be tailored based on the business, which will result in more accurate recommendations.</p><p id="p-0045" num="0044">Here, the self-supervised machine learning model <b>450</b> can receive unlabeled data as an input <b>410</b> (i.e., projects <b>111</b>, project usage metrics <b>113</b>, reference projects <b>117</b>, and project thresholds <b>218</b>) and produce two clusters <b>460</b>, <b>460</b>A-B of projects <b>111</b> based on two reference projects <b>117</b>. In some implementations, the first cluster <b>460</b>A is based on one or more reference projects <b>117</b> corresponding to inactivity (i.e. inactive or unattended projects) and a second cluster <b>460</b>B is based on one or more reference projects <b>117</b> corresponding to activity (i.e., active projects). For example, the reference project <b>117</b> based on inactivity may have a corresponding usage metric <b>113</b> indicating zero project usage during its lifetime. In another example, the reference project <b>117</b> based on activity may be chosen by a client <b>10</b> indicating sufficient usage to be deemed active.</p><p id="p-0046" num="0045">The machine learning model <b>450</b> may process each project <b>111</b> individually to generate the clusters <b>460</b>A-B. In some implementations, the machine learning model <b>450</b> processes the projects <b>111</b> in an iterative fashion for a number of cycles until the clusters <b>460</b> are sufficiently separated (i.e., each project <b>111</b> is within a certain distance from either cluster <b>460</b>A-B). In some implementations, the machine learning model <b>450</b> receives feedback <b>420</b> which can be used to regenerate the clusters <b>460</b>. For example, a project <b>111</b> that was placed in the cluster <b>460</b>A with the reference project <b>117</b> corresponding to inactivity may be manually re-labeled as active. In turn, the machine learning model <b>450</b> may adjust one or more parameters such that the project <b>111</b>, and similar projects <b>111</b>, will be placed in the active cluster <b>460</b>B in future iterations. As another example, if a project <b>111</b> receives a remediation recommendation <b>115</b>D indicating that the project <b>111</b> needs a cleanup and that project <b>111</b> remains unchanged, the machine learning model <b>450</b> may adjust so that the project <b>111</b> will not be placed in the cluster <b>460</b>A where projects are recommended to be cleaned up (i.e., inactive).</p><p id="p-0047" num="0046">In some implementations, one or more outputs <b>115</b> are derived based on the clusters <b>460</b>. For example, a similarity measurement <b>115</b>A may be based on the distance in the cluster <b>460</b> between a project <b>111</b> and the corresponding reference project <b>117</b>. Here, the projects <b>111</b> placed closest in the cluster to the reference project <b>117</b> would have the largest similarity measurement <b>115</b>A. Further, the project usage score <b>115</b>B may be based on the similarity measurement <b>115</b>A. For example, the project usage score <b>115</b>B is based on the percentile rank of the similarity measurement <b>115</b>A. In other implementations, the project ranks <b>115</b>C are based on the clusters <b>460</b>. For example, the projects <b>111</b> that belong in the cluster <b>460</b>A corresponding to the reference project <b>117</b> indicating inactivity are ranked low while the projects <b>111</b> in the cluster <b>460</b>B are ranked high. The project rank <b>115</b>C may also be based on the distance between the project <b>111</b> and its corresponding reference project <b>117</b>, where the projects <b>111</b> placed closer to their corresponding reference project <b>117</b> are ranked higher in the active cluster <b>460</b>B and lower in the inactive cluster <b>460</b>A.</p><p id="p-0048" num="0047">In some implementations the remediation recommendation <b>115</b>D can be based on the clusters <b>460</b>A and <b>460</b>B and/or any of the similarity measurement <b>115</b>A, project usage score <b>115</b>B, and project rank <b>115</b>C. For example, any projects <b>111</b> that are placed in the inactive cluster <b>460</b>A are labeled with the remediation recommendation <b>115</b>D of &#x201c;clean up,&#x201d; while the projects <b>111</b> placed in the active cluster <b>460</b>B may be given the remediation recommendation <b>115</b>D of &#x201c;confirm ownership.&#x201d; Further, if a project <b>111</b> is not sufficiently close to a cluster <b>460</b> (i.e., farther than a predetermined distance away from either reference project <b>117</b>), that project <b>111</b> may be give a remediation recommendation of &#x201c;inspect.&#x201d;</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of an exemplary arrangement of operations for a method <b>500</b> for using machine learning to detect inactive projects based on usage. The method <b>500</b> may be performed, for example, by various elements of the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> or computing device <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>. For instance, the method <b>500</b> may execute on the data processing hardware <b>154</b> of the remote system <b>150</b>, the data processing hardware <b>112</b> of the client device <b>110</b>, the data processing hardware <b>710</b> of computing device <b>700</b>, or some combination thereof. At operation <b>502</b>, the method <b>500</b> includes receiving a plurality of cloud computing projects <b>111</b> each associated with a client <b>10</b> of a cloud computing environment <b>150</b>. At operation <b>504</b>, for each respective cloud computing project <b>111</b> of the plurality of cloud computing projects <b>111</b> associated with the client <b>10</b> of the cloud computing environment <b>150</b>, the method <b>500</b> includes determining, at operation <b>504</b><i>a</i>, a similarity measurement <b>115</b>A between the respective cloud computing project <b>111</b> and a reference cloud computing project <b>117</b> and generating, at operation <b>504</b><i>b</i>, a respective project usage score <b>115</b>B for the respective cloud computing project <b>111</b> based on the similarity measurement <b>115</b>A determined between the respective cloud computing project <b>111</b> and the reference cloud computing project <b>117</b>. At operation <b>506</b>, the method <b>500</b> includes communicating one or more respective project usage scores <b>115</b>B for the plurality of cloud computing projects <b>111</b> to the client <b>10</b> of the cloud computing environment <b>150</b>.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart of an exemplary arrangement of operations for a method <b>600</b> for using machine learning to provide recommendations for projects based on usage. The method <b>600</b> may be performed, for example, by various elements of the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> or computing device <b>700</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>. For instance, the method <b>600</b> may execute on the data processing hardware <b>154</b> of the remote system <b>150</b>, the data processing hardware <b>112</b> of the client device <b>110</b>, the data processing hardware of computing device <b>700</b>, or some combination thereof. At operation <b>602</b>, the method <b>600</b> includes receiving a cloud computing project <b>111</b> associated with a client <b>10</b> of a cloud computing environment <b>150</b>. At operation <b>604</b>, the method <b>600</b> includes determining whether a project usage metric <b>113</b> of the cloud computing project <b>111</b> satisfies an activity threshold <b>218</b>. When the project usage metric <b>113</b> of the cloud computing project <b>111</b> satisfies the activity threshold <b>218</b>, at operation <b>606</b>, the method <b>600</b> includes generating a remediation recommendation <b>115</b>D for the cloud computing project <b>111</b>. At operation <b>608</b>, the method <b>600</b> includes communicating the remediation recommendation <b>115</b>D to the client device <b>110</b> of the cloud computing environment <b>150</b>.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic view of an example computing device <b>700</b> that may be used to implement the systems and methods described in this document. The computing device <b>700</b> is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.</p><p id="p-0052" num="0051">The computing device <b>700</b> includes a processor <b>710</b> (interchangeably referred to as &#x201c;data processing hardware <b>710</b>&#x201d;), memory <b>720</b> (e.g., memory hardware), a storage device <b>730</b>, a high-speed interface/controller <b>740</b> connecting to the memory <b>720</b> and high-speed expansion ports <b>750</b>, and a low speed interface/controller <b>760</b> connecting to a low speed bus <b>770</b> and a storage device <b>730</b>. Each of the components <b>710</b>, <b>720</b>, <b>730</b>, <b>740</b>, <b>750</b>, and <b>760</b>, are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate. The processor <b>710</b> can process instructions for execution within the computing device <b>700</b>, including instructions stored in the memory <b>720</b> or on the storage device <b>730</b> to display graphical information for a graphical user interface (GUI) on an external input/output device, such as display <b>780</b> coupled to high speed interface <b>740</b>. Data processing hardware <b>710</b> may include the data processing hardware <b>112</b> of the user device <b>110</b> or the data processing hardware <b>154</b> of the remote system <b>150</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also, multiple computing devices <b>700</b> may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).</p><p id="p-0053" num="0052">The memory <b>720</b> stores information non-transitorily within the computing device <b>700</b>. The memory <b>720</b> may be a computer-readable medium, a volatile memory unit(s), or non-volatile memory unit(s). The non-transitory memory <b>720</b> may be physical devices used to store programs (e.g., sequences of instructions) or data (e.g., program state information) on a temporary or permanent basis for use by the computing device <b>700</b>. Examples of non-volatile memory include, but are not limited to, flash memory and read-only memory (ROM)/programmable read-only memory (PROM)/erasable programmable read-only memory (EPROM)/electronically erasable programmable read-only memory (EEPROM) (e.g., typically used for firmware, such as boot programs). Examples of volatile memory include, but are not limited to, random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), phase change memory (PCM) as well as disks or tapes.</p><p id="p-0054" num="0053">The storage device <b>730</b> is capable of providing mass storage for the computing device <b>700</b>. In some implementations, the storage device <b>730</b> is a computer-readable medium. In various different implementations, the storage device <b>730</b> may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. In additional implementations, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory <b>720</b>, the storage device <b>730</b>, or memory on processor <b>710</b>.</p><p id="p-0055" num="0054">The high speed controller <b>740</b> manages bandwidth-intensive operations for the computing device <b>700</b>, while the low speed controller <b>760</b> manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only. In some implementations, the high-speed controller <b>740</b> is coupled to the memory <b>720</b>, the display <b>780</b> (e.g., through a graphics processor or accelerator), and to the high-speed expansion ports <b>750</b>, which may accept various expansion cards (not shown). In some implementations, the low-speed controller <b>760</b> is coupled to the storage device <b>730</b> and a low-speed expansion port <b>790</b>. The low-speed expansion port <b>790</b>, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.</p><p id="p-0056" num="0055">The computing device <b>700</b> may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server <b>700</b><i>a </i>or multiple times in a group of such servers <b>700</b><i>a</i>, as a laptop computer <b>700</b><i>b</i>, or as part of a rack server system <b>700</b><i>c. </i></p><p id="p-0057" num="0056">Various implementations of the systems and techniques described herein can be realized in digital electronic and/or optical circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.</p><p id="p-0058" num="0057">These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms &#x201c;machine-readable medium&#x201d; and &#x201c;computer-readable medium&#x201d; refer to any computer program product, non-transitory computer readable medium, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term &#x201c;machine-readable signal&#x201d; refers to any signal used to provide machine instructions and/or data to a programmable processor.</p><p id="p-0059" num="0058">A software application (i.e., a software resource) may refer to computer software that causes a computing device to perform a task. In some examples, a software application may be referred to as an &#x201c;application,&#x201d; an &#x201c;app,&#x201d; or a &#x201c;program.&#x201d; Example applications include, but are not limited to, system diagnostic applications, system management applications, system maintenance applications, word processing applications, spreadsheet applications, messaging applications, media streaming applications, social networking applications, and gaming applications.</p><p id="p-0060" num="0059">The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.</p><p id="p-0061" num="0060">To provide for interaction with a user, one or more aspects of the disclosure can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), LCD (liquid crystal display) monitor, or touch screen for displaying information to the user and optionally a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.</p><p id="p-0062" num="0061">A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly, other implementations are within the scope of the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method when executed by data processing hardware causes the data processing hardware to perform operations comprising:<claim-text>receiving a plurality of cloud computing projects each associated with a client device of a cloud computing environment;</claim-text><claim-text>for each respective cloud computing project of the plurality of cloud computing projects associated with the client device of the cloud computing environment:<claim-text>determining a similarity measurement between the respective cloud computing project and a reference cloud computing project; and</claim-text><claim-text>generating a respective project usage score for the respective cloud computing project based on the similarity measurement determined between the respective cloud computing project and the reference cloud computing project; and</claim-text></claim-text><claim-text>communicating, to the client device of the cloud computing environment, one or more of the respective project usage scores generated for the plurality of cloud computing projects.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the operations further comprise, for each respective cloud computing project, ranking the respective cloud computing project among the plurality of cloud computing projects based on the respective project usage scores generated for each respective cloud computing project; and</claim-text><claim-text>communicating the one or more respective project usage scores for the plurality of cloud computing projects to the client device comprises, for each respective cloud computing project, communicating the respective project usage score for the respective cloud computing project along with the ranking of the respective cloud computing project among the plurality of cloud computing projects.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>determining that one of the plurality of cloud computing projects satisfies a project threshold based on the respective project usage score of the one of the plurality of cloud computing projects, the project threshold representing a predetermined activity level that corresponds to an active cloud computing project;</claim-text><claim-text>generating a remediation recommendation for the one of the plurality of cloud computing projects that satisfies the project threshold; and</claim-text><claim-text>communicating the remediation recommendation to the client device of the cloud computing environment.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the remediation recommendation comprises a project cleanup recommendation.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the remediation recommendation comprises a project inspection recommendation.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the similarity measurement between the respective cloud computing project and the reference cloud computing project comprises comparing a first value of a cloud computing project usage metric for the respective cloud computing project and a second value of the cloud computing project usage metric for the reference cloud computing project.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the cloud computing project usage metric comprises at least one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the similarity measurement between the respective cloud computing project and the reference cloud computing project comprises comparing a first set of values of a plurality of cloud computing project usage metrics for the respective cloud computing project and a second set of values of the plurality of cloud computing project usage metrics for the reference cloud computing project.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of cloud computing project usage metrics corresponds to more than one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the reference cloud computing project has zero project usage during a lifetime of the reference cloud computing project.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system comprising:<claim-text>data processing hardware; and</claim-text><claim-text>memory hardware in communication with the data processing hardware, the memory hardware storing instructions that when executed on the data processing hardware cause the data processing hardware to perform operations comprising:<claim-text>receiving a plurality of cloud computing projects each associated with a client device of a cloud computing environment;</claim-text><claim-text>for each respective cloud computing project of the plurality of cloud computing projects associated with the client device of the cloud computing environment:<claim-text>determining a similarity measurement between the respective cloud computing project and a reference cloud computing project; and</claim-text><claim-text>generating a respective project usage score for the respective cloud computing project based on the similarity measurement determined between the respective cloud computing project and the reference cloud computing project; and</claim-text></claim-text><claim-text>communicating, to the client device of the cloud computing environment, one or more of the respective project usage scores generated for the plurality of cloud computing projects.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>the operations further comprise, for each respective cloud computing project, ranking the respective cloud computing project among the plurality of cloud computing projects based on the respective project usage scores generated for each respective cloud computing project; and</claim-text><claim-text>communicating the one or more respective project usage scores for the plurality of cloud computing projects to the client device comprises, for each respective cloud computing project, communicating the respective project usage score for the respective cloud computing project along with the ranking of the respective cloud computing project among the plurality of cloud computing projects.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:<claim-text>determining that one of the plurality of cloud computing projects satisfies a project threshold based on the respective project usage score of the one of the plurality of cloud computing projects, the project threshold representing a predetermined activity level that corresponds to an active cloud computing project;</claim-text><claim-text>generating a remediation recommendation for the one of the plurality of cloud computing projects that satisfies the project threshold; and</claim-text><claim-text>communicating the remediation recommendation to the client device of the cloud computing environment.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the remediation recommendation comprises a project cleanup recommendation.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the remediation recommendation comprises a project inspection recommendation.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the similarity measurement between the respective cloud computing project and the reference cloud computing project comprises comparing a first value of a cloud computing project usage metric for the respective cloud computing project and a second value of the cloud computing project usage metric for the reference cloud computing project.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the cloud computing project usage metric comprises at least one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the similarity measurement between the respective cloud computing project and the reference cloud computing project comprises comparing a first set of values of a plurality of cloud computing project usage metrics for the respective cloud computing project and a second set of values of the plurality of cloud computing project usage metrics for the reference cloud computing project.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the plurality of cloud computing project usage metrics corresponds to more than one of a billing service metric, a number of application programming interface (API) calls, or an identity and access management (IAM) metric.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the reference cloud computing project has zero project usage during a lifetime of the reference cloud computing project.</claim-text></claim></claims></us-patent-application>