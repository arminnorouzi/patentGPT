<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006812A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006812</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17782474</doc-number><date>20201125</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>FR</country><doc-number>FR1913816</doc-number><date>20191205</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>085</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0869</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0643</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">Method for cogenerating a shared cryptographic material, devices, system and corresponding computer program</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>Banks and Acquirers International Holding</orgname><address><city>Paris</city><country>FR</country></address></addressbook><residence><country>FR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Geraud</last-name><first-name>R&#xe9;mi</first-name><address><city>Valence</city><country>FR</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/083427</doc-number><date>20201125</date></document-id><us-371c12-date><date>20220603</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In a method for cogenerating a shared cryptographic material implemented within a first electronic device, which is connected to a second electronic cogeneration device and to a third electronic cogeneration device, a shared encryption material (pkx) is determined, as a function of a set of cogeneration parameters ECG. The shared encryption material (pkx) is transmitted, and corresponding shared encryption materials (pky, pkz) are received from the other devices. A shared seed (mx) is computed as a function of the shared encryption materials (pkx, pky, pkz) and the set of cogeneration parameters ECG. A masked form (Ox) of said shared seed (mx) is transmitted, and masked forms (Oy, Oz) of corresponding shared seeds (my, mz) are received. A final seed (ad) is computed as a function of the masked forms (Ox, Oy, Oz) of the shared seeds (mx, my, mz) and the set of cogeneration parameters ECG.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="189.74mm" wi="158.75mm" file="US20230006812A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="235.88mm" wi="176.95mm" file="US20230006812A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="235.80mm" wi="140.89mm" file="US20230006812A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="65.96mm" wi="94.23mm" file="US20230006812A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">1. TECHNICAL FIELD</heading><p id="p-0002" num="0001">The disclosure relates to the field of encryption. More particularly, the disclosure relates to the generation of basic cryptographic materials used to secure data exchanged between two devices. Such situations can be encountered, for example, in the field of the Internet of Things (loT): smart metering, smart parking, health monitoring, environmental monitoring and other applications are typical examples of systems requiring data encryption. While cost and energy efficiency are the main factors contributing to the popularity of commercial devices in the loT field, security features are under increasing demand. Payment functions, which are implemented either online or offline, also rely on the confidentiality of the data exchanged between the devices involved in the payment transaction itself, for example a smartphone and a payment terminal or a personal computer and an online merchant's server.</p><heading id="h-0002" level="1">2. PRIOR ART</heading><p id="p-0003" num="0002">The encryption of the exchanges taking place between two parties is a problem that dates back several millennia. With the advent of computerised systems and the development of adequate mathematical theory, encryption techniques have become more secure and efficient. In particular, complex cryptosystems have emerged, such as RSA (&#x201c;Rivest, Shamir and Adleman&#x201d;), which have made it possible to secure many systems around the world. With the evolution of technology, many devices are equipped with encryption and decryption capabilities using efficient, published and tested algorithms to guarantee the confidentiality of the data exchanges, often materially. This is the case, for example, with the RSA 2048 algorithm. However, this algorithm, like others, relies on the determination of random numbers.</p><p id="p-0004" num="0003">More particularly, for RSA, the generation of a key pair (private/public) requires choosing two large prime numbers, so that it is computationally impossible to factor the product thereof (i.e. to determine, from their product alone, the two integers that were used to obtain this product).</p><p id="p-0005" num="0004">To determine a large prime number, a method is used that provides a random odd integer of sufficient size on demand: a primality test is used to determine whether or not this integer is prime, and the method is stopped as soon as a prime number is obtained. The prime number theorem ensures that a prime number is found after a reasonable number of tries. The method requires the use of a rapid primality test. Thus, as a rule, a probabilistic test is implemented, such as the Miller-Rabin primality test or a variant of such a test. There is no guarantee that the number is actually prime, but only a high probability that it is. Typically, these operations are now integrated into many devices and/or code libraries as standard and used in a standard way. Thus, the aforementioned devices are equipped with integrated circuits that can implement data encryption protocols in an accelerated way, making it more or less transparent to the system.</p><p id="p-0006" num="0005">However, for RSA or other cryptosystems, the sole description of the mathematical principles on which the algorithm relies is not sufficient. The actual implementation requires other parameters that are essential for security to be considered. For example, the pair (private key, public key) must be generated by a truly random method, which method, even if it were known, would not allow the private key to be reconstructed.</p><p id="p-0007" num="0006">However, although cryptographic algorithms for confidentiality and authenticity are hardware-supported on a common class of peripherals, as explained hereinabove, there is generally no adequate support for the generation of random numbers (also referred to as &#x201c;seeds&#x201d; in the literature) in consumer hardware: more specifically, protecting the support for random number generation requires applying hardware devices that act as shields making the random number generation insensitive to external perturbations, which is expensive and thus overlooked by manufacturers. Thus, it is often possible to passively (or actively) manipulate the embedded random number generation source, and thus possible to undermine the security provided by (otherwise) strong cryptographic algorithms. In other words, by modifying the way random numbers are produced, the complexity of the mathematical problems underlying the obtaining of private keys can be significantly reduced, and thus the effectiveness of an encryption algorithm that is known to be efficient can be reduced or decimated.</p><p id="p-0008" num="0007">This is typically the situation for consumer mobile devices or loT devices that are not designed for cryptography. They do not incorporate hardware components or software dedicated to high-quality seed generation. At best, some high-end devices are equipped with a &#x201c;security module&#x201d;, the design and entropy sources whereof are usually kept secret and thus cannot be audited.</p><p id="p-0009" num="0008">One natural solution is to use an external peripheral, such as a HSM or a remote server, to provide a random source. Since the communication has a cost, only one random number (&#x201c;seed&#x201d;) is usually provided, from which a pseudo-random bit sequence is derived. However, the transmission of this random number by the remote server itself uses an encryption algorithm that uses . . . a random number. Thus, the solution of using a remote device is itself hampered by the need to first implement a random number-based encryption solution which is of course generated on the so-called &#x201c;insecure&#x201d; device. Such a hardware flaw allows an attacker to capture (or infer or choose) the random number and obtain all of the pseudo-random bits used by the peripheral, which is of course unwanted.</p><p id="p-0010" num="0009">Thus, in order to establish a secure communication channel with the consumer peripheral, high-quality random numbers are firstly required. There is thus a need to provide a method for obtaining a secure random number that allows qualitative random numbers to be obtained in a secure manner.</p><heading id="h-0003" level="1">3. SUMMARY OF THE INVENTION</heading><p id="p-0011" num="0010">The disclosure at least partially addresses the issues raised in the prior art. More particularly, the disclosure relates to a method for cogenerating a shared cryptographic material, which method is implemented within a first electronic device, said first electronic device being connected to a second electronic cogeneration device and to a third electronic cogeneration device. Such a method comprises:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0011">a step of determining a shared encryption material, as a function of said set of cogeneration parameters ECG;</li>        <li id="ul0002-0002" num="0012">a step of transmitting said shared encryption material;</li>        <li id="ul0002-0003" num="0013">a step of receiving corresponding shared encryption materials originating from the other devices;</li>        <li id="ul0002-0004" num="0014">a step of computing a shared seed, as a function of said shared encryption materials and said set of cogeneration parameters ECG;</li>        <li id="ul0002-0005" num="0015">a step of transmitting a masked form of said shared seed;</li>        <li id="ul0002-0006" num="0016">a step of receiving masked forms of the corresponding shared seeds originating from the other devices;</li>        <li id="ul0002-0007" num="0017">a step of computing the final seed, as a function of the masked forms of said shared seeds and said set of cogeneration parameters ECG.</li>    </ul>    </li></ul></p><p id="p-0012" num="0018">Thus, it is possible to obtain a high-quality (i.e. with a very high probability of randomness) final seed in a simple manner, even if one of the devices involved in the elaboration thereof is compromised.</p><p id="p-0013" num="0019">According to one specific embodiment, the step of determining the shared encryption material, as a function of said set of cogeneration parameters ECG comprises:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0020">a step of selecting, within a cyclic group G, a number sx, smaller than p;</li>        <li id="ul0004-0002" num="0021">a step of computing the shared encryption material by performing an operation for the number sx with the generator g of the group G.</li>    </ul>    </li></ul></p><p id="p-0014" num="0022">Thus, a secure encryption material can be obtained. The operation implemented is, for example, a multiplication or an exponentiation and it varies as a function of the selected group, which increases security.</p><p id="p-0015" num="0023">According to one specific embodiment, the step of computing the shared seed, as a function of said shared encryption materials and said set of cogeneration parameters ECG comprises:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0024">a step of obtaining a random number rx;</li>        <li id="ul0006-0002" num="0025">a step of computing the shared seed rx from the random number rx and the shared encryption materials pkx, pky, pkz and a hash function H;</li>    </ul>    </li></ul></p><p id="p-0016" num="0026">Each participant thus uses the data provided by the other participants and by itself to generate a shared seed.</p><p id="p-0017" num="0027">According to one specific feature, the step of computing the final seed, as a function of the masked forms of said shared seeds and said set of cogeneration parameters ECG comprises:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0028">a step of adding the masked forms; and</li>        <li id="ul0008-0002" num="0029">a step of hashing, using a hash function H, the result of the previous addition, outputting the final seed.</li>    </ul>    </li></ul></p><p id="p-0018" num="0030">Thus, none of the participants can negatively influence (i.e. in the sense of reducing security) the generation of the final seed.</p><p id="p-0019" num="0031">According to one specific embodiment, the cyclic group belongs to the group comprising:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0032">Curve25519;</li>        <li id="ul0010-0002" num="0033">sec256p;</li>        <li id="ul0010-0003" num="0034">head 25619;</li>        <li id="ul0010-0004" num="0035">Curve448.</li>    </ul>    </li></ul></p><p id="p-0020" num="0036">According to one specific embodiment, said hash function belongs to the group comprising:<ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0037">SHA-1;</li>        <li id="ul0012-0002" num="0038">MD5;</li>        <li id="ul0012-0003" num="0039">SHA-3, in SHAKE128 mode.</li>    </ul>    </li></ul></p><p id="p-0021" num="0040">According to one specific feature, the cogeneration method further comprises a step of verifying the validity of the final seed comprising generating a random number and computing a hash value of a sum of said random number and the final seed.</p><p id="p-0022" num="0041">Thus, each device participating in the cogeneration is able to verify that the other devices have the same shared final seed.</p><p id="p-0023" num="0042">The disclosure further relates to a device for cogenerating a shared cryptographic material, which method is implemented within a first electronic device, said first electronic device being connected to a second electronic cogeneration device and to a third electronic cogeneration device.</p><p id="p-0024" num="0043">Such a device comprises:<ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0044">means for determining a shared encryption material, as a function of said set of cogeneration parameters;</li>        <li id="ul0014-0002" num="0045">means for transmitting said shared encryption material;</li>        <li id="ul0014-0003" num="0046">means for receiving the corresponding shared encryption materials originating from the other devices;</li>        <li id="ul0014-0004" num="0047">means for computing a shared seed, as a function of said shared encryption materials and said set of cogeneration parameters;</li>        <li id="ul0014-0005" num="0048">means for transmitting a masked form of said shared seed;</li>        <li id="ul0014-0006" num="0049">means for receiving masked forms of the corresponding shared seeds originating from the other devices;</li>        <li id="ul0014-0007" num="0050">means for computing the final seed, as a function of the masked forms of said shared seeds and said set of cogeneration parameters.</li>    </ul>    </li></ul></p><p id="p-0025" num="0051">Such a device can be in the form of a user communication terminal, equipped with a general purpose processor, that is not necessarily secure. It can also take the form of a secure element or equivalent, also present within (or connected to) a user communication terminal, comprising a secure processor. It can also take the form of a remote server. It can also take the form of a payment terminal or an authentication terminal with secure data processing components.</p><p id="p-0026" num="0052">The disclosure further relates to a system for cogenerating a shared cryptographic material. Such a system comprises at least three cogeneration devices as presented hereinabove connected to one another. More particularly, in one embodiment, such a system can comprise a user communication terminal, provided with a general purpose processor, that is not necessarily secure; a secure element or equivalent, also present within (or connected to) the user communication terminal, comprising a secure processor; a remote server, connected to the communication terminal. Each of these three devices implements the method described hereinabove to achieve, within the scope of this system, the generation of a final seed as proposed.</p><p id="p-0027" num="0053">According to a preferred implementation, the different steps of the methods according to the present disclosure are implemented by one or more software or computer programs, comprising software instructions intended to be executed by a data processor of an execution device according to the present technique and being designed to command the execution of the different steps of the methods, implemented with the communication terminal, the electronic execution device and/or the remote server, within the scope of a distribution of the processing operations to be carried out and determined by a scripted source code.</p><p id="p-0028" num="0054">As a result, the present technique is also directed towards programs, capable of being executed by a computer or by a data processor, which programs include instructions for commanding the execution of the steps of the methods as mentioned hereinabove.</p><p id="p-0029" num="0055">A program can use any programming language and be in the form of a source code, object code, or intermediate code between a source code and an object code, such as a partially compiled form, or in any other desired form.</p><p id="p-0030" num="0056">The present technique is also directed towards a data carrier readable by a data processor, and including instructions of a program as mentioned hereinabove.</p><p id="p-0031" num="0057">The data carrier can be any entity or device capable of storing the program. For example, the carrier can include a storage means, such as a ROM, for example a CD-ROM or a microelectronic circuit ROM, or even a magnetic recording means, for example a mobile medium (memory card) or a hard drive or a SSD.</p><p id="p-0032" num="0058">On the other hand, the data carrier can be a transmittable medium such as an electric or optical signal, which can be carried via an electric or optical cable, by radio, or by other means. The program according to the present technique can in particular be downloaded from an Internet-type network.</p><p id="p-0033" num="0059">Alternatively, the data carrier can be an integrated circuit into which the program is incorporated, the circuit being suitable for executing or for use in the execution of the method in question.</p><p id="p-0034" num="0060">According to one embodiment, the present technique is implemented by means of software and/or hardware components. With this in mind, the term &#x201c;module&#x201d; in this document can refer to a software component, a hardware component or a combination of hardware and software components.</p><p id="p-0035" num="0061">A software component corresponds to one or more computer programs, one or more sub-programs of a program, or more generally any element of a program or software capable of implementing a function or a set of functions, as described hereinbelow for the module concerned. Such a software component is executed by a data processor of a physical entity (terminal, server, gateway, set-top-box, router, etc.) and is capable of accessing the hardware resources of this physical entity (memories, recording media, communication buses, electronic input/output cards, user interfaces, etc.).</p><p id="p-0036" num="0062">Similarly, a hardware component corresponds to any element of a hardware assembly capable of implementing a function or a set of functions, depending on the case described hereinbelow for the module concerned. It can be a programmable hardware component or a component with an integrated processor for executing software, for example an integrated circuit, an integrated circuit card, a memory card, an electronic card for executing firmware, etc.</p><p id="p-0037" num="0063">Each component of the system described hereinabove naturally implements its own software modules.</p><p id="p-0038" num="0064">The various embodiments mentioned hereinabove can be combined with one another in order to implement the present technique.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">4. BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0039" num="0065">Other features and advantages will be better understood upon reading the following description given of a non-limiting preferred embodiment, provided for illustration purposes with reference to the accompanying drawings, in which:</p><p id="p-0040" num="0066"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows the general principle of the cogeneration method;</p><p id="p-0041" num="0067"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a specific embodiment of the cogeneration method shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0042" num="0068"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a cogeneration device.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">5. DETAILED DESCRIPTION</heading><p id="p-0043" num="0069">The general principle of the present technique is based on the implementation of a tripartite generation of a random number. As explained hereinabove, with reference to the prior art, when looking to obtain a high-quality random number on a conventional user device (of the smartphone or loT type, etc.), a server is used, which will be responsible for providing such a number, with the risk, however, that this number (or the pseudo-random number derived from this number) will be intercepted, thus rendering the use of such a remote server pointless and costly.</p><p id="p-0044" num="0070">The proposed method overcomes this problem related to the potential interception and/or manipulation of a random number that is generated remotely by a server. More particularly, a symmetrical method for the cogeneration (in the sense of creation) of a random number involving three (at least) data processing devices is proposed. The method described allows a high-quality random number to be obtained, while reducing or eliminating the risk of fraud or of this random number being intercepted.</p><p id="p-0045" num="0071">Thus, the present technique relates to a method for cogenerating a shared cryptographic material, which method is implemented within a first electronic device, said electronic device being connected to a second electronic cogeneration device via a communication network, said second electronic device also implementing the method for cogenerating the shared cryptographic material, the method being characterised in that it is furthermore implemented by a third electronic cogeneration device, connected to said first electronic cogeneration device and to said second electronic cogeneration device.</p><p id="p-0046" num="0072">More particularly, according to the present technique, the cogeneration method is based on the common use, by the three devices involved in the cogeneration, of a set of cogeneration parameters. According to the present technique, in one specific embodiment, this set of parameters comprises in particular a cyclic group G (or a subgroup of a cyclic group), of generator g and of order p. This set further comprises a common hash function H. This set of cogeneration parameters is denoted ECG. In one general embodiment, where these cogeneration parameters ECG are known, each device involved in the cogeneration implements an identical method. The purpose of this cogeneration is to compensate for the possible deficiencies of one of the three devices, in order to obtain a high-quality random number, without the risk of this number being exposed or manipulated.</p><p id="p-0047" num="0073">For the purpose of this description, cogeneration is considered to be tripartite and to be implemented by three electronic devices named {A}, {B} and {C} respectively. Device {B} is also considered to be a consumer device that is not trusted as regards the quality of the random numbers it generates. This does not mean that it is a poor quality generation device, but only that this device can potentially be subject to external perturbations and/or manipulations that make the functioning thereof uncertain, and thus is not to be trusted, as a matter of principle. It is also assumed that the device {B} wishes to exchange data with the device {A} in a confidential manner (i.e. the contents of the exchanges from {A} to {B} and vice-versa are sought to be encrypted).</p><p id="p-0048" num="0074">Within the scope of the present technique, a third device {C} is thus involved, which is connected to {A} and {B}. It is considered that {A} and {C} are not subject to external perturbations, for example because {A} and {C} are remote, protected servers and are beyond the reach of any perturbations, and/or because {A} and {C} are protected against external attacks and have hardware protection solutions that make it difficult or impossible for an attacker to monitor or manipulate them.</p><p id="p-0049" num="0075">Thus, the device {A} can be a remote server, for example a bank server or a medical server, whereas the device {C} can be a server (also a bank server or a specific generation server) or a particular cogeneration device, specifically dedicated to this task (it can be a stand-alone device, or can be integrated or connected to the device {A} or to the device {B}, such as a dedicated integrated circuit or a USB dongle for example, although such implementations are not preferred).</p><p id="p-0050" num="0076">In other words, in the context of the present invention, there are two devices: a trusted device {A}, capable of generating a high-quality randomness (using any high-quality generation technique known to a person skilled in the art); and another device {B}, capable of performing any deterministic operation but not credited with generating a high-quality randomness. These devices are considered to communicate with one another, but it is not assumed that a secure channel has already been established therebetween. More specifically, establishing such a channel typically requires a high-quality random quality source; or requires the peripheral {B} to incorporate secret cryptographic keys. The problem with this second situation is that secure storage of secret keys in {B} can be difficult, since in the context of white-box attackers, such a key can be extracted. With typical public key designs, the leakage of such a decryption key immediately cancels the plan.</p><p id="p-0051" num="0077">Thus, one proposal for overcoming this problem involves introducing a third trusted device {C} and a tripartite protocol for securely obtaining a shared randomness.</p><p id="p-0052" num="0078">According to the present technique, the method comprises several steps, some of which involve data exchanges between the three devices. According to the present technique, in one embodiment described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the following method is implemented by each device ({A}, {B}, {C}), and it comprises, for a device x, belonging to the set ({A}, {B}, {C}):<ul id="ul0015" list-style="none">    <li id="ul0015-0001" num="0000">    <ul id="ul0016" list-style="none">        <li id="ul0016-0001" num="0079">a step of determining (P<b>10</b>) a shared encryption material (pkx), as a function of said set of cogeneration parameters ECG;</li>        <li id="ul0016-0002" num="0080">a step of transmitting (P<b>20</b>) said shared encryption material (pkx);</li>        <li id="ul0016-0003" num="0081">a step of receiving (P<b>30</b>) the corresponding shared encryption materials (pky, pkz) originating from the other devices;</li>        <li id="ul0016-0004" num="0082">a step of computing (P<b>40</b>) a shared seed (mx), as a function of said shared encryption materials (pkx, pky, pkz) and said set of cogeneration parameters ECG;</li>        <li id="ul0016-0005" num="0083">a step of transmitting (P<b>50</b>) a masked form (Ox) of said shared seed (mx);</li>        <li id="ul0016-0006" num="0084">a step of receiving (P<b>60</b>) masked forms (Oy, Oz) of the corresponding shared seeds (my, mz) originating from the other devices;</li>        <li id="ul0016-0007" num="0085">a step of computing (P<b>70</b>) the final seed (ad), as a function of the masked forms (Ox, Oy, Oz) of said shared seeds (mx, my, mz) and said set of cogeneration parameters ECG.</li>    </ul>    </li></ul></p><p id="p-0053" num="0086">Thus, unlike the conventional method, involving only two devices {A} and {B}, the method of the present technique ensures that even if {B} is compromised, the final seed is of sufficient quality to procure an encryption of significant efficiency that will result from the use of this seed. Moreover, unlike the other conventional method, involving the use of an additional server directly transmitting a seed to the device {B}, the method of the present technique ensures that the seed transmitted by the additional server (which by analogy could be considered to be the device {C}) is not compromised, manipulated or intercepted, and for good reason: in the present technique, the device {C} never transmits a seed, but rather a masked form of a shared seed, this masked form ultimately being only one component of the final seed. As understood, this masked form is not intended to be unmasked (i.e. it is not intended, for the recipient of the masked form, to allow the initial value to be obtained), since the seed is final and is computed as a function of the masked forms, not as a function of the shared seeds. The initial seed is masked (scrambled) to form a value which in turn will be used to form the final shared seed.</p><p id="p-0054" num="0087">Furthermore, since all the devices ({A}, {B}, {C}) participate in generating the same final seed, each participant ({A}, {B}, {C}) is able to verify that the final seed is correct by comparing its own final seed with the final seed obtained by the other participants. However, as two of the participants ({A} and {C}) are secure (a priori), they cannot be deceived. Moreover, it should be noted that with three (or more) participants, at least one thereof masks the random value produced by the other (i.e. in the case of three participants, the random value produced by {B} is actually masked: the random value, which is masked, can thus initially be equal to zero without any participant in the exchange being able to detect it (except, of course, the producer of this value). Thus, a malicious party producing this &#x201c;non-random&#x201d; value (i.e. 0 or another predetermined value) in an attempt to influence the seed cannot influence the randomness of the result. It goes without saying that the larger the number of participants, the lower the chances of obtaining a non-compliant result.</p><p id="p-0055" num="0088">The method of the present technique has been described in a general manner. Some of the steps thereof are dependent on the set of cogeneration parameters ECG. In particular, a cyclic group is not always necessary in order to be able to implement the proposed technique, and other parameters can be used if they are found to be more adapted to the actual application situation.</p><p id="p-0056" num="0089">Each step of the general method described hereinabove is described hereinbelow with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in a certain embodiment.</p><p id="p-0057" num="0090">The step of determining (P<b>10</b>) the shared encryption material (pkx), as a function of said set of cogeneration parameters ECG comprises:<ul id="ul0017" list-style="none">    <li id="ul0017-0001" num="0000">    <ul id="ul0018" list-style="none">        <li id="ul0018-0001" num="0091">a step of selecting, within the cyclic group G (or within a subgroup of the cyclic group G), a number sx, smaller than p;</li>        <li id="ul0018-0002" num="0092">a step of computing the shared encryption material (pkx) by performing an operation for the number sx with the generator g of the group G; the operation in question can be an additive operation or a multiplicative operation, depending on the nature of the group G. This operation is denoted, in this embodiment, between square brackets []; thus, pkx=[sx]g.</li>    </ul>    </li></ul></p><p id="p-0058" num="0093">The step of computing (P<b>40</b>) the shared seed (mx), as a function of said shared encryption materials (pkx, pky, pkz) and said set of cogeneration parameters ECG comprises:<ul id="ul0019" list-style="none">    <li id="ul0019-0001" num="0000">    <ul id="ul0020" list-style="none">        <li id="ul0020-0001" num="0094">a step of obtaining a random number rx;</li>        <li id="ul0020-0002" num="0095">a step of computing the shared seed mx from the random number rx and the shared encryption materials pkx, pky, pkz and the hash function H.</li>    </ul>    </li></ul></p><p id="p-0059" num="0096">In this embodiment, this computation follows a particular rule as a function of a rank that the device has in the set of devices.</p><p id="p-0060" num="0097">Thus, the device {A} specifically computes: mA=xA+hAB+hAC;</p><p id="p-0061" num="0098">Thus, the device {B} specifically computes: mB=xB&#x2212;hBA+hBC;</p><p id="p-0062" num="0099">Thus, the device {B} specifically computes: mC=xC&#x2212;hCA&#x2212;hCB.</p><p id="p-0063" num="0100">For each of these specific computations, hXY=H(pkA, pkB, pkC, [sX] pkY) is defined.</p><p id="p-0064" num="0101">Depending on the embodiments and on the number of devices involved, other expressions for the shared seed mx can of course be defined.</p><p id="p-0065" num="0102">The computation of the masked form (Ox) of said shared seed (mx) is carried out by performing an operation on the group, as for the computation of the shared encryption material. More particularly, the masked form Ox=[mx]g.</p><p id="p-0066" num="0103">Still in this embodiment, the step of computing (P<b>70</b>) the final seed (ad), as a function of the masked forms (Ox, Oy, Oz) of said shared seeds (mx, my, mz) and said set of cogeneration parameters ECG comprises:<ul id="ul0021" list-style="none">    <li id="ul0021-0001" num="0000">    <ul id="ul0022" list-style="none">        <li id="ul0022-0001" num="0104">a step of adding the masked forms (Ox, Oy, Oz); and</li>        <li id="ul0022-0002" num="0105">a step of hashing, using the hash function H, the result of the previous addition, outputting the final seed (ad).</li>    </ul>    </li></ul></p><p id="p-0067" num="0106">This final seed is thus the combination of all the seeds previously obtained, and it is noted that the method presented is manufactured in such a way that the result obtained is H([xA+xB+xC]g) which represents a seed of the expected quality. Other forms and embodiments of this protocol can be considered, leading to a similar or identical result.</p><p id="p-0068" num="0107">This avoids the use of long-term secret keys and problems caused by a wrong seed. Moreover, it is also possible for (A) to verify that (B) has received the correct seed, since both devices know its value. For example, the following zero-knowledge protocol can be used:<ul id="ul0023" list-style="none">    <li id="ul0023-0001" num="0000">    <ul id="ul0024" list-style="none">        <li id="ul0024-0001" num="0108">{A} (trusted device) sends a seed rT to {B};</li>        <li id="ul0024-0002" num="0109">{B} responds to {A} by transmitting the result Res of the computation H (ad, rT);</li>        <li id="ul0024-0003" num="0110">{A} verifies that H (ad, rT) corresponds to the result H (ad, rT) that {B} transmitted.</li>    </ul>    </li></ul></p><p id="p-0069" num="0111">When the result is identical, it means that the final seed (ad) produced by {B} is identical to that produced by {A}, and thus that this final seed is a function of a high-quality seed rC that was created by {C}, without this seed rC having undergone any transformation, malicious act or usurpation. This is particularly true since the zero-knowledge protocol used previously can also be implemented between {A} and {C} in order to validate the final knowledge (ad) by {A} and {C}.</p><p id="p-0070" num="0112">It should also be noted that, according to the present technique, it is advantageous to have three (or more) participants: one of which masks the random value produced by the device (B). Thus, rB can effectively be zero in the protocol hereinabove, without affecting the quality of the final random value (ad) obtained at the end of the method.</p><p id="p-0071" num="0113">As an indication, a tangible implementation of the technique described hereinabove can be made with the following cyclic groups: Curve25519; sec256p, head 25619, Curve448. These groups allow for the generation of high-quality seeds in accordance with the present technique.</p><p id="p-0072" num="0114">Moreover, any hash function can be used (SHA-1, MDS, etc.). However, the use of the SHA-3 function (in particular in SHAKE128 mode) has the advantage of being able to select the size of the output result, for example 256 bits, which is an advantage within the scope of the computation of the seed. In other words, with the use of this function, it is possible to determine, in advance, what the size of the integer resulting from the hashing will be and thus to adapt this size, for example, to the respective capacities of the devices {A} and {B} in order to ensure a compromise between the need for security and the processing capacities, in particular those of the device {B}.</p><p id="p-0073" num="0115">In one specific embodiment, adapted for use in mobile communication terminals (such as smartphones), the selected output size is 256 bits. This means that the final seed has a length of 256 bits.</p><p id="p-0074" num="0116">A simplified architecture of an electronic device capable of performing the seed cogeneration processing operation as presented hereinabove is shown with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. An electronic device comprises a memory <b>31</b>, a processing unit <b>32</b> equipped, for example, with a microprocessor, and driven by a computer program <b>33</b>, implementing the method as described hereinabove. In at least one embodiment, the present technique is implemented as an application installed on this device. Such a device comprises, according to the embodiments:<ul id="ul0025" list-style="none">    <li id="ul0025-0001" num="0000">    <ul id="ul0026" list-style="none">        <li id="ul0026-0001" num="0117">means for determining a shared encryption material, as a function of said set of cogeneration parameters;</li>        <li id="ul0026-0002" num="0118">means for transmitting said shared encryption material;</li>        <li id="ul0026-0003" num="0119">means for receiving the corresponding shared encryption materials originating from the other devices;</li>        <li id="ul0026-0004" num="0120">means for computing a shared seed, as a function of said shared encryption materials and said set of cogeneration parameters;</li>        <li id="ul0026-0005" num="0121">means for transmitting a masked form of said shared seed;</li>        <li id="ul0026-0006" num="0122">means for receiving masked forms of the corresponding shared seeds originating from the other devices;</li>        <li id="ul0026-0007" num="0123">means for computing the final seed, as a function of the masked forms of said shared seeds and said set of cogeneration parameters.</li>    </ul>    </li></ul></p><p id="p-0075" num="0124">As explained hereinabove, these means are implemented via modules and/or components, that are for example secure. They thus make it possible to uphold the confidentiality of the data required to define useful keys in a cryptosystem for data encryption.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for cogenerating a shared cryptographic material implemented within a first electronic device, said first electronic device being connected to a second electronic cogeneration device and to a third electronic cogeneration device, the method comprising:<claim-text>determining a shared encryption material (pkx), as a function of a set of cogeneration parameters ECG;</claim-text><claim-text>transmitting said shared encryption material (pkx);</claim-text><claim-text>receiving shared encryption materials (pky, pkz), which correspond to the shared encryption material (pkx), from the other devices;</claim-text><claim-text>computing a shared seed (mx) as a function of said shared encryption materials (pkx, pky, pkz) and said set of cogeneration parameters ECG;</claim-text><claim-text>transmitting a masked form (Ox) of said shared seed (mx);</claim-text><claim-text>receiving masked forms (Oy, Oz) of corresponding shared seeds (my, mz) originating from the other devices; and</claim-text><claim-text>computing a final seed (ad), as a function of the masked forms (Ox, Oy, Oz) of said shared seeds (mx, my, mz) and said set of cogeneration parameters ECG.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the shared encryption material (pkx), as a function of said set of cogeneration parameters ECG comprises:<claim-text>selecting, within a cyclic group G, a number sx, smaller than p; and</claim-text><claim-text>computing the shared encryption material (pkx) by performing an operation for the number sx with the generator g of the group G.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein computing the shared seed (mx), as a function of said shared encryption materials (pkx, pky, pkz) and said set of cogeneration parameters ECG comprises:<claim-text>obtaining a random number rx; and</claim-text><claim-text>computing the shared seed rx from the random number rx and the shared encryption materials pkx, pky, pkz and a hash function H.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein computing the final seed (ad), as a function of the masked forms (Ox, Oy, Oz) of said shared seeds (mx, my, mz) and said set of cogeneration parameters ECG comprises:<claim-text>adding the masked forms (Ox, Oy, Oz); and</claim-text><claim-text>hashing, using a hash function H, the result of the previous addition, outputting the final seed (ad).</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the cyclic group G is selected from the group consisting of:<claim-text>Curve25519;</claim-text><claim-text>sec256p;</claim-text><claim-text>head 25619; and</claim-text><claim-text>Curve448.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said hash function is selected from the group consisting of:<claim-text>SHA-1;</claim-text><claim-text>MD5; and</claim-text><claim-text>SHA-3, in SHAKE128 mode.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising verifying the validity of the final seed (ad) comprising generating a random number and computing a hash value of a sum of said random number and the final seed.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A device for cogenerating a shared cryptographic material connected to a second electronic cogeneration device and to a third electronic cogeneration device, the device comprising:<claim-text>means for determining a shared encryption material, as a function of said set of cogeneration parameters;</claim-text><claim-text>means for transmitting said shared encryption material;</claim-text><claim-text>means for receiving the corresponding shared encryption materials originating from the other devices;</claim-text><claim-text>means for computing a shared seed, as a function of said shared encryption materials and said set of cogeneration parameters;</claim-text><claim-text>means for transmitting a masked form of said shared seed;</claim-text><claim-text>means for receiving masked forms of the corresponding shared seeds originating from the other devices; and</claim-text><claim-text>means for computing a final seed, as a function of the masked forms of said shared seeds and said set of cogeneration parameters.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A system for cogenerating a shared cryptographic material comprising at least three cogeneration devices according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, connected to one another.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A non-transitory computer-readable medium comprising a computer program product stored thereon comprising program code instructions for executing a method for cogenerating a shared cryptographic material when the instructions are executed by a processor, the method comprising:<claim-text>determining a shared encryption material (pkx), as a function of a set of cogeneration parameters ECG;</claim-text><claim-text>transmitting said shared encryption material (pkx);</claim-text><claim-text>receiving t shared encryption materials (pky, pkz), which correspond to the shared encryption material (pkx), from the other devices;</claim-text><claim-text>computing a shared seed (mx) as a function of said shared encryption materials (pkx, pky, pkz) and said set of cogeneration parameters ECG;</claim-text><claim-text>transmitting a masked form (Ox) of said shared seed (mx);</claim-text><claim-text>receiving masked forms (Oy, Oz) of corresponding shared seeds (my, mz) originating from the other devices; and</claim-text><claim-text>computing a final seed (ad), as a function of the masked forms (Ox, Oy, Oz) of said shared seeds (mx, my, mz) and said set of cogeneration parameters ECG.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein said hash function is selected from the group consisting of:<claim-text>SHA-1;</claim-text><claim-text>MD5; and</claim-text><claim-text>SHA-3, in SHAKE128 mode.</claim-text></claim-text></claim></claims></us-patent-application>