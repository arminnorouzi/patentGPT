<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004943A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004943</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17364461</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>1095</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">INTELLIGENT PROCESSING AND PRESENTATION OF USER-CONNECTION DATA ON A COMPUTING DEVICE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>MICROSOFT TECHNOLOGY LICENSING, LLC</orgname><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>&#xd8;HRN</last-name><first-name>Aleksander</first-name><address><city>Oslo</city><country>NO</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NETES</last-name><first-name>Nir</first-name><address><city>Oslo</city><country>NO</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>SOLONKO</last-name><first-name>Kateryna</first-name><address><city>Oslo</city><country>NO</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>SCHIEHLEN</last-name><first-name>Ute Katja</first-name><address><city>Oslo</city><country>NO</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Technology is disclosed for controlling the processing and presentation of user-connection data on computing devices to provide improved electronic communications applications and user computing experiences. User-connection data may be programmatically determined or inferred from the user data for a plurality of users. The user-connection data may be assembled into a graph data structure, which may be further processed to determine optimal paths connecting users and to derive information insights. Aspects of information insights may be presented to a user and/or consumed by a computing application or service to provide an improved user computing experience.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="97.79mm" wi="158.75mm" file="US20230004943A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="175.18mm" wi="120.14mm" orientation="landscape" file="US20230004943A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="223.77mm" wi="160.95mm" orientation="landscape" file="US20230004943A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="183.30mm" wi="165.52mm" orientation="landscape" file="US20230004943A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="219.03mm" wi="140.55mm" orientation="landscape" file="US20230004943A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="130.22mm" wi="151.38mm" orientation="landscape" file="US20230004943A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="199.47mm" wi="158.07mm" orientation="landscape" file="US20230004943A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="208.11mm" wi="158.07mm" orientation="landscape" file="US20230004943A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="128.19mm" wi="173.91mm" orientation="landscape" file="US20230004943A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="120.82mm" wi="185.42mm" orientation="landscape" file="US20230004943A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="102.87mm" wi="139.19mm" orientation="landscape" file="US20230004943A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Personal computing devices, such as laptops, computers, and smartphones, now carry and display a great variety of information and are used in a variety of settings. In turn, a variety of people may be encountered through these computing devices. Using these personal computing devices, people spend significant time in meetings (and increasingly online meetings) and communicating with other people, including time collaborating or working on teams. In these meetings, collaborations, and communications, it can be helpful to have contextual information presented about the other users or the group, such as information about relationships connecting the users or the group. For example, when a user has a meeting with, communicates with, or wants to meet somebody the user does not know well, especially for the first time or the first few times, it would be useful to provide information about how the user relates to the other person or people encountered to help the user contextualize who the person is, how they might be connected to the user or a group of users, as well as provide timely event driven data for improved computing applications for electronic communication, meetings, and scheduling. Existing, conventional technology lacks the computing functionality to programmatically determine this data or to determine insights from the data that can be used to provide the improved computing applications and an improved user computing experience.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0003" num="0002">This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used in isolation as an aid in determining the scope of the claimed subject matter.</p><p id="p-0004" num="0003">Embodiments described in the present disclosure are directed towards technologies for improving electronic communications computing applications and user computing experiences on user computing devices (sometimes referred to herein as mobile devices or user devices). In particular, embodiments provide technology to programmatically determine user-connection data, such as user-to-user connections and relationship paths connecting two or more users. The user-connection data may be assembled into a graph data structure and/or used for the provisioning of new communication application functionality and for displaying aspects of the user-connection data on a user device based upon a context. Such technologies improve the user experience in any of a number of computer applications and platforms.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004">Aspects of the disclosure are described in detail below with reference to the attached drawing figures, wherein:</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example operating environment suitable for implementations of the present disclosure;</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram depicting an example computing architecture suitable for implementing aspects of the present disclosure;</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustratively depicts aspects of an example graph data structure of connection data for a group of users, in accordance with an embodiment of the present disclosure;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref> illustratively depict exemplary schematic screenshots from a personal computing device showing aspects of example graphical user interfaces, in accordance with an embodiment of the present disclosure;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref> depict flow diagrams of methods for programmatically determining user-connection data and processing such data based on a context, in accordance with an embodiment of the present disclosure; and</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of an exemplary computing environment suitable for use in implementing an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0012" num="0011">The subject matter of aspects of the present disclosure is described with specificity herein to meet statutory requirements. However, the description itself is not intended to limit the scope of this patent. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different steps or combinations of steps similar to the ones described in this document, in conjunction with other present or future technologies. Moreover, although the terms &#x201c;step&#x201d; and/or &#x201c;block&#x201d; may be used herein to connote different elements of methods employed, the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described. Each method described herein may comprise a computing process that may be performed using any combination of hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory. The methods may also be embodied as computer-useable instructions stored on computer storage media. The methods may be provided by a stand-alone application, a service or hosted service (stand-alone or in combination with another hosted service), or a plug-in to another product, to name a few.</p><p id="p-0013" num="0012">Aspects of the present disclosure relate to technology for improving electronic communication technology and enhanced computing services for a user, based on user-connection data. In particular, the solutions provided herein include technologies to programmatically determine connection data among users, such as user relationships, user-to-user connections, and optimal paths connecting two or more users, such as such as a pair of users, a first user and a group of other users, or two or more groups or users. The solutions further enable improved control over the processing and presentation or display of user-connection data on computing devices. As such, the user-connection data may be used for, among other beneficial computing applications, providing enhanced functionality for communication and collaborative computing applications, improved meeting scheduling computer services and electronic messaging applications, generating and presenting indicators of connections among users, and displaying aspects of the user-connection data on a user device based upon a context. Thus by determining and processing user-connection data differently than conventional technology, embodiments of this disclosure enable the provision of new functionality for electronic communications computing applications, as well as improved efficiency for electronic communication, enriched electronic communications, and improved computing experiences for users, such as personalized computing experiences, among other improvements described herein.</p><p id="p-0014" num="0013">Accordingly and at a high level, a graph data structure that represents relationships among a plurality of users is accessed or created. As used herein, a graph data structure (or graph) is a non-linear data structure that comprises a plurality of nodes, each corresponding to a user, and one or more edges connecting a pair of nodes. Each edge indicates a relation between the two nodes, and thus reflects a relationship between the two people corresponding to the two nodes. One example graph is described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0015" num="0014">In some embodiments, an existing graph may be augmented or enriched by gathering and incorporating additional user-connection data, as described herein. In some embodiments, a graph (or a plurality of graphs) may be generated from user data collected for a plurality of users represented by the graph. For example, in one embodiment, data related to a user is received. In some implementations, this user-related data may be collected, such as by monitoring or observing (with a consent of the user) user activity via one or more user devices of the user. Alternatively, or in addition, user-related data may be received by scraping or accessing sources of information about a user, which may include publicly available information for the user, social media account or activity, org charts and information about a user's employment, role, membership on a project team, office location, and other sources of information, such as those described herein. The collected user data may be converted into structured data, and/or one or more data features characterizing the user may be determined or extracted from the collected user data and stored in a data store associated with the user, such as a user profile. For example, the user data may be converted into a structured data schema or record, a feature vector, a set of feature-value pairs, or other data record.</p><p id="p-0016" num="0015">A comparison may be performed of at least a portion of the user data, such as one or more data features, among a plurality of users to determine relationships or connections between pairs of users. For example, a feature vector or schema for two users may be compared to determine points of relation between the two users. In this way, it may be determined, by way of example, that two users work together, work in the same office location, report to the same manager, are both collaborators for a GitHub&#xae; repository, go to the same gym, or have another type of relationship with each other. Some types of relationships may be explicit, such as relationships indicating both users work in the same office location or are connected on a social media platform. Other types of relationships may be inferred, such as both users go to the same gym. In some embodiments, a set of explicit or pre-defined relationships may be compared to determine the relationships among two users. For instance, for every pair of users, compare their office work location, whether they have a &#x201c;is manager of/reports to&#x201d; relationship, whether they are connected on a social media platform or GitHub&#xae;, whether they are on the same project team, etc. In some embodiments, the relationships that are determined between a first and a second user may be different than the relationships determined between a third and a fourth user.</p><p id="p-0017" num="0016">The connections determined between pairs of users among the plurality of users may be assembled into a graph data structure. For example, each user may correspond to a node, and an edge connecting any two nodes may represent a data relation between the two users corresponding to the two nodes. As the relationship types between any first pair of nodes (corresponding to users) may be different than the relationship types between any second pair of nodes, the assembled graph does not necessarily reflect homogeneous relationships, in some embodiments. Moreover, some pairs of nodes may share multiple edges, reflecting multiple different relationships between the two users corresponding to the pair of nodes. In particular, this is in contrast to conventional graph data structures having each edge represents the same kind of relationship or where nodes are connected by only one edge.</p><p id="p-0018" num="0017">In some embodiments, at least some of the edges may be weighted. For example, an edge may be weighted based on the type of relationship represented by the edge and/or a degree or strength of the connection represented by the edge. For instance, suppose a first user both works with and reports to a second user. Then, a simplified graph representing a relation of these two users may comprise two nodes (representing the two users) with two edges connecting the two nodes: a first edge corresponding to a &#x201c;works with&#x201d; relation and a second edge corresponding to a &#x201c;reports to&#x201d; relation. According to one embodiment that uses edge weighting, the first edge may receive a weighting coefficient of 2 and the second edge a weighting of 1. In some embodiments using edge weighting, a weight may be pre-determined and based on the particular relationship type; based on a user or administrator configured setting, such as user preference or feedback provided by a user; predetermined or dynamic based on other relationship types in the graph, in a path that includes the edge, or that shares a connection with an edge; and/or based on a context or use case for the user-connection data, for example. As further explained herein, edge weighting (and in some embodiments node weighting) may be used to determine an optimal path between two or more users.</p><p id="p-0019" num="0018">In some embodiments, based on user-related activity, a context may be determined. The context may be used to determine or process a graph, a path, and/or assemble or format user-connection data, such as relationship data, for presentation to a user or consumption by a computing application. By way of example and without limitation, a context may comprise: information about two or more users for whom user-connection data is to be determined; a computing application context, such as participating in an online meeting; collaboration, or scheduling a meeting; a situation, such as the user attending a meeting; a criterion or constraint, such as requiring that a particular user (or users) be included or excluded in a path, or including or excluding a particular relationship type(s) in a path; or other contextual information that may be used for determining or processing a graph, a path, and/or assembling or formatting user-connection data. For instance, a context may comprise information indicating that a user is attending or scheduling a meeting with at least another user, sending a message to one or more other users, or viewing a Live Persona Card (&#x201c;LPC&#x201d;) or other user profile of another user. Alternatively, or in addition, a user may explicitly provide a context, such as querying their relation with another user, or between two or more other users. As described above, the context may be used to interpret a relationship or a connection between two or more users, and/or for assembling or formatting user-connection data for presentation to a user or consumption by a computing application or service.</p><p id="p-0020" num="0019">At least one optimal path connecting at least two users may be determined. In some embodiments, an optimal path is determined based at least in part on a context, which may comprise, in an embodiment, an indication of at least two users corresponding to end nodes of the path. In some embodiments, multiple paths between at least two users may be determined and from these paths, an optimal path may be determined. Further, in some instances or based on the context, multiple optimal paths may be determined such that each path is between a different pair of users. For example, where the context indicates a meeting, it may be useful to determine the connections (e.g., the paths) between each of the users in the meeting.</p><p id="p-0021" num="0020">A path connecting two users in a graph comprises the edges and nodes that are traversed starting from a first end node (repressing one of the users) and ending at a second end node (representing the other user). In some embodiments, a least-cost path, which may comprise the optimal path, is determined between two users in the graph. The least-cost path may be determined based on the edge weights of edges traversed on a path between two users in the graph. For instance, by summing the edge weights as the edges are traversed along a path and determining the cumulative of edge weights between two end nodes. Where multiple paths exist between the two end nodes, the path having the lowest cumulative sum may be determined as an optimal path between the two end nodes. In some embodiments, a version of a Dijkstra's algorithm, A*, or similar graph traversal algorithm may be employed to determine an optimal path.</p><p id="p-0022" num="0021">In some embodiments, the one or more optimal paths, or aspects of the paths or graph, may be processed to determine user-connection data such as an information item. In particular, an information item may comprise user-connection data regarding one or more optimal paths, a graph or subgraph, or related information, such as information about users, user data, or relationships, which may be determined based on user-connection data. In some embodiments, an information item may be may comprise an insight or may be formatted or assembled as an insight, or used to derive an insight. For example, an insight might comprise that a relationship exists between two users or further may comprise information about the type of relationship(s) that exist between the two users. For instance, the evaluation of the user data for a pair of users may indicate one or multiple connections, indicating a connectedness between the users. Based at least in part on the number and/or types of these relationships, and/or a confidence of any inferred relationships between the two users, an embodiment of the technology disclosed herein may programmatically infer a degree of closeness between the two users, which may be provided as an insight. Other examples of insights may comprise, by way of example and without limitation: a particular type of relationship that exists between a pair of users, such as a mentor-mentee relationship or a works with relationship, which may be determined or inferred based on the user data for the two users; a common relationship in a connection between you and another user, such as you and Bjorn both know Aleksander; a commonality among multiple paths (e.g., all of the meeting attendees know Aleksander); users who are particularly well connected (e.g., several particular people that appear in every path connecting pairs of users in a group); users who should be invited to a meeting, whose schedule should be prioritized in a meeting conflict, should be included as recipients on an email, or other insights and connection data that may be determined from processing the one or more optimal paths, such as described herein.</p><p id="p-0023" num="0022">In some embodiments, the information item or other connection data, may be assembled and/or formatted for providing to a user or for use in a computing application or service. For instance, among other types of personalized or improved computing experiences provided, the information item or user-connection data may be presented as an ice breaker or people highlight on an LPC card or when the user hovers over another user; a visual contextualization may be presented showing relationships among meeting attendees or between a particular user and other meeting attendees; a meeting scheduling service may suggest inviting (or not inviting) a particular user based, at least in part, on user-connection data determined among one or more of the other users and the particular user. These and other examples of enhanced computing experiences are made possible by embodiments of the technologies described herein.</p><heading id="h-0005" level="2">Overview of Technical Problems, Technical Solutions, and Technological Improvements</heading><p id="p-0024" num="0023">The coalescence of telecommunications and personal computing technologies in the modern era has enabled, for the first time in human history, information on demand combined with a ubiquity of personal computing resources (including mobile personal computing devices and cloud-computing coupled with communication networks). As a result, it is increasingly common for users to rely on one or more mobile computing devices throughout the day for handling various tasks. It is also now possible to provide information to the user regarding connections or relationships among people that may be relevant to a particular task, location, communication, application use, or other contextual situation, referred to collectively as relationship data or connection data.</p><p id="p-0025" num="0024">As described previously, people spend significant time in meetings and communicating with other people, including time collaborating or working on teams, and it can be helpful to have contextual information presented about the other users or the group, such as information about relationships connecting the users or the group. For example, when a user has a meeting with, communicates with, or wants to meet somebody the user does not know well, it would be useful to determine and provide information about how the user relates to the other person or people encountered to help the user contextualize who the person is, how they might be connected to the user or a group of users, as well as provide timely event driven data for improved computing applications for electronic communication, meetings, and scheduling. But the conventional technology can only provide this sort of information about a user, or information common to a group of users, based on a manually determined and specified relationship information, such as an org chat, or based on a direct relationship (sometimes referred to as a first-degree relationship) between users. For instance, an administrator may manually specify relationships between pairs of users indicating a &#x201c;reports to&#x201d; or &#x201c;manager of&#x201d; relationship. Similarly, an administrator may manually specify to show information about a pre-defined, first-relationship directly connecting the two users, such as you and the other user are connected on LinkedIn&#xae;. In one example, this information may be presented on a Live Persona Card (&#x201c;LPC&#x201d;) or other user profile. Unfortunately, because this comparison is manually configured, it will be the same for all users (for example, always showing the same connecting relationship from a data field that is manually specified), and it may be presented every time (for example, it is static and does not change).</p><p id="p-0026" num="0025">Additionally, this relationship information includes only a direct, first-degree connection between the user and one other user. For instance, in situations where any two users share a close relation to a third user, such as you and Bjorn both report to Kateryna, the user will not be provided this helpful contextual information that Kateryna connects you to Bjorn, unless it is manually specified and configured for all users. Even if that were the case, it quickly becomes overwhelming, if not impossible, for an administrator to manually determine and configure for presentation the connections between every possible pairing of users in situations where there is more than one person in between, such as you report to Kateryna, Kateryna works with Ute, and Ute manages Bjorn. Moreover, any manually specified relationship would only be an explicit relationship, as an administrator would have no way of determining implicit relationships among users.</p><p id="p-0027" num="0026">Further, in the cases where an administrator manually determines relationship information, such as an org chat or even a based on a direct, first-degree relationship, such a process is inefficient, as a human has to manually assess a relationship for every user, and then configure or program the system accordingly. Further still, as the number of in-between people connecting a pair of users increases (e.g., Kateryna and Ute are in between you and Bjorn, in the previous example), then there are more likely to be multiple paths connecting the two users. Thus, determining which path between any two users as the best path becomes yet another technical challenge that burdens an administrator.</p><p id="p-0028" num="0027">Accordingly, automated computing technology for programmatically determining, surfacing, and/or utilizing user-connection data as described herein, such as relationship(s) connecting any pair of users, a first user and a group of users, or two or more groups or users, and optimal paths of connection, can be beneficial for enabling improved computing applications and an improved user computing experience. Further, embodiments, as described herein, address a need that arises from a very large scale of operations created by software-based services that cannot be managed by humans. The actions/operations described herein are not a mere use of a computer, but address results of a system that is a direct consequence of software used as a service offered in conjunction with user communication through services hosted across a variety of platforms and devices. Further still, embodiments of this disclosure enable an improved user experience across a number of computer devices, applications, and platforms. Further still, embodiments, as described herein, cause certain, user-connection data shared among two or more users to be programmatically surfaced and presented without requiring computer tools and resources for a user to manually perform operations to produce this outcome. In this way, some embodiments, as described herein, reduce or eliminate a need for certain databases, data storage, and computer controls for enabling manually performed steps by an administrator, to search, identify and assess, and configure (e.g., by hard-coding) specific, static relationship information to be presented to users, thereby reducing the consumption of computing resources.</p><heading id="h-0006" level="1">Additional Description of the Embodiments</heading><p id="p-0029" num="0028">Turning now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a block diagram is provided showing an example operating environment <b>100</b> in which some embodiments of the present disclosure may be employed. It should be understood that this and other arrangements described herein are set forth only as examples. Other arrangements and elements (e.g., machines, interfaces, functions, orders, and groupings of functions) can be used in addition to or instead of those shown, and some elements may be omitted altogether for the sake of clarity. Further, many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location. Various functions described herein as being performed by one or more entities may be carried out by hardware, firmware, and/or software. For instance, some functions may be carried out by a processor executing instructions stored in memory.</p><p id="p-0030" num="0029">Among other components not shown, example operating environment <b>100</b> includes a number of user computing devices, such as user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n</i>; a number of data sources, such as data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n</i>; server <b>106</b>; sensors <b>103</b><i>a </i>and <b>107</b>; and network <b>110</b>. It should be understood that environment <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is an example of one suitable operating environment. Each of the components shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be implemented via any type of computing device, such as computing device <b>700</b> described in connection to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, for example. These components may communicate with each other via network <b>110</b>, which may include, without limitation, one or more local area networks (LANs) and/or wide area networks (WANs). In exemplary implementations, network <b>110</b> comprises the Internet and/or a cellular network, amongst any of a variety of possible public and/or private networks.</p><p id="p-0031" num="0030">It should be understood that any number of user devices, servers, and data sources may be employed within operating environment <b>100</b> within the scope of the present disclosure. Each may comprise a single device or multiple devices cooperating in a distributed environment. For instance, server <b>106</b> may be provided via multiple devices arranged in a distributed environment that collectively provide the functionality described herein. Additionally, other components not shown may also be included within the distributed environment.</p><p id="p-0032" num="0031">User devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>can be client user devices on the client-side of operating environment <b>100</b>, while server <b>106</b> can be on the server-side of operating environment <b>100</b>. Server <b>106</b> can comprise server-side software designed to work in conjunction with client-side software on user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>so as to implement any combination of the features and functionalities discussed in the present disclosure. This division of operating environment <b>100</b> is provided to illustrate one example of a suitable environment, and there is no requirement for each implementation that any combination of server <b>106</b> and user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>remain as separate entities.</p><p id="p-0033" num="0032">User devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>may comprise any type of computing device capable of use by a user. For example, in one embodiment, user devices <b>102</b><i>a </i>through <b>102</b><i>n </i>may be the type of computing device described in relation to <figref idref="DRAWINGS">FIG. <b>7</b></figref> herein. By way of example and not limitation, a user device may be embodied as a personal computer (PC), a laptop computer, a mobile or mobile device, a smartphone, a smart speaker, a tablet computer, a smart watch, a wearable computer, a personal digital assistant (PDA) device, a music player or an MP3 player, a global positioning system (GPS) or device, a video player, a handheld communications device, a gaming device or system, an entertainment system, a vehicle computer system, an embedded system controller, a camera, a remote control, an appliance, a consumer electronic device, a workstation, or any combination of these delineated devices, or any other suitable computer device.</p><p id="p-0034" num="0033">Data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n </i>may comprise data sources and/or data systems, which are configured to make data available to any of the various constituents of operating environment <b>100</b>, or system <b>200</b> described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For instance, in one embodiment, one or more data sources <b>104</b><i>a </i>through <b>104</b><i>n </i>provide (or make available for accessing) people data and person of interest data, which may include user-activity related data, to user-data collection component <b>210</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n </i>may be discrete from user devices <b>102</b><i>a </i>and <b>102</b><i>b </i>through <b>102</b><i>n </i>and server <b>106</b> or may be incorporated and/or integrated into at least one of those components. In one embodiment, one or more of data sources <b>104</b><i>a </i>through <b>104</b><i>n </i>comprise one or more sensors, which may be integrated into or associated with one or more of the user device(s) <b>102</b><i>a</i>, <b>102</b><i>b</i>, or <b>102</b><i>n </i>or server <b>106</b>. Examples of sensed people data made available by data sources <b>104</b><i>a </i>through <b>104</b><i>n </i>are described further in connection to people-data collection component <b>210</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0035" num="0034">Operating environment <b>100</b> can be utilized to implement one or more of the components of system <b>200</b>, described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, including components for collecting people or user data; monitoring user activity to determining user data or user data features; user preferences, and/or similar categories of data regarding a people or a particular person of interest, context data, or related information to facilitate sharing context or to otherwise provide an improved user experience; graph generation and processing; and/or consuming or presenting user-connection data to users. Operating environment <b>100</b> also can be utilized for implementing aspects of methods <b>500</b> and <b>600</b> in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref>, respectively.</p><p id="p-0036" num="0035">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, with <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a block diagram is provided showing aspects of an example computing system architecture suitable for implementing an embodiment of this disclosure and designated generally as system <b>200</b>. System <b>200</b> represents only one example of a suitable computing system architecture. Other arrangements and elements can be used in addition to or instead of those shown, and some elements may be omitted altogether for the sake of clarity. Further, as with operating environment <b>100</b>, many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location.</p><p id="p-0037" num="0036">Example system <b>200</b> includes network <b>110</b>, which is described in connection to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and which communicatively couples components of system <b>200</b> including user-data collection component <b>210</b>, presentation component <b>220</b>, user activity monitor <b>250</b>, graph generator <b>260</b>, graph data processor <b>270</b>, and storage <b>225</b>. User activity monitor <b>250</b> (including its subcomponents <b>252</b>, <b>254</b>, and <b>356</b>), graph generator <b>260</b> (including its subcomponents <b>262</b> and <b>264</b>_, graph data processor <b>270</b> (including its subcomponents <b>272</b>, <b>274</b>, and <b>276</b>), user-data collection component <b>210</b>, and presentation component <b>220</b>, may be embodied as a set of compiled computer instructions or functions, program modules, computer software services, or an arrangement of processes carried out on one or more computer systems, such as computing device <b>700</b> described in connection to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, for example.</p><p id="p-0038" num="0037">In one embodiment, the functions performed by components of system <b>200</b> are associated with one or more computer communications-related applications, services, or routines, such as an online meeting application, communications or collaboration application, LPC or user profile service, to determine or provide contextual information about relationships among two or more users, people highlights in association with a person, or otherwise to provide an enhanced computing experience for the user. In particular, such applications, services, or routines may operate on one or more user devices (such as user device <b>102</b><i>a</i>) or servers (such as server <b>106</b>). Moreover, in some embodiments, these components of system <b>200</b> may be distributed across a network, including one or more servers (such as server <b>106</b>) and/or client devices (such as user device <b>102</b><i>a</i>), in the cloud, or may reside on a user device, such as user device <b>102</b><i>a</i>. Moreover, these components, functions performed by these components, or services carried out by these components may be implemented at appropriate abstraction layer(s) such as the operating system layer, application layer, hardware layer, etc., of the computing system(s). Alternatively, or in addition, the functionality of these components and/or the embodiments described herein can be performed, at least in part, by one or more hardware logic components. For example, and without limitation, illustrative types of hardware logic components that can be used include Field-programmable Gate Arrays (FPGAs), Application-specific Integrated Circuits (ASICs), Application-specific Standard Products (ASSPs), System-on-a-chip systems (SOCs), Complex Programmable Logic Devices (CPLDs), etc. Additionally, although functionality is described herein with regards to specific components shown in example system <b>200</b>, it is contemplated that in some embodiments functionality of these components can be shared or distributed across other components.</p><p id="p-0039" num="0038">Continuing with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, user-data collection component <b>210</b> is generally configured to access or receive (and in some cases also identify) user data, which may include people data, with respect to both a user and one or more people of interest, from one or more data sources, such as data sources <b>104</b><i>a </i>and <b>104</b><i>b </i>through <b>104</b><i>n </i>of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some embodiments, user-data collection component <b>210</b> may be employed to facilitate the accumulation of user data of a particular user (or in some cases, a plurality of users including crowdsourced data) for user activity monitor <b>250</b>, or its subcomponents. The data may be received (or accessed), and optionally accumulated, reformatted, and/or combined, by user-data collection component <b>210</b> and stored in one or more data stores such as storage <b>225</b>, where it may be available to other components of system <b>200</b>. For example, the user data may be stored in or associated with a user profile <b>240</b>, as described herein, such as in user data <b>244</b> or user profile <b>240</b>. In some embodiments, any personally identifying data (i.e., people data that specifically identifies particular users) is either not uploaded or otherwise provided from the one or more data sources with people data, is not permanently stored, is de-identified, and/or is not made available to other components of system <b>200</b>. In some embodiments, a user may opt into or out of services provided by the technologies described herein and/or select which user data and/or which sources of user data are to be captured and utilized by these technologies.</p><p id="p-0040" num="0039">User data, generally, may be any information that is related to a person, or group of people, that informs a user about an aspect of that person or group of people, and may be received from a variety of sources and may be available in a variety of formats. By way of example and without limitation, user data may comprise contact information (e.g., email, instant message, phone, and may also specify a person's communication preferences); location information (e.g., a person's current location or location of a particular office where they work); presence; user-related activity, which may comprise activity relevant to the user (e.g., that the person of interest has an upcoming meeting with the user or recently emailed the user); task-related information (e.g., outstanding tasks that the user has with regard to the person of interest, or outstanding tasks that the person of interest has with respect to the user); information about the person of interest that they may choose to share (e.g., birthday, anniversary, etc.); information in common with the user (e.g., common project teams, work groups, backgrounds, education, interests or hobbies). Additional examples of user data are described herein.</p><p id="p-0041" num="0040">In some embodiments, user data received via user-data collection component <b>210</b> may be obtained from a data source (such as data source <b>104</b>(<i>a</i>) in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, which may be a social networking site, a professional networking site, or other data source containing user or people data) or determined via one or more sensors (such as sensors <b>103</b><i>a </i>and <b>107</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), which may be on or associated with one or more user devices (such as user device <b>102</b><i>a</i>), servers (such as server <b>106</b>), and/or other computing devices. As used herein, a sensor may include a function, routine, component, or combination thereof for sensing, detecting, or otherwise obtaining information such as user data from a data source <b>104</b><i>a</i>, and may be embodied as hardware, software, or both. By way of example and not limitation, user data may include data that is sensed or determined from one or more sensors (referred to herein as sensor data), such as location information of mobile device(s), properties or characteristics of the user device(s), user-activity information (for example: app usage; online activity; searches; voice data such as automatic speech recognition; activity logs; communications data including calls, texts, instant messages, and emails; website posts; other user data associated with communication events) including, user history, session logs, application data, contacts data, calendar and schedule data, notification data, social-network data, ecommerce activity, user-account(s) data (which may include data from user preferences or settings associated with a personalization-related application, a personal assistant application or service, an online service or cloud-based account such as Microsoft 365, an entertainment or streaming media account, a purchasing club or services), global positioning system (GPS) data, other user device data (which may include device settings, profiles, network-related information, payment or credit card usage data, purchase history data, other sensor data that may be sensed or otherwise detected by a sensor (or other detector) component(s) including data derived from a sensor component associated with the user (including location, motion, orientation, position, user-access, user-activity, network-access, user-device-charging, or other data that is capable of being provided by one or more sensor component), data derived based on other data (for example, location data that can be derived from Wi-Fi, Cellular network, or IP address data), and nearly any other source of data that may be sensed or determined as described herein.</p><p id="p-0042" num="0041">User data, particularly in the form of context data or contextual information, can be received by user-data collection component <b>210</b> from one or more sensors and/or computing devices associated with a user. In some embodiments, user-data collection component <b>210</b>, user activity monitor <b>250</b> (or one or more of its subcomponents), or other components of system <b>200</b> may determine interpretive data from received user data. Interpretive data corresponds to data utilized by the components or subcomponents of system <b>200</b> that comprises an interpretation from processing raw data, such as venue information interpreted from raw location information. Interpretive data can be used to provide context to user data, which can support determinations or inferences carried out by components of system <b>200</b>. Moreover, it is contemplated that some embodiments of the disclosure use user data alone or in combination with interpretive data for carrying out the objectives of the subcomponents described herein. It is also contemplated that some user data may be processed, by the sensors or other subcomponents of user-data collection component <b>210</b> not shown, such as for interpretability by user-data collection component <b>210</b>. However, embodiments described herein do not limit the user data to processed data and may include raw data or a combination thereof, as described above.</p><p id="p-0043" num="0042">In some respects, user data may be provided in user-data streams or signals. A &#x201c;user signal&#x201d; can be a feed or stream of user data from a corresponding data source. For example, a user signal could be from a smartphone, a home-sensor device, a GPS device (e.g., for location coordinates), a vehicle-sensor device, a wearable device, a user device, a gyroscope sensor, an accelerometer sensor, a calendar service, an email account, a credit card account, or other data sources. In some embodiments, user-data collection component <b>210</b> receives or accesses data continuously, periodically, as it becomes available, or as needed. In some embodiments, the user data, which may include people information/people data, received by user-data collection component <b>210</b> is stored in storage <b>225</b>, such as in user data <b>244</b>.</p><p id="p-0044" num="0043">User activity monitor <b>250</b> is generally responsible for monitoring user activity for information that may be used for determining user data, and in some embodiments, a context. In particular, embodiments of user activity monitor <b>250</b> may determine user data associated with a particular user, which may include user-related activity data and context data, and may provide the determined user data as structured data, such as a set of data features, so that it may be used by other components of system <b>200</b>. For instance, as further described herein, the user data may be used by graph generator <b>260</b> to be compared against similar user data for other users in order to determine user-connection data for generating a graph. Accordingly, in some embodiments, user data determined by user activity monitor <b>250</b>, or its subcomponents, may be used to determine inferred relationships between a particular user and other users. The user data determined by user activity monitor <b>250</b>, or its subcomponents, also may be stored in a user profile associated with a user, such as in user data <b>244</b> of user profile <b>240</b>, where it may be accessible to other components of system <b>200</b>.</p><p id="p-0045" num="0044">In some embodiments, user activity monitor <b>250</b> may determine current or near-real-time user activity information and may also determine historical user activity information, which may be determined based on gathering observations of user activity over time, accessing user logs of past activity (such as browsing history, for example). For example, it may be determined that a particular user currently works with another user, or it may be determined that the particular user previously worked with the other user for a duration of time. Further, in some embodiments, user activity monitor <b>250</b> may determine user data and/or user-related activity data (which may include historical activity) from other users.</p><p id="p-0046" num="0045">The user data determined by user activity monitor <b>250</b> (or its subcomponents) may include user-related activity information determined from one or multiple user devices associated with the user and/or from cloud-based services associated with the user (such as email, calendars, social media, or similar information sources), and may further include contextual information associated with the user activity or user data. For example, information about user activity on a particular device or cloud-based service may be used to determine a context associated with the user, which may be used for determining aspects of user-connection data for displaying to the user or providing to a computing application or service. In an embodiment, user activity monitor <b>250</b> comprises one or more applications or services that analyze information detected via one or more user devices used by the user and/or cloud-based services associated with the user, to determine activity information and/or contextual information. Information about user devices associated with a user may be determined from the user data made available via user-data collection component <b>210</b>, and may be provided to user activity monitor <b>250</b> or other components of system <b>200</b>. More specifically, in some implementations of user activity monitor <b>250</b>, a user device may be identified by detecting and analyzing characteristics of the user device, such as device hardware, software such as operating system (OS), network-related characteristics, user accounts accessed via the device, and similar characteristics. For example, information about a user device may be determined using functionality of many operating systems to provide information about the hardware, OS version, network connection information, installed application, or the like.</p><p id="p-0047" num="0046">Some embodiments of user activity monitor <b>250</b>, or its subcomponents, may determine a device name or identification (device ID) for each device associated with a user. This information about the identified user devices associated with a user may be stored in a user profile associated with the user, such as in user accounts and devices <b>242</b> of user profile <b>240</b>. In an embodiment, the user devices may be polled, interrogated, or otherwise analyzed to determine information about the devices. This information may be used for determining a label or identification of the device (e.g., a device ID) so that user interaction with the device may be recognized from user data by user activity monitor <b>250</b>. In some embodiments, users may declare or register a device, such as by logging into an account via the device, installing an application on the device, connecting to an online service that interrogates the device, or otherwise providing information about the device to an application or service. In some embodiments, devices that sign into an account associated with the user, such as a Microsoft&#xae; account or MSA, email account, social network, or the like, are identified and determined to be associated with the user.</p><p id="p-0048" num="0047">As shown in example system <b>200</b>, user activity monitor <b>250</b> comprises a user-related activity detector <b>252</b>, context extractor <b>254</b>, and an user features determiner <b>256</b>. In some embodiments, user activity monitor <b>250</b>, one or more of its subcomponents, or other components of system <b>200</b>, such as graph generator <b>260</b> or graph data processor <b>270</b>, may determine interpretive data based on received user data, such as described previously. It is contemplated that embodiments of user activity monitor <b>250</b>, its subcomponents, and other components of system <b>200</b> may use user data and/or user data in combination with interpretive data for carrying out the objectives of the subcomponents described herein. Additionally, although several examples of how user activity monitor <b>250</b> and its subcomponents may identify user-related activity information are described herein, many variations of user activity identification and user activity monitoring are possible in various embodiments of the disclosure.</p><p id="p-0049" num="0048">User-related activity detector <b>252</b>, in general, is responsible for determining (or identifying) a user action or user-activity event has occurred. Embodiments of user-related activity detector <b>252</b> may be used for determining current user activity or one or more historical user actions. Some embodiments of user-related activity detector <b>252</b> may monitor user data for activity-related features or variables corresponding to various user activity such as indications of communications with other users, locations or visits, information about meetings attended, applications launched or accessed, files accessed, websites navigated to, media played, or similar user activities. Additionally, some embodiments of user-related activity detector <b>252</b> may extract, from the user data, information about user-related activity, which may include current user activity, historical user activity, and/or related information such as context. Alternatively or in addition, in some embodiments, context extractor <b>254</b> determines and extracts context. Similarly, in some embodiments, user features determiner <b>256</b> extracts information about a user, such as user-related activity related features, based on an identification of the activity determined by user-related activity detector <b>252</b>. Examples of extracted user-related activity information may include user location, app usage, online activity, searches, calls, usage duration, application data (e.g., emails, meeting invites, messages, posts, user status, notifications, etc.), or nearly any other data related to user interactions with the user device or user activity via a user device. For example, a user's location may be determined using GPS, indoor positioning (IPS), or similar communications functionality of a user device associated with a user.</p><p id="p-0050" num="0049">Data determined from user-related activity detector <b>252</b> may be provided to other subcomponents of user activity monitor <b>250</b> or other components of system <b>200</b>, or may be stored in a user profile associated with the user, such as in user data <b>244</b> of user profile <b>240</b>. In some embodiments, user-related activity detector <b>252</b> or user activity monitor <b>250</b> (or its other subcomponents) performs conflation on the detected user data. For example, overlapping information may be merged and duplicated or redundant information eliminated.</p><p id="p-0051" num="0050">In some embodiments, the user activity-related features may be interpreted to determine a user activity has occurred. For example, in some embodiments, user-related activity detector <b>252</b> employs user-activity event logic, which may include rules, conditions, associations, classification models, or other criteria, to identify user activity. For example, in one embodiment, user activity event logic may include comparing user activity criteria with the user data in order to determine that an activity event has occurred. Similarly, activity event logic may specify types of detected user-device interaction(s) that are associated with an activity event, such as navigating to a website, composing an email, or launching an app. In some embodiments, a series or sequence of user device interactions may be mapped to an activity event, such that the activity event may be detected upon determining that the user data indicates the series or sequence of user interactions has been carried out by the user.</p><p id="p-0052" num="0051">In some embodiments, user activity detector <b>252</b> runs on or in association with each user device for a user. User activity detector <b>252</b> may include functionality that polls or analyzes aspects of the operating system to determine user activity related features (such as installed or running applications or file accesses and modifications, for example), network communications, and/or other user actions detectable via the user device including sequences of actions.</p><p id="p-0053" num="0052">Context extractor <b>254</b> is generally responsible for determining a context associated with user-related activity or user data. As further described herein, a context (or context logic) may be used to determine or process a graph, or to assemble and/or format user-connection data for presentation to a user or consumption by a computing application. By way of example, a context may comprise information about a user's current activity, such as application usage, communication or interaction with other user(s) or interaction with user data for other users, information indicating types of user activity, for instance, that a user is attending or scheduling a meeting with at least another user, sending a message to one or more other users, or viewing a Live Persona Card (&#x201c;LPC&#x201d;) or other user profile of another user. Alternatively, or in addition, a user may explicitly provide a context, such as a query about another user, or specifically querying their relation with another user, or between two or more other users. A context may include information about another user, such as a second user (or plurality of users) that the user is interacting with or accessing information about, as in where a user hovers their mouse over an indication of another user to view a portion of an LPC.</p><p id="p-0054" num="0053">Some embodiments of context extractor <b>252</b> determine context related to a user action or activity event such as people entities identified in a user activity or related to the activity (e.g., recipients of a group email sent by the user), which may include nicknames used by the user (e.g., &#x201c;mom&#x201d; and &#x201c;dad&#x201d; referring to specific entities who may be identified in the user's contacts by their actual names), and may utilize a named-entity extraction model or named-entity recognition model. Context extractor <b>252</b> also may determine location- or venue-related information about a user's device, which may include information about other users or people present at the location. By way of example and not limitation, this may include context features such as location data; contextual information about the location; duration of a user activity; other information about the activity such as entities associated with the activity (e.g., venues, people, objects); information detected by sensor(s) on user devices associated with the user that is concurrent or substantially concurrent to the detected user activity; or any other data related to the user activity that is detectable that may be used for determining a context of the user-related activity.</p><p id="p-0055" num="0054">In some embodiments, context extractor <b>254</b> comprises one or more applications or services that parse or analyze information detected via one or more user devices used by the user and/or cloud-based services associated with the user, to identify, extract, or otherwise determine a user-related or user-device-related context. Alternatively or in addition, some embodiments of context extractor <b>254</b> may monitor user data, such as that received by user-data collection component <b>210</b> or determined by user-related activity determiner <b>252</b>, for information that may be used for determining a user context. In some embodiments, this information may comprise features (sometimes referred to herein as &#x201c;variables&#x201d;) or other information regarding specific user-related activity and related contextual information. Some embodiments of context determiner <b>252</b> may determine, from the monitored user data, a user context associated with a particular user or user device, or a plurality of users and/or user devices. In some embodiments, a user context determined by context extractor <b>254</b> may be provided to other components of system <b>200</b> or stored in a user profile associated with a user, such as in user data <b>244</b> of user profile <b>240</b>, where it may be accessed by other components of system <b>200</b>.</p><p id="p-0056" num="0055">User features determiner <b>256</b> is generally responsible for determining or extracting a set of one or more data features (or variables) characterizing the user and/or determining structured user data associated with the user. User features may be determined from information about user data received from user-data collection component <b>210</b> or from user-related activity data, which may include context data, determined by user activity monitor <b>250</b>. In some embodiments, user features determiner <b>256</b> receives information from one or more of these other components of system <b>200</b> and processes the received information to determine a set of one or more features associated with the user. For example, user data processed by user features determiner <b>256</b> may comprise unstructured, semi-structured, or structured data about a user (or other users). In some embodiments, this received user data may be converted into a structured data schema or record, a feature vector, a set of data feature-value pairs, or other data record that is usable for performing a comparison against data of other users in order to determine user data relations. The user features or structured user data determined by user features determiner <b>256</b> may be provided to other components of system <b>200</b> or stored in a user profile associated with a user, such as in user data <b>244</b> of user profile <b>240</b>, where it may be accessed by other components of system <b>200</b>.</p><p id="p-0057" num="0056">Examples of user features determined or extracted by user features determiner <b>256</b> may include, without limitation, data from information sources associated with the user, such as an org chart or employment data (e.g., who the user reports to, manages, works with, the user's role, project teams, or similar information), as well as social media or social collaboration information sources (e.g., the user's LinkedIn&#xae; connections, or GitHub&#xae; contributions or collaborations); location-related features, venue-related information associated with the location, or other location-related information; other users present at a venue or location; time-related features; current-user-related features, which may include information about the current or recent user of the user-device; user device-related features, such as device type (e.g., desktop, tablet, mobile phone, fitness tracker, heart rate monitor), hardware properties or profiles, OS or firmware properties, device IDs or model numbers, network-related information, position/motion/orientation-related information about the user device, network usage information, app usage on the device, user account(s) accessed or otherwise used (such as device account(s), OS level account(s), or online/cloud-services related account(s) activity, such as Microsoft&#xae; MSA account, online storage account(s), email, calendar, meetings, or social networking accounts); content-related features, such as meeting topics, presentations, or attendees, online activity (e.g., searches, browsed websites, purchases, social networking activity, communications sent or received including social media posts); or any other features that may be detected or sensed and used for determining the data characterizing a user.</p><p id="p-0058" num="0057">Some embodiments of user features determiner <b>256</b>, or user activity monitor <b>250</b> may determine interpretive or semantic data from user data, which may be used to determine user data features or other structured user data. For example, while a user-activity feature may indicate a location visited by the user, a semantic analysis may determine that the location is a gym or a coffee house or other data associated with detected user activity or user data. Thus, semantic analysis may determine additional user-activity related features or user data that is semantically related to other data and which may be used for further characterizing the user or for determining a context.</p><p id="p-0059" num="0058">In particular, a semantic analysis may be performed on at least a portion of user data, to characterize aspects of the user data. For example, in some embodiments, user-related activity features may be classified or categorized (such as by type, time frame or location, work-related, home-related, themes, related entities, other user(s) (such as communication to or from another user) and/or relation of the other user to the user (e.g., family member, close friend, work acquaintance, boss, or the like), or other categories), or related features may be identified for use in determining a similarity or relational proximity to other user-related activity events. In some embodiments, a semantic analysis may utilize a semantic knowledge representation, such as a relational knowledge graph. A semantic analysis may also utilize semantic analysis logic, including rules, conditions, or associations to determine semantic information related to a user activity. For example, a user-related activity event comprising an email sent to someone who works with the user may be characterized as a work-related activity, which may be used to infer a relationship that the user works with the email recipient. A semantic analysis may also be used to further determine or characterize a context, such as determining that a location associated with user-related activity corresponds to a hub or venue of the user (such as the user's home, work, gym, or the like) based on frequency of user visits. For example, the user's home hub may be determined (using semantic analysis logic) to be the location where the user spends most of her time between 8 PM and 6 AM. Similarly, the semantic analysis may determine the time of day that corresponds to working hours, lunch time, commute time, or other similar categories.</p><p id="p-0060" num="0059">Continuing with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, graph generator <b>260</b> is generally responsible for generating a graph data structure of user-connection data for a plurality of users. As used herein, a graph is a non-linear data structure that comprises a plurality of nodes, with each node corresponding to a user, and one or more edges connecting each pair of nodes. An edge indicates a relation between the two nodes, and thus reflects a relationship between the two people corresponding to the two nodes. One example graph is described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0061" num="0060">Some embodiments of graph generator <b>260</b> generate one graph or a plurality of graphs, where each graph may represent different type(s) of relationships, such as work relationships versus social relationships, or explicitly determined relationships versus inferred relationships; or each graph may represent different groups of users (e.g., one group may comprise employees of a company and another group may comprise a particular user's social circle). Some embodiments or graph generator <b>260</b> may augment or enrich an existing graph with additional user-connection data for users represented by the graph. Additionally, or alternatively, some embodiments of graph generator <b>260</b> may logically combine a plurality of graphs into a super-graph structure. For example, graph generator <b>260</b> may generate a first graph based on inferred relationships among users and logically merge the first graph with a second graph, which may be already determined and is based on user work relationships, as reflected in an org chart, or social media relationships, such as LinkedIn&#xae; connections. Embodiments of graph generator <b>260</b> may utilize graph-construction logic <b>233</b> to construct (or augment, or logically form) a graph, as further described herein. Graphs that are created by graph generator <b>260</b> may be stored as a graph <b>230</b> of storage <b>225</b>, where they may be made accessible to other components of system <b>200</b>, such as graph data processor <b>270</b>.</p><p id="p-0062" num="0061">Some embodiments of graph generator <b>260</b> generate (or augment) a graph using user data for a plurality of users, which may be received from a user-data collection component <b>210</b>, from a user profile <b>240</b> associated with a user, or determined by a user activity monitor <b>250</b>, or one of its subcomponents. In some embodiments, user data for a particular user may be determined by crawling and indexing content from information sources for the particular user, such as company or organizational information, social media activity, logs, other types of user data described herein, or any other data that the particular user has consented to sharing or making available for determining a relationship with other users. For example, some embodiments of graph generator <b>260</b> include functionality for scanning or crawling and indexing content related to a user. Similarly, content discovered via crawling may be converted into structured data, or data features may be extracted from the content and stored in a user profile associated with the particular user for which the content was identified.</p><p id="p-0063" num="0062">As shown in example system <b>200</b>, graph generator <b>260</b> comprises a user relationship determiner <b>262</b> and a graph assembler <b>264</b>. User relationship determiner <b>262</b>, in general, is responsible for determining a relationship between a pair of users, and in some embodiments further determine or infer the relationship type. In particular, embodiments of user relationship determiner <b>262</b> may determine a user-pair relationship between pairs of users. For instance, each user-pair relationship may identify two users and information indicating at least one relationship between the two users (e.g., user A shares a relationship with user B and the relationship(s) are: works with; or user C shares a relationship with user D, and the relationship(s) are: works with, reports to, and goes to the same gym).</p><p id="p-0064" num="0063">Embodiments of user relationship determiner <b>262</b> may perform a comparison of at least a portion of the user data for a plurality of users, to determine a relationship and/or relationship type between pairs of users. In particular, user data features or a feature vector, schema, or other data for two users may be compared to determine data indicating a relationship between the two users. In some embodiments, a set of predetermined or user-defined relationship types are evaluated by the comparison, such as organizational relationships (e.g., reports to or is a manager of), social media connections, or office location, for example. In these embodiments, user data corresponding to the predefined relationship types may be compared to determine the relationships between pairs of users. For instance, for every pair of users, compare their office work location, whether they have a &#x201c;is manager of/reports to&#x201d; relationship, whether they are connected on a social media platform or GitHub&#xae;, whether they are on the same project team, or the like.</p><p id="p-0065" num="0064">In some embodiments, relationships between two users are inferred based on the user data for each of the users. Moreover, in some of the embodiments where a user-to-user relationship is inferred, the comparison of user data may comprise performing a similarity or relation comparison operation or evaluating data values in a user schema or feature vector to determine equal or similar values. In some embodiments, graph construction logic <b>233</b> (described below) may be used, which may include computer instructions or rules for performing data comparisons to determine similarity or a relation indicating a connection. For example, two values for a data type (e.g., work location) may be compared, and if the values are the same or similar, then a relationship may be determined (e.g., the users both work in the same location). In some embodiments a similarity comparison may be performed based on a distance of feature values, and a similarity threshold employed so that two data features are determined to be similar, if their distance is less than the similarity threshold, for example. In these embodiments, the similarity threshold may be predefined, based on user settings or preferences, or based on the particular data being compared corresponding to a relationship type (e.g., work location). In some embodiments, a table or dictionary may be utilized to determine that specific data values for two users indicate a type of relationship. For example, if user data for a first user indicates that the user is a runner and user data for the second user indicates that the user is a jogger, then it may be determined that both users share a relationship of running (or jogging). Similarly, if user data for a first user indicates the first user is a fan of the V&#xe5;lerenga Hockey team, and user data for a second user indicates the second user is a fan of the Seattle Kraken Hockey team, then it may be determined that both users share a relationship of liking hockey, or more generally a relationship as sports fans. In some embodiments, a hierarchical relationship similarity such as a genus-species may be determined from the comparison. For example, if the user data for a first user indicates they like baseball and the user data for a second user indicates they like basketball, then a comparison may determine that both users share a relationship for liking sports, because baseball and basketball are species within a genus of sports. In some embodiments a table-lookup, dictionary, or index may be used to determine a genus-species relationship.</p><p id="p-0066" num="0065">In this way, embodiments of user relationship determiner <b>262</b> (or more generally of graph generator <b>260</b>) can determine, by way of example, that two users work together, work in the same office location, report to the same manager, are both collaborators for a GitHub&#xae; repository, go to the same gym, or have another type of relationship with each other. Moreover, as described herein, some types of relationships may be explicit, such as relationships indicating both users work in the same office location or are connected on a social media platform. Other types of relationships may be inferred, such as both users go to the same gym.</p><p id="p-0067" num="0066">Further, in some embodiments, a corresponding confidence or probability of the relationship between the two users also may be determined by user relationship determiner <b>262</b>. For instance, in the case of an explicit relationship type, such as a social media connection, the confidence may 0 or 1 (or the relationship type may be binary), because the two users either are or are not connected on social media. For inferred relationships, a confidence may indicate the strength of the inference. For example, where user data indicates that two users work in the same office, are on the same project team, and frequently exchange messages about work with each other, then an inferred relationship that the two users work together may have a high confidence value. On the other hand, where user data only indicates that two users have the same office location, but other user data indicates they different roles in an organization, then a relationship inference that the two users work together may have a much lower confidence. In some embodiments, only relationships (whether inferred or explicit) having a confidence satisfying a given relationship confidence threshold may be used for constructing a graph; for example, greater than 0.8 or more likely than not (e.g., greater than 0.5). In some embodiments, the relationship confidence threshold (or whether a relationship is included in the graph or used by graph data processor <b>270</b>) varies by the particular relationship type, and/or a context. For example, where a context indicates that a user wants to see how they are connected to another user, then relationship types (or inferred relationships) with a lower confidence may be acceptable, but where a context indicates a user is desiring to make an introduction or determining a well-connected person in a group of people, such as an influential person to be invited to a meeting, then a higher relationship confidence threshold may be used so that only relationships that are more certain are used. In some embodiments using a relationship confidence threshold, the threshold may be specified as a user configuration in user preferences <b>248</b>.</p><p id="p-0068" num="0067">Graph assembler <b>264</b>, in general, is responsible for assembling user-pair relationships determined by user relationship determiner <b>262</b> into a graph. One example of a graph <b>300</b> is illustratively depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. With reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, and continuing reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, graph assembler <b>264</b> (or more generally, graph generator <b>260</b>) may generate (or augment) a graph such as graph <b>300</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Example graph <b>300</b> includes a plurality of nodes <b>301</b>A, <b>301</b>B, <b>301</b>C, <b>301</b>D, <b>301</b>E, <b>301</b>F, <b>301</b>G and <b>301</b>H, and edges (e.g., edges <b>302</b>A, <b>302</b>B, <b>302</b>C, and <b>304</b>), with each edge connecting a pair of the nodes. Embodiments of graph assembler <b>264</b> may assemble the user-pair relationships into a graph such that each user corresponds to a node, and an edge connecting any two nodes represents a relationship between the two users corresponding to the two nodes. For example two users <b>303</b>A and <b>303</b>C corresponding to nodes <b>301</b>A and <b>301</b>C, respectively, share a relationship as indicated by edge <b>316</b>. In some embodiments, graph assembler <b>264</b> assigns or designates each user, in a plurality of users to be represented in the graph <b>300</b>, as a node (e.g., users <b>303</b>A, <b>303</b>B, <b>303</b>C, <b>303</b>D, <b>303</b>E, <b>303</b>F, <b>303</b>G, and <b>303</b>H are represented at nodes <b>301</b>A, <b>301</b>B, <b>301</b>C, <b>301</b>D, <b>301</b>E, <b>301</b>F, <b>301</b>G and <b>301</b>H, respectively). Then, the relationships between pairs of users, from the user-pair relationships, are used to form edges connecting the nodes, so that an edge connecting two nodes corresponds to a relationship indicated by the user-pair relationship. Thus in some embodiments, an edge may be considered to be annotated as indicting a relationship type. As the relationship types between any first pair of nodes (corresponding to users) may be different than the relationship types between any second pair of nodes, a graph, such as graph <b>300</b>, assembled by graph assembler <b>264</b> does not necessarily reflect homogeneous relationships in the graph edges, in some embodiments. For example, a relationship type represented by edge <b>302</b>A is different than a relationship type represented by edge <b>302</b>B and may be different than a relationship type represented by edge <b>316</b>. Moreover, some pairs of nodes may share multiple edges, such as nodes <b>301</b>A and <b>301</b>F sharing edges <b>302</b>A-C, reflecting multiple different relationships between the two users corresponding to the pair of nodes <b>301</b>A and <b>301</b>F. Accordingly, graphs assembled by graph assembler <b>264</b> (or more generally generated or augmented by graph generator <b>260</b>) are different than conventional graph data structures where each edge represents the same kind of relationship (e.g., homogeneous) or where any pair of nodes are connected only by one edge.</p><p id="p-0069" num="0068">Some embodiments of graph assembler <b>264</b> utilize graph construction logic <b>233</b> (further described below) to assemble a graph, such as graph <b>300</b>. Graph assembler <b>264</b> may provide assembled graph <b>300</b> to graph data processor <b>270</b> or store the assembled graph <b>300</b> as a graph <b>230</b> in storage <b>225</b>, where it may be accessible to other components of system <b>200</b>.</p><p id="p-0070" num="0069">In some embodiments, graph assembler <b>264</b> may determine or assign an edge weight for at least some of the edges in a graph. As explained herein, edge weighting, and in some embodiments node weighting, may be used by graph data processor <b>270</b> to determine an optimal or least-cost path between two end nodes. An edge weight may comprise a coefficient, multiplier, or number associated with an edge that may reflect a bias or weighting of the particular relationship type or the relationship closeness of the users corresponding to the nodes that share the weighted edge. For instance, suppose edges <b>308</b> and <b>310</b> each represent a &#x201c;reports to&#x201d; relationship, and edge <b>312</b> represents an inferred, &#x201c;works with&#x201d; relationship. According to one embodiment that uses edge weighting, edges <b>308</b> and <b>310</b> may have a weight of 1, and edge <b>312</b> may have a weight of 4. Thus, as further described in connection with graph data processor <b>270</b>, an optimal or least-cost path between nodes <b>301</b>B and <b>301</b>D would be the path that travels from node <b>301</b>B to node <b>301</b>E to node <b>301</b>D, which has a cost of 2 (each edge is weighted at 1). Although a direct path exists between node <b>301</b>B and node <b>301</b>D (as indicated by edge <b>312</b>), the cost for this path is 4, and thus it is not the least-cost path. Accordingly, this may indicate that a stronger or more reliable chain of relationships among users exists in the least cost path (<b>301</b>B-<b>301</b>E-<b>301</b>D) than in the direct path.</p><p id="p-0071" num="0070">In some embodiments using edge weighting, a weight may be pre-determined and based on the particular relationship type; based on a user or administrator configured setting, such as user preference or feedback provided by a user; based on other relationship types in the graph, in a path that includes the edge, or that shares a connection with an edge; may be dynamic, and/or based on a context or use case for the user-connection data, for example. For example, an edge may be weighted based on the type of relationship represented by the edge and/or a degree or strength of the connection represented by the edge, which may be based on a confidence associated with the relationship or based on the particular user data that supported the determination or inference of a relationship. In some embodiments, an edge weight may be dynamic or based on a context; for instance, a user may specify that certain types of relationships types are preferred or want to see a relationship path of users having a certain type of relationship.</p><p id="p-0072" num="0071">In some embodiments, where multiple edges connect a pair of nodes, such as nodes <b>301</b>A and <b>301</b>F, graph assembler <b>264</b> may determine a composite edge and/or a corresponding combined edge weight reflecting the closeness of relation between the users corresponding to the nodes sharing the multiple edges or composite edge. Some embodiments of graph construction logic <b>233</b> may include rules or computer instructions for determining a weight for a composite edge and/or a corresponding combined edge weight. For example, suppose edges <b>302</b>A, <b>302</b>B, and <b>302</b>C represented relationships: works with, reports to, goes to the same gym, respectively. Although each of these edges may have a weight, because there are three edges connecting nodes, this may indicate greater degrees of connection or closeness between the two users represented by the nodes. Accordingly, in some embodiments of graph assembler <b>264</b> that determine a composite edge or combined edge weight, the resulting weight may be lower than the individual weights of any one of the edges. For example, one rule of graph construction logic <b>233</b> may specify to determine a combined weighting as follows:</p><p id="p-0073" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mrow>  <mrow>   <mi>Combined</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>Edge</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>Weight</mi>  </mrow>  <mo>=</mo>  <mfrac>   <mn>1</mn>   <mrow>    <mo>(</mo>    <mrow>     <mfrac>      <mn>1</mn>      <msub>       <mi>W</mi>       <mrow>        <mi>edge</mi>        <mo>&#x2062;</mo>        <mn>1</mn>       </mrow>      </msub>     </mfrac>     <mo>+</mo>     <mrow>      <mfrac>       <mn>1</mn>       <msub>        <mi>W</mi>        <mrow>         <mi>edge</mi>         <mo>&#x2062;</mo>         <mn>2</mn>        </mrow>       </msub>      </mfrac>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mo>&#x2026;</mo>      <mo>&#x2062;</mo>      <mtext>   </mtext>      <mfrac>       <mn>1</mn>       <msub>        <mi>W</mi>        <mrow>         <mi>edge</mi>         <mo>&#x2062;</mo>         <mtext>   </mtext>         <mi>n</mi>        </mrow>       </msub>      </mfrac>     </mrow>    </mrow>    <mo>)</mo>   </mrow>  </mfrac> </mrow></math></maths></p><p id="p-0074" num="0000">where Wedge 1=the edge weight of the first parallel edge.</p><p id="p-0075" num="0072">In some embodiments, graph assembler <b>264</b> may assign a weight to nodes. For example, a context may indicate determining a path between two end users that avoids (or preferably avoids) a particular user or a path that includes a particular user. Accordingly, by assigning a weight to the node corresponding to that user, the node may be more likely to be included or excluded in an optimal path. For example, by assigning the node a low weight (e.g., 0), and all other nodes a higher weight (e.g., 1), then a least-cost path is more likely to include the low-weighted node. In another example, a node weight may be determined based on a PageRank-type algorithm or a similar determination of the degree to which a particular node is connected to other nodes in a graph. Thus, for example, a well-connected node may receive a lower weight than a less-connected node, which may cause the well-connected node to be more likely included in an optimal path.</p><p id="p-0076" num="0073">Some embodiments of graph generator <b>260</b>, or its subcomponents, may utilize graph-construction logic <b>233</b> for generating a graph. Graph-construction logic <b>233</b> may comprise computer instructions including rules, conditions, associations, classification models, or other criteria for determining user-pair relationships, assembling user-pair relationships into a graph, or augmenting or generating a graph. In some embodiments, graph-construction logic <b>233</b> includes logic for performing comparison of user data to determine similarities indicating relationships and/or specifying explicit or predefined user data to evaluate for determining a relationship between pairs of users. For example, graph-construction logic <b>233</b> may include a set of rules for comparing feature values for identical data feature types, and determining a level of similarity feature values of similar feature types. For instance, some embodiments may utilize classification models such as statistical clustering (e.g., k-means or nearest neighbor) or a proximity of features to each other on a semantic knowledge graph, neural network, or other classification techniques to determine similarity. Some embodiments of graph-construction logic <b>233</b> include logic for determining or assigning edge weighting or node weighting, or for incorporating a context into an edge weight or note weight, such as setting higher weight for a node corresponding to a person that a user wants to exclude in an optimal path. Accordingly, graph-construction logic <b>233</b> may take different forms. For example, the graph-construction logic <b>233</b> may comprise a set of rules (which may include static or predefined rules or may be set based on settings or preferences in a user profile associated with the user), Boolean logic, decision trees (e.g., random forest, gradient boosted trees, or similar decision algorithms), conditions, or other logic, a deterministic or probabilistic classifier, fuzzy logic, neural network, finite state machine, support vector machine, logistic regression, clustering, or machine learning techniques, similar statistical classification processes, or combinations of these.</p><p id="p-0077" num="0074">Continuing with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, graph data processor <b>270</b> is generally responsible for processing a graph to determine an insight, such as an information item (or more generally connection data) about an aspect of at least one optimal path between two users or connecting a plurality of users. In particular, graph data processor <b>270</b> may process a graph, aspects of the graph, or information determined from a graph, such as paths, in order to determine user-connection data such as an information item. Thus an information item may comprise user-connection data regarding one or more paths, such as an optimal path, a graph or subgraph, or related information, such as information about users, user data, or relationships, which may be determined based on user-connection data. In some embodiments, an information item may comprise an insight or may be formatted or assembled as an insight, or used to derive an insight. For example, an insight may indicate user-connection data such as people relationships connecting two or more users. Embodiments of graph data processor <b>270</b> may receive a graph or data from a graph, which may be received from graph generator <b>260</b> or from graph <b>230</b> in storage <b>225</b>, and process the graph according to a context, such as a constraint, consideration, or indication of at least one user in the graph. Embodiments of graph data processor <b>270</b> may further assemble or format the connection data (e.g., an insight) for consumption by a computing application or service, and/or for presentation to a user. In some embodiments, the assembly or formatting also may be determined according to a context. The assembled or formatted connection data may be provided to presentation component <b>220</b> for presentation to a user or provided for consumption to a computing application or service to enable an enhanced computing experience for a user.</p><p id="p-0078" num="0075">As shown in example system <b>200</b>, graph data processor <b>270</b> comprises a path determiner <b>272</b>, a path/relationship processor <b>274</b>, and a connection data assembler <b>276</b>. With continuing reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref> and reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, path determiner <b>272</b>, in general, is responsible for determining one or more paths in a graph, such as graph <b>230</b> or graph <b>300</b> (<figref idref="DRAWINGS">FIG. <b>3</b></figref>). In particular, embodiments of path determiner <b>272</b> process a graph <b>230</b> to determine at least one path, which may comprise an optimal or least-cost path, between two graph nodes, each node corresponding to a user. More specifically, a path connecting two users in a graph comprises the edges and nodes that are traversed starting from a first end node (repressing one of the users) and ending at a second end node (representing the other user). Thus, any path between two connected users in a graph may be determined by traversing the graph, starting at a first end node, corresponding to one of the users, and moving along edges and nodes until arriving at the second end node, corresponding to the second user. For example, with reference to graph <b>300</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a first path between two users <b>303</b>A and <b>303</b>H corresponding to nodes <b>301</b>A and <b>301</b>H, respectively, may be determined by path determiner <b>272</b> as: path(<b>301</b>A,<b>301</b>H)=[(node <b>301</b>A)-edge <b>316</b>-(node <b>301</b>C)-edge <b>318</b>-(node <b>301</b>G)-edge <b>322</b>-(node <b>301</b>H)]. In this path, nodes <b>301</b>A and <b>301</b>H may be referred to as end nodes of the path, because this first path connects these two nodes <b>301</b>A and <b>301</b>H. In some graphs, there may be multiple paths connecting two end nodes, (and thus correspondingly connecting two users). For example a second path between the two users <b>303</b>A and <b>303</b>H corresponding to nodes <b>301</b>A and <b>301</b>H, respectively, may be determined by path determiner <b>272</b> as: path(<b>301</b>A, <b>301</b>H)=[(node <b>301</b>A)-edge <b>304</b>-(node <b>301</b>B)-edge <b>314</b>-(node <b>301</b>C)-edge <b>318</b>-(node <b>301</b>G)-edge <b>322</b>-(node <b>301</b>H)]. A third path between the two users <b>303</b>A and <b>303</b>H corresponding to nodes <b>301</b>A and <b>301</b>H, respectively, may be determined by path determiner <b>272</b> as: path(<b>301</b>A, <b>301</b>H)=[(node <b>301</b>A)-edge <b>304</b>-(node <b>301</b>B)-edge <b>312</b>-(node <b>301</b>D)-edge <b>324</b>-(node <b>301</b>G)-edge <b>322</b>-(node <b>301</b>H)]. Still another, fourth path between the two users <b>303</b>A and <b>303</b>H corresponding to nodes <b>301</b>A and <b>301</b>H, respectively, may be determined by path determiner <b>272</b> as: path(<b>301</b>A, <b>301</b>H)=[(node <b>301</b>A)-edge <b>304</b>-(node <b>301</b>B)-edge <b>320</b>-(node <b>301</b>G)-edge <b>322</b>-(node <b>301</b>H)].</p><p id="p-0079" num="0076">As described herein, an edge connecting any two nodes represents a relationship between the two users corresponding to the two nodes. For example the two users <b>303</b>A and <b>303</b>C corresponding to nodes <b>301</b>A and <b>301</b>C, respectively, share a relationship as indicated by edge <b>316</b>. As further described herein, in some instances, an edge connecting two nodes corresponds to a relationship indicated by the user-pair relationship that may have been determined by user relationship determiner <b>262</b>. Accordingly, a path having two nodes connected by at least one edge represents a relationship or connection between the two people corresponding to the two nodes connected by an edge, where the relationship is represented by the edge(s). A path comprising at least three or more nodes connected by at least one edge between each pair of contiguous nodes in the path thus represents a chain of relationships, where each relationship between two users in the path is represented by an edge connecting a pair of contiguous nodes (corresponding to the two users sharing the relationship. For example, in the first path above where path(<b>301</b>A,<b>301</b>H)=[(node <b>301</b>A)-edge <b>316</b>-(node <b>301</b>C)-edge <b>318</b>-(node <b>301</b>G)-edge <b>322</b>-(node <b>301</b>H)], this first path represents a chain of relationships between people (users <b>303</b>A, <b>303</b>C, <b>303</b>G, and <b>303</b>H) corresponding to each of the nodes <b>301</b>A, <b>301</b>C, <b>301</b>G, and <b>301</b>H. For instance, if each of edges <b>316</b> and <b>322</b> represent a &#x201c;works with&#x201d; relationship, and edge <b>318</b> represents a &#x201c;reports to&#x201d; relationship, then the chain of relationships for the users (<b>303</b>A, <b>303</b>C, <b>303</b>G, and <b>303</b>H) in this first path would be determined as: user <b>303</b>A works with user <b>303</b>C who reports to user <b>303</b>G, who works with user <b>303</b>H.</p><p id="p-0080" num="0077">Embodiments of path determiner <b>272</b> may determine at least one optimal path between two end nodes of a graph. An optimal path may be determined based on the weights of edges and/or nodes traversed on a path between two end nodes in the graph. In particular a path cost or value may be determined for a path by summing the edge weights as the edges are traversed (and/or, in some embodiments summing the node weights, as nodes are traversed) along the path and determining the cumulative sum of weights between two end nodes. An optimal path may comprise the least-cost path (or the path having the lowest cumulative sum of weights) between the two end nodes. In some embodiments, path determiner <b>272</b> may determine multiple paths between at least two users such as in the previous examples, and from these paths, may determine an optimal path, such as a least-cost path. Alternatively or in addition, some embodiments determine an optimal path as a path is determined, such as by evaluating, at a current node, a cumulative sum of the weights associated with each edges and/or nodes that connect the current node to a destination node, and selecting the edge or next node with the lowest weight(s).</p><p id="p-0081" num="0078">In some embodiments, where multiple paths exist between two end nodes, path determiner <b>272</b> may determine the path having the least cost (for example, the lowest cumulative sum) as an optimal path between the two end nodes. For instance, consider the example described above in connection with graph assembler <b>264</b>, where edges <b>308</b> and <b>310</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref> have edge weights of 1, and edge <b>312</b> has a weight of 4. Suppose all other edges in graph <b>300</b> have a weight of 1. Accordingly, among the paths that connect end nodes <b>301</b>B and <b>301</b>D, path determiner <b>272</b> may determine an optimal or least-cost path to be: best-path(<b>301</b>B, <b>301</b>D)=[(node <b>301</b>B)-edge <b>308</b>-(node <b>301</b>E)-edge <b>310</b>-(node <b>301</b>D)], or in other words, the path that travels from node <b>301</b>B to node <b>301</b>E to node <b>301</b>D, which has a cost of 2 (each edge is weighted at 1). In contrast, although a direct path exists between node <b>301</b>B and node <b>301</b>D (as indicated by edge <b>312</b>), the cost for this path is 4 because edge <b>312</b> has a weight of 4, and thus it is not the optimal path.</p><p id="p-0082" num="0079">Some embodiments of path determiner <b>272</b> may utilize path logic <b>235</b> to determine a path and/or an optimal path. Path logic <b>235</b> may comprise computer instructions including rules, conditions, associations, classification models, or other criteria for determining a path or an optimal path, such as a least-cost path in a graph. Some embodiments of path logic <b>235</b> may further comprise logic for determining a path (or optimal path) based on a context, such as a constraint, as described herein. Path logic <b>235</b> may take different forms depending on the particular graph and/or properties of the graph (e.g., relationship types, weightings of nodes or edges, number of edges connecting nodes) and/or based on a context, and may comprise a set of rules, such as Boolean logic, various decision trees (e.g., random forest, gradient boosted trees, or similar decision algorithms), conditions, or other logic, fuzzy logic, neural network, finite state machine, support vector machine, or machine-learning techniques, or combinations of these to determine a path or optimal path.</p><p id="p-0083" num="0080">In some embodiments, path logic <b>235</b> comprises a version of Dijkstra's algorithm, A* algorithm, or similar algorithm for graph traversal and used for finding a shortest path between two nodes in a graph. In some embodiments, path logic <b>235</b> comprises a modified Dijkstra's algorithm (or similar algorithm) that is modified according to the embodiments described herein such as by utilizing edge or node weights instead of distance, between two given nodes (e.g., end nodes), which may be determined based on a context. In some embodiments, of path logic <b>235</b>, the Dijkstra's algorithm (or similar algorithm) may be further modified to account for multiple edges between two nodes. For example, where multiple edges between two nodes are encountered, one embodiment of path logic <b>235</b> may specify to use the lowest weighted edge. Alternatively, another embodiment of path logic <b>235</b> may specify to determine a combined edge weighting, such as described herein. Similarly, where two different paths between the same end nodes are determined as optimal paths (e.g., both paths have the same cumulative sum of weights), then some embodiments of path logic <b>235</b> may provide both optimal paths, or provide the union of user-connection data represented in both paths. Some embodiments of path logic <b>235</b> may include instructions for determining one optimal path from two (or more) paths having the same cumulative sum of weights. For example, in one embodiment, a PageRank-type algorithm may determine the connectedness of nodes in each path, which may be reflected as a node weights, and determine the least-cost path that considers node weights. One embodiment may determine the optimal path as the one with the fewest number of nodes, and thus the fewest number of users. For example, for two optimal paths between end points having the same least-cost determination, select the one with the fewest number of nodes. The path with fewer nodes reflects fewer degrees of separation between users corresponding to the end nodes of the path.</p><p id="p-0084" num="0081">In some embodiments, path determiner <b>272</b> may determine, or path logic <b>235</b> may comprise logic for, determining an optimal path based at least on a context. For example, a context may comprise an at least two users corresponding to end nodes of the path, or an indication of one other person and the particular user for which the path is being determined. In some embodiments, a context may comprise a computing application context, such a participating in an online meeting or chat session, scheduling a meeting, or sending an email; a criterion or constraint, such as requesting that a particular user (or users) be included or excluded in a path, or including or excluding particular relationship type(s) in a path; or other contexts or contextual information, such as described herein, that may be used by path determiner <b>272</b> or specified in path logic <b>235</b> for determining path(s), optimal path(s), or aspects of a path, such as relationship data or other user-connection data. In some instances, which may be based on a context, multiple optimal paths may be determined such that each path is between a different pair of users. For example, where a context indicates a meeting of a plurality of users, it may be useful to determine the connections (e.g., the paths) between each of the users in the meeting. One example of this application is illustratively depicted in <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>, and further described in connection with <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>.</p><p id="p-0085" num="0082">Continuing with example system <b>200</b> and graph data processor <b>270</b>, path/relationship processor <b>274</b>, in general, is responsible for processing a graph, such as graph <b>230</b> or graph <b>300</b> (<figref idref="DRAWINGS">FIG. <b>3</b></figref>), or an aspect of a graph, such as an optimal path, to determine an insight, which may comprise an information item (or more generally connection data) regarding the graph or path. The output of path/relationship processor <b>274</b> may be provided to connection data assembler <b>276</b> where it may be assembled, formatted, or further processed for presentation to a user and/or consumption by a computing application or service. Embodiments of path/relationship processor <b>274</b> may process a graph or path according to a context. For example, a context indicating another user, or a first user's connection to that other user, may comprise processing a graph by path/relationship processor <b>274</b> to determine an optimal path between the first user and the other user, and determining information about the path, such as the chain or relationships of people in the path, or about a particular person in the path. For instance, if the optimal path between the first user and the other user includes only three nodes (corresponding to three people), then the first user and the other user both have a relationship with a common person, who corresponds to the in-between node. Hence the first user and the other user may both know (or more specifically, have a relationship, which is represented by the edges) with the user corresponding to the in-between node. Thus if the context indicates that you are the first user and Bjorn is the other user, then it may be determined that you and Bjorn both know Aleksander, who might be the user corresponding to the in-between node. Similarly, path/relationship processor <b>274</b> may determine that all paths between the first user and the other user include a particular node, regardless of the number of nodes in the paths. For instance, all paths between you and Aleksander go through Kateryna. Thus Kateryna represents a commonality in the connection between you and Aleksander, and an insight indicating this may be determined and provided by path/relationship processor <b>274</b>.</p><p id="p-0086" num="0083">Another example of an insight that may be determined by path/relationship processor <b>274</b> may comprise that a relationship exists between two users or further comprises information about the type of relationship(s) that exist between the two users. For instance, the evaluation of the user data for a pair of users may indicate one or multiple connections, indicating a connectedness between the users. Based at least in part on the number and/or types of these relationships, and/or a confidence of any inferred relationships between the two users, path/relationship processor <b>274</b> may infer a degree of closeness between the two users, which may be provided as an insight. Similarly, path/relationship processor <b>274</b> may determine or infer a particular type of the relationship based on the user data for the two users, such as a mentor-mentee relationship or a works with relationship, for instance.</p><p id="p-0087" num="0084">In other examples, where a context indicates a meeting with you (or a first user) and a group of attendees, or the context indicates any group of people, then path/relationship processor <b>274</b> may process a graph or optimal paths between pairs of the meeting attendees (or the group of people), which may be determined by path determiner <b>272</b>, to determine an insight such as, by way of example, a commonality among the multiple paths (e.g., all of the meeting attendees know Aleksander, who also may be an attendee, or who is not an attendee but is known by all of the attendees). In particular, it may be helpful to know who the well-connected attendees are, as those individuals may function as influencers among the group during the meeting. Similarly, an insight may comprise information about other people who are particularly well connected to the group of attendees, such as people that appear most frequently in the paths connecting pairs of users in the group. Another insight may comprise an information item about one or more relationships of the attendees, such as all of the attendees previously worked together or go to the same gym; or an insight that one or some of the attendees do not have a close connection (such as 3 people removed) to other attendees, and therefore it may be helpful to introduce that attendee (or those attendees) to the rest of the group.</p><p id="p-0088" num="0085">In yet another example where a context indicates a particular user is scheduling a meeting with a group of people, and not all of the people are available for a meeting time, path/relationship processor <b>274</b> may process a graph of the potential meeting attendees to determine an insight regarding the connectedness of meeting attendees with other meeting attendees. For example, path/relationship processor <b>274</b> may determine those potential meeting attendees who are the most connected with other meeting attendees, and thus who may act like social hubs among the pool of potential attendees. Using this information, a computerized meeting scheduler service may programmatically prioritize scheduling a meeting to include those individuals are the most connected (e.g., who are the social hubs), as those individuals may be more likely to relay important information to the attendees who could not attend the meeting. Similarly, if a meeting venue has a capacity, then in-person attendance may be prioritized for those individuals who are the most connected.</p><p id="p-0089" num="0086">In still another example where a context indicates a particular user is messaging a group of recipients, path/relationship processor <b>274</b> may process a graph of the group of recipients to determine an insight indicating one or more other people who are well connected to the group of recipients. Using this information, a communications computer application, such as an email application, might suggest that the particular user consider including as recipients those individuals (or individual) who are well-connected. Similarly, where path/relationship processor <b>274</b> determines that a group of people has strong or high connectedness to each other, based on a graph of the people, and an email that is being composed includes as recipients all but one of the group, then some embodiments may infer that the email author may intend to be emailing the group and inadvertently omitted one of the group members. Accordingly, the email computer application might suggest that the omitted group member be included as a recipient. Still further, some embodiments of path/relationship processor <b>274</b> may infer a group of connected people, such as people who work together or share other relationships, based on processing a graph. In some instances, such as where the connectedness of the inferred group is strong (e.g., such as where there is high confidence of inferred relationships in the group&#x2014;represented by edges in a graph of the group), an information item about the group may be surfaced to a user, or may be provided for consumption by a computing application or service. For example, an email or communications application might programmatically infer a distribution list or group, or may generate a tag or label for organizing email from the group, just as a user might manually configure for their email program.</p><p id="p-0090" num="0087">In some aspects, path/relationship processor <b>274</b> may determine insights about the connectedness between a first user and a group. For example, path/relationship processor <b>274</b>, which may operate in conjunction with path determiner <b>272</b>, may determine an optimal path connecting a first user to any one group member. In one instance, a context may indicate the first user is seeking to determine their relationship to a team. For instance, the first user may identify a particular team or group of users in Microsoft Teams or a collaboration computing application, and may query, explore, or hover their mouse over a graphical user interface indication of the team, or perform a similar operation in order to be provided information about their connectedness to the team. Similarly, path/relationship processor <b>274</b> may determine that the people on a team all report to a particular person, and an optimal path connecting the first person to that particular person may be determined (e.g., where the end points in the path correspond to the first person and the particular person who is reported to by each of the team members). Similarly still, path determiner <b>272</b> may determine a plurality of optimal paths, each connecting the first user to one member of the team (e.g., for a team of members A-n, compute: best-path(first user, A), best-path(first user, B), best-path(first user, C), best-path(first user, n)), and then path/relationship processor <b>274</b> may process the plurality of optimal paths to determine, for example, commonalities such as: frequently occurring individuals in the paths (e.g., all connections go through member A or member B, and thus A and B are commonalities of the team connections); frequently occurring relationship types; an intersection, such as, for all of the optimal paths, who is the person that appears most often, which may represent the most-connected individual to the team; or other insights and connection data about the connection of the first user to team members. Similarly still, an optimal path between the first user and the team member who has the most connections with other team members may be determined by path/relationship processor <b>274</b> and used as an insight.</p><p id="p-0091" num="0088">In still another example, a context indicating a meeting with a first user and a group of attendees may comprise processing a graph by path/relationship processor <b>274</b> to determine a subgraph indicating how the attendees are connected to each other. One example of this type of subgraph insight is illustratively depicted in <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>, which shows connection data comprising a subgraph depicting connections of the meeting attendees to each other, as further explained in connection with <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>.</p><p id="p-0092" num="0089">In some aspects, other various insights may be determined by path/relationship processor <b>274</b> regarding a group of people. For example, for a group of users {A, B, . . . m, n}, a plurality of optimal paths may be determined, by path determiner <b>272</b>, between pairs of the users, such as: {best-path(A,B), best-path(A,C), best-path(B,C), . . . best-path(m,n)}. From this plurality of optimal paths, path/relationship processor <b>274</b> may determine a union in order to identify influencers or &#x201c;social hubs&#x201d; of people. In particular, from among the union or combination of the optimal paths, the number of times a user occurs in the paths may be counted. Those users having the highest count represent most-connected people, who may be considered influencers or social hubs among the group. Additionally or alternatively, the most frequently occurring user(s), in the optimal paths, that is not in the group also may be determined by path/relationship processor <b>274</b>. These individuals (or this person) may be provided by path/relationship processor <b>274</b> as an insight, which may be used for a variety of purposes, such as, for example, to suggest inviting those individuals to the group or as an ice breaker (e.g., everyone in the group knows Bj&#xf8;rn).</p><p id="p-0093" num="0090">In some aspects, other various insights may be determined by path/relationship processor <b>274</b> regarding multiple groups of people. For example, path/relationship processor <b>274</b> may process aggregate paths to discover strong matchmakers. In particular, in the set of all optimal paths that connect a first group {A, B, C, . . . } and a second group {X, Y, Z, . . . }, path/relationship processor <b>274</b> may determine the intermediary nodes that occur the most often. These frequently occurring nodes correspond to people who are well connected to both groups. This connection data may be used, for example, to identify individuals who could facilitate introductions between the two groups. These and other similar operations will be apparent to one skilled in the art as operations that that may be performed by path/relationship processor <b>274</b> on a graph or aspect of a graph to determine an insight.</p><p id="p-0094" num="0091">Continuing with example system <b>200</b> and graph data processor <b>270</b>, connection data assembler <b>276</b>, in general, is responsible for assembling, formatting, or in some instances processing connection data for presentation to a user or for consumption by a computing application or service. Embodiments of connection data assembler <b>276</b> may receive connection data, such as an information item, from path/relationship processor <b>274</b>, and may provide an assembled or formatted connection data, or as aspect thereof, to presentation component <b>220</b>, to a computing application or service where it may be used to provide an enhanced computing experience for a user, or may store it in storage <b>225</b> for later use. For example, the connection data may be stored in connection data <b>246</b> of a user profile <b>240</b> associated with a particular user, in one embodiment. Some embodiments of connection data assembler <b>276</b> further utilize a context, which may be determined by user activity monitor <b>250</b> (or more specifically, by context extractor <b>254</b>) for the formatting and/or assembly of the connection data. Accordingly, in some embodiments, the output of connection data assembler <b>276</b> may comprise formatted or assembled connection data according to the particular context, such as described herein, and in some embodiments may further specify a presentation logic (e.g., present connection data about attendees of a meeting for 3 minutes at the beginning of a meeting or to a new user when the user enters the meeting).</p><p id="p-0095" num="0092">In some embodiments, connection data assembler <b>276</b> may specify a format for the presentation of the connection data (which may be provided as a presentation logic), such as an ice breaker, highlight, or information item on an LPC (see, e.g., <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>), a popup window when user hovers their mouse over an indication of another user (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>), or a visual contextualization showing a subgraph of meeting attendee relationships (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>), for example. In some embodiments, particular connection data may be surfaced or provided as a highlight or an ice breaker (e.g., at the beginning or a meeting, the attendees may be presented with the ice breaker &#x201c;you all know Bjorn&#x201d;). Similarly, a particular attendee of the meeting, such as the meeting organizer may be provided with an insight about which of the meeting attendees are well-connected with the other attendees. This insight may help the meeting organizer to identify those attendees who are likely influencers, and thus the meeting organizer may want to try to win over those individuals during the meeting. In one embodiments, a list of the most well-connected meeting attendees may be surfaced (or all of the meeting attendees may be ranked based on their connectedness (e.g., to each other and/or to others), thereby identifying the influencers to a particular meeting attendee, such as the meeting organizer.</p><p id="p-0096" num="0093">Example system <b>200</b> also includes storage <b>225</b>. Storage <b>225</b> generally stores information including data, computer instructions (e.g., software program instructions, routines, or services), logic, profiles, and/or models used in embodiments described herein. In an embodiment, storage <b>225</b> comprises a data store (or computer data memory). Further, although depicted as a single data store component, storage <b>225</b> may be embodied as one or more data stores or may be in the cloud.</p><p id="p-0097" num="0094">As shown in example system <b>200</b>, storage <b>225</b> includes graph-construction logic <b>233</b>, path logic <b>235</b>, one or more graphs <b>230</b> (comprising a graph data structure, such as graph <b>300</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>), as described previously, and user profile <b>240</b>. One example embodiment of a user profile <b>240</b> is illustratively provided in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Example user profile <b>240</b> includes information about user accounts and devices <b>242</b>, user data <b>244</b>, connection data <b>246</b>, and user preferences <b>248</b>. The information stored in user profile <b>240</b> may be available to other components of example system <b>200</b>, in some embodiments.</p><p id="p-0098" num="0095">User accounts and devices <b>242</b> generally includes information about user devices accessed, used, or otherwise associated with a user, and/or information related to user accounts associated with the user, which may be used for accessing or collecting user data for the user; for example, online or cloud-based accounts (e.g., email, social media) such as a Microsoft&#xae; MSA account, Microsoft 365 account, other accounts such as entertainment or gaming-related accounts (e.g., Xbox&#xae;, Netflix&#xae;, online game subscription accounts, or similar account information), people data relating to such accounts such as user emails, texts, instant messages, calls, other communications, and other content; social network accounts and data, such as news feeds; online activity; and calendars, appointments, application data, other user accounts, or the like. Some embodiments of user accounts and devices <b>242</b> may store information across one or more databases, knowledge graphs, or data structures. As described previously, the information stored in user accounts and devices <b>242</b> may be determined from user-data collection component <b>210</b> or user activity monitor <b>250</b> (including one or more of its subcomponents).</p><p id="p-0099" num="0096">As described previously, user data <b>244</b> generally includes information about a user, who may be associated with the user profile <b>240</b>. User data <b>244</b> may include user data received from user-data collection component <b>210</b> or user data determined by user activity monitor <b>250</b>, which may include user-related activity data, a context or contextual information, and user data features or structured user data, in some embodiments. Connection data <b>246</b> may include the connection data, such as insights or information items determined by graph data processor <b>270</b> with respect to a user associated with user profile <b>240</b>.</p><p id="p-0100" num="0097">User preferences <b>248</b> generally include user settings or preferences associated with embodiments described herein. By way of example and not limitation, such settings may include user configurations or preferences about the various thresholds described herein, explicitly defined relationship types or excluded relationship types, weight assignments for relationship types and/or nodes, inferred versus explicit relationships, and/or confidence values associated with an inferred relationship, other preferences or configurations regarding the presentation of connection data to the user or consumption of connection data by computing applications and services used by the user, or other preferences or configuration settings for any of the embodiments described herein.</p><p id="p-0101" num="0098">Example system <b>200</b> may also include a presentation component <b>220</b> that is generally responsible for presenting aspects of the connection data, such as information items or insights, that may be determined by graph data processor <b>270</b>, and may work in conjunction with connection data assembler <b>276</b>. The content may be presented via one or more presentation components <b>716</b>, described in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Presentation component <b>220</b> may comprise one or more applications or services on a user device, across multiple user devices, or in the cloud. For example, in one embodiment, presentation component <b>220</b> manages the presentation of connection data information items to a user across multiple user devices associated with that user, or may use presentation logic determined by connection data assembler <b>276</b>. For example, presentation component <b>220</b> may determine on which user device(s) content is presented and how or how much content is presented (for example, a relationship chain may be truncated on a mobile device or a device with a smaller screen size, but presented in its entirety on a larger computer monitor), and presents connection data determined by graph data processor <b>270</b> or other components of system <b>200</b>. In some embodiments, presentation component <b>220</b> can present information items, such as icebreakers or highlights proactively and dynamically, such as when a new user first speaks, or enters an on-line meeting, or joins an on-line chat session. For instance, presentation component <b>220</b> may determine when, whether, and how to determine an icebreaker people highlight (or other information item), based on a context and/or presentation logic of presentation engine <b>280</b>, which may reflect a context. Similarly, in other embodiments, presentation component <b>220</b> includes functionality to enable users to see connection data associated with a virtually assembled group of people (i.e., a user selects or shows an interest in another person or people and can view aspects of connection data associated with that person or people).</p><p id="p-0102" num="0099">Presentation component <b>220</b> may present this information, including any substitutions, reorganizations, or highlights as directed by graph data processor <b>270</b>, or more specifically by connection data assembler <b>276</b>. In some embodiments, this determination might be made, for example, based upon the device's screen size (with potentially more or differently formatted connection data presentable on a laptop computer as compared to a mobile phone) or the surface on which the connection data will be presented (for example a calendaring application, communication platform, or other application or program). In some embodiments, presentation component <b>220</b> can present, in a graphical user interface (&#x201c;GUI&#x201d;), in a number of different formats and applications, such as those shown in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref> (discussed further below). Presentation component <b>220</b> may also generate user interface features associated with or used to facilitate presenting connection data (such as described in connection with <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref>). Such features can include interface elements (such as icons or indicators, graphics buttons, sliders, menus, audio prompts, alerts, alarms, vibrations, pop-up windows, notification-bar or status-bar items, in-app notifications, or other similar features for interfacing with a user), queries, and prompts.</p><p id="p-0103" num="0100">With reference now to <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref>, a number of exemplary schematic screenshots from a personal computing device are illustratively depicted showing aspects of example graphical user interfaces that include presentation of various connection data, as described herein. The connection data shown in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref> may be determined from user data for a plurality of users, such as described in connection with user-data collection component <b>210</b> and user data monitor <b>250</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The example user relationships represented in the connection data, as well as the example subgraph and relationship chains may be determined as described in connection with graph generator <b>260</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> and graph data processor <b>270</b>. Further, the example relationships represented in the connection data may comprise explicit or inferred relationships, as further described herein.</p><p id="p-0104" num="0101">With reference to <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, an exemplary schematic screen display <b>400</b> is shown, which represents a computing device, such as <b>102</b>(<i>n</i>) discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Screen display <b>400</b> is shown having a schematic surface <b>402</b>, which could be any of a number of different computer programs, applications or other display on the computing device screen display <b>400</b>. A smaller display space <b>404</b> is shown, which could be, for example, a people card or other type of informational display. Within display space <b>404</b>, a number of information items are shown including item <b>405</b>, and connection data item <b>408</b>. In this example, item <b>405</b> indicates a particular person of interest, here Jane Smith, for which the user of a computing device having screen display <b>400</b> is being presented information. For example, the user may hover their mouse over an indicator for the person of interest, Jane Smith, and be presented with smaller display space <b>404</b>. In some embodiments, item <b>405</b> may further indicate information about a person of interest such as the person's role of job title, location, contact information or contact functionality, presence, a people highlight, or other information item(s). Connection data item <b>408</b> may include an information item or insight about the user's connection to the person of interest. For instance, in the example of smaller display space <b>404</b>, connection data item <b>408</b> comprises a relationship chain showing a chain of relationships to people connecting the user to the person of interest (e.g., Jane Smith). In particular, connection data item <b>408</b> shows that the user has a connection with Kateryna who has a connection with at least another person not shown, as indicated by dotted connection line <b>409</b>, who has a connection with Nir, who has a connection with Jane (the person of interest). In some embodiments, the user may click or select the dotted line to see the in-between connected users that are not shown in connection data item <b>408</b>. For example, in one embodiment, clicking or hovering over connection data item <b>408</b> may cause a more detailed relationship chain to be presented, such as depicted in screen display <b>420</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, which may indicate details about each person in the connected chain of people from the user to the person of interest and/or information about the type of connection (e.g., a relationship type, such as works together or goes to the same gym).</p><p id="p-0105" num="0102">With reference to <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, another exemplary screen display <b>420</b> is shown, which may be presented via a computing device, such as <b>102</b>(<i>n</i>) discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Example screen display <b>420</b> depicts a GUI showing aspects of connection data <b>421</b> between a first user and a person of interest <b>430</b>; here for example, the person of interest <b>430</b> is Kristen N. Screen display <b>420</b> represents one example of a visualization that contextualizes the connections or relationships between the first person and the person of interest <b>430</b>. In some embodiments, example screen display <b>420</b> may be presented to the first user based on a context such as: the first user hovering their mouse over an GUI element indicating the person of interest; selecting another aspect of a connection data corresponding to the person of interest <b>430</b>, such as graph, subgraph, or path, or connection data item <b>408</b>, or a similar condensed or truncated chain of relationships indicating the first user's connection to other people; querying their connection to the person of interest <b>430</b>; or other context regarding a connection between the first user and person of interest <b>430</b>.</p><p id="p-0106" num="0103">Here, connection data <b>421</b> depicts a chain of relationships between a first user, indicated by item <b>422</b>, and the person of interest, indicated by item <b>431</b> in the connection data <b>421</b> and corresponding to the person of interest <b>430</b> depicted at the top of exemplary screen display <b>420</b>. In particular, connection data <b>421</b> shows that the first user at item <b>422</b> is connected with another user (identified as Aleksander &#xd8;.) at item <b>424</b> and shares a connection <b>423</b> indicating a &#x201c;works with&#x201d; relationship with the user. Connection data <b>421</b> further shows that Aleksander (the user at item <b>424</b>) has a connection <b>425</b> with the user at item <b>426</b> (identified as Ute S.) and the relationship represented in the connection <b>425</b> is &#x201c;is manager of.&#x201d; Further still, connection data <b>421</b> shows that Ute (the user at item <b>426</b>) has a connection <b>427</b> with the user at item <b>428</b> (identified as Nir N.) and the relationship represented in the connection <b>427</b> is &#x201c;reports to.&#x201d; Finally, connection data <b>421</b> shows that Nir (the user at item <b>428</b>) has a connection <b>429</b> with the person of interest at item <b>431</b>, and the relationship represented in the connection <b>429</b> is that both users, Nir and the person of interest (Kristen N.), go to the same gym and are members of the trekking association, DNT. Connection <b>429</b> may represent one or two inferred relationships between Nir (the user at item <b>428</b>) and the person of interest, which may be determined by user relationship determiner <b>262</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). In some embodiments, connection data <b>421</b> represents an optimal path, such as a least-cost path, between the first user (indicated at item <b>422</b>) and the person of interest (indicated at item <b>431</b>), which may be determined as described in connection with graph generator <b>260</b> and graph data processor <b>270</b>.</p><p id="p-0107" num="0104">With reference to <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>, another exemplary screen display <b>440</b> is shown, which may be presented via a computing device, such as <b>102</b>(<i>n</i>) discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Example screen display <b>440</b> depicts a GUI associated with a communications computing application, such as Microsoft Teams&#xae;. In particular, screen display <b>440</b> depicts a smaller display space <b>450</b> showing connection data <b>451</b>. Smaller display space <b>450</b> and connection data <b>451</b> represent an example of a visualization that contextualizes the connections or relationships between a first user, indicated by item <b>448</b>, and a person of interest, indicated by GUI element <b>441</b> depicting a profile picture of the person of interest. In the example of <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>, smaller display space <b>450</b> may be presented to the first user based on a context such as user-related activity indicating the first user has hovered mouse pointer <b>452</b> over the GUI element <b>441</b> for the person of interest. Accordingly, in this example, smaller display space <b>450</b> may be presented in response to the first user interacting with a GUI indication <b>441</b> of another user, namely the person of interest identified in this example as Kateryna S.</p><p id="p-0108" num="0105">Connection data <b>451</b>, like connection data <b>421</b> in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, depicts a chain of relationships between the first user, indicated by item <b>448</b>, and a person of interest, Kateryna S., indicated by item <b>442</b>, which corresponds to GUI element <b>441</b> at the top of smaller display space <b>450</b>. In particular, connection data <b>451</b> shows that the first user at item <b>448</b> is connected with another user (identified as Jane S.) at item <b>446</b> and shares a connection <b>447</b> indicating a &#x201c;reports to&#x201d; relationship. Connection data <b>421</b> further shows that Jane S. (the user at item <b>446</b>) has a connection <b>445</b> with the user at item <b>444</b> (identified as Belle E.) and the relationship represented in the connection <b>445</b> is &#x201c;worked with,&#x201d; indicating that Bella E. and Jane S. previously worked together. Further still, connection data <b>421</b> shows that Bella E. (the user at item <b>444</b>) has a connection <b>443</b> with Kateryna S, the person of interest at item <b>442</b>, and the relationship represented in the connection <b>443</b> indicates that Bella E. and Kateryna S. currently work with each other. In some embodiments, connection data <b>451</b> represents an optimal path, such as a least-cost path, between the first user (indicated at item <b>448</b>) and the person of interest (indicated at item <b>442</b>), which may be determined as described in connection with graph generator <b>260</b> and graph data processor <b>270</b>.</p><p id="p-0109" num="0106">With reference to <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>, another exemplary screen display <b>460</b> is shown, which may be presented via a computing device, such as <b>102</b>(<i>n</i>) discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Example screen display <b>460</b> also depicts a GUI associated with a communications computing application <b>461</b>, such as Microsoft Teams&#xae;. In particular, screen display <b>460</b> depicts a smaller display space <b>464</b> showing connection data <b>465</b>. Smaller display space <b>464</b> and connection data <b>465</b> represent another example of a visualization that contextualizes the connections or relationships between a group of people. In this example, the group of people comprise a group of meeting attendees, indicated at item <b>462</b> of screen display <b>460</b>. Item <b>462</b> indicates <b>5</b> meeting attendees are attending (or have attended or will be attending) a meeting via the communications computing application <b>461</b>, including a first user (indicated at item <b>463</b> as &#x201c;you&#x201d; or the user who is using this instance of communications computing application <b>461</b>).</p><p id="p-0110" num="0107">In this example, smaller display space <b>464</b> may be presented to the first user based on a context such as user-related activity indicating the first user has hovered mouse pointer <b>472</b> over the GUI element <b>462</b> of the meeting attendees. Accordingly, smaller display space <b>464</b> may be presented in response to the first user interacting with a GUI indication <b>462</b> of a group of other users, namely the group of meeting attendees identified in GUI element <b>462</b>. In this example, connection data <b>465</b> comprises a subgraph showing connections between the meeting attendees. Here it can be seen how the meeting attendees, including the first user, are connected to each other. Thus, connection data <b>465</b> provides a visual context of the meeting attendee relationships. Further, according to connection data <b>465</b> the meeting attendees share a connection between two other users, Jane at node <b>467</b> and Bob at node <b>469</b>, who are not meeting attendees. In some embodiments, the particular connection data <b>465</b> that is presented may change dynamically as attendees change. For example, if new users join or drop off the meeting, the subgraph depicted in connection data <b>465</b> maybe updated to reflect a connection of the current meeting attendees. Alternatively or in addition, connection data <b>465</b> may depict a subgraph of all of the meeting invitees, including users who may be attending the meeting. In some embodiments, smaller display space <b>464</b> showing connection data <b>465</b> may be presented automatically at the beginning of a meeting for a duration of time, such as 30 seconds.</p><p id="p-0111" num="0108">Accordingly, among other insights provided by connection data <b>465</b> is that meeting attendees Ute and Kateryna have a direct connection or relationship, and thus may know each other, but they do not have a direct connection to (and thus may not know) the other meeting attendees. Similarly, Aleksander has a direct connection or relationship with the first user (i.e., &#x201c;you&#x201d;) and with Nir, which may indicate that Aleksander knows you and Nir, but neither the first user, Aleksander, nor Nir have a direct connection with Ute and Kateryna. Additionally, in this example, Bob and Jane could be presented, via another smaller display space or information item (not shown) to the attendees as icebreakers, (e.g., &#x201c;everyone in the meeting knows Bob or Jane). In some embodiments including the example depicted in <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>, connection data <b>465</b> showing a subgraph may include functionality indicated by item <b>466</b> to enable a user to explore the relationship details in the subgraph such as by selecting an edge between two of the nodes corresponding to people in the subgraph.</p><p id="p-0112" num="0109">Turning now to <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref>, aspects of an example process flows <b>500</b> and <b>600</b> are illustratively depicted for some embodiments of the disclosure. Process flows <b>500</b> and <b>600</b> each may comprise a method (sometimes referred to herein as method <b>500</b> and method <b>600</b>) that may be carried out to implement various example embodiments described herein. For instance, process flow <b>500</b> or process flow <b>600</b> may be performed to programmatically determine user-connection data by processing a graph data structure, that may be used to provide any of the improved electronic communications technology or enhanced user computing experiences described herein.</p><p id="p-0113" num="0110">Each block or step of process flow <b>500</b>, process flow <b>600</b>, and other methods described herein comprises a computing process that may be performed using any combination of hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory, such as memory <b>712</b> described in <figref idref="DRAWINGS">FIG. <b>7</b></figref> and/or storage <b>225</b> described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The methods may also be embodied as computer-usable instructions stored on computer storage media. The methods may be provided by a stand-alone application, a service or hosted service (stand-alone or in combination with another hosted service), or a plug-in to another product, to name a few. The blocks of process flow <b>500</b> and <b>600</b> that correspond to actions (or steps) to be performed (as opposed to information to be acted on) may be carried out by one or more computer applications or services, in some embodiments, that may operate on one or more user devices (such as user device <b>102</b><i>a</i>), servers (such as server <b>106</b>), may be distributed across multiple user devices and/or servers, or by a distributed computing platform, and/or may be implemented in the cloud. In some embodiments, the functions performed by the blocks or steps of process flows <b>500</b> and <b>600</b> are carried out by components of system <b>200</b>, described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0114" num="0111">With reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, aspects of example process flow <b>500</b>, for determining user-connection data and in some embodiments, processing such data based on a context, are illustratively provided. In particular, example process flow <b>500</b> may be performed to generate a graph data structure comprising user-connection data for a plurality of users, and further to process the graph data structure to determine an information item, such as an insight about the user-connection data, as described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The information item may be determined based on one or more optimal paths determined by processing the graph data structure, and may further be determined based on a context, in some embodiments, such as described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0115" num="0112">At a block <b>510</b>, method <b>500</b> includes determining relationships between pairs of users, of a plurality of users, by evaluating user data for each pair of users. In particular, the user data may characterize each user, and thus by evaluating the user data for a pair of users, embodiments of block <b>510</b> may determine a relationship between the users, from the evaluation, such as a connection based on the user data based. For instance, both users work in the same location, go to the same gym, or a first user of the pair reports to the second user, and the second user is a manager of the first user. In some embodiments of block <b>510</b>, the evaluation comprises performing a comparison of the user data for the pair. The comparison may comprise a similarity comparison, such as a distance measurement or a comparison or user data features or structured user data, such as described in connection with user relationship determiner <b>262</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0116" num="0113">Some embodiments of block <b>510</b> may further comprise receiving or determining user data for at least one of the users. For example, in some embodiments, user data for a particular user may be determined from an embodiment of user-data collection component <b>210</b> or a user activity monitor <b>250</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>), which may comprise a sensor configured to provide user data about the user. In some embodiments, the user data may comprise user-related activity data. In some embodiments, the user data may be converted into structured data or user data features may be extracted so that the structured user data or user data features may be used in the evaluation of block <b>510</b> to determine a relationship between a pair of users.</p><p id="p-0117" num="0114">In some instances, block <b>510</b> may determine that a relationship does not exist between a pair of users, and in other instances, block <b>510</b> may determine that multiple relationships exist between a pair of users. For example, a comparison of the user data for a particular pair of users may indicate multiple connections. Embodiments of block <b>510</b> determine a set of user-pair relationships for each pair of users in the plurality for which a relationship is determined. As described herein, a user-pair relationship may identify two users and information indicating at least one relationship between the two users (e.g., user A shares at least one relationship with user B and the relationship(s) are: works with; or user C shares a relationship with user D, and the relationship(s) are: works with, reports to, and goes to the same gym. In some instances, an embodiment of block <b>510</b> may infer a relationship between a pair of users, as described in connection with user relationship determiner <b>262</b>.</p><p id="p-0118" num="0115">Some embodiments of block <b>510</b> utilize graph construction logic, such as graph construction logic <b>233</b> described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, to determine similarity or a relation in the user data for a pair of users indicating a connection between the pair of users. Embodiments of block <b>510</b> may be carried out using graph generator <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) and/or user data monitor <b>250</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) in some implementations. Additional details of embodiments of block <b>510</b>, or for carrying out operations of block <b>510</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph generator <b>260</b>.</p><p id="p-0119" num="0116">At block <b>520</b>, method <b>500</b> includes generating a graph data structure. The graph data structure may be generated based on user-connection data for a plurality of users, such as the user-pair relationships determined in block <b>510</b>. In particular, embodiments of block <b>510</b> generate a graph comprising a plurality of nodes and edges connecting each node to another node. Each node corresponds to a user in the user-pair relationships, and each edge corresponding to a relationship in the particular user-pair relationship having the pair of users corresponding to the nodes that are connected by that edge. Some embodiments of block <b>520</b> further determine an edge weight for the edges of the graph, so that the generated graph includes weighted edges. Some embodiments of block <b>520</b> also may determine node weights, such as described herein. In some embodiments, the edge weight may be determined based on a type of relationship that the edge corresponds to; for instance, as described herein some relationship types, such as a &#x201c;works with&#x201d; relationship may have a different weight than other types of relationships, such as reports to. Similarly explicit relationships and inferred relationships may have different weights, such as described herein. In some embodiments, a graph generated at block <b>520</b> may include edges corresponding to different types of relationships, and may further include pairs of nodes having multiple edges connecting the pair. Some embodiments of block <b>520</b> utilize an embodiment of graph construction logic <b>233</b> described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, to generate a graph. Block <b>520</b> may be carried out using an embodiment of graph generator <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>510</b>, or for carrying out operations of block <b>510</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph generator <b>260</b>.</p><p id="p-0120" num="0117">At a block <b>530</b>, a first path is determined, based on the graph determined in block <b>520</b>. The first path connects a first end node, corresponding to a first user, and a second end node, corresponding to a second user. Thus the path comprises at least the two end nodes and the edges connecting the nodes. In some embodiments of block <b>530</b> the path comprises an optimal path between the first and second end nodes, such as a least-cost path, which may be determined based on the edge weights (or further determined based on node weights, for graphs that have node weighting.) Further, some embodiments of block <b>530</b> may determine a plurality of optimal paths, with each path connecting two end nodes.</p><p id="p-0121" num="0118">Some embodiments of block <b>530</b> may determine a path (or optimal path) according to a context, such as described in connection with path determiner <b>272</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For example, one embodiment of a context may comprise a constraint or criterion, such as a requirement to exclude or include a particular user (corresponding to a particular node) in the path determined at block <b>530</b>. Another example context may indicate that a plurality of optimal paths should be determined at block <b>530</b>. For example, an application context or a context related to a user query may indicate determining an optimal path between pairs of users in a group of users, such as attendees of a meeting.</p><p id="p-0122" num="0119">Embodiments of block <b>530</b> may utilize path logic <b>235</b> to determine the one or more paths, including one or more optimal paths. Block <b>530</b> may be performed by an embodiment of path determiner <b>272</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>530</b>, or for carrying out operations of block <b>530</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph data processor <b>270</b> and path determiner <b>272</b>.</p><p id="p-0123" num="0120">At a block <b>540</b>, an information item may be determined based at least on the first path. For example and as further described herein, an information item may comprise user-connection data regarding one or more optimal paths, a graph or subgraph, or related information such as information about users, user data, or relationships, which may be determined based on user-connection data. In some embodiments, an information item may comprise an insight or may be formatted as or assembled into an insight, such as by connection data assembler <b>276</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). In embodiments of method <b>500</b> where multiple paths (or multiple optimal paths) are determined, block <b>540</b> may comprise determining an information item based on the plurality of paths, or based on at least a portion of the plurality of paths. For example, a plurality of optimal paths connecting pairs of users in a group may be processed to determine an information item indicating the node (or the corresponding user) occurring most often in the plurality of optimal paths. Based on this information item, an insight may be provided that the user corresponding to the node is a well-connected user in the group, and thus may be regarded as influential in the group. Block <b>540</b> may be carried out using an embodiment of path/relationship processor <b>274</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>540</b>, or for carrying out operations of block <b>540</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph data processor <b>270</b> and path/relationship processor <b>274</b>.</p><p id="p-0124" num="0121">At a block <b>550</b>, method <b>500</b> presents an indication of the information item determined in block <b>540</b>. For example and as further described herein, embodiments of block <b>550</b> may format or assemble the information item for presentation. Some embodiments of block <b>550</b> may determine the assembly or format based in part on a context, and some embodiments may comprise determining a presentation logic or determining a format for presentation of the indication of the information item. Further, some embodiments of block <b>550</b> include generating a GUI element comprising an indication of the information item. The indication of an information item presented at block <b>550</b> may comprise, by way of example and not limitation, an ice breaker, highlight, or information item on an LPC (see, e.g., <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>), a popup window when user hovers their mouse over an indication of another user (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>), or a visual contextualization showing a subgraph of meeting attendee relationships (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>), for example. In one embodiment the indication of the information item comprises a relationship chain (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>) including a connection for each user to another user in an optimal path determined at block <b>530</b>. In some embodiments, the relationship chain may further include a relationship indication for each connection, such as an indication of the type of the relationship, or a strength of the relationship, in some embodiments where the relationship is inferred. Some embodiments of block <b>550</b> may be carried out by path/relationship processor <b>274</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>550</b>, or for carrying out operations of block <b>550</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph data processor <b>270</b> and connection data assembler <b>276</b>. Several example aspects of block <b>550</b> are illustratively depicted in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref> and described further in connection with these drawings.</p><p id="p-0125" num="0122">With reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, aspects of example process flow <b>600</b>, for determining user-connection data and in some embodiments, processing such data based on a context, are illustratively provided. In particular an at a high level, example process flow <b>600</b> may be performed to process a graph data structure representing user-connection data for a plurality of users, to determine an information item, such as an insight about the user-connection data, as described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The information item may be determined based on one or more optimal paths determined by processing the graph data structure, and may further be determined based on a context, in some embodiments, such as described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0126" num="0123">Accordingly, at block <b>610</b>, the method <b>600</b> includes processing a graph to determine one or more optimal paths. The graph may comprise a graph data structure, such as such as described in connection with graph generator <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) or graph <b>300</b> (<figref idref="DRAWINGS">FIG. <b>3</b></figref>). The graph may comprise a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user, each edge corresponding to a relationship between the users corresponding to the nodes that are connected by the edge. Further the edges of the graph may be weighted, and determining an optimal path may comprise determining a least-cost path according to the weights. For example, in some instances, the edges of the graph may be weighted based on a relationship type for the relationship corresponded to by the edge, and/or based on a confidence associated with an inferred relationship corresponding to an edge. Some embodiments of the processing at block <b>610</b> may comprise processing a graph that has at least one edge corresponding to an inferred relationship, at least two edges correspond to different types or relationships, and/or at least one pair of nodes is connected by at least two edges.</p><p id="p-0127" num="0124">Embodiments of block <b>610</b> may utilize path logic <b>235</b> to determine the optimal paths. Some embodiments of block <b>610</b> may be implemented as an embodiment of block <b>530</b> (process flow <b>500</b>). Further, block <b>610</b> may be performed by an embodiment of path determiner <b>272</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>610</b>, or for carrying out operations of block <b>610</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph data processor <b>270</b> and path determiner <b>272</b>.</p><p id="p-0128" num="0125">At a block <b>620</b>, method <b>600</b> determines an information item based on one or more of the optimal paths determined at block <b>610</b>, and in some embodiments based on a context. As further described herein, an information item may comprise user-connection data regarding one or more optimal paths, a graph or subgraph, or related information, such as information about users, user data, or relationships, which may be determined based on user-connection data, may be in the form of an insight or used to derive an insight. In some embodiments, an information item may be formatted as or assembled into an insight, such as by connection data assembler <b>276</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). In embodiments of method <b>600</b> where multiple paths (or multiple optimal paths) are determined, block <b>620</b> may comprise determining an information item based on the plurality of paths, or based on at least a portion of the plurality of paths.</p><p id="p-0129" num="0126">Some embodiments of block <b>620</b> may determine an information item based on a context, such as described further in connection with path/relationship processor <b>274</b>. For instance, the context may comprise information regarding a particular user to be included or excluded in at least one optimal path, a computing application context, information about at least one user of interest, a relationship query, which may be performed by a user or computing service, or other examples as described herein. In some embodiments, one or more of the optimal paths that are determined at block <b>610</b> may be determined based on the information item determined at block <b>620</b> and/or the context. For instance, determining an information item based on a context, at block <b>620</b>, may comprise determining another optimal path, or using information from one or more optional paths to determine an additional optimal path. For example, a context may indicate a group of users, and a set of optimal paths may be determined between each pair of users in the group. From this set of optimal paths, a node that occurs most often (or least often) may be determined. Thus, the user corresponding to this node is represents a user who is well-connected to this group, and perhaps influential (or represents a user who is not-well connected for a node that occurs least often). As such, information about the well-connected or influential user may comprise an insight. Further, an additional optimal path may be determined between end nodes corresponding to a first user and the well-connected or influential users. In this way, the first user may derive an insight regarding their connection or relatedness to the well-connected user.</p><p id="p-0130" num="0127">Some embodiments of block <b>620</b> may be implemented as an embodiment of block <b>540</b> (process flow <b>500</b>). Further, block <b>620</b> may be carried out using an embodiment of path/relationship processor <b>274</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>620</b>, or for carrying out operations of block <b>620</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular graph data processor <b>270</b> and path/relationship processor <b>274</b>.</p><p id="p-0131" num="0128">At a block <b>630</b>, method <b>600</b> generates a GUI element comprising an indication of the information item determined at block <b>620</b>. In particular a GUI element comprising an indication of the information item may be determined based on processing, formatting or assembling the information item. For example and as further described herein, and in particular in connection with connection data assembler <b>276</b> and presentation component <b>220</b>, an information item may be formatted, assembled, or otherwise processed for presentation or for consumption by a computing application or service.</p><p id="p-0132" num="0129">Accordingly, by way of example and not limitation, a GUI element generated at block <b>630</b> may comprise a visual indication of an ice breaker, highlight, or information item that is presented as a GUI element on an LPC (see, e.g., <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>), a window or surface element of a GUI that is presented when user hovers their mouse over an indication of another user (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>C</figref>), or a visual contextualization showing a subgraph of meeting attendee relationships (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>D</figref>), for example. In one embodiment, a GUI element may comprise a visual indication of a relationship chain (see e.g., <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>), and may further include GUI elements including a connection for each user to another user in the chain and/or an indication of the relationship for each connection, such as an indication of the type of the relationship, or a strength of the relationship, in some embodiments where the relationship is inferred.</p><p id="p-0133" num="0130">Another example of a GUI element generated at block <b>630</b> comprises a visual indication regarding a most-connected user. For where a context indicates a group of users and a plurality of optimal paths are determined among pairs of users in the group, the most connected user in the group may be determined by determining a node that occurs most frequently in the plurality of optimal paths. In some embodiments a GUI element comprising an indication of regarding the most-connected user in a group may be presented to a particular user, such as where the group of users are meeting attendees and the meeting organizer is presented with a GUI element indicating who, among the meeting attendees, is the most connected, and thus may be regarded as being influential. As another example, a similar GUI element may comprise an aspect of a relationship chain between the meeting organizer and the most connected user, so that the meeting organizer is provided with a contextual visualization regarding their connectedness to an influential member of the group.</p><p id="p-0134" num="0131">Still another example of a GUI element generated at block <b>630</b> comprises a recommendation regarding meeting scheduling or a suggested recipient of an electronic communication, such as an email or group chat. For example, suppose a context indicates that some users in a group of users are invitees to a meeting and some users are not. Then from a plurality of optimal paths between pairs of users in the group, an information item may be determined (e.g., at block <b>620</b>) regarding who is the most connected user among the invitees and/or who is the most connected user among users who are not invitees. This information item may be processed for consumption by a communications computing application or service, such as an email or meeting scheduling application. Accordingly, one example of a GUI element generated a block <b>630</b> may comprise a recommendation presented via a meeting scheduling application, regarding the most connected invitee or the most connected user who is not an invitee. For example, the recommendation may comprise a suggestion to that the meeting organizer to consider inviting the most connected user who is not an invitee. Or the GUI element may comprise a recommended meeting time that is determined, at least in part, based on the availability of the most connected invitee, or based on prioritizing the availability of the most connected invitee over other invitees who may be not as connected. Another example of a GUI element may comprise a recommendation presented via a communications application comprising a suggestion to the email or message author regarding recipients of a message. For example, a recommendation may be provided suggesting the message author include the most connected user who is an invitee and/or the most connected user who is not an invitee, as a recipient.</p><p id="p-0135" num="0132">Several example aspects of GUI elements that may be generated at block <b>630</b> are illustratively depicted in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>D</figref> and described further in connection with these drawings. Some embodiments of block <b>630</b> may be implemented as an embodiment of block <b>550</b> (process flow <b>500</b>). Further, block <b>630</b> may be carried out using an embodiment of connection data assembler <b>276</b> and/or presentation component <b>220</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>). Additional details of embodiments of block <b>630</b>, or for carrying out operations of block <b>630</b>, are described in connection to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and in particular connection data assembler <b>276</b> and presentation component <b>220</b>.</p><p id="p-0136" num="0133">Accordingly, we have described various aspects of technology directed to systems and methods for intelligently processing and presenting user-connection data on a computing device. It is understood that various features, sub-combinations, and modifications of the embodiments described herein are of utility and may be employed in other embodiments without reference to other features or sub-combinations. Moreover, the order and sequences of steps shown in the example methods <b>500</b> and <b>600</b> are not meant to limit the scope of the present disclosure in any way, and in fact, the steps may occur in a variety of different sequences within embodiments hereof. Such variations and combinations thereof are also contemplated to be within the scope of embodiments of this disclosure.</p><heading id="h-0007" level="1">Other Embodiments</heading><p id="p-0137" num="0134">In some embodiments, a computerized system, such as the computerized system described in any of the embodiments above, comprises at least one processor, computer memory having computer-readable instructions embodied thereon that, when executed by the at least one processor, cause the one or more processors to perform operations. The operations comprise, for the plurality of users, each user having corresponding user data characterizing the user, programmatically evaluating the user data for each pair of users in the plurality to determine whether at least one relationship exists between the pair of users, thereby forming a set of user-pair relationships for the pairs of users determined to have at least one relationship existing between the pair. The operations may include, based on the set of user-pair relationships, generating a graph data structure comprising a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user in the set of user-pair relationships, and each edge corresponding to a relationship in the user-pair relationship having the pair of users corresponding to the nodes that are connected by the edge. The operations may further include, based the graph data structure, determining a first path connecting a first end node and a second end node, the first end node corresponding to a first user and the second end node corresponding to a second user. The operations may further include determining an information item based at least on the first path. The operations may further include causing to present an indication of the information item. In this way, these embodiments enable an improved user experience across a number of computer devices, applications and platforms. Also in this way, these and other embodiments, as described herein, enable a very large scale of operations created by software-based services that cannot be managed by humans to operate in an efficient manner while determining, presenting, and processing user-connection data and using such data for the provisioning of new functionality for computing applications. Further still, these and other embodiments, as described herein, cause certain, user-connection data shared among two or more users to be programmatically surfaced and presented without requiring computer tools and resources for a user to manually perform operations to produce this outcome. Still further, in this way, these and other embodiments, as described herein, reduce or eliminate a need for certain databases, data storage, and computer controls for enabling manually performed steps by an administrator, to search, identify and assess, and configure (e.g., by hard-coding) specific, static relationship information to be presented to users, thereby reducing the consumption of computing resources.</p><p id="p-0138" num="0135">In any combination of the above embodiments of the computerized system, the operations can further comprise for each edge, determining an edge weight based on the relationship corresponded to by the edge; and wherein the first path comprises an optimal path that is determined based on the edge weights.</p><p id="p-0139" num="0136">In any combination of the above embodiments of the computerized system, the operations can further comprise determining the optimal path according to a context specifying that a third user is to be included in the optimal path or a the third user is to be excluded in the optimal path; and wherein the optimal path comprises a least-cost path.</p><p id="p-0140" num="0137">In any combination of the above embodiments of the computerized system, the indication of the information item comprises a relationship chain including: a connection for each user corresponding to a node in the optimal to another user corresponding to another node in the optimal path, and a relationship indication for each connection; and wherein at least two of the relationship indications are different.</p><p id="p-0141" num="0138">In any combination of the above embodiments of the computerized system, the plurality of users comprises at least three users, and further comprising: determining an optimal path between nodes corresponding to each of the pairs of users, each optimal path including at least three nodes, thereby forming a plurality of optimal paths; and wherein the information item is determined based at least on a portion of the plurality of optimal paths.</p><p id="p-0142" num="0139">In any combination of the above embodiments of the computerized system, the indication of the information item comprises information regarding at least one of: a most-connected user corresponding to a node that occurs most frequently in the plurality of optimal paths, a least-connected user corresponding to a node that occurs least frequently in the plurality of optimal paths, a recommendation for scheduling a meeting, and a suggested recipient of an electronic message.</p><p id="p-0143" num="0140">In any combination of the above embodiments of the computerized system, at least one edge corresponds to an inferred relationship; wherein a first relationship, corresponded to by a first edge, and a second relationship, corresponded to by a second edge, are different types of relationships; and wherein at least one pair of nodes is connected by at least two edges.</p><p id="p-0144" num="0141">In any combination of the above embodiments of the computerized system, programmatically evaluating the user data for each pair of users comprises performing a comparison of at least a first portion of the user data for each user in the pair; and wherein the user data comprises one or more user data features or structured user data.</p><p id="p-0145" num="0142">In any combination of the above embodiments of the computerized system, the system further comprises a sensor configured to provide sensor data including user-related activity data; and wherein the operations performed further comprise determining, using the sensor, at least a second portion of the user data for the first user, the second portion comprising a user-related activity data for the first user.</p><p id="p-0146" num="0143">In any combination of the above embodiments of the computerized system, the user data for each pair of users are programmatically evaluated to determine if a plurality of relationships exist between the users by performing multiple comparisons, each comparison performed on a portion of the user data for each pair of users, and based on each comparison, determining a relationship exists or does not exist between the pair of users.</p><p id="p-0147" num="0144">In some embodiments, a computer-implemented method is provided process user-connection data to provide an enhanced computing experience. The method may include processing a graph data structure to determine one or more optimal paths, the graph data structure comprising a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user, each edge corresponding to a relationship between the users corresponding to the nodes that are connected by the edge, and each edge having an edge weight associated therewith, each optimal path connecting a pair of end nodes and including at least three nodes. The method further includes determining an information item based on the one or more optimal paths and a context. The method further includes generating a graphical user interface (GUI) element comprising an indication of the information item. In this way, these embodiments enable an improved user experience across a number of computer devices, applications and platforms. Also in this way, these and other embodiments, as described herein, enable a very large scale of operations created by software-based services that cannot be managed by humans to operate in an efficient manner while determining, presenting, and processing user-connection data and using such data for the provisioning of new functionality for computing applications. Further still, these and other embodiments, as described herein, cause certain, user-connection data shared among two or more users to be programmatically surfaced and presented without requiring computer tools and resources for a user to manually perform operations to produce this outcome. Still further, in this way, these and other embodiments, as described herein, reduce or eliminate a need for certain databases, data storage, and computer controls for enabling manually performed steps by an administrator, to search, identify and assess, and configure (e.g., by hard-coding) specific, static relationship information to be presented to users, thereby reducing the consumption of computing resources.</p><p id="p-0148" num="0145">In any combination of the above embodiments at least one edge corresponds to an inferred relationship; wherein a first relationship, corresponded to by a first edge, and a second relationship, corresponded to by a second edge, are different types of relationships; wherein at least one pair of nodes is connected by at least two edges; and wherein the context comprises at least one of: a constraint specifying a particular user to be included or excluded in at least one optimal path, a computing application context, information about at least one user of interest, and a relationship query.</p><p id="p-0149" num="0146">In any combination of the above embodiments, for each edge corresponding to an inferred relationship, the edge weight of the edge is based on at least a confidence associated with the inferred relationship.</p><p id="p-0150" num="0147">In any combination of the above embodiments, each of the one or more optimal paths comprise a least-cost path; and wherein each edge weight is based on a relationship type for the relationship corresponded to by the edge.</p><p id="p-0151" num="0148">In any combination of the above embodiments the graph data structure is processed to determine a plurality of optimal paths; and wherein the information item is determined based on at least a portion of the plurality of optimal paths.</p><p id="p-0152" num="0149">In any combination of the above embodiments the context indicates at least a portion of the users are potential invitees of a meeting; and determining the information item comprises at least one of: identifying a most-connected potential invitee by determining, from among one or more nodes occurring in the plurality of optimal paths and corresponding to users who are not potential invitees, a first node that occurs most frequently in the plurality of optimal paths; and identifying a most-connected user who is not a potential invitee by determining from among one or more nodes occurring in the plurality of optimal paths and corresponding to users who are not potential invitees, determining a second node that occurs most frequently in the plurality of optimal paths, and wherein the context indicates at least some of the users are not potential invitees of a meeting.</p><p id="p-0153" num="0150">In any combination of the above embodiments the indication of the information item comprises at least one of: an indication of the a most-connected potential invitee, an indication of the most-connected user who is not a potential invitee, a recommendation for scheduling a meeting based on the most-connected potential invitee or the most-connected user who is not a potential invitee, and a suggested recipient of an electronic communication that is the most-connected potential invitee or the most-connected user who is not a potential invitee.</p><p id="p-0154" num="0151">In any combination of the above embodiments the GUI element comprises at least one of: a subgraph of the graph data structure that is determined based on the information item; a visual indicator of an information item regarding a most-connected user that is determined based on determining a first node that occurs most frequently in the plurality of paths; a first relationship chain that is determined based on a first optimal path that has the least cost among a group of optimal paths, of the plurality of optimal paths, the group of optimal paths comprising each optimal path that has an end node corresponding to the a user; and a second relationship chain that is determined based on a second optimal path having a first end node corresponding to the first user and a second end node corresponding to the first node that occurs most frequently in the plurality of paths.</p><p id="p-0155" num="0152">In some embodiments, one or more computer storage media having computer-executable instructions embodied thereon that when executed by at least one computer processor, cause operations to be performed. The operations may include processing a graph data structure to determine one or more optimal paths, the graph data structure comprising a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user, each edge corresponding to a relationship between the users corresponding to the nodes that are connected by the edge, and each edge having an edge weight associated therewith, each optimal path connecting a pair of end nodes and including at least three nodes. The operations further include determining an information item based on the one or more optimal paths and a context. The operations further include causing to present an indication of the information item. In this way, these embodiments enable an improved user experience across a number of computer devices, applications and platforms. Also in this way, these and other embodiments, as described herein, enable a very large scale of operations created by software-based services that cannot be managed by humans to operate in an efficient manner while determining, presenting, and processing user-connection data and using such data for the provisioning of new functionality for computing applications. Further still, these and other embodiments, as described herein, cause certain, user-connection data shared among two or more users to be programmatically surfaced and presented without requiring computer tools and resources for a user to manually perform operations to produce this outcome. Still further, in this way, these and other embodiments, as described herein, reduce or eliminate a need for certain databases, data storage, and computer controls for enabling manually performed steps by an administrator, to search, identify and assess, and configure (e.g., by hard-coding) specific, static relationship information to be presented to users, thereby reducing the consumption of computing resources.</p><p id="p-0156" num="0153">In any combination of the above embodiments the graph data structure is processed to determine a plurality of optimal paths; and the information item is determined based on at least a portion of the plurality of optimal paths.</p><p id="p-0157" num="0154">In any combination of the above embodiments the indication of the information item comprises at least one of: a subgraph of the graph data structure that is determined based on the information item; a visual indicator of at least a well-connected user corresponding to a node that occurs most frequently in the plurality of paths; a first relationship chain that is determined based on a first optimal path that has the least cost among a group of optimal paths, of the plurality of optimal paths, the group of optimal paths comprising each optimal path that has an end node corresponding to the a user; and a second relationship chain that is determined based on a second optimal path having a first end node corresponding to the first user and a second end node corresponding to the node that occurs most frequently in the plurality of paths.</p><heading id="h-0008" level="1">Overview of Exemplary Operating Environment</heading><p id="p-0158" num="0155">Having described various implementations, an exemplary computing environment suitable for implementing embodiments of the disclosure is now described. With reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, an exemplary computing device is provided and referred to generally as computing device <b>700</b>. The computing device <b>700</b> is but one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the disclosure. Neither should the computing device <b>700</b> be interpreted as having any dependency or requirement relating to any one or combination of components illustrated.</p><p id="p-0159" num="0156">Embodiments of the disclosure may be described in the general context of computer code or machine-useable instructions, including computer-useable or computer-executable instructions, such as program modules, being executed by a computer or other machine, such as a personal data assistant, a smartphone, a tablet PC, or other handheld device. Generally, program modules, including routines, programs, objects, components, data structures, and the like, refer to code that performs particular tasks or implements particular abstract data types. Embodiments of the disclosure may be practiced in a variety of system configurations, including handheld devices, consumer electronics, general-purpose computers, or more specialty computing devices. Embodiments of the disclosure may also be practiced in distributed computing environments where tasks are performed by remote-processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.</p><p id="p-0160" num="0157">With reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, computing device <b>700</b> includes a bus <b>710</b> that directly or indirectly couples the following devices: memory <b>712</b>, one or more processors <b>714</b>, one or more presentation components <b>716</b>, one or more input/output (I/O) ports <b>718</b>, one or more I/O components <b>720</b>, and an illustrative power supply <b>722</b>. Bus <b>710</b> represents what may be one or more busses (such as an address bus, data bus, or combination thereof). Although the various blocks of <figref idref="DRAWINGS">FIG. <b>7</b></figref> are shown with lines for the sake of clarity, in reality, these blocks represent logical, not necessarily actual, components. For example, one may consider a presentation component such as a display device to be an I/O component. Also, processors have memory. The inventors hereof recognize that such is the nature of the art and reiterate that the diagram of <figref idref="DRAWINGS">FIG. <b>7</b></figref> is merely illustrative of an exemplary computing device that can be used in connection with one or more embodiments of the present disclosure. Distinction is not made between such categories as &#x201c;workstation,&#x201d; &#x201c;server,&#x201d; &#x201c;laptop,&#x201d; or &#x201c;handheld device,&#x201d; as all are contemplated within the scope of <figref idref="DRAWINGS">FIG. <b>7</b></figref> and with reference to &#x201c;computing device.&#x201d;</p><p id="p-0161" num="0158">Computing device <b>700</b> typically includes a variety of computer-readable media. Computer-readable media can be any available media that can be accessed by computing device <b>700</b> and includes both volatile and nonvolatile, removable and non-removable media. By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVDs) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device <b>700</b>. Computer storage media does not comprise signals per se. Communication media typically embodies computer-readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media, such as a wired network or direct-wired connection, and wireless media, such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.</p><p id="p-0162" num="0159">Memory <b>712</b> includes computer storage media in the form of volatile and/or nonvolatile memory. The memory may be removable, non-removable, or a combination thereof. Exemplary hardware devices include for example solid-state memory, hard drives, and optical-disc drives. Computing device <b>700</b> includes one or more processors <b>714</b> that read data from various entities such as memory <b>712</b> or I/O components <b>720</b>. Presentation component(s) <b>716</b> presents data indications to a user or other device. Exemplary presentation components include a display device, speaker, printing component, vibrating component, and the like.</p><p id="p-0163" num="0160">The I/O ports <b>718</b> allow computing device <b>700</b> to be logically coupled to other devices, including I/O components <b>720</b>, some of which may be built in. Illustrative components include a microphone, joystick, game pad, satellite dish, scanner, printer, or a wireless device. The I/O components <b>720</b> may provide a natural user interface (NUI) that processes air gestures, voice, or other physiological inputs generated by a user. In some instances, inputs may be transmitted to an appropriate network element for further processing. An NUI may implement any combination of speech recognition, touch and stylus recognition, facial recognition, biometric recognition, gesture recognition both on screen and adjacent to the screen, air gestures, head and eye tracking, and touch recognition associated with displays on the computing device <b>700</b>. The computing device <b>700</b> may be equipped with depth cameras, such as stereoscopic camera systems, infrared camera systems, RGB camera systems, and combinations of these, for gesture detection and recognition. Additionally, the computing device <b>700</b> may be equipped with accelerometers or gyroscopes that enable detection of motion. The output of the accelerometers or gyroscopes may be provided to the display of the computing device <b>700</b> to render immersive augmented reality or virtual reality.</p><p id="p-0164" num="0161">Some embodiments of computing device <b>700</b> may include one or more radio(s) <b>724</b> (or similar wireless communication components). The radio transmits and receives radio or wireless communications. The computing device <b>700</b> may be a wireless terminal adapted to receive communications and media over various wireless networks. Computing device <b>700</b> may communicate via wireless protocols, such as code division multiple access (&#x201c;CDMA&#x201d;), global system for mobiles (&#x201c;GSM&#x201d;), or time division multiple access (&#x201c;TDMA&#x201d;), as well as others, to communicate with other devices. The radio communications may be a short-range connection, a long-range connection, or a combination of both a short-range and a long-range wireless telecommunications connection. When we refer to &#x201c;short&#x201d; and &#x201c;long&#x201d; types of connections, we do not mean to refer to the spatial relation between two devices. Instead, we are generally referring to short range and long range as different categories, or types, of connections (for example, a primary connection and a secondary connection). A short-range connection may include, by way of example and not limitation, a Wi-Fi&#xae; connection to a device (e.g., mobile hotspot) that provides access to a wireless communications network, such as a WLAN connection using the 802.11 protocol; a Bluetooth connection to another computing device is a second example of a short-range connection, or a near-field communication connection. A long-range connection may include a connection using, by way of example and not limitation, one or more of CDMA, GPRS, GSM, TDMA, and 802.16 protocols.</p><p id="p-0165" num="0162">Many different arrangements of the various components depicted, as well as components not shown, are possible without departing from the scope of the claims below. Embodiments of the disclosure have been described with the intent to be illustrative rather than restrictive. Alternative embodiments will become apparent to readers of this disclosure after and because of reading it. Alternative means of implementing the aforementioned can be completed without departing from the scope of the claims below. Certain features and sub-combinations are of utility and may be employed without reference to other features and sub-combinations and are contemplated within the scope of the claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230004943A1-20230105-M00001.NB"><img id="EMI-M00001" he="9.48mm" wi="76.20mm" file="US20230004943A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer system to determine user-connection data for a plurality of users, the system comprising:<claim-text>at least one processor; and</claim-text><claim-text>computer memory having computer-readable instructions embodied thereon that when executed by the at least one processor perform operations comprising:<claim-text>for the plurality of users, each user having corresponding user data characterizing the user, programmatically evaluating the user data for each pair of users in the plurality to determine whether at least one relationship exists between the pair of users, thereby forming a set of user-pair relationships for the pairs of users determined to have at least one relationship existing between the pair;</claim-text><claim-text>based on the set of user-pair relationships, generating a graph data structure comprising a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user in the set of user-pair relationships, and each edge corresponding to a relationship in the user-pair relationship having the pair of users corresponding to the nodes that are connected by the edge;</claim-text><claim-text>based the graph data structure, determining a first path connecting a first end node and a second end node, the first end node corresponding to a first user and the second end node corresponding to a second user;</claim-text><claim-text>determining an information item based at least on the first path; and</claim-text><claim-text>causing to present an indication of the information item.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise, for each edge, determining an edge weight based on the relationship corresponded to by the edge; and wherein the first path comprises an optimal path that is determined based on the edge weights.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the operations further comprise determining the optimal path according to a context specifying that a third user is to be included in the optimal path or a the third user is to be excluded in the optimal path; and wherein the optimal path comprises a least-cost path.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the indication of the information item comprises a relationship chain including: a connection for each user corresponding to a node in the optimal to another user corresponding to another node in the optimal path, and a relationship indication for each connection; and wherein at least two of the relationship indications are different.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the plurality of users comprises at least three users, and further comprising:<claim-text>determining an optimal path between nodes corresponding to each of the pairs of users, each optimal path including at least three nodes, thereby forming a plurality of optimal paths; and</claim-text><claim-text>wherein the information item is determined based at least on a portion of the plurality of optimal paths.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the indication of the information item comprises information regarding at least one of: a most-connected user corresponding to a node that occurs most frequently in the plurality of optimal paths, a least-connected user corresponding to a node that occurs least frequently in the plurality of optimal paths, a recommendation for scheduling a meeting, and a suggested recipient of an electronic message.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least one edge corresponds to an inferred relationship; wherein a first relationship, corresponded to by a first edge, and a second relationship, corresponded to by a second edge, are different types of relationships; and wherein at least one pair of nodes is connected by at least two edges.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein programmatically evaluating the user data for each pair of users comprises performing a comparison of at least a first portion of the user data for each user in the pair; and wherein the user data comprises one or more user data features or structured user data.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref> further comprising a sensor configured to provide sensor data including user-related activity data; and wherein the operations performed further comprise:<claim-text>determining, using the sensor, at least a second portion of the user data for the first user, the second portion comprising a user-related activity data for the first user.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user data for each pair of users are programmatically evaluated to determine if a plurality of relationships exist between the users by performing multiple comparisons, each comparison performed on a portion of the user data for each pair of users, and based on each comparison, determining a relationship exists or does not exist between the pair of users.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computerized method to process user-connection data to provide an enhanced computing experience, the method comprising:<claim-text>processing a graph data structure to determine one or more optimal paths, the graph data structure comprising a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user, each edge corresponding to a relationship between the users corresponding to the nodes that are connected by the edge, and each edge having an edge weight associated therewith, each optimal path connecting a pair of end nodes and including at least three nodes;</claim-text><claim-text>determining an information item based on the one or more optimal paths and a context; and</claim-text><claim-text>generating a graphical user interface (GUI) element comprising an indication of the information item.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computerized method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein at least one edge corresponds to an inferred relationship; wherein a first relationship, corresponded to by a first edge, and a second relationship, corresponded to by a second edge, are different types of relationships; wherein at least one pair of nodes is connected by at least two edges; and wherein the context comprises at least one of: a constraint specifying a particular user to be included or excluded in at least one optimal path, a computing application context, information about at least one user of interest, and a relationship query.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computerized method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein, for each edge corresponding to an inferred relationship, the edge weight of the edge is based on at least a confidence associated with the inferred relationship.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computerized method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein each of the one or more optimal paths comprise a least-cost path; and wherein each edge weight is based on a relationship type for the relationship corresponded to by the edge.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computerized method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the graph data structure is processed to determine a plurality of optimal paths; and wherein the information item is determined based on at least a portion of the plurality of optimal paths.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computerized method of <claim-ref idref="CLM-00015">claim 15</claim-ref>:<claim-text>wherein the context indicates at least a portion of the users are potential invitees of a meeting;</claim-text><claim-text>wherein determining the information item comprises at least one of:<claim-text>identifying a most-connected potential invitee by determining, from among one or more nodes occurring in the plurality of optimal paths and corresponding to users who are not potential invitees, a first node that occurs most frequently in the plurality of optimal paths; and</claim-text><claim-text>identifying a most-connected user who is not a potential invitee by determining from among one or more nodes occurring in the plurality of optimal paths and corresponding to users who are not potential invitees, determining a second node that occurs most frequently in the plurality of optimal paths, and wherein the context indicates at least some of the users are not potential invitees of a meeting; and</claim-text></claim-text><claim-text>wherein the indication of the information item comprises at least one of: an indication of the a most-connected potential invitee, an indication of the most-connected user who is not a potential invitee, a recommendation for scheduling a meeting based on the most-connected potential invitee or the most-connected user who is not a potential invitee, and a suggested recipient of an electronic communication that is the most-connected potential invitee or the most-connected user who is not a potential invitee.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computerized method of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the GUI element comprises at least one of: a subgraph of the graph data structure that is determined based on the information item; a visual indicator of an information item regarding a most-connected user that is determined based on determining a first node that occurs most frequently in the plurality of paths; a first relationship chain that is determined based on a first optimal path that has the least cost among a group of optimal paths, of the plurality of optimal paths, the group of optimal paths comprising each optimal path that has an end node corresponding to the a user; and a second relationship chain that is determined based on a second optimal path having a first end node corresponding to the first user and a second end node corresponding to the first node that occurs most frequently in the plurality of paths.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. Computer storage media having computer-executable instructions embodied thereon that when executed by at least one computer processor, cause operations to be performed comprising:<claim-text>processing a graph data structure to determine one or more optimal paths, the graph data structure comprising a plurality of nodes and one or more edges connecting each node to another node, each node corresponding to a user, each edge corresponding to a relationship between the users corresponding to the nodes that are connected by the edge, and each edge having an edge weight associated therewith, each optimal path connecting a pair of end nodes and including at least three nodes;</claim-text><claim-text>determining an information item based on the one or more optimal paths and a context; and</claim-text><claim-text>causing to present an indication of the information item.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer storage media of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the graph data structure is processed to determine a plurality of optimal paths; and wherein the information item is determined based on at least a portion of the plurality of optimal paths.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer storage media of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the indication of the information item comprises at least one of: a subgraph of the graph data structure that is determined based on the information item; a visual indicator of at least a well-connected user corresponding to a node that occurs most frequently in the plurality of paths; a first relationship chain that is determined based on a first optimal path that has the least cost among a group of optimal paths, of the plurality of optimal paths, the group of optimal paths comprising each optimal path that has an end node corresponding to the a user; and a second relationship chain that is determined based on a second optimal path having a first end node corresponding to the first user and a second end node corresponding to the node that occurs most frequently in the plurality of paths.</claim-text></claim></claims></us-patent-application>