<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007484A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007484</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942785</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>041</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>037</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>041</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>068</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3271</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0825</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3242</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>037</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">WIRELESS ACCESS CREDENTIAL SYSTEM</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17863065</doc-number><date>20220712</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17942785</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16578747</doc-number><date>20190923</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11388595</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17863065</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62734548</doc-number><date>20180921</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Schlage Lock Company LLC</orgname><address><city>Carmel</city><state>IN</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Everson</last-name><first-name>Jonathan R.</first-name><address><city>Kokomo</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Ross</last-name><first-name>Gregory</first-name><address><city>Carmel</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Kaufman</last-name><first-name>Seth</first-name><address><city>Denver</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Johnson</last-name><first-name>Dakoda</first-name><address><city>Carmel</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Bauer</last-name><first-name>Christopher</first-name><address><city>Morrison</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Luif</last-name><first-name>John</first-name><address><city>Lakewood</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Evenson</last-name><first-name>John</first-name><address><city>Greentown</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>Santhanakrishnan</last-name><first-name>Lakshmi</first-name><address><city>Carmel</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="08" designation="us-only"><addressbook><last-name>Duckworth</last-name><first-name>Mark</first-name><address><city>Littleton</city><state>CO</state><country>US</country></address></addressbook></inventor><inventor sequence="09" designation="us-only"><addressbook><last-name>Broerman</last-name><first-name>Keith R.</first-name><address><city>Loveland</city><state>OH</state><country>US</country></address></addressbook></inventor><inventor sequence="10" designation="us-only"><addressbook><last-name>Baumgarte</last-name><first-name>Joseph W.</first-name><address><city>Carmel</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="11" designation="us-only"><addressbook><last-name>Dexter</last-name><first-name>Matthew</first-name><address><city>Indianapolis</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="12" designation="us-only"><addressbook><last-name>Hopkins</last-name><first-name>Benjamin J.</first-name><address><city>Zionsville</city><state>IN</state><country>US</country></address></addressbook></inventor><inventor sequence="13" designation="us-only"><addressbook><last-name>Studt</last-name><first-name>David</first-name><address><city>Noblesville</city><state>IN</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An access control system and methods according to at least one embodiment leverage wireless access credentials to allow a user to securely gain access to a secured area using his or her mobile device. As such, a credentialed mobile device may permit access to the secured area without requiring a real-time connection to a credential management system and/or an administrative system.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="114.05mm" wi="158.75mm" file="US20230007484A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="202.27mm" wi="160.10mm" orientation="landscape" file="US20230007484A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="182.12mm" wi="120.14mm" file="US20230007484A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="216.83mm" wi="147.15mm" orientation="landscape" file="US20230007484A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="219.71mm" wi="147.15mm" orientation="landscape" file="US20230007484A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="216.83mm" wi="159.85mm" orientation="landscape" file="US20230007484A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="115.23mm" wi="70.95mm" orientation="landscape" file="US20230007484A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="223.35mm" wi="141.14mm" file="US20230007484A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="227.33mm" wi="167.39mm" file="US20230007484A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="227.33mm" wi="164.93mm" file="US20230007484A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="227.33mm" wi="163.32mm" file="US20230007484A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="227.33mm" wi="164.25mm" file="US20230007484A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="227.33mm" wi="165.52mm" file="US20230007484A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="227.33mm" wi="166.20mm" file="US20230007484A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="227.33mm" wi="164.76mm" file="US20230007484A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="227.33mm" wi="164.76mm" file="US20230007484A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="227.33mm" wi="165.61mm" file="US20230007484A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="227.33mm" wi="166.20mm" file="US20230007484A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="227.33mm" wi="164.76mm" file="US20230007484A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="227.33mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="227.33mm" wi="164.51mm" file="US20230007484A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="228.09mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="230.12mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="230.80mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="227.92mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="229.02mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="227.41mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="206.50mm" wi="146.98mm" orientation="landscape" file="US20230007484A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="227.75mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="219.12mm" wi="159.85mm" orientation="landscape" file="US20230007484A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="246.97mm" wi="160.36mm" orientation="landscape" file="US20230007484A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="243.42mm" wi="160.53mm" orientation="landscape" file="US20230007484A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="162.64mm" wi="159.85mm" orientation="landscape" file="US20230007484A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="162.64mm" wi="159.85mm" orientation="landscape" file="US20230007484A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="227.33mm" wi="165.69mm" file="US20230007484A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="223.27mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="223.27mm" wi="163.91mm" orientation="landscape" file="US20230007484A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="246.30mm" wi="158.07mm" orientation="landscape" file="US20230007484A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="230.89mm" wi="130.05mm" orientation="landscape" file="US20230007484A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/863,065 filed on Jul. 12, 2022, which is a continuation of U.S. patent application Ser. No. 16/578,747 filed on Sep. 23, 2019 and issued as U.S. Pat. No. 11,388,595, which claims the benefit of U.S. Provisional Application No. 62/734,548 filed on Sep. 21, 2018, the contents of each application are incorporated herein by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Access control systems typically involve the use of credentials to manage the operation of an access control device (e.g., a lock device). Such credentials may be assigned to a particular user or device and are often physical in nature, forming at least a portion of, for example, a smartcard, proximity card, key fob, token device, or mobile device. Thus, credential systems generally require an interaction between the credential and a reader device (e.g., on or secured to the access control device) such that the reader device may read the credential and determine whether access should be granted. In particular, a user may be required to swipe, tap, or otherwise present the credential to the reader device. In other embodiments, the user intent is verified via the user's interaction with the reader device (e.g., turning a handle/knob, capacitive touch sense, etc.). As such, access control systems generally require an active physical action on behalf of the user in order to grant the user access via the access control device.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">According to an embodiment, a method of using a wireless access credential in an access control system may include at least a server system, a mobile device, and an access control edge device. The method may include encrypting, by the server system and using a symmetric cryptographic key stored by the server system and the access control edge device, a credential blob including a wireless access credential and a first public cryptographic key provided by the mobile device, wherein the first public cryptographic key and a first private cryptographic key are a first asymmetric cryptographic key pair stored by the mobile device, transmitting, by the server system, the encrypted credential blob to the mobile device for storage by the mobile device, establishing a secure wireless communication connection between the mobile device and an access control edge device including generating a shared cryptographic key, encrypting, by the mobile device and using the shared cryptographic key, a credential message including the encrypted credential blob, cryptographically signing, by the mobile device and using the first private cryptographic key, the encrypted credential message, transmitting, by the mobile device, the encrypted and signed credential message to the access control edge device, decrypting, by the access control edge device and using the shared cryptographic key, the encrypted and signed credential message to extract the encrypted credential blob, decrypting, by the access control edge device and using the symmetric cryptographic key, the encrypted credential blob to extract the wireless access credential, and unlocking a lock mechanism of an electronic lock associated with the access control edge device in response to successful authentication of the wireless access credential.</p><p id="p-0005" num="0004">In some embodiments, the method may further include cryptographically signing, by the mobile device and using the first private cryptographic key, a credential request including the first public cryptographic key, transmitting, by the mobile device, the signed credential request to the server system, and verifying, by the server system, the credential request signature based on the first public cryptographic key retrieved from the signed credential request, wherein encrypting the credential blob comprises encrypting the credential blob in response to successful verification of the credential request signature.</p><p id="p-0006" num="0005">In some embodiments, the method may further include generating, by the server system, a keyed hash of the encrypted credential blob using the symmetric cryptographic key, wherein transmitting the encrypted credential blob further comprises transmitting the keyed hash to the mobile device for storage by the mobile device, and wherein the credential message further includes the keyed hash.</p><p id="p-0007" num="0006">In some embodiments, the keyed hash may be a keyed-hash message authentication code (HMAC).</p><p id="p-0008" num="0007">In some embodiments, the method may further include verifying, by the access control edge device and using the symmetric cryptographic key, the keyed hash in the credential message in response to decrypting the encrypted and signed credential message and verifying, by the access control edge device, the credential message signature based on the first public cryptographic key extracted from the decrypted credential blob.</p><p id="p-0009" num="0008">In some embodiments, the method may further include encrypting, by the access control edge device and using the shared cryptographic key, challenge data, transmitting, by the access control edge device, the encrypted challenge data to the mobile device, and decrypting, by the mobile device and using the shared cryptographic key, the encrypted challenge data, wherein the credential message further includes the challenge data.</p><p id="p-0010" num="0009">In some embodiments, the method may further include verifying, by the access control edge device, the challenge data in response to decrypting the encrypted and signed credential message.</p><p id="p-0011" num="0010">In some embodiments, the method may further include cryptographically signing, by the server system, the encrypted credential blob using a second private cryptographic key, wherein the second private cryptographic key and a second public cryptographic key are a second asymmetric cryptographic key pair stored by the server system, and wherein the second public cryptographic key is stored by the access control edge device, wherein transmitting the encrypted credential blob comprises transmitting the signed and encrypted credential blob to the mobile device for storage by the mobile device, and wherein the credential message includes the signed and encrypted credential blob.</p><p id="p-0012" num="0011">In some embodiments, the method may further include verifying, by the access control edge device, the encrypted credential blob signature based on the second public cryptographic key retrieved from a memory of the access control edge device and verifying, by the access control edge device, the credential message signature based on the first public cryptographic key extracted from the decrypted credential blob.</p><p id="p-0013" num="0012">In some embodiments, the method may further include encrypting, by the access control edge device and using the shared cryptographic key, pin request data, transmitting, by the access control edge device, the encrypted pin request data to the mobile device, decrypting, by the mobile device and using the shared cryptographic key, the pin request data, receiving, by the mobile device, a pin value entered by a user of the mobile device, encrypting, by the mobile device and using the shared cryptographic key, a pin response including the pin value and the pin request data, transmitting, by the mobile device, the encrypted pin response to the access control edge device, decrypting, by the access control edge device and using the shared cryptographic key, the pin response, verifying, by the access control edge device, the pin request data in response to decrypting the pin response, and authenticating the pin value in response to successful verification of the pin request data.</p><p id="p-0014" num="0013">In some embodiments, unlocking the lock mechanism may include unlocking the lock mechanism in response to successful authentication of the wireless access credential and successful authentication of the pin value.</p><p id="p-0015" num="0014">In some embodiments, the first asymmetric cryptographic key pair may be an elliptical curve cryptography key pair.</p><p id="p-0016" num="0015">In some embodiments, generating the shared cryptographic key may include performing an Elliptical Curve Diffie-Hellman key exchange.</p><p id="p-0017" num="0016">In some embodiments, the method may further include encrypting, by the mobile device and using a third public cryptographic key, the encrypted credential blob received from the server system prior to storage of the encrypted credential blob, wherein the third public cryptographic key and a second private cryptographic key are a third asymmetric cryptographic key pair stored by the mobile device and decrypting, by the mobile device and using the third private cryptographic key, the stored encrypted credential blob prior to building the credential message.</p><p id="p-0018" num="0017">According to another embodiment, an access control system may include an access control edge system comprising a lock mechanism, a mobile device, and a server system to encrypt, using a symmetric cryptographic key stored by the server system and the access control edge system, a credential blob including a wireless access credential and a first public cryptographic key provided by the mobile device, wherein the first public cryptographic key and a first private cryptographic key are an asymmetric cryptographic key pair stored by the mobile device and transmit the encrypted credential blob to the mobile device for storage by the mobile device. The mobile device may be to establish a secure wireless communication connection between the mobile device and an access control edge system including generating a shared cryptographic key, encrypt, using the shared cryptographic key, a credential message including the encrypted credential blob, cryptographically sign the encrypted credential message using the first private cryptographic key, and transmit the encrypted and signed credential message to the access control edge system. The access control edge system may be to decrypt, using the shared cryptographic key, the encrypted and signed credential message to extract the encrypted credential blob, decrypt, using the symmetric cryptographic key, the encrypted credential blob to extract the wireless access credential, and unlock the lock mechanism in response to successful authentication of the wireless access credential.</p><p id="p-0019" num="0018">In some embodiments, the server system may include at least one cloud-based server.</p><p id="p-0020" num="0019">In some embodiments, the server system may include a credential management system, a key management system, and a mobile access hub.</p><p id="p-0021" num="0020">In some embodiments, the access control edge system may include a Bluetooth chipset, a main chipset, and a cryptography chipset.</p><p id="p-0022" num="0021">According to an embodiment, an access control edge device for simultaneous connectivity may include a Bluetooth Low Energy (BLE) communication circuitry, a processor, and a memory comprising a plurality of instructions stored thereon that, in response to execution by the processor, causes the access control edge device to establish a first persistent communication connection with a first device using the BLE communication circuitry and establish a second persistent communication connection with a second device using the BLE communication circuitry without dropping the first persistent communication connection with the first device.</p><p id="p-0023" num="0022">In some embodiments, the first device may be a gateway device and the second device may be a mobile device.</p><p id="p-0024" num="0023">In some embodiments, the memory may include a local access control database and the plurality of instructions may further cause the access control edge device to receive a BLE access credential from the mobile device while simultaneously receiving a real-time update from a host server via the gateway device and perform an access control decision based on the BLE access credential and the local access control database.</p><p id="p-0025" num="0024">In some embodiments, the plurality of instructions may further cause the access control edge device to transmit, via the BLE communication circuitry, a BLE advertisement to remote devices in a vicinity of the access control edge device while the first persistent communication connection is established, and wherein establishing the second persistent communication connection with the second device may include establishing the second persistent communication connection with the mobile device in response to receipt of the BLE advertisement by the mobile device.</p><p id="p-0026" num="0025">In some embodiments, the plurality of instructions may further cause the access control edge device to receive a BLE access credential from the mobile device via the second persistent communication connection and transmit the BLE access credential to an access control system via the first persistent communication connection with the gateway device to perform an access control decision.</p><p id="p-0027" num="0026">In some embodiments, the access control edge device may include a credential reader.</p><p id="p-0028" num="0027">In some embodiments, the access control edge device may include a physical lock mechanism.</p><p id="p-0029" num="0028">In some embodiments, the first device may be a first mobile device and the second device may be a second mobile device.</p><p id="p-0030" num="0029">In some embodiments, the first device may be an administrative device and the second device may be a user mobile device.</p><p id="p-0031" num="0030">According to another embodiment, a method for simultaneous connectivity with an access control edge device may include establishing, by the access control edge device, a first persistent communication connection with a first device using a BLE communication circuitry of the access control edge device and establishing, by the access control edge device, a second persistent communication connection with a second device using the BLE communication circuitry without dropping the first persistent communication connection with the first device.</p><p id="p-0032" num="0031">In some embodiments, establishing the first persistent communication connection may include establishing the first persistent communication connection with a gateway device and establishing the second persistent communication connection may include establishing the second persistent communication connection with a mobile device without dropping the first persistent communication connection with the first device.</p><p id="p-0033" num="0032">In some embodiments, the method may further include receiving, by the access control edge device, a BLE access credential from the mobile device while simultaneously receiving a real-time update from a host server via the gateway device and performing, by the access control edge device, an access control decision based on the BLE access credential and a local access control database stored on the access control edge device.</p><p id="p-0034" num="0033">In some embodiments, the method may further include transmitting, by the access control edge device using the BLE communication circuitry, a BLE advertisement to remote devices in a vicinity of the access control edge device while the first persistent communication connection with the gateway device is established and wherein establishing the second persistent communication connection with the second device may include establishing the second persistent communication connection with the mobile device in response to receipt of the BLE advertisement by the mobile device.</p><p id="p-0035" num="0034">In some embodiments, the method may further include receiving, by the access control edge device, a BLE access credential from the mobile device via the second persistent communication connection and transmitting, by the access control edge device, the BLE access credential to an access control system via the first persistent communication connection with the gateway device to perform an access control decision.</p><p id="p-0036" num="0035">In some embodiments, establishing the first persistent communication connection may include establishing the first persistent communication connection with a first mobile device and establishing the second persistent communication connection may include establishing the second persistent communication connection with a second mobile device without dropping the first persistent communication connection with the first device.</p><p id="p-0037" num="0036">In some embodiments, establishing the first persistent communication connection may include establishing the first persistent communication connection with an administrative device and establishing the second persistent communication connection may include establishing the second persistent communication connection with a user mobile device without dropping the first persistent communication connection with the first device.</p><p id="p-0038" num="0037">According to yet another embodiment, one or more non-transitory machine-readable storage media may include a plurality of instructions stored thereon that, in response to execution by an access control edge device, causes the access control edge device to establish a first persistent communication connection with a first device using a BLE communication circuitry and establish a second persistent communication connection with a second device using the BLE communication circuitry without dropping the first persistent communication connection with the first device.</p><p id="p-0039" num="0038">In some embodiments, the first device may be a gateway device and the second device may be a mobile device.</p><p id="p-0040" num="0039">In some embodiments, the plurality of instructions may further cause the access control edge device to receive a BLE access credential from the mobile device while simultaneously receiving a real-time update from a host server via the gateway device and perform an access control decision based on the BLE access credential and a local access control database stored on the access control edge device.</p><p id="p-0041" num="0040">In some embodiments, the plurality of instructions may further cause the access control edge device to transmit, using the BLE communication circuitry, a BLE advertisement to remote devices in a vicinity of the access control edge device while the first persistent communication connection with the gateway device is established, wherein the second persistent communication connection with the mobile device is established in response to receipt of the BLE advertisement by the mobile device, receive a BLE access credential from the mobile device via the second persistent communication connection, and transmit the BLE access credential to an access control system via the first persistent communication connection with the gateway device to perform an access control decision.</p><p id="p-0042" num="0041">According to an embodiment, an access control system may include an administrative system, a mobile access hub, an access control edge system comprising a lock mechanism and a Bluetooth Low Energy (BLE) communication circuitry, and a credential management system to issue a BLE access credential to a user in response to a request for issuance of the BLE access credential by the administrative system and transmit the BLE access credential to the mobile access hub. The mobile access hub may be to transmit the BLE access credential to a mobile device associated with the user. The administrative system may be to update an access control database to associate the BLE access credential with the mobile device. The access control edge system may be to receive the BLE access credential from the mobile device via the BLE communication circuitry and unlock the lock mechanism in response to successful authentication of the BLE access credential.</p><p id="p-0043" num="0042">In some embodiments, transmitting the BLE access credential to the mobile access hub may include calling the mobile access hub via a credential management application programming interface to transmit a message to the mobile device and transmitting the BLE access credential to the mobile device associated with the user may include transmitting the message to the mobile device including a deep link that retrieves the BLE access credential from the mobile access hub via a mobile application.</p><p id="p-0044" num="0043">In some embodiments, transmitting the message may include transmitting a Short Message Service (SMS) message to the mobile device.</p><p id="p-0045" num="0044">In some embodiments, the credential management system may further receive the request for issuance of the BLE access credential via a web portal.</p><p id="p-0046" num="0045">In some embodiments, the credential management system may further receive the request for issuance of the BLE access credential via an automated integrated application programming interface between the administrative system and the credential management system.</p><p id="p-0047" num="0046">In some embodiments, issuing the BLE access credential may include ensuring that a credential value of the BLE access credential is unique to a site at which the access control edge system is located.</p><p id="p-0048" num="0047">In some embodiments, issuing the BLE access credential may include issuing the BLE access credential in response to a determination that an entity associated with the administrative system has sufficient credential credits for issuance of a new BLE access credential.</p><p id="p-0049" num="0048">In some embodiments, the access control edge system may further perform authentication of the BLE access credential.</p><p id="p-0050" num="0049">In some embodiments, the access control edge system may include a peripheral controller to authenticate the BLE access credential.</p><p id="p-0051" num="0050">In some embodiments, at least one of the credential management system or the mobile access hub may include a cloud-based system.</p><p id="p-0052" num="0051">According to another embodiment, a method may include issuing, by a credential management system, a Bluetooth Low Energy (BLE) access credential to a user in response to a request for issuance of the BLE access credential by an administrative system, transmitting, by the credential management system, the BLE access credential to a mobile device associated with the user, updating, by the administrative system, an access control database to associate the BLE access credential with the mobile device, receiving, by an access control edge device, the BLE access credential from the mobile device via a BLE communication connection between the access control edge device and the mobile device, and unlocking a lock mechanism of an electronic lock in response to successful authentication of the BLE access credential.</p><p id="p-0053" num="0052">In some embodiments, transmitting the BLE access credential to the mobile device associated with the user may include transmitting, by the credential management system, the BLE access credential to a mobile access hub and transmitting, by the mobile access hub, the BLE access credential to the mobile device.</p><p id="p-0054" num="0053">In some embodiments, transmitting the BLE access credential to the mobile device associated with the user may include calling, by the credential management system, the mobile access hub via a credential management application programming interface to transmit a message to the mobile device and transmitting, by the mobile access hub, the message to the mobile device including a deep link that retrieves the BLE access credential from the mobile access hub via a mobile application.</p><p id="p-0055" num="0054">In some embodiments, transmitting the message may include transmitting a Short Message Service (SMS) message to the mobile device.</p><p id="p-0056" num="0055">In some embodiments, the method may further include receiving, by the credential management system, the request for issuance of the BLE access credential via a web portal.</p><p id="p-0057" num="0056">In some embodiments, the method may further include receiving, by the credential management system, the request for issuance of the BLE access credential via an automated integrated application programming interface between the administrative system and the credential management system.</p><p id="p-0058" num="0057">In some embodiments, issuing the BLE access credential may include ensuring that a credential value of the BLE access credential is unique to a site at which the electronic lock is located.</p><p id="p-0059" num="0058">In some embodiments, issuing the BLE access credential may include issuing the BLE access credential in response to a determination that an entity associated with the administrative system has sufficient credential credits for issuance of a new BLE access credential.</p><p id="p-0060" num="0059">In some embodiments, the method may further include performing, by the access control edge device, authentication of the BLE access credential, and the access control edge device may include the electronic lock.</p><p id="p-0061" num="0060">In some embodiments, the method may further include transmitting, by the access control edge device, the BLE access credential to a peripheral controller for authentication.</p><p id="p-0062" num="0061">In some embodiments, the method may further include transmitting, by the mobile device, the BLE access credential to the mobile device via the BLE communication connection in response to a determination of a user intent to access a passageway secured by the electronic lock.</p><p id="p-0063" num="0062">In some embodiments, unlocking the lock mechanism of the electronic lock may include unlocking the lock mechanism in response to a determination of a user intent to access a passageway secured by the electronic lock.</p><p id="p-0064" num="0063">Further embodiments, forms, features, and aspects of the present application shall become apparent from the description and figures provided herewith.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0065" num="0064">The concepts described herein are illustrative by way of example and not by way of limitation in the accompanying figures. For simplicity and clarity of illustration, elements illustrated in the figures are not necessarily drawn to scale. Where considered appropriate, references labels have been repeated among the figures to indicate corresponding or analogous elements.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a simplified block diagram of at least one embodiment of an access control system for using a wireless access credential;</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a simplified block diagram of at least one embodiment of a computing system;</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIGS. <b>3</b>-<b>8</b></figref> are simplified block diagrams illustrating various communication capabilities of the access control system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is an example data structure of at least one embodiment of a wireless access credential;</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a simplified flow diagram of at least one embodiment of a method of using a wireless access credential in the access control system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a simplified flow diagram of at least one embodiment of a method of storing a wireless access credential to a mobile device of the access control system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref> are a simplified flow diagram of at least one embodiment of a method of using the wireless access credential of <figref idref="DRAWINGS">FIG. <b>11</b></figref>;</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a simplified flow diagram of at least one embodiment of a method for further authenticating a user of the mobile device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a simplified flow diagram of at least one embodiment of another method of storing a wireless access credential to the mobile device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIGS. <b>16</b>-<b>17</b></figref> are a simplified flow diagram of at least one embodiment of a method of using the wireless access credential of <figref idref="DRAWINGS">FIG. <b>15</b></figref>;</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a simplified flow diagram of at least one embodiment of another method for further authenticating a user of the mobile device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a simplified flow diagram of at least one embodiment of yet another method of storing a wireless access credential to the mobile device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIGS. <b>20</b>-<b>21</b></figref> are a simplified flow diagram of at least one embodiment of a method of using the wireless access credential of <figref idref="DRAWINGS">FIG. <b>19</b></figref>;</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref> are a simplified flow diagram of at least one embodiment of a method of assigning a wireless access credential;</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref> are a simplified flow diagram of at least one embodiment of a method of storing a wireless access credential to the mobile device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a simplified flow diagram of at least one embodiment of a method of performing a key exchange between the mobile device and an access control edge device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIGS. <b>27</b>-<b>29</b></figref> are a simplified flow diagram of at least one embodiment of a method of using the wireless access credential of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref>;</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIGS. <b>30</b>-<b>31</b></figref> are simplified diagrams of a graphical user interface of the mobile device of <figref idref="DRAWINGS">FIG. <b>1</b></figref>;</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>32</b></figref> is a simplified flow diagram of at least one embodiment of a method of revoking a wireless access credential;</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>33</b></figref> is a chart depicting cryptographic keys associated with at least one embodiment of a cryptography chipset;</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a simplified block diagram of at least one embodiment of an access control system including a peripheral controller;</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is a simplified block diagram of at least one embodiment of an access control system including an electronic lock;</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIGS. <b>36</b>-<b>37</b></figref> are simplified block diagrams illustrating various embodiments of no tour implementations in access control systems;</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIGS. <b>38</b>-<b>40</b></figref> are simplified flow diagrams of embodiments of at least one method of delivering no tour data;</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>41</b></figref> is a simplified block diagram illustrating cryptographic key provisioning during factor setup of an edge device; and</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>42</b></figref> is a simplified bloc diagram illustrating rolling cryptographic keys when an edge device is in the field.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0092" num="0091">Although the concepts of the present disclosure are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described herein in detail. It should be understood, however, that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives consistent with the present disclosure and the appended claims.</p><p id="p-0093" num="0092">References in the specification to &#x201c;one embodiment,&#x201d; &#x201c;an embodiment,&#x201d; &#x201c;an illustrative embodiment,&#x201d; etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may or may not necessarily include that particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. It should further be appreciated that although reference to a &#x201c;preferred&#x201d; component or feature may indicate the desirability of a particular component or feature with respect to an embodiment, the disclosure is not so limiting with respect to other embodiments, which may omit such a component or feature. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to implement such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described. Additionally, it should be appreciated that items included in a list in the form of &#x201c;at least one of A, B, and C&#x201d; can mean (A); (B); (C); (A and B); (B and C); (A and C); or (A, B, and C). Similarly, items listed in the form of &#x201c;at least one of A, B, or C&#x201d; can mean (A); (B); (C); (A and B); (B and C); (A and C); or (A, B, and C). Further, with respect to the claims, the use of words and phrases such as &#x201c;a,&#x201d; &#x201c;an,&#x201d; &#x201c;at least one,&#x201d; and/or &#x201c;at least one portion&#x201d; should not be interpreted so as to be limiting to only one such element unless specifically stated to the contrary, and the use of phrases such as &#x201c;at least a portion&#x201d; and/or &#x201c;a portion&#x201d; should be interpreted as encompassing both embodiments including only a portion of such element and embodiments including the entirety of such element unless specifically stated to the contrary.</p><p id="p-0094" num="0093">The disclosed embodiments may, in some cases, be implemented in hardware, firmware, software, or a combination thereof. The disclosed embodiments may also be implemented as instructions carried by or stored on one or more transitory or non-transitory machine-readable (e.g., computer-readable) storage media, which may be read and executed by one or more processors. A machine-readable storage medium may be embodied as any storage device, mechanism, or other physical structure for storing or transmitting information in a form readable by a machine (e.g., a volatile or non-volatile memory, a media disc, or other media device).</p><p id="p-0095" num="0094">In the drawings, some structural or method features may be shown in specific arrangements and/or orderings. However, it should be appreciated that such specific arrangements and/or orderings may not be required. Rather, in some embodiments, such features may be arranged in a different manner and/or order than shown in the illustrative figures unless indicated to the contrary. Additionally, the inclusion of a structural or method feature in a particular figure is not meant to imply that such feature is required in all embodiments and, in some embodiments, may not be included or may be combined with other features.</p><p id="p-0096" num="0095">The terms longitudinal, lateral, and transverse may be used to denote motion or spacing along three mutually perpendicular axes, wherein each of the axes defines two opposite directions. The directions defined by each axis may also be referred to as positive and negative directions. Additionally, the descriptions that follow may refer to the directions defined by the axes with specific reference to the orientations illustrated in the figures. For example, the directions may be referred to as distal/proximal, left/right, and/or up/down. It should be appreciated that such terms may be used simply for ease and convenience of description and, therefore, used without limiting the orientation of the system with respect to the environment unless stated expressly to the contrary. For example, descriptions that reference a longitudinal direction may be equally applicable to a vertical direction, a horizontal direction, or an off-axis orientation with respect to the environment. Furthermore, motion or spacing along a direction defined by one of the axes need not preclude motion or spacing along a direction defined by another of the axes. For example, elements described as being &#x201c;laterally offset&#x201d; from one another may also be offset in the longitudinal and/or transverse directions, or may be aligned in the longitudinal and/or transverse directions. The terms are therefore not to be construed as further limiting the scope of the subject matter described herein.</p><p id="p-0097" num="0096">Referring now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in the illustrative embodiment, an access control system <b>100</b> for using a wireless access credential includes a credential management system <b>102</b>, a credential tracking system <b>104</b>, a credential ordering system <b>106</b>, a key management system <b>108</b>, an administrative system <b>110</b>, a mobile access hub <b>112</b>, a mobile device <b>114</b>, and an access control edge system <b>116</b>. Additionally, as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the access control edge system <b>116</b> may include one or more access control edge devices <b>118</b> (e.g., a reader device <b>130</b>, a lock device <b>132</b>), an access controller <b>134</b>, and/or a gateway device <b>136</b> depending on the particular embodiment.</p><p id="p-0098" num="0097">As described in detail below, the illustrative access control system <b>100</b> leverages wireless access credentials (e.g., Bluetooth or Bluetooth Low Energy (BLE) access credentials) to allow a user to securely gain access to a secured area (e.g., through a door or other passageway) using his or her mobile device <b>114</b> even when the mobile device <b>114</b> is offline. That is, the credentialed mobile device <b>114</b> may permit access without leveraging a real-time connection to the credential management system <b>102</b>, the administrative system <b>110</b>, and/or other credential management devices and systems. In some embodiments, the wireless access credentials may be delivered to the edge device <b>118</b> via a Bluetooth or, more specifically, a BLE communication connection. As such, it should be appreciated that the wireless access credential may be referred to, for example, as a Bluetooth access credential or a BLE access credential. In some embodiments, once decrypted, the wireless access credentials may be in the same format as traditional physical credentials, which allows an existing access control system to process the wireless access credentials and grant/deny access without significant changes to the infrastructure. In the illustrative embodiment, the wireless access credentials are generated in a cloud-based computing environment (e.g., a cloud-based credential management system <b>102</b>) and delivered to end user mobile devices <b>114</b> (e.g., via a mobile access hub <b>112</b>). The mobile device <b>114</b> may execute a mobile application to deliver the wireless access credential to a lock device <b>132</b>, reader device <b>130</b>, and/or other edge device <b>118</b>. Additionally, in the illustrative embodiment, the lock device <b>132</b>, reader device <b>130</b>, and/or other edge device <b>118</b> may establish and simultaneously maintain multiple Bluetooth (e.g., BLE) wireless communication connections. For example, in some embodiments, the edge device <b>118</b> may be persistently connected to a gateway device <b>136</b> while simultaneously receiving a BLE access credential from a mobile device <b>114</b>. Accordingly, in embodiments that permit multiple simultaneous persistent connections, it is generally unnecessary to periodically break an existing connection in order to establish a connection with another BLE device. It should be appreciated that, in some embodiments, the access control system <b>100</b> allows for the use of a near field communication (NFC) access credential and a BLE access credential via the same mobile application on a mobile device <b>114</b>. In some embodiments, the BLE wireless communications established by the various devices of the access control system <b>100</b> may be compliant with Bluetooth Core Specification Version <b>4</b>.<b>2</b> or newer.</p><p id="p-0099" num="0098">As described herein, various embodiments of the illustrative system <b>100</b> support improved security, support the authorized transferability of issued/existing credentials to a different mobile device <b>114</b> without the purchase of new credentials (e.g., when a using gets a new mobile device <b>114</b>), support the ability of devices (e.g., edge devices <b>118</b>) to have multiple simultaneous and persistent BLE connections, support multiple mobile credential technologies in the same mobile application (e.g., BLE and NFC), support multiple credentials on a single mobile device <b>114</b> within the same mobile application (e.g., work credential, gym credential, home credential, etc.), provide for onboarding a mobile device <b>114</b> via a user's mobile line number (e.g., even with iOS devices), allow for the revocation and/or expiration of credentials on the mobile device <b>114</b> (e.g., for convenience and increased procedural security), allow &#x201c;no tour&#x201d; functionality via a BLE credential (e.g., to add user access rights to a lock device <b>132</b> without an administrator touring the door and/or using a card), prevent copying of a credential for use on a different mobile device <b>114</b>, support a secondary credential via the mobile device <b>114</b> (e.g., using a PIN without a keypad on the edge device <b>118</b>), use a cryptography chipset to enhance security and performance, support the ability to roll BLE credential keys in the field securely, and/or support integration with other access control systems and domains (e.g., via the mobile access hub <b>112</b>). In some embodiments, the illustrative system <b>100</b> further supports openness by virtue of the availability of the corresponding software development kit(s) (SDKs) and application programming interface(s) (APIs). As such, the credentials may be embedded with OEM partner applications, thereby allowing the OEM partner to leverage the credentials in a custom manner. For example, if a university has created its own application for students, the university could add the credential into that application and use it for access instead of having them use a secondary application for access control. The illustrative system <b>100</b> is also amendable to subscription based credential issuance models.</p><p id="p-0100" num="0099">It should be appreciated that each of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, the mobile access hub <b>112</b>, the mobile device <b>114</b>, the edge system <b>116</b>, the edge device(s) <b>118</b>, the reader device <b>130</b>, the lock device <b>132</b>, the access controller <b>134</b>, and the gateway device <b>136</b> may be embodied as any type of device or collection of devices suitable for performing the functions described herein. More specifically, in the illustrative embodiment, the credential management system <b>102</b> is configured to manage the issuance of wireless access credentials, provide support for channel partners, and otherwise perform the functions described herein. As depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in some embodiments, the credential management system <b>102</b> includes, serves, or otherwise interfaces with a web application <b>120</b> and one or more APIs for interaction with other devices and/or systems. For example, in the illustrative embodiment, the credential management system <b>102</b> includes an administrative API <b>122</b> for interacting with the administrative system <b>110</b> and/or site/facility administrators and a credential API <b>124</b> for interacting with the mobile access hub <b>112</b> for exchanging credential data and/or related information. In some embodiments, the credential management system <b>102</b> is configured to communicate and/or interact with the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and the mobile access hub <b>112</b>. For example, as described below, the credential management system <b>102</b> may encrypt and issue a new wireless/mobile access credential (e.g., a BLE credential and/or NFC credential) to a user or mobile device in response to a new credential order from the credential ordering system <b>106</b> and a credential request from the administrative system <b>110</b>. The credential management system <b>102</b> may also coordinate with the credential tracking system <b>104</b> to ensure that the credential value of the issued credential is not duplicative of another issued credential.</p><p id="p-0101" num="0100">The credential tracking system <b>104</b> provides additional security to the access control system <b>100</b> by tracking credential values (e.g., credential &#x201c;card&#x201d; numbers) that are issued to ensure that the credential values are not duplicated. In some embodiments, the credential tracking system <b>104</b> ensures that credential values are not duplicated across a particular site, whereas in other embodiments, the credential tracking system <b>104</b> ensures that credential values are not duplicated across all credential values ever used. For example, the credential value may be composed of the facility/site code and a unique credential/badge value. As such, in some embodiments, the credential tracking system <b>104</b> ensures that the entire credential value is unique, whereas in other embodiments the credential tracking system <b>104</b> ensures that credential/badge value is unique. Such differences may be based, for example, on the bit format of the particular credential.</p><p id="p-0102" num="0101">The credential ordering system <b>106</b> processes orders of credentials placed by a customer such as, for example, an original equipment manufacturer (OEM), systems integrator, wholesaler, locksmith, or other relevant party. In particular, a customer may submit a purchase order for BLE credentials via the credential ordering system <b>106</b>, which interfaces with the credential management system <b>102</b> to populate credential credits in the credential management system <b>102</b> indicative of a number of credentials available to the customer for issuance to users (e.g., one credential credit equaling one wireless access credential available for issuance). As such, it should be appreciated that upon issuance of a credential, the credential management system <b>102</b> reduces the number of credential credentials available for issuance of credentials. In some embodiments, the credential ordering system <b>106</b> may include or leverage an Oracle Application (e.g., Oracle Applications Release 11i, Oracle Documentation Library Release 12i, etc.) to perform one or more functions described herein.</p><p id="p-0103" num="0102">The key management system <b>108</b> is configured to securely store and control access to cryptographic keys and other secure data (e.g., credentials), and to perform cryptographic functions on behalf of the credential management system <b>102</b>. For example, as described in greater detail below, the key management system <b>108</b> may access an issued credential, generate a credential blob (e.g., a credential-bearing payload) including the credential and/or other relevant data, and encrypt the credential blob for transmittal to the credential management system <b>102</b>. In some embodiments, it should be appreciated that the key management system <b>108</b> may leverage or include an Azure Key Vault to perform various functions described herein (e.g., in cloud-based embodiments). In other embodiments, it should be appreciated that the key management system <b>108</b> may be omitted and/or form a portion of the credential management system <b>102</b>. It should be further appreciated that the monikers assigned herein to the various cryptographic keys are for readability and may vary in other embodiments without loss of generality. Additionally, the order and/or other organizational aspects of the data transmitted in payloads described herein may vary depending on the particular embodiment.</p><p id="p-0104" num="0103">The administrative system <b>110</b> includes one or more devices accessible to a site/facility administrator to perform various system administrative functions, maintenance functions, updates, and/or other suitable functions as described herein. In some embodiments, the site administrator may utilize the administrative system <b>110</b> to access the credential management system <b>102</b> (e.g., via the web application <b>120</b> or portal) to monitor various features associated with the access control system <b>100</b> including, for example, the number of credential credits available for distribution of credentials to end user's mobile devices <b>114</b>. Further, the administrative system <b>110</b> may be used to request a new wireless access credential to be assigned/issued and transmitted to a mobile device <b>114</b> of an end user. For example, in some embodiments, the administrative system <b>110</b> may manually request the credential issuance via the web application <b>120</b>. In other embodiments, the administrative system <b>110</b> may be integrated with the credential management system <b>102</b> via the administrative API <b>122</b> such that the issuance of credentials may be automated. The administrative API <b>122</b> may further enable the administrative system <b>110</b> to simultaneously issue a credential to a user and add the user to the relevant access control database(s).</p><p id="p-0105" num="0104">In some embodiments, the administrative system <b>110</b> may be configured to manage credentials of the access control system <b>100</b> with respect to the access control database(s). For example, the administrative system <b>110</b> may be responsible for ensuring that the access control database has updated authorized credentials, whitelists, blacklists, device parameters, and/or other suitable data. Additionally, in some embodiments, the administrative system <b>110</b> may receive security data, audit data, raw sensor data, and/or other suitable data from various edge devices <b>118</b>.</p><p id="p-0106" num="0105">The mobile access hub <b>112</b> interfaces directly with the mobile device <b>114</b> of a user and also interfaces with the credential management system <b>102</b> via the credential API <b>124</b> to receive the user's credential(s) for transmittal to the mobile device <b>114</b> via the mobile application. Further, in some embodiments, the mobile access hub <b>112</b> is leveraged during the onboarding of a wireless access credential as described below. More specifically, the mobile access hub <b>112</b> may generate and transmit a deep link via Short Message Service (SMS) to the mobile device <b>114</b> at the mobile device number entered when the credential was issued to the user. As described below, the deep link may be configured to launch a mobile application on the mobile device <b>114</b> to securely receive the credential or, if the mobile application not accessible on the mobile device <b>114</b>, direct the user to the download location (e.g., an &#x201c;App store&#x201d;) to download the relevant mobile application. In other embodiments, the mobile access hub <b>112</b> may interface with Twilio and/or another suitable messaging service for generating and transmitting the appropriate messages to the mobile device <b>114</b>. Similarly, in some embodiments, the mobile access hub <b>112</b> may interface with Branch.IO and/or another suitable service for generating deep links. Further, in some embodiments, the messages may be transmitted to the mobile device <b>114</b> via email and/or another suitable communication mechanism. It should be appreciated that the mobile access hub <b>112</b> serves as an interface or hub between the credential management system <b>102</b> and mobile devices <b>114</b>. In some embodiments, the mobile access hub <b>112</b> may be configured to interface with the access control system <b>3400</b> and/or the access control system <b>3500</b> described below, for example, for the exchange of various data between the systems. Further, in some embodiments, the mobile access hub <b>112</b> may also interface with other systems of the access control system <b>100</b> not described herein for brevity of the description.</p><p id="p-0107" num="0106">As described herein, in some embodiments, the mobile access hub <b>112</b> is responsible for the onboarding of mobile devices <b>114</b>, the activation/expiration of credentials, revocation of credentials, and/or account recovery. It should be further appreciated that the mobile access hub <b>112</b> may also serve as an interface to other access control systems having different protocols, devices, control domains, and/or systems. For example, in some embodiments, the mobile device <b>114</b> may be configured to store multiple/dynamic credentials including a cryptographic bearer token (e.g., a cryptographic macaroon), and the mobile access hub <b>112</b> may serve as an interface between the mobile device <b>114</b> and a corresponding access control system such as the access control system <b>100</b> (or, more specifically, a cloud server thereof) for flexible access control over offline devices described in U.S. patent application Ser. No. 15/656,641, titled &#x201c;Leveraging Flexible Distributed Tokens in an Access Control System&#x201d; and filed on Jul. 21, 2017 (hereinafter the &#x201c;Leveraging Flexible Distributed Tokens&#x201d; application), the entirety of which is incorporated herein by reference. In some embodiments, the access control system <b>100</b> of the Leveraging Flexible Distributed Tokens application and the cloud server thereof may be embodied as a Schlage&#xae; Sense&#x2122; system and/or cloud server, respectively.</p><p id="p-0108" num="0107">The mobile device <b>114</b> may be embodied as a mobile computing device, cellular phone, smartphone, wearable computing device, personal digital assistant, Internet of Things (IoT) device, or other mobile device suitable for performing the functions described herein. As described herein, the mobile device <b>114</b> is configured to wirelessly communicate with the mobile access hub <b>112</b> and various edge devices <b>118</b> (e.g., lock devices <b>132</b>, reader devices <b>130</b>, etc.). In some embodiments, the mobile device <b>114</b> installs and executes a mobile application to securely communicate with the various devices of the access control system <b>100</b>. It should be appreciated that the mobile application may be embodied as any suitable application for performing the functions described herein. For example, in some embodiments, the mobile application is embodied as a smartphone application. In other embodiments, the application may serve (e.g., in part) as a client-side user interface for a web-based application or service (e.g., of the mobile access hub <b>112</b>). Further, it should be appreciated that, in some embodiments, the mobile application may be embodied as or otherwise include a software development kit (SDK), one or more libraries, and/or user interfaces.</p><p id="p-0109" num="0108">In some embodiments, the mobile application of the mobile device <b>114</b> can support both a BLE credential and a NFC credential within the same application. Further, in some embodiments, both credentials for a particular user or mobile number have the same credential value such that there's only one entry in the access control database to identify that user. In some embodiments, in use, the user may have an option to select to send a BLE credential to the edge device <b>118</b> or just tap the mobile device <b>114</b> to the edge device <b>118</b> (or, more specifically, the reader device <b>130</b>) such that a peer-to-peer connection is detected by the mobile device <b>114</b> and the mobile device <b>114</b> transmits the NFC credential to the edge device <b>118</b>. As such, in some embodiments, the mobile application can support newer BLE-only reader devices <b>130</b> in addition to older SMART technology reader devices <b>130</b> that support NFC. Further, if necessary (e.g., in high 2.4 GHz BLE frequency areas), NFC may be used as a backup to BLE. Also, the mobile device <b>114</b> may transmit a BLE credential in circumstances that previously may have required more user interaction (e.g., transmitting a BLE credential in parking garages without lowering the vehicle window). In other embodiments, it should be appreciated that BLE credential or the NFC credential may be selected based on the user intent, which may be determined according to any suitable technique. Depending on the particular embodiment, the mobile application may also support revocation or expiration of credentials, multiple credentials on the same mobile device <b>114</b>, and/or off-line use of the credential.</p><p id="p-0110" num="0109">The access control edge system <b>116</b> includes one or more access control edge devices <b>118</b> including, for example, a reader device <b>130</b> and/or a lock device <b>132</b>. Additionally, in some embodiments, the access control edge system <b>116</b> may further include one or more intermediate devices including, for example, an access controller <b>134</b> and/or a gateway device <b>136</b>. As described in greater detail below in reference to <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>29</b></figref> and, for example, in addition to the components described in reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, it should be appreciated that each of the access control edge devices <b>118</b> may include a BLE chipset <b>140</b>, a main chipset <b>142</b>, and a cryptography chipset <b>144</b>. In such embodiments, the BLE chipset <b>140</b> may be configured to transmit, receive, and/or process BLE communications. Further, the main chipset <b>142</b> may include a main/primary processor of the access control edge device <b>118</b>. Additionally, the cryptography chipset <b>144</b> may be configured to quickly and efficiently perform various cryptographic functions on behalf of the access control edge device <b>118</b>. It should be appreciated that, in some embodiments, each of the chipsets <b>140</b>, <b>142</b>, <b>144</b> may include or be otherwise embodied as one or more integrated circuits and/or other circuitry. Further, in some embodiments, the edge device <b>118</b> may include I<b>2</b>C and/or similar security between the main chipset <b>142</b> and the cryptography chipset <b>144</b>.</p><p id="p-0111" num="0110">It should be appreciated that the cryptography chipset <b>144</b> may be embodied as any integrated circuit(s) and/or other circuitry suitable for performing the functions described herein. However, in the illustrative embodiment, the cryptography chipset <b>144</b> is designed and structured to efficiency perform cryptographic functions based on Elliptical Curve Cryptography (ECC) including, for example, Elliptical Curve Diffie Hellman (ECDH), Elliptical Curve Digital Signature Algorithm (ECDSA), asymmetric (public/private) cryptographic key generation, and cryptographic key storage. In some embodiments, the cryptography chipset <b>144</b> is configured to perform ECDH and ECDSA calculations in fewer than two hundred milliseconds. Such efficiency improves battery performance and the overall user experience due to the credential being processed quickly. In some embodiments, the cryptography chipset <b>144</b> includes a set of cryptographic keys (W<b>1</b>, W<b>2</b>) that secures the writing of keys such that different cryptographic keys cannot be written to the cryptographic chipset <b>144</b> by another party after the cryptography chipset <b>144</b> has been factory provisioned. Additionally, in some embodiments, the cryptography chipset <b>144</b> includes some cryptographic keys that are designed to change/roll and others that do not. At least one configuration of cryptographic keys provisioned/stored to the cryptography chipset <b>144</b> is depicted in the chart <b>3300</b> of <figref idref="DRAWINGS">FIG. <b>33</b></figref>. As shown, the chart <b>3300</b> depicts specific keys and key pairs and the associated purpose of the key or key pair, and whether the key or key pair can be read, written, and/or rolled.</p><p id="p-0112" num="0111">The reader device <b>130</b> is configured to communicate with mobile devices <b>114</b> to receive wireless access credentials (e.g., Bluetooth or BLE credentials) that are processed in order to make a corresponding access control decision with respect to that mobile device <b>114</b>. As such, the reader device <b>130</b> includes Bluetooth and/or other suitable wireless communication circuitry. Additionally, in some embodiments, the reader device <b>130</b> may be further configured to read contactless credentials (e.g., via RFID or NFC) and/or contact credential presented to the reader device <b>130</b>.</p><p id="p-0113" num="0112">The lock device <b>132</b> includes an access control mechanism and is configured to control access through a passageway. For example, in some embodiments, the access control mechanism may be embodied as a lock mechanism configured to be positioned in a locked state in which access to the passageway is denied, or may be positioned in an unlocked state in which access to the passageway is permitted. In some embodiments, the lock mechanism includes a deadbolt, latch bolt, lever, and/or other mechanism adapted to move between the locked and unlocked state and otherwise perform the functions described herein. However, it should be appreciated that the access control mechanism may be embodied as any another mechanism suitable for controlling access through a passageway in other embodiments. In some embodiments, the lock device <b>132</b> may be embodied as an electronic lock including a reader device <b>130</b>, whereas in other embodiments, the lock device <b>132</b> may be separate from the reader device <b>130</b>.</p><p id="p-0114" num="0113">In some embodiments, the reader device <b>130</b> may be electrically coupled to an access controller <b>134</b> that analyzes the received credential data. For example, the reader device <b>130</b> may be embodied as an RS-485 reader or Wiegand reader. Further, in such embodiments, the access controller <b>134</b> may be electrically coupled to the lock device <b>132</b> such that the access controller <b>134</b> may instruct or signal (e.g., via a relay) the lock mechanism to permit/deny access through the barrier based on the access control decision. In some embodiments, the access controller <b>134</b> may be embodied as a &#x201c;peripheral&#x201d; controller in the sense that it is not integrated with an electronic lock. That is, in such embodiments, the access controller is not mounted on the door/barrier. Further, in other embodiments, the access controller <b>134</b> may be embodied as an access control panel.</p><p id="p-0115" num="0114">The gateway device <b>136</b> may serve as an interface between the access control edge device <b>118</b> (e.g., the reader device <b>130</b> and/or the lock device <b>132</b>) and the administrative system <b>110</b>. For example, in some embodiments, the gateway device <b>136</b> may communicate with the access control edge device <b>118</b> over a Wi-Fi Connection and/or a Bluetooth connection, and the gateway device <b>136</b> may, in turn, forward the communicated data to the relevant administrative system <b>110</b>, management server, and/or access control panel. For example, in some embodiments, the gateway device <b>136</b> may communicate with an access control panel over a serial communication link (e.g., using RS-485 standard communication), and/or the gateway device <b>136</b> may communicate with the administrative system <b>110</b> over a Wi-Fi connection, an Ethernet connection, or another wired/wireless communication connection (e.g., via the Internet).</p><p id="p-0116" num="0115">It should be appreciated that each of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, the mobile access hub <b>112</b>, the mobile device <b>114</b>, the access control edge system <b>116</b>, the access control edge devices <b>118</b>, the reader device <b>130</b>, the lock device <b>132</b>, the access controller <b>134</b>, and/or the gateway device <b>136</b> may be embodied as a computing device similar to the computing device <b>200</b> described below in reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For example, in the illustrative embodiment, each of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, the mobile access hub <b>112</b>, the mobile device <b>114</b>, the access control edge system <b>116</b>, the access control edge devices <b>118</b>, the reader device <b>130</b>, the lock device <b>132</b>, the access controller <b>134</b>, and the gateway device <b>136</b> includes a processing device <b>202</b> and a memory <b>206</b> having stored thereon operating logic <b>208</b> for execution by the processing device <b>202</b> for operation of the corresponding device.</p><p id="p-0117" num="0116">It should be appreciated that, although the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and the mobile access hub <b>112</b> are described herein as one or more computing devices outside of a cloud computing environment for simplicity of the description, in some embodiments, one or more of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> may be embodied as a cloud-based device or collection of devices. Accordingly, as depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each of those devices/systems may be referred to herein as one or more cloud servers <b>150</b>. For simplicity and without limiting the description, it should be appreciated that the one or more cloud servers <b>150</b> may be referred to herein in the singular (i.e., as the cloud server <b>150</b>). For further clarity, as indicated above, it should be appreciated that one or more of the servers referenced herein as a cloud server <b>150</b> may be embodied as a server or other type of computing device situated outside of a cloud computing environment (e.g., a distributed server system) in some embodiments unless expressly indicated to the contrary.</p><p id="p-0118" num="0117">Further, in cloud-based embodiments, one or both of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> may be embodied as a &#x201c;serverless&#x201d; or server-ambiguous computing solution, for example, that executes a plurality of instructions on-demand, contains logic to execute instructions only when prompted by a particular activity/trigger, and does not consume computing resources when not in use. That is, the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> may be embodied as a virtual computing environment residing &#x201c;on&#x201d; a computing system (e.g., a distributed network of devices) in which various virtual functions (e.g., Lamba functions, Azure functions, Google cloud functions, and/or other suitable virtual functions) may be executed corresponding with the functions of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> described herein. For example, when an event occurs (e.g., data is transferred for handling), the virtual computing environment may be communicated with (e.g., via a request to an API of the virtual computing environment), whereby the API may route the request to the correct virtual function (e.g., a particular server-ambiguous computing resource) based on a set of rules. As such, when a request for the transmission of particular data is made (e.g., via an appropriate interface to credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b>), the appropriate virtual function(s) may be executed to perform the actions before eliminating the instance of the virtual function(s).</p><p id="p-0119" num="0118">Although only one credential management system <b>102</b>, one credential tracking system <b>104</b>, one credential ordering system <b>106</b>, one key management system <b>108</b>, one administrative system <b>110</b>, one mobile access hub <b>112</b>, one mobile device <b>114</b>, one access control edge system <b>116</b>, one reader device <b>130</b>, one lock device <b>132</b>, one access controller <b>134</b>, and one gateway device <b>136</b> are shown in the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the system <b>100</b> may include multiple credential management systems <b>102</b>, credential tracking systems <b>104</b>, credential ordering systems <b>106</b>, key management systems <b>108</b>, administrative systems <b>110</b>, mobile access hubs <b>112</b>, mobile devices <b>114</b>, access control edge systems <b>116</b>, reader devices <b>130</b>, lock devices <b>132</b>, access controllers <b>134</b>, and/or gateway devices <b>136</b> in other embodiments. For example, as indicated above, the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> may be embodied as multiple servers in a cloud computing environment in some embodiments. Further, the mobile device <b>114</b> may communicate with multiple access control edge systems <b>116</b> at various points in time.</p><p id="p-0120" num="0119">It should be appreciated that, in some embodiments, one or more of the devices and/or systems of the access control system <b>100</b> may be omitted or divided into multiple devices/systems. Additionally, in some embodiments, one or more of the devices and/or systems of the access control system <b>100</b> may form a portion of another device/system such that the functions are performed therein. For example, in some embodiments, the key management system <b>108</b> may form a portion of the credential management system <b>102</b>.</p><p id="p-0121" num="0120">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a simplified block diagram of at least one embodiment of a computing device <b>200</b> is shown. The illustrative computing device <b>200</b> depicts at least one embodiment of a credential management system, a credential tracking system, a credential ordering system, a key management system, an administrative system, a mobile access hub, a mobile device, an access control edge system, an access control edge device, a reader device, a lock device, an access controller, and/or a gateway device that may be utilized in connection with the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, the mobile access hub <b>112</b>, the mobile device <b>114</b>, the access control edge system <b>116</b>, the access control edge devices <b>118</b>, the reader device <b>130</b>, the lock device <b>132</b>, the access controller <b>134</b>, and/or the gateway device <b>136</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Further, in some embodiments, the illustrative computing device <b>200</b> depicts at least one embodiment of the peripheral controller <b>3402</b>, the management server <b>3404</b>, the cloud server(s) <b>3406</b>, the mobile device <b>3408</b>, the mobile device <b>3410</b>, the gateway device <b>3412</b>, the credential enrollment reader <b>3414</b>, the RS-<b>485</b> reader <b>3416</b>, and/or the Wiegand reader <b>3418</b> illustrated in <figref idref="DRAWINGS">FIG. <b>34</b></figref> and/or the electronic lock <b>3502</b>, the management server <b>3504</b>, the cloud server(s) <b>3506</b>, the mobile device <b>3508</b>, the mobile device <b>3510</b>, the gateway device <b>3512</b>, and/or the credential enrollment reader <b>3514</b> illustrated in <figref idref="DRAWINGS">FIG. <b>35</b></figref>.</p><p id="p-0122" num="0121">Depending on the particular embodiment, computing device <b>200</b> may be embodied as a server, desktop computer, laptop computer, tablet computer, notebook, netbook, UltrabookTM, mobile computing device, cellular phone, smartphone, wearable computing device, personal digital assistant, Internet of Things (IoT) device, reader device, access control device, control panel, processing system, router, gateway, and/or any other computing, processing, and/or communication device capable of performing the functions described herein.</p><p id="p-0123" num="0122">The computing device <b>200</b> includes a processing device <b>202</b> that executes algorithms and/or processes data in accordance with operating logic <b>208</b>, an input/output device <b>204</b> that enables communication between the computing device <b>200</b> and one or more external devices <b>210</b>, and memory <b>206</b> which stores, for example, data received from the external device <b>210</b> via the input/output device <b>204</b>.</p><p id="p-0124" num="0123">The input/output device <b>204</b> allows the computing device <b>200</b> to communicate with the external device <b>210</b>. For example, the input/output device <b>204</b> may include a transceiver, a network adapter, a network card, an interface, one or more communication ports (e.g., a USB port, serial port, parallel port, an analog port, a digital port, VGA, DVI, HDMI, FireWire, CAT 5, or any other type of communication port or interface), and/or other communication circuitry. Communication circuitry may be configured to use any one or more communication technologies (e.g., wireless or wired communications) and associated protocols (e.g., Ethernet, Bluetooth&#xae;, Bluetooth Low Energy (BLE), Wi-Fi&#xae;, WiMAX, etc.) to effect such communication depending on the particular computing device <b>200</b>. The input/output device <b>204</b> may include hardware, software, and/or firmware suitable for performing the techniques described herein.</p><p id="p-0125" num="0124">The external device <b>210</b> may be any type of device that allows data to be inputted or outputted from the computing device <b>200</b>. For example, in various embodiments, the external device <b>210</b> may be embodied as an access control device, mobile device, management server, gateway device, and/or access control panel. Further, in some embodiments, the external device <b>210</b> may be embodied as another computing device, switch, diagnostic tool, controller, printer, display, alarm, peripheral device (e.g., keyboard, mouse, touch screen display, etc.), and/or any other computing, processing, and/or communication device capable of performing the functions described herein. Furthermore, in some embodiments, it should be appreciated that the external device <b>210</b> may be integrated into the computing device <b>200</b>.</p><p id="p-0126" num="0125">The processing device <b>202</b> may be embodied as any type of processor(s) capable of performing the functions described herein. In particular, the processing device <b>202</b> may be embodied as one or more single or multi-core processors, microcontrollers, or other processor or processing/controlling circuits. For example, in some embodiments, the processing device <b>202</b> may include or be embodied as an arithmetic logic unit (ALU), central processing unit (CPU), digital signal processor (DSP), and/or another suitable processor(s). The processing device <b>202</b> may be a programmable type, a dedicated hardwired state machine, or a combination thereof. Processing devices <b>202</b> with multiple processing units may utilize distributed, pipelined, and/or parallel processing in various embodiments. Further, the processing device <b>202</b> may be dedicated to performance of just the operations described herein, or may be utilized in one or more additional applications. In the illustrative embodiment, the processing device <b>202</b> is of a programmable variety that executes algorithms and/or processes data in accordance with operating logic <b>208</b> as defined by programming instructions (such as software or firmware) stored in memory <b>206</b>. Additionally or alternatively, the operating logic <b>208</b> for processing device <b>202</b> may be at least partially defined by hardwired logic or other hardware. Further, the processing device <b>202</b> may include one or more components of any type suitable to process the signals received from input/output device <b>204</b> or from other components or devices and to provide desired output signals. Such components may include digital circuitry, analog circuitry, or a combination thereof</p><p id="p-0127" num="0126">The memory <b>206</b> may be of one or more types of non-transitory computer-readable media, such as a solid-state memory, electromagnetic memory, optical memory, or a combination thereof. Furthermore, the memory <b>206</b> may be volatile and/or nonvolatile and, in some embodiments, some or all of the memory <b>206</b> may be of a portable variety, such as a disk, tape, memory stick, cartridge, and/or other suitable portable memory. In operation, the memory <b>206</b> may store various data and software used during operation of the computing device <b>200</b> such as operating systems, applications, programs, libraries, and drivers. It should be appreciated that the memory <b>206</b> may store data that is manipulated by the operating logic <b>208</b> of processing device <b>202</b>, such as, for example, data representative of signals received from and/or sent to the input/output device <b>204</b> in addition to or in lieu of storing programming instructions defining operating logic <b>208</b>. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the memory <b>206</b> may be included with the processing device <b>202</b> and/or coupled to the processing device <b>202</b> depending on the particular embodiment. For example, in some embodiments, the processing device <b>202</b>, the memory <b>206</b>, and/or other components of the computing device <b>200</b> may form a portion of a system-on-a-chip (SoC) and be incorporated on a single integrated circuit chip.</p><p id="p-0128" num="0127">In some embodiments, various components of the computing device <b>200</b> (e.g., the processing device <b>202</b> and the memory <b>206</b>) may be communicatively coupled via an input/output subsystem, which may be embodied as circuitry and/or components to facilitate input/output operations with the processing device <b>202</b>, the memory <b>206</b>, and other components of the computing device <b>200</b>. For example, the input/output subsystem may be embodied as, or otherwise include, memory controller hubs, input/output control hubs, firmware devices, communication links (i.e., point-to-point links, bus links, wires, cables, light guides, printed circuit board traces, etc.) and/or other components and subsystems to facilitate the input/output operations.</p><p id="p-0129" num="0128">The computing device <b>200</b> may include other or additional components, such as those commonly found in a typical computing device (e.g., various input/output devices and/or other components), in other embodiments. It should be further appreciated that one or more of the components of the computing device <b>200</b> described herein may be distributed across multiple computing devices. In other words, the techniques described herein may be employed by a computing system that includes one or more computing devices. Additionally, although only a single processing device <b>202</b>, I/O device <b>204</b>, and memory <b>206</b> are illustratively shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, it should be appreciated that a particular computing device <b>200</b> may include multiple processing devices <b>202</b>, I/O devices <b>204</b>, and/or memories <b>206</b> in other embodiments. Further, in some embodiments, more than one external device <b>210</b> may be in communication with the computing device <b>200</b>.</p><p id="p-0130" num="0129">As used herein, &#x201c;Bluetooth&#x201d; includes traditional Bluetooth Basic Rate/Enhanced Rate (BR/EDR) technology and Bluetooth Low Energy (BLE) technology and refers to one or more components, architectures, communication protocols, and/or other systems, structures, or processes defined by and/or compliant with one or more Bluetooth specifications, addendums, and/or supplements overseen by the Bluetooth Special Interest Group (SIG) including, for example, active, legacy, withdrawn, deprecated, and/or subsequently introduced Bluetooth Core Specifications (CSs) (Bluetooth CS Version 1.0B, Bluetooth CS Version 1.1, Bluetooth CS Version 1.2, Bluetooth CS Version 2.0+EDR, Bluetooth CS Version 2.1+EDR, Bluetooth CS Version 3.0+HS, Bluetooth CS Version 4.0, Bluetooth CS Version 4.1, Bluetooth CS Version 4.2, Bluetooth CS Version 5.0); active, legacy, withdrawn, deprecated, and/or subsequently introduced Bluetooth Core Specification Addendums (CSAs) (Bluetooth CSA Version 1, Bluetooth CSA Version 2, Bluetooth CSA Version 3, Bluetooth CSA Version 4, Bluetooth CSA Version 5, Bluetooth CSA Version 6); Bluetooth Core Specification Supplements (CSSs) (Bluetooth CSS Version 1, Bluetooth CSS Version 2, Bluetooth CSS Version 3, Bluetooth CSS Version 4, Bluetooth CSS Version 5, Bluetooth CSS Version 6, Bluetooth CSS Version 7); active, legacy, withdrawn, deprecated, and/or subsequently introduced Bluetooth Mesh Networking Specifications (Bluetooth Mesh Profile Specification 1.0, Bluetooth Mesh Model Specification 1.0, Bluetooth Mesh Device Properties 1.0); active, legacy, withdrawn, deprecated, and/or subsequently introduced Bluetooth Traditional Profile Specifications (3DSP, A2DP, AVRCP, BIP, BPP, CTN, DI, DUN, FTP, GAVDP, GNSS, GOEP, GPP, HCRP, HDP, HFP, HID, HSP, MAP, MPS, OPP, PAN, PBAP, SAP, SPP, SYNCH, VDP); active, legacy, withdrawn, deprecated, and/or subsequently introduced Bluetooth Protocol Specifications (AVCTP, AVDTP, BNEP, IrDA, MCAP, RFCOMM, 3WIRE, SD, TCP, UART, USB, WAPB); active, legacy, withdrawn, deprecated, and/or subsequently introduced Bluetooth Generic Attribute Profile (GATT) services, characteristics, declarations, descriptors, and profiles (ANP, ANS, AIOP, AIOS, BAS, BCS, BLP, BLS, BMS, CGMP, CGMS, CPP, CPS, CSCP, CSCS, CTS, DIS, ESP, ESS, FMP, FTMP, FTMS, GSS, GLP, GLS, HIDS, HOGP, HPS, HRP, HRS, HTP, HTS, IAS, IDP, IDS, IPS, IPSP, LLS, LNP, LNS, NDCS, OTP, OTS, PASP, PASS, PXP, PLXP, PLXS, RCP, RCS, RSCP, RSCS, TRUS, ScPP, ScPS, TDS, TIP, TPS, UDS, WSP, WSS); and/or other Bluetooth specifications, addendums, and/or supplements.</p><p id="p-0131" num="0130">Referring now to <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>8</b></figref>, simplified block diagrams illustrating various communication capabilities and use cases of the access control system <b>100</b> are shown. More specifically, <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>8</b></figref> illustrate communications between subsets of the various devices/systems of the access control device. That is, communication capabilities and use cases of subsystems <b>300</b>, <b>400</b>, <b>500</b>, <b>600</b>, <b>700</b>, <b>800</b> of the access control system <b>100</b> are shown. For example, referring now specifically to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the subsystem <b>300</b> includes a mobile device <b>114</b>, a reader device <b>130</b>, an access controller <b>134</b>, and a lock device <b>132</b>. In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the reader device <b>130</b> is embodied as a BLE-capable wall mount reader device that receives and processes the BLE access credential from the mobile device <b>114</b> and transmits the BLE access credential or a portion thereof to the access controller <b>134</b> (e.g., an access control panel) to perform the access control decision. The subsystem <b>300</b> may be considered to have employed a &#x201c;decision at host&#x201d; access control scheme, the &#x201c;host&#x201d; being the access control panel. As shown, in some embodiments, the reader device <b>130</b> may communicate with the access controller <b>134</b> via Wiegand communication lines, which are one-way communication with no feedback, or using the Open Supervised Device Protocol (OSDP), which is generally secure and allows feedback. Further, based on the access control decision, the access controller <b>134</b> may transmit a command or signal to the lock device <b>132</b>, for example, to unlock the lock mechanism.</p><p id="p-0132" num="0131">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the subsystem <b>400</b> includes a mobile device <b>114</b> and a lock device <b>132</b>. In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the lock device <b>132</b> is embodied as an electronic lock with BLE communication circuitry such that the lock device <b>132</b> receives and processes the BLE access credential from the mobile device <b>114</b>. Further, the illustrative lock device <b>132</b> is an offline battery-powered electronic lock that includes an internal access control database stored in an internal memory of the lock device <b>132</b> such that the lock device <b>132</b> can locally make an access control decision based on the BLE access credential. The subsystem <b>400</b> may be considered to have employed an offline, &#x201c;decision at door&#x201d; access control scheme. It should be appreciated that a lock device <b>132</b> is considered to be &#x201c;online&#x201d; if the lock device <b>132</b> has a real-time connection to the host (e.g., the administrative system <b>110</b>&#x2033;, whereas the lock device <b>132</b> is considered to &#x201c;offline&#x201d; if it does not. As such, offline devices may, for example, establish a communication connection with the host periodically or in response to an appropriate condition in some embodiments.</p><p id="p-0133" num="0132">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the subsystem <b>500</b> includes a mobile device <b>114</b>, a lock device <b>132</b>, a gateway device <b>136</b>, and an access controller <b>134</b>. In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the lock device <b>132</b> is embodied as an electronic lock with BLE communication circuitry such that the lock device <b>132</b> receives and processes the BLE access credential from the mobile device <b>114</b>. Further, the illustrative lock device <b>132</b> is an online electronic lock that transmits the received BLE credential, or a portion thereof, in real-time to the gateway device <b>136</b> via BLE communication, which in turn transmits the BLE credential, or a portion thereof, to the access controller <b>134</b> (e.g., an access control panel) to perform an access control decision. The subsystem <b>500</b> may be considered to have employed an online, &#x201c;decision at host&#x201d; access control scheme. In some embodiments, the gateway device <b>136</b> has a stable communication connection (e.g., an RSI-485 serial communication connection) to the access controller <b>134</b> for transmittal of the BLE credential and/or other relevant data.</p><p id="p-0134" num="0133">It should be appreciated that, in the illustrative subsystem <b>500</b>, the lock device <b>132</b> has a persistent connection to the gateway device <b>136</b> and the ability to simultaneously transmit BLE advertisements to BLE devices in the vicinity in order to establish a BLE connection with the mobile device <b>114</b> to receive the BLE credential. To do so, in the illustrative embodiment, the BLE chipset <b>140</b> of the lock device <b>132</b> leverages and/or is otherwise compliant with Bluetooth CS Version 4.2 or newer (i.e., subsequently introduced). In some embodiments, the lock device <b>132</b> is capable of establishing at least five simultaneously BLE connections. It should be appreciated that the BLE connection is &#x201c;persistent&#x201d; in the sense that the BLE connection disconnects fewer than ten times per day. In other embodiments, the BLE connection may not be so &#x201c;persistent&#x201d; but may nonetheless not disconnect periodically by design.</p><p id="p-0135" num="0134">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the subsystem <b>600</b> includes a mobile device <b>114</b>, a lock device <b>132</b>, a gateway device <b>136</b>, and a host system (e.g., an administrative system <b>110</b>). In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the lock device <b>132</b> is embodied as an electronic lock with BLE communication circuitry such that the lock device <b>132</b> receives and processes the BLE access credential from the mobile device <b>114</b>. Further, the illustrative lock device <b>132</b> is an online electronic lock that includes an internal access control database stored in an internal memory of the lock device <b>132</b> such that the lock device <b>132</b> can locally make an access control decision based on the BLE access credential. The subsystem <b>600</b> may be considered to have employed an online, &#x201c;decision at door&#x201d; access control scheme. It should be appreciated that, in the illustrative subsystem <b>600</b>, the lock device <b>132</b> has a persistent connection to the gateway device <b>136</b> such that the lock device <b>132</b> can receive real-time updates from the host server (e.g., the administrative system <b>110</b>) while being connected to one or more mobile devices <b>114</b>. As in the subsystem <b>500</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in the subsystem <b>600</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the BLE chipset <b>140</b> of the lock device <b>132</b> leverages and/or is otherwise compliant with Bluetooth CS Version 4.2 or newer (i.e., subsequently introduced). Further, in some embodiments, the gateway device <b>136</b> communicates with the host server (e.g., the administrative system <b>110</b>) via an Ethernet connection (e.g., via the Internet).</p><p id="p-0136" num="0135">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the subsystem <b>700</b> includes two mobile devices <b>114</b>, a reader device <b>130</b>, an access controller <b>134</b>, and a lock device <b>132</b>. In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the reader device <b>130</b> is embodied as a BLE-capable wall mount reader device that receives and processes BLE access credentials from the mobile devices <b>114</b> and transmits each of the BLE access credentials or a portion thereof to the access controller <b>134</b> (e.g., an access control panel) to perform the access control decision. The subsystem <b>300</b> may be considered to have employed a &#x201c;decision at host&#x201d; access control scheme, the &#x201c;host&#x201d; being the access control panel. As shown, in some embodiments, the reader device <b>130</b> may communicate with the access controller <b>134</b> via Wiegand communication lines or using OSDP. Further, based on the access control decision, the access controller <b>134</b> may transmit a command or signal to the lock device <b>132</b>, for example, to unlock the lock mechanism. As such, it should be appreciated that the subsystem <b>700</b> is similar to the subsystem <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. However, the reader device <b>130</b> of subsystem <b>700</b> is configured to establishing and simultaneously maintain multiple BLE communication connections with other devices (e.g., in conjunction with heavy use doors). In particular, the illustrative reader device <b>130</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref> is configured to establish a BLE communication connection with a first mobile device <b>114</b> and maintain that connection while simultaneously establishing and then maintaining a BLE communication connection with a second mobile device <b>114</b>. It should be appreciated that permitting multiple mobile devices <b>114</b> to connect to the reader device <b>130</b> simultaneously, the risk and effect of various malicious attacks such as a denial of service attack is significantly reduced.</p><p id="p-0137" num="0136">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the subsystem <b>800</b> includes a mobile device <b>114</b>, a lock device <b>132</b>, and an administrative device <b>802</b>. In some embodiments, the administrative device <b>802</b> may be embodied as a device similar to the mobile device <b>114</b> and/or another computing device similar to the computing device <b>200</b> described in reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Further, the administrative device <b>802</b> may form a portion of the administrative system <b>110</b>. In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the lock device <b>132</b> is embodied as an electronic lock with BLE communication circuitry such that the lock device <b>132</b> receives and processes the BLE access credential from the mobile device <b>114</b>. Further, in some embodiments, the illustrative lock device <b>132</b> may be an offline battery-powered electronic lock that includes an internal access control database stored in an internal memory of the lock device <b>132</b> such that the lock device <b>132</b> can locally make an access control decision based on the BLE access credential. Additionally, the lock device <b>132</b> may be configured to communicate with the administrative device <b>802</b> via the BLE communication circuitry such that the administrative device <b>802</b> may perform various administrative functions, maintenance functions, updates, and/or other suitable functions with respect to the lock device <b>132</b>. Similar to the reader device <b>130</b> of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the lock device <b>132</b> of <figref idref="DRAWINGS">FIG. <b>8</b></figref> is configured to simultaneously establish and maintain BLE communication connections with the mobile device <b>114</b> (e.g., a user mobile device) and the administrative device <b>802</b> such that an administrator application can be connected to the lock device <b>132</b>, and the lock device <b>132</b> can simultaneously advertise and connect with mobile devices <b>114</b> via BLE.</p><p id="p-0138" num="0137">Referring now to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an example of a data structure of a wireless access credential <b>900</b> is shown. In particular, the illustrative wireless access credential <b>900</b> (e.g., a BLE access credential) of <figref idref="DRAWINGS">FIG. <b>9</b></figref> is represented in Concise Binary Object Representation (CBOR) format or, more specifically, according to the RFC<b>7049</b> CBOR standard, with hexadecimal representations. In some embodiments, each of the payloads and/or encrypted payloads described below may be transmitted in this format. However, it should be appreciated that the example data structure of <figref idref="DRAWINGS">FIG. <b>9</b></figref> is shown by way of example, and the techniques described herein may be employed for different data representations and/or data structures.</p><p id="p-0139" num="0138">As shown, the illustrative wireless access credential <b>900</b> of <figref idref="DRAWINGS">FIG. <b>9</b></figref> includes various data fields. In particular, the wireless access credential <b>900</b> includes data <b>902</b>, <b>904</b>, <b>906</b>, <b>908</b>, <b>910</b>. In the illustrative embodiment, the data <b>902</b> is a tag that indicates the type of the data to follow. In particular, the data <b>902</b> (via &#x201c;<b>05</b>&#x201d;) indicates that the data is a credential value with a credential activation time and a credential expiration time. Other tags my include, for example, a nonce, public key(s), signature(s), key exchange data, a unique identifier (e.g., UUID), a PIN request, a PIN reply, key provisioning data (e.g., rolling keys), configuration data, firmware download, status reporting, error handling, reporting data, command information, and/or other suitable information. The data <b>904</b> indicates the type/length of the data. The data <b>906</b> indicates the credential bit format and, therefore, indicates (via &#x201c;1A&#x201d;) that the credential is in a 26-bit format. Further, the data <b>906</b> indicates the credential value, the data <b>908</b> indicates an activation time of the credential, and the data <b>910</b> indicates an expiration time of the credential. It should be appreciated that the activation and expiration times may be in any suitable format (e.g., date-time, etc.). It should be further appreciated that the number and types of the data fields may vary depending on the particular data and/or the particular embodiment.</p><p id="p-0140" num="0139">Referring now to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1000</b> for using a wireless access credential. It should be appreciated that the particular blocks of the method <b>1000</b> are illustrated by way of example, and such blocks may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. The illustrative method <b>1000</b> begins with block <b>1002</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref> in which the access control system <b>100</b> processes a wireless access credential order. More specifically, a customer may place an order for additional credentials via the credential ordering system <b>106</b> and/or the credential management system <b>102</b>. Further, in the illustrative embodiment, the credential management system <b>102</b> populates credential credits (commensurate with the number of credentials purchased) in the credential management system <b>102</b> indicative of a number of credentials available to the customer for issuance to users. Although often described throughout the description as BLE credentials or Bluetooth credentials, it should be appreciated that the techniques described herein may also be employed with respect to other types of wireless access credentials.</p><p id="p-0141" num="0140">In block <b>1004</b>, the access control system <b>100</b> receives a request for issuance of a credential and issues a credential to a user or the mobile device <b>114</b> of the user. In doing so, in block <b>1006</b>, the access control system <b>100</b> may ensure that the credential value of the credential being issued is unique and, in block <b>1008</b>, the access control system <b>100</b> may store credential data to an access control database (e.g., stored locally at the edge device <b>118</b> and/or remotely at the administrative system <b>110</b> or another suitable location). More specifically, in some embodiments, a site/facility administrator utilizes the administrative system <b>110</b> to access the credential management system <b>102</b> (e.g., via the web application <b>120</b> and/or administrative API <b>122</b>) to request a new wireless access credential to be assigned/issued and transmitted to a mobile device <b>114</b> of an end user. Further, the credential management system <b>102</b> may coordinate with the credential tracking system <b>104</b> to ensure that the credential value of the issued credential is not duplicative of another issued credential. As described above, in some embodiments, the administrative system <b>110</b> may manually request the credential issuance via the web application <b>120</b>, whereas in other embodiments, the administrative system <b>110</b> may be integrated with the credential management system <b>102</b> via the administrative API <b>122</b> such that the request for and issuance of credentials may be automated.</p><p id="p-0142" num="0141">In the illustrative embodiment, it should be appreciated that assigning/issuing the credential to a user further involves transmitting the issued credential and/or other relevant credential data to the administrative system <b>110</b>, which is, in turn, stored to the relevant access control database(s). It should be appreciated that the location of the access control database(s) may vary depending, for example, on the particular site's access control and network topologies. As such, in various embodiments, the access control database(s) may be located on the access control edge device <b>118</b>, access controller <b>134</b> (e.g., access control panel), host device (e.g., the administrative system <b>110</b>), a cloud-based system, and/or another suitable location. It should be appreciated that the access control database includes the credential, the assigned user (e.g., identified by mobile phone number), and/or other relevant credential data.</p><p id="p-0143" num="0142">In block <b>1010</b>, the access control system <b>100</b> transmits the issued credential to the appropriate mobile device <b>114</b>. The appropriate mobile device <b>114</b> may be identified, for example, based on the various communication protocols described herein. In some embodiments, the credential management system <b>102</b> transmits the credential to the mobile device <b>114</b> via the mobile access hub <b>112</b>. In particular, the credential management system <b>102</b> may leverage the credential API <b>124</b> to interface with and/or &#x201c;call&#x201d; the mobile access hub <b>112</b> requesting a message to be transmitted to the user's mobile device <b>114</b> (e.g., a text/SMS message). For example, the mobile access hub <b>112</b> may generate and transmit a deep link via SMS to the mobile device <b>114</b> at the mobile device number entered when the credential was issued to the user. In other embodiments, the mobile access hub <b>112</b> may interface with Twilio and/or another suitable messaging service for generating and transmitting the appropriate messages to the mobile device <b>114</b>. However, in other embodiments, the messages may be transmitted to the mobile device <b>114</b> via email and/or another suitable communication mechanism.</p><p id="p-0144" num="0143">After the mobile device <b>114</b> has received the issued credential, the mobile device <b>114</b> may transmit the credential to the access control edge device <b>118</b> to make an access control decision with respect to the mobile device <b>114</b> and, therefore, with respect to the user. As such, in block <b>1012</b>, the mobile device <b>114</b> transmits the credential to the edge device <b>118</b>. In some embodiments, it should be appreciated that the credential may be transmitted based on the user's express or implied intent to convey the credential to the edge device <b>118</b>. For example, in some embodiments, the credential is transmitted based on a user's selection on a graphical user interface of an option to transmit the credential, whereas in other embodiments, the credential may be transmitted based on sensor data, contextual information, and/or other relevant information. Accordingly, in block <b>1014</b>, the mobile device <b>114</b> may determine the user intent based on various factors/options as described herein. In block <b>1016</b>, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> makes an access control decision based on the credential and the access control database. For example, as described above, the edge device <b>118</b> itself or another device may perform the access control decision based, for example, on whether a &#x201c;decision at door&#x201d; or &#x201c;decision at host&#x201d; access control scheme is employed, among other factors.</p><p id="p-0145" num="0144">Although the blocks <b>1002</b>-<b>1016</b> are described in a relatively serial manner, it should be appreciated that various blocks of the method <b>1000</b> may be performed in parallel in some embodiments. It should be further appreciated that one or more of the features described in reference to the flow diagrams of <figref idref="DRAWINGS">FIGS. <b>11</b>-<b>29</b></figref> may be incorporated into the method <b>1000</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref> in some embodiments.</p><p id="p-0146" num="0145">Referring now to <figref idref="DRAWINGS">FIGS. <b>30</b>-<b>31</b></figref>, in some embodiments, the mobile device <b>114</b> may execute a mobile application that has a graphical user interface <b>3000</b> that allows the user to select a particular door/lock to indicate an intent to access that door, which causes the mobile device <b>114</b> to transmit the appropriate credential to the corresponding edge device <b>118</b>. As shown in <figref idref="DRAWINGS">FIGS. <b>30</b>-<b>31</b></figref>, the graphical user interface <b>3000</b> may include a cards tab <b>3002</b>, a doors tab <b>3004</b>, and a settings tab <b>3006</b>. In some embodiments, when selected, the cards tab <b>3002</b> provides the user with options to select various credential stored to the mobile device <b>114</b>. Depending on the particular embodiment, selection of a particular card may transmit the corresponding credential to the associated edge device <b>118</b>, open properties or settings associated with the corresponding credential, and/or perform other suitable functions. As shown in the illustrative embodiment of <figref idref="DRAWINGS">FIGS. <b>30</b>-<b>31</b></figref>, when the doors tab <b>3004</b> is selected, the graphical user interface <b>3000</b> further displays a recently used tab <b>3008</b> and an all doors tab <b>3010</b>. As shown in <figref idref="DRAWINGS">FIG. <b>30</b></figref>, when the recently used tab <b>3008</b> is selected, the illustrative graphical user interface <b>3000</b> identifies each of the doors that have been recently accessed. In other words, in some embodiments, the graphical user interface <b>300</b> identifies each door associated with an edge device <b>118</b> that has performed an access control decision or, alternatively, an access control decision associated with an authenticated credential. In some embodiments, door may be considered to have been &#x201c;recently used&#x201d; if the door is one of a certain number of most recently used doors and/or used within a certain period of time. Such number and/or time may vary depending on the particular embodiment. In some embodiments, the graphical user interface <b>3000</b> may identify the state of each door including, for example, whether the door is unlocked (as depicted by indicia <b>3012</b>) or locked (as depicted by indicia <b>3014</b>). As shown in <figref idref="DRAWINGS">FIG. <b>31</b></figref>, when the all doors tab <b>3010</b> is selected, the illustrative graphical user interface <b>3000</b> identifies each of the doors within range of the mobile device <b>114</b> than can accept a wireless access credential (e.g., a BLE access credential). In some embodiments, in order to identify the devices that support a BLE access credential, a new BLE generic attribute (GATT) service may be defined such that the mobile application of the mobile device <b>114</b> can identify via the advertising data of the nearby BLE devices whether each nearby device supports the BLE access credential. Accordingly, the list of doors that the graphical user interface <b>3000</b> displays may be significantly reduced. However, in other embodiments, the graphical user interface <b>3000</b> may display every door within range of the mobile device <b>114</b>.</p><p id="p-0147" num="0146">It should be appreciated that the mobile device <b>114</b> may employ one or more other user intent options in other embodiments. Further, the user intent options may vary by the amount of user interaction required to convey the user intent and, in some embodiments, may be configurable by the site administrator (e.g., via the administrative system <b>110</b>). In some embodiments, a graphical user interface (e.g., similar to the graphical user interface <b>3000</b>) may provide the user with one or more user intent options to select for each of the edge devices <b>118</b> accessible to the user. It should be appreciated that such user intent options may be permitted at the discretion of the site administrator in some embodiments. For example, a site administrator may permit more relaxed user intent options for an interior door housing nothing secure, whereas the site administrator may permit only more strict user intent options (e.g., express selections of the door) for an exterior door or an interior door securing critical infrastructure.</p><p id="p-0148" num="0147">In some embodiments, the user intent may be conveyed without user interaction. In particular, the access control system <b>100</b> may engage in triangulation (e.g., between BLE edge devices <b>118</b>) and/or leverage GPS circuitry to determine the location of the mobile device <b>114</b>. In such embodiments, the mobile device <b>114</b> may transmit the credential (or alternatively, the edge device <b>118</b> may only process the received credential) when the mobile device <b>114</b> is moving toward the edge device <b>118</b> and on the proper side of the edge device <b>118</b> (e.g., corresponding with an exterior side of the door). In other embodiments, the mobile device <b>114</b> may transmit the credential to the nearest edge device <b>118</b> based on the location data. In another embodiment, the user may convey an intent to access by walking up to the door (and therefore the corresponding edge device <b>118</b>) and stopping instead of walking by. It should be appreciated that the mobile device <b>114</b> and/or the edge device <b>118</b> may leverage received signal strength (e.g., signal strength indication (RSSI) values) or time of flight data to determine the distance of the mobile device <b>114</b> relative to the edge device <b>118</b> in some embodiments. Further, in some embodiments, the mobile device <b>114</b> may automatically transmit the credential to the edge device <b>118</b> when the mobile device <b>114</b> is within a predetermined distance of the edge device <b>118</b> or other reference device/component (e.g., the door) such that the lock device <b>132</b> may be automatically unlocked.</p><p id="p-0149" num="0148">In other embodiments, the user intent may be conveyed with user interaction but without removing the mobile device <b>114</b> from safekeeping (e.g., without removing the mobile device <b>114</b> from the user's pocket, handbag, briefcase, etc.). For example, in some embodiments, the user may convey the intent by tapping the mobile device <b>114</b>. That is, when the mobile device <b>114</b> is within a close proximity to the edge device <b>118</b>, a tap on the mobile device <b>114</b> informs the mobile application to transmit the credential to the edge device <b>118</b>. It should be appreciated that the mobile device <b>114</b> may include and leverage an accelerometer and/or other inertial sensor(s) to perform such functions. In other embodiments, the mobile device <b>114</b> may be embodied as, or otherwise include, a wearable device, and an indication appears on a display of the wearable device when the user is within range of an edge device <b>118</b>. A user's tap of the wearable device may be indicative of an intent to access the passageway secured by the edge device <b>118</b>. In some embodiments, the mobile device <b>114</b> may sense the tap via an inertial sensor, capacitive sensor, pressure sensor, and/or other suitable sensor. For example, in various embodiments, the sensors leveraged by the mobile device <b>114</b> to determine a user intent may include environmental sensors (e.g., temperature sensors, air pressure sensors, humidity sensors, light sensors, etc.), inertial sensors (accelerometers, gyroscopes, magnetometers, etc.), proximity sensors, optical sensors, electromagnetic sensors, audio sensors (e.g., microphones), motion sensors, cameras, piezoelectric sensors, pressure sensors, and/or other types of sensors.</p><p id="p-0150" num="0149">In yet other embodiments, the user intent may involve both user interaction and removal of the mobile device <b>114</b> from safekeeping (e.g., removing the moving device <b>114</b> from the user's pocket, handbag, briefcase, etc.). For example, in some embodiments, the near field communication (NFC) circuitry of the mobile device <b>114</b> may be used as an intent option to transmit a BLE credential (e.g., by tapping the mobile device <b>114</b> to the reader device <b>130</b>). Further, in some embodiments, the mobile device <b>114</b> may utilize a voice recognition system (e.g., via the mobile application, a system application, and/or another application) to determine the user's intent to transmit the credential to an edge device <b>118</b>. That is, the user may give an audible command to the mobile device <b>114</b> to do so.</p><p id="p-0151" num="0150">Referring now to <figref idref="DRAWINGS">FIGS. <b>11</b>-<b>29</b></figref>, various embodiments of methods for securely transmitting an access credential over a wireless communication connection or, in some embodiments, a BLE communication connection more specifically are shown. It should be appreciated that the illustrative methods of <figref idref="DRAWINGS">FIGS. <b>11</b>-<b>29</b></figref> leverage different security and encryption algorithms to secure the data across the wireless/BLE communication connection and/or while stored on specific devices in the access control system <b>100</b>. In some embodiments, it should be appreciated that if a particular verification, validation, authorization, and/or authentication fails, one or more devices of the access control system <b>100</b> may perform error handling procedures. For example, in some embodiments, the communication protocol may terminate. It should be appreciated that, in the illustrative methods of <figref idref="DRAWINGS">FIGS. <b>11</b>-<b>29</b></figref>, the edge device <b>118</b> need not have ever been pre-commissioned to communicate with the mobile device <b>114</b> and/or the mobile application thereof. That is, in some embodiments, the edge device <b>118</b> has no pre-shared information about the specific mobile device <b>114</b> prior to commencing communication with the mobile device <b>114</b>.</p><p id="p-0152" num="0151">Referring now to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1100</b> for storing a wireless access credential to the mobile device <b>114</b>. It should be appreciated that the particular flows of the method <b>1100</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. Additionally, it should be appreciated that, in the illustrative embodiment, the method <b>1100</b> may be executed in conjunction with and prior to the method <b>1200</b> of <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref>.</p><p id="p-0153" num="0152">As shown, the illustrative method <b>1100</b> involves one or more cloud servers <b>150</b> and a mobile device <b>114</b> (e.g., executing a mobile application as described herein). As indicated above, the cloud server(s) <b>150</b> may be referred to herein in the singular for simplicity. Further, the illustrative method <b>1100</b> assumes that a cryptographic key exchange has occurred such that the cloud server <b>150</b> and an edge device <b>118</b> (see, for example, <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref>) share two symmetric cryptographic keys, K and B. It should appreciated that the cloud server <b>150</b> and the edge device <b>118</b> may employ any suitable key exchange algorithm to do so. The illustrative method <b>1100</b> further assumes that the mobile device <b>114</b> has stored thereon another symmetric cryptographic key, A, which may be generated, for example, by the mobile device <b>114</b> in a trusted execution environment (TEE) or secure enclave in some embodiments. Additionally, the symmetric cryptographic keys may vary by type and/or length depending on the particular embodiment. For example, in the illustrative embodiment, the symmetric cryptographic keys, K, B, and A, are embodied as 256-bit Advanced Encryption Standard (AES) keys. In other embodiments, however, the symmetric cryptographic keys may be associated with another cryptographic algorithm such as, for example, Data Encryption Standard (DES), Triple DES, Blowfish, Twofish, Serpent, and/or another symmetric cryptographic algorithm. Similarly, the keys may be 128-bit keys, 512-bit keys, or another size in other embodiments (e.g., depending on the cryptographic algorithm). In some embodiments, the cryptographic keys are generated by the cloud server <b>150</b> and transmitted to the edge device <b>118</b>.</p><p id="p-0154" num="0153">The illustrative method <b>1100</b> begins with flow <b>1102</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref> in which the cloud server <b>150</b> and the mobile device <b>114</b> coordinate to assign a wireless access credential to a user (and therefore the mobile device <b>114</b> of that user) and verify the mobile device <b>114</b> (e.g., by confirming that the mobile number corresponds with the mobile device <b>114</b>). It should be appreciated that, in some embodiments, the access control system <b>100</b> may execute the method <b>2200</b> of <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref> to do so. Further, in some embodiments, the mobile device <b>114</b> may establish a Transport Layer Security (TLS) connection with the cloud server <b>150</b> and/or other devices with which the mobile device <b>114</b> communicates.</p><p id="p-0155" num="0154">In flow <b>1104</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential request including a device identifier (e.g., UUID) of the mobile device <b>114</b> and the symmetric cryptographic key, A, retrieved from a memory of the mobile device <b>114</b>. Further, in some embodiments, the credential request may identify the payload as a credential request (e.g., via a corresponding flag, CRED_REQ). As such, in some embodiments, the credential request may be represented as CRED_REQ&#x2225;device_ID&#x2225;A. It should be appreciated that the device identified (e.g., a UUID) may be tied to the mobile device <b>114</b> and may allow the edge device <b>118</b> to generate the information necessary to identify that the credential is correct any coming from the correct mobile device <b>114</b> as described below. In flow <b>1106</b>, the mobile device <b>114</b> transmits the credential request to the cloud server <b>150</b> (e.g., via a TLS connection).</p><p id="p-0156" num="0155">In flow <b>1108</b>, the cloud server <b>150</b> generates a shared cryptographic key, M, based on the symmetric cryptographic key, B, retrieved from a memory of the cloud server <b>150</b> and the unique identifier (e.g., UUID) received from the mobile device <b>114</b> with the credential request. As described below in reference to <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref>, it should be appreciated that the cryptographic key, M, is shared in the sense that the edge device <b>118</b> is able to independently derive the same cryptographic key based on the same data (i.e., the key, B, and the unique identifier). It should be appreciated that the shared cryptographic key, M, may be generated based on a key derivation function (KDF). More specifically, in the illustrative embodiment, the shared cryptographic key, M, is generated based on a HKDF, a key derivation function based on a hash-based message authentication code (HMAC). However, in other embodiments, the shared cryptographic key, M, may be otherwise generated.</p><p id="p-0157" num="0156">In flow <b>1110</b>, the cloud server <b>150</b> builds a credential blob including the credential to be transmitted to the mobile device <b>114</b> (i.e., the credential assigned to the mobile device <b>114</b> and the user) and the shared cryptographic key, M Further, in some embodiments, the credential blob may further include a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the credential blob may be represented as nonce&#x2225;credential&#x2225;A . In flow <b>1112</b>, the cloud server <b>150</b> encrypts the credential blob with the symmetric cryptographic key, K, and, in flow <b>1114</b>, the cloud server <b>150</b> generates a keyed hash of the encrypted credential blob using the same symmetric cryptographic key, K. In particular, in the illustrative embodiment, the cloud server <b>150</b> generates an HMAC of the encrypted credential blob based on the symmetric cryptographic key, K (e.g., an HMAC-SHA256 keyed hash). However, it should be appreciated that another type of keyed hash may be generated in other embodiments.</p><p id="p-0158" num="0157">In flow <b>1116</b>, the cloud server <b>150</b> transmits the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;credential&#x2225;A)), the keyed hash of the encrypted credential blob (HMAC<sub>K</sub>), and the shared cryptographic key (M) to the mobile device <b>114</b>. In particular, in some embodiments, a payload including those data may be represented as E<sub>K </sub>(nonce&#x2225;credential&#x2225;A)&#x2225;HMAC<sub>K</sub>&#x2225;M. In flow <b>1118</b>, the mobile device <b>114</b> stores each of the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;credential&#x2225;A)), the keyed hash of the encrypted credential blob (HMAC<sub>K</sub>), and the shared cryptographic key (M) to a memory of the mobile device <b>114</b>. As such, it should be appreciated that the mobile device <b>114</b> (and the mobile application) now has access to the shared cryptographic key (M), for example, to perform one or more cryptographic functions described below in reference to <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref>. Additionally, in the illustrative embodiment, the mobile device <b>114</b> now has a credential stored thereon that is tied to the mobile device <b>114</b>, but the mobile device <b>114</b> is unable to read the credential data due to the encryption. It should be appreciated that the memory of the mobile device <b>114</b> to which such data is stored is a secure memory in some embodiments.</p><p id="p-0159" num="0158">Although the flows <b>1102</b>-<b>1118</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1100</b> may be performed in parallel in some embodiments.</p><p id="p-0160" num="0159">Referring now to <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1200</b> for using a wireless access credential (e.g., a wireless access credential stored to the mobile device <b>114</b> according to the method <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). It should be appreciated that the particular flows of the method <b>1100</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. In some embodiments, the method <b>1200</b> of <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref> may be executed in conjunction with and subsequent to the method <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0161" num="0160">As shown, the illustrative method <b>1200</b> involves the mobile device <b>114</b> (e.g., the mobile device <b>114</b> described in reference to <figref idref="DRAWINGS">FIG. <b>11</b></figref>) and an edge device <b>118</b>. Also as described above in reference to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the illustrative method <b>1200</b> assumes that a cryptographic key exchange has occurred such that the cloud server <b>150</b> (see, for example, <figref idref="DRAWINGS">FIG. <b>11</b></figref>) and the edge device <b>118</b> share two symmetric cryptographic keys, K and B. Also, the mobile device <b>114</b> has stored thereon another symmetric cryptographic key, A. Further, in embodiments involving the method <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref> in conjunction with the method <b>1200</b> of <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref>, the mobile device <b>114</b> also has stored thereon the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;credential&#x2225;A)), the keyed hash of the encrypted credential blob (HMAC<sub>K</sub>), and the shared cryptographic key (M) after the execution of the method <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0162" num="0161">The illustrative method <b>1200</b> begins with flow <b>1202</b> of <figref idref="DRAWINGS">FIG. <b>12</b></figref> in which the mobile device <b>114</b> and the edge device <b>118</b> establish a Bluetooth communication session/connection with one another (e.g., a BLE <b>4</b>.<b>2</b> or newer connection). In doing so, the mobile device <b>114</b> and/or the edge device <b>118</b> may execute various Bluetooth-defined functions including, for example, getDevice( ), tryConnecting( ), onSuccess, tryDiscovering( ) and/or onServicesDiscovered( ) functions. In flow <b>1204</b>, the mobile deice <b>114</b> transmits the device identifier (e.g., UUID) of the mobile device <b>114</b> to the edge device <b>118</b> (e.g., in the clear).</p><p id="p-0163" num="0162">In flow <b>1206</b>, the edge device <b>118</b> generates the shared cryptographic key, M, based on the symmetric cryptographic key, B, and the device identifier (e.g., UUID). As described above in reference to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, in the illustrative embodiment, the cryptographic key, M, is shared in the sense that the edge device <b>118</b> is able to independently derive the same cryptographic key (e.g., based on the key, B, and the unique identifier) used by the cloud device <b>150</b> to previously generate the shared cryptographic key, M. It should be appreciated that the edge device <b>118</b> may use the same key derivation function and/or other key-generating function used by the cloud device <b>150</b> to previously generate the shared cryptographic key, M. As such, in the illustrative embodiment, the shared cryptographic key, M, is generated based on a HKDF.</p><p id="p-0164" num="0163">In flow <b>1208</b>, the edge device <b>118</b> encrypts credential request data with the shared cryptographic key, M In some embodiments, it should be appreciated that the credential request data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the encrypted credential request data may be represented as E<sub>M </sub>(requestData). In flow <b>1210</b>, the edge device <b>118</b> transmits the encrypted credential request data, E<sub>M </sub>(requestData), to the mobile device <b>114</b> via the established Bluetooth communication connection.</p><p id="p-0165" num="0164">In flow <b>1212</b>, the mobile device <b>114</b> decrypts the encrypted credential request data using the shared cryptographic key, M, retrieved from a memory of the mobile device <b>114</b> and, in flow <b>1214</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential message including the credential request data received from the edge device <b>118</b>, the encrypted credential blob retrieved from the memory of the mobile device <b>114</b>, and the keyed hash retrieved from the memory of the mobile device <b>114</b>. As such, in some embodiments, the credential message may be represented as requestDat E<sub>K </sub>(nonce&#x2225;credential&#x2225;A)&#x2225;HMAC<sub>K</sub>. In flow <b>1216</b>, the mobile device <b>114</b> encrypts the credential message with the shared cryptographic key, M, and in flow <b>1218</b>, the mobile device <b>114</b> generates a keyed hash of the encrypted credential message using the symmetric cryptographic key, A, retrieved from the memory of the mobile device <b>114</b>. In particular, in the illustrative embodiment, mobile device <b>114</b> generates an HMAC of the encrypted credential message based on the symmetric cryptographic key, A (e.g., an HMAC-SHA256 keyed hash). However, it should be appreciated that another type of keyed hash may be generated in other embodiments.</p><p id="p-0166" num="0165">In flow <b>1220</b>, the mobile device <b>114</b> transmits the encrypted credential message (E<sub>K </sub>(requestData&#x2225;E<sub>K </sub>(nonce&#x2225;credential&#x2225;A)&#x2225;HMAC<sub>K</sub>)) and the keyed hash (HMAC<sub>A</sub>) of the encrypted credential message to the edge device <b>118</b>. In flow <b>1222</b>, the edge device <b>118</b> decrypts the encrypted credential message using the shared cryptographic key, K, retrieved from the memory of the edge device <b>118</b>.</p><p id="p-0167" num="0166">In flow <b>1224</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the edge device <b>118</b> verifies the credential request data. For example, in embodiments in which the credential request data is a nonce, the edge device <b>118</b> may confirm that the nonce is the same as the nonce previously encrypted and transmitted to the mobile device <b>114</b> (see, for example, flows <b>1208</b>-<b>1210</b> of <figref idref="DRAWINGS">FIG. <b>12</b></figref>). In other embodiments, it should be appreciated that the edge device <b>118</b> may otherwise verify and/or validate the decrypted credential request data. In flow <b>1226</b>, the edge device <b>118</b> verifies the keyed hash (HIJAC<sub>K</sub>) of the encrypted credential blob (e.g., extracted from the decrypted credential message) using the symmetric cryptographic key, K, retrieved from the memory of the edge device <b>118</b>. In some embodiments, to do so, the edge device <b>118</b> generates a reference keyed hash (e.g., a reference HMAC) of the encrypted credential blob extracted from the decrypted credential message using the symmetric cryptographic key, K, and compares the reference keyed hash to the keyed hash (HMAC<sub>K</sub>) of the encrypted credential blob extracted from the decrypted credential message to confirm the keyed hashes match.</p><p id="p-0168" num="0167">In flow <b>1228</b>, the edge device <b>118</b> decrypts the encrypted credential blob using the symmetric cryptographic key, K, retrieved from the memory of the edge device <b>118</b> and, in block <b>1230</b>, the edge device <b>118</b> extracts the credential and the symmetric cryptographic key, A, from the decrypted credential blob. It should be appreciated that, in the illustrative embodiment, the edge device <b>118</b> and the cloud server <b>150</b> are capable of encrypting/decrypting the credential blob including the credential, whereas the mobile device <b>114</b> is not. Instead, in such embodiments, the mobile device <b>114</b> acts as a conduit for the secure transfer of the credential between the cloud server <b>150</b> and the edge device <b>118</b>.</p><p id="p-0169" num="0168">In flow <b>1232</b>, the edge device <b>118</b> verifies the keyed hash (HMAC<sub>A</sub>) of the encrypted credential message using the symmetric cryptographic key, A, extracted from the credential blob. In some embodiments, to do so, the edge device <b>118</b> generates a reference keyed hash (e.g., a reference HMAC) of the encrypted credential message received from the mobile device <b>114</b> using the symmetric cryptographic key, K, and compares the reference keyed hash to the keyed hash (HMAC<sub>A</sub>) of the encrypted credential received from the mobile device <b>114</b> to confirm the keyed hashes match.</p><p id="p-0170" num="0169">In flow <b>1234</b>, the edge device <b>118</b> processes the credential extracted from the credential blob. For example, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may make an access control decision based on the extracted credential and an access control database. As described above, the edge device <b>118</b> itself or another device (e.g., the administrative system <b>110</b>, the access controller <b>134</b>, etc.) may perform the access control decision based, for example, on whether a &#x201c;decision at door&#x201d; or &#x201c;decision at host&#x201d; access control scheme is employed, among other factors. Further, in some embodiments, in response to successful authentication of the credential, the lock device <b>132</b> may unlock a lock mechanism as described above. In some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential. For example, in some embodiments, the method <b>1400</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref> may be executed to process a PIN of the user. In other embodiments, the user may be required to comply with a multi-factor authentication protocol requiring, for example, facial identification, thumb print, other biometrics, voice recognition, gestures, and/or additional information. It should be appreciated that, in some embodiments, the credential value and/or other portion of the credential may include an indicator that further authentication is required.</p><p id="p-0171" num="0170">Although the flows <b>1202</b>-<b>1236</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1200</b> may be performed in parallel in some embodiments.</p><p id="p-0172" num="0171">Referring now to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1400</b> for further authenticating a user of the mobile device <b>114</b>. It should be appreciated that the particular flows of the method <b>1400</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary.</p><p id="p-0173" num="0172">The illustrative method <b>1400</b> begins with flow <b>1402</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref> in which the edge device <b>118</b> encrypts PIN request data with the shared cryptographic key, M In some embodiments, it should be appreciated that the PIN request data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the encrypted PIN request data may be represented as E<sub>M </sub>(requestPIN). In flow <b>1404</b>, the edge device <b>118</b> transmits the encrypted PIN request data, E<sub>M </sub>(requestPIN), to the mobile device <b>114</b>.</p><p id="p-0174" num="0173">In flow <b>1406</b>, the mobile device <b>114</b> decrypts the encrypted PIN request data using the shared cryptographic key, M, retrieved from a memory of the mobile device <b>114</b>. In flow <b>1408</b>, mobile device <b>114</b> processes the PIN request and receives a PIN from the user. For example, in some embodiments, the mobile device <b>144</b> may present a request to the user for an input of a PIN value via a graphical user interface of the mobile application and receive the user's PIN input. Although the authentication data is described herein as a PIN or PIN value, it should be appreciated that the authentication data requested may vary depending on the particular embodiment. Further, in embodiments involving a PIN, the PIN may or may not be alphanumeric depending on the particular embodiment. Additionally, in some embodiments, the pin request and corresponding PIN may constitute a request and response for multiple data (e.g., in embodiments involving multifactor authentication).</p><p id="p-0175" num="0174">In flow <b>1410</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a PIN response including the PIN value received from the user and the decrypted PIN request data. As such, in some embodiments, the PIN response may be represented as requestPlN&#x2225;PIN . In flow <b>1412</b>, the mobile device <b>114</b> encrypts the PIN response with the shared cryptographic key, M, and in flow <b>1414</b>, the mobile device <b>114</b> generates a keyed hash of the encrypted PIN request using the symmetric cryptographic key, A, retrieved from the memory of the mobile device <b>114</b>. In particular, in the illustrative embodiment, mobile device <b>114</b> generates an HMAC of the encrypted PIN request based on the symmetric cryptographic key, A (e.g., an HMAC-SHA<b>256</b> keyed hash). However, it should be appreciated that another type of keyed hash may be generated in other embodiments.</p><p id="p-0176" num="0175">In flow <b>1416</b>, the mobile device <b>114</b> transmits the encrypted PIN response (E<sub>M </sub>(requestPlN&#x2225;PIN)) and the keyed hash (HMAC<sub>A</sub>) of the encrypted PIN response to the edge device <b>118</b>. In flow <b>1418</b>, the edge device <b>118</b> verifies the keyed hash of the encrypted PIN request using the symmetric cryptographic key, A, retrieved from the memory of the edge device <b>118</b> (e.g., subsequently extracted from the decrypted credential blob as described above). In some embodiments, to do so, the edge device <b>118</b> generates a reference keyed hash (e.g., a reference HMAC) of the encrypted PIN response using the symmetric cryptographic key, A, and compares the reference keyed hash to the keyed hash (HMAC<sub>A</sub>) received from the mobile device <b>114</b> to confirm the keyed hashes match. In flow <b>1420</b>, the edge device <b>118</b> decrypts the encrypted PIN response using the shared cryptographic key, M, to extract the PIN request data and the user-provided PIN.</p><p id="p-0177" num="0176">In flow <b>1422</b>, the edge device <b>118</b> verifies the PIN request data. For example, in embodiments in which the PIN request data is a nonce, the edge device <b>118</b> may confirm that the nonce is the same as the nonce previously encrypted and transmitted to the mobile device <b>114</b> (see, for example, flows <b>1402</b>-<b>1404</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref>). In other embodiments, it should be appreciated that the edge device <b>118</b> may otherwise verify and/or validate the decrypted PIN request data. In flow <b>1424</b>, the edge device <b>114</b> processes the user-provided PIN extracted from the decrypted PIN response. For example, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may include a reference PIN value in an access control database against which the user-provided PIN value is compared to determine if the PIN values match.</p><p id="p-0178" num="0177">Although the flows <b>1402</b>-<b>1424</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1400</b> may be performed in parallel in some embodiments.</p><p id="p-0179" num="0178">Referring now to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1500</b> for storing a wireless access credential to the mobile device <b>114</b>. It should be appreciated that the particular flows of the method <b>1500</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. Additionally, it should be appreciated that, in the illustrative embodiment, the method <b>1500</b> may be executed in conjunction with and prior to the method <b>1600</b> of <figref idref="DRAWINGS">FIGS. <b>16</b>-<b>17</b></figref>.</p><p id="p-0180" num="0179">As shown, the illustrative method <b>1500</b> involves one or more cloud servers <b>150</b> and a mobile device <b>114</b> (e.g., executing a mobile application as described herein). As indicated above, the cloud server(s) <b>150</b> may be referred to herein in the singular for simplicity. Further, the illustrative method <b>1500</b> assumes that a cryptographic key exchange has occurred such that the cloud server <b>150</b> and an edge device <b>118</b> (see, for example, <figref idref="DRAWINGS">FIGS. <b>16</b>-<b>17</b></figref>) share a symmetric cryptographic key, K. It should appreciated that the cloud server <b>150</b> and the edge device <b>118</b> may employ any suitable key exchange algorithm to do so. Additionally, the symmetric cryptographic key, K, may vary by type and/or length depending on the particular embodiment. For example, in the illustrative embodiment, the symmetric cryptographic key, K, is embodied as 256-bit Advanced Encryption Standard (AES) keys. In other embodiments, however, the symmetric cryptographic keys may be associated with another cryptographic algorithm such as, for example, Data Encryption Standard (DES), Triple DES, Blowfish, Twofish, Serpent, and/or another symmetric cryptographic algorithm. Similarly, the key may be a 128-bit keys, 512-bit key, or another size in other embodiments (e.g., depending on the cryptographic algorithm). In some embodiments, the cryptographic key is generated by the cloud server <b>150</b> and transmitted to the edge device <b>118</b>.</p><p id="p-0181" num="0180">The illustrative method <b>1500</b> begins with flow <b>1502</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref> in which the cloud server <b>150</b> and the mobile device <b>114</b> coordinate to assign a wireless access credential to a user (and therefore the mobile device <b>114</b> of that user) and verify the mobile device <b>114</b> (e.g., by confirming that the mobile number corresponds with the mobile device <b>114</b>). It should be appreciated that, in some embodiments, the access control system <b>100</b> may execute the method <b>2200</b> of <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref> to do so. Further, in some embodiments, the mobile device <b>114</b> may establish a Transport Layer Security (TLS) connection with the cloud server <b>150</b> and/or other devices with which the mobile device <b>114</b> communicates.</p><p id="p-0182" num="0181">In flow <b>1504</b>, the mobile device <b>114</b> generates an asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, for storage to the mobile device <b>114</b> and use as described herein. It should be appreciated that they asymmetric cryptographic key pair and corresponding public/private keys may vary by type depending on the particular embodiment. For example, in the illustrative embodiment, the asymmetric cryptographic key pair is generated based on elliptical curve cryptography (ECC) based on the EC P256 curve. In other embodiments, the asymmetric cryptographic key pair may be associated with another suitable ECC curve. Further, in other embodiments, the asymmetric cryptographic key pair may be associated with another cryptographic algorithm such as, for example, Digital Signature Standard (DSS), Digital Signature Algorithm (DSA), Rivest-Shamir-Adleman (RSA), ElGamal, and/or another asymmetric cryptographic algorithm. Similarly, the public/private key sizes may vary depending, for example, on the particular algorithm employed. In some embodiments, the asymmetric cryptographic key pair may be generated and stored on the mobile device <b>114</b> in advance of the execution of the method <b>1500</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>. Further, it should be appreciated that the mobile device <b>114</b> may generate the asymmetric cryptographic key pair, (C,c), in a trusted execution environment (TEE) or secure enclave in some embodiments.</p><p id="p-0183" num="0182">In flow <b>1506</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential request including the public key, C, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. Further, in some embodiments, the credential request may identify the payload as a credential request (e.g., via a corresponding flag, CRED_REQ). As such, in some embodiments, the credential request may be represented as CRED_REQ&#x2225;C. In flow <b>1508</b>, the mobile device <b>114</b> cryptographically signs the credential request using the private key, c, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the credential request. In flow <b>1510</b>, the mobile device <b>114</b> transmits the signed credential request to the cloud server <b>150</b> (e.g., via a TLS connection). As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the credential request and the signature thereof to the cloud server <b>150</b>.</p><p id="p-0184" num="0183">In flow <b>1512</b>, the cloud server <b>150</b> extracts the public key, C, from the credential request received from the mobile device <b>114</b> and verifies the credential request signature using that public key. That is, the cloud server <b>150</b> verifies that the credential request was signed using the private key that corresponds with the public key, C. It should be appreciated that the cloud server <b>150</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment).</p><p id="p-0185" num="0184">In flow <b>1514</b>, the cloud server <b>150</b> builds a credential blob including the credential to be transmitted to the mobile device (i.e., the credential assigned to the mobile device <b>114</b> and the user) and the public key, C. Further, in some embodiments, the credential blob may further include a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the credential blob may be represented as nonce&#x2225;C&#x2225;credential . In flow <b>1516</b>, the cloud server <b>150</b> encrypts the credential blob with the symmetric cryptographic key, K, and, in flow <b>1518</b>, the cloud server <b>150</b> generates a keyed hash of the encrypted credential blob using the same symmetric cryptographic key, K. In particular, in the illustrative embodiment, the cloud server <b>150</b> generates an HMAC of the encrypted credential blob based on the symmetric cryptographic key, K (e.g., an HMAC-SHA256 keyed hash). However, it should be appreciated that another type of keyed hash may be generated in other embodiments.</p><p id="p-0186" num="0185">In flow <b>1520</b>, the cloud server <b>150</b> transmits the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the keyed hash of the encrypted credential blob to the mobile device <b>114</b>. In particular, in some embodiments, a payload including those data may be represented as E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)&#x2225;HMAC<sub>K </sub>. In flow <b>1522</b>, the mobile device <b>114</b> stores the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the keyed hash of the encrypted credential blob (HMAC<sub>K</sub>) to a memory of the mobile device <b>114</b>. As such, it should be appreciated that, in the illustrative embodiment, the mobile device <b>114</b> now has a credential stored thereon that is tied to the mobile device <b>114</b>, but the mobile device <b>114</b> is unable to read the credential data due to the encryption. It should be appreciated that, in some embodiments, the memory of the mobile device <b>114</b> to which such data is stored is a secure memory.</p><p id="p-0187" num="0186">Although the flows <b>1502</b>-<b>1522</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1500</b> may be performed in parallel in some embodiments.</p><p id="p-0188" num="0187">Referring now to <figref idref="DRAWINGS">FIGS. <b>16</b>-<b>17</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1600</b> for using a wireless access credential (e.g., a wireless access credential stored to the mobile device <b>114</b> according to the method <b>1500</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>). It should be appreciated that the particular flows of the method <b>1600</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. In some embodiments, the method <b>1600</b> of <figref idref="DRAWINGS">FIGS. <b>12</b>-<b>13</b></figref> may be executed in conjunction with and subsequent to the method <b>1500</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>.</p><p id="p-0189" num="0188">As shown, the illustrative method <b>1600</b> involves the mobile device <b>114</b> (e.g., the mobile device <b>114</b> described in reference to <figref idref="DRAWINGS">FIG. <b>15</b></figref>) and an edge device <b>118</b>. Also as described above in reference to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the illustrative method <b>1600</b> assumes that a cryptographic key exchange has occurred such that the cloud server <b>150</b> (see, for example, <figref idref="DRAWINGS">FIG. <b>15</b></figref>) and the edge device <b>118</b> share a symmetric cryptographic key, K. Also, the mobile device <b>114</b> has stored thereon the asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, described above. Further, in embodiments involving the method <b>1500</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref> in conjunction with the method <b>1600</b> of <figref idref="DRAWINGS">FIGS. <b>16</b>-<b>17</b></figref>, the mobile device <b>114</b> also has stored thereon the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the keyed hash of the encrypted credential blob (HMAC<sub>K</sub>) after the execution of the method <b>1500</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref>.</p><p id="p-0190" num="0189">The illustrative method <b>1600</b> begins with flow <b>1602</b> of <figref idref="DRAWINGS">FIG. <b>16</b></figref> in which the mobile device <b>114</b> and the edge device <b>118</b> establish a Bluetooth communication session/connection with one another (e.g., a BLE <b>4</b>.<b>2</b> or newer connection). In doing so, the mobile device <b>114</b> and/or the edge device <b>118</b> may execute various Bluetooth-defined functions including, for example, getDevice( ), tryConnecting( ), onSuccess, tryDiscovering( ) and/or onServicesDiscovered( ) functions. In flow <b>1604</b>, the mobile device <b>114</b> and the edge device <b>118</b> perform a secure key exchange to generate a shared cryptographic session key, s, separately at each of the mobile device <b>114</b> and the edge device <b>118</b>. In the illustrative embodiment, the session key, s, is generated based on Elliptical Curve Diffie-Hellman (ECDH). By using ECDH instead of HKDF to perform a key exchange, it should be appreciated that the shared cryptographic session key, s, is dynamic in the sense that the key is different every time the key is generated. As such, in some embodiments, each exchange may have a different session key. More specifically, in some embodiments, the mobile device <b>114</b> and the edge device <b>118</b> may execute a method similar to the method <b>2600</b> of <figref idref="DRAWINGS">FIG. <b>26</b></figref> to perform the secure key exchange. However, it should be appreciated that the session key, s, may be generated based on a different key derivation function and/or other suitable algorithm in other embodiments. Following the execution of the secure key exchange, each of the mobile device <b>114</b> and the edge device <b>118</b> has the same session key, s, stored thereon.</p><p id="p-0191" num="0190">In flow <b>1606</b>, the edge device <b>118</b> encrypts challenge data with the shared cryptographic session key, s. In some embodiments, it should be appreciated that the challenge data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the encrypted challenge data may be represented as E<sub>s </sub>(challenge). In flow <b>1608</b>, the edge device <b>118</b> transmits the encrypted challenge data, E <sub>s</sub>(challenge), to the mobile device <b>114</b> via the established Bluetooth communication connection.</p><p id="p-0192" num="0191">In flow <b>1610</b>, the mobile device <b>114</b> decrypts the encrypted challenge data using the shared cryptographic session key, s, retrieved from a memory of the mobile device <b>114</b> and, in flow <b>1612</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential message including the challenge data received from the edge device <b>118</b>, the encrypted credential blob retrieved from the memory of the mobile device <b>114</b>, and the keyed hash retrieved from the memory of the mobile device <b>114</b>. As such, in some embodiments, the credential message may be represented as challenge&#x2225;E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)&#x2225;HMAC<sub>K</sub>. In flow <b>1614</b>, the mobile device <b>114</b> encrypts the credential message with the shared cryptographic session key, s, and in flow <b>1616</b>, the mobile device <b>114</b> cryptographically signs the encrypted credential message using the private key, c, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature (cSig) of the encrypted credential message.</p><p id="p-0193" num="0192">In flow <b>1618</b>, the mobile device <b>114</b> transmits the signed credential message to the edge device <b>118</b>. As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the encrypted credential message and the signature thereof to the edge device <b>118</b>. In flow <b>1620</b>, the edge device <b>118</b> decrypts the encrypted credential message using the shared cryptographic session key, s, retrieved from the memory of the edge device <b>118</b>.</p><p id="p-0194" num="0193">In flow <b>1622</b> of <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the edge device <b>118</b> verifies the challenge data. For example, in embodiments in which the challenge data is a nonce, the edge device <b>118</b> may confirm that the nonce is the same as the nonce previously encrypted and transmitted to the mobile device <b>114</b> (see, for example, flows <b>1606</b>-<b>1608</b> of <figref idref="DRAWINGS">FIG. <b>16</b></figref>). In other embodiments, it should be appreciated that the edge device <b>118</b> may otherwise verify and/or validate the decrypted challenge data. In flow <b>1624</b>, the edge device <b>118</b> verifies the keyed hash (HMAC<sub>K</sub>) of the encrypted credential blob (e.g., extracted from the decrypted credential message) using the symmetric cryptographic key, K, retrieved from the memory of the edge device <b>118</b>. In some embodiments, to do so, the edge device <b>118</b> generates a reference keyed hash (e.g., a reference HMAC) of the encrypted credential blob extracted from the decrypted credential message using the symmetric cryptographic key, K, and compares the reference keyed hash to the keyed hash (HMAC<sub>K</sub>) of the encrypted credential blob extracted from the decrypted credential message to confirm the keyed hashes match.</p><p id="p-0195" num="0194">In flow <b>1626</b>, the edge device <b>118</b> decrypts the encrypted credential blob using the symmetric cryptographic key, K, retrieved from the memory of the edge device <b>118</b> and, in block <b>1628</b>, the edge device <b>118</b> extracts the credential and the public cryptographic key, C, from the decrypted credential blob. It should be appreciated that, in the illustrative embodiment, the edge device <b>118</b> and the cloud server <b>150</b> are capable of encrypting/decrypting the credential blob including the credential, whereas the mobile device <b>114</b> is not. Instead, in such embodiments, the mobile device <b>114</b> acts as a conduit for the secure transfer of the credential between the cloud server <b>150</b> and the edge device <b>118</b>. Further, in the illustrative embodiment, the public cryptographic key, C, is not directly transmitted from the mobile device <b>114</b> to the edge device <b>118</b>. As such, the public cryptographic key, C, may be leveraged to verify that the mobile device <b>114</b> that made the initial contact with the cloud server <b>150</b> is the same device that signed the payload (e.g., the encrypted credential message) toward the end of the communication sequence.</p><p id="p-0196" num="0195">In flow <b>1630</b>, the edge device <b>118</b> verifies the signature of the encrypted credential message using the public cryptographic key, C, extracted from the decrypted credential blob. That is, the edge device <b>118</b> verifies that the encrypted credential message was signed using the private key that corresponds with the public key, C. It should be appreciated that the edge device <b>118</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment).</p><p id="p-0197" num="0196">It should be appreciated that the credential payload (e.g., the encrypted credential blob) stored to the mobile device in flow <b>1522</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref> includes the public cryptographic key, C, that is associated with and stored on the mobile device <b>114</b> and provided to the mobile access hub <b>112</b> at onboarding. As such, when the credential message is subsequently delivered to the edge device <b>118</b> with the cryptographic signature (cSig) in flow <b>1618</b> of <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the public cryptographic key, C, verifies that the credential is associated with the same mobile device <b>114</b>. As such, in the illustrative embodiment, if the credential is copied to a different mobile device <b>114</b>, the verification of the cryptographic signature (cSig) will fail, because the cryptographic key pair (C, c) is unique for each mobile device <b>114</b>. In other words, the use of the cryptographic key pair (C, c) as described herein serves, for example, to prevent the unauthorized copying of a credential to a different mobile device <b>114</b>.</p><p id="p-0198" num="0197">In flow <b>1632</b>, the edge device <b>118</b> processes the credential extracted from the credential blob. It should be appreciated that the credential may be processed in a manner similar to that described in reference to flow <b>1234</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>. As such, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may make an access control decision based on the extracted credential and an access control database. Further, the edge device <b>118</b> itself or another device (e.g., the administrative system <b>110</b>, the access controller <b>134</b>, etc.) may perform the access control decision based on the particular embodiment. Further, in some embodiments, in response to successful authentication of the credential, the lock device <b>132</b> may unlock a lock mechanism as described above. In some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential. For example, in some embodiments, the method <b>1800</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref> may be executed to process a PIN of the user. In other embodiments, the user may be required to comply with a multi-factor authentication protocol requiring, for example, facial identification, thumb print, other biometrics, voice recognition, gestures, and/or additional information. It should be appreciated that, in some embodiments, the credential value and/or other portion of the credential may include an indicator that further authentication is required.</p><p id="p-0199" num="0198">Although the flows <b>1602</b>-<b>1632</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1600</b> may be performed in parallel in some embodiments.</p><p id="p-0200" num="0199">Referring now to <figref idref="DRAWINGS">FIG. <b>18</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1800</b> for further authenticating a user of the mobile device <b>114</b>. It should be appreciated that the particular flows of the method <b>1800</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. Although the techniques are generally described herein in reference to a PIN value, it should be appreciated that similar techniques may be employed with respect to other secondary credential/authentication data. For example, in some embodiments, facial identification, thumb print, other biometrics, voice recognition, gestures, and/or other relevant authentication data may be used in conjunction with the method <b>1800</b> and other techniques described herein.</p><p id="p-0201" num="0200">The illustrative method <b>1800</b> begins with flow <b>1802</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref> in which the edge device <b>118</b> encrypts PIN request data with the shared cryptographic session key, s. In some embodiments, it should be appreciated that the PIN request data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the encrypted PIN request data may be represented as E <sub>s</sub>(requestPIN). In flow <b>1804</b>, the edge device <b>118</b> transmits the encrypted PIN request data, E<sub>s </sub>(requestPIN), to the mobile device <b>114</b>.</p><p id="p-0202" num="0201">In flow <b>1806</b>, the mobile device <b>114</b> decrypts the encrypted PIN request data using the shared cryptographic session key, s, retrieved from a memory of the mobile device <b>114</b>. In flow <b>1808</b>, mobile device <b>114</b> processes the PIN request and receives a PIN from the user (e.g., in a manner similar to that described above in reference to the method <b>1400</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref>). For example, in some embodiments, the mobile device <b>144</b> may present a request to the user for an input of a PIN value via a graphical user interface of the mobile application and receive the user's PIN input. As indicated above, although the authentication data is described herein as a PIN or PIN value, it should be appreciated that the authentication data requested may vary (e.g., in type, source, format, etc.) depending on the particular embodiment.</p><p id="p-0203" num="0202">In flow <b>1810</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a PIN response including the PIN value received from the user and the decrypted PIN request data. As such, in some embodiments, the PIN response may be represented as requestPlN&#x2225;PIN . In flow <b>1812</b>, the mobile device <b>114</b> encrypts the PIN response with the shared cryptographic session key, s, and in flow <b>1814</b>, the mobile device <b>114</b> transmits the encrypted PIN response (E<sub>s</sub>(requestPIN&#x2225;PIN)) to the edge device <b>118</b>. It should be appreciated that, in some embodiments, the mobile device <b>114</b> may further generate a keyed hash of the encrypted PIN request (e.g., as in the method <b>1400</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref>) or otherwise convey data indicative of the integrity of the message.</p><p id="p-0204" num="0203">In flow <b>1816</b>, the edge device <b>118</b> decrypts the encrypted PIN response using the shared cryptographic session key, s, to extract the PIN request data and the user-provided PIN and, in flow <b>1818</b>, the edge device <b>118</b> verifies the PIN request data. For example, in embodiments in which the PIN request data is a nonce, the edge device <b>118</b> may confirm that the nonce is the same as the nonce previously encrypted and transmitted to the mobile device <b>114</b> (see, for example, flows <b>1802</b>-<b>1804</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref>). In other embodiments, it should be appreciated that the edge device <b>118</b> may otherwise verify and/or validate the decrypted PIN request data. In flow <b>1820</b>, the edge device <b>114</b> processes the user-provided PIN extracted from the decrypted PIN response (e.g., in a manner similar to that described in reference to the method <b>1400</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref> and/or otherwise described herein). For example, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may include a reference PIN value in an access control database against which the user-provided PIN value is compared to determine if the PIN values match.</p><p id="p-0205" num="0204">Although the flows <b>1802</b>-<b>1820</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1800</b> may be performed in parallel in some embodiments.</p><p id="p-0206" num="0205">Referring now to <figref idref="DRAWINGS">FIG. <b>19</b></figref>, in use, the access control system <b>100</b> may execute a method <b>1900</b> for storing a wireless access credential to the mobile device <b>114</b>. It should be appreciated that the particular flows of the method <b>1900</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. Additionally, it should be appreciated that, in the illustrative embodiment, the method <b>1900</b> may be executed in conjunction with and prior to the method <b>2000</b> of <figref idref="DRAWINGS">FIGS. <b>20</b>-<b>21</b></figref>.</p><p id="p-0207" num="0206">As shown, the illustrative method <b>1900</b> involves one or more cloud servers <b>150</b> and a mobile device <b>114</b> (e.g., executing a mobile application as described herein). As indicated above, the cloud server(s) <b>150</b> may be referred to herein in the singular for simplicity. Further, the illustrative method <b>1900</b> assumes that a cryptographic key exchange has occurred such that the cloud server <b>150</b> and an edge device <b>118</b> (see, for example, <figref idref="DRAWINGS">FIGS. <b>20</b>-<b>21</b></figref>) share a symmetric cryptographic key, K. It should appreciated that the cloud server <b>150</b> and the edge device <b>118</b> may employ any suitable key exchange algorithm to do so. Additionally, the symmetric cryptographic key, K, may vary by type and/or length depending on the particular embodiment. For example, in the illustrative embodiment, the symmetric cryptographic key, K, is embodied as <b>256</b>-bit Advanced Encryption Standard (AES) keys. In other embodiments, however, the symmetric cryptographic keys may be associated with another cryptographic algorithm such as, for example, Data Encryption Standard (DES), Triple DES, Blowfish, Twofish, Serpent, and/or another symmetric cryptographic algorithm. Similarly, the key may be a 128-bit keys, 512-bit key, or another size in other embodiments (e.g., depending on the cryptographic algorithm). In some embodiments, the cryptographic key is generated by the cloud server <b>150</b> and transmitted to the edge device <b>118</b>.</p><p id="p-0208" num="0207">It should also appreciated that the illustrative method <b>1900</b> further assumes that an asymmetric cryptographic key pair, (D, d), including a private cryptographic key, d, and a public cryptographic key, D, has been generated and stored to the cloud server <b>150</b>, and that the public cryptographic key, D, has been stored to the edge device <b>118</b> for use as described herein. It should be appreciated that they asymmetric cryptographic key pair, (D, d), and corresponding public/private keys may vary by type depending on the particular embodiment. For example, in the illustrative embodiment, the asymmetric cryptographic key pair, (D, d), is generated based on elliptical curve cryptography (ECC) based on the EC P256 curve. In other embodiments, the asymmetric cryptographic key pair may be associated with another suitable ECC curve. Further, in other embodiments, the asymmetric cryptographic key pair may be associated with another cryptographic algorithm such as, for example, Digital Signature Standard (DSS), Digital Signature Algorithm (DSA), Rivest-Shamir-Adleman (RSA), ElGamal, and/or another asymmetric cryptographic algorithm. Similarly, the public/private key sizes may vary depending, for example, on the particular algorithm employed. In some embodiments, the asymmetric cryptographic key pair, (D, d), may be generated by the cloud server <b>150</b> and the public cryptographic key, D, may be securely transmitted to the edge device <b>118</b> according to any suitable exchange protocol or provisioning mechanism.</p><p id="p-0209" num="0208">The illustrative method <b>1900</b> begins with flow <b>1902</b> of <figref idref="DRAWINGS">FIG. <b>19</b></figref> in which the cloud server <b>150</b> and the mobile device <b>114</b> coordinate to assign a wireless access credential to a user (and therefore the mobile device <b>114</b> of that user) and verify the mobile device <b>114</b> (e.g., by confirming that the mobile number corresponds with the mobile device <b>114</b>). It should be appreciated that, in some embodiments, the access control system <b>100</b> may execute the method <b>2200</b> of <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref> to do so. Further, in some embodiments, the mobile device <b>114</b> may establish a Transport Layer Security (TLS) connection with the cloud server <b>150</b> and/or other devices with which the mobile device <b>114</b> communicates.</p><p id="p-0210" num="0209">In flow <b>1904</b>, the mobile device <b>114</b> generates an asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, for storage to the mobile device <b>114</b> and use as described herein. Similar to the asymmetric cryptographic key pair, (D, d), it should be appreciated that they asymmetric cryptographic key pair, (C, c), and corresponding public/private keys may vary by type depending on the particular embodiment. In some embodiments, it should be appreciated that the asymmetric cryptographic key pair, (C, c), may be a similar type of key pair as the asymmetric cryptographic key pair, (D, d), described above. For example, in the illustrative embodiment, the asymmetric cryptographic key pair, (C, c), is generated based on elliptical curve cryptography (ECC) based on the EC P<b>256</b> curve. In other embodiments, the asymmetric cryptographic key pair may be associated with another suitable ECC curve. Further, in other embodiments, the asymmetric cryptographic key pair, (C, c), may be associated with another cryptographic algorithm such as, for example, Digital Signature Standard (DSS), Digital Signature Algorithm (DSA), Rivest-Shamir-Adleman (RSA), ElGamal, and/or another asymmetric cryptographic algorithm. Similarly, the public/private key sizes may vary depending, for example, on the particular algorithm employed. In some embodiments, the asymmetric cryptographic key pair, (C, c), may be generated and stored on the mobile device <b>114</b> in advance of the execution of the method <b>1900</b> of <figref idref="DRAWINGS">FIG. <b>19</b></figref>. Further, it should be appreciated that the mobile device <b>114</b> may generate the asymmetric cryptographic key pair, (C, c), in a trusted execution environment (TEE) or secure enclave in some embodiments.</p><p id="p-0211" num="0210">In flow <b>1906</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential request including the public key, C, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. Further, in some embodiments, the credential request may identify the payload as a credential request (e.g., via a corresponding flag, CRED_REQ). As such, in some embodiments, the credential request may be represented as C RED_REQ&#x2225;C . In flow <b>1908</b>, the mobile device <b>114</b> cryptographically signs the credential request using the private key, c, of the cryptographic key pair , (C, c), retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the credential request. In flow <b>1910</b>, the mobile device <b>114</b> transmits the signed credential request to the cloud server <b>150</b> (e.g., via a TLS connection). As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the credential request and the signature thereof to the cloud server <b>150</b>.</p><p id="p-0212" num="0211">In flow <b>1912</b>, the cloud server <b>150</b> extracts the public key, C, from the credential request received from the mobile device <b>114</b> and verifies the credential request signature using that public key. That is, the cloud server <b>150</b> verifies that the credential request was signed using the private key that corresponds with the public key, C. It should be appreciated that the cloud server <b>150</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment).</p><p id="p-0213" num="0212">In flow <b>1914</b>, the cloud server <b>150</b> builds a credential blob including the credential to be transmitted to the mobile device (i.e., the credential assigned to the mobile device <b>114</b> and the user) and the public key, C. Further, in some embodiments, the credential blob may further include a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the credential blob may be represented as nonce&#x2225;C&#x2225;credential . In flow <b>1916</b>, the cloud server <b>150</b> encrypts the credential blob with the symmetric cryptographic key, K, and, in flow <b>1918</b>, the cloud server <b>150</b> cryptographically signs the encrypted credential blob using the private key, d, of the cryptographic key pair, (D,d), stored in the memory of the cloud server <b>150</b>. In other words, the cloud server <b>150</b> generates a cryptographic signature of the encrypted credential blob.</p><p id="p-0214" num="0213">In flow <b>1920</b>, the cloud server <b>150</b> transmits the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the signature thereof to the mobile device <b>114</b>. In flow <b>1922</b>, the cloud server <b>150</b> stores the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the signature thereof to a memory of the mobile device <b>114</b>. As such, it should be appreciated that, in the illustrative embodiment, the mobile device <b>114</b> now has a credential stored thereon that is tied to the mobile device <b>114</b>, but the mobile device <b>114</b> is unable to read the credential data due to the encryption. It should be appreciated that, in some embodiments, the memory of the mobile device <b>114</b> to which such data is stored is a secure memory.</p><p id="p-0215" num="0214">Although the flows <b>1902</b>-<b>1922</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>1900</b> may be performed in parallel in some embodiments.</p><p id="p-0216" num="0215">Referring now to <figref idref="DRAWINGS">FIGS. <b>20</b>-<b>21</b></figref>, in use, the access control system <b>100</b> may execute a method <b>2000</b> for using a wireless access credential (e.g., a wireless access credential stored to the mobile device <b>114</b> according to the method <b>1900</b> of <figref idref="DRAWINGS">FIG. <b>19</b></figref>). It should be appreciated that the particular flows of the method <b>2000</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. In some embodiments, the method <b>2000</b> of <figref idref="DRAWINGS">FIGS. <b>20</b>-<b>21</b></figref> may be executed in conjunction with and subsequent to the method <b>1900</b> of <figref idref="DRAWINGS">FIG. <b>19</b></figref>.</p><p id="p-0217" num="0216">As shown, the illustrative method <b>2000</b> involves the mobile device <b>114</b> (e.g., the mobile device <b>114</b> described in reference to <figref idref="DRAWINGS">FIG. <b>19</b></figref>) and an edge device <b>118</b>. Also as described above in reference to <figref idref="DRAWINGS">FIG. <b>19</b></figref>, the illustrative method <b>2000</b> assumes that a cryptographic key exchange has occurred such that the cloud server <b>150</b> (see, for example, <figref idref="DRAWINGS">FIG. <b>19</b></figref>) and the edge device <b>118</b> share a symmetric cryptographic key, K. Also, the mobile device <b>114</b> has stored thereon the asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, described above. It should also appreciated that the illustrative method <b>2000</b> further assumes that an asymmetric cryptographic key pair, (D,d), including a private cryptographic key, d, and a public cryptographic key, D, has been stored to the cloud server <b>150</b>, and that the public cryptographic key, D, has been stored to the edge device <b>118</b>. Further, in embodiments involving the method <b>1900</b> of <figref idref="DRAWINGS">FIG. <b>19</b></figref> in conjunction with the method <b>2000</b> of <figref idref="DRAWINGS">FIGS. <b>20</b>-<b>21</b></figref>, the mobile device <b>114</b> also has stored thereon the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and signature thereof after the execution of the method <b>1900</b> of <figref idref="DRAWINGS">FIG. <b>19</b></figref>.</p><p id="p-0218" num="0217">The illustrative method <b>2000</b> begins with flow <b>2002</b> of <figref idref="DRAWINGS">FIG. <b>20</b></figref> in which the mobile device <b>114</b> and the edge device <b>118</b> establish a Bluetooth communication session/connection with one another (e.g., a BLE <b>4</b>.<b>2</b> or newer connection). In doing so, the mobile device <b>114</b> and/or the edge device <b>118</b> may execute various Bluetooth-defined functions including, for example, getDevice( ), tryConnecting( ), onSuccess, tryDiscovering( ), and/or onServicesDiscovered( ) functions. In flow <b>2004</b>, the mobile device <b>114</b> and the edge device <b>118</b> perform a secure key exchange to generate a shared cryptographic session key, s, separately at each of the mobile device <b>114</b> and the edge device <b>118</b>. In the illustrative embodiment, the session key, s, is generated based on Elliptical Curve Diffie-Hellman (ECDH). More specifically, in some embodiments, the mobile device <b>114</b> and the edge device <b>118</b> may execute a method similar to the method <b>2600</b> of <figref idref="DRAWINGS">FIG. <b>26</b></figref> to perform the secure key exchange. However, it should be appreciated that the session key, s, may be generated based on a different key derivation function and/or other suitable algorithm in other embodiments. Following the execution of the secure key exchange, each of the mobile device <b>114</b> and the edge device <b>118</b> has the same session key, s, stored thereon.</p><p id="p-0219" num="0218">In flow <b>2006</b>, the edge device <b>118</b> encrypts challenge data with the shared cryptographic session key, s. In some embodiments, it should be appreciated that the challenge data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the encrypted challenge data may be represented as E<sub>s </sub>(challenge). In flow <b>2008</b>, the edge device <b>118</b> transmits the encrypted challenge data, E <sub>s</sub>(challenge), to the mobile device <b>114</b> via the established Bluetooth communication connection.</p><p id="p-0220" num="0219">In flow <b>2010</b>, the mobile device <b>114</b> decrypts the encrypted challenge data using the shared cryptographic session key, s, retrieved from a memory of the mobile device <b>114</b> and, in flow <b>2012</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential message including the challenge data received from the edge device <b>118</b>, the encrypted credential blob retrieved from the memory of the mobile device <b>114</b>, and the signature of the encrypted credential blob retrieved from the memory of the mobile device <b>114</b>. In flow <b>2014</b>, the mobile device <b>114</b> encrypts the credential message with the shared cryptographic session key, s, and in flow <b>2016</b>, the mobile device <b>114</b> cryptographically signs the encrypted credential message using the private key, c, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the encrypted credential message.</p><p id="p-0221" num="0220">In flow <b>2018</b>, the mobile device <b>114</b> transmits the signed and encrypted credential message to the edge device <b>118</b>. As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the encrypted credential message and the signature thereof to the edge device <b>118</b>. In flow <b>2020</b>, the edge device <b>118</b> decrypts the encrypted credential message using the shared cryptographic session key, s, retrieved from the memory of the edge device <b>118</b>.</p><p id="p-0222" num="0221">In flow <b>2022</b> of <figref idref="DRAWINGS">FIG. <b>21</b></figref>, the edge device <b>118</b> verifies the challenge data. For example, in embodiments in which the challenge data is a nonce, the edge device <b>118</b> may confirm that the nonce is the same as the nonce previously encrypted and transmitted to the mobile device <b>114</b> (see, for example, flows <b>2006</b>-<b>2008</b> of <figref idref="DRAWINGS">FIG. <b>20</b></figref>). In other embodiments, it should be appreciated that the edge device <b>118</b> may otherwise verify and/or validate the decrypted challenge data. In flow <b>2024</b>, the edge device <b>118</b> verifies the signature of the encrypted credential blob using the public cryptographic key, D, retrieved from the memory of the edge device <b>118</b>. That is, the edge device <b>118</b> verifies that the encrypted credential blob was signed using the private key that corresponds with the public key, D. It should be appreciated that the edge device <b>118</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment).</p><p id="p-0223" num="0222">In flow <b>2026</b>, the edge device <b>118</b> decrypts the encrypted credential blob using the symmetric cryptographic key, K, retrieved from the memory of the edge device <b>118</b> and, in block <b>2028</b>, the edge device <b>118</b> extracts the credential and the public cryptographic key, C, from the decrypted credential blob. It should be appreciated that, in the illustrative embodiment, the edge device <b>118</b> and the cloud server <b>150</b> are capable of encrypting/decrypting the credential blob including the credential, whereas the mobile device <b>114</b> is not. Instead, in such embodiments, the mobile device <b>114</b> acts as a conduit for the secure transfer of the credential between the cloud server <b>150</b> and the edge device <b>118</b>.</p><p id="p-0224" num="0223">In flow <b>2030</b>, the edge device <b>118</b> verifies the signature of the encrypted credential message using the public cryptographic key, C, extracted from the decrypted credential blob. That is, the edge device <b>118</b> verifies that the encrypted credential message was signed using the private key that corresponds with the public key, C. It should be appreciated that the edge device <b>118</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment). It should be further appreciated that the use of the cryptographic key pair (C, c) serves, for example, to prevent the unauthorized copying of a credential to a different mobile device <b>114</b> as described above in reference to <figref idref="DRAWINGS">FIGS. <b>15</b>-<b>17</b></figref>.</p><p id="p-0225" num="0224">In flow <b>2032</b>, the edge device <b>118</b> processes the credential extracted from the credential blob. It should be appreciated that the credential may be processed in a manner similar to that described in reference to flow <b>1234</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>. As such, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may make an access control decision based on the extracted credential and an access control database. Further, the edge device <b>118</b> itself or another device (e.g., the administrative system <b>110</b>, the access controller <b>134</b>, etc.) may perform the access control decision based on the particular embodiment. Further, in some embodiments, in response to successful authentication of the credential, the lock device <b>132</b> may unlock a lock mechanism as described above. In some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential. For example, in some embodiments, the method <b>1800</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref> may be executed to process a PIN of the user. In other embodiments, the user may be required to comply with a multi-factor authentication protocol requiring, for example, facial identification, thumb print, other biometrics, voice recognition, gestures, and/or additional information. It should be appreciated that, in some embodiments, the credential value and/or other portion of the credential may include an indicator that further authentication is required.</p><p id="p-0226" num="0225">Although the flows <b>2002</b>-<b>2032</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>2000</b> may be performed in parallel in some embodiments.</p><p id="p-0227" num="0226">Referring now to <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref>, in use, the access control system <b>100</b> may execute a method <b>2200</b> for assigning a wireless access credential to a mobile number. It should be appreciated that the particular flows of the method <b>2200</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. As shown, the illustrative method <b>2200</b> involves a credential management system <b>102</b>, a mobile access hub <b>112</b>, and a mobile device <b>114</b> (e.g., executing a mobile application as described herein). Additionally, it should be appreciated that, in some embodiments, the method <b>2200</b> may be executed in conjunction with and prior to the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref>.</p><p id="p-0228" num="0227">The illustrative method <b>2200</b> begins with flow <b>2202</b> of <figref idref="DRAWINGS">FIG. <b>22</b></figref> in which the credential management system <b>102</b> transmits an indication that a new credential has been assigned to a mobile line/phone number of a user to the mobile access hub <b>112</b>. For example, as described above, the system/site administrator may request that the credential be issued to the user (and/or the mobile line number) by the credential management system <b>102</b>, and the credential management system <b>102</b> may assign the credential to the user (and/or mobile line number). In particular, in some embodiments, the credential management system <b>102</b> may leverage the credential API <b>124</b> to interface with and/or &#x201c;call&#x201d; the mobile access hub <b>112</b> requesting a message to be transmitted to the user's mobile device <b>114</b> (e.g., a text/SMS message).</p><p id="p-0229" num="0228">In flow <b>2204</b>, the mobile access hub <b>112</b> generates and transmits a deep link via SMS to the mobile device <b>114</b> at the mobile device number provided when the credential was issued to the user. In other embodiments, the mobile access hub <b>112</b> may interface with Twilio and/or another suitable messaging service for generating and transmitting the appropriate messages to the mobile device <b>114</b>. In flow <b>2206</b>, the mobile device <b>114</b> launches a corresponding mobile application via the deep link and obtains the mobile number of the mobile device <b>114</b>. It should be appreciated that the illustrative deep link is configured to launch a mobile application on the mobile device <b>114</b> to securely receive the credential or, if the mobile application not accessible (e.g., not installed) on the mobile device <b>114</b>, direct the user to the download location (e.g., an &#x201c;App store&#x201d;) to download the relevant mobile application. Further, it should be appreciated that the mobile number may be obtained automatically, semi-automatically, or via user input depending on the particular embodiment. For example, some mobile device operating systems (e.g., Android operating systems) may allow the mobile application to access the mobile number via a simple prompt, whereas other mobile device operating systems (e.g., iOS operating systems) may require the user to manually enter the mobile number into the application.</p><p id="p-0230" num="0229">In some embodiments, the mobile device <b>114</b> may establish a Transport Layer Security (TLS) connection with the mobile access hub <b>112</b> for secure communications. In flow <b>2208</b>, the mobile device <b>114</b> (e.g., via the mobile application) transmits the obtained mobile number to the mobile access hub <b>112</b> (e.g., along with a request for a verification code) and, in flow <b>2210</b>, the mobile access hub <b>112</b> compares the mobile number to a credential database (e.g., an access control database) to determine whether the mobile number is already associated with a wireless access credential (e.g., a BLE credential). In doing so, the mobile access hub <b>112</b> may also determine whether the mobile number has already been authenticated (e.g., via a verification code and response). In some embodiments, if the mobile number is not already associated with a credential (e.g., and therefore not authenticated), the method <b>2200</b> may advances to flow <b>2212</b> in which the mobile access hub <b>112</b> generates a verification code (e.g., a <b>6</b>-digit verification code) and transmits the verification code to the mobile device <b>114</b> via SMS. In flow <b>2214</b>, the mobile device <b>114</b> (e.g., via a graphical user interface of the mobile application) prompts the user to enter the verification code (e.g., received by the mobile device <b>114</b> via SMS) and received/processes the user's input (i.e., the code entry).</p><p id="p-0231" num="0230">In flow <b>2216</b>, the mobile device <b>114</b> generates an asymmetric cryptographic key pair, (P, p), including a private cryptographic key, p, and a public cryptographic key, P, for storage to the mobile device <b>114</b> and use as described herein. It should be appreciated that they asymmetric cryptographic key pair, (P, p), and corresponding public/private keys may vary by type depending on the particular embodiment. For example, in the illustrative embodiment, the asymmetric cryptographic key pair, (P, p), is generated based on elliptical curve cryptography (ECC) based on the EC P<b>256</b> curve. In other embodiments, the asymmetric cryptographic key pair may be associated with another suitable ECC curve. Further, in other embodiments, the asymmetric cryptographic key pair, (P, p), may be associated with another cryptographic algorithm such as, for example, Digital Signature Standard (DSS), Digital Signature Algorithm (DSA), Rivest-Shamir-Adleman (RSA), ElGamal, and/or another asymmetric cryptographic algorithm. Similarly, the public/private key sizes may vary depending, for example, on the particular algorithm employed. In some embodiments, the asymmetric cryptographic key pair, (P, p), may be generated and stored on the mobile device <b>114</b> in advance of the execution of the method <b>2200</b> of <figref idref="DRAWINGS">FIG. <b>22</b></figref>. Further, it should be appreciated that the mobile device <b>114</b> may generate the asymmetric cryptographic key pair, (P, p), in a trusted execution environment (TEE) or secure enclave in some embodiments.</p><p id="p-0232" num="0231">In flow <b>2218</b> of <figref idref="DRAWINGS">FIG. <b>23</b></figref>, the mobile device <b>114</b> (e.g., using the mobile application) builds a payload including the public key, P, of the cryptographic key pair (P, p) retrieved from a memory of the mobile device <b>114</b>, the user-entered code, and the mobile number of the mobile device <b>114</b>. In flow <b>2220</b>, the mobile device <b>114</b> also builds another payload including a timestamp (e.g., generated from a real-time clock of the mobile device <b>114</b>) and the mobile number of the mobile device <b>114</b>. In some embodiments, the payload including the timestamp and mobile number may be utilized by the mobile access hub <b>112</b> as login credentials for the mobile device <b>114</b>. In flow <b>2222</b>, the mobile device <b>114</b> cryptographically signs the payloads using the private key, p, of the cryptographic key pair, (P, p), retrieved from the memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the payload built in flow <b>2218</b> and a cryptographic signature of the payload built in flow <b>2220</b>. In some embodiments, it should be appreciated that the mobile device <b>114</b> may combine the data of the two payloads into a single payload that is cryptographically signed. In flow <b>2224</b>, the mobile device <b>114</b> transmits the signed payloads to the mobile access hub <b>112</b> (e.g., via a TLS connection). As such, in the illustrative embodiment, the mobile device <b>114</b> transmits each of the payloads (e.g., from flows <b>2218</b>-<b>2220</b>) and the signatures thereof to the mobile access hub <b>112</b>. However, in other embodiments, the mobile device <b>114</b> may transmit a single payload (or combination of payloads) and a single signature thereof to the mobile access hub <b>112</b> as indicated above.</p><p id="p-0233" num="0232">In flow <b>2226</b>, the mobile access hub <b>112</b> extracts the public key, P, from the payload (e.g., the first payload) received from the mobile device <b>114</b> and verifies the signature(s) of the payload(s) using that public key. That is, the mobile access hub <b>112</b> verifies that each of the relevant payloads was signed using the private key that corresponds with the public key, P. It should be appreciated that the mobile access hub <b>112</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment).</p><p id="p-0234" num="0233">In flow <b>2228</b>, the mobile access hub <b>112</b> extracts the user-entered code received from the mobile device <b>114</b> to the verification code transmitted from the mobile access hub <b>112</b> to the mobile device <b>114</b> in flow <b>2212</b>. It should be appreciated that the mobile access hub <b>112</b> may consider the mobile device <b>114</b> to be the device corresponding with the mobile number if the user-entered code matches the verification code. Otherwise, the mobile access hub <b>112</b> may undergo one or more error handling procedures (e.g., re-sending the verification code, etc.). In flow <b>2230</b>, the mobile access hub <b>112</b> associates the mobile number of the user with the wireless access credential in the credential database (e.g., an access control database). As such, in some embodiments, the mobile access hub <b>112</b> may subsequently determine that the mobile number is associated with a particular account (e.g., in flow <b>2210</b> of <figref idref="DRAWINGS">FIG. <b>22</b></figref>) and, for example, transmit a push notification to the mobile application of the mobile device <b>114</b> instead of transmitting a deep link to the mobile device <b>114</b> (e.g., for pulling multiple credentials associated with a mobile number).</p><p id="p-0235" num="0234">Although the flows <b>2202</b>-<b>2230</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>2200</b> may be performed in parallel in some embodiments.</p><p id="p-0236" num="0235">As described herein, multiple credentials may be associated with the same mobile number and therefore the same mobile device <b>114</b>. As such, it should be appreciated that techniques similar to those of the method <b>2200</b> may be used to onboard subsequent credentials after the mobile application has already been instead. In such embodiments, for example, the flows <b>2204</b>-<b>2214</b> regarding the downloading of the application and the code verification and the flow <b>2218</b> associated with building the payload with the user-entered code may be omitted. More specifically, in some embodiments, those flows <b>2204</b>-<b>2214</b> may be replaced with a flow in which the mobile access hub <b>112</b> determines that the mobile number is already associated with a credential and transmits a notification (e.g., a push notification) to the mobile device <b>114</b> regarding the assignment of the new credential to the mobile number, and the method <b>2200</b> may resume at flow <b>2216</b> to obtain the new credential. It should be further appreciated that, in some embodiments, the method <b>2200</b> may include flows (e.g., after the flow <b>2230</b>) in which the mobile device <b>114</b> transmits a request to the mobile access hub <b>112</b> for a list or identification of the credentials and/or access rights of the mobile device <b>114</b> and/or associated with the mobile number (e.g., GET/MobileAccessRights), and the mobile access hub <b>112</b> responds with such list or identifiers (e.g., CMSMobileAccess_A, CMSMobileAccess_B). Based on the list, the mobile device <b>114</b> may request the proper credential.</p><p id="p-0237" num="0236">It should be appreciated that a modified version of the method <b>2200</b> may also be employed when a user gets a new mobile device <b>114</b> or deletes the mobile application such that the user's credentials need to be re-downloaded/on-boarded via the mobile access hub <b>112</b>. In such embodiments, the mobile access hub <b>112</b> may re-verify the user's mobile number and re-download the credentials for that user. For example, the flow <b>2204</b> associated with the transmission of the deep link from the mobile access hub <b>112</b> to the mobile device <b>114</b> may be omitted. Instead, the mobile device <b>114</b> may launch the newly installed mobile application in flow <b>2206</b> and resume execution of the method <b>2200</b> to onboard the credential. It should be appreciated that the access control system <b>100</b> allows the user to keep the same credentials without purchasing a new credential for each new mobile device <b>114</b>.</p><p id="p-0238" num="0237">Referring now to <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref>, in use, the access control system <b>100</b> may execute a method <b>2400</b> for storing a wireless access credential to the mobile device <b>114</b>. It should be appreciated that the particular flows of the method <b>2400</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. Additionally, it should be appreciated that, in the illustrative embodiment, the method <b>2400</b> may be executed in conjunction with and prior to the method <b>2700</b> of <figref idref="DRAWINGS">FIGS. <b>27</b>-<b>29</b></figref> and/or in conjunction with and subsequent to the method <b>2200</b> of <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref>.</p><p id="p-0239" num="0238">As shown, the illustrative method <b>2400</b> involves a key management system <b>108</b>, a credential management system <b>102</b>, a mobile access hub <b>112</b>, and a mobile device <b>114</b> (e.g., executing a mobile application as described herein). As indicated above, in some embodiments, one or more of the key management system <b>108</b>, the credential management system <b>102</b>, and/or the mobile access hub <b>112</b> may be embodied as cloud-based systems and/or may form a portion of one another.</p><p id="p-0240" num="0239">Further, the illustrative method <b>2400</b> assumes that a cryptographic key exchange has occurred such that the key management system <b>108</b> and an edge device <b>118</b> or, more specifically, a main chipset <b>142</b> of an edge device <b>118</b> (see, for example, <figref idref="DRAWINGS">FIGS. <b>26</b>-<b>29</b></figref>) share a symmetric cryptographic key, K. It should appreciated that the key management system <b>108</b> (and/or other cloud servers <b>150</b>) and the edge device <b>118</b> may employ any suitable key exchange algorithm to do so. Additionally, the symmetric cryptographic key, K, may vary by type and/or length depending on the particular embodiment. For example, in the illustrative embodiment, the symmetric cryptographic key, K, is embodied as 256-bit Advanced Encryption Standard (AES) keys. In other embodiments, however, the symmetric cryptographic keys may be associated with another cryptographic algorithm such as, for example, Data Encryption Standard (DES), Triple DES, Blowfish, Twofish, Serpent, and/or another symmetric cryptographic algorithm. Similarly, the key may be a 128-bit keys, 512-bit key, or another size in other embodiments (e.g., depending on the cryptographic algorithm). In some embodiments, the cryptographic key is generated by the key management system <b>108</b> and transmitted to the edge device <b>118</b>.</p><p id="p-0241" num="0240">It should also appreciated that the illustrative method <b>2400</b> further assumes that an asymmetric cryptographic key pair, (D, d), including a private cryptographic key, d, and a public cryptographic key, D, has been generated and stored to the key management system <b>108</b>, and that the public cryptographic key, D, has been stored to the edge device <b>118</b> or, more specifically, to the cryptography chipset <b>144</b> of the edge device <b>118</b> for use as described herein. It should be appreciated that they asymmetric cryptographic key pair, (D, d), and corresponding public/private keys may vary by type depending on the particular embodiment. For example, in the illustrative embodiment, the asymmetric cryptographic key pair, (D, d), is generated based on elliptical curve cryptography (ECC) based on the EC P256 curve. In other embodiments, the asymmetric cryptographic key pair may be associated with another suitable ECC curve. Further, in other embodiments, the asymmetric cryptographic key pair may be associated with another cryptographic algorithm such as, for example, Digital Signature Standard (DSS), Digital Signature Algorithm (DSA), Rivest-Shamir-Adleman (RSA), ElGamal, and/or another asymmetric cryptographic algorithm. Similarly, the public/private key sizes may vary depending, for example, on the particular algorithm employed. In some embodiments, the asymmetric cryptographic key pair, (D, d), may be generated by the key management system <b>108</b> (or other cloud server <b>150</b>) and the public cryptographic key, D, may be securely transmitted to the edge device <b>118</b> according to any suitable exchange protocol or provisioning mechanism. In some embodiments, the method <b>2400</b> further assumes that the asymmetric cryptographic key pair, (P, p), including the private cryptographic key, p, and the public cryptographic key, P, have been generated and stored to the mobile device <b>114</b> as described above.</p><p id="p-0242" num="0241">The illustrative method <b>2400</b> begins with flow <b>2402</b> of <figref idref="DRAWINGS">FIG. <b>24</b></figref> in which the mobile device <b>114</b> generates an asymmetric cryptographic key pair, (C,c), including a private cryptographic key, c, and a public cryptographic key, C, for storage to the mobile device <b>114</b> and use as described herein. Similar to the asymmetric cryptographic key pairs, (D, d) and (P, p), it should be appreciated that they asymmetric cryptographic key pair, (C,c), and corresponding public/private keys may vary by type depending on the particular embodiment. In some embodiments, it should be appreciated that the asymmetric cryptographic key pair, (C, c), may be a similar type of key pair as the asymmetric cryptographic key pair, (D, d), and/or the asymmetric cryptographic key pair, (P, p), described above. For example, in the illustrative embodiment, the asymmetric cryptographic key pair, (C,c), is generated based on elliptical curve cryptography (ECC) based on the EC P256 curve. In other embodiments, the asymmetric cryptographic key pair may be associated with another suitable ECC curve. Further, in other embodiments, the asymmetric cryptographic key pair, (C, c), may be associated with another cryptographic algorithm such as, for example, Digital Signature Standard (DSS), Digital Signature Algorithm (DSA), Rivest-Shamir-Adleman (RSA), ElGamal, and/or another asymmetric cryptographic algorithm. Similarly, the public/private key sizes may vary depending, for example, on the particular algorithm employed. In some embodiments, the asymmetric cryptographic key pair, (C,c), may be generated and stored on the mobile device <b>114</b> in advance of the execution of the method <b>2400</b> of <figref idref="DRAWINGS">FIG. <b>24</b></figref>. Further, it should be appreciated that the mobile device <b>114</b> may generate the asymmetric cryptographic key pair, (C, c), in a trusted execution environment (TEE) or secure enclave in some embodiments.</p><p id="p-0243" num="0242">In flow <b>2404</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential request including the public key, C, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. Further, in some embodiments, the credential request may identify the payload as a credential request (e.g., via a corresponding flag, CRED_REQ). As such, in some embodiments, the credential request may be represented as CRED_REQ&#x2225;C . In flow <b>2406</b>, the mobile device <b>114</b> cryptographically signs the credential request using the private key, c, of the cryptographic key pair , (C, c), retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the credential request. In flow <b>2408</b>, the mobile device <b>114</b> transmits the signed credential request to the mobile access hub <b>112</b> (e.g., via a TLS connection). As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the credential request and the signature thereof to the mobile access hub <b>112</b>. In turn, in flow <b>2410</b>, the mobile access hub <b>112</b> forwards the signed credential request (e.g., the credential request and signature thereof) to the credential management system <b>102</b>.</p><p id="p-0244" num="0243">In flow <b>2412</b>, the credential management system <b>102</b> extracts the public key, C, from the credential request received from the mobile device <b>114</b> via the mobile access hub <b>112</b> and verifies the credential request signature using that public key. That is, the credential management system <b>102</b> verifies that the credential request was signed using the private key that corresponds with the public key, C. It should be appreciated that the credential management system <b>102</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment).</p><p id="p-0245" num="0244">In flow <b>2414</b>, the credential management system <b>102</b> builds a credential request payload including the public key, C, extracted from the credential request received from the mobile device <b>114</b> via the mobile access hub <b>112</b>, a facility code, a credential value of the credential, and a bit format of the credential. It should be appreciated that credential value and the bit format are of the credential requested and assigned to the mobile number of the mobile device <b>114</b>. Further, in some embodiments, the facility code may be associated with the site and/or organization that owns or administers the edge system <b>116</b>. In flow <b>2416</b>, the credential management system <b>102</b> transmits the credential request payload to the key management system <b>108</b>.</p><p id="p-0246" num="0245">In flow <b>2418</b> of <figref idref="DRAWINGS">FIG. <b>25</b></figref>, the key management system <b>108</b> determines the credential to be transmitted to the mobile device <b>114</b> and builds a credential blob based on the credential request payload (e.g., based on the facility code, credential value, bit format, etc.). In particular, in the illustrative embodiment, the key management system <b>108</b> builds a credential blob including the credential to be transmitted to the mobile device <b>114</b> (e.g., the credential assigned to the mobile number and the user) and the public key, C. Further, in some embodiments, the credential blob may further include a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the credential blob may be represented as nonce&#x2225;C&#x2225;credential . In flow <b>2420</b>, the key management system <b>108</b> encrypts the credential blob with the symmetric cryptographic key, K, and, in flow <b>2422</b>, the key management system <b>108</b> cryptographically signs the encrypted credential blob using the private key, d, of the cryptographic key pair, (D, d), stored in the memory of the key management system <b>108</b>. In other words, the key management system <b>108</b> generates a cryptographic signature of the encrypted credential blob.</p><p id="p-0247" num="0246">In flow <b>2424</b>, the key management system <b>108</b> transmits the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the signature thereof to the credential management system <b>102</b>. In flow <b>2426</b>, the credential management system <b>102</b> records the use of the credential. For example, in some embodiments, the credential management system <b>102</b> may reduce the number of credits available to the administrative system <b>110</b> for issuance of new credentials. Further, the credential management system <b>102</b> may also track the use of the public cryptographic key, C, and/or various credential data (e.g., the credential value used). As indicated above, in some embodiments, one or more of those functions of the credential management system <b>102</b> may be performed in conjunction with the credential tracking system <b>104</b> and/or the credential ordering system <b>106</b>.</p><p id="p-0248" num="0247">In flow <b>2428</b>, the credential management system <b>102</b> transmits/forwards the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the signature thereof to the mobile access hub <b>112</b>. In flow <b>2430</b>, the mobile access hub <b>112</b> may incorporate one or more types of metadata into the payload prior to transmittal to the mobile device <b>114</b>. For example, in some embodiments, the metadata may include one or more mobile access instructions, a list of edge devices <b>118</b> and/or lock devices <b>132</b> that the credential has access to, an expiration date of the payload, and/or other relevant metadata. It should be appreciated that, in some embodiments, the metadata is added to the signed and encrypted credential blob in the clear. Further, in some embodiments, a keyed hash or other integrity-verifying data may be included with the metadata to confirm that the metadata has not been modified.</p><p id="p-0249" num="0248">In flow <b>2432</b>, the mobile access hub <b>112</b> transmits the signed and encrypted credential blob to the mobile device <b>114</b> along with any metadata. That is, in the illustrative embodiment, the mobile access hub <b>112</b> transmits the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) and the signature thereof to the mobile device <b>114</b>. In flow <b>2434</b>, the mobile device <b>1434</b> further encrypts the encrypted credential blob with the public cryptographic key, P, using a corresponding asymmetric encryption algorithm. It should be appreciated that, in some embodiments, the further encrypted credential blob may be represented as E <sub>P </sub>(E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)). In flow <b>2436</b>, the mobile device <b>114</b> stores the further encrypted credential blob (E<sub>P </sub>(E<sub>K </sub>(nonce&#x2225;C&#x2225;credential))), the signature of the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)), and the metadata (if any) to the memory of the mobile device <b>114</b>. In other embodiments, it should be appreciated that the signature of the encrypted credential blob may be combined (e.g., concatenated) with the encrypted credential blob prior to asymmetric encryption by the public cryptographic key, P. In such embodiments, the payload may be represented as E <sub>P </sub>(E<sub>K </sub>(nonce&#x2225;C credential)&#x2225;dSig). As such, in the illustrative embodiment, the credential blob or, more specifically, the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) is encrypted with the public cryptographic key, P, when the data is at rest on the mobile device <b>114</b>. It should be appreciated that, in the illustrative embodiment, the mobile device <b>114</b> now has a credential stored thereon that is tied to the mobile device <b>114</b>, but the mobile device <b>114</b> is unable to read the credential data due to the encryption. It should be appreciated that, in some embodiments, the memory of the mobile device <b>114</b> to which such data is stored is a secure memory. As indicated above, in some embodiments, the metadata may be transmitted in the clear such that the metadata may be read by the mobile device <b>114</b>.</p><p id="p-0250" num="0249">Although the flows <b>2402</b>-<b>2436</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>2400</b> may be performed in parallel in some embodiments.</p><p id="p-0251" num="0250">Referring now to <figref idref="DRAWINGS">FIG. <b>26</b></figref>, in use, the access control system <b>100</b> may execute a method <b>2600</b> for performing a key exchange between the mobile device <b>114</b> and an edge control device <b>118</b> of the access control system <b>100</b>. It should be appreciated that the particular flows of the method <b>2600</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. Additionally, it should be appreciated that, in some embodiments, the method <b>2600</b> may be executed in conjunction with the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref> and/or the method <b>2700</b> of <figref idref="DRAWINGS">FIGS. <b>27</b>-<b>29</b></figref>. For example, in some embodiments, the method <b>2600</b> may be executed subsequent to the method <b>2400</b> and prior to the method <b>2700</b>. In the illustrative method <b>2600</b>, a session key, s, is generated based on Elliptical Curve Diffie-Hellman (ECDH). In other embodiments, however, it should be appreciated that the session key, s, may be generated based on a different key derivation function and/or other suitable algorithm in other embodiments.</p><p id="p-0252" num="0251">The illustrative method <b>2600</b> begins with flow <b>2602</b> of <figref idref="DRAWINGS">FIG. <b>26</b></figref> in which the mobile device <b>114</b> and the edge device <b>118</b> or, more specifically, the BLE chipset <b>140</b> of the edge device <b>118</b> establish a Bluetooth communication session/connection with one another (e.g., a BLE 4.2 or newer connection). In doing so, the mobile device <b>114</b> and/or the BLE chipset <b>140</b> of the edge device <b>118</b> may execute various Bluetooth-defined functions including, for example, getDevice( ), tryConnecting( ), onSuccess, tryDiscovering( ), and/or onServicesDiscovered( ) functions.</p><p id="p-0253" num="0252">In flow <b>2604</b>, the mobile device <b>114</b> generates an ephemeral key pair, (C<sub>1</sub>,c<sub>1</sub>), including a public ephemeral key, C<sub>1 </sub>, and a private ephemeral key, c<sub>1</sub>. In the illustrative embodiment, the public and private ephemeral keys are ECDH ephemeral keys. However, in embodiments in which other secure key exchange and/or shared key derivation algorithms are employed, the keys may be formed accordingly. In flow <b>2606</b>, the mobile device <b>114</b> transmits the public ephemeral key, C<sub>1</sub>, to the BLE chipset <b>140</b> of the edge device <b>118</b>. Further, in flow <b>2608</b>, the BLE chipset <b>140</b> forwards the public ephemeral key, C<sub>1</sub>, to the main chipset <b>142</b> of the edge device <b>118</b>, which in flow <b>2610</b> forwards the public ephemeral key, C<sub>1</sub>, to the cryptography chipset <b>144</b> of the edge device <b>118</b>.</p><p id="p-0254" num="0253">In flow <b>2612</b>, the cryptography chipset <b>144</b> generates another ephemeral key pair (R, r) including a public ephemeral key, R, and a private ephemeral key, r. It should be appreciated that the ephemeral keys of the ephemeral key pair, (R, r), may be of the same type as the ephemeral key pair, (C<sub>1</sub>, c<sub>1</sub>). As such, in the illustrative embodiment, the public and private ephemeral keys, R and r, are ECDH ephemeral keys. In flow <b>2614</b>, the cryptography chipset <b>144</b> generates a shared cryptographic session key, s, based on the public ephemeral key, C<sub>1</sub>, received from the mobile device <b>114</b> (e.g., via the BLE chipset <b>140</b> and the main chipset <b>142</b> of the edge device <b>118</b>) and the private ephemeral key, r, newly generated by the cryptography chipset <b>144</b> of the edge device <b>118</b>. For example, the shared cryptographic session key, s, may be generated based on generation of the corresponding portion of the ECDH algorithm.</p><p id="p-0255" num="0254">In flow <b>2616</b>, the cryptography chipset <b>144</b> of the edge device <b>118</b> transmits the public ephemeral key, R, to the main chipset <b>142</b> of the edge device <b>118</b>, which in flow <b>2618</b> forwards the public ephemeral key, R, to the BLE chipset <b>140</b> of the edge device <b>118</b>. In flow <b>2620</b>, the BLE chipset <b>140</b> further transmits the public ephemeral key, R, to the mobile device <b>114</b>. In flow <b>2622</b>, the mobile device <b>114</b> generates the shared cryptographic session key, s, based on the public ephemeral key, R, received from the edge device <b>118</b> (e.g., generated by the cryptography chipset <b>144</b> and transmitted via the BLE chipset <b>140</b>) and the private ephemeral key, c<sub>1</sub>, generated by the mobile device <b>114</b>.</p><p id="p-0256" num="0255">It should be appreciated that the mobile device <b>114</b> and the edge device <b>118</b> are able to generate the same shared cryptographic session key, s, based on the corresponding public/private ephemeral keys described above (e.g., (C<sub>1</sub>,r) and (R, c<sub>1</sub>)). It should be further appreciated that the public cryptographic key, C, described herein may be used as the public ephemeral key, C<sub>1</sub>, for the generation of the shared cryptographic session key, s, in some embodiments.</p><p id="p-0257" num="0256">Although the flows <b>2602</b>-<b>2622</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>2600</b> may be performed in parallel in some embodiments.</p><p id="p-0258" num="0257">Referring now to <figref idref="DRAWINGS">FIGS. <b>27</b>-<b>29</b></figref>, in use, the access control system <b>100</b> may execute a method <b>2700</b> for using a wireless access credential (e.g., a wireless access credential stored to the mobile device <b>114</b> according to the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref>). It should be appreciated that the particular flows of the method <b>2700</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. In some embodiments, the method <b>2700</b> of <figref idref="DRAWINGS">FIGS. <b>27</b>-<b>29</b></figref> may be executed in conjunction with and subsequent to the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref> and/or the method <b>2600</b> of <figref idref="DRAWINGS">FIG. <b>26</b></figref>.</p><p id="p-0259" num="0258">As shown, the illustrative method <b>2700</b> involves the mobile device <b>114</b> and an edge device <b>118</b> or, more specifically, the BLE chipset <b>140</b>, the main chipset <b>142</b>, and the cryptography chipset <b>144</b> of the edge device <b>118</b>. Also, as described above in reference to <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>26</b></figref>, the illustrative method <b>2700</b> assumes that a cryptographic key exchange has occurred such that the key management system <b>108</b> and the edge device <b>118</b> or, more specifically, the main chipset <b>142</b> of the edge device <b>118</b> share a symmetric cryptographic key, K. It should also be appreciated that the illustrative method <b>2700</b> further assumes that an asymmetric cryptographic key pair, (D,d), including a private cryptographic key, d, and a public cryptographic key, D, has been generated and stored to the key management system <b>108</b>, and that the public cryptographic key, D, has been stored to the edge device <b>118</b> or, more specifically, to the cryptography chipset <b>144</b> of the edge device <b>118</b> for use as described herein. Additionally, the mobile device <b>114</b> has stored thereon the asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, and the asymmetric cryptographic key pair, (P, p), including the private cryptographic key, p, and the public cryptographic key, P, described above. The method <b>2700</b> further assumes that a secure key exchange has been performed (e.g., ECDH) such that each of the mobile device <b>114</b> and the edge device <b>118</b> (or, more specifically, the cryptography chipset <b>144</b>) has the shared cryptographic session key, s, as described above. For example, in some embodiments, the mobile device <b>114</b> and the edge device <b>118</b> may execute a method similar to the method <b>2600</b> of <figref idref="DRAWINGS">FIG. <b>26</b></figref> to perform the secure key exchange. Further, in embodiments involving the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref> in conjunction with the method <b>2700</b> of <figref idref="DRAWINGS">FIGS. <b>27</b>-<b>29</b></figref>, the mobile device <b>114</b> also has stored thereon the double-encrypted credential blob (E<sub>P </sub>(E<sub>K </sub>(nonce&#x2225;C credential))), the signature of the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)), and metadata (if any) after the execution of the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref> as described above.</p><p id="p-0260" num="0259">If not already established, in the illustrative embodiment, the mobile device <b>114</b> and the edge device <b>118</b> or, more specifically, the BLE chipset <b>140</b> of the edge device <b>118</b> establish a Bluetooth communication session/connection with one another (e.g., a BLE <b>4</b>.<b>2</b> or newer connection). In doing so, the mobile device <b>114</b> and/or the BLE chipset <b>140</b> of the edge device <b>118</b> may execute various Bluetooth-defined functions including, for example, getDevice( ), tryConnecting( ), onSuccess, tryDiscovering( ), and/or onServicesDiscovered( ) functions.</p><p id="p-0261" num="0260">The illustrative method <b>2700</b> begins with flow <b>2702</b> of <figref idref="DRAWINGS">FIG. <b>27</b></figref> in which the cryptography chipset <b>144</b> of the edge device <b>118</b> transmits the shared cryptographic session key, s, generated in by the secure key exchange to the main chipset <b>142</b> of the edge device <b>118</b>. In flow <b>2704</b>, the main chipset <b>142</b> of the edge device <b>118</b> encrypts challenge data with the shared cryptographic session key, s. In some embodiments, it should be appreciated that the challenge data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. As such, in some embodiments, the encrypted challenge data may be represented as E<sub>s</sub>(challenge). In flow <b>2706</b>, the main chipset <b>142</b> of the edge device <b>118</b> forwards the encrypted challenge data, E<sub>s</sub>(challenge), to the BLE chipset <b>140</b> of the edge device <b>118</b> and, in flow <b>2708</b>, the BLE chipset <b>140</b> transmits the encrypted challenge data, E <sub>s</sub>(challenge), to the mobile device <b>114</b> via the established Bluetooth communication connection.</p><p id="p-0262" num="0261">In flow <b>2710</b>, the mobile device <b>114</b> decrypts the encrypted challenge data using the shared cryptographic session key, s, retrieved from a memory of the mobile device <b>114</b> and, in flow <b>2712</b>, the mobile device <b>114</b> decrypts the stored double-encrypted credential blob (E (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential))) using the private cryptographic key, p, retrieved from the memory of the mobile device <b>114</b>. In flow <b>2714</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a credential message including the challenge data received from the edge device <b>118</b> via the BLE chipset <b>140</b>, the encrypted credential blob (E<sub>K </sub>(nonce&#x2225;C&#x2225;credential)) retrieved from the memory of the mobile device <b>114</b>, and the signature of the encrypted credential blob retrieved from the memory of the mobile device <b>114</b>. In flow <b>2716</b>, the mobile device <b>114</b> encrypts the credential message with the shared cryptographic session key, s, and in flow <b>2718</b>, the mobile device <b>114</b> cryptographically signs the encrypted credential message using the private key, c, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the encrypted credential message.</p><p id="p-0263" num="0262">In flow <b>2720</b>, the mobile device <b>114</b> transmits the signed and encrypted credential message to the edge device <b>118</b> or, more specifically, to the BLE chipset <b>140</b> of the edge device <b>118</b>. As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the encrypted credential message and the signature thereof to the BLE chipset <b>140</b> of the edge device <b>118</b>. In flow <b>2722</b>, the BLE chipset <b>140</b> forwards the signed and encrypted credential message to the main chipset <b>142</b> of the edge device <b>118</b>. In flow <b>2724</b>, the main chipset <b>142</b> of the edge device <b>118</b> decrypts the encrypted credential message using the shared cryptographic session key, s, retrieved from the memory of the edge device <b>118</b>.</p><p id="p-0264" num="0263">In flow <b>2726</b>, the main chipset <b>142</b> verifies the challenge data. For example, in embodiments in which the challenge data is a nonce, the main chipset <b>142</b> may confirm that the nonce is the same as the nonce previously encrypted and transmitted to the mobile device <b>114</b> (see, for example, flows <b>2704</b>-<b>2706</b> of <figref idref="DRAWINGS">FIG. <b>27</b></figref>). In other embodiments, it should be appreciated that the main chipset <b>142</b> of the edge device <b>118</b> may otherwise verify and/or validate the decrypted challenge data. In flow <b>2728</b>, the main chipset <b>142</b> transmits the signature of the encrypted credential blob to the cryptography chipset <b>144</b> and, in flow <b>2730</b>, the cryptography chipset <b>144</b> verifies the signature of the encrypted credential blob using the public cryptographic key, D, retrieved from the memory of the edge device <b>118</b>. That is, the cryptography chipset <b>144</b> verifies that the encrypted credential blob was signed using the private key that corresponds with the public key, D. It should be appreciated that the cryptography chipset <b>144</b> of the edge device <b>118</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment). In flow <b>2732</b>, the cryptography chipset <b>144</b> transmits the results of the verification to the main chipset <b>142</b>.</p><p id="p-0265" num="0264">In flow <b>2734</b>, the main chipset <b>142</b> of the edge device <b>118</b> decrypts the encrypted credential blob using the symmetric cryptographic key, K, retrieved from the memory of the edge device <b>118</b> and, in block <b>2736</b>, the edge device <b>118</b> extracts the credential and the public cryptographic key, C, from the decrypted credential blob. Further, the main chipset <b>142</b> may also extract the signature of the encrypted credential message. It should be appreciated that, in the illustrative embodiment, the edge device <b>118</b> and the key management system <b>108</b> (and/or other cloud servers <b>150</b>) are capable of encrypting/decrypting the credential blob including the credential, whereas the mobile device <b>114</b> is not. Instead, in such embodiments, the mobile device <b>114</b> acts as a conduit for the secure transfer of the credential between the key management system <b>108</b> and the edge device <b>118</b>.</p><p id="p-0266" num="0265">In flow <b>2738</b>, the main chipset <b>142</b> of the edge device <b>118</b> transmits the public cryptographic key, C, and the signature of the encrypted credential message extracted from the decrypted credential blob to the cryptography chipset <b>144</b> of the edge device <b>118</b>. In flow <b>2740</b>, the cryptography chipset <b>144</b> of the edge device <b>118</b> verifies the signature of the encrypted credential message using the public cryptographic key, C, extracted from the decrypted credential blob. That is, the cryptography chipset <b>144</b> verifies that the encrypted credential message was signed using the private key that corresponds with the public key, C. It should be appreciated that the cryptography chipset <b>144</b> of the edge device <b>118</b> executes the appropriate asymmetric signature verification algorithm based on the type of the cryptographic key pair (e.g., ECC in the illustrative embodiment). It should be further appreciated that the use of the cryptographic key pair (C, c) serves, for example, to prevent the unauthorized copying of a credential to a different mobile device <b>114</b> as described above in reference to <figref idref="DRAWINGS">FIGS. <b>15</b>-<b>17</b></figref>.</p><p id="p-0267" num="0266">In flow <b>2742</b>, the cryptography chipset <b>144</b> transmits the verification results to the main chipset <b>142</b> of the edge device <b>118</b>. In flow <b>2744</b>, the main chipset <b>144</b> of the edge device <b>118</b> processes the credential extracted from the credential blob. It should be appreciated that the credential may be processed in a manner similar to that described in reference to flow <b>1234</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref>. As such, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may make an access control decision based on the extracted credential and an access control database. Further, the edge device <b>118</b> itself or another device (e.g., the administrative system <b>110</b>, the access controller <b>134</b>, etc.) may perform the access control decision based on the particular embodiment. Further, in some embodiments, in response to successful authentication of the credential, the lock device <b>132</b> may unlock a lock mechanism as described above. In some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential. For example, in some embodiments, the method <b>1800</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref> may be executed to process a PIN of the user. In other embodiments, the user may be required to comply with a multi-factor authentication protocol requiring, for example, facial identification, thumb print, other biometrics, voice recognition, gestures, and/or additional information. It should be appreciated that, in some embodiments, the credential value and/or other portion of the credential may include an indicator that further authentication is required.</p><p id="p-0268" num="0267">Although the flows <b>2702</b>-<b>2744</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>2700</b> may be performed in parallel in some embodiments. Further, it should be appreciated that, in other embodiments, one or more of the flows <b>2702</b>-<b>2744</b> identified as being performed by or associated with the BLE chipset <b>140</b>, the main chipset <b>142</b>, and/or the cryptography chipset <b>144</b> may be performed by or may be associated with another of the BLE chipset <b>140</b>, the main chipset <b>142</b>, and/or the cryptography chipset <b>144</b>.</p><p id="p-0269" num="0268">Referring now to <figref idref="DRAWINGS">FIG. <b>32</b></figref>, in use, the access control system <b>100</b> may execute a method <b>3200</b> for revoking a wireless access credential. For example, among other reasons, an administrator may determine to revoke a wireless access credential when an employee departs or loses access privileges. It should be appreciated that the particular flows of the method <b>3200</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. As shown, the illustrative method <b>3200</b> involves a credential management system <b>102</b>, a mobile access hub <b>112</b>, and a mobile device <b>114</b> (e.g., executing a mobile application as described herein). Additionally, it should be appreciated that, in some embodiments, the method <b>3200</b> may be executed in conjunction with and subsequent to the method <b>2200</b> of <figref idref="DRAWINGS">FIGS. <b>22</b>-<b>23</b></figref> and the method <b>2400</b> of <figref idref="DRAWINGS">FIGS. <b>24</b>-<b>25</b></figref> (e.g., subsequent to assignment, issuance, and storage of the credential to the mobile device <b>114</b>).</p><p id="p-0270" num="0269">The illustrative method <b>3200</b> begins with flow <b>3202</b> in which the credential management system <b>102</b> receives a credential revocation instruction from an administrator (e.g., via the administrative system <b>110</b>) to revoke a particular credential, and the credential management system <b>102</b> processes that instruction. For example, in some embodiments, the credential management system <b>102</b> updates the relevant access control database(s) and/or other databases to reflect that the particular credential has been revoked and therefore is no longer valid. Depending on the particular embodiment, the revoked credential may be deleted, corrupted, tagged, and/or otherwise modified to be identified as a revoked/invalid credential. In other embodiments, it should be appreciated that the access control database(s) and/or other databases may be updated by the mobile access hub <b>112</b>.</p><p id="p-0271" num="0270">In flow <b>3204</b>, the credential management system <b>102</b> transmits the credential revocation instruction to the mobile access hub <b>112</b>. It should be appreciated that, in some embodiments, one or more unique identifiers of the credential may be transmitted in the credential revocation instruction payload. In flow <b>3206</b>, the mobile access hub <b>112</b> transmits a notification (e.g., a push notification) to the mobile device <b>114</b> indicating that the credential has been revoked and, in flow <b>3208</b>, the mobile device <b>114</b> launches the mobile application (e.g., automatically or in response to the user's input after reviewing the notification).</p><p id="p-0272" num="0271">In flow <b>3210</b>, the mobile device <b>114</b> builds a payload including a timestamp (e.g., generated from a real-time clock of the mobile device <b>114</b>) and the mobile number of the mobile device <b>114</b>. In flow <b>3212</b>, the mobile device <b>114</b> cryptographically signs the payloads using the private key, p, of the cryptographic key pair, (P, p), described above and retrieved from the memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the payload built in flow <b>3210</b>. In flow <b>3214</b>, the mobile device <b>114</b> transmits the signed payload to the mobile access hub <b>112</b> (e.g., via a TLS connection). In other words, in the illustrative embodiment, the mobile device <b>114</b> transmits the payload and the signature thereof to the mobile access hub <b>112</b>. As indicated above, in some embodiments, the payload may be utilized by the mobile access hub <b>112</b> as login credentials for the mobile device <b>114</b>.</p><p id="p-0273" num="0272">In flow <b>3216</b>, the mobile device <b>114</b> transmits a request to the mobile access hub <b>112</b> for the credential access rights of the mobile device <b>114</b>. In flow <b>3218</b>, the mobile access hub <b>112</b> determines the credential access rights of the mobile device <b>114</b>. For example, in some embodiments, the mobile access hub <b>112</b> may read the data stored in the access control database(s) and/or other relevant databases to determine the current access rights (e.g., as updated following the revocation). Further, in some embodiments, the mobile access hub <b>112</b> may communicate with the credential management system <b>102</b> to make such a determination. In flow <b>3220</b>, the mobile access hub <b>112</b> transmits a payload identifying the credential access rights of the mobile device <b>114</b> to the mobile device and, in flow <b>3222</b>, the mobile device <b>114</b> updates the memory of the mobile device <b>114</b> to update the credentials stored thereon. For example, in an embodiment in which the mobile number has two credentials and the first credential is revoked, it should be appreciated that the memory of the mobile device <b>114</b> is updated to identify only the second credential, thereby reflecting that the first credential is no longer valid.</p><p id="p-0274" num="0273">Although the flows <b>3202</b>-<b>3222</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>3200</b> may be performed in parallel in some embodiments.</p><p id="p-0275" num="0274">It should be appreciated that, in some embodiments, access credentials may expire after a certain period of time. For example, in some embodiments, the mobile application of the mobile device <b>114</b> may be required to check in every <b>48</b> hours to ensure the credential is still valid. Further, in some embodiments, the time after which the credential expires on the mobile device <b>114</b> may be configuration by the site administrator (e.g., via the administrative system <b>110</b>). It should be further appreciated that, although omitted in part for brevity of the description, the method <b>3200</b> may involve one or more of the cryptographic functions described above.</p><p id="p-0276" num="0275">Referring now to <figref idref="DRAWINGS">FIG. <b>34</b></figref>, the illustrative access control system <b>3400</b> includes a peripheral controller <b>3402</b>, a management server <b>3404</b>, one or more cloud servers <b>3406</b>, a mobile device <b>3408</b>, a mobile device <b>3410</b>, a gateway device <b>3412</b>, a credential enrollment reader <b>3414</b>, an RS-<b>485</b> reader <b>3416</b>, a Wiegand reader <b>3418</b>, and a credential <b>3420</b>. It should be appreciated that, in some embodiments, the access control system <b>3400</b> may &#x201c;overlap&#x201d; with the access control system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As such, in some embodiments, the access control systems <b>100</b>, <b>3400</b> may share one or more devices/systems such that the access control system <b>3400</b> includes one or more of the devices/systems of the access control system <b>100</b>. Further, as described herein, in some embodiments, the mobile access hub <b>112</b> of the access control system <b>100</b> may be configured to interface with the access control system <b>3400</b> or, more specifically, the management server <b>3404</b> and/or the cloud server(s) <b>3406</b> of the access control system <b>3400</b> (e.g., serving as a virtual router) in order to exchange data (e.g., for the control or management of devices in the access control system <b>100</b>). In some embodiments, the access control system <b>3400</b> and the cloud server(s) <b>3406</b> thereof may be embodied as a Schlage&#xae; ENGAGE&#x2122; system and/or the Schlage&#xae; ENGAGE&#x2122; cloud, respectively. As such, in some embodiments, the peripheral controller <b>3402</b> may be embodied as an ENGAGE&#x2122; enabled controller such as, for example, the CTE Single Door Controller with Multi-Technology Reader available from Schlage.</p><p id="p-0277" num="0276">It should be appreciated that the access control system <b>3400</b> may control access to a passageway (e.g., through a doorway) to grant or deny user access through the passageway based on the credential <b>3420</b> presented by the user. In particular, the peripheral controller <b>3402</b> may be electrically and/or communicatively coupled to a credential reader <b>3416</b>, <b>3418</b> and configured to make an access control decision based on credential data received from a credential presented by a user to the credential reader <b>3416</b>, <b>3418</b> (e.g., based on an access control database that defines access permissions for various users/credentials). Further, the peripheral controller <b>3402</b> may be electrically and/or communicatively coupled to an electronic lock, door strike, door latch, and/or other suitable lock mechanism configured to lock/unlock the corresponding passageway barrier (e.g., door/gate) such that the peripheral controller <b>3402</b> may instruct or signal (e.g., via a relay) the lock mechanism to permit/deny access through the barrier based on the access control decision. It should be appreciated that the peripheral controller <b>3402</b> is &#x201c;peripheral&#x201d; in the sense that it is not integrated with an electronic lock. That is, in the illustrative embodiment, the peripheral controller <b>3402</b> is not mounted on the door/barrier.</p><p id="p-0278" num="0277">The peripheral controller <b>3402</b> may be configured to communicate with the management server <b>3404</b>, the cloud server(s) <b>3406</b>, the mobile device <b>3408</b>, the mobile device <b>3410</b>, the gateway device <b>3412</b>, the RS-<b>485</b> reader <b>3416</b>, and/or the Wiegand reader <b>3418</b> using various communication connections. In particular, in some embodiments, the peripheral controller <b>3402</b> may communicate with the management server <b>3404</b> and/or the cloud server(s) <b>3406</b> over a Wi-Fi connection or via an Ethernet connection to exchange firmware updates, audits, an access control database or updates thereto, an access control schedule, usage information, and/or other suitable data. In some embodiments, the peripheral controller <b>3402</b> may communicate with the mobile device <b>3408</b> (e.g., via a mobile application) over a Bluetooth connection (e.g., BLE) and/or Wi-Fi connection. For example, the peripheral controller <b>3402</b> may communicate with the mobile device <b>3408</b> over a BLE connection to exchange data with a relatively small file size (e.g., configuration data) and over a Wi-Fi connection to exchange data with a relatively large file size (e.g., firmware updates, an access control database or updates thereto, audits, and/or usage information). Similarly, in some embodiments, the peripheral controller <b>3402</b> may communicate with the mobile device <b>3410</b> (e.g., via a mobile application of an OEM) over a Bluetooth connection (e.g., BLE) and/or Wi-Fi connection. For example, the peripheral controller <b>3402</b> may communicate with the mobile device <b>3410</b> over a Wi-Fi connection to exchange firmware data and/or over a BLE connection to exchange configuration data, server commands (e.g., from the management server <b>3404</b>), audits, and/or an access control database or updates thereto. In some embodiments, the peripheral controller <b>3402</b> may communicate with the gateway device <b>3412</b> over a Bluetooth (e.g., BLE) connection to exchange credential information, real-time data, and/or firmware updates. Further, the peripheral controller <b>3402</b> may communicate with the gateway device <b>3412</b> over an Ethernet connection between the peripheral controller <b>3402</b> and the gateway device <b>3412</b>. Additionally, in some embodiments, the peripheral controller <b>3402</b> may communicate directly with the management server <b>3404</b> via IP (e.g., using JSON), thereby enabling a direct to host communication connection.</p><p id="p-0279" num="0278">Further, it should be appreciated that the peripheral controller <b>3402</b> may be communicatively coupled to one or more readers. More specifically, in some embodiments, the peripheral controller <b>3402</b> may be communicatively coupled to an RS-485 reader <b>3416</b> via an RS-485 link (e.g., a serial communication link) and/or a Wiegand reader <b>3418</b> via corresponding Wiegand and control lines. Although the peripheral controller <b>3402</b> is described herein as only being communicatively coupled to the readers <b>3416</b>, <b>3418</b>, it should be appreciated that the peripheral controller <b>3402</b> may, additionally or alternatively, be structured and configured to be communicatively coupled to one or more other types of credential readers in other embodiments.</p><p id="p-0280" num="0279">As described above, the management server <b>3404</b> may be configured to communicate directly with the peripheral controller <b>3402</b> (e.g., via a Wi-Fi or Ethernet connection). Further, in some embodiments, the management server <b>3404</b> may be configured to communicate with the gateway device <b>3412</b> (e.g., via IP using JSON) and with the mobile device <b>3410</b> (e.g., via Wi-Fi, CDMA, LTE, and/or GSM) to exchange firmware/updates, audits, an access control database or updates thereto, an access control schedule, and or usage information. In other words, in such embodiments, the peripheral controller <b>3402</b> may communicate with the management server <b>3404</b> via the mobile device <b>3410</b> and/or the gateway device <b>3412</b>. For example, the peripheral controller <b>3402</b> may communicate with the gateway device <b>3412</b> via a BLE or Ethernet connection, and the gateway device <b>3412</b> may, in turn, forward the communicated data to the management server <b>3404</b> via IP. Similarly, the management server <b>3404</b> may communicate data to the gateway device <b>3412</b> and/or mobile device <b>3410</b>, which is forwarded to the peripheral controller <b>3402</b> via a suitable communication connection. As such, it should be appreciated that the peripheral controller <b>3402</b> may communicate with the management server <b>3404</b> via an online mode with a persistent real-time communication connection or via an offline mode (e.g., periodically or in response to an appropriate condition) depending on the particular embodiment. In some embodiments, the gateway device <b>3412</b> may be embodied as a hot spot device/reader and/or plug-in device.</p><p id="p-0281" num="0280">In some embodiments, the management server <b>3404</b> may be configured to manage credentials of the access control system <b>3400</b>. For example, the management server <b>3404</b> may be responsible for ensuring that the peripheral device <b>3402</b> has updated authorized credentials, whitelists, blacklists, device parameters, and/or other suitable data. Similarly, in some embodiments, the management server <b>3404</b> may be responsible for registering credentials with the access control system <b>3400</b> and/or distributing appropriate credentials for authorized access through the passageway controlled by the peripheral controller <b>3402</b>. Additionally, as described herein, the management server <b>3404</b> may receive security data, audit data, raw sensor data, and/or other suitable data from the peripheral controller <b>3402</b> (e.g., directly or indirectly) for management of the access control system <b>3400</b>. In some embodiments, the management server <b>3404</b> may be communicatively coupled with the cloud server(s) <b>3406</b> and/or a cloud-based application. In other embodiments, the management server <b>3404</b> may be embodied as an online server or a cloud-based server.</p><p id="p-0282" num="0281">Further, in some embodiments, the management server <b>3404</b> may communicate with multiple peripheral controllers <b>3402</b> at a single site (e.g., a particular building) and/or across multiple sites. That is, in such embodiments, the management server <b>3404</b> may be configured to receive data from peripheral controllers <b>3402</b> distributed across a single building, multiple buildings on a single campus, or across multiple locations. In some embodiments, the cloud server(s) <b>3406</b> may be embodied as a cloud-based device or collection of devices within a cloud environment. In such embodiments, it should be appreciated that the server(s) <b>3406</b> may be embodied as a &#x201c;serverless&#x201d; or server-ambiguous computing solution, for example, similar to the cloud server(s) <b>150</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> described above.</p><p id="p-0283" num="0282">The credential enrollment reader <b>3414</b> may be embodied as any credential enrollment reader configured to enroll credentials (e.g., no-tour credentials via RFID). For example, in some embodiments, the credential enrollment reader <b>3414</b> may be embodied as a multi-technology enrollment reader such as the Schlage&#xae; (formerly aptiQ&#xae;) MT<b>2</b>OW credential enrollment reader available from Schlage. In some embodiments, the credential <b>3420</b> may be embodied as a MIFARE&#xae; Classic or MIFARE DESFire&#x2122; EV1 smart credential. It should be appreciated that the credential enrollment reader <b>3414</b> may receive &#x201c;no tour&#x201d; credential enrollment data from the management server <b>3404</b> directly or indirectly. For example, in some embodiments, the credential enrollment reader <b>3414</b> may receive the credential enrollment data directly from the management server <b>3404</b> via a Wi-Fi connection or indirectly from the cloud server(s) <b>3406</b> via a Wi-Fi connection. In another embodiment, the credential enrollment reader <b>3414</b> may receive the credential enrollment data from the mobile device <b>3408</b> which, in turn, may have received the credential enrollment data from the cloud server(s) <b>3406</b> or the management server <b>3404</b>. As such, it should be appreciated that the mobile device <b>3408</b> may be configured to communicate with the cloud server(s) <b>3406</b> via a Wi-Fi, CDMA, LTE, and/or GSM connection to exchange data for commissioning the peripheral controller <b>3402</b> or an electronic lock, firmware and/or firmware updates, audits, an access control database or updates thereto, usage information, credential enrollment data, and/or other relevant data. Additionally, the mobile device <b>3408</b> may be configured to communicate with the credential enrollment reader <b>3414</b> via a Bluetooth connection (e.g., BLE) and/or NFC to exchange the credential enrollment data. In some embodiments, the RS-485 reader <b>3416</b> and/or the Weigand reader <b>3418</b> may be embodied as a Schlage&#xae; (formerly aptiQ&#xae;) MT11 multi-technology mullion reader or a Schlage&#xae; (formerly aptiQ&#xae;) MTK15 multi-technology single-gang keypad reader available from Schlage.</p><p id="p-0284" num="0283">It should be appreciated that, in some embodiments, the credential enrollment reader <b>3414</b> may store &#x201c;no tour&#x201d; credential enrollment data on the credential <b>3420</b> such that the reader <b>3416</b>, <b>3418</b> may read the credential enrollment data when the credential <b>3420</b> is presented to the reader <b>3416</b>, <b>3418</b> by the user. Further, the reader <b>3416</b>, <b>3418</b> may forward the credential enrollment data to the peripheral controller <b>3402</b>, and the peripheral controller <b>3402</b> may update the access control database stored thereon to permit access by the credential <b>3420</b> through a passageway controlled by the peripheral controller <b>3402</b>. Further, in some embodiments, the peripheral controller <b>3402</b> may simultaneously remove access permissions for another credential <b>3420</b> based on the credential enrollment data. As such, upon subsequent presentation of the newly enrolled credential <b>3420</b> to the reader <b>3416</b>, <b>3418</b>, the peripheral controller <b>3402</b> will permit access; however, upon subsequent presentation of the other credential <b>3420</b> (e.g., the old credential), the peripheral controller <b>3402</b> will deny access. In some embodiments, the peripheral controller <b>3402</b> may update a flag, field, bit, byte, or other data structure stored on the &#x201c;no tour&#x201d; credential <b>3420</b> to indicate that the access control database has been updated. As such, in some embodiments, the peripheral controller <b>3402</b> may first analyze that data structure of the &#x201c;no tour&#x201d; credential <b>3420</b> to determine whether updating the access control database is required. If not, the peripheral controller <b>3402</b> may treat the credential <b>3420</b> as an ordinary credential and determine whether access is to be granted or denied.</p><p id="p-0285" num="0284">Referring now to <figref idref="DRAWINGS">FIG. <b>35</b></figref>, the illustrative access control system <b>3500</b> includes an electronic lock <b>3502</b>, a management server <b>3504</b>, one or more cloud servers <b>3506</b>, a mobile device <b>3508</b>, a mobile device <b>3510</b>, a gateway device <b>3512</b>, a credential enrollment reader <b>3514</b>, and a credential <b>3520</b>. It should be appreciated that, in some embodiments, the management server <b>3504</b>, the one or more cloud servers <b>3506</b>, the mobile device <b>3508</b>, the mobile device <b>3510</b>, the gateway device <b>3512</b>, the credential enrollment reader <b>3514</b>, and/or the credential <b>3520</b> may be the same device(s) as, or similar to, the management server <b>3404</b>, the one or more cloud servers <b>3406</b>, the mobile device <b>3408</b>, the mobile device <b>3410</b>, the gateway device <b>3412</b>, the credential enrollment reader <b>3414</b>, and the credential <b>3420</b> and, therefore, the descriptions of those devices have not been repeated herein for brevity of the disclosure. The illustrative access control system <b>3500</b> is similar in functionality to the access control system <b>3400</b>, however, the peripheral controller <b>3402</b> has been replaced with the electronic lock <b>3502</b>. Unlike the peripheral controller <b>3402</b>, the controller of the electronic lock <b>3502</b> is integrated with the electronic lock <b>3502</b> and, therefore, not &#x201c;peripheral&#x201d; in that sense. In some embodiments, the access control system <b>3500</b> and the cloud server(s) <b>3506</b> thereof may be embodied as a Schlage&#xae; ENGAGE&#x2122; system and/or the Schlage&#xae; ENGAGE&#x2122; cloud, respectively. As such, in some embodiments, the electronic lock <b>3502</b> may be embodied as an ENGAGE&#x2122; enabled lock.</p><p id="p-0286" num="0285">It should be further appreciated that, in some embodiments, the access control system <b>3500</b> may &#x201c;overlap&#x201d; with the access control system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As such, in some embodiments, the access control systems <b>100</b>, <b>3500</b> may share one or more devices/systems such that the access control system <b>3500</b> includes one or more of the devices/systems of the access control system <b>100</b>. Further, as described herein, in some embodiments, the mobile access hub <b>112</b> of the access control system <b>100</b> may be configured to interface with the access control system <b>3500</b> or, more specifically, the management server <b>3504</b> and/or the cloud server(s) <b>3506</b> of the access control system <b>3500</b> (e.g., serving as a virtual router) in order to exchange data (e.g., for the control or management of devices in the access control system <b>100</b>).</p><p id="p-0287" num="0286">It should be appreciated that, depending on the particular embodiment, an offline edge device <b>118</b> can update a local access control database on the edge device <b>118</b> (or other device of the edge system <b>116</b>) using various techniques. For example, in some embodiments, the offline edge device <b>118</b> may establish a wireless communication connection (e.g., via Wi-Fi) with the cloud server <b>150</b> to retrieve access control updates periodically (e.g., daily). In other embodiment, a system administrator may visit or &#x201c;tour&#x201d; the edge device <b>118</b> to initiate an access control update locally at the edge device <b>118</b> (e.g., via a wired or wireless connection between the edge device <b>118</b> and the mobile device <b>114</b> of the administrator). In yet another embodiment, the system <b>100</b> may transmit &#x201c;no tour&#x201d; data to the mobile device <b>114</b> of a user having access to the edge device <b>118</b> for transmission to that edge device <b>118</b>. It should be appreciated that such a technique typically eliminates any need for a system administrator to visit the edge device <b>118</b> to make updates and also allows for updates to edge devices <b>118</b> that have no connectivity (e.g., no Wi-Fi connections or long-range wireless connections available). Such no tour implementations are described herein in reference to at least <figref idref="DRAWINGS">FIGS. <b>36</b>-<b>40</b></figref>.</p><p id="p-0288" num="0287">Referring now to <figref idref="DRAWINGS">FIGS. <b>36</b>-<b>37</b></figref>, simplified block diagrams illustrating various embodiments of no tour implementations of an access control system are shown. More specifically, <figref idref="DRAWINGS">FIGS. <b>36</b>-<b>37</b></figref> illustrate communications between subsets of the various devices/systems of an access control device. In other words, communication capabilities and use cases of subsystems <b>3600</b>, <b>3700</b> are shown.</p><p id="p-0289" num="0288">For example, referring now specifically to <figref idref="DRAWINGS">FIG. <b>36</b></figref>, the subsystem <b>3600</b> includes one or more cloud servers <b>3406</b>, <b>3506</b>, an enrollment reader <b>3414</b>, <b>3514</b>, a physical credential <b>3420</b>, <b>3520</b>, and an edge device <b>3402</b>, <b>3502</b>. In the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>36</b></figref>, the cloud servers <b>3406</b>, <b>3506</b> are configured to transmit data (e.g., access control data) to the enrollment reader <b>3414</b>, <b>3514</b> via a Wi-Fi communication connection, and the enrollment reader <b>3414</b>, <b>3514</b> is configured to write that data to a physical credential <b>3420</b>, <b>3520</b>. When the physical credential <b>3420</b>, <b>3520</b> is presented to the edge device <b>3402</b>, <b>3502</b>, it should be appreciated that the edge device <b>3402</b>, <b>3502</b> receives the data (e.g., access control data) via RFID and/or NFC. For example, in some embodiments, presentation of the physical credential <b>3420</b>, <b>3520</b> to the edge device <b>3402</b>, <b>3502</b> may cause the transfer of access control data to a local database of the edge device <b>3402</b>, <b>3502</b> and/or other configuration data (e.g., in addition to the transmittal of the access credential of the physical credential <b>3420</b>, <b>3520</b> itself). In some embodiments, the no tour data of the subsystem <b>3600</b> may be encrypted by a site key and further encrypted by a &#x201c;smart key.&#x201d; As such, the payload may be represented as E<sub>smartkey</sub>(E<sub>sitekey</sub>(no_tour_data)). It should be appreciated that, in some embodiments, the site key is a symmetric cryptographic key for encrypting the no tour data (e.g., used by the ENGAGE&#x2122; system), and the smart key may be embodied as a key configured to encrypt sectors of the physical credential <b>3420</b>.</p><p id="p-0290" num="0289">Referring now to <figref idref="DRAWINGS">FIG. <b>37</b></figref>, the subsystem <b>3700</b> includes a key management system <b>108</b>, a mobile access hub <b>112</b>, a mobile device <b>114</b>, an edge device <b>118</b>, and an access control system <b>3400</b>, <b>3500</b>. It should be appreciated that, in the illustrative embodiment of <figref idref="DRAWINGS">FIG. <b>37</b></figref>, the mobile access hub <b>112</b> serves the role of the enrollment reader <b>3414</b>, <b>3514</b> of <figref idref="DRAWINGS">FIG. <b>36</b></figref> and the mobile device <b>114</b> (or, more specifically, the mobile application) serves the role of the physical credential <b>3420</b>, <b>3520</b> of <figref idref="DRAWINGS">FIG. <b>36</b></figref>. In the illustrative embodiment, the key management system <b>108</b> is configured to provide a signature of the encrypted payload (e.g., the no tour data) to be delivered to the mobile device <b>114</b> using one or more of the communication methods described above for transmittal of a credential. In some embodiments, it should be appreciated that the key management system <b>108</b> may be embodied as the credential management system <b>102</b>, or the credential management system <b>102</b> may perform one or more functions of the key management system <b>108</b>. In some embodiments, the no tour data of the subsystem <b>3500</b> is secured by a credential key and signed by the cloud server <b>150</b> (as described above), so the edge device <b>118</b> is able to trust the data source. Further, the public key of the mobile device <b>114</b> ensures that data cannot be copied/moved to another device as described above, and the salt/nonce further randomizes the data. Sector data may also be transmitted to represent the data that would be provided by the reader with no tour data being in different sectors of the credential <b>3420</b>, <b>3520</b>. As such, in some embodiments, the payload may be represented as E<sub>credkey</sub>(E<sub>sitekey</sub>(no_tour_data)&#x2225;sector&#x2225;MD<sub>public</sub>&#x2225;SALT)cloudSig, or using the keys described above, may be represented as E<sub>K</sub>(E<sub>sitekey</sub>(no_tour_data)&#x2225;sector&#x2225;C&#x2225;nonce)dSig.</p><p id="p-0291" num="0290">Referring now to <figref idref="DRAWINGS">FIG. <b>38</b></figref>, in use, the access control system <b>100</b> may execute a method <b>3800</b> for delivering no tour data and/or other access control data. It should be appreciated that the particular flows of the method <b>3800</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. As shown, the illustrative method <b>3800</b> involves a mobile device <b>114</b> and an edge device <b>118</b>. In some embodiments, the method <b>3800</b> may be executed in conjunction with one or more of the various methods described above. As such, various details may be omitted herein for brevity of the description. For example, the illustrative method <b>3800</b> assumes that the mobile device <b>114</b> has stored thereon the asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, described above.</p><p id="p-0292" num="0291">The illustrative method <b>3800</b> begins with flow <b>3802</b> in which the mobile device <b>114</b> and the edge device <b>118</b> establish a Bluetooth communication session/connection with one another (e.g., a BLE 4.2 or newer connection) and perform a secure key exchange to generate a shared cryptographic session key, s, separately at each of the mobile device <b>114</b> and the edge device <b>118</b>. As described above, the session key, s, may generated based on Elliptical Curve Diffie-Hellman (ECDH). More specifically, in some embodiments, the mobile device <b>114</b> and the edge device <b>118</b> may execute a method similar to the method <b>2600</b> of <figref idref="DRAWINGS">FIG. <b>26</b></figref> to perform the secure key exchange. However, it should be appreciated that the session key, s, may be generated based on a different key derivation function and/or other suitable algorithm in other embodiments. Following the execution of the secure key exchange, each of the mobile device <b>114</b> and the edge device <b>118</b> has the same session key, s, stored thereon.</p><p id="p-0293" num="0292">In flow <b>3804</b>, the edge device <b>118</b> encrypts challenge data with the shared cryptographic session key, s. In some embodiments, it should be appreciated that the challenge data may be embodied as, or otherwise include, a nonce value, for example, to reduce the efficacy of replay attacks. Additionally, in some embodiments, the encrypted data may also include the message size and/or other relevant data. As such, in some embodiments, the encrypted challenge data may be represented as E<sub>s</sub>(challenge&#x2225;size). In flow <b>3806</b>, the edge device <b>118</b> transmits the encrypted challenge data, E<sub>s</sub>(challenge&#x2225;size), to the mobile device <b>114</b> via the established Bluetooth communication connection.</p><p id="p-0294" num="0293">In flow <b>3808</b>, the mobile device <b>114</b> decrypts the encrypted challenge data using the shared cryptographic session key, s, retrieved from a memory of the mobile device <b>114</b>. In flow <b>3810</b>, the mobile device <b>114</b> (e.g., using the mobile application) builds a no tour payload including the no tour data (e.g., which may itself be encrypted), the challenge data received from the edge device <b>118</b>, and the public cryptographic key, C, and the mobile device <b>114</b> encrypts that no tour payload with the shared cryptographic session key, s. In flow <b>2812</b>, the mobile device <b>114</b> cryptographically signs the encrypted no tour payload using the private key, c, of the cryptographic key pair (C, c) retrieved from a memory of the mobile device <b>114</b>. In other words, the mobile device <b>114</b> generates a cryptographic signature of the encrypted no tour payload.</p><p id="p-0295" num="0294">In flow <b>3814</b>, the mobile device <b>114</b> transmits the signed and encrypted no tour payload to the edge device <b>118</b>. As such, in the illustrative embodiment, the mobile device <b>114</b> transmits the encrypted no tour payload and the signature thereof to the edge device <b>118</b>. In flow <b>3816</b>, the edge device <b>118</b> decrypts the encrypted no tour message using the shared cryptographic session key, s, retrieved from the memory of the edge device <b>118</b> and verifies the cryptographic signature using the public cryptographic key, C, extracted from the payload in a manner similar to that described above.</p><p id="p-0296" num="0295">In flow <b>3818</b>, the edge device <b>118</b> processes the no tour payload. For example, as described above, the edge device <b>118</b> (e.g., an offline access control device) may update its local access control database and/or perform other updates to the edge device <b>118</b> or data stored thereon based on the corresponding content of the no tour data. For example, in some embodiments, the no tour data may include access control updates for mobile devices and/or physical credentials different from the mobile device <b>114</b> that transmitted the no tour data. In flow <b>3820</b>, the edge device <b>118</b> generates feedback data based on the processing of the no tour payload and, in flow <b>3822</b>, the edge device <b>118</b> transmits the feedback data to the mobile device <b>114</b>. In flow <b>3824</b>, the mobile device <b>114</b> processes the feedback data and, if successful, the mobile device <b>114</b> removes the no tour payload stored thereon. In some embodiments, it should be appreciated that the edge device <b>118</b> only transmits feedback data if the processing of the no tour data was successful.</p><p id="p-0297" num="0296">Although the flows <b>3802</b>-<b>3824</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>3800</b> may be performed in parallel in some embodiments.</p><p id="p-0298" num="0297">Referring now to <figref idref="DRAWINGS">FIG. <b>39</b></figref>, in use, the access control system <b>100</b> may execute a method <b>3900</b> for delivering no tour data and/or other access control data. It should be appreciated that the particular flows of the method <b>3900</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. As shown, the illustrative method <b>3900</b> involves a cloud server <b>150</b>, a mobile device <b>114</b>, and an edge device <b>118</b>. In some embodiments, the method <b>3900</b> may be executed in conjunction with one or more of the various methods described above. As such, various details may be omitted herein for brevity of the description. For example, in some embodiments, the illustrative method <b>3900</b> assumes that the mobile device <b>114</b> has stored thereon the asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, described above. Additionally, as described above, although the cloud server <b>150</b> is referenced herein as a cloud-based device, it should be appreciated that the cloud server <b>150</b> may be embodied as one or more computing devices situated outside of a cloud computing environment in some embodiments. In some embodiments, the cloud server <b>150</b> of <figref idref="DRAWINGS">FIG. <b>39</b></figref> may be embodied as a system that includes one or more of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> described in reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0299" num="0298">The illustrative method <b>3900</b> begins with flow <b>3902</b> in which the cloud server <b>150</b> updates access control data associated with one or more edge devices <b>118</b>. For example, the access control data may be updated in response to the addition, deletion, and/or modification of access permissions for a particular user and/or mobile device <b>114</b> of the system <b>100</b> (e.g., by a system administrator or other suitable input/stimulus). In particular, in some embodiments, the access control data update may update the access permissions associated with a particular user and/or credential including, for example, the edge devices <b>118</b> to which the user and/or credential has access (e.g., among other edge devices <b>118</b>), an access authorization schedule identifying the time(s) at which such access is permission, an access initiation time indicating a first time at which access is authorized, an expiration time indicating a time after which access is unauthorized, and/or other access-related information depending on the particular embodiment. Further, in some embodiments, the access control data may include configuration data for one or more devices of the edge system <b>116</b>, firmware/software updates for one or more devices of the edge system <b>116</b>, audit data, usage information, and/or other relevant access control data.</p><p id="p-0300" num="0299">In flow <b>3904</b>, the mobile device <b>114</b> transmits (e.g., securely) its credential to the edge device <b>118</b>. For example, in some embodiments, the mobile device <b>114</b> and the edge device <b>118</b> may establish a Bluetooth communication session/connection (e.g., a BLE <b>4</b>.<b>2</b> or new connection) consistent with the techniques described above. In flow <b>3906</b>, the edge device <b>118</b> processes the credential in an attempt to authenticate the credential. For example, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may make an access control decision based on the extracted credential and an access control database (e.g., stored locally) to determine whether the credential authorizes the user/bearer to perform a requested action (e.g., gain access). Further, in some embodiments, in response to successful authentication of the credential, the edge device <b>118</b> may unlock a lock mechanism as described above. In some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential. For example, in some embodiments, the user may be required to comply with a multi-factor authentication protocol requiring, for example, facial identification, thumb print, other biometrics, voice recognition, gestures, PIN entry, and/or additional information.</p><p id="p-0301" num="0300">If the authentication of the credential is unsuccessful (e.g., in response to a determination that the credential/user is not authorized to gain access), in flow <b>3908</b>, the edge device <b>118</b> generates and transmits a message to the mobile device <b>114</b> indicating that access has been denied, which the mobile device <b>114</b> transmits to the cloud server <b>150</b> in flow <b>3910</b>. Depending on the particular embodiment, the mobile device <b>114</b> may simply forward the access denied message received from the edge device <b>118</b> and/or generate a new message that is indicative of the access denial for transmission to the cloud server <b>150</b>. In some embodiments, it should be appreciated that the mobile device <b>114</b> may establish a wireless communication connection (e.g., a Wi-Fi communication connection, cellular communication connection, telecommunication connection, and/or other suitable long range wireless communication connection) with the cloud server <b>114</b> in order to transmit the access denial message.</p><p id="p-0302" num="0301">In flow <b>3912</b> (e.g., in response to the access denial), the cloud server <b>150</b> and the edge device <b>118</b> establish a secure communication connection/channel via the mobile device <b>114</b>. For example, in some embodiments, the mobile device <b>114</b> serves as a secure tunnel and intermediary node between the cloud server <b>150</b> and the edge device <b>118</b>. In some embodiments, it should be appreciated that the establishment of the secure communication channel between the cloud server <b>150</b> and the edge device <b>118</b> via the mobile device <b>114</b> may be done in conjunction with the transmittal of the access denial message from the mobile device <b>114</b> to the cloud server <b>150</b>.</p><p id="p-0303" num="0302">In flow <b>3914</b>, the cloud server <b>150</b> transmits one or more of the updates to the access control data associated with the edge device <b>118</b> to the edge device <b>118</b> via the secure communication channel between the cloud server <b>150</b> and the edge device <b>118</b> (i.e., via the mobile device <b>114</b>). It should be appreciated that the particular access control data transmitted from the cloud server <b>150</b> to the edge device <b>118</b> may vary depending on the particular embodiment. For example, in some embodiments, the cloud server <b>150</b> may transmit all of the updated access rights associated with the edge device <b>118</b>, whereas in other embodiments, the cloud server <b>150</b> may transmit only those updated access rights associated with specific users/credentials (e.g., of the mobile device <b>114</b>) to the edge device <b>118</b>. In yet other embodiments, the cloud server <b>150</b> may securely transmit some other subset of updated access rights to the edge device <b>118</b>. Further, it should be appreciated that the cloud server <b>150</b> may also transmit configuration data, firmware/software updates, and/or other relevant access control data to the edge device <b>118</b>. In some embodiments, it should be appreciated that the access control data transmitted from the cloud server <b>150</b> to the edge device <b>118</b> via the secure communication channel is in an encrypted format and/or otherwise inaccessible to the intermediary mobile device <b>114</b>.</p><p id="p-0304" num="0303">In flow <b>3916</b>, the edge device <b>118</b> updates the access control database of the edge system <b>116</b> based on the updates received from the cloud server <b>150</b>. Further, in some embodiments, the edge system <b>116</b> may perform (or schedule to perform) a firmware/software update, re-configuration, and/or other action dictated by a relevant update.</p><p id="p-0305" num="0304">In flow <b>3918</b>, the mobile device <b>114</b> re-transmits (e.g., securely) its credential to the edge device <b>118</b>. Depending on the particular embodiment, the mobile device <b>114</b> may leverage an existing communication connection (e.g., a Bluetooth communication connection) with the edge device <b>118</b> or establish a new communication connection/session with the edge device <b>118</b> to do so. In flow <b>3920</b>, the edge device <b>118</b> again processes the credential in an attempt to authenticate the credential. In some embodiments, rather than processing the credential of the mobile device <b>114</b> having been re-transmitted to the edge device <b>118</b>, it should be appreciated that the edge device <b>118</b> may temporarily store the denied credential for the subsequent authentication attempt following the update to the access control database.</p><p id="p-0306" num="0305">In flow <b>3922</b>, the edge device <b>118</b> generates and transmits an access control decision message to the mobile device <b>114</b> indicating whether the credential was successfully authenticated (e.g., and access was gained). Specifically, in some embodiments, the message may indicate whether access was granted or denied. Further, in response to successful authentication of the credential, it should be appreciated that the edge device <b>116</b> may unlock a lock mechanism as described above. Further, as described above, in some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential.</p><p id="p-0307" num="0306">Additionally, in some embodiments, the edge device <b>118</b> may transmit an update confirmation message to the mobile device <b>114</b> indicative of whether the update to the access control database of the edge system <b>116</b> was successful and/or unsuccessful, which may be transmitted/forwarded to the cloud server <b>150</b> in flow <b>3924</b>. In other embodiments, the edge device <b>118</b> may only transmit the update confirmation message to the mobile device <b>114</b> (and/or the mobile device <b>114</b> may only transmit/forward the update confirmation message to the cloud server <b>150</b>) if the update to the access control database of the edge system <b>116</b> was successful. In yet other embodiments, the edge device <b>118</b> may only transmit the update confirmation message to the mobile device <b>114</b> (and/or the mobile device <b>114</b> may only transmit/forward the update confirmation message to the cloud server <b>150</b>) if the update to the access control database of the edge system <b>116</b> was unsuccessful. In other embodiments, it should be appreciated that the edge device <b>118</b> provides no indication of the success of the update to the access control database of the edge system <b>116</b> to the mobile device <b>114</b> (and/or the mobile device <b>114</b> does not transmit/forward such indication to the cloud server <b>150</b>) and, instead, the cloud server <b>150</b> assumes that the transmittal of the updated access control data via the secure communication channel between the cloud server <b>150</b> and the edge device <b>118</b> via the mobile device <b>114</b> (in flow <b>3914</b>) has resulted in a successful update to the access control database of the edge system <b>116</b>.</p><p id="p-0308" num="0307">Although the flows <b>3902</b>-<b>3924</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>3900</b> may be performed in parallel in some embodiments.</p><p id="p-0309" num="0308">Referring now to <figref idref="DRAWINGS">FIG. <b>40</b></figref>, in use, the access control system <b>100</b> may execute a method <b>4000</b> for delivering no tour data and/or other access control data. It should be appreciated that the particular flows of the method <b>4000</b> are illustrated by way of example, and such flows may be combined or divided, added or removed, and/or reordered in whole or in part depending on the particular embodiment, unless stated to the contrary. As shown, the illustrative method <b>4000</b> involves a cloud server <b>150</b>, a mobile device <b>114</b>, and an edge device <b>118</b>. In some embodiments, the method <b>4000</b> may be executed in conjunction with one or more of the various methods described above. As such, various details may be omitted herein for brevity of the description. For example, in some embodiments, the illustrative method <b>4000</b> assumes that the mobile device <b>114</b> has stored thereon the asymmetric cryptographic key pair, (C, c), including a private cryptographic key, c, and a public cryptographic key, C, described above. Additionally, as described above, although the cloud server <b>150</b> is referenced herein as a cloud-based device, it should be appreciated that the cloud server <b>150</b> may be embodied as one or more computing devices situated outside of a cloud computing environment in some embodiments. In some embodiments, the cloud server <b>150</b> of <figref idref="DRAWINGS">FIG. <b>40</b></figref> may be embodied as a system that includes one or more of the credential management system <b>102</b>, the credential tracking system <b>104</b>, the credential ordering system <b>106</b>, the key management system <b>108</b>, the administrative system <b>110</b>, and/or the mobile access hub <b>112</b> described in reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0310" num="0309">The illustrative method <b>4000</b> begins with flow <b>4002</b> in which the cloud server <b>150</b> updates access control data associated with one or more edge devices <b>118</b>. For example, similar to the method <b>3900</b> of <figref idref="DRAWINGS">FIG. <b>39</b></figref>, the access control data may be updated in response to the addition, deletion, and/or modification of access permissions for a particular user and/or mobile device <b>114</b> of the system <b>100</b> (e.g., by a system administrator or other suitable input/stimulus). In particular, in some embodiments, the access control data update may update the access permissions associated with a particular user and/or credential including, for example, the edge devices <b>118</b> to which the user and/or credential has access (e.g., among other edge devices <b>118</b>), an access authorization schedule identifying the time(s) at which such access is permission, an access initiation time indicating a first time at which access is authorized, an expiration time indicating a time after which access is unauthorized, and/or other access-related information depending on the particular embodiment. Further, in some embodiments, the access control data may include configuration data for one or more devices of the edge system <b>116</b>, firmware/software updates for one or more devices of the edge system <b>116</b>, audit data, usage information, and/or other relevant access control data.</p><p id="p-0311" num="0310">In flow <b>4004</b>, the mobile device <b>114</b> establishes a wireless communication connection (e.g., a Wi-Fi communication connection, cellular communication connection, telecommunication connection, and/or other suitable long range wireless communication connection) with the cloud server <b>114</b> (e.g., via the Internet) and receives one or more of the updates to the access control data from the cloud server <b>150</b>. For example, in some embodiments, the cloud server <b>150</b> may determine (e.g., based on an access control database and/or relevant updates thereto) which edge devices <b>118</b> to which the user/credential and, therefore, the mobile device <b>114</b> is authorized to access, and the cloud server <b>150</b> may transmit the updated access control data associated with those edge devices <b>118</b> to the mobile device <b>114</b>. In some embodiments, the cloud server <b>150</b> may determine (e.g., based on historical data) which edge devices <b>118</b> with which the mobile device has previously interacted and transmit the updated access control data associated with each of those edge devices <b>118</b> (e.g., on the premise that the mobile device <b>114</b> is likely to again interact with such edge devices <b>118</b>). It should be appreciated that the device <b>114</b>, <b>150</b> initiating the establishment of the wireless communication connection between the mobile device <b>114</b> and the cloud server <b>150</b> may vary depending on the particular embodiment.</p><p id="p-0312" num="0311">It should be appreciated that the particular access control data transmitted from the cloud server <b>150</b> to the mobile device <b>114</b> may vary depending on the particular embodiment. For example, in some embodiments, the cloud server <b>150</b> may transmit all of the updated access rights associated with each edge device <b>118</b>, whereas in other embodiments, the cloud server <b>150</b> may transmit only those updated access rights associated with specific users/credentials (e.g., of the mobile device <b>114</b>) for each edge device <b>118</b>. In yet other embodiments, the cloud server <b>150</b> may securely transmit some other subset of updated access rights to the mobile device <b>114</b>. Further, it should be appreciated that the cloud server <b>150</b> may also transmit configuration data, firmware/software updates, and/or other relevant access control data to the mobile device <b>114</b>. In some embodiments, it should be appreciated that the access control data transmitted from the cloud server <b>150</b> to the mobile device <b>114</b> is in an encrypted format and/or otherwise stored in memory of the mobile device <b>114</b> in a format inaccessible to the mobile device <b>114</b>.</p><p id="p-0313" num="0312">In flow <b>4006</b>, the mobile device <b>114</b> scans (e.g., via Bluetooth) for edge devices <b>118</b> within communication range of the mobile device <b>114</b> to determine whether the mobile device <b>114</b> is within communication range of an edge device <b>118</b> for which the mobile device <b>114</b> has received updated access control data. When the mobile device <b>114</b> is within the relevant communication range (e.g., Bluetooth communication range) of such an edge device <b>118</b>, in flow <b>4008</b>, the edge device <b>118</b> transmits a response message to the Bluetooth scan message (e.g., beacon). Further, in some embodiments, the mobile device <b>114</b> and the edge device <b>118</b> may establish a Bluetooth communication session/connection (e.g., a BLE 4.2 or new connection) consistent with the techniques described above.</p><p id="p-0314" num="0313">In flow <b>4010</b>, the mobile device <b>114</b> transmits one or more of the updates to the access control data associated with the edge device <b>118</b> to the edge device <b>118</b> via the secure communication connection between the mobile device <b>114</b> and the edge device <b>118</b>. It should be appreciated that the particular access control data transmitted from the mobile device <b>114</b> to the edge device <b>118</b> may vary depending on the particular embodiment. For example, in the illustrative embodiment, the mobile device <b>114</b> may transmit all of the updated access rights associated with the edge device <b>118</b> stored on the mobile device <b>114</b>, whereas in other embodiments, the mobile device <b>114</b> may transmit only those updated access rights associated with specific users/credentials (e.g., of the mobile device <b>114</b>) to the edge device <b>118</b>. In yet other embodiments, the mobile device <b>114</b> may securely transmit some other subset of updated access rights to the edge device <b>118</b>. Further, as indicated above, it should be appreciated that the mobile device <b>114</b> may also transmit configuration data, firmware/software updates, and/or other relevant access control data to the edge device <b>118</b>.</p><p id="p-0315" num="0314">In flow <b>4012</b>, the edge device <b>118</b> updates the access control database of the edge system <b>116</b> based on the updates received from the mobile device <b>114</b>. Further, in some embodiments, the edge system <b>116</b> may perform (or schedule to perform) a firmware/software update, re-configuration, and/or other action dictated by a relevant update.</p><p id="p-0316" num="0315">In flow <b>4014</b>, the mobile device <b>114</b> transmits (e.g., securely) its credential to the edge device <b>118</b>. Depending on the particular embodiment, the mobile device <b>114</b> may leverage an existing communication connection (e.g., a Bluetooth communication connection) with the edge device <b>118</b> or establish a new communication connection/session with the edge device <b>118</b> to do so. Further, it should be appreciated that, in some embodiments, the mobile device <b>114</b> may transmit the updated access control data to the edge device <b>118</b> when the mobile device <b>114</b> is a first distance from the edge device <b>118</b> and subsequently (e.g., after the edge device <b>118</b> has updated the access control database) transmit the credential to the edge device <b>118</b> when the mobile device is a second (nearer) distance from the edge device <b>118</b>. Accordingly, it should be appreciated that, in some embodiments, the method <b>4000</b> may be performed in conjunction with one or more of the user intent techniques described herein.</p><p id="p-0317" num="0316">In flow <b>4016</b>, the edge device <b>118</b> processes the credential in an attempt to authenticate the credential. For example, in some embodiments, the edge device <b>118</b> and/or other device(s) in the edge system <b>116</b> may make an access control decision based on the extracted credential and an access control database (e.g., stored locally) to determine whether the credential authorizes the user/bearer to perform a requested action (e.g., gain access). Further, in some embodiments, in response to successful authentication of the credential, the edge device <b>118</b> may unlock a lock mechanism as described above. In some embodiments, it should be appreciated that further authentication of the user and/or the mobile device <b>114</b> may be required in advance of, or in conjunction with, the processing of the credential. For example, in some embodiments, the user may be required to comply with a multi-factor authentication protocol requiring, for example, facial identification, thumb print, other biometrics, voice recognition, gestures, PIN entry, and/or additional information.</p><p id="p-0318" num="0317">In flow <b>4018</b>, the edge device <b>118</b> generates and transmits an access control decision message to the mobile device <b>114</b> indicating whether the credential was successfully authenticated (e.g., and access was gained). Specifically, in some embodiments, the message may indicate whether access was granted or denied. Additionally, in some embodiments, the edge device <b>118</b> may transmit an update confirmation message to the mobile device <b>114</b> indicative of whether the update to the access control database of the edge system <b>116</b> was successful and/or unsuccessful, which may be transmitted/forwarded to the cloud server <b>150</b> in flow <b>4020</b>. In other embodiments, the edge device <b>118</b> may only transmit the update confirmation message to the mobile device <b>114</b> (and/or the mobile device <b>114</b> may only transmit/forward the update confirmation message to the cloud server <b>150</b>) if the update to the access control database of the edge system <b>116</b> was successful. In yet other embodiments, the edge device <b>118</b> may only transmit the update confirmation message to the mobile device <b>114</b> (and/or the mobile device <b>114</b> may only transmit/forward the update confirmation message to the cloud server <b>150</b>) if the update to the access control database of the edge system <b>116</b> was unsuccessful. In other embodiments, it should be appreciated that the edge device <b>118</b> provides no indication of the success of the update to the access control database of the edge system <b>116</b> to the mobile device <b>114</b> (and/or the mobile device <b>114</b> does not transmit/forward such indication to the cloud server <b>150</b>) and, instead, the cloud server <b>150</b> assumes that the transmittal of the updated access control data to the mobile device <b>114</b> (in flow <b>4004</b>) has resulted in a successful update to the access control database of the edge system <b>116</b>. Further, in some embodiments, the edge device <b>118</b> may not generate or transmit any access control decision message to the mobile device <b>114</b>.</p><p id="p-0319" num="0318">Although the flows <b>4002</b>-<b>4020</b> are described in a relatively serial manner, it should be appreciated that various flows of the method <b>4000</b> may be performed in parallel in some embodiments.</p><p id="p-0320" num="0319">Referring now to <figref idref="DRAWINGS">FIG. <b>41</b></figref>, a simplified block diagram of a provisioning system <b>4100</b> for cryptographic key provisioning during the factory setup of an edge device <b>118</b> is shown. More specifically, in some embodiments, the provisioning system <b>4100</b> may involve the provisioning and/or association of various cryptographic keys of the cryptography chipset <b>144</b> of the edge device <b>118</b>. As shown in <figref idref="DRAWINGS">FIG. <b>41</b></figref>, the provisioning system <b>4100</b> includes the edge device <b>118</b>, a factory tester machine <b>4102</b>, a factory service <b>4104</b>, and a key management service <b>4106</b>. In some embodiments, the factory tester machine <b>4102</b>, the factory service <b>4104</b>, and/or the key management service <b>4104</b> may be embodied as a device similar to the computing device <b>200</b> described in reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Additionally, in some embodiments, the key management service <b>4104</b> may be embodied as, or form a portion of, the key management system <b>108</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>33</b></figref>, the chart <b>3300</b> describes various cryptographic keys that are involved in the provisioning depicted in <figref idref="DRAWINGS">FIG. <b>41</b></figref>.</p><p id="p-0321" num="0320">In the illustrative embodiment, when provisioning keys in the factory, the edge device <b>118</b> generates a unique asymmetric cryptographic key pair (R<b>1</b>, r<b>1</b>) including the public cryptographic key, RI, and the private cryptographic key, r<b>1</b>. The public cryptographic key, RI, may be shared and stored in the key management service <b>3906</b> (e.g., the key management system <b>108</b>) and may be used to generate a shared cryptographic session key, s or S, (e.g., via ECDH) which may be used to encrypt one or more cryptographic keys downloaded in the factory. Further, during the key download in the factor, the manufacturer origin public cryptographic keys, H<b>1</b> and H<b>2</b>, may be downloaded to the edge device <b>118</b>.</p><p id="p-0322" num="0321">More specifically, in some embodiments, an asymmetric cryptographic key pair (F, f) including the public cryptographic key, F, and the private cryptographic key, f, is associated with each product line (e.g., each type of edge device <b>118</b>) such that the private key, f is stored to the edge device <b>118</b> and the public key, F, is stored to the key management service <b>4106</b>. As shown in <figref idref="DRAWINGS">FIG. <b>41</b></figref>, the edge device <b>118</b> cryptographically signs the public cryptographic key, RI, using the private cryptographic key, f and transmits both the public key, RI, and its signature (fSig) to the factory tester machine <b>4102</b>. The factory tester machine <b>4102</b> generates a serial number associated with the edge device <b>118</b>, generates a provisioning request (e.g., including RI, fSig, the serial number, the model number of the edge device <b>118</b>, and/or other relevant data), and transmits the provisioning request to the factory service <b>4104</b>, which in turn transmits the provisioning request to the key management service <b>4106</b>. The key management service <b>4106</b> may validate/verify the signature (fSig) of the public key (RI) based on the public key stored by the key management service <b>4106</b>, save the validated public key (RI) and process the provisioning request.</p><p id="p-0323" num="0322">It should be appreciated that the key management service <b>4106</b> may include a secure key vault having stored thereon various cryptographic keys including, for example, the cryptographic key pair (H<b>1</b>, hl), the cryptographic key pair (H<b>2</b>, h<b>2</b>), the cryptographic key pair (D,d), the symmetric cryptographic key (K), the public cryptographic key (RI) after receiving the provisioning request, and/or the public cryptographic key (F), the significance and properties of each of which is described in the chart <b>3300</b> of <figref idref="DRAWINGS">FIG. <b>33</b></figref>.</p><p id="p-0324" num="0323">The key management service <b>4106</b> generates an ephemeral cryptographic key pair (Q, q), which is generated on a per-provisioning-request basis and not saved, and generates a provisioning payload. Further, the shared cryptographic session key, S, may be generated based on the private ephemeral key (q) and the public key (R<b>1</b>). More specifically, in some embodiments, the shared cryptographic session key, S, may be generated according to ECDH (R<b>1</b>, q)=S. In some embodiments, the provisioning payload includes the public ephemeral key (Q) and other cryptographic keys including, for example, H<b>1</b>, H<b>2</b>, K, and D. In particular, in the illustrative embodiment, those cryptographic keys may be encrypted and signed according to E<sub>s</sub>(H<b>1</b>)h<b>2</b>Sig, E<sub>s</sub>(H<b>2</b>)h<b>1</b>Sig, E<sub>s</sub>(K)[h<b>1</b>Sig,h<b>2</b>Sig], and E<sub>s </sub>(D) [h<b>1</b>Sig, h<b>2</b>Sig].</p><p id="p-0325" num="0324">The provisioning payload including such cryptographic keys is transmitted by the key management service <b>4106</b> to the factory service <b>4104</b>, which forwards the provisioning payload to the factory tester machine <b>4102</b>, which in turn forwards the provisioning payload to the edge device <b>118</b> for provisioning thereon. Upon receipt of the provisioning payload, the edge device <b>118</b> generates the shared cryptographic session key, S, based on the public ephemeral key (Q) received with the provisioning payload and the private key (r<b>1</b>) retrieved from the memory of the edge device <b>118</b>. More specifically, in some embodiments, the shared cryptographic session key, S, may be generated according to ECDH(Q, r<b>1</b>)=S . The edge device <b>118</b> decrypts the various keys included in the provisioning payload using the shared cryptographic session key, S, cross validates/verifies the various signatures using the corresponding decrypted public cryptographic keys, H<b>1</b> and H<b>2</b>, and then installs the cryptographic keys from the provisioning payload into the memory of the edge device <b>118</b> or, more specifically, into the cryptography chipset <b>144</b> in some embodiments.</p><p id="p-0326" num="0325">Referring now to <figref idref="DRAWINGS">FIG. <b>42</b></figref>, a simplified bloc diagram of a system <b>4200</b> for rolling cryptographic keys when the edge device <b>118</b> is in the field. As shown in <figref idref="DRAWINGS">FIG. <b>42</b></figref>, the system <b>4200</b> includes the edge device <b>118</b>, the mobile device <b>114</b>, and the cloud server <b>150</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As described above (e.g., in reference to <figref idref="DRAWINGS">FIG. <b>30</b></figref>), during the factory provisioning of cryptographic keys, the public key (R<b>1</b>) are provided to the key management service <b>4106</b> (e.g., the key management system <b>108</b>) and the manufacturer origin keys (H<b>1</b> and H<b>2</b>) are stored to the edge device <b>118</b>. As such, the cloud server <b>150</b> is able to generate a new set of cryptographic keys that can be downloaded to the edge device <b>118</b>, which may involve an ECDH session key unique to the edge device <b>118</b> and a signature by the cloud <b>150</b> using a manufacturer origin private key (h<b>1</b> or h<b>2</b>) to verify that the key originated from the cloud server <b>150</b>. Because the keys used to roll are different from the keys used for rolling, there is an opportunity to recover the keys if a failure occurs.</p><p id="p-0327" num="0326">It should be appreciated from <figref idref="DRAWINGS">FIG. <b>42</b></figref> that the transmission of the rolling payload from the cloud server <b>150</b> to the edge device <b>118</b> is similar to the transmission of the provisioning payload to the edge device <b>118</b> as described in reference to <figref idref="DRAWINGS">FIG. <b>41</b></figref>. In particular, the cloud server <b>150</b> generates an ephemeral cryptographic key pair (Q, q), which is generated on a per-request basis and not saved, and generates a rolling payload. Further, the shared cryptographic session key, S, may be generated based on the private ephemeral key (q) and the public key (R<b>1</b>). More specifically, in some embodiments, the shared cryptographic session key, S, may be generated according to ECDH (R<b>1</b>, q)=S . In some embodiments, the rolling payload includes the public ephemeral key (Q), which is cryptographically signed by the origin key (h<b>1</b>). Further, the rolling payload may include the cryptographic keys, HI, H<b>2</b>, K, and/or D. In particular, in the illustrative embodiment, those cryptographic keys may be encrypted and signed according to E<sub>s</sub>(H<b>1</b>)h<b>2</b>Sig, E<sub>s</sub>(H<b>2</b>)h<b>1</b>Sig, E<sub>s</sub>(K)(h<b>1</b>Sig), and/or E <sub>s</sub>(D)h<b>1</b>Sig</p><p id="p-0328" num="0327">The rolling payload including such cryptographic keys is transmitted by the cloud server <b>150</b> to the mobile device <b>114</b>. The mobile device <b>114</b> then, in turn, transmits the rolling payload (e.g., via BLE) to the edge device <b>118</b>. Upon receipt of the rolling payload, the edge device <b>118</b> generates the shared cryptographic session key, S, based on the public ephemeral key (Q) received with the provisioning payload and the private key (r<b>1</b>) retrieved from the memory of the edge device <b>118</b>. More specifically, in some embodiments, the shared cryptographic session key, S, may be generated according to ECDH(Q, r<b>1</b>)=S. The edge device <b>118</b> decrypts the various keys included in the rolling payload using the shared cryptographic session key, S, cross validates/verifies the various signatures using the corresponding decrypted public cryptographic keys, H<b>1</b> and H<b>2</b>, and then installs the new cryptographic key(s) from the rolling payload into the memory of the edge device <b>118</b> or, more specifically, into the cryptography chipset <b>144</b> in some embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-20" num="01-20"><claim-text><b>1</b>.-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. An access control system, comprising:<claim-text>an administrative system;</claim-text><claim-text>a mobile access hub;</claim-text><claim-text>an access control edge system comprising a lock mechanism and a Bluetooth Low Energy (BLE) communication circuitry; and</claim-text><claim-text>a credential management system to (i) issue a BLE access credential to a user in response to a request for issuance of the BLE access credential by the administrative system and (ii) transmit the BLE access credential to the mobile access hub;</claim-text><claim-text>wherein the mobile access hub is to transmit the BLE access credential to a mobile device associated with the user;</claim-text><claim-text>wherein the administrative system is to update an access control database to associate the BLE access credential with the mobile device; and</claim-text><claim-text>wherein the access control edge system is to (i) receive the BLE access credential from the mobile device via the BLE communication circuitry and (ii) unlock the lock mechanism in response to successful authentication of the BLE access credential.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein to transmit the BLE access credential to the mobile access hub comprises to call the mobile access hub via a credential management application programming interface to transmit a message to the mobile device; and<claim-text>wherein to transmit the BLE access credential to the mobile device associated with the user comprises to transmit the message to the mobile device including a deep link that retrieves the BLE access credential from the mobile access hub via a mobile application.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The access control system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein to transmit the message comprises to transmit a Short Message Service (SMS) message to the mobile device.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the credential management system is further to receive the request for issuance of the BLE access credential via a web portal.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the credential management system is further to receive the request for issuance of the BLE access credential via an automated integrated application programming interface between the administrative system and the credential management system.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein to issue the BLE access credential comprises to ensure that a credential value of the BLE access credential is unique to a site at which the access control edge system is located.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein to issue the BLE access credential comprises to issue the BLE access credential in response to a determination that an entity associated with the administrative system has sufficient credential credits for issuance of a new BLE access credential.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the access control edge system is further to perform authentication of the BLE access credential.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the access control edge system comprises a peripheral controller to authenticate the BLE access credential.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The access control system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein at least one of the credential management system or the mobile access hub is a cloud-based system.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. A method, comprising:<claim-text>issuing, by a credential management system, a Bluetooth Low Energy (BLE) access credential to a user in response to a request for issuance of the BLE access credential by an administrative system;</claim-text><claim-text>transmitting, by the credential management system, the BLE access credential to a mobile device associated with the user;</claim-text><claim-text>updating, by the administrative system, an access control database to associate the BLE access credential with the mobile device;</claim-text><claim-text>receiving, by an access control edge device, the BLE access credential from the mobile device via a BLE communication connection between the access control edge device and the mobile device; and</claim-text><claim-text>unlocking a lock mechanism of an electronic lock in response to successful authentication of the BLE access credential.</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein transmitting the BLE access credential to the mobile device associated with the user comprises:<claim-text>transmitting, by the credential management system, the BLE access credential to a mobile access hub; and</claim-text><claim-text>transmitting, by the mobile access hub, the BLE access credential to the mobile device.</claim-text></claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The method of <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein transmitting the BLE access credential to the mobile device associated with the user comprises:<claim-text>calling, by the credential management system, the mobile access hub via a credential management application programming interface to transmit a message to the mobile device; and</claim-text><claim-text>transmitting, by the mobile access hub, the message to the mobile device including a deep link that retrieves the BLE access credential from the mobile access hub via a mobile application.</claim-text></claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The method of <claim-ref idref="CLM-00033">claim 33</claim-ref>, wherein transmitting the message comprises transmitting a Short Message Service (SMS) message to the mobile device.</claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, further comprising receiving, by the credential management system, the request for issuance of the BLE access credential via a web portal.</claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, further comprising receiving, by the credential management system, the request for issuance of the BLE access credential via an automated integrated application programming interface between the administrative system and the credential management system.</claim-text></claim><claim id="CLM-00037" num="00037"><claim-text><b>37</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein issuing the BLE access credential comprises ensuring that a credential value of the BLE access credential is unique to a site at which the electronic lock is located.</claim-text></claim><claim id="CLM-00038" num="00038"><claim-text><b>38</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein issuing the BLE access credential comprises issuing the BLE access credential in response to a determination that an entity associated with the administrative system has sufficient credential credits for issuance of a new BLE access credential.</claim-text></claim><claim id="CLM-00039" num="00039"><claim-text><b>39</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, further comprising performing, by the access control edge device, authentication of the BLE access credential; and<claim-text>wherein the access control edge device comprises the electronic lock.</claim-text></claim-text></claim><claim id="CLM-00040" num="00040"><claim-text><b>40</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, further comprising transmitting, by the access control edge device, the BLE access credential to a peripheral controller for authentication.</claim-text></claim><claim id="CLM-00041" num="00041"><claim-text><b>41</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, further comprising transmitting, by the mobile device, the BLE access credential to the mobile device via the BLE communication connection in response to a determination of a user intent to access a passageway secured by the electronic lock.</claim-text></claim><claim id="CLM-00042" num="00042"><claim-text><b>42</b>. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein unlocking the lock mechanism of the electronic lock comprises unlocking the lock mechanism in response to a determination of a user intent to access a passageway secured by the electronic lock.</claim-text></claim></claims></us-patent-application>