<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230001936A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230001936</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941096</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>B</section><class>60</class><subclass>W</subclass><main-group>50</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>60</class><subclass>W</subclass><main-group>50</main-group><subgroup>0098</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>07</class><subclass>C</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>60</class><subclass>W</subclass><main-group>2050</main-group><subgroup>0083</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200201</date></cpc-version-indicator><section>B</section><class>60</class><subclass>W</subclass><main-group>2556</main-group><subgroup>55</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16928793</doc-number><date>20200714</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17941096</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>63349912</doc-number><date>20220607</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62935890</doc-number><date>20191115</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62905742</doc-number><date>20190925</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62879130</doc-number><date>20190726</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62874749</doc-number><date>20190716</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>STATE FARM AUTOMOBILE INSURANCE COMPANY</orgname><address><city>Bloomington</city><state>IL</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Skaggs</last-name><first-name>Jaime</first-name><address><city>Chenoa</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Thoele</last-name><first-name>Jody</first-name><address><city>Bloomington</city><state>IL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Glusick</last-name><first-name>Angela</first-name><address><city>Bloomington</city><state>IL</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The following relates generally to determining effectiveness of an update to a vehicle feature. In some embodiments, information indicating an update to a vehicle feature, and accident record information may be received. A first dataset from before the update was implemented in the vehicle, and a second dataset from after the update was implemented in the vehicle may then be constructed. An effectiveness score may then be calculated based upon the first and second datasets.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="112.95mm" wi="158.75mm" file="US20230001936A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="233.51mm" wi="169.25mm" orientation="landscape" file="US20230001936A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="213.36mm" wi="157.99mm" orientation="landscape" file="US20230001936A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="239.27mm" wi="171.20mm" orientation="landscape" file="US20230001936A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="242.57mm" wi="149.61mm" orientation="landscape" file="US20230001936A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="184.74mm" wi="136.74mm" file="US20230001936A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="182.71mm" wi="139.11mm" file="US20230001936A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="209.63mm" wi="139.11mm" file="US20230001936A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="215.31mm" wi="150.96mm" orientation="landscape" file="US20230001936A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="208.11mm" wi="128.52mm" file="US20230001936A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="217.34mm" wi="135.21mm" file="US20230001936A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="224.03mm" wi="155.45mm" file="US20230001936A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="223.86mm" wi="151.98mm" orientation="landscape" file="US20230001936A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="152.91mm" wi="126.83mm" file="US20230001936A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="199.47mm" wi="133.10mm" orientation="landscape" file="US20230001936A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="231.90mm" wi="155.45mm" file="US20230001936A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a continuation-in-part (CIP) of U.S. patent application Ser. No. 16/928,793, filed Jul. 14, 2020, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES&#x201d;, which claims the priority benefit of U.S. Provisional Patent Application No. 62/874,749, filed Jul. 16, 2019, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES&#x201d;; U.S. Provisional Patent Application No. 62/879,130, filed Jul. 26, 2019, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES&#x201d;; U.S. Provisional Patent Application No. 62/905,742, filed Sep. 25, 2019, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES&#x201d;; and U.S. Provisional Patent Application No. 62/935,890, filed Nov. 15, 2019, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES&#x201d;; each of which are incorporated herein by reference in their entirety. In addition, U.S. patent application Ser. No. 17/673,171, filed Feb. 16, 2022, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING VEHICLE REPARABILITY&#x201d;; U.S. patent application Ser. No. 17/711,412, filed Feb. 16, 2022, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES&#x201d;; and U.S. patent application Ser. No. 17/673,037, filed Feb. 16, 2022, entitled &#x201c;SYSTEMS AND METHODS OF BUILDING A CONSISTENT VEHICLE DATA REPOSITORY&#x201d; are also each incorporated herein by reference in their entirety. The present application also claims the priority benefit of U.S. Patent Application No. 63/349,912, filed Jun. 7, 2022, entitled &#x201c;SYSTEMS AND METHODS OF DETERMINING EFFECTIVENESS OF VEHICLE SAFETY FEATURES.&#x201d;</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE DISCLOSURE</heading><p id="p-0003" num="0002">The present disclosure generally relates to vehicle safety and, more particularly, to systems and methods of determining the effectiveness of vehicle safety features.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent it is described in the background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.</p><p id="p-0005" num="0004">Currently, many vehicles are equipped with smart safety features configured to improve the safety of the vehicle. However, it can be difficult to determine which smart safety features are most effective at preventing (or decreasing the frequency or severity of) vehicle accidents. Likewise, it may be difficult to determine if updates to vehicle features are effective at preventing (or decreasing the frequency or severity of) vehicle accidents, and may further be difficult to keep track of the effectiveness of vehicle feature updates after they are calculated.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">The present embodiments may include collecting initial vehicle build information for various automobiles, such as newly manufactured automobiles. The initial vehicle build information may include advanced driver assist features, autonomous or semi-autonomous vehicle features, technologies, or systems, and/or other safety and newly developed features, systems, and/or updated software versions for the systems. Vehicle data may then be collected as the vehicle is in use. For instance, operational data may be collected regarding new feature, system, and software performance and usage. The operational data may be analyzed and monitored to determine which new features, systems, and software versions are operating as intended, i.e., safely or with low risk, or with lower risk than conventional systems, and/or those technologies that need to be revised or improved upon to further lower the risk of automobile collisions and enhance vehicle safety.</p><p id="p-0007" num="0006">In one aspect, vehicle build information (VBI) for vehicles manufactured by a plurality of OEMs may be obtained. The VBI may contain OEM-specific terminology for smart safety features associated with each vehicle. The obtained VBI may be analyzed to generate an ontology model mapping each feature to any OEM-specific terminology associated with the feature. The ontology model may be applied to the VBI to generate translated VBI for each vehicle, such that the OEM-specific terminology associated with each feature is replaced with OEM-agnostic terminology for the feature (i.e., common terminology for the feature). Vehicle accident record information may be obtained for each vehicle, including, e.g., the number, frequency, severity, etc. of accidents associated with each vehicle. Using the OEM-agnostic terminology for each feature associated with each vehicle and the vehicle accident information for each vehicle, an effectiveness score associated with each feature may be calculated.</p><p id="p-0008" num="0007">In another aspect, a computer-implemented method for determining the effectiveness of vehicle safety features is provided. The method may include: (1) obtaining, by one or more processors (and/or associated transceivers), vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle; (2) analyzing, by the one or more processors, obtained vehicle build information to generate an ontology model mapping each smart safety feature to any OEM-specific terminology associated with the smart safety feature for each OEM; (3) applying, by the one or more processors, the ontology model to the vehicle build information to generate translated vehicle build information for each of the plurality of vehicles, such that the OEM-specific terminology associated with each smart safety feature is replaced with OEM-agnostic terminology for the smart safety feature; (4) obtaining, by the one or more processors (and/or associated transceivers), vehicle accident record information for each of the plurality of vehicles, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with each of the plurality of vehicles; and/or (5) calculating, by the one or more processors, using the OEM-agnostic terminology for each smart safety feature associated with each of the plurality of vehicles and the vehicle accident record information for each of the plurality of vehicles, an effectiveness score associated with each smart safety feature. The method may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0009" num="0008">In another aspect, a computer system for determining the effectiveness of vehicle safety features is provided. The computer system may include one or more processors and/or associated transceivers; and a non-transitory program memory communicatively coupled to the one or more processors and/or associated transceivers, and storing executable instructions. The executable instructions, when executed by the one or more processors, may cause the computer system to: (1) obtain vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle; (2) analyze obtained vehicle build information to generate an ontology model mapping each smart safety feature to any OEM-specific terminology associated with the smart safety feature for each OEM; (3) apply the ontology model to the vehicle build information to generate translated vehicle build information for each of the plurality of vehicles, such that the OEM-specific terminology associated with each smart safety feature is replaced with OEM-agnostic terminology for the smart safety feature; (4) obtain vehicle accident record information for each of the plurality of vehicles, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with each of the plurality of vehicles; and/or (5) calculate, using the OEM-agnostic terminology for each smart safety feature associated with each of the plurality of vehicles and the vehicle accident record information for each of the plurality of vehicles, an effectiveness score associated with each smart safety feature. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0010" num="0009">In another aspect, a tangible, non-transitory computer-readable medium storing executable instructions for determining the effectiveness of vehicle safety features is provided. The executable instructions, when executed by at least one processor of a computer system, may cause the computer system to: (1) obtain vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle; (2) analyze obtained vehicle build information to generate an ontology model mapping each smart safety feature to any OEM-specific terminology associated with the smart safety feature for each OEM; (3) apply the ontology model to the vehicle build information to generate translated vehicle build information for each of the plurality of vehicles, such that the OEM-specific terminology associated with each smart safety feature is replaced with OEM-agnostic terminology for the smart safety feature; (4) obtain vehicle accident record information for each of the plurality of vehicles, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with each of the plurality of vehicles; and/or (5) calculate, using the OEM-agnostic terminology for each smart safety feature associated with each of the plurality of vehicles and the vehicle accident record information for each of the plurality of vehicles, an effectiveness score associated with each smart safety feature. The executable instructions may direct additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0011" num="0010">In another aspect, a computer-implemented method for determining the effectiveness of vehicle safety features is provided. The method may include: (1) obtaining, collecting, or receiving, by one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generating or using, via the one or more processors, an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collecting or receiving, via the one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle telematics data and/or AVSF data from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyzing, via the one or more processors, the vehicle telematics data and/or AVSF data to determine an individual AVSF performance rating or safety score for each AVSF defined by the ontology or ontology model. The method may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0012" num="0011">In another aspect, a computer system configured to determine the effectiveness of vehicle safety features is provided. The computer system may include one or more processors, servers, and/or associated transceivers configured to: (1) obtain, collect, or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generate or use an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collect or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle telematics data and/or AVSF data from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyze the vehicle telematics data and/or AVSF data to determine an individual AVSF performance rating or safety score for each AVSF defined by the ontology or ontology score. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0013" num="0012">In another aspect, a computer-implemented method for determining the effectiveness of vehicle safety features is provided. The method may include: (1) obtaining, collecting, or receiving, by one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generating or using, via the one or more processors, an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collecting or receiving, via the one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle telematics data associated with a vehicle collision and/or AVSF data associated with the vehicle collision, such as from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyzing, via the one or more processors, the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision to determine an individual AVSF performance rating or safety score for each AVSF defined by the ontology or ontology model. The method may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0014" num="0013">In another aspect, a computer system configured to determine the effectiveness of vehicle safety features is provided. The computer system may include one or more processors, servers, and/or associated transceivers configured to: (1) obtain, collect, or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generate or use an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collect or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision, such as from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyze the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision to determine an individual AVSF performance rating or safety score. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0015" num="0014">In another aspect, a computer-implemented method for analyzing the performance of vehicle safety features is provided. The method may include: (1) obtaining, collecting, or receiving, by one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generating or using, via the one or more processors, an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collecting or receiving, via the one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle telematics data associated with a vehicle collision and/or AVSF data associated with the vehicle collision, such as from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyzing, via the one or more processors, the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision to determine, for each AVSF defined by the ontology or ontology model, (i) whether the performance of the AVSF was relevant to the vehicle collision and/or (ii) whether the AVSF operated as intended prior to, during, and/or after the vehicle collision. The method may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0016" num="0015">In another aspect, a computer system configured to analyze the performance of vehicle safety features is provided. The computer system may include one or more processors, servers, and/or associated transceivers configured to: (1) obtain, collect, or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generate or use an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collect or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle telematics data associated with a vehicle collision and/or AVSF data associated with the vehicle collision, such as from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyze the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision to determine, for each AVSF defined by the ontology or ontology model, (i) whether the performance of the AVSF was relevant to the vehicle collision and/or (ii) whether the AVSF operated as intended prior to, during, and/or after the vehicle collision. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0017" num="0016">In another aspect, a computer-implemented method for use in determining effectiveness of an update to a vehicle feature may be provided. The method may comprise: (1) obtaining, by one or more processors, vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology; (2) receiving, by the one or more processors, information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (3) obtaining, by the one or more processors, vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (4) constructing, by the one or more processors, a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (5) constructing, by the one or more processors, a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and/or (6) calculating, by the one or more processors, an effectiveness score of the update based upon both the first data set and the second dataset. The method may include additional, fewer, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0018" num="0017">In another aspect, computer system for use in determining effectiveness of an update to a vehicle feature may be provided. The computer system may comprise one or more processors configured to: (1) obtain vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology; (2) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (3) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (4) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (5) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and/or (6) calculate an effectiveness score of the update based upon both the first data set and the second dataset. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0019" num="0018">In another aspect, a computer system for use in determining effectiveness of an update to a vehicle feature may be provided. The system may comprise: one or more processors; and a non-transitory program memory communicatively coupled to the one or more processors and storing executable instructions that, when executed by the one or more processors, cause the computer system to: (1) obtain vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology; (2) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (3) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (4) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (5) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and/or (6) calculate an effectiveness score of the update based upon both the first data set and the second dataset. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0020" num="0019">In another aspect, a computer implemented method for use in tracking effectiveness of an update to a vehicle feature using a distributed ledger may be provided. The method may comprise: (1) obtaining, by one or more processors, vehicle data comprising: (i) a vehicle feature, and (ii) identification information identifying vehicles having the vehicle feature; (2) adding to or constructing, by the one or more processors, a distributed ledger including: (i) the vehicle feature, and (ii) the identification information identifying vehicles having the vehicle feature; (3) receiving, by the one or more processors, information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (4) obtaining, by the one or more processors, vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (5) constructing, by the one or more processors, a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (6) constructing, by the one or more processors, a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; (7) calculating, by the one or more processors, an effectiveness score of the update based on both the first data set and the second dataset; and/or (8) modifying, by the one or more processors, the distributed ledger to include the effectiveness score. The method may include additional, fewer, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0021" num="0020">In another aspect, a computer system for use in tracking effectiveness of an update to a vehicle feature using a distributed ledger may be provided. The computer system may comprise one or more processors configured to: (1) obtain vehicle data comprising: (i) a vehicle feature, and (ii) identification information identifying vehicles having the vehicle feature; (2) add to or construct a distributed ledger including: (i) the vehicle feature, and (ii) the identification information identifying vehicles having the vehicle feature; (3) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (4) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (5) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (6) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; (7) calculate an effectiveness score of the update based on both the first data set and the second dataset; and/or (8) modify the distributed ledger to include the effectiveness score. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0022" num="0021">In yet another aspect, a computer system for use in tracking effectiveness of an update to a vehicle feature using a distributed ledger may be provided. The system may comprise: one or more processors; and a non-transitory program memory communicatively coupled to the one or more processors and storing executable instructions that, when executed by the one or more processors, cause the computer system to: (1) obtain vehicle data comprising: (i) a vehicle feature, and (ii) identification information identifying vehicles having the vehicle feature; (2) add to or construct a distributed ledger including: (i) the vehicle feature, and (ii) the identification information identifying vehicles having the vehicle feature; (3) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (4) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (5) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (6) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; (7) calculate an effectiveness score of the update based on both the first data set and the second dataset; and/or (8) modify the distributed ledger to include the effectiveness score. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0023" num="0022">The figures described below depict various aspects of the systems and methods disclosed herein. Advantages will become more apparent to those skilled in the art from the following description of the embodiments which have been shown and described by way of illustration. As will be realized, the present embodiments may be capable of other and different embodiments, and their details are capable of modification in various respects. Accordingly, the drawings and description are to be regarded as illustrative in nature and not as restrictive. Further, wherever possible, the following description refers to the reference numerals included in the following figures, in which features depicted in multiple figures are designated with consistent reference numerals.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a block diagram of an exemplary computer system for determining the effectiveness of vehicle safety features, in accordance with some embodiments;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates an example of applying an ontology model to OEM-specific vehicle build information to generate translated vehicle build information, such that OEM-specific terminology associated with smart safety features is replaced with OEM-agnostic terminology for the smart safety features, in accordance with some embodiments;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates an exemplary display of a user interface for searching for vehicles that have a particular type of smart safety feature, in accordance with some embodiments;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an exemplary display of a user interface for a virtual portal for providing information about the performance of smart safety features to OEMs, in accordance with some embodiments;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a flow diagram of an exemplary computer-implemented method for determining the effectiveness of vehicle safety features, in accordance with some embodiments;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an exemplary computer-implemented method of analyzing performance of advanced vehicle safety features;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates another exemplary computer-implemented method of analyzing performance of advanced vehicle safety features;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an exemplary computer system for calculating an effectiveness of an update to a vehicle feature;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example of standardized build sheet fields;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an example of training a machine learning algorithm, in accordance with some embodiments;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an exemplary computer-implemented method for calculating an effectiveness of an update to a vehicle feature;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates an exemplary distributed ledger system for tracking effectiveness of an update to a vehicle feature;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates another exemplary distributed ledger system tracking effectiveness of an update to a vehicle feature;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates another exemplary distributed ledger system tracking effectiveness of an update to a vehicle feature; and</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates an exemplary computer-implemented method for tracking an effectiveness of an update to a vehicle feature.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0039" num="0038">The Figures depict preferred embodiments for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the systems and methods illustrated herein may be employed without departing from the principles of the invention described herein.</p><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0040" num="0039">Currently, many vehicles are equipped with smart safety features configured to improve the safety of the vehicle (also called &#x201c;advanced vehicle safety features&#x201d; (AVSFs)). These smart safety features may include, e.g., smart parking assistance, adaptive cruise control, adaptive headlights, blind spot monitoring, forward collision warning, automatic emergency braking, automatic emergency steering, lane-departure warning, lane centering, rear cross-traffic alerts, smart vehicle cameras, driver assist technologies, semi-autonomous and/or autonomous technologies and systems, etc. However, it can be difficult to determine which smart safety features are most effective at preventing (or decreasing the frequency or severity of) vehicle accidents.</p><p id="p-0041" num="0040">While vehicle accident records may provide information indicating vehicle accident data sorted by vehicle identification number (VIN), VINs currently may not provide an indication of whether a vehicle is equipped with a particular smart safety feature. That is, while a VIN includes information such as the year, the make, and the model of the vehicle, there can be great variability in smart safety features even between vehicles of the same year, make, and model due to the highly customizable nature of smart safety features. Furthermore, in many instances, smart safety features may be switched on or off by a vehicle operator. However, vehicle accident records currently do not include information indicating whether or not a particular smart safety feature was switched on or off at the time of an accident.</p><p id="p-0042" num="0041">Moreover, even if the smart safety features of a given vehicle are known, it can be difficult to compare the effectiveness of smart safety features between vehicle manufacturers because different vehicle manufacturer often use different terminology for the same safety technology. For example, while many original equipment manufacturers (OEMs) manufacture vehicles enabled with blind spot detection, one OEM may call this feature &#x201c;lane change assist,&#x201d; while another OEM calls this feature &#x201c;blind spot monitor.&#x201d; Furthermore, in some examples, one OEM may use different terminology for the same feature in marketing (e.g., &#x201c;pre-sense&#x201d;) compared to in technical documents (e.g., &#x201c;blind spot information system&#x201d;).</p><p id="p-0043" num="0042">Systems and methods of determining the effectiveness of vehicle safety features are provided herein. In particular, vehicle build information obtained directly from a plurality of OEMs may be analyzed to generate an ontology mapping similar or same smart safety features between OEMs. For instance, machine learning or natural language processing may be used to group similar terminology from different OEMs, e.g., based upon similarities between descriptions of each term and/or based upon similarities between the terms themselves. Using the generated ontology, build information from a variety of vehicles from different OEMs may be translated into a common language. For example, the terms &#x201c;lane change assist,&#x201d; &#x201c;blind spot monitor,&#x201d; &#x201c;pre-sense,&#x201d; and &#x201c;blind spot info system,&#x201d; as indicated in build information from vehicles from different OEMs, may each be translated to an umbrella term &#x201c;blind spot detection.&#x201d;</p><p id="p-0044" num="0043">Accordingly, the translated build information for each vehicle may be cross-referenced to vehicle accident records associated with the vehicle's VIN. Using the translated build information and the vehicle accident record for each vehicle, a number, frequency, severity, etc. of accidents associated with each smart safety feature may be calculated to determine an effectiveness score for each smart safety feature. In some examples, telematics data captured by sensors associated with the vehicle may be analyzed to determine whether or not the smart safety feature was switched on at the time of the accident, and this determination may factor into the effectiveness score for the smart safety feature. Moreover, in some examples, a data log from a computing device associated with the vehicle may be analyzed to determine whether the smart safety feature had been updated at the time of the accident, or what version of software associated with the smart safety feature was used at the time of the accident, and this determination may factor into the effectiveness score for the smart safety feature as well.</p><p id="p-0045" num="0044">In particular, the effectiveness scores for various smart safety features may be compared, ranked, etc. Practically speaking, the effectiveness scores for the smart safety features of a given vehicle may be provided to consumers, who may use these effectiveness scores for smart safety features associated with various vehicles to determine which vehicles are safest (e.g., when renting a vehicle, when purchasing a vehicle, when being transported by a vehicle when using a taxi or ride share service, etc.). Moreover, the effectiveness scores for the smart safety features of a given vehicle may be provided to OEMs, who may use this information to improve smart safety features and/or to develop more effective smart safety features.</p><p id="p-0046" num="0045">Furthermore, in some examples, the effectiveness scores for each of the smart safety features of a given vehicle may be used to determine an insurance rating score for the vehicle and/or an insurance rating score for an insured party associated with the vehicle. Determining insurance ratings based upon the effectiveness scores for the smart safety features of a vehicle in this way improves upon conventional methods of determining insurance rating scores for vehicles, because conventionally, insurance rating scores for vehicles are simply based upon the make, model, and year of the vehicle, as indicated by the vehicle's VIN. However, with the introduction of smart safety features, there is now great variability in safety features even between vehicles of the same make, model, and year.</p><p id="p-0047" num="0046">Consequently, conventional methods for determining insurance ratings for vehicles cannot account for specific information about which smart safety features are enabled for a particular vehicle. In contrast, the present disclosure provides ways of improving upon these conventional methods for determining insurance ratings by individualizing these ratings for specific vehicles by incorporating effectiveness scores for various smart safety features enabled for the vehicle into these insurance ratings.</p><heading id="h-0007" level="2">Exemplary System for Determining Safety Effectiveness</heading><p id="p-0048" num="0047">Referring now to the drawings, <figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a block diagram of an exemplary computer system <b>100</b> for determining the effectiveness of vehicle safety features, in accordance with some embodiments. The high-level architecture illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may include both hardware and software applications, as well as various data communications channels for communicating data between the various hardware and software components, as is described below. The system may include a computing device <b>102</b> configured to communicate, e.g., via a network <b>104</b> (which may be a wired or wireless network), with OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C associated with various OEMs. Although three OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C associated with three separate OEMs are shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a greater or fewer number of OEM servers may be included in various embodiments. The OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C may each respectively be associated with OEM databases <b>108</b>A, <b>108</b>B, <b>108</b>C storing, inter alia, vehicle build information (e.g., in the form of vehicle build sheets) associated with vehicles manufactured by the OEM.</p><p id="p-0049" num="0048">Furthermore the OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C may each respectively include one or more processors <b>110</b>A, <b>1101</b>B, <b>110</b>C, such as one or more microprocessors, controllers, and/or any other suitable type of processor. The OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C may each respectively further include a memory <b>112</b>A, <b>112</b>B, <b>112</b>C (e.g., volatile memory, non-volatile memory) accessible by the respective one or more processors <b>110</b>A, <b>110</b>B, <b>110</b>C, (e.g., via a memory controller). The respective one or more processors <b>110</b>A, <b>110</b>B, <b>110</b>C may each interact with the respective memories <b>112</b>A, <b>112</b>B, <b>112</b>C to obtain, for example, computer-readable instructions stored in the respective memories <b>112</b>A, <b>112</b>B, <b>112</b>C. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the respective memories <b>112</b>A, <b>112</b>B, <b>112</b>C may include instructions for transmitting vehicle build information from the respective OEM databases <b>108</b>A, <b>108</b>B, <b>108</b>C to the computing device <b>102</b> (e.g., via the network <b>104</b>).</p><p id="p-0050" num="0049">The computing device <b>102</b> may further communicate with vehicle onboard computing devices <b>114</b>A, <b>114</b>B associated with respective vehicles <b>115</b>A, <b>115</b>B. For example, the vehicle onboard computing devices may interface with vehicle sensors <b>116</b>A, <b>116</b>B associated with respective vehicles <b>115</b>A, <b>115</b>B. The vehicle sensors <b>116</b>A, <b>116</b>B may include, e.g., accelerometers, gyroscopes, cameras or other image sensors, light sensors, microphones or other sound sensors, or any other suitable sensors. In particular, the vehicle sensors <b>116</b>A, <b>116</b>B may be configured to capture telematics data associated with respective vehicles <b>115</b>A, <b>115</b>B. Telematics data may include, e.g., one or more of speed data, acceleration data, braking data, cornering data, object range distance data (e.g., following distance data), turn signal data, seatbelt use data, location data, phone use data, date/time data, weather data, road type data, or any other suitable vehicle telematics data. Although two vehicles <b>115</b>A, <b>115</b>B and two associated vehicle onboard computing devices <b>114</b>A, <b>114</b>B and sets of vehicle sensors <b>116</b>A, <b>116</b>B are shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, any number of vehicles, vehicle onboard computing devices, and/or vehicle sensors may be included in various embodiments.</p><p id="p-0051" num="0050">The vehicle onboard computing devices <b>114</b>A, <b>114</b>B may each respectively include one or more processors (not shown) such as one or more microprocessors, controllers, and/or any other suitable type of processor. The vehicle onboard computing devices <b>114</b>A, <b>114</b>B may each respectively further include a memory (not shown), e.g., volatile memory, non-volatile memory, etc., accessible by the respective one or more processors (e.g., via a memory controller). The respective one or more processors associated with each vehicle onboard computing device <b>114</b>A, <b>114</b>B may each interact with the respective memories to obtain, for example, computer-readable instructions stored in the respective memories. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to each vehicle onboard computing device <b>114</b>A, <b>114</b>B to provide access to the computer-readable instructions stored thereon.</p><p id="p-0052" num="0051">In particular, the computer-readable instructions stored on the respective memories of each vehicle onboard computing device <b>114</b>A, <b>114</b>B may include instructions for controlling the vehicle (e.g., controlling the braking, steering, headlights, cameras, or other components of the vehicle) in order to enable smart safety features such as, e.g., smart parking assistance, adaptive cruise control, adaptive headlights, blind spot monitoring, forward collision warning, automatic emergency braking, automatic emergency steering, lane-departure warning, lane centering, rear cross-traffic alerts, smart vehicle cameras, etc. For instance, the instructions may include instructions for controlling the respective vehicle <b>115</b>A, <b>115</b>B to enable smart safety features based upon inputs from the respective sensors <b>116</b>A, <b>116</b>B.</p><p id="p-0053" num="0052">Furthermore, these instructions may include instructions for transmitting telematics data associated with respective vehicles <b>115</b>A, <b>115</b>B to the computing device <b>102</b> (e.g., via the network <b>104</b>). Moreover, these instructions may include instructions for transmitting (e.g., via the network <b>104</b>) indications of which smart safety features associated with the respective vehicle <b>115</b>A, <b>115</b>B were enabled or activated at various dates or times, either automatically or based upon a request from the computing device <b>102</b>.</p><p id="p-0054" num="0053">Furthermore the computing device <b>102</b> may include one or more processors <b>120</b> such as one or more microprocessors, controllers, and/or any other suitable type of processor. The computing device <b>102</b> may further include a memory <b>122</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>120</b>, (e.g., via a memory controller). Additionally, the computing device may include a user interface <b>123</b>.</p><p id="p-0055" num="0054">The one or more processors <b>120</b> may interact with the memory <b>122</b> to obtain, for example, computer-readable instructions stored in the memory <b>122</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the computing device <b>102</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>122</b> may include instructions for executing various applications, such as, e.g., a machine learning model training application <b>124</b>, an ontology generator <b>126</b>, a vehicle build information translator <b>128</b>, a smart safety feature effectiveness calculator <b>130</b>, a search application <b>132</b>, and/or a virtual portal application <b>134</b>.</p><p id="p-0056" num="0055">For example, the machine learning model training application <b>124</b> may train a machine learning model to group similar terminology from different OEMs, e.g., based upon similarities between descriptions of each term and/or based upon similarities between the terms themselves, using several known OEM-specific terms from each of a plurality of OEMs.</p><p id="p-0057" num="0056">In general, training the machine learning model (and/or neural network model) may include establishing a network architecture, or topology, and adding layers that may be associated with one or more activation functions (e.g., a rectified linear unit, softmax, etc.), loss functions and/or optimization functions. Multiple different types of artificial neural networks may be employed, including without limitation, recurrent neural networks, convolutional neural networks, and deep learning neural networks. Data sets used to train the artificial neural network(s) may be divided into training, validation, and testing subsets; these subsets may be encoded in an N-dimensional tensor, array, matrix, or other suitable data structures. Training may be performed by iteratively training the network using labeled training samples. Training of the artificial neural network may produce byproduct weights, or parameters which may be initialized to random values. The weights may be modified as the network is iteratively trained, by using one of several gradient descent algorithms, to reduce loss and to cause the values output by the network to converge to expected, or &#x201c;learned&#x201d;, values.</p><p id="p-0058" num="0057">In one embodiment, a regression neural network may be selected which lacks an activation function, wherein input data may be normalized by mean centering, to determine loss and quantify the accuracy of outputs. Such normalization may use a mean squared error loss function and mean absolute error. The artificial neural network model may be validated and cross-validated using standard techniques such as hold-out, K-fold, etc. In some embodiments, multiple artificial neural networks may be separately trained and operated, and/or separately trained and operated in conjunction.</p><p id="p-0059" num="0058">The ontology generator <b>126</b> may apply the trained machine learning model to the vehicle build information from the OEM databases <b>108</b>A, <b>108</b>B, <b>108</b>C in order to generate an ontology model mapping similar or same smart safety features between OEMs to OEM-specific terminology describing each feature for the OEMs associated with OEM servers <b>106</b>A, <b>106</b>B, <b>106</b>C.</p><p id="p-0060" num="0059">The vehicle build information translator <b>128</b> may apply the ontology model to the vehicle build information from the OEM databases <b>108</b>A, <b>108</b>B, <b>108</b>C to translate the vehicle build information each of the different OEMs into a common language (i.e., by translating OEM-specific terminology to OEM-agnostic terminology). For example, the vehicle build information stored in the OEM database <b>108</b>A may use the OEM-specific term &#x201c;lane change assist,&#x201d; to describe a blind spot detection smart safety feature, while the vehicle build information stored in the OEM database <b>108</b>B may use the OEM-specific term &#x201c;blind spot monitor&#x201d; to describe a blind spot detection feature that is substantially the same, the OEM database <b>108</b>C may use the OEM-specific term &#x201c;blind spot info system&#x201d; to describe the same blind spot detection feature, etc. The vehicle build information translator <b>128</b> may translate each of these terms to an OEM-agnostic term for the smart safety feature, e.g., &#x201c;blind spot detection smart safety feature.&#x201d; In particular, the vehicle build information translator <b>128</b> may store the translated vehicle build information in a vehicle build information (VBI) database <b>135</b>.</p><p id="p-0061" num="0060">The smart safety feature effectiveness calculator <b>130</b> may use the translated vehicle build information from the VBI database <b>135</b>, along with information obtained from a vehicle accident record database <b>136</b> storing indications of accident history associated with various vehicles, and/or vehicle telematics data from vehicle onboard computing devices <b>114</b>A, <b>114</b>B (e.g., indicative of vehicle collisions, indicative of which smart safety features were operating during vehicle collisions, etc.), to calculate effectiveness scores for each smart safety feature. For instance, an accident rate may be calculated for all vehicles associated with a particular OEM-agnostic term for a smart safety feature, and the effectiveness of the smart safety feature may be calculated based at least in part on this accident rate.</p><p id="p-0062" num="0061">Moreover, in some examples, the smart safety feature effectiveness calculator <b>130</b> may calculate a score indicative of the relevance of a given smart safety feature's performance in particular accidents. For instance, this score may indicate whether the smart safety feature's performance was likely relevant to a particular accident or collision, and/or whether the smart safety feature was likely operating as intended during a particular accident or collision. Moreover, in some examples, the smart safety feature effectiveness calculator <b>130</b> may calculate a percentage of fault associated with each smart safety feature for a particular accident or collision.</p><p id="p-0063" num="0062">The search application <b>132</b> may provide a search feature to be displayed to a user via, e.g., via a web interface or via the user interface <b>123</b>. In one example, the search application <b>132</b> may receive user input indicating a vehicle identification number (VIN) to be searched, and may search the vehicle build information to locate a matching vehicle and its associated smart safety features. Accordingly, the search application <b>132</b> may cause the user interface <b>123</b> to display, based upon the user input, a listing of smart safety features associated with the VIN, e.g., as shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>. As another example, the search application <b>132</b> may receive user input indicating a smart safety feature to be searched, and may cause the user interface <b>123</b> to display, based upon the user input, a listing of vehicles having the smart safety feature and/or a listing of vehicle identification numbers (VINs) associated with those vehicles, e.g., as shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. In some examples, the user may use any terminology (e.g., OEM-specific terminology or OEM-agnostic terminology) for the feature, and the ontology model may be used to translate the user's input into OEM-agnostic terminology for the feature. Accordingly, the search application <b>132</b> may search the vehicle build information using the OEM-agnostic terminology and locate results to be displayed to the user.</p><p id="p-0064" num="0063">The virtual portal application <b>134</b> may generate a virtual portal that provides information about the performance of various smart safety features and display the virtual portal to a user, e.g., via a web interface or via the user interface <b>123</b>, e.g., as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The virtual portal application <b>134</b> may cause the user interface <b>123</b> to display, for instance, smart feature effectiveness information and/or scores, as calculated by the smart safety feature effectiveness calculator <b>130</b>.</p><p id="p-0065" num="0064">Additionally, the virtual portal application <b>134</b> may cause the user interface <b>123</b> to display information related to various vehicle models manufactured by a particular OEM to a user associated with the OEM (e.g., a representative of the OEM). For instance, virtual portal application <b>134</b> may cause the user interface <b>123</b> to display an indication of a number of smart safety features associated with each vehicle model, a number of insurance policies associated with each vehicle model and/or associated with each smart safety feature, a number of insurance claims associated with each vehicle model and/or associated with each smart safety feature, a number of insurance claims associated with each vehicle model by year, etc. Moreover, the virtual portal application <b>134</b> may cause the user interface <b>123</b> to display an indication of a number of claims at each point of impact for a particular vehicle model and/or for a particular AVSF. This information may be displayed visually (e.g., by shading a portion of a diagram of a vehicle in different colors based upon the number of claims associated with that portion of the vehicle), or as a graph (e.g., in the form of a pie chart, bar graph, histogram, etc. illustrating a number of claims associated with various vehicle portions).</p><p id="p-0066" num="0065">Moreover, the computer-readable instructions stored on the memory <b>122</b> may include instructions for carrying out any of the steps of the methods <b>400</b>, <b>500</b>, and <b>600</b> described in greater detail below with respect to <figref idref="DRAWINGS">FIGS. <b>4</b>, <b>5</b>, and <b>6</b></figref>, respectively. Furthermore, the computer-readable instructions stored on the memory <b>122</b> may include instructions for executing additional or alternative applications in various embodiments.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates an example of applying an ontology model to OEM-specific vehicle build information to generate translated vehicle build information, such that OEM-specific terminology associated with smart safety features is replaced with OEM-agnostic terminology for the smart safety features, in accordance with some embodiments. For instance, &#x201c;lane change assist and lane keeping system,&#x201d; from the vehicle build sheet of a vehicle manufactured by a particular OEM, may be translated to the OEM-agnostic term &#x201c;blind spot warning.&#x201d; In particular, <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates an example display of a user interface (e.g., user interface <b>123</b>) showing the results of a search for a vehicle having a particular vehicle identification number (VIN). Accordingly, using this user interface, a user who looks up a particular VIN may see results indicating the OEM-agnostic terminology for smart safety features that are associated with the vehicle having the particular VIN.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates an exemplary display of a user interface (e.g., user interface <b>123</b>) for searching for vehicles that have a particular type of smart safety feature, in accordance with some embodiments. When a user searches for a particular feature using the user interface shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, using OEM-agnostic terminology or any OEM-specific terminology for the feature, the user interface may display a listing of all vehicles (and/or the VINs associated therewith) associated with that feature. In other words, the user may use any terminology for the feature, and the ontology model may be used to translate the user's search into OEM-agnostic terminology for the feature. Accordingly, the translated vehicle build information may be searched to locate vehicles associated with the feature, and the VINs for vehicles associated with the feature may be displayed to the user.</p><p id="p-0069" num="0068">For instance, in the context of an insurance provider, the search features shown at <figref idref="DRAWINGS">FIGS. <b>2</b>A and <b>2</b>B</figref> may be utilized, e.g., in order to analyze loss data for setting rates for vehicles with certain features, to apply rating groups based upon vehicle features, to verify the presence of vehicle features for claim processing and/or fraud-detection purposes, and to analyze the effectiveness and/or performance of various vehicle features.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an exemplary display of a user interface (e.g., user interface <b>123</b>) for a virtual portal for providing information about the performance of smart safety features to OEMs, in accordance with some embodiments. For example, using the user interface shown, information related to various vehicle models manufactured by the OEM may be displayed for an OEM user (e.g., a representative of the OEM). For instance, the user interface may display an indication of a number of smart safety features associated with each vehicle model, a number of insurance policies associated with each vehicle model and/or associated with each smart safety feature, a number of insurance claims associated with each vehicle model and/or associated with each smart safety feature, a number of insurance claims associated with each vehicle model by year, etc.</p><p id="p-0071" num="0070">The user interface shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may further display an indication of a number of claims at each point of impact for a particular vehicle model and/or for a particular smart safety feature. This information may be displayed visually (e.g., by shading a portion of a diagram of a vehicle in different colors based upon the number of claims associated with that portion of the vehicle), or as a graph (e.g., in the form of a pie chart, bar graph, histogram, etc. illustrating a number of claims associated with various vehicle portions).</p><p id="p-0072" num="0071">For instance, in the context of an OEM, the virtual portal shown at <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be utilized, e.g., in order to inform future vehicle design decisions of vehicle feature sets, to understand the effectiveness of vehicle features and/or repair costs, and/or to factor insurance costs into the &#x201c;total cost of ownership&#x201d; for their vehicles.</p><heading id="h-0008" level="2">Exemplary Safety Effectiveness Determination</heading><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a flow diagram of an exemplary method <b>400</b> for determining the effectiveness of vehicle safety features, in accordance with some embodiments. One or more steps of the method <b>400</b> may be implemented as a set of instructions stored on a computer-readable memory and executable on one or more processors. While &#x201c;smart safety features&#x201d; are discussed herein, the method <b>400</b> may be applied to determine the effectiveness of any kind of vehicle safety features.</p><p id="p-0074" num="0073">Vehicle build information for a plurality of vehicles manufactured by a plurality of OEMs may be obtained (block <b>402</b>), e.g., from databases associated with each OEM. For example, the vehicle build information obtained from each OEM may include information from vehicle build sheets for each individual vehicle manufactured by that OEM, with each vehicle build sheet listing all features of the individual vehicle.</p><p id="p-0075" num="0074">The vehicle build information may contain, for instance OEM-specific terminology associated with one or more smart safety features associated with each vehicle. For instance, a first OEM may use the terminology &#x201c;lane change assist&#x201d; for a blind spot detection smart safety feature, while a second OEM may use the terminology &#x201c;blind spot info system,&#x201d; and a third OEM may use the terminology &#x201c;blind spot monitor,&#x201d; for essentially the same blind spot detection smart safety feature. As another example, a first OEM may use the terminology &#x201c;adaptive cruise assist&#x201d; for an adaptive cruise control feature, while a second OEM may use the terminology &#x201c;predictive cruise control,&#x201d; and a third OEM may use the terminology &#x201c;active cruise control,&#x201d; for essentially the same adaptive cruise control feature. Consequently, in some examples, vehicle build sheets for vehicles manufactured by different OEMs may each have different OEM-specific terminology for the essentially the same smart safety features.</p><p id="p-0076" num="0075">The obtained vehicle build information may be analyzed (block <b>404</b>) by a processor to generate an ontology model mapping each smart safety feature to any OEM-specific terminology associated with the smart safety feature for each OEM. For instance, the ontology model may map the OEM-specific terms: &#x201c;lane change assist,&#x201d; &#x201c;blind spot info system,&#x201d; and &#x201c;blind spot monitor&#x201d; to the smart safety feature of blind spot detection. As another example, the ontology model may map &#x201c;adaptive cruise assist,&#x201d; &#x201c;predictive cruise control,&#x201d; and &#x201c;active cruise control,&#x201d; to the smart safety feature of adaptive cruise control.</p><p id="p-0077" num="0076">In some examples, a machine learning model may be trained using OEM-specific terminology associated with each of a plurality of known smart safety features for a plurality of OEMs. For instance, machine learning or natural language processing may be used to group similar terminology from different OEMs, e.g., based upon similarities between descriptions of each term and/or based upon similarities between the terms themselves. The trained machine learning model may be applied to the obtained vehicle build information in order to identify OEM-specific terminology associated with each smart safety feature for each OEM.</p><p id="p-0078" num="0077">The ontology model may be applied (block <b>406</b>) to the vehicle build information (e.g., as shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>) to generate translated vehicle build information for each of the plurality of vehicles, such that the OEM-specific terminology associated with each smart safety feature is replaced with OEM-agnostic terminology for the smart safety feature. For instance, wherever OEM-specific terms such as &#x201c;the OEM-specific terms: &#x201c;lane change assist,&#x201d; &#x201c;blind spot info system,&#x201d; and &#x201c;blind spot monitor&#x201d; appear in the vehicle build information for each of the plurality of vehicles, these terms may be replaced with an OEM-agnostic term (e.g., &#x201c;blind spot detection feature&#x201d;). Similarly, wherever OEM-specific terms such as &#x201c;adaptive cruise assist,&#x201d; &#x201c;predictive cruise control,&#x201d; and &#x201c;active cruise control,&#x201d; appear in the vehicle build information for each of the plurality of vehicles, these terms may be replaced with an OEM-agnostic term (e.g., &#x201c;adaptive cruise control feature&#x201d;). Accordingly, the terminology used in the vehicle build information associated with each vehicle may be standardized such that the vehicle build information for each of the plurality of vehicles uses the same OEM-agnostic terminology when referring to features that are the same or essentially the same.</p><p id="p-0079" num="0078">Vehicle accident record information may be obtained (block <b>408</b>) for each of the plurality of vehicles. The vehicle accident record information may include, e.g., a number of accidents, a frequency of accidents, or a severity of accidents associated with each of the plurality of vehicles. Moreover, the vehicle accident record information may include dates and/or times associated with accidents associated with each of the plurality of vehicles.</p><p id="p-0080" num="0079">An effectiveness score may be calculated (block <b>410</b>) for each smart safety feature using the OEM-agnostic terminology for each smart safety feature associated with each vehicle and the vehicle accident record information for each vehicle. That is, by using OEM-agnostic terminology, effectiveness scores may be calculated for particular types of safety features present in vehicles manufactured by a variety of different OEMs. For instance, the effectiveness of blind spot detection features in general may be calculated for a plurality of vehicles associated with various OEMs. In some examples, these effectiveness scores may be generated or scored as percentages (e.g., 88% effective, 50% effective), or on a numerical scale (e.g., on a scale of 1-10).</p><p id="p-0081" num="0080">Generally speaking, a higher effectiveness score may be calculated for smart safety features that are associated with vehicles that have fewer, less frequent, and/or less severe accidents or collisions. In some examples, calculating the effectiveness score may include obtaining vehicle telematics data and/or other data indicating whether smart safety features were activated and/or enabled at various dates or times for each of the plurality of vehicles. For instance, the vehicle telematics data and the vehicle accident record information for each vehicle may be used to determine whether a smart safety feature was activated or deactivated at a date and/or time associated with a vehicle accident.</p><p id="p-0082" num="0081">Additionally, if a smart safety feature of a vehicle was deactivated at a date and/or time of an accident associated with the vehicle, then the data from that accident may not be included in the calculation of the effectiveness score for that smart safety feature, but if the smart safety feature was activated at the date and/or time of the accident, then the data from that accident may be included in the calculation of the effectiveness score for that smart safety feature. In some examples, the telematics data may be used to determine whether a smart feature was updated prior to a date and/or time associated with a vehicle accident, and/or when the smart feature was last updated prior to the accident, and this determination may be factored into the calculation of the effectiveness score for the smart safety feature.</p><p id="p-0083" num="0082">Additionally, in some examples, calculating the effectiveness score may be based on an operational design domain of the safety feature, the road upon which the vehicle was operating and/or the environment in which the vehicle was operating at the date and/or time of the accident. Generally speaking, an operational design domain for a safety feature may include operating conditions under which the safety feature is specifically designed to function, including, but not limited to, environmental, geographical, and time-of-day restrictions, and/or the requisite presence or absence of certain traffic or roadway characteristics. For instance, an effectiveness score may be calculated for a specific safety feature in a specific driving environment. For instance, in some examples, the effectiveness score for a given safety feature may be calculated differently for vehicles operating on a divided highway than for vehicles operating on a city street. As another example, an effectiveness score may be calculated for a specific safety feature at night compared to during the day, on roads with a steep incline compared to flat roads, or for various other operational design domains.</p><p id="p-0084" num="0083">Furthermore, in some examples, an effectiveness score may be calculated for a combination of smart safety features. For instance, in some examples, two or more smart safety features may be particularly effective when used in combination. Accordingly, individual effectiveness scores may be calculated for individual smart safety features, while combined effectiveness scores may be calculated for certain combinations of smart safety features. For example, a combined effectiveness score may be calculated for vehicles having both a blind spot detection feature and an adaptive cruise control feature.</p><p id="p-0085" num="0084">Moreover, in some examples, the method <b>400</b> may include determining an insurance rating for a particular vehicle based upon the effectiveness scores associated with each smart safety feature associated with the vehicle, and/or based upon a particular combination of smart safety features associated with the vehicle. For example, insurance customers who own vehicles that have smart safety features with high effectiveness scores may be eligible for lower rates, or for certain discounts.</p><p id="p-0086" num="0085">With the foregoing, an insurance customer may opt-in to a rewards, insurance discount, or other type of program. After the insurance customer provides their affirmative consent, an insurance provider remote server may collect data from the customer's mobile device, smart home controller, or other smart devices&#x2014;such as with the customer's permission or affirmative consent. The data collected may be related to insured assets before (and/or after) an insurance-related event, including those events discussed elsewhere herein. In return, risk averse insureds may receive discounts or insurance cost savings related to home, renters, personal articles, auto, life, health, and other types of insurance from the insurance provider.</p><p id="p-0087" num="0086">In one aspect, data, including the types of data discussed elsewhere herein, may be collected or received by an insurance provider remote server, such as via direct or indirect wireless communication or data transmission from a smart home controller, mobile device, or other customer computing device, after a customer affirmatively consents or otherwise opts-in to an insurance discount, reward, or other program. The insurance provider may then analyze the data received with the customer's permission to provide benefits to the customer. As a result, risk averse customers may receive insurance discounts or other insurance cost savings based upon data that reflects low risk behavior and/or technology that mitigates or prevents risk to (i) insured assets, such as homes, personal belongings, or vehicles, and/or (ii) home or apartment occupants.</p><heading id="h-0009" level="2">Exemplary Computer-Implemented Methods</heading><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an exemplary computer-implemented method of analyzing performance of advanced vehicle safety features <b>500</b>. The method <b>500</b> may include, via one or more local or remote processors and/or associated transceivers, obtaining, collecting, or receiving (such as via wireless communication or data transmission over one or more radio frequency links) vehicle build information for multiple automobiles from computing devices associated from vehicle manufacturers, dealerships, repair shops, and/or vehicle owners, or directly from smart vehicles, autonomous vehicles, and/or other vehicles configured for wireless communication with other computing devices <b>502</b>. The vehicle build information may include one or more advanced vehicle safety features (AVSFs) as described and discussed elsewhere herein.</p><p id="p-0089" num="0088">The method <b>500</b> may include, via one or more processors and/or associated transceivers, generating and/or using an ontology module to develop a common terminology for advanced vehicle safety features (AVSFs) <b>504</b>, such as described and detailed elsewhere herein. For instance, different OEMs may use different terminology for similar vehicle safety features. The ontology may convert the different terminology from the OEMs into a common vocabulary.</p><p id="p-0090" num="0089">The method <b>500</b> may include, via one or more processors and/or associated transceivers, collecting or receiving (such as via wireless communication or data transmission from a driver or passenger mobile device or a vehicle controller/transceiver over one or more radio frequency links) (i) vehicle telematics data (associated with individual vehicle operation, such as speed, acceleration, cornering, braking, location, etc.), and/or (ii) AVSF configuration, software version, and/or usage data <b>506</b>.</p><p id="p-0091" num="0090">The AVSF configuration data may include various settings of an AVSF established or set by a vehicle owner. The AVSF software version data may include a version of software or current version of software installed on the AVSF or AVSF memory unit. The AVSF usage data may include data detailing whether and to what extent the AVSF is or was used on a given day or trip. For instance, some vehicle owners may decide not to employ or rely upon advanced vehicle safety features, while other vehicle owners may always use or employ the AVSFs available to them or installed on their vehicles.</p><p id="p-0092" num="0091">The method <b>500</b> may include, via one or more processors, analyzing (i) the vehicle telematics data, and/or (ii) the AVSF configuration, software version, and/or usage data to determine an individual advanced vehicle safety feature performance or safety profile for AVSFs defined by the ontology <b>508</b>. In one embodiment, the vehicle telematics data, and/or the AVSF configuration, software version, and/or usage data may be input into a machine learning program, module, model, or algorithm trained to determine an AVSF performance or safety profile or score based upon vehicle telematics data, and/or AVSF configuration, software version, and/or usage data. As an example, when a processor determines that an AVSF is in use, vehicle operation may be monitored to determine whether the AVSF and/or vehicle is operating or performing as expected or designed. The AVSF, and/or the safety performance thereof, may then be assigned a score and a performance profile of the AVSF updated.</p><p id="p-0093" num="0092">In general, training the machine learning model (or neural network model) may include establishing a network architecture, or topology, and adding layers that may be associated with one or more activation functions (e.g., a rectified linear unit, softmax, etc.), loss functions and/or optimization functions. Multiple different types of artificial neural networks may be employed, including without limitation, recurrent neural networks, convolutional neural networks, and deep learning neural networks. Data sets used to train the artificial neural network(s) may be divided into training, validation, and testing subsets; these subsets may be encoded in an N-dimensional tensor, array, matrix, or other suitable data structures. Training may be performed by iteratively training the network using labeled training samples. Training of the artificial neural network may produce byproduct weights, or parameters which may be initialized to random values. The weights may be modified as the network is iteratively trained, by using one of several gradient descent algorithms, to reduce loss and to cause the values output by the network to converge to expected, or &#x201c;learned&#x201d;, values.</p><p id="p-0094" num="0093">In one embodiment, a regression neural network may be selected which lacks an activation function, wherein input data may be normalized by mean centering, to determine loss and quantify the accuracy of outputs. Such normalization may use a mean squared error loss function and mean absolute error. The artificial neural network model may be validated and cross-validated using standard techniques such as hold-out, K-fold, etc. In some embodiments, multiple artificial neural networks may be separately trained and operated, and/or separately trained and operated in conjunction.</p><p id="p-0095" num="0094">The method <b>500</b> may include, via one or more processors, generating a virtual report detailing each AVSF's performance and/or safety rating or score for AVSFs defined by the ontology <b>510</b>. The virtual report may be shared with vehicle owners, dealerships, repair shops, and/or OEMs via a website or virtual portal. The method <b>500</b> may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates another exemplary computer-implemented method of analyzing performance of advanced vehicle safety features <b>600</b>. The method <b>600</b> may include, via one or more processors and/or associated transceivers, obtaining, collecting, or receiving vehicle build information for multiple automobiles from computing devices associated from vehicle manufacturers, dealerships, repair shops, and/or vehicle owners, or directly from smart vehicles, autonomous vehicles, and/or other vehicles configured for wireless communication with other computing devices <b>602</b>, such as described with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref> above. Also as discussed with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref> above, the method <b>600</b> may include, via one or more processors and/or associated transceivers, generating and/or using an ontology module to develop a common terminology for advanced vehicle safety features (AVSFs) <b>604</b>.</p><p id="p-0097" num="0096">The method <b>600</b> may include, via one or more processors and/or associated transceivers, collecting or receiving (such as via wireless communication or data transmission from a driver or passenger mobile device or a vehicle controller/transceiver over one or more radio frequency links) (i) vehicle telematics data (associated with individual vehicle operation, such as speed, acceleration, cornering, braking, location, etc.) associated with (such as collected prior to, during, and/or after) a vehicle collision, and/or (ii) AVSF configuration, software version, and/or usage data associated with (such as collected prior to, during, and/or after) a vehicle collision <b>606</b>.</p><p id="p-0098" num="0097">As noted above during the discussion of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the AVSF configuration data may include various settings of an AVSF established or set by a vehicle owner. The AVSF software version data may include a version of software or current version of software installed on the AVSF or AVSF memory unit. The AVSF usage data may include data detailing whether and to what extent the AVSF is or was used on a given day or trip. For instance, some vehicle owners may decide not to employ or rely upon advanced vehicle safety features, while other vehicle owners may always use or employ the AVSFs available to them or installed on their vehicles.</p><p id="p-0099" num="0098">The method <b>600</b> may include, via one or more processors, analyzing (i) the vehicle telematics data associated with a vehicle collision, and/or (ii) the AVSF configuration, software version, and/or usage data associated with the vehicle collision to determine an individual advanced vehicle safety feature performance or safety profile for AVSFs defined by the ontology <b>608</b>. In one embodiment, the vehicle telematics data associated with the vehicle collision, and/or the AVSF configuration, software version, and/or usage data associated with the vehicle collision may be input into a machine learning program, module, model, or algorithm trained to determine an AVSF performance or safety profile or score based upon vehicle telematics data associated with the vehicle, and/or AVSF configuration, software version, and/or usage data associated with the vehicle collision. As an example, when a processor determines that an AVSF is in use, vehicle operation may be monitored to determine whether the AVSF and/or vehicle is operating or performing as expected or designed prior to, during, and/or after a vehicle collision.</p><p id="p-0100" num="0099">As an example, when a processor determines that an AVSF is in use, vehicle operation may be monitored to determine whether the performance of the AVSF was relevant to a collision. For instance, determining whether the AVSF and/or vehicle is operating or performing as expected or designed prior to, during, and/or after the vehicle collision may include inputting vehicle telematics data and/or AVSF configuration, software version, and usage data into machine learning module or program trained to determine whether the AVSF and/or vehicle is operating or performing as expected or designed. Similarly, determining whether the performance of the AVSF was relevant to the collision may include inputting vehicle telematics data and/or AVSF configuration, software version, and usage data into machine learning module or program trained to determine whether the performance of the AVSF was relevant to the collision. The AVSF, and/or the safety performance thereof, may then be assigned a score and a performance profile of the AVSF updated.</p><p id="p-0101" num="0100">As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in general, training the machine learning model (or neural network model) may include establishing a network architecture, or topology, and adding layers that may be associated with one or more activation functions (e.g., a rectified linear unit, softmax, etc.), loss functions and/or optimization functions. Multiple different types of artificial neural networks may be employed, including without limitation, recurrent neural networks, convolutional neural networks, and deep learning neural networks. Data sets used to train the artificial neural network(s) may be divided into training, validation, and testing subsets; these subsets may be encoded in an N-dimensional tensor, array, matrix, or other suitable data structures. Training may be performed by iteratively training the network using labeled training samples. Training of the artificial neural network may produce byproduct weights, or parameters which may be initialized to random values. The weights may be modified as the network is iteratively trained, by using one of several gradient descent algorithms, to reduce loss and to cause the values output by the network to converge to expected, or &#x201c;learned&#x201d;, values.</p><p id="p-0102" num="0101">In one embodiment, a regression neural network may be selected which lacks an activation function, wherein input data may be normalized by mean centering, to determine loss and quantify the accuracy of outputs. Such normalization may use a mean squared error loss function and mean absolute error. The artificial neural network model may be validated and cross-validated using standard techniques such as hold-out, K-fold, etc. In some embodiments, multiple artificial neural networks may be separately trained and operated, and/or separately trained and operated in conjunction.</p><p id="p-0103" num="0102">The method <b>600</b> may include, via one or more processors, assigning a percentage of fault for a vehicle collision to each AVSF defined by the ontology based upon the analysis of the telematics data and AVSF data associated with the vehicle collision or collisions. After which, as discussed with <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method <b>600</b> may include, via one or more processors, generating a virtual report detailing each AVSF's performance and/or safety rating or score for AVSFs defined by the ontology <b>612</b>. The virtual report may be shared with vehicle owners, dealerships, repair shops, and/or OEMs via a website or virtual portal. The method <b>600</b> may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><heading id="h-0010" level="2">Exemplary Advanced Vehicle Safety Feature Analysis</heading><p id="p-0104" num="0103">In one aspect, a computer-implemented method for determining the effectiveness of vehicle safety features may be provided. The method may include (1) obtaining, collecting, or receiving, by one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generating or using, via the one or more processors, an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collecting or receiving, via the one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle telematics data and/or AVSF data from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyzing, via the one or more processors, the vehicle telematics data and/or AVSF data to determine an individual AVSF performance rating or safety score for each AVSF defined by the ontology or ontology model. The method may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0105" num="0104">For instance, the method may include generating a virtual report detailing the individual AVSF performance rating or safety score for each AVSF in or defined by the ontology. The method may also include publishing the virtual report or otherwise making the virtual report available via a virtual portal.</p><p id="p-0106" num="0105">In some embodiments, the AVSF data may be AVSF configuration, software, and/or usage data. Additionally or alternatively, the AVSF data may include or detail vehicle owner preferences for AVSF configurations and usage. The AVSF data may include software version information of a current software version installed or executing on the AVSF. The AVSF may be an autonomous or semi-autonomous vehicle feature, technology, or system.</p><p id="p-0107" num="0106">The vehicle telematics data may include speed, acceleration, cornering, braking, location, and time of day information. Analyzing, via the one or more processors, the vehicle telematics data and/or AVSF data to determine an individual AVSF performance rating or safety score may include inputting the vehicle telematics data and/or AVSF data into a machine learning program, module, model, or algorithm trained to generate an AVSF performance rating or safety score based upon vehicle telematics data and/or AVSF data.</p><p id="p-0108" num="0107">In another aspect, a computer system configured to determine the effectiveness of vehicle safety features may be provided. The computer system may include one or more processors, servers, and/or associated transceivers configured to: (1) obtain, collect, or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generate or use an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collect or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle telematics data and/or AVSF data from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyze the vehicle telematics data and/or AVSF data to determine an individual AVSF performance rating or safety score for each AVSF defined by the ontology or ontology score.</p><p id="p-0109" num="0108">The one or more processors may be further configured to generate a virtual report detailing the individual AVSF performance rating or safety score for each AVSF in or defined by the ontology. The one or more processors may be configured to input the vehicle telematics data and/or AVSF data into a machine learning program, module, model, or algorithm trained to generate an AVSF performance rating or safety score based upon vehicle telematics data and/or AVSF data. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0110" num="0109">In another aspect, a computer-implemented method for determining the effectiveness of vehicle safety features may be provided. The method may include (1) obtaining, collecting, or receiving, by one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generating or using, via the one or more processors, an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collecting or receiving, via the one or more processors and/or associated transceivers (such as via wireless communication or data transmission over one or more radio frequency links), vehicle telematics data associated with a vehicle collision and/or AVSF data associated with the vehicle collision, such as from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyzing, via the one or more processors, the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision to determine an individual AVSF performance rating or safety score for each AVSF defined by the ontology or ontology model.</p><p id="p-0111" num="0110">The method may include generating a virtual report detailing the individual AVSF performance rating or safety score for each AVSF in or defined by the ontology. The method may include inputting the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision into a machine learning program, module, model, or algorithm trained to generate an AVSF performance rating or safety score based upon vehicle telematics data and/or AVSF data. The vehicle telematics data and/or AVSF data may be generated or collected before, during, and/or after a vehicle collision. The method may include additional, less, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0112" num="0111">In another aspect, a computer system configured to determine the effectiveness of vehicle safety features may be provided. The computer system may include one or more processors, servers, and/or associated transceivers configured to: (1) obtain, collect, or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle build information for a plurality of vehicles manufactured by a plurality of original equipment manufacturers (OEMs), the vehicle build information containing OEM-specific terminology associated with one or more smart safety features associated with each vehicle (or advanced vehicle safety features (AVSFs)); (2) generate or use an ontology or ontology model to develop a common terminology for the AVSFs or one or more smart safety features; (3) collect or receive, such as via wireless communication or data transmission over one or more radio frequency links, vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision, such as from a mobile device associated with a vehicle owner or a vehicle controller or transceiver; and/or (4) analyze the vehicle telematics data associated with the vehicle collision and/or AVSF data associated with the vehicle collision to determine an individual AVSF performance rating or safety score. The computer system may be configured to input the vehicle telematics data and/or AVSF data into a machine learning program, module, model, or algorithm trained to generate an AVSF performance rating or safety score based upon vehicle telematics data and/or AVSF data. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><heading id="h-0011" level="2">Exemplary System for Calculating Update Effectiveness Score</heading><p id="p-0113" num="0112">Many companies update features on vehicles that they have sold. The update may be in the form of computer software, computer hardware, physical vehicle component(s), or any combination thereof. For example, a company may produce an update to a forward collision warning system that makes the forward collision warning system more sensitive, or better at detecting an oncoming collision in bright sunlight or during rain. However, once the update has been implemented, it may be difficult to determine if the update has been effective (e.g., if making the forward collision warning system more sensitive is effective). Thus, what is needed is a system that may determine the effectiveness of a vehicle update.</p><p id="p-0114" num="0113">Such a computer system is provided in the example of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, which illustrates an exemplary computer system <b>700</b> for calculating effectiveness of an update to a vehicle feature, in accordance with some embodiments. The high-level architecture illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref> may include both hardware and software applications, as well as various data communications channels for communicating data between the various hardware and software components, as is described below. The system may include a computing device <b>102</b>, VBI database <b>135</b>, vehicle <b>115</b>A, and network <b>104</b>, as described above (e.g., as described with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>). In this respect, in some embodiments, the example of <figref idref="DRAWINGS">FIG. <b>7</b></figref> is an extension of the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Moreover, although the example of <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates only one of each of many of the components, such as the computing device <b>102</b>, the VDR computing device <b>772</b>, the vehicle <b>115</b>A, and the data source database <b>750</b>, etc., any number of each of the components may be included in a system (e.g., multiple data source databases, multiple vehicles, etc.).</p><p id="p-0115" num="0114">The system <b>700</b> may include an update effectiveness computing device <b>702</b>, which may include one or more processors <b>720</b> such as one or more microprocessors, controllers, and/or any other suitable type of processor. The update effectiveness computing device <b>702</b> may further include a memory <b>722</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>720</b>, (e.g., via a memory controller). Additionally, the update effectiveness computing device <b>702</b> may include a user interface <b>723</b>.</p><p id="p-0116" num="0115">The one or more processors <b>720</b> may interact with the memory <b>722</b> to obtain, for example, computer-readable instructions stored in the memory <b>722</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the update effectiveness computing device <b>702</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>722</b> may include instructions for executing various applications, such as, e.g., a machine learning model training application <b>724</b>, update effectiveness calculator <b>726</b>, and/or update implementation determiner <b>728</b>.</p><p id="p-0117" num="0116">In general, the update effectiveness calculator <b>726</b> may calculate an effectiveness score for an update to a vehicle. For example, the update effectiveness calculator <b>726</b> may construct a first dataset with data from before the update was sent to or implemented in vehicles having the vehicle feature, and construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature. The update effectiveness calculator <b>726</b> may then calculate an effectiveness score of the update based on both the first data set and the second dataset. In some implementations, the effectiveness score is calculated using a machine learning algorithm (e.g., trained and/or executed by the machine learning training application <b>724</b>, as will be described elsewhere herein).</p><p id="p-0118" num="0117">Once calculated, the effectiveness score may be stored in the memory <b>722</b>. Additionally or alternatively, the effectiveness score may be stored in the update effectiveness database <b>739</b>, which may store any suitable data. For example, the update effectiveness database <b>739</b> may store effectiveness scores, vehicle build sheets, standardized vehicle build sheets, any datasets (e.g., the first and second datasets from before and after an update was implemented), vehicle feature information (e.g., dates/times vehicle features were implemented, specifics of vehicle features, subscription information, infotainment system button placement information, etc.), historical weather condition information, insurance claim information, accident information (e.g., a number of accidents, a frequency of accidents, or a severity of accidents), etc.</p><p id="p-0119" num="0118">In some scenarios, it may not be readily apparent if an update has been implemented in a vehicle. For example, a company may push a software update to vehicle <b>115</b>A, but the user of the vehicle may have to then manually activate the update for the update to be implemented. In another example, a user may have to activate the feature that the update applies to. For instance, if the update is for a lane change assist feature, the update may only be implemented when the user is driving with the lane change assist feature activated. In this regard, the update implementation determiner <b>728</b> may determine when an update has been implemented.</p><p id="p-0120" num="0119">In addition, the update effectiveness computing device <b>702</b> may also include a search application <b>732</b>, which may provide a search feature to be displayed to a user via, e.g., via a web interface or via the user interface <b>723</b>. In one example, the search application <b>732</b> may receive user input indicating a vehicle feature to be searched, and may search the update effectiveness database <b>739</b> for effectiveness score(s) and/or any other data of the vehicle feature. In another example, the search application <b>732</b> may receive user input indicating a vehicle identification number (VIN) to be searched, and may search the vehicle build information to locate a matching vehicle and its associated standardized build sheet (e.g., constructed by the standardized build vehicle data repository (VDR) computing device <b>772</b>, as will be described further below) to thereby display the associated information.</p><p id="p-0121" num="0120">To calculate the effectiveness score, the update effectiveness computing device <b>702</b> may use data from any suitable source. For example, the update effectiveness computing device <b>702</b> may receive data from any of the data source database <b>750</b>, the vehicle <b>115</b>A, the VDR computing device <b>772</b>, the computing device <b>102</b>, etc.</p><p id="p-0122" num="0121">The data source database <b>750</b> may hold any suitable data. Examples of the data held by the data source database <b>750</b> include data from before an update was sent to or implemented in the vehicles having the vehicle feature, data from after the update was sent to or implemented in the vehicles having the vehicle feature, vehicle information (e.g., year/make/model of the vehicle, safety feature information, accident record information, ownership information, etc.). Examples of the data source database <b>750</b> include a vehicle manufacturer's database, a governmental database, a third party aggregator, an insurance company database, a National Highway Traffic Safety Administration (NHTSA) information database, a Highway Loss Data Institute (HLDI) information database, an Insurance Institute for Highway Safety (IIHS) database, etc.</p><p id="p-0123" num="0122">Furthermore, the data source database <b>750</b> may be connected to a data source server <b>760</b>, which may include one or more processors <b>762</b>, such as one or more microprocessors, controllers, and/or any other suitable type of processor. The data source server <b>760</b> may further include a memory <b>764</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>762</b> (e.g., via a memory controller). The one or more processors <b>762</b> may interact with the memory <b>764</b> to obtain, for example, computer-readable instructions stored in the memory <b>764</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the data source server <b>760</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>764</b> may include instructions for transmitting information from the data source database <b>750</b> to any other component in the system <b>700</b> via the network <b>104</b>.</p><p id="p-0124" num="0123">The vehicle <b>115</b>A may also send data to the update effectiveness computing device <b>702</b> (e.g., to be used in calculating the effectiveness score, etc.). For example, the vehicle <b>115</b>A may send: data indicating when the update has been received, data indicating when the update has been implemented, vehicle crash information, etc.</p><p id="p-0125" num="0124">The update effectiveness computing device <b>702</b> may also receive data from the vehicle accident record database <b>136</b>, which may hold any suitable data. For example, the vehicle accident record database <b>136</b> may hold accident record information (e.g., a number of accidents, a frequency of accidents, a severity of accidents associated with the vehicles having the vehicle feature, etc.).</p><p id="p-0126" num="0125">The update effectiveness computing device <b>702</b> may also receive data from the VDR <b>740</b>. The VDR <b>740</b> may store any kind of data. For example, the VDR <b>740</b> may store data comprising the vehicle feature. In some embodiments, the vehicle feature may be stored in an original equipment manufacturer (OEM)-agnostic terminology, as described elsewhere herein.</p><p id="p-0127" num="0126">Additionally or alternatively, the VDR <b>740</b> may store standardized build sheets. Broadly speaking, standardized build sheets may be vehicle build sheets including standardized information. For example, as discussed elsewhere herein, different vehicle manufacturers may use different terms to describe substantially the same vehicle feature. The standardized build sheets may advantageously account for this by using a common ontology (e.g., generated by the ontology generator <b>126</b>) in the standardized build sheets.</p><p id="p-0128" num="0127">The standardized build sheets may include fields, such as the example fields <b>850</b> of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For instance, the fields of a standardized build sheet may include: a vehicle identification number (VIN); vehicle make; vehicle model; vehicle model year; vehicle trim; vehicle drivetrain; vehicle body type; vehicle fuel type; vehicle number of engine cylinders; base manufacturer's suggested retail price (MSRP); MSRP; vehicle engine layout; vehicle engine capacity; vehicle engine horsepower (HP); vehicle transmission type; vehicle transmission speeds; vehicle wheelbase; vehicle curb weight; gross vehicle minimum weight; gross vehicle weight maximum; vehicle length; vehicle width; vehicle height; truck bed length; tire wheel diameter; tire aspect ratio; tire width tire construction; presence of adaptive cruise control; presence of adaptive cruise control with stop; presence of backup camera; presence of blind spot warning; presence of blind spot prevention; presence of automatic high beams; presence of adaptive headlights curve; presence of adaptive headlights distance; presence of adaptive driving beams; presence of forward collision warning; presence of forward collision warning with automatic emergency breaking (AEB); and/or presence of forward collision warning with AEB and pedestrian detection. In some embodiments, a VIN in a VIN field is used as the identifier of the standardized build sheet.</p><p id="p-0129" num="0128">Additionally or alternatively, the fields of the standardized vehicle build sheet may also include accident information of the vehicle. The accident information may include, for instance, a speed at which a vehicle was traveling at when an accident occurred; a portion of a vehicle impacted by the accident; and/or weather conditions during the accident.</p><p id="p-0130" num="0129">The standardized build sheets may be constructed by any suitable component, such as the VDR computing device <b>772</b>, the computing device <b>102</b>, etc. In one example, a standardized build sheet may be constructed by filling the fields of the standardized build sheet based upon selections of data from the VBI database <b>135</b>, and/or the data source database <b>750</b>. To this end, the component constructing the standardized build sheet may make a determination of a best source for the information for each of the fields based upon reliability and detail of each of the respective data sources.</p><p id="p-0131" num="0130">Advantageously, to help make better selections of data to fill the fields of the standardized build sheet, a common ontology (as described elsewhere herein) may be created between any or all of terms of the VBI database <b>135</b>, and/or the data source database <b>750</b>. For instance, different terms describing the same part in each of the respective data sources may be mapped together.</p><heading id="h-0012" level="2">Machine Learning Examples</heading><p id="p-0132" num="0131">In some embodiments, the update effectiveness calculator <b>726</b> uses a machine leaning model to wholly or partially calculate the effectiveness score of the update. The machine learning model may be trained by the machine learning training application <b>724</b>.</p><p id="p-0133" num="0132">In general, training the machine learning model may include establishing a network architecture, or topology, and adding layers that may be associated with one or more activation functions (e.g., a rectified linear unit, softmax, etc.), loss functions and/or optimization functions. Multiple different types of artificial neural networks may be employed, including without limitation, recurrent neural networks, convolutional neural networks, and deep learning neural networks. Data sets used to train the artificial neural network(s) may be divided into training, validation, and testing subsets; these subsets may be encoded in an N-dimensional tensor, array, matrix, or other suitable data structures. Training may be performed by iteratively training the network using labeled training samples. Training of the artificial neural network may produce byproduct weights, or parameters which may be initialized to random values. The weights may be modified as the network is iteratively trained, by using one of several gradient descent algorithms, to reduce loss and to cause the values output by the network to converge to expected, or &#x201c;learned,&#x201d; values.</p><p id="p-0134" num="0133">In one embodiment, a regression neural network may be selected which lacks an activation function, wherein input data may be normalized by mean centering, to determine loss and quantify the accuracy of outputs. Such normalization may use a mean squared error loss function and mean absolute error. The artificial neural network model may be validated and cross-validated using standard techniques such as hold-out, K-fold, etc. In some embodiments, multiple artificial neural networks may be separately trained and operated, and/or separately trained and operated in conjunction.</p><p id="p-0135" num="0134"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of an exemplary machine learning modeling method <b>900</b> for training and evaluating a machine learning model (e.g., a machine learning algorithm), in accordance with various embodiments. It should be understood that the principles of <figref idref="DRAWINGS">FIG. <b>9</b></figref> may apply to any machine learning algorithm discussed herein. As will be discussed further below, in some embodiments, the machine learning model may be used to calculate the effectiveness score of an update; in other embodiments, the machine learning model may be used to calculate the effectiveness score associated with a smart safety feature; in other embodiments, the machine learning model may be used to create ontology models; in other embodiments, the machine learning model may be used to select data to fill a standardized build sheet, such as that as in the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. The discussion of <figref idref="DRAWINGS">FIG. <b>9</b></figref> below will be, for illustrative purposes, with reference to calculating the effectiveness score of an update.</p><p id="p-0136" num="0135">In some embodiments, the model &#x201c;learns&#x201d; an algorithm capable of calculating the effectiveness score. For instance, the machine learning algorithm may be trained to calculate the effectiveness score of an update based upon a (i) first dataset with data from before an update was sent to or implemented in the vehicles having the vehicle feature, and (ii) a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature.</p><p id="p-0137" num="0136">At a high level, the machine learning modeling method <b>900</b> may include a block <b>902</b> for preparation of model input data, and a block <b>904</b> for model training and evaluation. The model training, storage, and implementation may be performed at the update effectiveness computing device <b>702</b> (e.g., by the machine learning training application <b>724</b>) or any other suitable component. In some embodiments, the training, storage, and implementation steps of the machine learning model may be performed at different computing devices or servers. For example, the machine learning model may be trained at any of the update effectiveness computing device <b>702</b>, the computing device <b>102</b>, VDR computing device <b>772</b>, and/or the data source server <b>760</b>; the machine learning model may then be stored and implemented at any of these components.</p><p id="p-0138" num="0137">Depending on implementation, one or more machine learning models may be trained at the same time. The different trained models may be further operated separately or in conjunction. Specific attributes in the training data sets may determine for which particular model each data set will be used. The determination may be made on attributes such as specific features of the information from the update effectiveness computing device <b>702</b>, the computing device <b>102</b>, VDR computing device <b>772</b>, and/or the data source server <b>760</b>. Training multiple models may provide an advantage of expediting calculations and further increasing specificity of prediction for each model's particular instance space.</p><p id="p-0139" num="0138">Depending on implementation, the machine learning model may be trained based upon supervised learning, unsupervised learning, or semi-supervised learning. Such learning paradigms may include reinforcement learning. Supervised learning is a learning process for learning the underlying function or algorithm that maps an input to an output based on example input-output combinations. A &#x201c;teaching process&#x201d; compares predictions by the model to known answers (labeled data) and makes corrections in the model. The trained algorithm is then able to make predictions of outputs based on the inputs. In such embodiments, the data (e.g., a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature, and a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature, etc.) may be labeled according to the corresponding output (e.g., a known effectiveness score of an update, etc.).</p><p id="p-0140" num="0139">Unsupervised learning is a learning process for generalizing the underlying structure or distribution in unlabeled data. In embodiments utilizing unsupervised learning, the system may rely on unlabeled datasets from before and/or after an update was sent to or implemented in the vehicles having the feature, etc. During unsupervised learning, natural structures are identified and exploited for relating instances to each other. Semi-supervised learning can use a mixture of supervised and unsupervised techniques. This learning process discovers and learns the structure in the input variables, where typically some of the input data is labeled, and most is unlabeled. The training operations discussed herein may rely on any one or more of supervised, unsupervised, or semi-supervised learning.</p><p id="p-0141" num="0140">Block <b>902</b> may include any one or more blocks or sub-blocks <b>906</b>-<b>910</b>, which may be implemented in any suitable order. At block <b>906</b>, the machine learning training application <b>724</b>, executed by processor <b>720</b> according to instructions on program memory <b>722</b>, may obtain training data from the VDR <b>740</b>, the computing device <b>102</b>, the vehicle <b>115</b>A, and/or the data source server <b>760</b>. For implementations training a machine learning algorithm to calculate the effectiveness score of an update, the training data may include a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature, and a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature, etc.</p><p id="p-0142" num="0141">Initially, at block <b>908</b>, relevant data may be selected from among available data (e.g., historical data). Training data may be assessed and cleaned, including handling missing data and handling outliers. For example, missing records, zero values (e.g., values that were not recorded), incomplete data sets (e.g., for scenarios when data collection was not completed), outliers, and inconclusive data may be removed. In order to select high predictive value features, special feature engineering techniques may be used to derive useful features from the datasets. For example, data may be visualized for the underlying relationships to determine which feature engineering steps should be assessed for performance improvement.</p><p id="p-0143" num="0142">This step may include manually entering user input, for example via user interface <b>723</b>, which may include defining possible predictive variables for the machine learning model. Manual user input may also include manually including or excluding variables selection after running special feature engineering techniques. Manual user input may be guided by an interest to evaluate, for example, an interaction of two or more predictor variables (e.g., vehicle accident record information, such as a number of accidents, a frequency of accidents, a severity of accidents associated with the vehicles having the vehicle feature, etc.).</p><p id="p-0144" num="0143">Furthermore, at block <b>908</b>, various measures may be taken to ensure a robust set of training data (e.g., providing standardized, heterogeneous data, removing outliers, imputing missing values, and so on). In certain embodiments, special feature engineering techniques may be used to extract or derive the best representations of the predictor variables to increase the effectiveness of the model. To avoid overfitting, in some embodiments feature reduction may be performed. In some embodiments, feature engineering techniques may include an analysis to remove uncorrelated features or variables. Variables may be evaluated in isolation to eliminate low predictive value variables, for example, by applying a cut-off value.</p><p id="p-0145" num="0144">At block <b>910</b>, the machine learning training application <b>724</b> may receive test data for testing the model or validation data for validating the model (e.g., from the VDR <b>740</b>, the computing device <b>102</b>, the vehicle <b>115</b>A, and/or the data source server <b>760</b>). Some or all of the training, test, or validation data sets may be labeled with pre-determined answers (e.g., based upon a known or determined effectiveness score of an update, etc.).</p><p id="p-0146" num="0145">Block <b>904</b> illustrates an exemplary machine learning (ML) model development and evaluation phase. Block <b>904</b> may include any one or more blocks or sub-blocks <b>912</b>-<b>920</b>, which may be implemented in any suitable order. In one example, at block <b>912</b>, the training module trains the machine learning model by running one or more pre-processed training data sets described above. At block <b>914</b>, the training module re-runs several iterations of the machine learning model. At block <b>916</b>, the training module evaluates the machine learning model, at block <b>918</b> the training module determines whether or not the machine learning model is ready for deployment before either proceeding to block <b>920</b> to output final production model or returning to block <b>912</b> to further develop, test, or validate the model.</p><p id="p-0147" num="0146">Regarding block <b>912</b>, developing the model typically involves training the model using training data. At a high level, the machine learning model may be utilized to discover relationships between various observable features (e.g., between predictor features and target features) in a training dataset, which may then be applied to an input dataset to predict unknown values for one or more of these features given the known values for the remaining features. At block <b>904</b>, these relationships are discovered by feeding the model pre-processed training data including instances each having one or more predictor feature values and one or more target feature values. The model then &#x201c;learns&#x201d; an algorithm capable of calculating or predicting the target feature values (e.g., to calculate the effectiveness variable, etc.) given the predictor feature values.</p><p id="p-0148" num="0147">At block <b>912</b>, the machine learning model may be trained (e.g., by the update effectiveness computing device <b>702</b>, the computing device <b>102</b>, the VDR computing device <b>772</b>, or combinations thereof, etc.) to thereby generate the machine learning model. Techniques for training/generating the machine learning model may include gradient boosting, neural networks, deep learning, linear regression, polynomial regression, logistic regression, support vector machines, decision trees, random forests, nearest neighbors, or any other suitable machine learning technique. In some examples, the update effectiveness computing device <b>702</b>, the computing device <b>102</b>, and/or the VDR computing device <b>772</b> implements gradient boosting machine learning (for example, using the open source extreme gradient boosting (XGBoost) algorithm) with a secondary application of the model for close cases and/or error correction. In certain embodiments, training the machine learning model may include training more than one model according to the selected method(s) on the data pre-processed at block <b>908</b> implementing different method(s) and/or using different sub-sets of the training data, or according to other criteria.</p><p id="p-0149" num="0148">Training the machine learning model may include re-running the model (at optional block <b>914</b>) to improve the accuracy of prediction values. For example, re-running the model may improve model training when implementing gradient boosting machine learning. In another implementation, re-running the model may be necessary to assess the differences caused by an evaluation procedure. For instance, available data sets in the vehicle accident records database <b>136</b>, the computing device <b>102</b>, the data source server <b>760</b>, the VDR <b>740</b>, and/or any other data source may be split into training and testing data sets by randomly assigning sub-sets of data to be used to train the model or evaluate the model to meet the predefined train or test set size, or an evaluation procedure may use a k-fold cross validation. Both of these evaluation procedures are stochastic, and, as such, each evaluation of a deterministic ML model, even when running the same algorithm, provides a different estimate of error or accuracy. The performance of these different model runs may be compared using one or more accuracy metrics, for example, as a distribution with mean expected error or accuracy and a standard deviation. In certain implementations, the models may be evaluated using metrics such as root mean square error (RMSE), to measure the accuracy of prediction values.</p><p id="p-0150" num="0149">Regarding block <b>916</b>, evaluating the model typically involves testing the model using testing data or validating the model using validation data. Testing/validation data typically includes both predictor feature values and target feature values (e.g., including order demand patterns for which corresponding delivery patterns are known), enabling comparison of target feature values predicted by the model to the actual target feature values, enabling one to evaluate the performance of the model. This testing/validation process is valuable because the model, when implemented, will generate target feature values for future input data that may not be easily checked or validated. Thus, it is advantageous to check one or more accuracy metrics of the model on data for which the target answer is already known (e.g., testing data or validation data), and use this assessment as a proxy for predictive accuracy on future data. Example accuracy metrics include key performance indicators, comparisons between historical trends and predictions of results, cross-validation with subject matter experts, comparisons between predicted results and actual results, etc.</p><p id="p-0151" num="0150">Regarding block <b>918</b>, any suitable set of metrics may be used to determine whether or not to proceed to block <b>920</b> to output the final production model. Generally speaking, the decision to proceed to block <b>920</b> or to return to block <b>912</b> will depend on one or more accuracy metrics generated during evaluation (block <b>916</b>). After the sub-blocks <b>912</b>-<b>918</b> of block <b>904</b> have been completed, block <b>920</b> may be implemented. At block <b>920</b>, the machine learning model may be output.</p><heading id="h-0013" level="2">Exemplary Methods for Calculating Update Effectiveness Score</heading><p id="p-0152" num="0151">Broadly speaking, the update effectiveness computing device <b>702</b> may calculate an effectiveness score for an update to a vehicle feature. To this end, <figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an example implementation <b>1000</b> of calculating the effectiveness score. It may be noted that while the example implementation is described with reference to the update effectiveness computing device <b>702</b> performing many of the blocks, any suitable component (e.g., the computing device <b>102</b>, the VDR computing device <b>772</b>, etc.) may perform any block. Furthermore, it should be understood that the implementation <b>1000</b> is an example, and other implementations may include additional, fewer, and/or alternate blocks/actions, such as those discussed elsewhere herein.</p><p id="p-0153" num="0152">The example implementation <b>1000</b> begins at block <b>1002</b> when the update effectiveness computing device <b>702</b> obtains vehicle data comprising a vehicle feature (e.g., from the VDR <b>740</b>). In some examples, the vehicle feature is a safety feature, such as a forward collision warning system. However, the vehicle feature does not need to be a vehicle safety feature.</p><p id="p-0154" num="0153">Some examples of vehicle features include: adaptive cruise control; adaptive cruise control with stop; backup camera; blind spot warning; blind spot prevention; automatic high beams; adaptive headlights curve; adaptive headlights distance; adaptive driving beams; forward collision warning; lane change assist; infotainment system; global positioning satellite (GPS) (e.g., a GPS device with a screen built into the vehicle); etc.</p><p id="p-0155" num="0154">In some implementations, the feature comprises a subscription to a service, such as a subscription to a hands-free driving feature.</p><p id="p-0156" num="0155">Furthermore, the vehicle feature may be advantageously received from where it was stored in an original equipment manufacturer (OEM)-agnostic terminology, as described elsewhere herein. For example, the VDR <b>740</b> may store features in OEM-agnostic terminology.</p><p id="p-0157" num="0156">At block <b>1004</b>, the update effectiveness computing device <b>702</b> may receive information indicating the update to the vehicle feature was sent to vehicles (e.g., vehicle <b>115</b>A) having the vehicle feature. The information may be received directly from the vehicles (e.g., vehicle <b>115</b>A, an application of a mobile device of a user of the vehicle <b>115</b>A, etc.), and/or any other source(s), such as the computing device <b>102</b>, the data source database <b>750</b>, the VDR <b>740</b>, etc. In some implementations, an owner of the vehicle first opts in (e.g., consents) to have information about the vehicle shared with other sources.</p><p id="p-0158" num="0157">At block <b>1006</b>, the update effectiveness computing device <b>702</b> may determine vehicles that the update has been implemented in. For example, simply because an update was sent to a vehicle does not necessarily mean that the vehicle actually implemented the feature.</p><p id="p-0159" num="0158">In this regard, sometimes, it may not be readily apparent if an update has been implemented in a vehicle. For example, a company may push a software update to vehicle <b>115</b>A, but the user of the vehicle may have to then manually activate the update for the update to be implemented.</p><p id="p-0160" num="0159">In another example, a user may have to activate the feature that the update applies to. For instance, if the update is for a lane change assist feature, the update may only be implemented when the user is driving with the lane change assist feature activated. In a further example, the feature may be a subscription to a service; for instance, a user may purchase a subscription for a period of time (e.g., a year) to a service (e.g., a hands-free driving service), but then allow the subscription to lapse at the end of a year. Therefore, there may be a start time and an end time to implementation of the feature that is subscription dependent. Thus, in some scenarios, it is useful to determine when a feature is actually being implemented in a vehicle.</p><p id="p-0161" num="0160">The determination (e.g., at block <b>1006</b>) may be made by any suitable technique. For example, the vehicles (e.g., vehicle <b>115</b>A, etc.) may send information indicating that they have implemented the feature. Additionally or alternatively, the vehicle manufacturer (e.g., the data source database <b>750</b> may be the data source database of a manufacturer, and the data source server <b>760</b> may be the server of a manufacturer) may send information indicating that the feature has been implemented. Additionally or alternatively, applications of mobile devices of users of the vehicles may send indications indicating that the feature has been implemented.</p><p id="p-0162" num="0161">At block <b>1008</b>, the update effectiveness computing device <b>702</b> may obtain vehicle accident record information for the vehicles having the vehicle feature (e.g., from the vehicle record accident database <b>136</b>). The vehicle accident record information may include one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature. The severity of the accidents may indicate, among other things, whether the vehicle was a total loss. Additionally or alternatively, the vehicle record information may include information of a weather condition occurring during accidents, such as a rain condition, a wind condition, and/or a sunlight condition. In some embodiments, the accident record information includes insurance claims data.</p><p id="p-0163" num="0162">At block <b>1010</b>, the update effectiveness computing device <b>702</b> may construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature. The first dataset may be constructed by any suitable technique. In one example, the first dataset is all or part of the accident data (e.g., a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature) received (e.g., at block <b>1008</b>) for vehicles having the feature during the time period before the update was sent to or implemented in the vehicles. In another example, the first dataset may include only data that meets a particular condition. For instance, the first dataset may be constructed to be only data of accidents occurring during a weather condition (e.g., when it was raining). In another instance, the first dataset may be constructed to be only accidents occurring during a particular time of day (e.g., in the morning, at night, etc.).</p><p id="p-0164" num="0163">At block <b>1012</b>, the update effectiveness computing device <b>702</b> may construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature. The second dataset may be constructed by any suitable technique. In one example, the second dataset is all or part of the accident data (e.g., a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature) received (e.g., at block <b>1008</b>) for vehicles having the feature during the time period after the update was sent to or implemented in the vehicles. In another example, the second dataset may include only data that meets a particular condition. For instance, the second dataset may be constructed to be only data of accidents occurring during a weather condition (e.g., when it was raining). In another instance, the second dataset may be constructed to be only accidents occurring during a particular time of day (e.g., in the morning, at night, etc.).</p><p id="p-0165" num="0164">At block <b>1014</b>, the update effectiveness computing device <b>702</b> may calculate the effectiveness score of the update based upon both the first data set and the second dataset. The calculation may be made by any suitable technique. For example, the first and second datasets may be input into a trained machine learning algorithm (e.g., as in the example of <figref idref="DRAWINGS">FIG. <b>9</b></figref>). Examples of machine learning algorithms include neural networks, convolutional neural networks, random forests, etc. However, in some embodiments, the effectiveness score is calculated without using a machine learning algorithm. For instance, the effectiveness score may be calculated by using lookup tables, mathematical equations, etc. In some examples, calculating the effectiveness score comprises comparing the first dataset to the second dataset.</p><p id="p-0166" num="0165">In some embodiments, the calculation of the effectiveness score is further based on the information of the weather condition occurring during the accidents. For example, vehicle accidents occurring during rain may impact the effectiveness score less than accidents not occurring during rain; furthermore, accidents occurring during sever weather (e.g., flood, tornado, etc.) may have even less of an impact on the effectiveness score than accidents occurring during rain.</p><p id="p-0167" num="0166">In some embodiments, the calculated effectiveness score may be useful for vehicle manufacturers in determining future adjustments to make to features on their vehicles. For example, the vehicle feature may be a forward collision warning system, and the update may be make a sensitivity metric of the forward collision warning system more or less sensitive during a particular condition (e.g., rain, bright sunlight, darkness, etc.). In this example, the calculated effectiveness score may be useful for the vehicle manufacturer in determining future adjustments to make to the sensitivity metric.</p><p id="p-0168" num="0167">In another example, the vehicle feature is an infotainment system, and the update may be a change to a button placement on a screen of the infotainment system. In this example, calculating an effectiveness score may help a vehicle manufacturer know if changing a button placement (or if a specific button placement on the screen) causes an increased number of accidents.</p><p id="p-0169" num="0168">In yet another example, the feature may be a lane departure warning feature that nudges the steering wheel when the car begins to drift into another lane. In this example, the update may be a force by which the steering wheel is nudged by. Here, the effectiveness score may be useful to help the vehicle manufacturer determine an optimal amount of force to nudge the steering wheel by.</p><p id="p-0170" num="0169">At block <b>1016</b>, the update effectiveness computing device <b>702</b> may receive insurance claims data. The insurance claims data may be received from any suitable source, such as the computer system of an insurance company, a third party aggregator, etc. In some examples, the data source database is the database of an insurance company, and the data source server <b>760</b> is the data source server of the insurance company. In some examples, the data source database may be the database of a third party aggregator, and the data source server <b>760</b> is the data source server of the third party aggregator.</p><p id="p-0171" num="0170">The insurance claims data may include any kind of data. For example, the insurance claims data may include: accident information associated with the insurance claims, cost to repair the vehicle, whether the vehicle was a total loss, medical treatment information of a driver, cost of a medical treatment for a driver, driving conditions during an accident (e.g., weather conditions), year/make/model of a vehicle, feature information of the vehicle, age of the driver, gender of the driver, location of the accident, any of the information of a standardized build sheet (e.g., information from the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>), etc.</p><p id="p-0172" num="0171">At block <b>1018</b>, the update effectiveness computing device <b>702</b> may calculate an increase or decrease in insurance premiums for vehicles having implemented the update. The increase or decrease may be calculated based upon any suitable criteria, such as the insurance claims data, the effectiveness score, etc. In some examples, the increase or decrease may be calculated based upon the age and/or gender of the driver (e.g., from the insurance claims data), and the effectiveness score.</p><p id="p-0173" num="0172">At block <b>1020</b>, the update effectiveness computing device <b>702</b> may calculate (i) cost of insurance claims, (ii) amount of insurance claims, (iii) total loss frequency (e.g., that the vehicle is a total loss as a result of the accident), and/or (iv) accident severity for vehicles having implemented the update. In some examples, the calculation may be made based upon (i) the insurance claims data, and/or (ii) the effectiveness score of the update. Such calculations may be useful for insurance companies or vehicle manufactures. For example, a calculation of an impact on an update for a vehicle feature on accident severity may be useful to insurance companies or vehicle manufactures.</p><heading id="h-0014" level="2">Exemplary Calculation of an Effectiveness Score of an Update</heading><p id="p-0174" num="0173">In one aspect, a computer-implemented method for use in determining effectiveness of an update to a vehicle feature may be provided. The method may be implemented via one or more local or remote processors, servers, transceivers, sensors, memory units, and/or other electrical or electronic components. The method may comprise: (1) obtaining, by one or more processors, vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology; (2) receiving, by the one or more processors, information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (3) obtaining, by the one or more processors, vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (4) constructing, by the one or more processors, a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (5) constructing, by the one or more processors, a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and/or (6) calculating, by the one or more processors, an effectiveness score of the update based upon both the first data set and the second dataset. The method may include additional, fewer, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0175" num="0174">In some embodiments, the vehicle feature may be a vehicle safety feature. In certain embodiments: the vehicle feature may be a forward collision warning system; and/or the update to the vehicle feature makes a sensitivity metric of the forward collision warning system more sensitive.</p><p id="p-0176" num="0175">In some embodiments: the vehicle accident record information further may include information of a weather condition occurring during accidents; and/or the calculation of the effectiveness score may be further based on the information of the weather condition occurring during the accidents. In some embodiments, the weather condition may include a rain condition, a wind condition, and/or a sunlight condition.</p><p id="p-0177" num="0176">In some embodiments, the method further may include determining, by the one or more processors, vehicles that the update has been implemented in. The first dataset may be constructed from the data from the vehicles having the vehicle feature from before the update was implemented; and/or the second dataset may be constructed from the data from the vehicles having the vehicle feature from after the update was implemented.</p><p id="p-0178" num="0177">In some embodiments, the vehicle accident record information further may include subscription information including information of a start time of a subscription to the vehicle feature, and the method may include determining, by the one or more processors, that the vehicle feature is implemented at the start time of the subscription to the vehicle feature. The first dataset may be constructed from the data from the vehicles having the vehicle feature from before the update was implemented. The second dataset may be constructed from the data from the vehicles having the vehicle feature from after the update was implemented.</p><p id="p-0179" num="0178">In some embodiments, the subscription information may include information of a subscription to a hands-free driving feature. In certain embodiments, the update to the vehicle feature may include changes to button placement on a vehicle infotainment system.</p><p id="p-0180" num="0179">In some embodiments, the method may include receiving, by the one or more processors, insurance claims data; and/or calculating, by the one or more processors, an increase or decrease in insurance premiums for vehicles having implemented the update, wherein the calculation may be based upon: (i) the insurance claims data, and/or (ii) the effectiveness score of the update.</p><p id="p-0181" num="0180">In some embodiments, the method further may include receiving, by the one or more processors, insurance claims data; and/or calculating, by the one or more processors, an impact on: (i) cost of insurance claims, or (ii) amount of insurance claims for vehicles having implemented the update; and the calculation may be based upon: (i) the insurance claims data, and/or (ii) the effectiveness score of the update.</p><p id="p-0182" num="0181">In some embodiments, the information indicating the update to the vehicle may be received from a vehicle manufacturer, a third party aggregator, an application of a computing device of vehicle operators, and/or the vehicle data repository. In some embodiments, the calculating the effectiveness score may include comparing the first dataset to the second dataset.</p><p id="p-0183" num="0182">In some embodiments, calculating the effectiveness score may include inputting the first dataset and the second dataset into a machine learning algorithm.</p><p id="p-0184" num="0183">In another aspect, computer system for use in determining effectiveness of an update to a vehicle feature may be provided. The computer system may include one or more local or remote processors, servers, transceivers, sensors, memory units, and/or other electrical or electronic components. In certain embodiments, the computer system may include one or more processors configured to: (1) obtain vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology; (2) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (3) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (4) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (5) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and/or (6) calculate an effectiveness score of the update based upon both the first data set and the second dataset. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0185" num="0184">In some embodiments, the vehicle feature may be a vehicle safety feature. In certain embodiments, the one or more processors are further configured to determine vehicles that the update has been implemented in. The first dataset may be constructed from: (i) the data from the vehicles having the vehicle feature from before the update was implemented, and/or (ii) the accident record information. The second dataset may be constructed from: (i) the data from the vehicles having the vehicle feature from after the update was implemented, and/or (ii) the accident record information.</p><p id="p-0186" num="0185">In another aspect, a computer system for use in determining effectiveness of an update to a vehicle feature may be provided. The computer system may include one or more local or remote processors, servers, transceivers, sensors, memory units, and/or other electrical or electronic components. In some embodiments, the computer system may comprise: one or more processors; and a non-transitory program memory communicatively coupled to the one or more processors and storing executable instructions that, when executed by the one or more processors, cause the computer system to: (1) obtain vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology; (2) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (3) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (4) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (5) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and/or (6) calculate an effectiveness score of the update based upon both the first data set and the second dataset. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0187" num="0186">In some embodiments, the vehicle feature may be a vehicle safety feature. The instructions, when executed by the one or more processors, may cause the computer system to: determine vehicles that the update has been implemented in. The first dataset may be constructed from: (i) the data from the vehicles having the vehicle feature from before the update was implemented, and/or (ii) the accident record information. The second dataset may be constructed from: (i) the data from the vehicles having the vehicle feature from after the update was implemented, and/or (ii) the accident record information.</p><heading id="h-0015" level="2">Exemplary Distributed Ledger System for Vehicle Updates</heading><p id="p-0188" num="0187">A distributed ledger (also referred to herein as a blockchain) provides a way of achieving a distributed consensus on the validity or invalidity of information stored on the distributed ledger. In other words, the distributed ledger provides a decentralized trust to participants and observers. As opposed to relying on a central authority, a distributed ledger may be a decentralized database in which a transactional record of changes to the distributed ledger is maintained and validated by each node of a peer-to-peer network. The distributed ledger may be comprised of groupings of transactions organized together into a &#x201c;block,&#x201d; and ordered sequentially (thus the term &#x201c;blockchain&#x201d;). Nodes may join and leave the distributed ledger network over time and may obtain blocks that were propagated while the node was gone from peer nodes. Nodes may maintain addresses of other nodes and exchange addresses of known nodes with one another to facilitate the propagation of new information across the network in a decentralized, peer-to-peer manner.</p><p id="p-0189" num="0188">The nodes that share the distributed ledger form what is sometimes referred to herein as the distributed ledger network. The nodes in the distributed ledger network validate changes to the distributed ledger (e.g., when a new transaction and/or block is created) according to a set of consensus rules. The consensus rules depend on the information being tracked by the blockchain and may include rules regarding the chain itself. For example, a consensus rule may include that the originator of a change supply a proof-of-identity such that only approved entities may originate changes to the chain. A consensus rule may require that blocks and transactions adhere to format requirement and supply certain meta information regarding the change (e.g., blocks must be below a size limit, transactions must include a number of fields, etc.). Consensus rules may include a mechanism to determine the order in which new blocks are added to the chain (e.g., through a proof-of-work system, proof-of-stake, etc.).</p><p id="p-0190" num="0189">Additions to the blockchain that satisfy the consensus rules are propagated from nodes that have validated the addition to other nodes that the validating node is aware of. If all the nodes that receive a change to the blockchain validate the new block, then the distributed ledger reflects the new change as stored on all nodes, and it may be said that distributed consensus has been reached with respect to the new block and the information contained therein. Any change that does not satisfy the consensus rule is disregarded by validating nodes that receive the change and is not propagated to other nodes. Accordingly, unlike a traditional system which uses a central authority, a single party cannot unilaterally alter the distributed ledger unless the single party can do so in a way that satisfies the consensus rules. The inability to modify past transactions leads to blockchains being generally described as trusted, secure, and immutable.</p><p id="p-0191" num="0190">The validation activities of nodes applying consensus rules on a blockchain network may take various forms. In one implementation, the blockchain may be viewed as a shared spreadsheet that tracks data such as the ownership of assets. In another implementation, the validating nodes execute code contained in &#x201c;smart contracts&#x201d; and distributed consensus is expressed as the network nodes agreeing on the output of the executed code.</p><p id="p-0192" num="0191">Distributed ledgers may be deployed in a public, decentralized, and permissionless manner meaning that any party may view the distributed ledger, submit new information to be added to the ledger, or join the network as a validating node. Other blockchains are private that keep chain data private among a group of entities authorized to participate in the blockchain network. Yet other blockchains are permissioned which may be a hybrid of a public and a private blockchain. In some scenarios, private blockchains are maintained by a single entity, whereas permissioned blockchains include multiple authorized entities to make changes to the blockchain.</p><p id="p-0193" num="0192"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates an exemplary distributed ledger system <b>1100</b> for tracking effectiveness of an update to a vehicle feature. Broadly speaking, the components in the system <b>1100</b> may be nodes of the distributed ledger <b>1110</b>. Furthermore, many of the components of the system <b>1100</b> may calculate information to be placed on the distributed ledger <b>1110</b>. In addition, although the example of <figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates only one of each of many of the components, such as the computing device <b>102</b>, the VDR computing device <b>772</b>, the vehicle <b>115</b>A, and the data source database <b>1150</b>, insurance company server <b>1140</b>, vehicle manufacture server <b>1180</b>, etc., any number of each of the components may be included in a system (e.g., multiple data source databases, multiple vehicles, etc.).</p><p id="p-0194" num="0193">The system <b>1100</b> may include an update effectiveness computing device <b>702</b>, which may include one or more processors <b>720</b> such as one or more microprocessors, controllers, and/or any other suitable type of processor. The update effectiveness computing device <b>702</b> may further include a memory <b>722</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>720</b>, (e.g., via a memory controller). Additionally, the update effectiveness computing device <b>702</b> may include a user interface <b>723</b>.</p><p id="p-0195" num="0194">The one or more processors <b>720</b> may interact with the memory <b>722</b> to obtain, for example, computer-readable instructions stored in the memory <b>722</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the update effectiveness computing device <b>702</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>722</b> may include instructions for executing various applications, such as, e.g., a machine learning model training application <b>724</b>, update effectiveness calculator <b>726</b>, and/or update implementation determiner <b>728</b>.</p><p id="p-0196" num="0195">In general, the update effectiveness calculator <b>726</b> may calculate an effectiveness score for an update to a vehicle. For example, the update effectiveness calculator <b>726</b> may construct a first dataset with data from before the update was sent to or implemented in vehicles having the vehicle feature, and construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature. The update effectiveness calculator <b>726</b> may then calculate an effectiveness score of the update based on both the first data set and the second dataset. In some implementations, the effectiveness score may be calculated using a machine learning algorithm (e.g., trained and/or executed by the machine learning training application <b>724</b>, as will be described elsewhere herein).</p><p id="p-0197" num="0196">Once calculated, the effectiveness score may be stored in the memory <b>722</b>. Additionally or alternatively, the effectiveness score may be stored in the update effectiveness database <b>739</b>, which may store any suitable data. For example, the update effectiveness database <b>739</b> may store effectiveness scores, vehicle build sheets, standardized vehicle build sheets, any datasets (e.g., the first and second datasets from before and after an update was implemented), vehicle feature information (e.g., dates/times vehicle features were implemented, specifics of vehicle features, subscription information, infotainment system button placement information, etc.), historical weather condition information, insurance claim information, accident information (e.g., a number of accidents, a frequency of accidents, or a severity of accidents), etc.</p><p id="p-0198" num="0197">In some scenarios, it may not be readily apparent if an update has been implemented in a vehicle. For example, a company may push a software update to vehicle <b>115</b>A, but the user of the vehicle may have to then manually activate the update for the update to be implemented. In another example, a user may have to activate the feature that the update applies to. For instance, if the update is for a lane change assist feature, the update may only be implemented when the user is driving with the lane change assist feature activated. In this regard, the update implementation determiner <b>728</b> may determine when an update has been implemented.</p><p id="p-0199" num="0198">In addition, the update effectiveness computing device <b>702</b> may also include a search application <b>732</b>, which may provide a search feature to be displayed to a user via, e.g., via a web interface or via the user interface <b>723</b>. In one example, the search application <b>732</b> may receive user input indicating a vehicle feature to be searched, and may search the update effectiveness database <b>739</b> for effectiveness score(s) and/or any other data of the vehicle feature. In another example, the search application <b>732</b> may receive user input indicating a vehicle identification number (VIN) to be searched, and may search the vehicle build information to locate a matching vehicle and its associated standardized build sheet (e.g., constructed by the standardized build vehicle data repository (VDR) computing device <b>772</b>, as will be described further below) to thereby display the associated information.</p><p id="p-0200" num="0199">To calculate the effectiveness score, the update effectiveness computing device <b>702</b> may use data from any suitable source. For example, the update effectiveness computing device <b>702</b> may receive data from any of the data source database <b>1150</b>, the vehicle <b>115</b>A, the VDR computing device <b>772</b>, the computing device <b>102</b>, the vehicle manufacturer database <b>1170</b>, the insurance company database <b>1130</b>, etc.</p><p id="p-0201" num="0200">The data source database <b>1150</b> may hold any suitable data. Examples of the data held by the data source database <b>1150</b> include data from before an update was sent to or implemented in the vehicles having the vehicle feature, data from after the update was sent to or implemented in the vehicles having the vehicle feature, vehicle information (e.g., year/make/model of the vehicle, safety feature information, accident record information, ownership information, etc.). Examples of the data source database <b>1150</b> include a governmental database, a third party aggregator, a National Highway Traffic Safety Administration (NHTSA) information database, a Highway Loss Data Institute (HLDI) information database, an Insurance Institute for Highway Safety (IIHS) database, etc.</p><p id="p-0202" num="0201">Furthermore, the data source database <b>1150</b> may be connected to a data source server <b>1160</b>, which may include one or more processors <b>1162</b>, such as one or more microprocessors, controllers, and/or any other suitable type of processor. The data source server <b>1160</b> may further include a memory <b>1164</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>1162</b> (e.g., via a memory controller). The one or more processors <b>1162</b> may interact with the memory <b>1164</b> to obtain, for example, computer-readable instructions stored in the memory <b>1164</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the data source server <b>1160</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>1164</b> may include instructions for transmitting information from the data source database <b>1150</b> to any other component in the system <b>1100</b> via the network <b>104</b>.</p><p id="p-0203" num="0202">The vehicle <b>115</b>A may also send data to the update effectiveness computing device <b>702</b> (e.g., to be used in calculating the effectiveness score, etc.). For example, the vehicle <b>115</b>A may send: data indicating when the update has been received, data indicating when the update has been implemented, vehicle crash information, etc.</p><p id="p-0204" num="0203">The update effectiveness computing device <b>702</b> may also receive data from the vehicle accident record database <b>136</b>, which may hold any suitable data. For example, the vehicle accident record database <b>136</b> may hold accident record information (e.g., a number of accidents, a frequency of accidents, a severity of accidents associated with the vehicles having the vehicle feature, etc.).</p><p id="p-0205" num="0204">The update effectiveness computing device <b>702</b> may also receive data from the VDR <b>740</b>. The VDR <b>740</b> may store any kind of data. For example, the VDR <b>740</b> may store data comprising the vehicle feature. In some embodiments, the vehicle feature is stored in an original equipment manufacturer (OEM)-agnostic terminology, as described elsewhere herein. Additionally or alternatively, the VDR <b>740</b> may store standardized build sheets, as also described elsewhere herein.</p><p id="p-0206" num="0205">The update effectiveness computing device <b>702</b> may also receive data from the insurance company database <b>1130</b>. The insurance company database <b>1130</b> may hold any kind of data, such as any data held by an insurance company. For instance, the insurance company database <b>1130</b> may hold insurance claims data including, for example, accident information associated with the insurance claims, cost to repair the vehicle, whether the vehicle was a total loss, medical treatment information of a driver, cost of a medical treatment for a driver, driving conditions during an accident (e.g., weather conditions), year/make/model of a vehicle, feature information of the vehicle, age of the driver, gender of the driver, location of the accident, any of the information of a standardized build sheet (e.g., information from the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>), etc.</p><p id="p-0207" num="0206">The insurance company database <b>1130</b> may be connected to an insurance company server <b>1140</b>, which may include one or more processors <b>1142</b>, such as one or more microprocessors, controllers, and/or any other suitable type of processor. The insurance company server <b>1140</b> may further include a memory <b>1144</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>1142</b> (e.g., via a memory controller). The one or more processors <b>1142</b> may interact with the memory <b>1144</b> to obtain, for example, computer-readable instructions stored in the memory <b>1144</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the insurance company server <b>1140</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>1144</b> may include instructions for transmitting information from the insurance company database <b>1130</b> to any other component in the system <b>1100</b> via the network <b>104</b>.</p><p id="p-0208" num="0207">The update effectiveness computing device <b>702</b> may also receive data from the vehicle manufacturer database <b>1170</b>. The vehicle manufacturer database <b>1170</b> may hold any kind of data, such as any data held by a vehicle manufacturer. For instance, vehicle manufacturer database <b>1170</b> may hold vehicle data including, for example, year/make/model of a vehicle, feature information of the vehicle, age of the owner, gender of the owner, any of the information of a standardized build sheet (e.g., information from the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>), etc.</p><p id="p-0209" num="0208">The vehicle manufacturer database <b>1170</b> may be connected to a vehicle manufacturer server <b>1180</b>, which may include one or more processors <b>1182</b>, such as one or more microprocessors, controllers, and/or any other suitable type of processor. The vehicle manufacturer server <b>1180</b> may further include a memory <b>1184</b> (e.g., volatile memory, non-volatile memory) accessible by the one or more processors <b>1182</b> (e.g., via a memory controller). The one or more processors <b>1182</b> may interact with the memory <b>1184</b> to obtain, for example, computer-readable instructions stored in the memory <b>1184</b>. Additionally or alternatively, computer-readable instructions may be stored on one or more removable media (e.g., a compact disc, a digital versatile disc, removable flash memory, etc.) that may be coupled to the vehicle manufacturer server <b>1180</b> to provide access to the computer-readable instructions stored thereon. In particular, the computer-readable instructions stored on the memory <b>1184</b> may include instructions for transmitting information from the vehicle manufacturer database <b>1170</b> to any other component in the system <b>1100</b> via the network <b>104</b>.</p><p id="p-0210" num="0209">As mentioned above, any of the components in the system <b>1100</b> (e.g., the computing device <b>102</b>, the update effectiveness computing device <b>702</b>, the vehicle <b>115</b>A, the VDR computing device <b>772</b>, the data source server <b>1160</b>, the insurance company server <b>1140</b>, the vehicle manufacturer server <b>1180</b>) may be nodes of the distributed ledger <b>1110</b>.</p><p id="p-0211" num="0210">Further as mentioned above, a distributed ledger, such as a blockchain, is a way of achieving a distributed consensus on the validity or invalidity of information. As opposed to using a central authority, a blockchain is a distributed database, or ledger, in which a transactional record is maintained at each node of a peer-to-peer network. The distributed ledger may be comprised of groupings of transactions bundled together into a &#x201c;block.&#x201d; When a change to the distributed ledger is made (e.g., when a new transaction and/or block is created), each node must form a consensus as to how the change is integrated into the distributed ledger. Upon consensus, the agreed upon change is pushed out to each node so that each node maintains an identical copy of the updated distributed ledger. Any change that does not achieve a consensus is ignored. Accordingly, unlike a traditional system which uses a central authority, a single party cannot unilaterally alter the distributed ledger. Advantageously, this inability to modify past transactions lead to blockchains being generally described as trusted, secure, and immutable.</p><p id="p-0212" num="0211">Some blockchains may be deployed in an open, decentralized, and permissionless manner meaning that any party may view information, submit new information, or join the blockchain as a node responsible for confirming information. This open, decentralized, and permissionless approach to a blockchain has limitations. As an example, these blockchains may not be good candidates for interactions that require information to be kept private, such as information related to a vehicle lifecycle process, or for interactions that require all participants to be vetted prior to their participation.</p><p id="p-0213" num="0212">In any event, to create a new block, each transaction within a block may be assigned a hash value (i.e., an output of a cryptographic hash function, such as SHA-256 or MD5). These hash values may then be combined together utilizing data storage and cryptographic techniques (e.g., a Merkle Tree) to generate a hash value representative of the entire new block, and consequently the transactions stored in the block. This hash value may then be combined with the hash value of the previous block to form a hash value included in the header of the new block, thereby cryptographically linking the new block to the blockchain. To this end, the precise value utilized in the header of the new block may be dependent on the hash value for each transaction in the new block, as well as the hash value for each transaction in every prior block.</p><p id="p-0214" num="0213">According to certain aspects disclosed herein, information stored in blockchains can be trusted, because the hash value generated for the new block and a nonce value (an arbitrary number used once) are used as inputs into a cryptographic puzzle. The cryptographic puzzle may have a difficulty set by the nodes connected to the blockchain network, or the difficulty may be set by administrators of the blockchain network. In one example of the cryptographic puzzle, a solving node uses the hash value generated for the new block and repeatedly changes the value of the nonce until a solution for the puzzle is found. For example, finding the solution to the cryptographic puzzle may involve finding the nonce value that meets certain criteria (e.g., the nonce value begins with five zeros).</p><p id="p-0215" num="0214">When a solution to the cryptographic puzzle is found, the solving node publishes the solution and the other nodes then verify that the solution is valid. Since the solution depends on the particular hash values for each transaction within the blockchain, if the solving node attempted to modify any transaction stored in the blockchain, the solution would not be verified by the other nodes. More specifically, if a single node attempts to modify a prior transaction within the blockchain, a cascade of different hash values may be generated for each tier of the cryptographic combination technique. This results in the header for one or more blocks being different than the corresponding header(s) in every other node that did not make the exact same modification.</p><p id="p-0216" num="0215"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts an exemplary distributed ledger system <b>1200</b> for tracking effectiveness of an update to a vehicle feature. The system <b>1200</b> includes a shared effectiveness score ledger <b>1212</b> (which, in some embodiments, is the distributed ledger <b>1110</b> of the example of <figref idref="DRAWINGS">FIG. <b>11</b></figref>) and plurality of nodes <b>1202</b>, <b>1204</b>, <b>1206</b>, <b>1208</b>, and <b>1210</b>. Each node maintains a copy of the effectiveness score ledger <b>1212</b>. As changes are made to the effectiveness score ledger <b>1212</b>, each node receiving the change via network <b>1214</b> updates its respective copy of the effectiveness score ledger <b>1212</b>. A consensus mechanism may be used by the nodes <b>1202</b>-<b>1210</b> in the distributed ledger system <b>1200</b> to decide whether it is appropriate to make received changes to the effectiveness score ledger <b>1212</b>.</p><p id="p-0217" num="0216">Each node in the system therefore has its own copy of the effectiveness score ledger <b>1212</b>, which is identical to every other copy of the effectiveness score ledger <b>1212</b> stored by the other nodes. The distributed ledger system <b>1200</b> is more robust than a central authority database system because of the distributed ledger's decentralized nature. As such, there is no single point of failure on the distributed ledger system <b>1200</b> as there would be in a centralized system.</p><p id="p-0218" num="0217"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts an exemplary distributed ledger system <b>1300</b> in accordance with one aspect of the present disclosure. <figref idref="DRAWINGS">FIG. <b>13</b></figref> includes a distributed ledger <b>1302</b>, a block of transactions <b>1304</b>, a Merkle Tree <b>1306</b>, and a transaction <b>1308</b>. The Merkle Tree may cryptographically link transactions together. In some embodiments, the Merkle tree is a tree in which every node (e.g., &#x201c;leaf&#x201d;) is labelled with the cryptographic hash of a data block, and every node that is not a leaf (e.g., a &#x201c;branch,&#x201d; inner node, or inode) is labelled with the cryptographic hash of the labels of its child nodes. However, some embodiments do not use a Merkle tree; and any suitable method of organizing transactions in a block may be used. In some embodiments, the distributed ledger system <b>1300</b> includes a plurality of blocks connected together to form the distributed ledger <b>1302</b> (e.g., a chain of blocks of transactions).</p><p id="p-0219" num="0218">Each block of transactions <b>1304</b> may include at least one transaction <b>1308</b> (e.g., adding an effectiveness score). In other embodiments, each block of transactions <b>1304</b> has a size limit that necessarily limits the number of transactions that the block may store. Each block of transactions <b>1304</b> includes a reference to a previous block of transactions that was added to the distributed ledger <b>1302</b> prior to the block of transactions <b>1304</b> being added to the distributed ledger <b>1302</b>. As such, and as described above, each block of transactions <b>1304</b> is linked to every other block in the distributed ledger <b>1302</b>.</p><p id="p-0220" num="0219">In some embodiments, the block of transactions <b>1304</b> may organize the transactions it has received into a Merkle Tree <b>1306</b> to facilitate access to the stored transactions. The transactions may be hashed using a cryptographic hash algorithm (e.g., SHA-256 or MD5), and the hash of each transaction is stored in the tree. As the tree is constructed the hash of each adjacent node at the same level is hashed together to create a new node that exists at a higher level in the tree. Therefore, the root of the tree, or the node at the top of the tree, is dependent upon the hash of each transaction stored below in the tree. Each transaction <b>1308</b> may include a set of data <b>1310</b>. The set of data <b>1310</b> may include identifying data for the transaction, and transaction data, such as data identifying the nature of the transaction, data that is to be stored (e.g., the effectiveness score, etc.), etc.</p><heading id="h-0016" level="2">Exemplary Distributed Ledger Methods for Vehicle Updates</heading><p id="p-0221" num="0220">Broadly speaking, the distributed ledger <b>1110</b> may be used to track updates to vehicle features. To this end, <figref idref="DRAWINGS">FIG. <b>14</b></figref> shows an exemplary implementation <b>1400</b> of tracking vehicle updates. It may be noted that while the example implementation is described with reference to the update effectiveness computing device <b>702</b> performing many of the blocks, any suitable component (e.g., the computing device <b>102</b>, the VDR computing device <b>772</b>, the insurance company server <b>1140</b>, etc.) may perform any block. Furthermore, it should be understood that the implementation <b>1400</b> is an example, and other implementations may include additional, fewer, and/or alternate blocks/actions, such as those discussed elsewhere herein.</p><p id="p-0222" num="0221">The example implementation <b>1400</b> begins at block <b>1402</b> when the update effectiveness computing device <b>702</b> obtains vehicle data comprising a vehicle feature (e.g., from the VDR <b>740</b>). In some examples, the vehicle feature may be a safety feature, such as a forward collision warning system. However, the vehicle feature does not need to be a vehicle safety feature.</p><p id="p-0223" num="0222">At block <b>1404</b>, a distributed ledger (e.g., distributed ledger <b>1110</b>, effectiveness score ledger <b>1212</b>, distributed ledger <b>1302</b>, etc.) may be added to or constructed. In one example, a block including the vehicle feature, and the identification information identifying vehicles having the vehicle feature is added to the distributed ledger.</p><p id="p-0224" num="0223">At block <b>1406</b>, the update effectiveness computing device <b>702</b> may receive information indicating the update to the vehicle feature was sent to vehicles (e.g., vehicle <b>115</b>A) having the vehicle feature. The information may be received directly from the vehicles (e.g., vehicle <b>115</b>A, an application of a mobile device of a user of the vehicle <b>115</b>A, etc.), and/or any other source(s), such as the computing device <b>102</b>, the data source database <b>1150</b>, the VDR <b>740</b>, the insurance company database <b>1130</b>, the vehicle manufacturer database <b>1170</b>, etc. In some implementations, an owner of the vehicle first opts in (e.g., consents) to have information about the vehicle shared with other sources.</p><p id="p-0225" num="0224">At block <b>1408</b>, the update effectiveness computing device <b>702</b> (or any other entity) may determine vehicles that the update has been implemented in. For example, simply because an update was sent to a vehicle does not necessarily mean that the vehicle actually implemented the feature. In this regard, sometimes, it may not be readily apparent if an update has been implemented in a vehicle. For example, a company may push a software update to vehicle <b>115</b>A, but the user of the vehicle may have to then manually activate the update for the update to be implemented.</p><p id="p-0226" num="0225">In another example, a user may have to activate the feature that the update applies to. For instance, if the update is for a lane change assist feature, the update may only be implemented when the user is driving with the lane change assist feature activated. In another example, the feature may be a subscription to a service; for instance, a user may purchase a subscription for a period of time (e.g., a year) to a service (e.g., a hands-free driving service), but then allow the subscription to lapse at the end of a year. Therefore, there may be a start time and an end time to implementation of the feature that is subscription dependent. Thus, in some scenarios, it is useful to determine when a feature is actually being implemented in a vehicle.</p><p id="p-0227" num="0226">The determination (e.g., at block <b>1408</b>) may be made by any suitable technique. For example, the vehicles (e.g., vehicle <b>115</b>A, etc.) may send information indicating that they have implemented the feature. Additionally or alternatively, the vehicle manufacturer server <b>1180</b> may send information indicating that the feature has been implemented. Additionally or alternatively, applications of mobile devices of users of the vehicles may send indications indicating that the feature has been implemented.</p><p id="p-0228" num="0227">The determination of vehicles that have implemented the features may be useful to various entities, in particular the update effectiveness computing device <b>702</b> (e.g., for calculating the effectiveness score). In this regard, at block <b>1410</b>, the distributed ledger may be modified to include the effectiveness score. For example, a block including (i) the identification information identifying the vehicle having the vehicle feature, and/or (ii) an indication that the vehicle feature has been implemented in the vehicle may be added to the distributed ledger <b>1110</b>.</p><p id="p-0229" num="0228">Advantageously, this creates a convenient way to share the determination between different entities (e.g., the different entities of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). For example, in some embodiments, any entity (e.g., the vehicle manufacturer server <b>1180</b>, the insurance company server <b>1140</b>, the data source server <b>1160</b>, update effectiveness computing device <b>702</b>, etc.) may determine vehicles that the update has been implemented in, and then add this information to the distributed ledger <b>1110</b> so that it is easily accessed by the update effectiveness computing device <b>702</b> for calculating the effectiveness score. Another advantage is the robustness created by placing the determination on the distributed ledger <b>1110</b>; for example, all nodes will have a copy of the determination, so if one node fails, information of the determination will not be lost.</p><p id="p-0230" num="0229">Subscription information may also be useful to various entities, in particular the update effectiveness computing device <b>702</b> (e.g., for calculating the effectiveness score). In this regard, at block <b>1412</b>, the distributed ledger may be modified to include the effectiveness score. For example, a block including (i) the identification information identifying the vehicle having the vehicle feature, and/or (ii) subscription information may be added to the distributed ledger <b>1110</b>.</p><p id="p-0231" num="0230">The subscription information may include any kind of information. For example, the subscription information may include: a feature that the subscription is for; a start time of the subscription for the vehicle; a stop time of the subscription for the vehicle; purchase price of the subscription; information of updates to the feature; etc.</p><p id="p-0232" num="0231">Advantageously, adding such a block creates a convenient way to share the subscription information between different entities (e.g., the different entities of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). For example, in some embodiments, any entity (e.g., the vehicle manufacturer server <b>1180</b>, the insurance company server <b>1140</b>, the data source server <b>1160</b>, update effectiveness computing device <b>702</b>, etc.) may add the subscription information to the distributed ledger <b>1110</b> so that it is easily accessed by the update effectiveness computing device <b>702</b> for calculating the effectiveness score. Another advantage is the robustness created by placing the subscription information on the distributed ledger <b>1110</b>; for example, all nodes will have a copy of the subscription information, so if one node fails, the subscription information will not be lost.</p><p id="p-0233" num="0232">At block <b>1414</b>, the update effectiveness computing device <b>702</b> may obtain vehicle accident record information for the vehicles having the vehicle feature (e.g., from the vehicle record accident database <b>136</b>). The vehicle accident record information may include one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature. The severity of the accidents may indicate, among other things, whether the vehicle was a total loss. Additionally or alternatively, the vehicle record information may include information of a weather condition occurring during accidents, such as a rain condition, a wind condition, and/or a sunlight condition. In some embodiments, the accident record information includes insurance claims data.</p><p id="p-0234" num="0233">At block <b>1416</b>, the update effectiveness computing device <b>702</b> may construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature. The first dataset may be constructed by any suitable technique. In one example, the first dataset is all or part of the accident data (e.g., a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature) received (e.g., at block <b>1414</b>) for vehicles having the feature during the time period before the update was sent to or implemented in the vehicles. In another example, the first dataset may include only data that meets a particular condition. For instance, the first dataset may be constructed to be only data of accidents occurring during a weather condition (e.g., when it was raining). In another instance, the first dataset may be constructed to be only accidents occurring during a particular time of day (e.g., in the morning, at night, etc.).</p><p id="p-0235" num="0234">At block <b>1418</b>, the update effectiveness computing device <b>702</b> may construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature. The second dataset may be constructed by any suitable technique. In one example, the second dataset is all or part of the accident data (e.g., a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature) received (e.g., at block <b>1414</b>) for vehicles having the feature during the time period after the update was sent to or implemented in the vehicles.</p><p id="p-0236" num="0235">In another example, the second dataset may include only data that meets a particular condition. For instance, the second dataset may be constructed to be only data of accidents occurring during a weather condition (e.g., when it was raining). In another instance, the second dataset may be constructed to be only accidents occurring during a particular time of day (e.g., in the morning, at night, etc.).</p><p id="p-0237" num="0236">At block <b>1420</b>, the update effectiveness computing device <b>702</b> may calculate the effectiveness score of the update based upon both the first data set and the second dataset. The calculation may be made by any suitable technique. For example, the first and second datasets may be input into a trained machine learning algorithm (e.g., as in the example of <figref idref="DRAWINGS">FIG. <b>9</b></figref>). Examples of machine learning algorithms include neural networks, convolutional neural networks, random forests, etc. However, in some embodiments, the effectiveness score is calculated without using a machine learning algorithm. For instance, the effectiveness score may be calculated by using lookup tables, mathematical equations, etc. In some examples, calculating the effectiveness score comprises comparing the first dataset to the second dataset.</p><p id="p-0238" num="0237">In some embodiments, the calculation of the effectiveness score may be further based on the information of the weather condition occurring during the accidents. For example, vehicle accidents occurring during rain may impact the effectiveness score less than accidents not occurring during rain; furthermore, accidents occurring during sever weather (e.g., flood, tornado, etc.) may have even less of an impact on the effectiveness score than accidents occurring during rain.</p><p id="p-0239" num="0238">The effectiveness score may be useful to many different entities (e.g., vehicle manufacturers, insurance companies, etc.). In this regard, at block <b>1422</b>, the distributed ledger may be modified to include the effectiveness score. For example, a block may be added to the distributed ledger than includes the effectiveness score.</p><p id="p-0240" num="0239">Advantageously, this creates a convenient way to share the effectiveness score between different entities (e.g., the different entities of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). For example, in some embodiments, any entity (e.g., the vehicle manufacturer server <b>1180</b>, the insurance company server <b>1140</b>, etc.) that might desire to access the effectiveness score calculated by the update effectiveness computing device <b>702</b> can simply become a node on the distributed ledger <b>1110</b>. Another advantage is the immutability created by placing the effectiveness score on the distributed ledger <b>1110</b>; for example, one vehicle manufacturer may not sabotage (e.g., tarnish the reputation of) another vehicle manufacturer by altering the effectiveness score because of the immutability of the distributed ledger <b>1110</b>.</p><p id="p-0241" num="0240">In some embodiments, the calculated effectiveness score may be useful for vehicle manufacturers in determining future adjustments to make to features on their vehicles. For example, the vehicle feature may be a forward collision warning system, and the update may be make a sensitivity metric of the forward collision warning system more or less sensitive during a particular condition (e.g., rain, bright sunlight, darkness, etc.). In this example, the calculated effectiveness score may be useful for the vehicle manufacturer in determining future adjustments to make to the sensitivity metric.</p><p id="p-0242" num="0241">In this regard, it is advantageous for vehicle manufacturers and other entities to track adjustments to metrics of vehicle features. To this end, at block <b>1424</b>, a block may be added to the distributed ledger <b>1110</b> that includes an indication of an adjustment to a vehicle feature (e.g., an adjustment to the sensitivity metric, as in the example above).</p><p id="p-0243" num="0242">Advantageously, adding such a block creates a convenient way to share the indication of the adjustment between different entities (e.g., the different entities of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). For example, in some embodiments, any entity (e.g., the vehicle manufacturer server <b>1180</b>, the insurance company server <b>1140</b>, the data source server <b>1160</b>, update effectiveness computing device <b>702</b>, etc.) may add the indication of the adjustment to the distributed ledger <b>1110</b> so that it is easily accessed by other entities. Another advantage is the robustness created by placing the indication of the adjustment on the distributed ledger <b>1110</b>; for example, all nodes will have a copy of the indication of the adjustment, so if one node fails, the indication of the adjustment will not be lost.</p><p id="p-0244" num="0243">At block <b>1426</b>, the update effectiveness computing device <b>702</b> may receive insurance claims data. The insurance claims data may be received from any suitable source, such as the computer system of an insurance company, a third party aggregator, etc. In some examples, the data source database may be the database of an insurance company, and the data source server <b>760</b> may be the data source server of the insurance company. In some examples, the data source database may be the database of a third party aggregator, and the data source server <b>760</b> may be the data source server of the third party aggregator.</p><p id="p-0245" num="0244">The insurance claims data may include any kind of data. For example, the insurance claims data may include: accident information associated with the insurance claims, cost to repair the vehicle, whether the vehicle was a total loss, medical treatment information of a driver, cost of a medical treatment for a driver, driving conditions during an accident (e.g., weather conditions), year/make/model of a vehicle, feature information of the vehicle, age of the driver, gender of the driver, location of the accident, any of the information of a standardized build sheet (e.g., information from the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>), etc.</p><p id="p-0246" num="0245">At block <b>1428</b>, the update effectiveness computing device <b>702</b> may calculate an increase or decrease in insurance premiums for vehicles having implemented the update. The increase or decrease may be calculated based upon any suitable criteria, such as the insurance claims data, the effectiveness score, etc. In some examples, the increase or decrease is calculated based upon the age and/or gender of the driver (e.g., from the insurance claims data), and the effectiveness score.</p><p id="p-0247" num="0246">A block including the calculated increase or decrease may then be added to the distributed ledger <b>1110</b>. Advantageously, adding such a block creates a convenient way to share the indication of the calculated increase or decrease between different entities (e.g., the different entities of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). For example, in some embodiments, any entity (e.g., the insurance company server <b>1140</b>, etc.) may add the calculated increase or decrease to the distributed ledger <b>1110</b> so that it is easily accessed by other entities. Another advantage is the robustness created by placing the calculated increase or decrease on the distributed ledger <b>1110</b>; for example, all nodes will have a copy of the calculated increase or decrease, so if one node fails, the calculated increase or decrease will not be lost.</p><p id="p-0248" num="0247">At block <b>1430</b>, the update effectiveness computing device <b>702</b> may calculate (i) cost of insurance claims, (ii) amount of insurance claims, (iii) total loss frequency (e.g., that the vehicle is a total loss as a result of the accident), and/or (iv) accident severity for vehicles having implemented the update. In some examples, the calculation is made based upon (i) the insurance claims data, and/or (ii) the effectiveness score of the update. Such calculations may be useful for insurance companies or vehicle manufactures. For example, a calculation of an impact on an update for a vehicle feature on accident severity may be useful to insurance companies or vehicle manufactures.</p><p id="p-0249" num="0248">A block including the calculated impact may then be added to the distributed ledger <b>1110</b>. Advantageously, adding such a block creates a convenient way to share the indication of the calculated impact between different entities (e.g., the different entities of <figref idref="DRAWINGS">FIG. <b>11</b></figref>). For example, in some embodiments, any entity (e.g., the insurance company server <b>1140</b>, etc.) may add the calculated impact to the distributed ledger <b>1110</b> so that it is easily accessed by other entities. Another advantage is the robustness created by placing the calculated impact on the distributed ledger <b>1110</b>; for example, all nodes will have a copy of the calculated impact, so if one node fails, the calculated impact will not be lost.</p><p id="p-0250" num="0249">In some embodiments, a further advantage of the techniques described herein is that a complete or partial record for each vehicle is created (e.g., a &#x201c;living log&#x201d; of each vehicle is created). For example, the distributed ledger <b>1110</b> may include comprehensive information of each vehicle. In this regard, some embodiments use a vehicle identification number (VIN) to identify vehicles on the distributed ledger <b>1110</b>.</p><p id="p-0251" num="0250">Creating such a complete or partial record is especially advantageous in the situation where the vehicle is bought or sold. For example, a new owner of a vehicle may select subscriptions to different services than a previous owner. In this regard, the vehicle may have substantially different features when purchased by the new owner, and this may be advantageous for various entities to know. Moreover, the complete or partial record may be useful to prospective purchasers of the vehicle when they are making their determination of whether or not to buy the vehicle.</p><heading id="h-0017" level="2">Exemplary Distributed Ledger for Vehicle Updates</heading><p id="p-0252" num="0251">In one aspect, a computer implemented method for use in tracking effectiveness of an update to a vehicle feature using a distributed ledger may be provided. The method may be implemented via one or more local or remote processors, servers, transceivers, sensors, memory units, and/or other electrical or electronic components. In certain embodiments, the method may include: (1) obtaining, by one or more processors, vehicle data comprising: (i) a vehicle feature, and (ii) identification information identifying vehicles having the vehicle feature; (2) adding to or constructing, by the one or more processors, a distributed ledger including: (i) the vehicle feature, and (ii) the identification information identifying vehicles having the vehicle feature; (3) receiving, by the one or more processors, information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (4) obtaining, by the one or more processors, vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (5) constructing, by the one or more processors, a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (6) constructing, by the one or more processors, a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; (7) calculating, by the one or more processors, an effectiveness score of the update based on both the first data set and the second dataset; and/or (8) modifying, by the one or more processors, the distributed ledger to include the effectiveness score. The method may include additional, fewer, or alternate actions, including those discussed elsewhere herein.</p><p id="p-0253" num="0252">In some embodiments, the identification information identifying vehicles having the vehicle feature includes vehicle identification numbers (VINs) of the vehicles having the vehicle feature.</p><p id="p-0254" num="0253">In some embodiments, the modifying the distributed ledger includes adding new blocks to the distributed ledger; and each of the new blocks: (i) correspond to an individual vehicle having the vehicle feature, and (ii) include the effectiveness score.</p><p id="p-0255" num="0254">In some embodiments, the method further may include determining, by the one or more processors, that a vehicle having the vehicle feature has implemented the vehicle feature; and adding, by the one or more processors, to the distributed ledger, a block including: (i) the identification information identifying the vehicle having the vehicle feature, and/or (ii) an indication that the vehicle feature has been implemented in the vehicle.</p><p id="p-0256" num="0255">In some embodiments, the vehicle accident record information further may include subscription information including information of start times of a subscription to the vehicle feature, and the method further may include: determining, by the one or more processors, from the subscription information, that the vehicle feature is implemented at a start time for a particular vehicle having the subscription to the vehicle feature; and adding, by the one or more processors, to the distributed ledger, a block including: (i) the identification information identifying the particular vehicle having the vehicle feature, and/or (ii) the start time for the particular vehicle having the subscription to the vehicle feature.</p><p id="p-0257" num="0256">In some embodiments, the method further may include receiving, by the one or more processors, insurance claims data; calculating, by the one or more processors, an increase or decrease in insurance premiums for vehicles having implemented the update. The calculation may be based upon: (i) the insurance claims data, and (ii) the effectiveness score of the update; and adding, by the one or more processors, to the distributed ledger, blocks including the calculated increase or decrease in insurance premiums.</p><p id="p-0258" num="0257">In some embodiments, the vehicle feature may be a vehicle safety feature, and the method further may include adding, by the one or more processors, to the distributed ledger, blocks indicating an adjustment to a metric of the vehicle safety feature.</p><p id="p-0259" num="0258">In certain embodiments, the calculating the effectiveness score includes inputting the first dataset and the second dataset into a machine learning algorithm.</p><p id="p-0260" num="0259">In another aspect, a computer system for use in tracking effectiveness of an update to a vehicle feature using a distributed ledger may be provided. The computer system may include one or more local or remote processors, servers, transceivers, sensors, memory units, and/or other electrical or electronic components. In certain embodiments, the computer system may include one or more processors configured to: (1) obtain vehicle data comprising: (i) a vehicle feature, and (ii) identification information identifying vehicles having the vehicle feature; (2) add to or construct a distributed ledger including: (i) the vehicle feature, and (ii) the identification information identifying vehicles having the vehicle feature; (3) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (4) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (5) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (6) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; (7) calculate an effectiveness score of the update based on both the first data set and the second dataset; and/or (8) modify the distributed ledger to include the effectiveness score. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0261" num="0260">In some embodiments, the identification information identifying vehicles having the vehicle feature includes vehicle identification numbers (VINs) of the vehicles having the vehicle feature.</p><p id="p-0262" num="0261">In some embodiments, the modification of the distributed ledger may include adding new blocks to the distributed ledger; and each of the new blocks: (i) correspond to an individual vehicle having the vehicle feature, and (ii) include the effectiveness score.</p><p id="p-0263" num="0262">In some embodiments, the one or more processors are further configured to determine that a vehicle having the vehicle feature has implemented the vehicle feature; and add, to the distributed ledger, a block including: (i) the identification information identifying the vehicle having the vehicle feature, and/or (ii) an indication that the vehicle feature has been implemented in the vehicle.</p><p id="p-0264" num="0263">In some embodiments, the vehicle accident record information further includes subscription information including information of start times of a subscription to the vehicle feature, and the one or more processors are further configured to: determine, from the subscription information, that the vehicle feature is implemented at a start time for a particular vehicle having the subscription to the vehicle feature; and add, to the distributed ledger, a block including: (i) the identification information identifying the particular vehicle having the vehicle feature, and/or (ii) the start time for the particular vehicle having the subscription to the vehicle feature.</p><p id="p-0265" num="0264">In some embodiments, the one or more processors are further configured to: receive insurance claims data; calculate an increase or decrease in insurance premiums for vehicles having implemented the update, wherein the calculation is based upon: (i) the insurance claims data, and (ii) the effectiveness score of the update; and add, to the distributed ledger, blocks including the calculated increase or decrease in insurance premiums.</p><p id="p-0266" num="0265">In some embodiments, the vehicle feature may be a vehicle safety feature, and the one or more processors are further configured to: add, to the distributed ledger, blocks indicating an adjustment to a metric of the vehicle safety feature.</p><p id="p-0267" num="0266">In some embodiments, the calculation of the effectiveness score includes inputting the first dataset and the second dataset into a machine learning algorithm.</p><p id="p-0268" num="0267">In yet another aspect, a computer system for use in tracking effectiveness of an update to a vehicle feature using a distributed ledger may be provided. The computer system may include one or more local or remote processors, servers, transceivers, sensors, memory units, and/or other electrical or electronic components. In certain embodiments, the computer system may include one or more processors; and a non-transitory program memory communicatively coupled to the one or more processors and storing executable instructions that, when executed by the one or more processors, cause the computer system to: (1) obtain vehicle data comprising: (i) a vehicle feature, and/or (ii) identification information identifying vehicles having the vehicle feature; (2) add to or construct a distributed ledger including: (i) the vehicle feature, and/or (ii) the identification information identifying vehicles having the vehicle feature; (3) receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature; (4) obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature; (5) construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature; (6) construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; (7) calculate an effectiveness score of the update based on both the first data set and the second dataset; and/or (8) modify the distributed ledger to include the effectiveness score. The computer system may include additional, less, or alternate functionality, including that discussed elsewhere herein.</p><p id="p-0269" num="0268">In some embodiments, the identification information identifying vehicles having the vehicle feature includes vehicle identification numbers (VINs) of the vehicles having the vehicle feature.</p><p id="p-0270" num="0269">In some embodiments, the instructions, when executed by the one or more processors, cause the computer system to perform the modification of the distributed ledger by adding new blocks to the distributed ledger; and each of the new blocks: (i) correspond to an individual vehicle having the vehicle feature, and/or (ii) include the effectiveness score.</p><p id="p-0271" num="0270">In some embodiments, the instructions, when executed by the one or more processors, cause the computer system to: determine that a vehicle having the vehicle feature has implemented the vehicle feature; and add, to the distributed ledger, a block including: (i) the identification information identifying the vehicle having the vehicle feature, and/or (ii) an indication that the vehicle feature has been implemented in the vehicle.</p><heading id="h-0018" level="2">Additional Considerations</heading><p id="p-0272" num="0271">Although the foregoing text sets forth a detailed description of numerous different embodiments, it should be understood that the legal scope of the invention may be defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment, as describing every possible embodiment would be impractical, if not impossible. One could implement numerous alternate embodiments, using either current technology or technology developed after the filing date of this patent, which would still fall within the scope of the claims.</p><p id="p-0273" num="0272">Throughout this specification, plural instances may implement components, operations, or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations, one or more of the individual operations may be performed concurrently, and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the subject matter herein.</p><p id="p-0274" num="0273">Additionally, certain embodiments are described herein as including logic or a number of routines, subroutines, applications, or instructions. These may constitute either software (e.g., code embodied on a non-transitory, machine-readable medium) or hardware. In hardware, the routines, etc., are tangible units capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (e.g., a standalone, client or server computer system) or one or more hardware modules of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations as described herein.</p><p id="p-0275" num="0274">In various embodiments, a hardware module may be implemented mechanically or electronically. For example, a hardware module may comprise dedicated circuitry or logic that may be permanently configured (e.g., as a special-purpose processor, such as a field programmable gate array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations. A hardware module may also comprise programmable logic or circuitry (e.g., as encompassed within a general-purpose processor or other programmable processor) that may be temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software) may be driven by cost and time considerations.</p><p id="p-0276" num="0275">Accordingly, the term &#x201c;hardware module&#x201d; should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering embodiments in which hardware modules are temporarily configured (e.g., programmed), each of the hardware modules need not be configured or instantiated at any one instance in time. For example, where the hardware modules comprise a general-purpose processor configured using software, the general-purpose processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor, for example, to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.</p><p id="p-0277" num="0276">Hardware modules may provide information to, and receive information from, other hardware modules. Accordingly, the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware modules exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times, communications between such hardware modules may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example, one hardware module may perform an operation and store the output of that operation in a memory device to which it may be communicatively coupled. A further hardware module may then, at a later time, access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices, and may operate on a resource (e.g., a collection of information).</p><p id="p-0278" num="0277">The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented modules that operate to perform one or more operations or functions. The modules referred to herein may, in some example embodiments, comprise processor-implemented modules.</p><p id="p-0279" num="0278">Similarly, the methods or routines described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or more processors or processor-implemented hardware modules. The performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processor or processors may be located in a single location (e.g., within an office environment, or as a server farm), while in other embodiments the processors may be distributed across a number of locations.</p><p id="p-0280" num="0279">Unless specifically stated otherwise, discussions herein using words such as &#x201c;processing,&#x201d; &#x201c;computing,&#x201d; &#x201c;calculating,&#x201d; &#x201c;determining,&#x201d; &#x201c;presenting,&#x201d; &#x201c;displaying,&#x201d; or the like may refer to actions or processes of a machine (e.g., a computer) that manipulates or transforms data represented as physical (e.g., electronic, magnetic, or optical) quantities within one or more memories (e.g., volatile memory, non-volatile memory, or a combination thereof), registers, or other machine components that receive, store, transmit, or display information.</p><p id="p-0281" num="0280">As used herein any reference to &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; means that a particular element, feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. The appearances of the phrase &#x201c;in one embodiment&#x201d; in various places in the specification are not necessarily all referring to the same embodiment.</p><p id="p-0282" num="0281">As used herein, the terms &#x201c;comprises,&#x201d; &#x201c;comprising,&#x201d; &#x201c;may include,&#x201d; &#x201c;including,&#x201d; &#x201c;has,&#x201d; &#x201c;having&#x201d; or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. Further, unless expressly stated to the contrary, &#x201c;or&#x201d; refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).</p><p id="p-0283" num="0282">In addition, use of the &#x201c;a&#x201d; or &#x201c;an&#x201d; are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the description. This description, and the claims that follow, should be read to include one or at least one and the singular also may include the plural unless it is obvious that it is meant otherwise.</p><p id="p-0284" num="0283">This detailed description is to be construed as examples and does not describe every possible embodiment, as describing every possible embodiment would be impractical, if not impossible. One could implement numerous alternate embodiments, using either current technology or technology developed after the filing date of this application.</p><p id="p-0285" num="0284">The patent claims at the end of this patent application are not intended to be construed under 35 U.S.C. &#xa7; 112(f) unless traditional means-plus-function language is expressly recited, such as &#x201c;means for&#x201d; or &#x201c;step for&#x201d; language being explicitly recited in the claim(s). The systems and methods described herein are directed to an improvement to computer functionality, and improve the functioning of conventional computers.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method for use in determining effectiveness of an update to a vehicle feature, the method comprising:<claim-text>obtaining, by one or more processors, vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology;</claim-text><claim-text>receiving, by the one or more processors, information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature;</claim-text><claim-text>obtaining, by the one or more processors, vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature;</claim-text><claim-text>constructing, by the one or more processors, a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature;</claim-text><claim-text>constructing, by the one or more processors, a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and</claim-text><claim-text>calculating, by the one or more processors, an effectiveness score of the update based upon both the first data set and the second dataset.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the vehicle feature is a vehicle safety feature.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the vehicle feature is a forward collision warning system; and</claim-text><claim-text>the update to the vehicle feature makes a sensitivity metric of the forward collision warning system more sensitive.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the vehicle accident record information further includes information of a weather condition occurring during accidents; and</claim-text><claim-text>the calculation of the effectiveness score is further based on the information of the weather condition occurring during the accidents.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the weather condition comprises a rain condition, a wind condition, and/or a sunlight condition.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, by the one or more processors, vehicles that the update has been implemented in; and</claim-text><claim-text>wherein the first dataset is constructed from the data from the vehicles having the vehicle feature from before the update was implemented; and</claim-text><claim-text>wherein the second dataset is constructed from the data from the vehicles having the vehicle feature from after the update was implemented.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the vehicle accident record information further includes subscription information including information of a start time of a subscription to the vehicle feature, and the method further comprises:<claim-text>determining, by the one or more processors, that the vehicle feature is implemented at the start time of the subscription to the vehicle feature;</claim-text><claim-text>wherein the first dataset is constructed from the data from the vehicles having the vehicle feature from before the update was implemented; and</claim-text><claim-text>wherein the second dataset is constructed from the data from the vehicles having the vehicle feature from after the update was implemented.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the subscription information comprises information of a subscription to a hands-free driving feature.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the update to the vehicle feature comprises changes to button placement on a vehicle infotainment system.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving, by the one or more processors, insurance claims data; and</claim-text><claim-text>calculating, by the one or more processors, an increase or decrease in insurance premiums for vehicles having implemented the update, wherein the calculation is based upon: (i) the insurance claims data, and (ii) the effectiveness score of the update.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving, by the one or more processors, insurance claims data; and</claim-text><claim-text>calculating, by the one or more processors, an impact on: (i) cost of insurance claims, or (ii) amount of insurance claims for vehicles having implemented the update; and</claim-text><claim-text>wherein the calculation is based upon: (i) the insurance claims data, and (ii) the effectiveness score of the update.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information indicating the update to the vehicle is received from a vehicle manufacturer, a third party aggregator, an application of a computing device of vehicle operators, and/or the vehicle data repository.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the calculating the effectiveness score comprises comparing the first dataset to the second dataset.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the calculating the effectiveness score comprises inputting the first dataset and the second dataset into a machine learning algorithm.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer system for use in determining effectiveness of an update to a vehicle feature, the computer system comprising one or more processors configured to:<claim-text>obtain vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology;</claim-text><claim-text>receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature;</claim-text><claim-text>obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature;</claim-text><claim-text>construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature;</claim-text><claim-text>construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and</claim-text><claim-text>calculate an effectiveness score of the update based upon both the first data set and the second dataset.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the vehicle feature is a vehicle safety feature.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the one or more processors are further configured to:<claim-text>determine vehicles that the update has been implemented in; and</claim-text><claim-text>wherein the first dataset is constructed from: (i) the data from the vehicles having the vehicle feature from before the update was implemented, and (ii) the accident record information; and</claim-text><claim-text>wherein the second dataset is constructed from: (i) the data from the vehicles having the vehicle feature from after the update was implemented, and (ii) the accident record information.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. A computer system for use in determining effectiveness of an update to a vehicle feature, the system comprising:<claim-text>one or more processors; and</claim-text><claim-text>a non-transitory program memory communicatively coupled to the one or more processors and storing executable instructions that, when executed by the one or more processors, cause the computer system to:</claim-text><claim-text>obtain vehicle data from a vehicle data repository, the vehicle data comprising a vehicle feature, and the vehicle feature being stored in an original equipment manufacturer (OEM)-agnostic terminology;</claim-text><claim-text>receive information indicating an update to the vehicle feature was sent to vehicles having the vehicle feature;</claim-text><claim-text>obtain vehicle accident record information for the vehicles having the vehicle feature, wherein the vehicle accident record information includes one or more of a number of accidents, a frequency of accidents, or a severity of accidents associated with the vehicles having the vehicle feature;</claim-text><claim-text>construct a first dataset with data from before the update was sent to or implemented in the vehicles having the vehicle feature;</claim-text><claim-text>construct a second dataset with data from after the update was sent to or implemented in the vehicles having the vehicle feature; and</claim-text><claim-text>calculate an effectiveness score of the update based upon both the first data set and the second dataset.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the vehicle feature is a vehicle safety feature.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the instructions, when executed by the one or more processors, cause the computer system to:<claim-text>determine vehicles that the update has been implemented in; and</claim-text><claim-text>wherein the first dataset is constructed from: (i) the data from the vehicles having the vehicle feature from before the update was implemented, and (ii) the accident record information; and</claim-text><claim-text>wherein the second dataset is constructed from: (i) the data from the vehicles having the vehicle feature from after the update was implemented, and (ii) the accident record information.</claim-text></claim-text></claim></claims></us-patent-application>