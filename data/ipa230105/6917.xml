<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006918A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006918</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17364848</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>709</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>751</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>721</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>725</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>245</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>123</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>45</main-group><subgroup>308</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUTOMATIC LINK AGGREGATION FOR INCOMPATIBLE DATA PORTS ON A COMPUTER NETWORK</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Fortinet, Inc.</orgname><address><city>Sunnyvale</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Gorajala Chandra</last-name><first-name>Sekhar Sumanth</first-name><address><city>Fremont</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An aggregate port selection is received from user to bundle at least two individual data ports of the network device for single channel data transfer. The lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device is determined through an operating system. Downgraded physical capabilities of at least one of the at least two data ports are committed to match lowest common denominators of the at least two data ports. Data exchanges are conducted over the at least two ports of the network device according to LACP.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="193.89mm" wi="129.71mm" file="US20230006918A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="223.18mm" wi="131.74mm" file="US20230006918A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="147.74mm" wi="155.62mm" file="US20230006918A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="179.75mm" wi="100.75mm" file="US20230006918A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="174.07mm" wi="155.36mm" file="US20230006918A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="162.22mm" wi="165.18mm" file="US20230006918A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD OF THE INVENTION</heading><p id="p-0002" num="0001">The invention relates generally to computer devices and computer networking, and more specifically, for automatically configuring link aggregation of incompatible data ports on a computer network.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Link aggregation in computer networking is the combining of multiple network connections in parallel by any of several methods, and is also known as trunking, bundling, bonding, channeling or teaming, into a link aggregation group. These methods increase the throughput beyond what a single connection could sustain. Link aggregation also provides redundancy in case one of the links should fail.</p><p id="p-0004" num="0003">When two devices are connected using the IEEE 802.3ad communication protocol and configure link aggregation on the ports, the ports need to be the same speed and duplexed. In order to achieve this, manual steps are needed to configure the ports on the switch. For example, to configure link aggregation between any two ports (1 port is 1G and the other is 2.5G) with different link speed capabilities, manual change is needed for the speed on the switch port to 1G to make the config work as expected. This is time consuming and not zero touch provisioning.</p><p id="p-0005" num="0004">Therefore, what is needed is a robust technique for automatically configuring link aggregation of incompatible data ports network.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">These shortcomings are addressed by the present disclosure of methods, computer program products, and systems for automatically configuring link aggregation of incompatible data ports.</p><p id="p-0007" num="0006">In one embodiment, a data transfer between network devices is initiated. To do so, an aggregate port selection is received from user to bundle at least two individual data ports of the network device for single channel data transfer.</p><p id="p-0008" num="0007">In another embodiment, the lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device is determined through an operating system. Downgraded physical capabilities of at least one of the at least two data ports are committed to match lowest common denominators of the at least two data ports. Data exchanges are conducted over the at least two ports of the network device according to LACP.</p><p id="p-0009" num="0008">Advantageously, both network performance and computer hardware performance are improved with faster data transfer configuration.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0010" num="0009">In the following drawings, like reference numbers are used to refer to like elements. Although the following figures depict various examples of the invention, the invention is not limited to the examples depicted in the figures.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a high-level illustration of a system for automatically configuring link aggregation of incompatible data ports, according to an embodiment.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a more detailed illustration of a gateway device of the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, according to an embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a more detailed illustration of a link aggregation module of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, according to some embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a high-level flow diagram illustrating a method for data transfers using LACP, according to one preferred embodiment.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a more detailed flow diagram illustrating the step of automatically configuring link aggregation of incompatible data ports for the method of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, according to one embodiment.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is an example of a computing environment, according to an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">The description below provides methods, computer program products, and systems for automatically configuring link aggregation of incompatible data ports. One of ordinary skill in the art will recognize many additional variations made possible by the succinct description of techniques below.</p><p id="p-0018" num="0017">I. Systems for Automatic Link Aggregation for Incompatible Data Ports (<figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b></figref>)</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a high-level illustration of a system <b>100</b> for automatically configuring link aggregation of incompatible data ports, according to an embodiment. The system <b>100</b> includes, a gateway device <b>110</b>, a switch <b>120</b>, an access point <b>130</b> and a station <b>140</b>. Many other embodiments are possible, for example, more or fewer access points, more or fewer stations, and additional components, such as firewalls, routers and switches. The system <b>100</b> components can be located locally on a LAN or include remote cloud-based devices, and can be implemented in hardware, software, or a combination similar to the example of <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0020" num="0019">The components of the system <b>100</b> are coupled in communication over a network <b>199</b>. Preferably, the gateway device <b>110</b>, the switch <b>120</b> and the access point <b>130</b> are connected to the data communication system via hard wire. Other components, such as the station <b>140</b> are connected indirectly via wireless connection. The network <b>199</b> can be a data communication network such as the Internet, a WAN, a LAN, WLAN, a cellular network (e.g., 3G, 4G, 5G or 6G), or a hybrid of different types of networks. Various data protocols can dictate format for the data packets.</p><p id="p-0021" num="0020">Multiple parallel data lines are shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Data lines <b>101</b> represent a channel for digital data communication between the gateway device and the switch <b>120</b>. In this instance there are 2 data lines. Data lines <b>102</b> have 4 data lines between the switch <b>120</b> and the access point <b>130</b>. Communication hardware and software, such as transceivers, data encoders, data packetizers, and the like, enable functional operation of the data lines <b>101</b>, <b>102</b> for higher layer applications exchanging the data.</p><p id="p-0022" num="0021">In one embodiment, the gateway device <b>110</b> automatically configures data ports with the switch <b>120</b>. First, the network device <b>110</b> detects link aggregation is being selected between two ports, for example, when two ports are added to the members of link aggregation config. The link speed and duplex capabilities of the two ports are determined. In response, the network device <b>110</b> makes necessary changes to the configuration in the backend, such as configuring the ports to the same speed and duplex to support successful operation by committing the necessary changes.</p><p id="p-0023" num="0022">In other operations, the gateway device <b>110</b> can perform firewall duties to protect an enterprise network from external and internal threats (e.g., data packets flowing in and out and viruses running on internal devices). The gateway device <b>110</b> can be the FORTIgate device described below, implemented as a single device (see e.g., <figref idref="DRAWINGS">FIG. <b>6</b></figref>), as multiple cooperating devices, or as a virtual device. Additional embodiments of the gateway device <b>110</b> are shown below with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0024" num="0023">Similarly, the switch <b>120</b> automatically configures data ports with the access point <b>130</b>. These links can be distinct from links shared between the switch <b>120</b> and the gateway device <b>110</b>, including different link speeds and duplex capabilities. In operation, data can travel through a first LACP link (data line <b>101</b>) between the gateway device <b>110</b> and the switch <b>120</b>, and then be moved to a second LACP link (data line <b>102</b>) between the switch <b>120</b> and the access point <b>130</b>.</p><p id="p-0025" num="0024">The access point <b>130</b> provides security and operational state information for itself and connected stations. The station <b>140</b> can be upload state information via Wi-Fi. The station <b>140</b> can be a mobile client, for instance, a smartphone, a tablet computer, or a smart appliance.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a more detailed illustration of the gateway device <b>110</b> of the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The gateway device <b>110</b> includes a link aggregation module <b>210</b>, a network communication module <b>220</b>, a network policy module <b>230</b>, and a firewall module <b>240</b>, for example. Other network hardware can be similarly modified to include link aggregation modules for compatibility with the system <b>100</b>.</p><p id="p-0027" num="0026">In an embodiment, the network communication module <b>220</b> hosts a data exchange between the gateway device <b>110</b> and an outside device, such as the gateway device <b>110</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In response to initiation or preparation of the data exchange, the link aggregation module <b>210</b> optimizes budling of the data lines for the exchange, using the techniques described herein.</p><p id="p-0028" num="0027">More generally, the network policy module <b>230</b> can implement network policy from a gateway standpoint of the network. The firewall module <b>240</b> monitors network traffic and restricts certain network traffic. Various network policies and firework policies can be implemented for standard operations of the gateway device <b>110</b>.</p><p id="p-0029" num="0028">Returning to the link aggregation module <b>210</b>, more detail is shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The link aggregation module <b>210</b> of this example includes a bundle detector module <b>310</b>, a physical capabilities module <b>320</b>, a downgrading module <b>330</b>, a LACP (Link Aggregation Control Protocol) data exchange module <b>340</b> and a network communication module <b>350</b>. The modules can be implemented in source code stored in non-transitory memory executed by a processor. Alternatively, the modules can be implemented in hardware with microcode. The modules can be singular or representative of functionality spread over multiple components.</p><p id="p-0030" num="0029">The bundle detector module <b>310</b> receives aggregate port selection from user to bundle at least two individual data ports of the network device for single channel data transfer.</p><p id="p-0031" num="0030">The physical capabilities module <b>320</b> determines lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device through an operating system.</p><p id="p-0032" num="0031">The downgrading module <b>330</b> commits downgrading physical capabilities of at least one of the at least two data ports to match lowest common denominators of the at least two data ports.</p><p id="p-0033" num="0032">The LACP data exchange module <b>340</b> conducts data exchanges over the at least two ports of the network device according to LACP. More generally, LACP is an IEEE protocol to control bundling of several physical links to form a single logical link. LACP allows the gateway device <b>110</b> to negotiate an automatic bundling of links by sending LACP packets to their peer, a directly-connected device that also implements LACP. There can be 1 to 8 bundled ports per channel, although other standards and futures standards may vary and still be within the scope of the present disclosure. This bundled data transfer can provide higher throughput.</p><p id="p-0034" num="0033">II. Methods for Automatic Link Aggregation for Incompatible Data Ports (<figref idref="DRAWINGS">FIGS. <b>4</b>-<b>5</b></figref>)</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a high-level flow diagram illustrating a method for data transfers using LACP, according to one embodiment. The method <b>400</b> can be implemented, for example, by the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The steps are merely representative groupings of functionality, as there can be more or fewer steps, and the steps can be performed in different orders. Many other variations of the method <b>400</b> are possible.</p><p id="p-0036" num="0035">At step <b>410</b>, a data transfer is initiated between two network devices. At step <b>420</b>, links are automatically configured between incompatible data ports, as is described further in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. At step <b>430</b>, data exchanges are conducted over the at least two ports of the network device according to LACP.</p><p id="p-0037" num="0036">Turning to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, at step <b>510</b>, an aggregate port selection is received from user to bundle at least two individual data ports of the network device for single channel data transfer.</p><p id="p-0038" num="0037">At step <b>520</b>, the lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device through an operating system is determined.</p><p id="p-0039" num="0038">At step <b>530</b>, physical capabilities of at least one of the at least two data ports are downgraded committed to match lowest common denominators of the at least two data ports.</p><p id="p-0040" num="0039">III. Generic Computing Device (<figref idref="DRAWINGS">FIG. <b>6</b></figref>)</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example computing device <b>600</b> for use in the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, according to one embodiment. The computing device <b>600</b> is implementable for each of the components of the system <b>100</b> (e.g., the gateway device <b>110</b>, the switch <b>120</b>, the access point <b>130</b> and the station <b>140</b>). The computing device <b>600</b> can be a mobile computing device, a laptop device, a smartphone, a tablet device, a phablet device, a video game console, a personal computing device, a stationary computing device, a server blade, an Internet appliance, a virtual computing device, a distributed computing device, a cloud-based computing device, or any appropriate processor-driven device.</p><p id="p-0042" num="0041">The computing device <b>600</b>, of the present embodiment, includes a memory <b>610</b>, a processor <b>620</b>, a storage drive <b>630</b>, and an I/O port <b>640</b>. Each of the components is coupled for electronic communication via a bus <b>699</b>. Communication can be digital and/or analog and use any suitable protocol.</p><p id="p-0043" num="0042">The memory <b>610</b> further comprises network applications <b>612</b> and an operating system <b>614</b>. The network applications <b>612</b> can include a web browser, a mobile application, an application that uses networking, a remote application executing locally, a network protocol application, a network management application, a network routing application, or the like.</p><p id="p-0044" num="0043">The operating system <b>614</b> can be one of the Microsoft Windows&#xae; family of operating systems (e.g., Windows 96, 98, Me, Windows NT, Windows 2000, Windows XP, Windows XP x64 Edition, Windows Vista, Windows CE, Windows Mobile, Windows 6 or Windows 8), Linux, HP-UX, UNIX, Sun OS, Solaris, Mac OS X, Alpha OS, AIX, IRIX32, IRIX64, or Android. Other operating systems may be used. Microsoft Windows is a trademark of Microsoft Corporation.</p><p id="p-0045" num="0044">The processor <b>620</b> can be a network processor (e.g., optimized for IEEE 802.11, IEEE 802.11AC or IEEE 802.11AX), a general-purpose processor, an application-specific integrated circuit (ASIC), a field programmable gate array (FPGA), a reduced instruction set controller (RISC) processor, an integrated circuit, or the like. Qualcomm Atheros, Broadcom Corporation, and Marvell Semiconductors manufacture processors that are optimized for IEEE 802.11 devices. The processor <b>620</b> can be single core, multiple core, or include more than one processing elements. The processor <b>620</b> can be disposed on silicon or any other suitable material. The processor <b>620</b> can receive and execute instructions and data stored in the memory <b>610</b> or the storage drive <b>630</b>.</p><p id="p-0046" num="0045">The storage drive <b>630</b> can be any non-volatile type of storage such as a magnetic disc, EEPROM (electronically erasable programmable read-only memory), Flash, or the like. The storage drive <b>630</b> stores code and data for applications.</p><p id="p-0047" num="0046">The I/O port <b>640</b> further comprises a user interface <b>642</b> and a network interface <b>644</b>. The user interface <b>642</b> can output to a display device and receive input from, for example, a keyboard. The network interface <b>644</b> (e.g., an RF antennae) connects to a medium such as Ethernet or Wi-Fi for data input and output.</p><p id="p-0048" num="0047">Many of the functionalities described herein can be implemented with computer software, computer hardware, or a combination.</p><p id="p-0049" num="0048">Computer software products (e.g., non-transitory computer products storing source code) may be written in any of various suitable programming languages, such as C, C++, C#, Oracle&#xae; Java, JavaScript, PHP, Python, Perl, Ruby, AJAX, and Adobe&#xae; Flash&#xae;. The computer software product may be an independent application with data input and data display modules. Alternatively, the computer software products may be classes that are instantiated as distributed objects. The computer software products may also be component software such as Java Beans (from Sun Microsystems) or Enterprise Java Beans (EJB from Sun Microsystems). Some embodiments can be implemented with artificial intelligence.</p><p id="p-0050" num="0049">Furthermore, the computer that is running the previously mentioned computer software may be connected to a network and may interface with other computers using this network. The network may be on an intranet or the Internet, among others. The network may be a wired network (e.g., using copper), telephone network, packet network, an optical network (e.g., using optical fiber), or a wireless network, or any combination of these. For example, data and other information may be passed between the computer and components (or steps) of a system of the invention using a wireless network using a protocol such as Wi-Fi (IEEE standards 802.11, 802.11a, 802.11b, 802.11e, 802.11g, 802.11i, 802.11n, and 802.11ac, just to name a few examples). For example, signals from a computer may be transferred, at least in part, wirelessly to components or other computers.</p><p id="p-0051" num="0050">In an embodiment, with a Web browser executing on a computer workstation system, a user accesses a system on the World Wide Web (WWW) through a network such as the Internet. The Web browser is used to download web pages or other content in various formats including HTML, XML, text, PDF, and postscript, and may be used to upload information to other parts of the system. The Web browser may use uniform resource identifiers (URLs) to identify resources on the Web and hypertext transfer protocol (HTTP) in transferring files on the Web.</p><p id="p-0052" num="0051">The phrase &#x201c;network appliance&#x201d; generally refers to a specialized or dedicated device for use on a network in virtual or physical form. Some network appliances are implemented as general-purpose computers with appropriate software configured for the particular functions to be provided by the network appliance; others include custom hardware (e.g., one or more custom Application Specific Integrated Circuits (ASICs)). Examples of functionality that may be provided by a network appliance include, but is not limited to, layer 2/3 routing, content inspection, content filtering, firewall, traffic shaping, application control, Voice over Internet Protocol (VoIP) support, Virtual Private Networking (VPN), IP security (IPSec), Secure Sockets Layer (SSL), antivirus, intrusion detection, intrusion prevention, Web content filtering, spyware prevention and anti-spam. Examples of network appliances include, but are not limited to, network gateways and network security appliances (e.g., FORTIGATE family of network security appliances and FORTICARRIER family of consolidated security appliances), messaging security appliances (e.g., FORTIMAIL family of messaging security appliances), database security and/or compliance appliances (e.g., FORTIDB database security and compliance appliance), web application firewall appliances (e.g., FORTIWEB family of web application firewall appliances), application acceleration appliances, server load balancing appliances (e.g., FORTIBALANCER family of application delivery controllers), vulnerability management appliances (e.g., FORTISCAN family of vulnerability management appliances), configuration, provisioning, update and/or management appliances (e.g., FORTIMANAGER family of management appliances), logging, analyzing and/or reporting appliances (e.g., FORTIANALYZER family of network security reporting appliances), bypass appliances (e.g., FORTIBRIDGE family of bypass appliances), Domain Name Server (DNS) appliances (e.g., FORTIDNS family of DNS appliances), wireless security appliances (e.g., FORTIWIFI family of wireless security gateways), FORIDDOS, wireless access point appliances (e.g., FORTIAP wireless access points), switches (e.g., FORTISWITCH family of switches) and IP-PBX phone system appliances (e.g., FORTIVOICE family of IP-PBX phone systems).</p><p id="p-0053" num="0052">This description of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form described, and many modifications and variations are possible in light of the teaching above. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications. This description will enable others skilled in the art to best utilize and practice the invention in various embodiments and with various modifications as are suited to a particular use. The scope of the invention is defined by the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A network device on an enterprise network that connects with a plurality of peripheral network devices on the enterprise network for data transfers, for automatically configuring link aggregation of incompatible data ports, the network device comprising:<claim-text>a processor;</claim-text><claim-text>a network interface communicatively coupled to the processor and to the enterprise network; and</claim-text><claim-text>a memory, storing source code executed by the processor and comprising:<claim-text>a first module to receive an aggregate port selection from user to bundle at least two individual data ports of the network device for single channel data transfer;</claim-text><claim-text>a second module to determine lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device through an operating system;</claim-text><claim-text>a third module to commit downgrading physical capabilities of at least one of the at least two data ports to match lowest common denominators of the at least two data ports; and</claim-text><claim-text>a fourth module to conduct data exchanges over the at least two ports of the network device according to LACP (Link Aggregation Control Protocol), wherein configuration messages are sent to a destination device, compatible with LACP, to negotiate the data transfer including configuration of the at least two data ports.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the third module commits downgrading physical capabilities of at least one of the at least two data ports to match lowest common denominators of the at least two data ports by gaining access to session terminal and API call from OS to switching module in MAC card which controls physical port.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second module determines lowest common denominators of physical capabilities, based on speed and duplex, of selected ports on the network device through an operating system.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a cloud vulnerability server provides a software as a service to the network device and a plurality of other subscribers associated with different enterprise networks.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the network device comprises a firewall device.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the network device comprises a Wi-Fi controller device.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A computer-implemented method in a network device on an enterprise network that connects with a plurality of peripheral network devices on the enterprise network for data transfers, for automatically configuring link aggregation of incompatible data ports, the method comprising the steps of:<claim-text>receiving an aggregate port selection from user to bundle at least two individual data ports of the network device for single channel data transfer;</claim-text><claim-text>determining lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device through an operating system;</claim-text><claim-text>committing downgrading physical capabilities of at least one of the at least two data ports to match lowest common denominators of the at least two data ports; and</claim-text><claim-text>conducting data exchanges over the at least two ports of the network device according to LACP (Link Aggregation Control Protocol), wherein configuration messages are sent to a destination device, compatible with LACP, to negotiate the data transfer including configuration of the at least two data ports.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A non-transitory computer-readable media in a network device on an enterprise network that connects with a plurality of peripheral network devices on the enterprise network for data transfers, when executed by a processor, for automatically configuring link aggregation of incompatible data ports, the method comprising the steps of:<claim-text>receiving an aggregate port selection from user to bundle at least two individual data ports of the network device for single channel data transfer;</claim-text><claim-text>determining lowest common denominators of physical capabilities (speed and duplex) of selected ports on the network device through an operating system;</claim-text><claim-text>committing downgrading physical capabilities of at least one of the at least two data ports to match lowest common denominators of the at least two data ports; and</claim-text><claim-text>conducting data exchanges over the at least two ports of the network device according to LACP (Link Aggregation Control Protocol), wherein configuration messages are sent to a destination device, compatible with LACP, to negotiate the data transfer including configuration of the at least two data ports.</claim-text></claim-text></claim></claims></us-patent-application>