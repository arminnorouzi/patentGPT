<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006892A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006892</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940747</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>14</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>147</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>47</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>205</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>145</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>147</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>12</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>43</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>47</main-group><subgroup>621</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>205</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR ZERO-FOOTPRINT LARGE-SCALE USER-ENTITY BEHAVIOR MODELING</invention-title><us-related-documents><division><relation><parent-doc><document-id><country>US</country><doc-number>16033127</doc-number><date>20180711</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11509540</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17940747</doc-number></document-id></child-doc></relation></division><us-provisional-application><document-id><country>US</country><doc-number>62598632</doc-number><date>20171214</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Extreme Networks, Inc.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>BERNARDI</last-name><first-name>Giacomo</first-name><address><city>London</city><country>GB</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Nispel</last-name><first-name>Markus</first-name><address><city>Boston</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Extreme Networks, Inc.</orgname><role>02</role><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods are disclosed herein for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model. To this end, control circuitry may determine a respective network endpoint, of a plurality of network endpoints, to which each respective record of a plurality of received records corresponds. The control circuitry then may assign a dedicated queue for each respective network endpoint, and transmit, to each dedicated queue, each record that corresponds to the respective network endpoint to which the respective dedicated queue is assigned. The control circuitry may then determine, for each respective network endpoint, a respective behavior model, and may store each respective behavior model to memory.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="95.42mm" wi="158.75mm" file="US20230006892A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="235.63mm" wi="148.08mm" orientation="landscape" file="US20230006892A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="229.62mm" wi="95.33mm" orientation="landscape" file="US20230006892A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="224.11mm" wi="115.99mm" file="US20230006892A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="232.75mm" wi="165.02mm" file="US20230006892A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="178.82mm" wi="133.86mm" file="US20230006892A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="125.05mm" wi="175.09mm" file="US20230006892A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="198.63mm" wi="143.43mm" file="US20230006892A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="192.87mm" wi="168.83mm" file="US20230006892A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="238.84mm" wi="171.11mm" orientation="landscape" file="US20230006892A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="207.18mm" wi="168.91mm" file="US20230006892A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a divisional of U.S. application Ser. No. 16/033,127, filed Jul. 11, 2018, which claims the benefit of U.S. Provisional Application No. 62/598,632, filed Dec. 14, 2017, the disclosures of which are hereby incorporated by reference herein in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Traditionally, using a central server to monitor network behavior of many network end point devices requires storing myriad records of network flows for analysis. For example, existing systems require storage of Netflow and Internet Protocol Flow Information Export (&#x201c;IPFIX&#x201d;) records, Hypertext Transfer Protocol (&#x201c;HTTP&#x201d;) proxy logs, and the like, in a &#x201c;big data&#x201d; backend for subsequent processing. This involves great expense, as storing these records requires use of large amounts of storage space, amounting to many terabytes, and real estate to house the storage space (i.e., the &#x201c;big data&#x201d; facilities) is similarly expensive. This problem is exacerbated by the proliferation of gadgets and other devices becoming network-connected (e.g., Internet-of-Things devices), which multiplies the amount of network endpoints to be monitored, making it impractical to store network flows for all network devices for the purpose of behavior monitoring.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">Systems and methods are disclosed herein for monitoring behavior of network endpoints without a need for a &#x201c;big data&#x201d; storage backend. Specifically, the systems and methods disclosed herein reduce the records of network flows to vectors, thus enabling the system to save behavior models of millions of network endpoints, or more, using only a small amount of storage (e.g., a few gigabytes of storage).</p><p id="p-0005" num="0004">In some aspects of the disclosure, control circuitry receives a plurality of records, each respective record of the plurality of records corresponding to a respective network endpoint of the plurality of network endpoints. Each respective record may identify a respective single network flow originating from the respective network endpoint that corresponds to the respective record. The control circuitry may determine a respective network endpoint, of a plurality of network endpoints, to which each respective record of the plurality of records corresponds.</p><p id="p-0006" num="0005">The control circuitry may assign a respective dedicated queue for each respective network endpoint. For example, the control circuitry may dedicate a single first-in-first-out (&#x201c;FIFO&#x201d;) queue for all records originating from a given network endpoint. The control circuitry may then transmit, to each respective dedicated queue, each record of the plurality of records that corresponds to the respective network endpoint to which the respective dedicated queue is assigned.</p><p id="p-0007" num="0006">The control circuitry may determine, for each respective network endpoint, based on each record of each respective dedicated queue corresponding to each respective network endpoint, a respective behavior model, and may store each respective behavior model to memory. In some embodiments, the control circuitry, when determining the respective behavior model, may identify a plurality of modules programmed to determine behavior models, and may identify a module of the plurality of modules that is idle. The control circuitry may command the idle module to determine the respective behavior model. The module may be a software instantiation of an algorithm for determining a behavior model based on the records of a given queue.</p><p id="p-0008" num="0007">In some embodiments, the control circuitry, when determining the respective behavior model, encodes data of the set of respective records as a multi-dimensional vector of floating point values. The control circuitry may determine whether a given multi-dimensional vector represents abnormal behavior for a given respective network endpoint. In response to determining that the given multi-dimensional vector represents abnormal behavior for the given respective network endpoint, the control circuitry may alert a network administrator or perform a set of predefined actions.</p><p id="p-0009" num="0008">The control circuitry, when encoding the data of each respective record within the respective dedicated queues, may extract respective data from a respective field of each respective single network flow, concatenate the respective data into a string, and convert the string into a vector. Each respective data point may form a point in the vector. The control circuitry may use the vector as the respective behavior model.</p><p id="p-0010" num="0009">The control circuitry, when converting the string into the vector, may form a document with the string. The control circuitry may then feed the document into a word/document embedding algorithm (e.g., Document to Vector (&#x201c;doc2vec&#x201d;), FastText, and the like), and, using the doc2vec algorithm, may analyze the document using a shallow neural network. The control circuitry may then output, based on the analyzing, the vector.</p><p id="p-0011" num="0010">In some embodiments, the plurality of records is of a first data size, where a sum of a data size of each respective behavior model is of a second data size, and where the second data size is two or more orders of magnitude smaller than the first data size. For example, while the plurality of records may amount to hundreds of terabytes of data, the vectors, taken together, that represent the records, may amount to a few gigabytes of data.</p><p id="p-0012" num="0011">In some embodiments, the control circuitry may receive a command from a network administrator to view a respective behavior model for a given network endpoint. In response to receiving the command, the control circuitry may generate for display a graphical representation of the respective behavior model for the given network endpoint. Furthermore, the control circuitry may determine a different network endpoint that has a respective behavior model showing similar behavior to behavior of the given network endpoint, and may generate for simultaneous display with the graphical representation of the respective behavior model for the given network endpoint, the respective behavior model for the different network endpoint.</p><p id="p-0013" num="0012">In some aspects, systems and methods are enclosed for reducing storage space used in tracking behavior of a plurality of network endpoints by using a hash table and modeling the behavior with a behavior model. Control circuitry may receive a plurality of records, each respective record of the plurality of records corresponding to a respective network endpoint of the plurality of network endpoints. Control circuitry may determine the respective network endpoint, of a plurality of network endpoints, to which each respective record of the plurality of records corresponds, and may encode each respective record into respective words.</p><p id="p-0014" num="0013">In some embodiments, the control circuitry assigns, for each respective record, a respective block to a respective hash table, and adds, to respective linked list records for each respective block, the respective words corresponding to each network endpoint corresponding to each respective block. The control circuitry determines, for each respective network endpoint, based on each respective linked list for each respective block, a respective behavior model, and stores each respective behavior model to memory.</p><p id="p-0015" num="0014">The control circuitry, when assigning, for each respective record, a respective block to a respective hash table, may monitor the plurality of records for a record corresponding to an unknown network endpoint. In response to detecting, from the monitoring, an unknown network endpoint, the control circuitry may add a block corresponding to the unknown network endpoint to the hash table.</p><p id="p-0016" num="0015">In some embodiments, the control circuitry may determine, for each respective network endpoint, based on each respective linked list for each respective block, a respective behavior model in response to detecting a threshold amount of words have accumulated for a given respective network endpoint. In some embodiments, the control circuitry, when determining for each respective network endpoint, based on each respective linked list for each respective block, a respective behavior model, may feed the hash table through a word/document embedding algorithm (such as the FastText algorithm).</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0017" num="0016">The above and other objects and advantages of the disclosure will be apparent upon consideration of the following detailed description, taken in conjunction with the accompanying drawings, in which like reference characters refer to like parts throughout, and in which:</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a system for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model, in accordance with some embodiments of the disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an example document, comprising flow words corresponding to a given network endpoint, in accordance with some embodiments of the disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an illustrative two-dimensional projection of a higher-dimensionality vector space, in accordance with some embodiments of the disclosure;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an illustrative depiction of a projection on 3D space of multiple endpoint vectors, in accordance with some embodiments of the disclosure.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an illustrative flowchart of a process for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model, in accordance with some embodiments of the disclosure;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an illustrative flowchart for a process for determining a respective behavior module, in accordance with some embodiments of the disclosure;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an illustrative flowchart for a process for alerting a network administrator of anomalous network endpoint behavior, in accordance with some embodiments of the disclosure;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an illustrative flowchart of a process for generating a vector that models endpoint device behavior using a word/document embedding algorithm, in accordance with some embodiments of the disclosure;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts an illustrative flowchart of a process for generating for display a visual representation of a behavior model, in accordance with some embodiments of the disclosure;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts a system for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model using a hash table, in accordance with some embodiments of the disclosure; and</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>11</b></figref> depicts an illustrative flowchart of a process for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model using a hash table, in accordance with some embodiments of the disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a system for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model, in accordance with some embodiments of the disclosure. As depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, server <b>100</b> is used to model behavior of network endpoints of network <b>110</b>, such as network endpoint <b>112</b> and network endpoint <b>114</b>. While server <b>100</b> is depicted as one server including several components, this is merely for convenience; the components of server <b>100</b> may be distributed across multiple servers and databases. As used herein, a network endpoint may be any end device, such as a consumer electronics device (e.g., smartphone, personal computer, etc.), an Internet-of-Things device, or any other user-facing device that is connected to network <b>110</b>.</p><p id="p-0030" num="0029">Control circuitry <b>102</b> of server <b>100</b> receives records from network endpoints of network <b>110</b> (e.g., network device <b>112</b> and network device <b>114</b>) by way of communications circuitry <b>120</b>. Communications circuitry <b>120</b> may be any known receiver, transmitter, transceiver, or any other known means of transmitting and/or receiving data. As used herein, the term &#x201c;record&#x201d; may refer to logs of network activities. Examples of records are Netflow records, IPFIX records, HTTP proxy logs, and the like. In some embodiments, each record identifies a single network flow. In some embodiments, control circuitry <b>102</b> may augment the records to include extra metadata, such as an application identifier, HTTP/HTTPs (HTTP Secure) header values, Transport Layer Security (&#x201c;TLS&#x201d;) certificate details, and the like. Control circuitry <b>102</b> may augment the records through a fingerprinting process, and/or can perform this augmentation by ingesting bidirectional IPFIX records.</p><p id="p-0031" num="0030">The records may be received at buffer <b>130</b>. Control circuitry <b>102</b> may determine to which network endpoint each record corresponds. For example, control circuitry <b>102</b> may differentiate records that correspond to network endpoint <b>112</b> from records that correspond to network endpoint <b>114</b>. Control circuitry <b>102</b> may then designate a different queue for each network endpoint, such that records corresponding to each different network endpoint are transmitted from buffer <b>130</b> to a designated queue of queues <b>140</b>. As depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, records corresponding to network endpoint <b>112</b> may be transmitted to queue <b>142</b>, and records corresponding to network endpoint <b>114</b> may be transmitted to queue <b>144</b>. Control circuitry <b>102</b> may instantiate as many queues n as is necessary to use a dedicated queue for each network endpoint for which records are received. In some embodiments, queues <b>140</b> are FIFO queues. In other embodiments, queues <b>140</b> may be any form of queue.</p><p id="p-0032" num="0031">In some embodiments, control circuitry <b>102</b> schedules processing of the records in queues <b>140</b>, where processing is performed by modules <b>150</b>. Modules <b>150</b> are not dedicated to a given queue. As an example, queue <b>144</b> may be assigned to module <b>152</b> for processing, as depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. When any of modules <b>154</b> completes processing of the records from a given queue, the modules <b>154</b> revert to an idle state.</p><p id="p-0033" num="0032">In some embodiments, control circuitry <b>102</b> identifies idle modules, and commands each idle module to process records from a specific queue. In selecting to which queue of queues <b>150</b> an idle module should be assigned, control circuitry may determine which queues are overflowing in size by determining which queues have a number of records that exceed a threshold. In some embodiments, the threshold is configured by a network administrator. In some embodiments, the threshold is a default value. Control circuitry <b>102</b> may prioritize queues that have a number of records that exceed the threshold by assigning idle modules to those queues first. Control circuitry may assign remaining idle modules based on any known load balancing scheme (e.g., based on which queues have the most records), or arbitrarily.</p><p id="p-0034" num="0033">In some embodiments, modules <b>150</b> generate a behavior model as a result of processing the records of a given queue of queues <b>140</b>. A given module (e.g., module <b>154</b>) may generate the behavior model by encoding data of the records into a multi-dimensional vector. In some embodiments, in order to encode the data, control circuitry <b>102</b> instructs a module of module <b>150</b> (e.g., module <b>152</b>) to extract data from a subset of fields of records of a given queue (e.g., queue <b>144</b>). Control circuitry <b>102</b> instructs the module (e.g., module <b>152</b>) to generate a string from the extracted data (the string is also referred to as a &#x201c;flow word&#x201d; herein). Control circuitry <b>202</b> may then concatenate the &#x201c;flow words&#x201d; derived from the queue to form a document.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts an example document, comprising flow words corresponding to a given network endpoint, in accordance with some embodiments of the disclosure. The aforementioned flow words are each separated by a space, or underscore, in document <b>202</b>. Each flow word has known meanings mapped in storage at server <b>100</b> (e.g., at storage circuitry <b>160</b>). Exemplary meanings <b>204</b> are described in reference to each flow word of document <b>202</b>, and are self-explanatory. The flow words fields shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> are merely illustrative; any set of applicable fields may be used.</p><p id="p-0036" num="0035">After forming a document, control circuitry <b>102</b> feeds the document into a doc2vec algorithm. Doc2vec algorithms are described in detail in a publication entitled &#x201c;Distributed Representations of Sentences and Documents&#x201d;, authored by Le and Mikolov, and published in 2014, the disclosure of which is hereby incorporated by reference herein in its entity. Doc2vec is based on the word2vec algorithm, which is described in a publication entitled &#x201c;Efficient Estimation of Word Representations in Vector Space,&#x201d; authored by Mikolov, Chen, Corrado, and Dean, and published in 2013, the disclosure of which is hereby incorporated by reference herein in its entity. Word2vec is further described in U.S. Pat. No. 9,037,464, issued on May 19, 2015, the disclosure of which is hereby incorporated by reference herein in its entirety.</p><p id="p-0037" num="0036">In brief, when control circuitry <b>102</b> feeds the document into the doc2vec algorithm, control circuitry <b>102</b> uses a shallow neural network to generate a vector encoding for each word that appears in a given document, and for the document itself. As described in the aforementioned publications that describe doc2vec and word2vec algorithms, in one embodiment of the disclosure, control circuitry <b>102</b> implements a &#x201c;Paragraph Vector&#x2014;Distributed Bag of Words&#x201d; formulation of the doc2vec algorithm. This entails control circuitry <b>102</b> implementing a sliding window (e.g., of a configurable or default size) iterating over the document by selecting a subset of words of the document. Control circuitry <b>102</b> then applies a stochastic gradient descent to compute weights and biases that best fit the shallow neural network in predicting a target identifier for the endpoint. Control circuitry <b>102</b> then averages the set of weights for each word to compose a vector that represents the network endpoint to which the document corresponds. The endpoint vector may be represented as an array of floating point values. In some embodiments, the vector is formed of three-hundred to five-hundred floating point values.</p><p id="p-0038" num="0037">Control circuitry <b>102</b> causes each vector to be stored to memory, by storage circuitry <b>160</b>. Moreover, as described above, because the vectors are limited in size, behavior modeling is possible without use of a &#x201c;big data&#x201d; facility. There are additional advantages to avoiding storing the records themselves. Namely, these records often include sensitive private information about users (e.g., personally-identifying information, financial information, and the like). Thus, if these records are inappropriately accessed (e.g., through a hacking or malware operation), legal and privacy issues may arise. The storage of a vector, as disclosed herein, rather than storing the records themselves, avoids these risks by avoiding storing such sensitive information, while still maintaining the ability to monitor the behavior of the network endpoint.</p><p id="p-0039" num="0038">Storage circuitry <b>160</b> may be any media capable of storing data. The computer readable media may be transitory, including, but not limited to, propagating electrical or electromagnetic signals, or may be non-transitory including, but not limited to, volatile and non-volatile computer memory or storage devices such as a hard disk, floppy disk, USB drive, DVD, CD, media cards, register memory, processor caches, Random Access Memory (&#x201c;RAM&#x201d;), etc. Control circuitry <b>102</b> may be based on any suitable processing circuitry, such as one or more microprocessors, microcontrollers, digital signal processors, programmable logic devices, field-programmable gate arrays (FPGAs), application-specific integrated circuits (ASICs), etc., and may include a multi-core processor (e.g., dual-core, quad-core, hexa-core, or any suitable number of cores) or supercomputer. In some embodiments, processing circuitry may be distributed across multiple separate processors or processing units, for example, multiple of the same type of processing units (e.g., two Intel Core i7 processors) or multiple different processors (e.g., an Intel Core i5 processor and an Intel Core i7 processor). In some embodiments, control circuitry <b>102</b> executes instructions stored in memory (i.e., storage circuitry <b>160</b>).</p><p id="p-0040" num="0039">Following storage of an endpoint vector, control circuitry <b>102</b> may receive a request from a network administrator to view a given endpoint vector. Control circuitry <b>102</b> may respond to such a request by using Application Program Interface (&#x201c;API&#x201d;) <b>170</b> to output a visual depiction of a behavior model.</p><p id="p-0041" num="0040">In some embodiments, control circuitry <b>102</b> may track behavior of the network endpoint over time. For example, by performing a word/document embedding computation (e.g., Doc2Vec or FastText) for a given network endpoint periodically over time, control circuitry <b>102</b> may identify recurring patterns of the endpoint. Differences in network behavior would be indicated by a movement of a resulting vector from subsequent computations to a different position in multidimensional space. Control circuitry <b>102</b> may implement Kalman filters to track the point position over time, or derive a multivariate Gaussian distribution to determine the probability of the point corresponding to the network endpoint's behavior being in a given position of the multidimensional space, or use a recursive neural network to learn behavior change over time. Control circuitry <b>102</b> may determine, if the point is located in a region of low probability value, that the network endpoint is engaged in anomalous behavior, and may alert a network administrator of the anomaly.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an illustrative two-dimensional projection of a higher-dimensionality vector space, in accordance with some embodiments of the disclosure. The concentric ovals depicted in vector space <b>300</b> each correspond to a different probability value of where a network administrator would expect a given network endpoint to be. Point <b>302</b>, marked with the character &#x201c;A&#x201d;, illustrates a location that control circuitry <b>102</b> would deem to be a normal behavior for the endpoint. If, however, control circuitry <b>102</b> determines that the location described by the endpoint vector moves to point <b>306</b>, marked with &#x201c;A&#x2032;&#x201d;, control circuitry <b>102</b> may alert a network administrator of anomalous behavior. Control circuitry <b>102</b> may determine to issue the alert based on point <b>306</b> being outside of the boundaries of normalcy threshold <b>304</b>, which may be configured by a network administrator, or may be a default value.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an illustrative depiction of a projection on 3D space of multiple endpoint vectors, in accordance with some embodiments of the disclosure. In some embodiments, a network administrator may request to view a typical behavior of endpoints in large and heterogeneous networks, in order to identify clusters of endpoints with similar behavior and to quantify their population. Control circuitry <b>102</b>, receiving such a request, may use API <b>170</b> to output a visualization of such a 3D space, e.g., by depicting cluster <b>402</b>, cluster <b>404</b>, cluster <b>406</b>, and cluster <b>408</b>. Each of these clusters are depicted closely to one another due to their having similar network behaviors.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an illustrative flowchart of a process for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model, in accordance with some embodiments of the disclosure. Process <b>500</b> begins at <b>502</b>, where control circuitry (e.g., control circuitry <b>102</b> of server <b>100</b>) receives a plurality of records, each respective record of the plurality of records corresponding to a respective network endpoint of the plurality of network endpoints.</p><p id="p-0045" num="0044">Process <b>500</b> continues to <b>504</b>, where control circuitry <b>102</b> determines the respective network endpoint, of a plurality of network endpoints (e.g., network endpoint <b>112</b> and network endpoint <b>114</b> of network <b>110</b>), to which each respective record of the plurality of records corresponds. At <b>506</b>, control circuitry <b>102</b> assigns a respective dedicated queue for each respective network endpoint (e.g., queue <b>142</b> and queue <b>144</b> of queues <b>140</b>).</p><p id="p-0046" num="0045">At <b>508</b>, control circuitry <b>102</b> transmits, to each respective dedicated queue, each record of the plurality of records that corresponds to the respective network endpoint to which the respective dedicated queue is assigned. At <b>510</b>, control circuitry <b>102</b> determines, for each respective network endpoint, based on each record of each respective dedicated queue corresponding to each respective network endpoint, a respective behavior model. Control circuitry <b>102</b> may perform this determination using any of modules <b>150</b>. At <b>512</b>, control circuitry <b>102</b> stores each respective behavior model to memory (e.g., using storage circuitry <b>160</b>).</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an illustrative flowchart for a process for determining a respective behavior module, in accordance with some embodiments of the disclosure. Process <b>600</b> begins at <b>602</b>, where control circuitry <b>102</b> initiates a subroutine for determining the respective behavior model (e.g., a subroutine for effecting <b>510</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>). At <b>604</b>, control circuitry <b>102</b> identifies a plurality of modules programmed to determine behavior models (e.g., modules <b>150</b>). At <b>606</b>, control circuitry <b>102</b> identifies a module of the plurality of modules that is idle, and at <b>608</b>, control circuitry <b>102</b> commands the idle module to determine the respective behavior model.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts an illustrative flowchart for a process for alerting a network administrator of anomalous network endpoint behavior, in accordance with some embodiments of the disclosure. Process <b>700</b> begins at <b>702</b>, where control circuitry <b>102</b> determines whether a given floating point value represents abnormal behavior for a given respective network endpoint (e.g., network endpoint <b>112</b>). If the determination is in the negative, control circuitry <b>102</b> determines that the network endpoint is behaving normally. If the determination is in the affirmative, process <b>700</b> proceeds to <b>704</b>, where control circuitry <b>102</b> alerts a network administrator (e.g., using API <b>170</b>), performs a set of predefined actions, or similar.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts an illustrative flowchart of a process for generating a vector that models endpoint device behavior using a word/document embedding algorithm (e.g., doc2vec), in accordance with some embodiments of the disclosure. Process <b>800</b> begins at <b>802</b>, where control circuitry <b>102</b> extracts respective data from a respective field of each respective single network flow. At <b>804</b>, control circuitry <b>102</b> concatenates the respective data into a string. At <b>806</b>, control circuitry <b>102</b> forms a document with the string (e.g., document <b>202</b>). At <b>808</b>, control circuitry <b>102</b> feeds the document into a word/document embedding algorithm (e.g., doc2vec or FastText). At <b>810</b>, control circuitry <b>102</b> analyzes, using the word/document embedding algorithm, the document using a shallow neural network. At <b>812</b>, control circuitry <b>102</b> outputs the vector (e.g., to storage <b>160</b>, or to API <b>170</b> for a visual representation to be generated).</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts an illustrative flowchart of a process for generating for display a visual representation of a behavior model, in accordance with some embodiments of the disclosure. Process <b>900</b> begins at <b>902</b>, where control circuitry <b>102</b> determines whether a command is received to view a respective behavior model for a given network endpoint. If the determination is in the negative, process <b>900</b> ends. If the determination is in the affirmative, process <b>900</b> continues to <b>904</b>, where control circuitry <b>102</b> generates for display a graphical representation of the respective behavior model for the given network endpoint (e.g., the representation depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref>). At <b>906</b>, control circuitry <b>102</b> determines a different network endpoint that has a respective behavior model showing similar behavior to behavior of the given network endpoint. At <b>908</b>, control circuitry <b>102</b> generates for simultaneous display with the graphical representation of the respective behavior model for the given network endpoint, the respective behavior model for the different network endpoint (e.g., the representation depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>).</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts a system for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model using a hash table, in accordance with some embodiments of the disclosure. <figref idref="DRAWINGS">FIG. <b>10</b></figref> includes server <b>1000</b>, which acts in the manner in which server <b>100</b> acts, as described above. Server <b>1000</b> receives records from network endpoints of network <b>1014</b> (e.g., network endpoint <b>1012</b> and network endpoint <b>1014</b>). Network <b>1014</b> acts in the manner in which network <b>110</b> acts, as described above. Network endpoint <b>1012</b> and network endpoint <b>1014</b> act in the manner in which network endpoint <b>112</b> and network endpoint <b>1014</b> act, as described above. Server <b>1000</b> receives the records using communications circuitry <b>1020</b>, which acts in the manner communications circuitry <b>120</b> acts, as described above.</p><p id="p-0052" num="0051">Ingest module <b>1030</b> receives the records from network <b>1010</b>, and operates in accordance with the manners described above. For example, the operations of control circuitry <b>102</b> in connection with buffer <b>130</b> described above are equivalent to the manner in which control circuitry <b>1002</b> interacts with ingest module <b>1030</b>. Records ingested by ingest module <b>1030</b> are forwarded to word encoding module <b>1040</b>. Word encoding module <b>1040</b> encodes records to words in accordance with the manners described in the foregoing. For example, word encoding will result in flow words being generated, such as the flow words depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0053" num="0052">After encoding the records from the network endpoints to words, control circuitry <b>1002</b> modifies hash table <b>1050</b> to include records corresponding to each network endpoint. For example, control circuitry <b>1002</b> may determine whether a network endpoint (e.g., endpoint10 corresponding to endpoint <b>1014</b> in network <b>1010</b>) already has an entry on the hash table. If control circuitry <b>1002</b> determines that there is no entry for endpoint10 on hash table <b>1050</b>, control circuitry <b>1002</b> adds a block to hash table <b>1050</b> for endpoint10, such as block <b>1052</b>. Control circuitry <b>1002</b> associates, for each network endpoint, words encoded by word encoding module <b>1040</b> into a linked list (e.g., linked list <b>1054</b>) corresponding to a given network endpoint.</p><p id="p-0054" num="0053">After hash table <b>1050</b> is populated, control circuitry <b>1002</b> may feed hash table <b>1050</b> into language model <b>1060</b>. In some embodiments, control circuitry <b>1002</b> determines that hash table <b>1050</b> is populated based on the passage of a threshold amount of time, which may be configured by a network administrator, or may be a default amount of time. In some embodiments, control circuitry <b>1002</b> determines that hash table <b>1050</b> is populated based on population of a threshold number of words (e.g., one million words). This can be words in the aggregate for all end points, or words in the aggregate for a single endpoint. Language model <b>1060</b> generates a behavior model for each endpoint based on the words populated for each endpoint. The behavior model is generated based on an algorithm derived upon &#x201c;FastText&#x201d;, which is described in a publication entitled &#x201c;Enriching Word Vectors with Subword Information&#x201d;, authored by P. Bojanowski, E. Grave, A. Joulin, and T. Mikolov, and published in 2016, the disclosure of which is hereby incorporated by reference in its entirety. FastText is itself based on the word2vec algorithm discussed above. Control circuitry <b>1002</b> commands the behavior models generated using language model <b>1060</b> to be stored at model store <b>1070</b>, which acts in accordance with the manner in which storage circuitry <b>160</b> acts, as described above. Control circuitry <b>1002</b> may cause behavior models to be output to a user using API <b>1080</b>, in any manner described above with respect to API <b>170</b>.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>11</b></figref> depicts an illustrative flowchart of a process for reducing storage space used in tracking behavior of a plurality of network endpoints by modeling the behavior with a behavior model using a hash table, in accordance with some embodiments of the disclosure. Process <b>1100</b> begins at <b>1102</b>, where control circuitry (e.g., control circuitry <b>1002</b>) receives a plurality of records (e.g., from network endpoint <b>1012</b> of network <b>1014</b>), each respective record of the plurality of records corresponding to a respective network endpoint of the plurality of network endpoints. Process <b>1000</b> continues to <b>1104</b>, where control circuitry <b>1002</b> determines the respective network endpoint, of a plurality of network endpoints, to which each respective record of the plurality of records corresponds.</p><p id="p-0056" num="0055">At <b>1106</b>, control circuitry <b>1002</b> encodes each respective record into respective words. At <b>1108</b>, control circuitry <b>1002</b> assigns for each respective record, a respective block to a respective hash table (e.g., hash table <b>1050</b>). At <b>1110</b>, control circuitry <b>1002</b> adds, to respective linked list records for each respective block (e.g., using linked list <b>1054</b>), the respective words corresponding to the network endpoint corresponding to each respective block. At <b>1112</b>, control circuitry <b>1002</b> determines, for each respective network endpoint, based on each respective linked list for each respective block, a respective behavior model (e.g., using language model <b>1060</b>). At <b>1114</b>, control circuitry <b>1002</b> stores each respective behavior model to memory (e.g., using model store <b>1070</b>).</p><p id="p-0057" num="0056">For brevity, elements of processes <b>300</b>-<b>900</b> and <b>1100</b> that were described in detail with respect to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> are not repeated in the description of <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>9</b></figref> and <figref idref="DRAWINGS">FIG. <b>11</b></figref>, but those above-described elements are intended to carry into their respective descriptions of <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>9</b></figref> and <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0058" num="0057">The foregoing describes systems, methods, and apparatuses for generating and storing zero-footprint behavior models of network endpoints (e.g., from network <b>110</b>). The above-described embodiments of the present disclosure are presented for the purposes of illustration and not of limitation. Furthermore, the present disclosure is not limited to a particular implementation. For example, one or more steps of the methods described above may be performed in a different order (or concurrently) and still achieve desirable results. In addition, the disclosure may be implemented in hardware, such as on an application-specific integrated circuit (ASIC) or on a field-programmable gate array (FPGA). The disclosure may also be implemented in software by, for example, encoding transitory or non-transitory instructions for performing the process discussed above in one or more transitory or non-transitory computer-readable media.</p><p id="p-0059" num="0058">As referred herein, the term &#x201c;in response to&#x201d; refers to initiated as a result of. For example, a first action being performed in response to a second action may include interstitial steps between the first action and the second action.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for reducing storage space used in tracking behavior of a network endpoint, the method comprising:<claim-text>determining a record corresponding to a network endpoint;</claim-text><claim-text>encoding the record into a word;</claim-text><claim-text>assigning, for the record, a block to a hash table, wherein the block corresponds to the network endpoint;</claim-text><claim-text>adding, to a linked list for the block, the word corresponding to the network endpoint;</claim-text><claim-text>determining, for the network endpoint and based on the linked list for the block, a behavior model; and</claim-text><claim-text>storing the behavior model in a memory.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the assigning comprises:<claim-text>detecting that the record corresponds to an unknown network endpoint; and</claim-text><claim-text>in response to the detecting, adding the block to the hash table.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining the behavior model occurs, for the network endpoint, in response to detecting a threshold amount of words having been accumulated for the network endpoint.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the record identifies a single network flow originating from the network endpoint that corresponds to the record.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining the behavior model comprises:<claim-text>concatenating, for the network endpoint, words in the linked list for the block into a string; and</claim-text><claim-text>feeding, for the network endpoint, the string into a Document to Vector (doc2vec) algorithm, thereby outputting a vector representing the behavior model.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:<claim-text>determining an anomalous behavior state for the network endpoint by comparing the vector corresponding to the network endpoint to a normalcy threshold in a multidimensional space.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>tracking behavior of the network endpoint over time by comparing a current position of the vector corresponding to the network endpoint in the multidimensional space to a previous position of a previous version of the vector corresponding to the network endpoint in the multidimensional space.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system for reducing storage space used in tracking behavior of a network endpoint, the system comprising:<claim-text>storage circuitry;</claim-text><claim-text>communications circuitry; and</claim-text><claim-text>control circuitry configured to:<claim-text>determine a record corresponding to a network endpoint;</claim-text><claim-text>encode the record into a word;</claim-text><claim-text>assign, for the record, a block to a hash table, wherein the block corresponds to the network endpoint;</claim-text><claim-text>add, to a linked list for the block, the word corresponding to the network endpoint;</claim-text><claim-text>determine, for the network endpoint and based on the linked list for the block, a behavior model; and</claim-text><claim-text>store, by the storage circuitry, the behavior model in a memory.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein to assign, the control circuit is further configured to:<claim-text>detect that the record corresponds to an unknown network endpoint; and</claim-text><claim-text>in response to the detection, add the block to the hash table.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the record identifies a single network flow originating from the network endpoint that corresponds to the record.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein to determine the behavior model, the control circuit is further configured to:<claim-text>concatenate, for the network endpoint, words in the linked list for the block into a string; and</claim-text><claim-text>feed, for the network endpoint, the string into a Document to Vector (doc2vec) algorithm, thereby outputting a vector representing the behavior model.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the control circuit is further configured to:<claim-text>determine an anomalous behavior state for the network endpoint by comparing the vector corresponding to the network endpoint to a normalcy threshold in a multidimensional space.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the control circuit is further configured to:<claim-text>track behavior of the network endpoint over time by comparing a current position of the vector corresponding to the network endpoint in the multidimensional space to a previous position of a previous version of the vector corresponding to the network endpoint in the multidimensional space.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A non-transitory computer-readable medium having instructions stored thereon that, when executed by a computing device, cause the computing device to perform operations comprising:<claim-text>determining a record corresponding to a network endpoint;</claim-text><claim-text>encoding the record into a word;</claim-text><claim-text>assigning, for the record, a block to a hash table, wherein the block corresponds to the network endpoint;</claim-text><claim-text>adding, to a linked list for the block, the word corresponding to the network endpoint;</claim-text><claim-text>determining, for the network endpoint and based on the linked list for the block, a behavior model; and</claim-text><claim-text>storing the behavior model in a memory.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the assigning further comprises:<claim-text>detecting that the record corresponds to an unknown network endpoint; and</claim-text><claim-text>in response to detecting, adding the block to the hash table.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the determining the behavior model occurs, for the network endpoint, in response to detecting a threshold amount of words having been accumulated for the network endpoint.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the record identifies a single network flow originating from the network endpoint that corresponds to the record.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the determining the behavior model comprises:<claim-text>concatenating, for the network endpoint, words in the linked list for the block into a string; and</claim-text><claim-text>feeding, for the network endpoint, the string into a Document to Vector (doc2vec) algorithm, thereby outputting a vector representing the behavior model.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the operations further comprise:<claim-text>determining an anomalous behavior state for the network endpoint by comparing the vector corresponding to the network endpoint to a normalcy threshold in a multidimensional space.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the operations further comprise:<claim-text>tracking behavior of the network endpoint over time by comparing a current position of the vector corresponding to the network endpoint in the multidimensional space to a previous position of a previous version of the vector corresponding to the network endpoint in the multidimensional space.</claim-text></claim-text></claim></claims></us-patent-application>