<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007306A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007306</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17850641</doc-number><date>20220627</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>44</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>187</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>44</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>187</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">WARPING-BASED DECODED PICTURE RESAMPLING SUPPLEMENTARY ENHANCEMENT INFORMATION MESSAGE</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63215906</doc-number><date>20210628</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Tencent America LLC</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>CHOI</last-name><first-name>Byeongdoo</first-name><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>WENGER</last-name><first-name>Stephan</first-name><address><city>Hillsborough</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Xiang</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>LIU</last-name><first-name>Shan</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Tencent America LLC</orgname><role>02</role><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Aspects of the disclosure provide a method, an apparatus, and non-transitory computer-readable storage medium for video decoding. The apparatus includes processing circuitry that is configured to decode a current picture based on a bitstream. The processing circuitry can determine, from a supplemental enhancement information (SEI) message, a first flag indicating whether a warping process is applied to the current decoded picture. Based on the first flag indicating that the warping process is applied to the current decoded picture, the processing circuitry can determine warping information of the warping process based on the SEI message. The processing circuitry can determine a warped picture from the current decoded picture based on the warping information.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="199.31mm" wi="155.96mm" file="US20230007306A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="235.03mm" wi="162.98mm" orientation="landscape" file="US20230007306A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="220.05mm" wi="177.80mm" orientation="landscape" file="US20230007306A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="81.79mm" wi="118.53mm" orientation="landscape" file="US20230007306A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="211.84mm" wi="163.83mm" orientation="landscape" file="US20230007306A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="202.44mm" wi="165.44mm" orientation="landscape" file="US20230007306A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="220.47mm" wi="177.80mm" orientation="landscape" file="US20230007306A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="242.74mm" wi="178.65mm" orientation="landscape" file="US20230007306A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="244.52mm" wi="179.24mm" orientation="landscape" file="US20230007306A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="239.18mm" wi="178.65mm" orientation="landscape" file="US20230007306A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="155.11mm" wi="155.36mm" orientation="landscape" file="US20230007306A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="224.11mm" wi="145.03mm" orientation="landscape" file="US20230007306A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="215.14mm" wi="161.80mm" file="US20230007306A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="210.48mm" wi="154.60mm" file="US20230007306A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="224.96mm" wi="157.99mm" file="US20230007306A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="231.56mm" wi="179.24mm" orientation="landscape" file="US20230007306A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This present disclosure claims the benefit of priority to U.S. Provisional Application No. 63/215,906, &#x201c;Techniques for Warping-Based Decoded Picture Resampling SEI Message for Coded Video Stream&#x201d; filed on Jun. 28, 2021, which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure describes embodiments generally related to video coding.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent the work is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.</p><p id="p-0005" num="0004">Image and/or video coding and decoding can be performed using inter-picture prediction with motion compensation. Uncompressed digital image and/or video can include a series of pictures, each picture having a spatial dimension of, for example, 1920&#xd7;1080 luminance samples and associated chrominance samples. The series of pictures can have a fixed or variable picture rate (informally also known as frame rate), of, for example 60 pictures per second or 60 Hz. Uncompressed image and/or video has specific bitrate requirements. For example, 1080p60 4:2:0 video at 8 bit per sample (1920&#xd7;1080 luminance sample resolution at 60 Hz frame rate) requires close to 1.5 Gbit/s bandwidth. An hour of such video requires more than 600 GBytes of storage space.</p><p id="p-0006" num="0005">One purpose of image and/or video coding and decoding can be the reduction of redundancy in the input image and/or video signal, through compression. Compression can help reduce the aforementioned bandwidth and/or storage space requirements, in some cases by two orders of magnitude or more. Although the descriptions herein use video encoding/decoding as illustrative examples, the same techniques can be applied to image encoding/decoding in similar fashion without departing from the spirit of the present disclosure. Both lossless compression and lossy compression, as well as a combination thereof can be employed. Lossless compression refers to techniques where an exact copy of the original signal can be reconstructed from the compressed original signal. When using lossy compression, the reconstructed signal may not be identical to the original signal, but the distortion between original and reconstructed signals is small enough to make the reconstructed signal useful for the intended application. In the case of video, lossy compression is widely employed. The amount of distortion tolerated depends on the application; for example, users of certain consumer streaming applications may tolerate higher distortion than users of television distribution applications. The compression ratio achievable can reflect that: higher allowable/tolerable distortion can yield higher compression ratios.</p><p id="p-0007" num="0006">A video encoder and decoder can utilize techniques from several broad categories, including, for example, motion compensation, transform, quantization, and entropy coding.</p><p id="p-0008" num="0007">Video codec technologies can include techniques known as intra coding. In intra coding, sample values are represented without reference to samples or other data from previously reconstructed reference pictures. In some video codecs, the picture is spatially subdivided into blocks of samples. When all blocks of samples are coded in intra mode, that picture can be an intra picture. Intra pictures and their derivations such as independent decoder refresh pictures, can be used to reset the decoder state and can, therefore, be used as the first picture in a coded video bitstream and a video session, or as a still image. The samples of an intra block can be exposed to a transform, and the transform coefficients can be quantized before entropy coding. Intra prediction can be a technique that minimizes sample values in the pre-transform domain. In some cases, the smaller the DC value after a transform is, and the smaller the AC coefficients are, the fewer the bits that are required at a given quantization step size to represent the block after entropy coding.</p><p id="p-0009" num="0008">Traditional intra coding such as known from, for example MPEG-2 generation coding technologies, does not use intra prediction. However, some newer video compression technologies include techniques that attempt, from, for example, surrounding sample data and/or metadata obtained during the encoding and/or decoding of spatially neighboring, and preceding in decoding order, blocks of data. Such techniques are henceforth called &#x201c;intra prediction&#x201d; techniques. Note that in at least some cases, intra prediction is using reference data only from the current picture under reconstruction and not from reference pictures.</p><p id="p-0010" num="0009">There can be many different forms of intra prediction. When more than one of such techniques can be used in a given video coding technology, the technique in use can be coded in an intra prediction mode. In certain cases, modes can have submodes and/or parameters, and those can be coded individually or included in the mode codeword. Which codeword to use for a given mode, submode, and/or parameter combination can have an impact in the coding efficiency gain through intra prediction, and so can the entropy coding technology used to translate the codewords into a bitstream.</p><p id="p-0011" num="0010">A certain mode of intra prediction was introduced with H.264, refined in H.265, and further refined in newer coding technologies such as joint exploration model (JEM), versatile video coding (VVC), and benchmark set (BMS). A predictor block can be formed using neighboring sample values belonging to already available samples. Sample values of neighboring samples are copied into the predictor block according to a direction. A reference to the direction in use can be coded in the bitstream or may itself be predicted.</p><p id="p-0012" num="0011">Referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, depicted in the lower right is a subset of nine predictor directions known from H.265's 33 possible predictor directions (corresponding to the 33 angular modes of the 35 intra modes). The point where the arrows converge (<b>101</b>) represents the sample being predicted. The arrows represent the direction from which the sample is being predicted. For example, arrow (<b>102</b>) indicates that sample (<b>101</b>) is predicted from a sample or samples to the upper right, at a 45 degree angle from the horizontal. Similarly, arrow (<b>103</b>) indicates that sample (<b>101</b>) is predicted from a sample or samples to the lower left of sample (<b>101</b>), in a 22.5 degree angle from the horizontal.</p><p id="p-0013" num="0012">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, on the top left there is depicted a square block (<b>104</b>) of 4&#xd7;4 samples (indicated by a dashed, boldface line). The square block (<b>104</b>) includes 16 samples, each labelled with an &#x201c;S&#x201d;, its position in the Y dimension (e.g., row index) and its position in the X dimension (e.g., column index). For example, sample S<b>21</b> is the second sample in the Y dimension (from the top) and the first (from the left) sample in the X dimension. Similarly, sample S<b>44</b> is the fourth sample in block (<b>104</b>) in both the Y and X dimensions. As the block is 4&#xd7;4 samples in size, S<b>44</b> is at the bottom right. Further shown are reference samples that follow a similar numbering scheme. A reference sample is labelled with an R, its Y position (e.g., row index) and X position (column index) relative to block (<b>104</b>). In both H.264 and H.265, prediction samples neighbor the block under reconstruction; therefore no negative values need to be used.</p><p id="p-0014" num="0013">Intra picture prediction can work by copying reference sample values from the neighboring samples as appropriated by the signaled prediction direction. For example, assume the coded video bitstream includes signaling that, for this block, indicates a prediction direction consistent with arrow (<b>102</b>)&#x2014;that is, samples are predicted from a prediction sample or samples to the upper right, at a 45 degree angle from the horizontal. In that case, samples S<b>41</b>, S<b>32</b>, S<b>23</b>, and S<b>14</b> are predicted from the same reference sample R<b>05</b>. Sample S<b>44</b> is then predicted from reference sample R<b>08</b>.</p><p id="p-0015" num="0014">In certain cases, the values of multiple reference samples may be combined, for example through interpolation, in order to calculate a reference sample; especially when the directions are not evenly divisible by 45 degrees.</p><p id="p-0016" num="0015">The number of possible directions has increased as video coding technology has developed. In H.264 (year 2003), nine different direction could be represented. That increased to 33 in H.265 (year 2013), and JEM/VVC/BMS, at the time of disclosure, can support up to 65 directions. Experiments have been conducted to identify the most likely directions, and certain techniques in the entropy coding are used to represent those likely directions in a small number of bits, accepting a certain penalty for less likely directions. Further, the directions themselves can sometimes be predicted from neighboring directions used in neighboring, already decoded, blocks.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> shows a schematic (<b>110</b>) that depicts 65 intra prediction directions according to JEM to illustrate the increasing number of prediction directions over time.</p><p id="p-0018" num="0017">The mapping of intra prediction directions bits in the coded video bitstream that represent the direction can be different from video coding technology to video coding technology; and can range, for example, from simple direct mappings of prediction direction to intra prediction mode, to codewords, to complex adaptive schemes involving most probable modes, and similar techniques. In all cases, however, there can be certain directions that are statistically less likely to occur in video content than certain other directions. As the goal of video compression is the reduction of redundancy, those less likely directions will, in a well working video coding technology, be represented by a larger number of bits than more likely directions.</p><p id="p-0019" num="0018">Motion compensation can be a lossy compression technique and can relate to techniques where a block of sample data from a previously reconstructed picture or part thereof (reference picture), after being spatially shifted in a direction indicated by a motion vector (MV henceforth), is used for the prediction of a newly reconstructed picture or picture part. In some cases, the reference picture can be the same as the picture currently under reconstruction. MVs can have two dimensions X and Y, or three dimensions, the third being an indication of the reference picture in use (the latter, indirectly, can be a time dimension).</p><p id="p-0020" num="0019">In some video compression techniques, an MV applicable to a certain area of sample data can be predicted from other MVs, for example from those related to another area of sample data spatially adjacent to the area under reconstruction, and preceding that MV in decoding order. Doing so can substantially reduce the amount of data required for coding the MV, thereby removing redundancy and increasing compression. MV prediction can work effectively, for example, because when coding an input video signal derived from a camera (known as natural video) there is a statistical likelihood that areas larger than the area to which a single MV is applicable move in a similar direction and, therefore, can in some cases be predicted using a similar motion vector derived from MVs of neighboring area. That results in the MV found for a given area to be similar or the same as the MV predicted from the surrounding MVs, and that in turn can be represented, after entropy coding, in a smaller number of bits than what would be used if coding the MV directly. In some cases, MV prediction can be an example of lossless compression of a signal (namely: the MVs) derived from the original signal (namely: the sample stream). In other cases, MV prediction itself can be lossy, for example because of rounding errors when calculating a predictor from several surrounding MVs.</p><p id="p-0021" num="0020">Various MV prediction mechanisms are described in H.265/HEVC (ITU-T Rec. H.265, &#x201c;High Efficiency Video Coding&#x201d;, December 2016). Out of the many MV prediction mechanisms that H.265 offers, described here is a technique henceforth referred to as &#x201c;spatial merge&#x201d;.</p><p id="p-0022" num="0021">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a current block (<b>201</b>) comprises samples that have been found by the encoder during the motion search process to be predictable from a previous block of the same size that has been spatially shifted. Instead of coding that MV directly, the MV can be derived from metadata associated with one or more reference pictures, for example from the most recent (in decoding order) reference picture, using the MV associated with either one of five surrounding samples, denoted A<b>0</b>, A<b>1</b>, and B<b>0</b>, B<b>1</b>, B<b>2</b> (<b>202</b> through <b>206</b>, respectively). In H.265, the MV prediction can use predictors from the same reference picture that the neighboring block is using.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0023" num="0022">Aspects of the disclosure provide methods and apparatuses for video encoding and decoding. In some examples, an apparatus for video decoding includes processing circuitry. The processing circuitry is configured to decode a current picture based on a bitstream. The processing circuitry can determine, from a supplemental enhancement information (SEI) message, a first flag indicating whether a warping process is applied to the current decoded picture. Based on the first flag indicating that the warping process is applied to the current decoded picture, the processing circuitry can determine warping information of the warping process based on the SEI message. The processing circuitry can determine a warped picture from the current decoded picture based on the warping information.</p><p id="p-0024" num="0023">In an embodiment, the SEI message is a display orientation SEI message in the bitstream.</p><p id="p-0025" num="0024">In an embodiment, the SEI message is a warping-based decoded picture resampling (WDPR) SEI message in the bitstream.</p><p id="p-0026" num="0025">In an embodiment, the warping information indicates four corner vectors between corners of the current decoded picture and corresponding corners of the warped picture.</p><p id="p-0027" num="0026">In an embodiment, the processing circuitry determines a vector between a sample position in the current decoded picture and a corresponding position in the warped picture based on the four corner vectors.</p><p id="p-0028" num="0027">In an embodiment, based on the first flag indicating that the warping process indicated by a previous SEI message is cancelled, the warping process is not applied to the current decoded picture.</p><p id="p-0029" num="0028">In an embodiment, the warping information includes a second flag. Based on the second flag having a first value, the SEI message only applies to the current decoded picture. Based on the second flag having a second value, the SEI message applies to the current decoded picture and one or more subsequently decoded pictures of a current layer in an output order until a condition is satisfied.</p><p id="p-0030" num="0029">In an example, the second flag has the second value. The processing circuitry can decode a subsequent picture of the current layer that follows the current picture in the output order. The processing circuitry can determine a warped picture from the subsequently decoded picture based on the warping information.</p><p id="p-0031" num="0030">In an embodiment, the condition includes a new coded layer video sequence (CLVS) of the current layer.</p><p id="p-0032" num="0031">In an embodiment, the warping information indicates a warping mode. The processing circuitry can determine the four corner vectors based on the warping mode.</p><p id="p-0033" num="0032">Aspects of the disclosure also provide a non-transitory computer-readable storage medium storing a program executable by at least one processor to perform the methods for video decoding.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0034" num="0033">Further features, the nature, and various advantages of the disclosed subject matter will be more apparent from the following detailed description and the accompanying drawings in which:</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a schematic illustration of an exemplary subset of intra prediction modes.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is an illustration of exemplary intra prediction directions.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a current block (<b>201</b>) and surrounding samples in accordance with an embodiment.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic illustration of a simplified block diagram of a communication system (<b>300</b>) in accordance with an embodiment.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic illustration of a simplified block diagram of a communication system (<b>400</b>) in accordance with an embodiment.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic illustration of a simplified block diagram of a decoder in accordance with an embodiment.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic illustration of a simplified block diagram of an encoder in accordance with an embodiment.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a block diagram of an encoder in accordance with another embodiment.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a block diagram of a decoder in accordance with another embodiment.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows exemplary vectors used for warping according to an embodiment of the disclosure.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> shows an exemplary warping process in image stabilization according to an embodiment of the disclosure.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> shows an exemplary warping process to compensate for global movements in a plurality of input pictures according to an embodiment of the disclosure.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a flow chart outlining an encoding process according to an embodiment of the disclosure.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a flow chart outlining a decoding process according to an embodiment of the disclosure.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a schematic illustration of a computer system in accordance with an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a simplified block diagram of a communication system (<b>300</b>) according to an embodiment of the present disclosure. The communication system (<b>300</b>) includes a plurality of terminal devices that can communicate with each other, via, for example, a network (<b>350</b>). For example, the communication system (<b>300</b>) includes a first pair of terminal devices (<b>310</b>) and (<b>320</b>) interconnected via the network (<b>350</b>). In the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example, the first pair of terminal devices (<b>310</b>) and (<b>320</b>) performs unidirectional transmission of data. For example, the terminal device (<b>310</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device (<b>310</b>)) for transmission to the other terminal device (<b>320</b>) via the network (<b>350</b>). The encoded video data can be transmitted in the form of one or more coded video bitstreams. The terminal device (<b>320</b>) may receive the coded video data from the network (<b>350</b>), decode the coded video data to recover the video pictures and display video pictures according to the recovered video data. Unidirectional data transmission may be common in media serving applications and the like.</p><p id="p-0051" num="0050">In another example, the communication system (<b>300</b>) includes a second pair of terminal devices (<b>330</b>) and (<b>340</b>) that performs bidirectional transmission of coded video data that may occur, for example, during videoconferencing. For bidirectional transmission of data, in an example, each terminal device of the terminal devices (<b>330</b>) and (<b>340</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device) for transmission to the other terminal device of the terminal devices (<b>330</b>) and (<b>340</b>) via the network (<b>350</b>). Each terminal device of the terminal devices (<b>330</b>) and (<b>340</b>) also may receive the coded video data transmitted by the other terminal device of the terminal devices (<b>330</b>) and (<b>340</b>), and may decode the coded video data to recover the video pictures and may display video pictures at an accessible display device according to the recovered video data.</p><p id="p-0052" num="0051">In the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example, the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>) may be illustrated as servers, personal computers and smart phones but the principles of the present disclosure may be not so limited. Embodiments of the present disclosure find application with laptop computers, tablet computers, media players and/or dedicated video conferencing equipment. The network (<b>350</b>) represents any number of networks that convey coded video data among the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>), including for example wireline (wired) and/or wireless communication networks. The communication network (<b>350</b>) may exchange data in circuit-switched and/or packet-switched channels. Representative networks include telecommunications networks, local area networks, wide area networks and/or the Internet. For the purposes of the present discussion, the architecture and topology of the network (<b>350</b>) may be immaterial to the operation of the present disclosure unless explained herein below.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates, as an example for an application for the disclosed subject matter, the placement of a video encoder and a video decoder in a streaming environment. The disclosed subject matter can be equally applicable to other video enabled applications, including, for example, video conferencing, digital TV, storing of compressed video on digital media including CD, DVD, memory stick and the like, and so on.</p><p id="p-0054" num="0053">A streaming system may include a capture subsystem (<b>413</b>), that can include a video source (<b>401</b>), for example a digital camera, creating for example a stream of video pictures (<b>402</b>) that are uncompressed. In an example, the stream of video pictures (<b>402</b>) includes samples that are taken by the digital camera. The stream of video pictures (<b>402</b>), depicted as a bold line to emphasize a high data volume when compared to encoded video data (<b>404</b>) (or coded video bitstreams), can be processed by an electronic device (<b>420</b>) that includes a video encoder (<b>403</b>) coupled to the video source (<b>401</b>). The video encoder (<b>403</b>) can include hardware, software, or a combination thereof to enable or implement aspects of the disclosed subject matter as described in more detail below. The encoded video data (<b>404</b>) (or encoded video bitstream), depicted as a thin line to emphasize the lower data volume when compared to the stream of video pictures (<b>402</b>), can be stored on a streaming server (<b>405</b>) for future use. One or more streaming client subsystems, such as client subsystems (<b>406</b>) and (<b>408</b>) in <figref idref="DRAWINGS">FIG. <b>4</b></figref> can access the streaming server (<b>405</b>) to retrieve copies (<b>407</b>) and (<b>409</b>) of the encoded video data (<b>404</b>). A client subsystem (<b>406</b>) can include a video decoder (<b>410</b>), for example, in an electronic device (<b>430</b>). The video decoder (<b>410</b>) decodes the incoming copy (<b>407</b>) of the encoded video data and creates an outgoing stream of video pictures (<b>411</b>) that can be rendered on a display (<b>412</b>) (e.g., display screen) or other rendering device (not depicted). In some streaming systems, the encoded video data (<b>404</b>), (<b>407</b>), and (<b>409</b>) (e.g., video bitstreams) can be encoded according to certain video coding/compression standards. Examples of those standards include ITU-T Recommendation H.265. In an example, a video coding standard under development is informally known as Versatile Video Coding (VVC). The disclosed subject matter may be used in the context of VVC.</p><p id="p-0055" num="0054">It is noted that the electronic devices (<b>420</b>) and (<b>430</b>) can include other components (not shown). For example, the electronic device (<b>420</b>) can include a video decoder (not shown) and the electronic device (<b>430</b>) can include a video encoder (not shown) as well.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of a video decoder (<b>510</b>) according to an embodiment of the present disclosure. The video decoder (<b>510</b>) can be included in an electronic device (<b>530</b>). The electronic device (<b>530</b>) can include a receiver (<b>531</b>) (e.g., receiving circuitry). The video decoder (<b>510</b>) can be used in the place of the video decoder (<b>410</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0057" num="0056">The receiver (<b>531</b>) may receive one or more coded video sequences to be decoded by the video decoder (<b>510</b>); in the same or another embodiment, one coded video sequence at a time, where the decoding of each coded video sequence is independent from other coded video sequences. The coded video sequence may be received from a channel (<b>501</b>), which may be a hardware/software link to a storage device which stores the encoded video data. The receiver (<b>531</b>) may receive the encoded video data with other data, for example, coded audio data and/or ancillary data streams, that may be forwarded to their respective using entities (not depicted). The receiver (<b>531</b>) may separate the coded video sequence from the other data. To combat network jitter, a buffer memory (<b>515</b>) may be coupled in between the receiver (<b>531</b>) and an entropy decoder/parser (<b>520</b>) (&#x201c;parser (<b>520</b>)&#x201d; henceforth). In certain applications, the buffer memory (<b>515</b>) is part of the video decoder (<b>510</b>). In others, it can be outside of the video decoder (<b>510</b>) (not depicted). In still others, there can be a buffer memory (not depicted) outside of the video decoder (<b>510</b>), for example to combat network jitter, and in addition another buffer memory (<b>515</b>) inside the video decoder (<b>510</b>), for example to handle playout timing. When the receiver (<b>531</b>) is receiving data from a store/forward device of sufficient bandwidth and controllability, or from an isosynchronous network, the buffer memory (<b>515</b>) may not be needed, or can be small. For use on best effort packet networks such as the Internet, the buffer memory (<b>515</b>) may be required, can be comparatively large and can be advantageously of adaptive size, and may at least partially be implemented in an operating system or similar elements (not depicted) outside of the video decoder (<b>510</b>).</p><p id="p-0058" num="0057">The video decoder (<b>510</b>) may include the parser (<b>520</b>) to reconstruct symbols (<b>521</b>) from the coded video sequence. Categories of those symbols include information used to manage operation of the video decoder (<b>510</b>), and potentially information to control a rendering device such as a render device (<b>512</b>) (e.g., a display screen) that is not an integral part of the electronic device (<b>530</b>) but can be coupled to the electronic device (<b>530</b>), as was shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. The control information for the rendering device(s) may be in the form of Supplemental Enhancement Information (SEI) messages or Video Usability Information (VUI) parameter set fragments (not depicted). The parser (<b>520</b>) may parse/entropy-decode the coded video sequence that is received. The coding of the coded video sequence can be in accordance with a video coding technology or standard, and can follow various principles, including variable length coding, Huffman coding, arithmetic coding with or without context sensitivity, and so forth. The parser (<b>520</b>) may extract from the coded video sequence, a set of subgroup parameters for at least one of the subgroups of pixels in the video decoder, based upon at least one parameter corresponding to the group. Subgroups can include Groups of Pictures (GOPs), pictures, tiles, slices, macroblocks, Coding Units (CUs), blocks, Transform Units (TUs), Prediction Units (PUs) and so forth. The parser (<b>520</b>) may also extract from the coded video sequence information such as transform coefficients, quantizer parameter values, motion vectors, and so forth.</p><p id="p-0059" num="0058">The parser (<b>520</b>) may perform an entropy decoding/parsing operation on the video sequence received from the buffer memory (<b>515</b>), so as to create symbols (<b>521</b>).</p><p id="p-0060" num="0059">Reconstruction of the symbols (<b>521</b>) can involve multiple different units depending on the type of the coded video picture or parts thereof (such as: inter and intra picture, inter and intra block), and other factors. Which units are involved, and how, can be controlled by the subgroup control information that was parsed from the coded video sequence by the parser (<b>520</b>). The flow of such subgroup control information between the parser (<b>520</b>) and the multiple units below is not depicted for clarity.</p><p id="p-0061" num="0060">Beyond the functional blocks already mentioned, the video decoder (<b>510</b>) can be conceptually subdivided into a number of functional units as described below. In a practical implementation operating under commercial constraints, many of these units interact closely with each other and can, at least partly, be integrated into each other. However, for the purpose of describing the disclosed subject matter, the conceptual subdivision into the functional units below is appropriate.</p><p id="p-0062" num="0061">A first unit is the scaler/inverse transform unit (<b>551</b>). The scaler/inverse transform unit (<b>551</b>) receives a quantized transform coefficient as well as control information, including which transform to use, block size, quantization factor, quantization scaling matrices, etc. as symbol(s) (<b>521</b>) from the parser (<b>520</b>). The scaler/inverse transform unit (<b>551</b>) can output blocks comprising sample values, that can be input into aggregator (<b>555</b>).</p><p id="p-0063" num="0062">In some cases, the output samples of the scaler/inverse transform unit (<b>551</b>) can pertain to an intra coded block; that is: a block that is not using predictive information from previously reconstructed pictures, but can use predictive information from previously reconstructed parts of the current picture. Such predictive information can be provided by an intra picture prediction unit (<b>552</b>). In some cases, the intra picture prediction unit (<b>552</b>) generates a block of the same size and shape of the block under reconstruction, using surrounding already reconstructed information fetched from the current picture buffer (<b>558</b>). The current picture buffer (<b>558</b>) buffers, for example, partly reconstructed current picture and/or fully reconstructed current picture. The aggregator (<b>555</b>), in some cases, adds, on a per sample basis, the prediction information the intra prediction unit (<b>552</b>) has generated to the output sample information as provided by the scaler/inverse transform unit (<b>551</b>).</p><p id="p-0064" num="0063">In other cases, the output samples of the scaler/inverse transform unit (<b>551</b>) can pertain to an inter coded, and potentially motion compensated block. In such a case, a motion compensation prediction unit (<b>553</b>) can access reference picture memory (<b>557</b>) to fetch samples used for prediction. After motion compensating the fetched samples in accordance with the symbols (<b>521</b>) pertaining to the block, these samples can be added by the aggregator (<b>555</b>) to the output of the scaler/inverse transform unit (<b>551</b>) (in this case called the residual samples or residual signal) so as to generate output sample information. The addresses within the reference picture memory (<b>557</b>) from where the motion compensation prediction unit (<b>553</b>) fetches prediction samples can be controlled by motion vectors, available to the motion compensation prediction unit (<b>553</b>) in the form of symbols (<b>521</b>) that can have, for example X, Y, and reference picture components. Motion compensation also can include interpolation of sample values as fetched from the reference picture memory (<b>557</b>) when sub-sample exact motion vectors are in use, motion vector prediction mechanisms, and so forth.</p><p id="p-0065" num="0064">The output samples of the aggregator (<b>555</b>) can be subject to various loop filtering techniques in the loop filter unit (<b>556</b>). Video compression technologies can include in-loop filter technologies that are controlled by parameters included in the coded video sequence (also referred to as coded video bitstream) and made available to the loop filter unit (<b>556</b>) as symbols (<b>521</b>) from the parser (<b>520</b>), but can also be responsive to meta-information obtained during the decoding of previous (in decoding order) parts of the coded picture or coded video sequence, as well as responsive to previously reconstructed and loop-filtered sample values.</p><p id="p-0066" num="0065">The output of the loop filter unit (<b>556</b>) can be a sample stream that can be output to the render device (<b>512</b>) as well as stored in the reference picture memory (<b>557</b>) for use in future inter-picture prediction.</p><p id="p-0067" num="0066">Certain coded pictures, once fully reconstructed, can be used as reference pictures for future prediction. For example, once a coded picture corresponding to a current picture is fully reconstructed and the coded picture has been identified as a reference picture (by, for example, the parser (<b>520</b>)), the current picture buffer (<b>558</b>) can become a part of the reference picture memory (<b>557</b>), and a fresh current picture buffer can be reallocated before commencing the reconstruction of the following coded picture.</p><p id="p-0068" num="0067">The video decoder (<b>510</b>) may perform decoding operations according to a predetermined video compression technology in a standard, such as ITU-T Rec. H.265. The coded video sequence may conform to a syntax specified by the video compression technology or standard being used, in the sense that the coded video sequence adheres to both the syntax of the video compression technology or standard and the profiles as documented in the video compression technology or standard. Specifically, a profile can select certain tools as the only tools available for use under that profile from all the tools available in the video compression technology or standard. Also necessary for compliance can be that the complexity of the coded video sequence is within bounds as defined by the level of the video compression technology or standard. In some cases, levels restrict the maximum picture size, maximum frame rate, maximum reconstruction sample rate (measured in, for example megasamples per second), maximum reference picture size, and so on. Limits set by levels can, in some cases, be further restricted through Hypothetical Reference Decoder (HRD) specifications and metadata for HRD buffer management signaled in the coded video sequence.</p><p id="p-0069" num="0068">In an embodiment, the receiver (<b>531</b>) may receive additional (redundant) data with the encoded video. The additional data may be included as part of the coded video sequence(s). The additional data may be used by the video decoder (<b>510</b>) to properly decode the data and/or to more accurately reconstruct the original video data. Additional data can be in the form of, for example, temporal, spatial, or signal noise ratio (SNR) enhancement layers, redundant slices, redundant pictures, forward error correction codes, and so on.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a block diagram of a video encoder (<b>603</b>) according to an embodiment of the present disclosure. The video encoder (<b>603</b>) is included in an electronic device (<b>620</b>). The electronic device (<b>620</b>) includes a transmitter (<b>640</b>) (e.g., transmitting circuitry). The video encoder (<b>603</b>) can be used in the place of the video encoder (<b>403</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0071" num="0070">The video encoder (<b>603</b>) may receive video samples from a video source (<b>601</b>) (that is not part of the electronic device (<b>620</b>) in the <figref idref="DRAWINGS">FIG. <b>6</b></figref> example) that may capture video image(s) to be coded by the video encoder (<b>603</b>). In another example, the video source (<b>601</b>) is a part of the electronic device (<b>620</b>).</p><p id="p-0072" num="0071">The video source (<b>601</b>) may provide the source video sequence to be coded by the video encoder (<b>603</b>) in the form of a digital video sample stream that can be of any suitable bit depth (for example: 8 bit, 10 bit, 12 bit, . . . ), any colorspace (for example, BT.601 Y CrCB, RGB, . . . ), and any suitable sampling structure (for example Y CrCb 4:2:0, Y CrCb 4:4:4). In a media serving system, the video source (<b>601</b>) may be a storage device storing previously prepared video. In a videoconferencing system, the video source (<b>601</b>) may be a camera that captures local image information as a video sequence. Video data may be provided as a plurality of individual pictures that impart motion when viewed in sequence. The pictures themselves may be organized as a spatial array of pixels, wherein each pixel can comprise one or more samples depending on the sampling structure, color space, etc. in use. A person skilled in the art can readily understand the relationship between pixels and samples. The description below focuses on samples.</p><p id="p-0073" num="0072">According to an embodiment, the video encoder (<b>603</b>) may code and compress the pictures of the source video sequence into a coded video sequence (<b>643</b>) in real time or under any other time constraints as required by the application. Enforcing appropriate coding speed is one function of a controller (<b>650</b>). In some embodiments, the controller (<b>650</b>) controls other functional units as described below and is functionally coupled to the other functional units. The coupling is not depicted for clarity. Parameters set by the controller (<b>650</b>) can include rate control related parameters (picture skip, quantizer, lambda value of rate-distortion optimization techniques, . . . ), picture size, group of pictures (GOP) layout, maximum motion vector search range, and so forth. The controller (<b>650</b>) can be configured to have other suitable functions that pertain to the video encoder (<b>603</b>) optimized for a certain system design.</p><p id="p-0074" num="0073">In some embodiments, the video encoder (<b>603</b>) is configured to operate in a coding loop. As an oversimplified description, in an example, the coding loop can include a source coder (<b>630</b>) (e.g., responsible for creating symbols, such as a symbol stream, based on an input picture to be coded, and a reference picture(s)), and a (local) decoder (<b>633</b>) embedded in the video encoder (<b>603</b>). The decoder (<b>633</b>) reconstructs the symbols to create the sample data in a similar manner as a (remote) decoder also would create (as any compression between symbols and coded video bitstream is lossless in the video compression technologies considered in the disclosed subject matter). The reconstructed sample stream (sample data) is input to the reference picture memory (<b>634</b>). As the decoding of a symbol stream leads to bit-exact results independent of decoder location (local or remote), the content in the reference picture memory (<b>634</b>) is also bit exact between the local encoder and remote encoder. In other words, the prediction part of an encoder &#x201c;sees&#x201d; as reference picture samples exactly the same sample values as a decoder would &#x201c;see&#x201d; when using prediction during decoding. This fundamental principle of reference picture synchronicity (and resulting drift, if synchronicity cannot be maintained, for example because of channel errors) is used in some related arts as well.</p><p id="p-0075" num="0074">The operation of the &#x201c;local&#x201d; decoder (<b>633</b>) can be the same as of a &#x201c;remote&#x201d; decoder, such as the video decoder (<b>510</b>), which has already been described in detail above in conjunction with <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Briefly referring also to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, however, as symbols are available and encoding/decoding of symbols to a coded video sequence by an entropy coder (<b>645</b>) and the parser (<b>520</b>) can be lossless, the entropy decoding parts of the video decoder (<b>510</b>), including the buffer memory (<b>515</b>), and parser (<b>520</b>) may not be fully implemented in the local decoder (<b>633</b>).</p><p id="p-0076" num="0075">In an embodiment, a decoder technology except the parsing/entropy decoding that is present in a decoder is present, in an identical or a substantially identical functional form, in a corresponding encoder. Accordingly, the disclosed subject matter focuses on decoder operation. The description of encoder technologies can be abbreviated as they are the inverse of the comprehensively described decoder technologies. In certain areas a more detail description is provided below.</p><p id="p-0077" num="0076">During operation, in some examples, the source coder (<b>630</b>) may perform motion compensated predictive coding, which codes an input picture predictively with reference to one or more previously coded picture from the video sequence that were designated as &#x201c;reference pictures.&#x201d; In this manner, the coding engine (<b>632</b>) codes differences between pixel blocks of an input picture and pixel blocks of reference picture(s) that may be selected as prediction reference(s) to the input picture.</p><p id="p-0078" num="0077">The local video decoder (<b>633</b>) may decode coded video data of pictures that may be designated as reference pictures, based on symbols created by the source coder (<b>630</b>). Operations of the coding engine (<b>632</b>) may advantageously be lossy processes. When the coded video data may be decoded at a video decoder (not shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>), the reconstructed video sequence typically may be a replica of the source video sequence with some errors. The local video decoder (<b>633</b>) replicates decoding processes that may be performed by the video decoder on reference pictures and may cause reconstructed reference pictures to be stored in the reference picture memory (<b>634</b>). In this manner, the video encoder (<b>603</b>) may store copies of reconstructed reference pictures locally that have common content as the reconstructed reference pictures that will be obtained by a far-end video decoder (absent transmission errors).</p><p id="p-0079" num="0078">The predictor (<b>635</b>) may perform prediction searches for the coding engine (<b>632</b>). That is, for a new picture to be coded, the predictor (<b>635</b>) may search the reference picture memory (<b>634</b>) for sample data (as candidate reference pixel blocks) or certain metadata such as reference picture motion vectors, block shapes, and so on, that may serve as an appropriate prediction reference for the new pictures. The predictor (<b>635</b>) may operate on a sample block-by-pixel block basis to find appropriate prediction references. In some cases, as determined by search results obtained by the predictor (<b>635</b>), an input picture may have prediction references drawn from multiple reference pictures stored in the reference picture memory (<b>634</b>).</p><p id="p-0080" num="0079">The controller (<b>650</b>) may manage coding operations of the source coder (<b>630</b>), including, for example, setting of parameters and subgroup parameters used for encoding the video data.</p><p id="p-0081" num="0080">Output of all aforementioned functional units may be subjected to entropy coding in the entropy coder (<b>645</b>). The entropy coder (<b>645</b>) translates the symbols as generated by the various functional units into a coded video sequence, by lossless compressing the symbols according to technologies such as Huffman coding, variable length coding, arithmetic coding, and so forth.</p><p id="p-0082" num="0081">The transmitter (<b>640</b>) may buffer the coded video sequence(s) as created by the entropy coder (<b>645</b>) to prepare for transmission via a communication channel (<b>660</b>), which may be a hardware/software link to a storage device which would store the encoded video data. The transmitter (<b>640</b>) may merge coded video data from the video encoder (<b>603</b>) with other data to be transmitted, for example, coded audio data and/or ancillary data streams (sources not shown).</p><p id="p-0083" num="0082">The controller (<b>650</b>) may manage operation of the video encoder (<b>603</b>). During coding, the controller (<b>650</b>) may assign to each coded picture a certain coded picture type, which may affect the coding techniques that may be applied to the respective picture. For example, pictures often may be assigned as one of the following picture types:</p><p id="p-0084" num="0083">An Intra Picture (I picture) may be one that may be coded and decoded without using any other picture in the sequence as a source of prediction. Some video codecs allow for different types of intra pictures, including, for example Independent Decoder Refresh (&#x201c;IDR&#x201d;) Pictures. A person skilled in the art is aware of those variants of I pictures and their respective applications and features.</p><p id="p-0085" num="0084">A predictive picture (P picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most one motion vector and reference index to predict the sample values of each block.</p><p id="p-0086" num="0085">A bi-directionally predictive picture (B Picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most two motion vectors and reference indices to predict the sample values of each block. Similarly, multiple-predictive pictures can use more than two reference pictures and associated metadata for the reconstruction of a single block.</p><p id="p-0087" num="0086">Source pictures commonly may be subdivided spatially into a plurality of sample blocks (for example, blocks of 4&#xd7;4, 8&#xd7;8, 4&#xd7;8, or 16&#xd7;16 samples each) and coded on a block-by-block basis. Blocks may be coded predictively with reference to other (already coded) blocks as determined by the coding assignment applied to the blocks' respective pictures. For example, blocks of I pictures may be coded non-predictively or they may be coded predictively with reference to already coded blocks of the same picture (spatial prediction or intra prediction). Pixel blocks of P pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one previously coded reference picture. Blocks of B pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one or two previously coded reference pictures.</p><p id="p-0088" num="0087">The video encoder (<b>603</b>) may perform coding operations according to a predetermined video coding technology or standard, such as ITU-T Rec. H.265. In its operation, the video encoder (<b>603</b>) may perform various compression operations, including predictive coding operations that exploit temporal and spatial redundancies in the input video sequence. The coded video data, therefore, may conform to a syntax specified by the video coding technology or standard being used.</p><p id="p-0089" num="0088">In an embodiment, the transmitter (<b>640</b>) may transmit additional data with the encoded video. The source coder (<b>630</b>) may include such data as part of the coded video sequence. Additional data may comprise temporal/spatial/SNR enhancement layers, other forms of redundant data such as redundant pictures and slices, SEI messages, VUI parameter set fragments, and so on.</p><p id="p-0090" num="0089">A video may be captured as a plurality of source pictures (video pictures) in a temporal sequence. Intra-picture prediction (often abbreviated to intra prediction) makes use of spatial correlation in a given picture, and inter-picture prediction makes uses of the (temporal or other) correlation between the pictures. In an example, a specific picture under encoding/decoding, which is referred to as a current picture, is partitioned into blocks. When a block in the current picture is similar to a reference block in a previously coded and still buffered reference picture in the video, the block in the current picture can be coded by a vector that is referred to as a motion vector. The motion vector points to the reference block in the reference picture, and can have a third dimension identifying the reference picture, in case multiple reference pictures are in use.</p><p id="p-0091" num="0090">In some embodiments, a bi-prediction technique can be used in the inter-picture prediction. According to the bi-prediction technique, two reference pictures, such as a first reference picture and a second reference picture that are both prior in decoding order to the current picture in the video (but may be in the past and future, respectively, in display order) are used. A block in the current picture can be coded by a first motion vector that points to a first reference block in the first reference picture, and a second motion vector that points to a second reference block in the second reference picture. The block can be predicted by a combination of the first reference block and the second reference block.</p><p id="p-0092" num="0091">Further, a merge mode technique can be used in the inter-picture prediction to improve coding efficiency.</p><p id="p-0093" num="0092">According to some embodiments of the disclosure, predictions, such as inter-picture predictions and intra-picture predictions are performed in the unit of blocks. For example, according to the HEVC standard, a picture in a sequence of video pictures is partitioned into coding tree units (CTU) for compression, the CTUs in a picture have the same size, such as 64&#xd7;64 pixels, 32&#xd7;32 pixels, or 16&#xd7;16 pixels. In general, a CTU includes three coding tree blocks (CTBs), which are one luma CTB and two chroma CTBs. Each CTU can be recursively quadtree split into one or multiple coding units (CUs). For example, a CTU of 64&#xd7;64 pixels can be split into one CU of 64&#xd7;64 pixels, or 4 CUs of 32&#xd7;32 pixels, or 16 CUs of 16&#xd7;16 pixels. In an example, each CU is analyzed to determine a prediction type for the CU, such as an inter prediction type or an intra prediction type. The CU is split into one or more prediction units (PUs) depending on the temporal and/or spatial predictability. Generally, each PU includes a luma prediction block (PB), and two chroma PBs. In an embodiment, a prediction operation in coding (encoding/decoding) is performed in the unit of a prediction block. Using a luma prediction block as an example of a prediction block, the prediction block includes a matrix of values (e.g., luma values) for pixels, such as 8&#xd7;8 pixels, 16&#xd7;16 pixels, 8&#xd7;16 pixels, 16&#xd7;8 pixels, and the like.</p><p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagram of a video encoder (<b>703</b>) according to another embodiment of the disclosure. The video encoder (<b>703</b>) is configured to receive a processing block (e.g., a prediction block) of sample values within a current video picture in a sequence of video pictures, and encode the processing block into a coded picture that is part of a coded video sequence. In an example, the video encoder (<b>703</b>) is used in the place of the video encoder (<b>403</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0095" num="0094">In an HEVC example, the video encoder (<b>703</b>) receives a matrix of sample values for a processing block, such as a prediction block of 8&#xd7;8 samples, and the like. The video encoder (<b>703</b>) determines whether the processing block is best coded using intra mode, inter mode, or bi-prediction mode using, for example, rate-distortion optimization. When the processing block is to be coded in intra mode, the video encoder (<b>703</b>) may use an intra prediction technique to encode the processing block into the coded picture; and when the processing block is to be coded in inter mode or bi-prediction mode, the video encoder (<b>703</b>) may use an inter prediction or bi-prediction technique, respectively, to encode the processing block into the coded picture. In certain video coding technologies, merge mode can be an inter picture prediction submode where the motion vector is derived from one or more motion vector predictors without the benefit of a coded motion vector component outside the predictors. In certain other video coding technologies, a motion vector component applicable to the subject block may be present. In an example, the video encoder (<b>703</b>) includes other components, such as a mode decision module (not shown) to determine the mode of the processing blocks.</p><p id="p-0096" num="0095">In the <figref idref="DRAWINGS">FIG. <b>7</b></figref> example, the video encoder (<b>703</b>) includes the inter encoder (<b>730</b>), an intra encoder (<b>722</b>), a residue calculator (<b>723</b>), a switch (<b>726</b>), a residue encoder (<b>724</b>), a general controller (<b>721</b>), and an entropy encoder (<b>725</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0097" num="0096">The inter encoder (<b>730</b>) is configured to receive the samples of the current block (e.g., a processing block), compare the block to one or more reference blocks in reference pictures (e.g., blocks in previous pictures and later pictures), generate inter prediction information (e.g., description of redundant information according to inter encoding technique, motion vectors, merge mode information), and calculate inter prediction results (e.g., predicted block) based on the inter prediction information using any suitable technique. In some examples, the reference pictures are decoded reference pictures that are decoded based on the encoded video information.</p><p id="p-0098" num="0097">The intra encoder (<b>722</b>) is configured to receive the samples of the current block (e.g., a processing block), in some cases compare the block to blocks already coded in the same picture, generate quantized coefficients after transform, and in some cases also intra prediction information (e.g., an intra prediction direction information according to one or more intra encoding techniques). In an example, the intra encoder (<b>722</b>) also calculates intra prediction results (e.g., predicted block) based on the intra prediction information and reference blocks in the same picture.</p><p id="p-0099" num="0098">The general controller (<b>721</b>) is configured to determine general control data and control other components of the video encoder (<b>703</b>) based on the general control data. In an example, the general controller (<b>721</b>) determines the mode of the block, and provides a control signal to the switch (<b>726</b>) based on the mode. For example, when the mode is the intra mode, the general controller (<b>721</b>) controls the switch (<b>726</b>) to select the intra mode result for use by the residue calculator (<b>723</b>), and controls the entropy encoder (<b>725</b>) to select the intra prediction information and include the intra prediction information in the bitstream; and when the mode is the inter mode, the general controller (<b>721</b>) controls the switch (<b>726</b>) to select the inter prediction result for use by the residue calculator (<b>723</b>), and controls the entropy encoder (<b>725</b>) to select the inter prediction information and include the inter prediction information in the bitstream.</p><p id="p-0100" num="0099">The residue calculator (<b>723</b>) is configured to calculate a difference (residue data) between the received block and prediction results selected from the intra encoder (<b>722</b>) or the inter encoder (<b>730</b>). The residue encoder (<b>724</b>) is configured to operate based on the residue data to encode the residue data to generate the transform coefficients. In an example, the residue encoder (<b>724</b>) is configured to convert the residue data from a spatial domain to a frequency domain, and generate the transform coefficients. The transform coefficients are then subject to quantization processing to obtain quantized transform coefficients. In various embodiments, the video encoder (<b>703</b>) also includes a residue decoder (<b>728</b>). The residue decoder (<b>728</b>) is configured to perform inverse-transform, and generate the decoded residue data. The decoded residue data can be suitably used by the intra encoder (<b>722</b>) and the inter encoder (<b>730</b>). For example, the inter encoder (<b>730</b>) can generate decoded blocks based on the decoded residue data and inter prediction information, and the intra encoder (<b>722</b>) can generate decoded blocks based on the decoded residue data and the intra prediction information. The decoded blocks are suitably processed to generate decoded pictures and the decoded pictures can be buffered in a memory circuit (not shown) and used as reference pictures in some examples.</p><p id="p-0101" num="0100">The entropy encoder (<b>725</b>) is configured to format the bitstream to include the encoded block. The entropy encoder (<b>725</b>) is configured to include various information according to a suitable standard, such as the HEVC standard. In an example, the entropy encoder (<b>725</b>) is configured to include the general control data, the selected prediction information (e.g., intra prediction information or inter prediction information), the residue information, and other suitable information in the bitstream. Note that, according to the disclosed subject matter, when coding a block in the merge submode of either inter mode or bi-prediction mode, there is no residue information.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a diagram of a video decoder (<b>810</b>) according to another embodiment of the disclosure. The video decoder (<b>810</b>) is configured to receive coded pictures that are part of a coded video sequence, and decode the coded pictures to generate reconstructed pictures. In an example, the video decoder (<b>810</b>) is used in the place of the video decoder (<b>410</b>) in the <figref idref="DRAWINGS">FIG. <b>4</b></figref> example.</p><p id="p-0103" num="0102">In the <figref idref="DRAWINGS">FIG. <b>8</b></figref> example, the video decoder (<b>810</b>) includes an entropy decoder (<b>871</b>), an inter decoder (<b>880</b>), a residue decoder (<b>873</b>), a reconstruction module (<b>874</b>), and an intra decoder (<b>872</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0104" num="0103">The entropy decoder (<b>871</b>) can be configured to reconstruct, from the coded picture, certain symbols that represent the syntax elements of which the coded picture is made up. Such symbols can include, for example, the mode in which a block is coded (such as, for example, intra mode, inter mode, bi-predicted mode, the latter two in merge submode or another submode), prediction information (such as, for example, intra prediction information or inter prediction information) that can identify certain sample or metadata that is used for prediction by the intra decoder (<b>872</b>) or the inter decoder (<b>880</b>), respectively, residual information in the form of, for example, quantized transform coefficients, and the like. In an example, when the prediction mode is inter or bi-predicted mode, the inter prediction information is provided to the inter decoder (<b>880</b>); and when the prediction type is the intra prediction type, the intra prediction information is provided to the intra decoder (<b>872</b>). The residual information can be subject to inverse quantization and is provided to the residue decoder (<b>873</b>).</p><p id="p-0105" num="0104">The inter decoder (<b>880</b>) is configured to receive the inter prediction information, and generate inter prediction results based on the inter prediction information.</p><p id="p-0106" num="0105">The intra decoder (<b>872</b>) is configured to receive the intra prediction information, and generate prediction results based on the intra prediction information.</p><p id="p-0107" num="0106">The residue decoder (<b>873</b>) is configured to perform inverse quantization to extract de-quantized transform coefficients, and process the de-quantized transform coefficients to convert the residual from the frequency domain to the spatial domain. The residue decoder (<b>873</b>) may also require certain control information (to include the Quantizer Parameter (QP)), and that information may be provided by the entropy decoder (<b>871</b>) (data path not depicted as this may be low volume control information only).</p><p id="p-0108" num="0107">The reconstruction module (<b>874</b>) is configured to combine, in the spatial domain, the residual as output by the residue decoder (<b>873</b>) and the prediction results (as output by the inter or intra prediction modules as the case may be) to form a reconstructed block, that may be part of the reconstructed picture, which in turn may be part of the reconstructed video. It is noted that other suitable operations, such as a deblocking operation and the like, can be performed to improve the visual quality.</p><p id="p-0109" num="0108">It is noted that the video encoders (<b>403</b>), (<b>603</b>), and (<b>703</b>), and the video decoders (<b>410</b>), (<b>510</b>), and (<b>810</b>) can be implemented using any suitable technique. In an embodiment, the video encoders (<b>403</b>), (<b>603</b>), and (<b>703</b>), and the video decoders (<b>410</b>), (<b>510</b>), and (<b>810</b>) can be implemented using one or more integrated circuits. In another embodiment, the video encoders (<b>403</b>), (<b>603</b>), and (<b>603</b>), and the video decoders (<b>410</b>), (<b>510</b>), and (<b>810</b>) can be implemented using one or more processors that execute software instructions.</p><p id="p-0110" num="0109">According to an embodiment of the disclosure, a bitstream can include one or more coded video sequences (CVSs). A CVS can be independently coded from other CVSs. Each CVS can include one or more layers, and each layer can be a representation of a video with a specific quality (e.g., a spatial resolution), or a representation of a certain component interpretation property, e.g., as a depth map, a transparency map, or a perspective view. In a temporal dimension, each CVS can include one or more access units (AUs). Each AU can include one or more pictures of different layers that correspond to a same time instant. A coded layer video sequence (CLVS) is a layer-wise CVS that can include a sequence of picture units in the same layer. If a bitstream has multiple layers, a CVS in the bitstream can have one or more CLVSs for each layer.</p><p id="p-0111" num="0110">In an embodiment, a CVS includes a sequence of AUs where the sequence of AUs includes, in a decoding order, an intra random access point (IRAP) AU, followed by zero or more AUs that are not IRAP AUs. In an example, the zero or more AUs includes all subsequent AUs up to but not including any subsequent AU that is an IRAP AU. In an example, a CLVS includes a sequence of pictures and the associated non-video coding layer (VCL) network abstraction layer (NAL) units of a base layer of a CVS.</p><p id="p-0112" num="0111">SEI message(s) can include information that is not necessary for decoding, such as decoding samples of coded pictures from VCL NAL units. SEI message(s) can be used in processes related to decoding, display or other purposes. SEI message(s) can be optional for constructing luma or chroma samples by a decoding process. SEI message(s) may be optionally processed by conforming decoders for output order conformance to a certain standard (e.g., HEVC 265 or VVC). In an embodiment, SEI message(s) are present in the bitstream.</p><p id="p-0113" num="0112">Table 1 shows an exemplary display orientation SEI message syntax according to an embodiment of the disclosure.</p><p id="p-0114" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Exemplary display orientation SEI message syntax</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="168pt" align="left"/><colspec colname="1" colwidth="49pt" align="left"/><tbody valign="top"><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="154pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><tbody valign="top"><row><entry/><entry>display_orientation( payloadSize ) {</entry><entry/></row><row><entry/><entry>&#x2003;display_orientation_cancel_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;if( !display_orientation_cancel_flag ) {</entry></row><row><entry/><entry>&#x2003;&#x2003;hor_flip</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;&#x2003;ver_flip</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;&#x2003;anticlockwise_rotation</entry><entry>u(16)</entry></row><row><entry/><entry>&#x2003;&#x2003;display_orientation_persistence_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;}</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0115" num="0113">Display orientation SEI message semantics can be described as follows. When a decoded picture has a picture output flag (e.g., PicOutputFlag) equal to 1, the display orientation SEI message can inform the decoder of a transformation to be applied to a cropped decoded picture prior to display. A cropped decoded picture can be obtained by cropping a decoded picture based on a cropping window (e.g., a conformance cropping window). In an example, the cropping window is specified in a sequence parameter set (SPS) that is referred to by the corresponding coded picture.</p><p id="p-0116" num="0114">The picture output flag (e.g., PicOutputFlag) can indicate whether to output the decoded picture. For example, when the picture output flag (e.g., PicOutputFlag) is 1, the decoded picture can be sent from a decoded picture buffer as an output. When the picture output flag (e.g., PicOutputFlag) is 0, the decoded picture may not be sent from the decoded picture buffer as an output.</p><p id="p-0117" num="0115">The display_orientation_cancel_flag being equal to 1 can indicate that the display orientation SEI message cancels the persistence of any previous display orientation SEI message in an output order. The display_orientation_cancel_flag being equal to 0 can indicate that display orientation information follows. The display orientation information can include a horizontal flip flag, a vertical flip flag, an anticlockwise rotation, and a display orientation persistence flag.</p><p id="p-0118" num="0116">The horizontal flip flag (e.g., hor_flip) being equal to 1 can indicate that the cropped decoded picture is flipped horizontally for display. The horizontal flip flag (e.g., hor_flip) being equal to 0 can indicate that the decoded picture is not flipped horizontally.</p><p id="p-0119" num="0117">The vertical flip flag (e.g., ver_flip) being equal to 1 can indicate that the cropped decoded picture is flipped vertically (e.g., in addition to a horizontal flipping when hor_flip is equal to 1) for display. The vertical flip flag (e.g., ver_flip) being equal to 0 can indicate that the decoded picture is not flipped vertically.</p><p id="p-0120" num="0118">The anticlockwise rotation (e.g., anticlockwise_rotation) can specify an anticlockwise rotation of the decoded picture (e.g., after applying the horizontal flipping and/or the vertical flipping based on the horizontal flip flag and the vertical flip flag) prior to display.</p><p id="p-0121" num="0119">Equivalent transformations can be expressed in multiple ways using the syntax elements described above.</p><p id="p-0122" num="0120">The display orientation persistence flag (e.g., display_orientation_persistence_flag) can specify the persistence of the display orientation SEI message for the current layer. The display orientation persistence flag (e.g., display_orientation_persistence_flag) being equal to 0 can specify that the display orientation SEI message applies to the current decoded picture only. The display orientation persistence flag (e.g., display_orientation_persistence_flag) being equal to 1 can specify that the display orientation SEI message can persist for the current layer in the output order until one or more conditions are true. The one or more conditions can include: (i) a new CLVS of the current layer begins; (ii) the bitstream ends; and/or (iii) another picture in the current layer in an access unit containing a display orientation SEI message that is applicable to the current layer is output for which a picture order count (POC) of the other picture is greater than a POC of the current picture, immediately after the invocation of the decoding process for picture order count for the other picture.</p><p id="p-0123" num="0121">A resampling process or a warping process can be applied to a picture to generate a resampled picture (or a warped picture). The warping process can be used in reference picture resampling, image stabilization, compensation for global movements, and the like. In an embodiment, the resampling process, such as a reference picture resampling process, is applied to a prior picture (e.g., a previously decoded reference picture) to generate a warped picture for use in predicting a current picture, such as used in H.263 Annex P and described in the disclosure. In an example, a resampling syntax specifies a relationship of the current picture to the prior picture with a different source format. A reference picture resampling mode can be used to adaptively alter resolutions of pictures during encoding. A fast algorithm can be used to generate bilinear interpolation coefficients. In an example, the resampling syntax specifies a global motion warping alteration of a shape, a size, and a location of the prior picture with respect to the current picture, for example, due to a global movement.</p><p id="p-0124" num="0122"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows exemplary vectors used for warping according to an embodiment of the disclosure. The resampling process (e.g., the reference picture resampling) (<b>900</b>) can be described with displacements of four corners A-D of the current picture area (<b>910</b>). For a luminance field of the current picture (<b>910</b>) with a horizontal size H and a vertical size V, four vectors (e.g., four conceptual MVs) v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV </sup>can be defined for an upper-left corner A, an upper-right corner B, a lower-left corner C, and a lower-right corner D of the picture (<b>910</b>), respectively. The four conceptual MVs v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV </sup>can describe how to move the four corners A-D of the current picture (<b>910</b>) to map the four corners A-D onto corresponding corners A&#x2032;-D&#x2032; of the previous decoded picture (<b>920</b>). The units of the four vectors v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV </sup>can be the same as the units in a reference picture grid. To generate a vector v(x, y) at a real-valued location (x, y) in the interior of the current picture (<b>910</b>), an approximation to bilinear interpolation can be used as in Eq. 1.</p><p id="p-0125" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <munder>       <mi>v</mi>       <mo>_</mo>      </munder>      <mo>(</mo>      <mrow>       <mi>x</mi>       <mo>,</mo>       <mi>y</mi>      </mrow>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <mrow>        <mo>(</mo>        <mrow>         <mn>1</mn>         <mo>-</mo>         <mfrac>          <mi>y</mi>          <mi>V</mi>         </mfrac>        </mrow>        <mo>)</mo>       </mrow>       <mo>[</mo>       <mrow>        <mrow>         <mrow>          <mo>(</mo>          <mrow>           <mn>1</mn>           <mo>-</mo>           <mfrac>            <mi>x</mi>            <mi>H</mi>           </mfrac>          </mrow>          <mo>)</mo>         </mrow>         <mo>&#x2062;</mo>         <msup>          <munder>           <mi>v</mi>           <mo>_</mo>          </munder>          <mn>00</mn>         </msup>        </mrow>        <mo>+</mo>        <mrow>         <mrow>          <mo>(</mo>          <mfrac>           <mi>x</mi>           <mi>H</mi>          </mfrac>          <mo>)</mo>         </mrow>         <mo>&#x2062;</mo>         <msup>          <munder>           <mi>v</mi>           <mo>_</mo>          </munder>          <mrow>           <mi>H</mi>           <mo>&#x2062;</mo>           <mn>0</mn>          </mrow>         </msup>        </mrow>       </mrow>       <mo>]</mo>      </mrow>      <mo>+</mo>      <mrow>       <mrow>        <mo>(</mo>        <mfrac>         <mi>y</mi>         <mi>V</mi>        </mfrac>        <mo>)</mo>       </mrow>       <mo>[</mo>       <mrow>        <mrow>         <mrow>          <mo>(</mo>          <mrow>           <mn>1</mn>           <mo>-</mo>           <mfrac>            <mi>x</mi>            <mi>H</mi>           </mfrac>          </mrow>          <mo>)</mo>         </mrow>         <mo>&#x2062;</mo>         <msup>          <munder>           <mi>v</mi>           <mo>_</mo>          </munder>          <mrow>           <mn>0</mn>           <mo>&#x2062;</mo>           <mi>V</mi>          </mrow>         </msup>        </mrow>        <mo>+</mo>        <mrow>         <mrow>          <mo>(</mo>          <mfrac>           <mi>x</mi>           <mi>H</mi>          </mfrac>          <mo>)</mo>         </mrow>         <mo>&#x2062;</mo>         <msup>          <munder>           <mi>v</mi>           <mo>_</mo>          </munder>          <mi>HV</mi>         </msup>        </mrow>       </mrow>       <mo>]</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mi>Eq</mi>     <mo>.</mo>     <mtext>   </mtext>     <mn>1</mn>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0126" num="0123">The resampling process can be based on the vector v(x, y). The horizontal size H and the vertical size V of the current picture, and a horizontal size HR and a vertical size VR of the reference picture can be indicated in a picture header. In an example, if the picture width or the picture height is not divisible by 16, the additional area can be generated by adding pixels to the resampled picture using a same fill mode as used in the resampling process.</p><p id="p-0127" num="0124">In addition to the reference picture resampling, the warping process can be used in image stabilization and/or compensation for global movements, and warping information indicating warping parameters (e.g., the four vectors) can be signaled. The warping parameters can be included in a SEI message, as described below.</p><p id="p-0128" num="0125">This disclosure includes video coding technologies related to a SEI message (e.g., a warping-based decoded picture resampling (WDPR) SEI message) for a coded video stream. A warping process can be used in image stabilization where the SEI message (e.g., the WDPR SEI message) can provide warping parameters used in the image stabilization to reduce unintended fluctuated motions in a video.</p><p id="p-0129" num="0126">A warping process can be used to compensate for global movements (or global motions) in a plurality of input pictures where the warping parameters in the SEI message (e.g., the WDPR SEI message) can be used for more efficient or improved motion compensated prediction. In an embodiment, the warping process includes a forward warping process applied to a plurality of input pictures as a pre-processing and a backward warping process applied to a plurality of decoded pictures as a post-processing. In an example, the plurality of decoded pictures corresponds to the plurality of input pictures.</p><p id="p-0130" num="0127">The SEI message can be adopted as a new SEI message, such as the WDPR SEI message. Alternatively, the SEI message can be combined with another existing SEI message, such as the display orientation SEI message described above with reference to Table 1. In an example, the warping process is based on the resampling process described above with reference to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, such as used in H.263 Annex P.</p><p id="p-0131" num="0128">Image stabilization is widely used to reduce undesired motion jitters in image sequences. For example, motion jitters occur with camera shaking or rapidly moving objects while rolling a shutter of the camera. The motion anomalies caused by unstable external sources or environments may lead to unpleasant visual effects in video sequences. To improve a subjective visual quality, a warping process can be applied to decoded pictures. The warping processing can be applied as a post-processing, for example, on a decoder side.</p><p id="p-0132" num="0129"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> shows an exemplary warping process (<b>1000</b>A) in image stabilization according to an embodiment of the disclosure. A capture-side device can determine (e.g., detect or sense) camera jitters and other external movements. Frame-wise or picture-wise movements can be parameterized into warping information (e.g., warping parameters). In the example shown in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, the parameterized warping information is transmitted to a decoder-side, such as through an SEI message (<b>1051</b>). A decoder can apply the warping process (e.g., the image stabilization processing) (<b>1000</b>A) to decoded pictures (<b>1053</b>) by utilizing the received warping information. In an example, the decoded pictures (<b>1053</b>) are cropped output pictures with motion jitters (<b>1005</b>). Warped pictures (<b>1055</b>) can be generated from the cropped output pictures (<b>1053</b>) by the warping process (<b>1000</b>A). The motion jitters (<b>1005</b>) in the cropped output pictures (<b>1053</b>) can be reduced to generate stabilized pictures, such as the warped pictures (<b>1055</b>) having reduced motion jitters (<b>1006</b>).</p><p id="p-0133" num="0130">As described above, the warping parameters in an SEI message (e.g., the WDPR SEI message) can be used for motion compensated prediction by applying a forward warping process to a plurality of input pictures as a pre-processing and a backward warping process to a plurality of decoded pictures as a post-processing. <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> shows an exemplary warping process (<b>1000</b>B) to compensate for global movements in a plurality of input pictures according to an embodiment of the disclosure. In an example, the plurality of input pictures (<b>1011</b>)-(<b>1013</b>) is a part of a CLVS. The plurality of input pictures (<b>1011</b>)-(<b>1013</b>) shows a global movement, such as a shift toward an upper-right direction indicated by a vector (<b>1001</b>). For example, a same feature is located at different positions (<b>1091</b>)-(<b>1093</b>) in the plurality of input pictures (<b>1011</b>)-(<b>1013</b>), respectively. A displacement between positions (e.g., the positions (<b>1091</b>)-(<b>1092</b>)) of the feature in adjacent pictures (e.g., (<b>1011</b>)-(<b>1012</b>)) is the vector (<b>1001</b>). At an encoder side, the global movement (e.g., the vector (<b>1001</b>)) can be determined based on the plurality of input pictures (<b>1011</b>)-(<b>1013</b>). According to an embodiment of the disclosure, the warping process (<b>1000</b>B) can be applied to the plurality of input pictures to improve coding efficiency as follows.</p><p id="p-0134" num="0131">Referring to <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, at the encoder side, a transform, such as a shifting operation that is opposite to the global movement, can be determined based on the global movement of the plurality of input pictures (<b>1011</b>)-(<b>1013</b>). The warping parameter(s), such as a vector (<b>1002</b>) that is opposite to the vector (<b>1001</b>), can be determined. A forward warping process based on the vector (<b>1002</b>) can be applied to the plurality of input pictures (<b>1011</b>)-(<b>1013</b>) to compensate for the global movement. For example, forward warped pictures (<b>1021</b>)-(<b>1023</b>) are generated from the corresponding input pictures (<b>1011</b>)-(<b>1013</b>) based on the vector (<b>1002</b>). Referring to <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, static pictures (e.g., (<b>1021</b>)-(<b>1023</b>)) having similar or identical features are generated from a video sequence (e.g., the input pictures (<b>1011</b>)-(<b>1013</b>)) having different features, and thus coding efficiency is improved as coding the static pictures having similar features can be more efficient than coding the video sequence having different features.</p><p id="p-0135" num="0132">The forward warped pictures (<b>1021</b>)-(<b>1023</b>) can be encoded at the encoder side to form coded pictures. In an example, warping information including warping parameter(s) (e.g., the vector (<b>1002</b>)) or the vector (<b>1001</b>)) is parameterized and coded into an SEI message (e.g., the WDPR SEI message). In an example, the warping information (e.g., including the vector (<b>1001</b>)) to be used in an inverse warping process at a decoder side is denoted as inverse warping information. The coded pictures and the SEI message can be transmitted to the decoder-side.</p><p id="p-0136" num="0133">Referring to <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, at the decoder side, the coded pictures can be decoded into decoded pictures (<b>1031</b>)-(<b>1033</b>) that correspond to the input pictures (<b>1011</b>)-(<b>1013</b>), respectively. The warping parameter(s) (e.g., the vector (<b>1002</b>) or the vector (<b>1001</b>)) can be determined based on the warping information in the encoded SEI message. In order to recover the original positions (<b>1091</b>)-(<b>1093</b>), an inverse warping process can be applied to the decoded pictures (<b>1031</b>)-(<b>1033</b>) to generate inverse warped pictures (<b>1041</b>)-(<b>1043</b>), and thus recovering the original global movement. In an example shown in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, the inverse warping process includes a shift of the decoded pictures toward an upper-right direction based on the vector (<b>1001</b>).</p><p id="p-0137" num="0134">The warping process (<b>1000</b>B) can be suitably adapted when the global movement is more complex, such as a global movement including a warping alteration of shape(s), size(s), and location(s) of a sequence of pictures. In an example, the global movement is represented by the four vectors in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, and the warping process (<b>1000</b>B) can be based on the four vectors as described with reference to <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0138" num="0135"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a flow chart outlining an encoding process (<b>1100</b>) according to an embodiment of the disclosure. The process (<b>1100</b>) can be used to encode a plurality of input pictures. In an example, the process (<b>1100</b>) includes performing a forward warping process. In various embodiments, the process (<b>1100</b>) is executed by processing circuitry, such as the processing circuitry in the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>), processing circuitry that performs functions of a video encoder (e.g., (<b>403</b>), (<b>603</b>), (<b>703</b>)), or the like. In some embodiments, the process (<b>1100</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>1100</b>). The process starts at (S<b>1101</b>), and proceeds to (S<b>1110</b>).</p><p id="p-0139" num="0136">At (S<b>1110</b>), warping parameters of a plurality of input pictures can be determined based on a global movement associated with the plurality of input pictures. The global movement can include a warping alteration of the plurality of input pictures. The warping alteration can include change(s) to a shape(s), size(s), and/or location(s) of the plurality of input pictures. The global movement can include any movement or a combination of movements, such as a translation(s), a rotation(s), and changes to a shape(s) of the plurality of input pictures. For example, when the global movement includes more than translation(s) (e.g., a translation denoted by the vector (<b>1002</b>) or (<b>1001</b>) in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>), the global movement may be represented by multiple vectors, such as the four vectors v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV </sup>shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. The warping parameters can include a horizontal component(s) and a vertical component(s) of (i) a single vector (e.g., (<b>1001</b>) or (<b>1002</b>)) or (ii) multiple vectors (e.g., v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV</sup>).</p><p id="p-0140" num="0137">At (S<b>1120</b>), a warping process can be applied to the plurality of input pictures based on the determined warping parameters. For example, the warping process is a forward warping process such as described with reference to <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>. Forward warped pictures (e.g., (<b>1021</b>)-(<b>1023</b>)) can be generated where a global movement of the forward warped pictures is less than the global movement of the plurality of input pictures (e.g., (<b>1011</b>)-(<b>1013</b>)). Accordingly, encoding the forward warped pictures can be more efficient than encoding the plurality of input pictures directly.</p><p id="p-0141" num="0138">The step (S<b>1120</b>) can be omitted in some applications when the process (<b>1100</b>) is used in certain applications, for example image stabilization, such as in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>.</p><p id="p-0142" num="0139">At (S<b>1130</b>), the forward warped pictures can be encoded into a bitstream. A supplemental enhancement information (SEI) message can be encoded where the SEI message can include a first flag indicating that the warping process is applied to the plurality of input pictures. The SEI message can indicate the warping parameters determined in (S<b>1110</b>). In an example, the SEI message is included in the bitstream.</p><p id="p-0143" num="0140">According to an embodiment of the disclosure, the warping process can be based the resampling process described with reference to <figref idref="DRAWINGS">FIG. <b>9</b></figref>. The SEI message can be a WDPR SEI message. Table 2 shows an exemplary syntax of the WDPR SEI message syntax.</p><p id="p-0144" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="259pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Warping-based decoded picture resampling SEI message syntax</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="217pt" align="left"/><colspec colname="1" colwidth="42pt" align="left"/><tbody valign="top"><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="217pt" align="left"/><colspec colname="2" colwidth="42pt" align="left"/><tbody valign="top"><row><entry>warping_based_decoded_picture_resampling( payloadSize ) {</entry><entry/></row><row><entry>&#x2003;warping_based_decoded_picture_resampling_cancel_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;if( !warping_based_decoded_picture_resampling_cancel_flag ) {</entry></row><row><entry>&#x2003;&#x2003;warping_based_decoded_picture_resampling_persistence_flag</entry><entry>u(1)</entry></row><row><entry>&#x2003;&#x2003;warping_mode_idc</entry><entry>u(4)</entry></row><row><entry>&#x2003;&#x2003;if( warping_mode == 0 ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;for( i = 0; i &#x3c; 4; i++ ) {</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;corner_vector_x[ i ]</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;&#x2003;corner_vector_y[ i ]</entry><entry>se(v)</entry></row><row><entry>&#x2003;&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;&#x2003;}</entry></row><row><entry>&#x2003;}</entry></row><row><entry>}</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0145" num="0141">The WDPR SEI message semantics can be described as below. The WDPR SEI message can provide information to enable a warping process of reconstructed samples of output pictures (e.g., decoded pictures) on a decoder side. In an example, the output pictures (e.g., the decoded pictures) are in a current layer and are part of a CLVS. Referring to <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, the WDPR SEI message can provide information to enable the warping process (<b>1000</b>A) of reconstructed samples of output pictures (e.g., the decoded pictures (<b>1053</b>)) for purposes such as converting the output pictures to motion stabilized pictures (e.g., the warped pictures (<b>1055</b>)) that provide better visual experiences. Referring to <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, the WDPR SEI message can provide information to enable a warping process (e.g., the inverse warping process in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>) of reconstructed samples of output pictures (e.g., the decoded pictures (<b>1031</b>)-(<b>1033</b>)) to recover the original global movement.</p><p id="p-0146" num="0142">The first flag (e.g., warping_based_decoded_picture_resampling_cancel_flag) being true (e.g., equal to 1) can indicate that the WDPR SEI message cancels the persistence of any previous WDPR SEI messages in an output order that applies to a current layer. The first flag (e.g., warping_based_decoded_picture_resampling_cancel_flag) being false (e.g., equal to 0) can indicate that the warping information (e.g., WDPR information) follows. In an example, the warping information is signaled when the first flag (e.g., warping_based_decoded_picture_resampling_cancel_flag) is false.</p><p id="p-0147" num="0143">In an example, the first flag (e.g., warping_based_decoded_picture_resampling_cancel_flag) indicates whether the warping process is applied to the plurality of input pictures. The first flag being true (e.g., equal to 1) can indicate that no warping process is applied to the plurality of input pictures. The first flag being false (e.g., equal to 0) can indicate that the warping process is applied to the plurality of input pictures.</p><p id="p-0148" num="0144">The warping information can include a second flag (e.g., warping_based_decoded_picture_resampling_persistence_flag), a warping mode identifier (e.g., warping_mode_idc), and warping parameters.</p><p id="p-0149" num="0145">The second flag (e.g., warping_based_decoded_picture_resampling_persistence_flag) can specify the persistence of the WDPR SEI message. The persistence can be specified for the current layer, for example. The second flag (e.g., the warping_based_decoded_picture_resampling_persistence_flag) being false (e.g., equal to 0) can specify that the WDPR SEI message applies to a current decoded picture only. For example, the current decoded picture is one of the output pictures in the current layer. The second flag (e.g., the warping_based_decoded_picture_resampling_persistence_flag) being true (e.g., equal to 1) can specify that the WDPR SEI message applies to the current decoded picture and persists for all subsequent pictures of the current layer in the output order until one or more conditions are true. The condition can include one or more of (i) a new CLVS of the current layer begins; (ii) the bitstream ends; and (iii) a picture in the current layer in an AU associated with a WDPR SEI message (e.g., different from the WDPR SEI message for the current decoded picture) is output that follows the current decoded picture in the output order.</p><p id="p-0150" num="0146">The warping mode identifier (e.g., warping_mode_idc) can specify a warping mode that is applied to the output pictures (e.g., cropped output pictures). In an example, the warping mode identifier (e.g., warping_mode_idc) being equal to 0 specifies that the warping process described above with reference to <figref idref="DRAWINGS">FIG. <b>9</b></figref> (e.g, used in H.263 Annex P) with four corner vectors including eight parameters is applied. The warping parameters can include the four corner vectors or the eight parameters. When the warping mode identifier (e.g., warping_mode_idc) is equal to 0, the four corner vectors denoted as (corner_vector_x[i], corner_vector_y[i]) are present in the SEI message. Other values of the warping mode identifier can indicate other warping modes. In an example, values greater than 1 for the warping mode identifier (e.g., warping_mode_idc) are reserved for future use, such as by ITU-T|ISO/IEC.</p><p id="p-0151" num="0147">A corner vector is denoted by variables corner_vector_x[i] and corner_vector_y[i]. Referring back to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the warping parameters, such as values of the four corner vectors v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV</sup>, can be determined by (corner_vector_x[0], corner_vector_y[0]), (corner_vector_x[1], corner_vector_y[1]), (corner_vector_x[2], corner_vector_y[2]), and (corner_vector_x[3], corner_vector_y[3]), respectively.</p><p id="p-0152" num="0148">The process (<b>1100</b>) proceeds to (S<b>1199</b>), and terminates.</p><p id="p-0153" num="0149">The process (<b>1100</b>) can be suitably adapted to various scenarios and steps in the process (<b>1100</b>) can be adjusted accordingly. One or more of the steps in the process (<b>1100</b>) can be adapted, omitted, repeated, and/or combined. Any suitable order can be used to implement the process (<b>1100</b>). Additional step(s) can be added.</p><p id="p-0154" num="0150">In an example, the warping information described with reference to Table 2 is included in another SEI message, such as the display orientation SEI message. For example, one or more syntax elements in Table 2 are combined with the syntax elements in Table 1.</p><p id="p-0155" num="0151">In an example, the process (<b>1100</b>) is used in certain applications that do not require step (S<b>1120</b>). For example, with the application is image stabilization, (S<b>1120</b>) can be omitted. The warping information in the SEI message can be used by a decoder at a decoder side to perform a warping process based on the warping information. (S<b>1130</b>) can be adapted such that the plurality of input pictures is encoded, instead of the forward warped pictures.</p><p id="p-0156" num="0152">In an example, the process (<b>1100</b>) is used to reduce a global movement, and (S<b>1120</b>) is performed as the forward warping process. The warping information in the SEI message can be used by the decoder at the decoder side to perform an inverse warping process based on the warping information.</p><p id="p-0157" num="0153">In an example, whether to perform the warping process for the plurality of input pictures is determined based on the global movement or motion jitter. If the warping process is determined to be performed for the plurality of input pictures at the encoder side and/or the corresponding decoded pictures at the decoder side, one or more steps of the process (<b>1100</b>) can be performed, as described in the disclosure. If the warping process is determined not to be performed, steps (S<b>1110</b>) and (S<b>1120</b>) are omitted. (S<b>1130</b>) can be adapted such that the plurality of input pictures is encoded and no SEI message is encoded.</p><p id="p-0158" num="0154"><figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a flow chart outlining a decoding process (<b>1200</b>) according to an embodiment of the disclosure. The process (<b>1200</b>) can be used to decode a current picture in a bitstream and perform a warping process on the current decoded picture. In various embodiments, the process (<b>1200</b>) is executed by processing circuitry, such as the processing circuitry in the terminal devices (<b>310</b>), (<b>320</b>), (<b>330</b>) and (<b>340</b>), the processing circuitry that performs functions of the video encoder (<b>403</b>), the processing circuitry that performs functions of the video decoder (<b>410</b>), the processing circuitry that performs functions of the video decoder (<b>510</b>), the processing circuitry that performs functions of the video encoder (<b>603</b>), and the like. In some embodiments, the process (<b>1200</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>1200</b>). The process starts at (S<b>1201</b>), and proceeds to (S<b>1210</b>).</p><p id="p-0159" num="0155">At (S<b>1210</b>), a current picture can be decoded based on a bitstream.</p><p id="p-0160" num="0156">At (S<b>1220</b>), first information (e.g., a first flag) indicating whether a warping process is applied to the current decoded picture can be determined from a SEI message. In an example, the SEI message is a display orientation SEI message in the bitstream, and the display orientation SEI message includes syntax elements (e.g., the first flag, the second flag, the warping mode identifier, and the corner vectors) such as shown in Table 2. In an example, the SEI message is a WDPR SEI message in the bitstream, such as described with reference to Table 2.</p><p id="p-0161" num="0157">In an example, the first flag is denoted as the warping_based_decoded_picture_resampling_cancel_flag described above. The first flag being false (e.g., equal to 0) can indicate that warping information is included in the SEI message and the warping process is applied. The first flag (e.g., warping_based_decoded_picture_resampling_cancel_flag) being true (e.g., equal to 1) can indicate that the SEI message cancels the persistence of any previous WDPR SEI messages in an output order that applies to a current layer and no warping process is applied.</p><p id="p-0162" num="0158">At (S<b>1230</b>), based on the first information (e.g., the first flag) indicating that the warping process is applied to the current decoded picture, the warping information of the warping process can be determined based on the SEI message.</p><p id="p-0163" num="0159">The warping information can indicate warping parameters, such as four corner vectors (e.g., v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV </sup>shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>) between corners of the current decoded picture and corresponding corners of the warped picture. In some examples, the warping parameters include a vector (e.g., the vector (<b>1001</b>) or (<b>1002</b>) in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>) indicating a shifting operation.</p><p id="p-0164" num="0160">In an example, the warping information indicates a warping mode (e.g., the warping mode having a warping mode identifier of 0), and the four corner vectors can be determined based on the warping mode.</p><p id="p-0165" num="0161">The warping information can include second information (e.g., a second flag). In an example, the second flag is denoted as the warping_based_decoded_picture_resampling_persistence_flag. The second flag having a first value (e.g., 0) indicates that the SEI message only applies to the current decoded picture. The second flag having a second value (e.g., 1) indicates that the SEI message applies to the current decoded picture and one or more subsequently decoded pictures of the current layer in an output order until a condition is satisfied. The condition can include one or more of the following (i) a new CLVS of the current layer begins; (ii) the bitstream ends; (iii) a picture in the current layer in an AU associated with a WDPR SEI message (e.g., different from the SEI message for the current decoded picture) is output that follows the current decoded picture in the output order.</p><p id="p-0166" num="0162">At (S<b>1240</b>), a warped picture can be determined from the current decoded picture based on the warping information, such as the warping parameters. In an example, the warping parameters can include the four corner vectors (e.g., v<sup>00</sup>, v<sup>H0</sup>, v<sup>0V</sup>, v<sup>HV </sup>shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>), and a vector between a sample position in the current decoded picture and a corresponding position in the warped picture can be determined based on the four corner vectors, for example, using Eq. 1.</p><p id="p-0167" num="0163">In an example, the second flag has the second value indicating that the SEI message applies to the current decoded picture and the one or more subsequently decoded pictures of the current layer in the output order. A subsequent picture of the current layer that follows the current picture in the output order can be decoded. A subsequent warped picture can be determined from the subsequently decoded picture based on the warping information.</p><p id="p-0168" num="0164">The process (<b>1200</b>) proceeds to (S<b>1299</b>), and terminates.</p><p id="p-0169" num="0165">The process (<b>1200</b>) can be suitably adapted to various scenarios and steps in the process (<b>1200</b>) can be adjusted accordingly. One or more of the steps in the process (<b>1200</b>) can be adapted, omitted, repeated, and/or combined. Any suitable order can be used to implement the process (<b>1200</b>). Additional step(s) can be added.</p><p id="p-0170" num="0166">In an example, based on the first flag indicating that the warping process indicated by a previous SEI message is cancelled, the warping process is not applied to the current decoded picture. Accordingly, the steps (S<b>1230</b>) and (S<b>1240</b>) are omitted.</p><p id="p-0171" num="0167">The process (<b>1200</b>) can be used in certain applications such as image stabilization, as shown in <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> for example, and no corresponding warping process is performed on the encoder side. The process (<b>1200</b>) can be used as an inverse warping process to compensate for global movements, such as shown in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> where a corresponding forward warping process is performed on the encoder side. In an example, the warping parameters in the SEI message is adapted based on whether the process (<b>1200</b>) is for image stabilization or is an inverse warping process to compensate for global movements. In an example, the warping parameters in the SEI message used for image stabilization or an inverse warping process in compensating for global movements are identical, and (S<b>1240</b>) can be adapted based on whether the process (<b>1200</b>) is for image stabilization or is an inverse warping process to compensate for global movements.</p><p id="p-0172" num="0168">Embodiments in the disclosure may be used separately or combined in any order. Further, each of the methods (or embodiments), an encoder, and a decoder may be implemented by processing circuitry (e.g., one or more processors or one or more integrated circuits). In one example, the one or more processors execute a program that is stored in a non-transitory computer-readable medium.</p><p id="p-0173" num="0169">The techniques described above, can be implemented as computer software using computer-readable instructions and physically stored in one or more computer-readable media. For example, <figref idref="DRAWINGS">FIG. <b>13</b></figref> shows a computer system (<b>1300</b>) suitable for implementing certain embodiments of the disclosed subject matter.</p><p id="p-0174" num="0170">The computer software can be coded using any suitable machine code or computer language, that may be subject to assembly, compilation, linking, or like mechanisms to create code comprising instructions that can be executed directly, or through interpretation, micro-code execution, and the like, by one or more computer central processing units (CPUs), Graphics Processing Units (GPUs), and the like.</p><p id="p-0175" num="0171">The instructions can be executed on various types of computers or components thereof, including, for example, personal computers, tablet computers, servers, smartphones, gaming devices, internet of things devices, and the like.</p><p id="p-0176" num="0172">The components shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref> for computer system (<b>1300</b>) are exemplary in nature and are not intended to suggest any limitation as to the scope of use or functionality of the computer software implementing embodiments of the present disclosure. Neither should the configuration of components be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary embodiment of a computer system (<b>1300</b>).</p><p id="p-0177" num="0173">Computer system (<b>1300</b>) may include certain human interface input devices. Such a human interface input device may be responsive to input by one or more human users through, for example, tactile input (such as: keystrokes, swipes, data glove movements), audio input (such as: voice, clapping), visual input (such as: gestures), olfactory input (not depicted). The human interface devices can also be used to capture certain media not necessarily directly related to conscious input by a human, such as audio (such as: speech, music, ambient sound), images (such as: scanned images, photographic images obtain from a still image camera), video (such as two-dimensional video, three-dimensional video including stereoscopic video).</p><p id="p-0178" num="0174">Input human interface devices may include one or more of (only one of each depicted): keyboard (<b>1301</b>), mouse (<b>1302</b>), trackpad (<b>1303</b>), touch screen (<b>1310</b>), data-glove (not shown), joystick (<b>1305</b>), microphone (<b>1306</b>), scanner (<b>1307</b>), camera (<b>1308</b>).</p><p id="p-0179" num="0175">Computer system (<b>1300</b>) may also include certain human interface output devices. Such human interface output devices may be stimulating the senses of one or more human users through, for example, tactile output, sound, light, and smell/taste. Such human interface output devices may include tactile output devices (for example tactile feedback by the touch-screen (<b>1310</b>), data-glove (not shown), or joystick (<b>1305</b>), but there can also be tactile feedback devices that do not serve as input devices), audio output devices (such as: speakers (<b>1309</b>), headphones (not depicted)), visual output devices (such as screens (<b>1310</b>) to include CRT screens, LCD screens, plasma screens, OLED screens, each with or without touch-screen input capability, each with or without tactile feedback capability&#x2014;some of which may be capable to output two dimensional visual output or more than three dimensional output through means such as stereographic output; virtual-reality glasses (not depicted), holographic displays and smoke tanks (not depicted)), and printers (not depicted).</p><p id="p-0180" num="0176">Computer system (<b>1300</b>) can also include human accessible storage devices and their associated media such as optical media including CD/DVD ROM/RW (<b>1320</b>) with CD/DVD or the like media (<b>1321</b>), thumb-drive (<b>1322</b>), removable hard drive or solid state drive (<b>1323</b>), legacy magnetic media such as tape and floppy disc (not depicted), specialized ROM/ASIC/PLD based devices such as security dongles (not depicted), and the like.</p><p id="p-0181" num="0177">Those skilled in the art should also understand that term &#x201c;computer readable media&#x201d; as used in connection with the presently disclosed subject matter does not encompass transmission media, carrier waves, or other transitory signals.</p><p id="p-0182" num="0178">Computer system (<b>1300</b>) can also include an interface (<b>1354</b>) to one or more communication networks (<b>1355</b>). Networks can for example be wireless, wireline, optical. Networks can further be local, wide-area, metropolitan, vehicular and industrial, real-time, delay-tolerant, and so on. Examples of networks include local area networks such as Ethernet, wireless LANs, cellular networks to include GSM, 3G, 4G, 5G, LTE and the like, TV wireline or wireless wide area digital networks to include cable TV, satellite TV, and terrestrial broadcast TV, vehicular and industrial to include CANBus, and so forth. Certain networks commonly require external network interface adapters that attached to certain general purpose data ports or peripheral buses (1349) (such as, for example USB ports of the computer system (<b>1300</b>)); others are commonly integrated into the core of the computer system (<b>1300</b>) by attachment to a system bus as described below (for example Ethernet interface into a PC computer system or cellular network interface into a smartphone computer system). Using any of these networks, computer system (<b>1300</b>) can communicate with other entities. Such communication can be uni-directional, receive only (for example, broadcast TV), uni-directional send-only (for example CANbus to certain CANbus devices), or bi-directional, for example to other computer systems using local or wide area digital networks. Certain protocols and protocol stacks can be used on each of those networks and network interfaces as described above.</p><p id="p-0183" num="0179">Aforementioned human interface devices, human-accessible storage devices, and network interfaces can be attached to a core (<b>1340</b>) of the computer system (<b>1300</b>).</p><p id="p-0184" num="0180">The core (<b>1340</b>) can include one or more Central Processing Units (CPU) (<b>1341</b>), Graphics Processing Units (GPU) (<b>1342</b>), specialized programmable processing units in the form of Field Programmable Gate Areas (FPGA) (<b>1343</b>), hardware accelerators for certain tasks (<b>1344</b>), graphics adapters (<b>1350</b>), and so forth. These devices, along with Read-only memory (ROM) (<b>1345</b>), Random-access memory (<b>1346</b>), internal mass storage such as internal non-user accessible hard drives, SSDs, and the like (<b>1347</b>), may be connected through a system bus (<b>1348</b>). In some computer systems, the system bus (<b>1348</b>) can be accessible in the form of one or more physical plugs to enable extensions by additional CPUs, GPU, and the like. The peripheral devices can be attached either directly to the core's system bus (<b>1348</b>), or through a peripheral bus (<b>1349</b>). In an example, the screen (<b>1310</b>) can be connected to the graphics adapter (<b>1350</b>). Architectures for a peripheral bus include PCI, USB, and the like.</p><p id="p-0185" num="0181">CPUs (<b>1341</b>), GPUs (<b>1342</b>), FPGAs (<b>1343</b>), and accelerators (<b>1344</b>) can execute certain instructions that, in combination, can make up the aforementioned computer code. That computer code can be stored in ROM (<b>1345</b>) or RAM (<b>1346</b>). Transitional data can be stored in RAM (<b>1346</b>), whereas permanent data can be stored for example, in the internal mass storage (<b>1347</b>). Fast storage and retrieve to any of the memory devices can be enabled through the use of cache memory, that can be closely associated with one or more CPU (<b>1341</b>), GPU (<b>1342</b>), mass storage (<b>1347</b>), ROM (<b>1345</b>), RAM (<b>1346</b>), and the like.</p><p id="p-0186" num="0182">The computer readable media can have computer code thereon for performing various computer-implemented operations. The media and computer code can be those specially designed and constructed for the purposes of the present disclosure, or they can be of the kind well known and available to those having skill in the computer software arts.</p><p id="p-0187" num="0183">As an example and not by way of limitation, the computer system having architecture (<b>1300</b>), and specifically the core (<b>1340</b>) can provide functionality as a result of processor(s) (including CPUs, GPUs, FPGA, accelerators, and the like) executing software embodied in one or more tangible, computer-readable media. Such computer-readable media can be media associated with user-accessible mass storage as introduced above, as well as certain storage of the core (<b>1340</b>) that are of non-transitory nature, such as core-internal mass storage (<b>1347</b>) or ROM (<b>1345</b>). The software implementing various embodiments of the present disclosure can be stored in such devices and executed by core (<b>1340</b>). A computer-readable medium can include one or more memory devices or chips, according to particular needs. The software can cause the core (<b>1340</b>) and specifically the processors therein (including CPU, GPU, FPGA, and the like) to execute particular processes or particular parts of particular processes described herein, including defining data structures stored in RAM (<b>1346</b>) and modifying such data structures according to the processes defined by the software. In addition or as an alternative, the computer system can provide functionality as a result of logic hardwired or otherwise embodied in a circuit (for example: accelerator (<b>1344</b>)), which can operate in place of or together with software to execute particular processes or particular parts of particular processes described herein. Reference to software can encompass logic, and vice versa, where appropriate. Reference to a computer-readable media can encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware and software.</p><heading id="h-0007" level="1">APPENDIX A: ACRONYMS</heading><p id="p-0188" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0184">JEM: joint exploration model</li>    <li id="ul0001-0002" num="0185">VVC: versatile video coding</li>    <li id="ul0001-0003" num="0186">BMS: benchmark set</li>    <li id="ul0001-0004" num="0187">MV: Motion Vector</li>    <li id="ul0001-0005" num="0188">HEVC: High Efficiency Video Coding</li>    <li id="ul0001-0006" num="0189">SEI: Supplementary Enhancement Information</li>    <li id="ul0001-0007" num="0190">VUI: Video Usability Information</li>    <li id="ul0001-0008" num="0191">GOPs: Groups of Pictures</li>    <li id="ul0001-0009" num="0192">TUs: Transform Units,</li>    <li id="ul0001-0010" num="0193">PUs: Prediction Units</li>    <li id="ul0001-0011" num="0194">CTUs: Coding Tree Units</li>    <li id="ul0001-0012" num="0195">CTBs: Coding Tree Blocks</li>    <li id="ul0001-0013" num="0196">PBs: Prediction Blocks</li>    <li id="ul0001-0014" num="0197">HRD: Hypothetical Reference Decoder</li>    <li id="ul0001-0015" num="0198">SNR: Signal Noise Ratio</li>    <li id="ul0001-0016" num="0199">CPUs: Central Processing Units</li>    <li id="ul0001-0017" num="0200">GPUs: Graphics Processing Units</li>    <li id="ul0001-0018" num="0201">CRT: Cathode Ray Tube</li>    <li id="ul0001-0019" num="0202">LCD: Liquid-Crystal Display</li>    <li id="ul0001-0020" num="0203">OLED: Organic Light-Emitting Diode</li>    <li id="ul0001-0021" num="0204">CD: Compact Disc</li>    <li id="ul0001-0022" num="0205">DVD: Digital Video Disc</li>    <li id="ul0001-0023" num="0206">ROM: Read-Only Memory</li>    <li id="ul0001-0024" num="0207">RAM: Random Access Memory</li>    <li id="ul0001-0025" num="0208">ASIC: Application-Specific Integrated Circuit</li>    <li id="ul0001-0026" num="0209">PLD: Programmable Logic Device</li>    <li id="ul0001-0027" num="0210">LAN: Local Area Network</li>    <li id="ul0001-0028" num="0211">GSM: Global System for Mobile communications</li>    <li id="ul0001-0029" num="0212">LTE: Long-Term Evolution</li>    <li id="ul0001-0030" num="0213">CANBus: Controller Area Network Bus</li>    <li id="ul0001-0031" num="0214">USB: Universal Serial Bus</li>    <li id="ul0001-0032" num="0215">PCI: Peripheral Component Interconnect</li>    <li id="ul0001-0033" num="0216">FPGA: Field Programmable Gate Areas</li>    <li id="ul0001-0034" num="0217">SSD: solid-state drive</li>    <li id="ul0001-0035" num="0218">IC: Integrated Circuit</li>    <li id="ul0001-0036" num="0219">CU: Coding Unit</li>    <li id="ul0001-0037" num="0220">R-D: Rate-Distortion</li></ul></p><p id="p-0189" num="0221">While this disclosure has described several exemplary embodiments, there are alterations, permutations, and various substitute equivalents, which fall within the scope of the disclosure. It will thus be appreciated that those skilled in the art will be able to devise numerous systems and methods which, although not explicitly shown or described herein, embody the principles of the disclosure and are thus within the spirit and scope thereof.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230007306A1-20230105-M00001.NB"><img id="EMI-M00001" he="9.48mm" wi="76.20mm" file="US20230007306A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for video decoding in a video decoder, comprising:<claim-text>decoding a current picture based on a bitstream;</claim-text><claim-text>determining, from a supplemental enhancement information (SEI) message, a first flag indicating whether a warping process is applied to the current decoded picture;</claim-text><claim-text>based on the first flag indicating that the warping process is applied to the current decoded picture, determining warping information of the warping process based on the SEI message, and determining a warped picture from the current decoded picture based on the warping information.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the SEI message is a display orientation SEI message in the bitstream.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the SEI message is a warping-based decoded picture resampling (WDPR) SEI message in the bitstream.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the warping information indicates four corner vectors between corners of the current decoded picture and corresponding corners of the warped picture.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the determining the warped picture comprises:<claim-text>determining a vector between a sample position in the current decoded picture and a corresponding position in the warped picture based on the four corner vectors.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>based on the first flag indicating that the warping process indicated by a previous SEI message is cancelled, the warping process is not applied to the current decoded picture.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the warping information includes a second flag,</claim-text><claim-text>based on the second flag having a first value, the SEI message only applies to the current decoded picture, and</claim-text><claim-text>based on the second flag having a second value, the SEI message applies to the current decoded picture and one or more subsequently decoded pictures of a current layer in an output order until a condition is satisfied.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein<claim-text>the second flag has the second value, and</claim-text><claim-text>the method further includes<claim-text>decoding a subsequent picture of the current layer that follows the current picture in the output order, and</claim-text><claim-text>determining a warped picture from the subsequently decoded picture based on the warping information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the condition includes a new coded layer video sequence (CLVS) of the current layer.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein<claim-text>the warping information indicates a warping mode, and</claim-text><claim-text>the determining the warping information includes determining the four corner vectors based on the warping mode.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. An apparatus for video decoding, comprising:<claim-text>processing circuitry configured to:<claim-text>decode a current picture based on a bitstream;</claim-text><claim-text>determine, from a supplemental enhancement information (SEI) message, a first flag indicating whether a warping process is applied to the current decoded picture;</claim-text><claim-text>based on the first flag indicating that the warping process is applied to the current decoded picture, determine warping information of the warping process based on the SEI message, and</claim-text><claim-text>determine a warped picture from the current decoded picture based on the warping information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the SEI message is a display orientation SEI message in the bitstream.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the SEI message is a warping-based decoded picture resampling (WDPR) SEI message in the bitstream.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the warping information indicates four corner vectors between corners of the current decoded picture and corresponding corners of the warped picture.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processing circuitry is configured to:<claim-text>determine a vector between a sample position in the current decoded picture and a corresponding position in the warped picture based on the four corner vectors.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>based on the first flag indicating that the warping process indicated by a previous SEI message is cancelled, the warping process is not applied to the current decoded picture.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>the warping information includes a second flag,</claim-text><claim-text>based on the second flag having a first value, the SEI message only applies to the current decoded picture, and</claim-text><claim-text>based on the second flag having a second value, the SEI message applies to the current decoded picture and one or more subsequently decoded pictures of a current layer in an output order until a condition is satisfied.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein<claim-text>the second flag has the second value, and</claim-text><claim-text>the processing circuitry is configured to<claim-text>decode a subsequent picture of the current layer that follows the current picture in the output order, and</claim-text><claim-text>determine a warped picture from the subsequently decoded picture based on the warping information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the condition includes a new coded layer video sequence (CLVS) of the current layer.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer-readable storage medium storing a program executable by at least one processor to perform:<claim-text>decoding a current picture based on a bitstream;</claim-text><claim-text>determining, from a supplemental enhancement information (SEI) message, a first flag indicating whether a warping process is applied to the current decoded picture;</claim-text><claim-text>based on the first flag indicating that the warping process is applied to the current decoded picture, determining warping information of the warping process based on the SEI message, and</claim-text><claim-text>determining a warped picture from the current decoded picture based on the warping information.</claim-text></claim-text></claim></claims></us-patent-application>