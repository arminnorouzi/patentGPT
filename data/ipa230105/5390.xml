<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005391A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005391</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17364777</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>09</class><subclass>C</subclass><main-group>1</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>09</class><subclass>C</subclass><main-group>1</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>604</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>31</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">POLYMORPHIC ENCRYPTION FOR SECURITY OF A DATA VAULT</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SKYFLOW, INC.</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Sharma</last-name><first-name>Anshu</first-name><address><city>Los Altos</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Khot</last-name><first-name>Prakash</first-name><address><city>Andover</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Reddy</last-name><first-name>Pradeep</first-name><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Saha</last-name><first-name>Roshmik</first-name><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Polymorphic encryption is described in a way to restrict access and enhance security of a data vault. In an example, the data vault has a primary partition with a first subset of records having an encrypted value for each of at least a portion of the fields encrypted according to a first encryption scheme. A secondary partition has a second subset of the records encrypted according to a second encryption scheme that is different from the first encryption scheme. The first encryption scheme is configured to permit a first set of operations on the values when the values are encrypted and the second encryption scheme is configured to permit a second set of operations on the values when the values are encrypted.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="204.81mm" wi="126.07mm" file="US20230005391A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="152.91mm" wi="119.21mm" file="US20230005391A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="190.08mm" wi="164.25mm" file="US20230005391A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="246.55mm" wi="174.58mm" file="US20230005391A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="177.97mm" wi="177.72mm" file="US20230005391A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="243.76mm" wi="175.85mm" file="US20230005391A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="98.98mm" wi="151.89mm" file="US20230005391A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="156.38mm" wi="150.11mm" file="US20230005391A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="156.38mm" wi="150.11mm" file="US20230005391A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="222.59mm" wi="128.10mm" file="US20230005391A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="142.58mm" wi="164.00mm" file="US20230005391A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">Embodiments of the invention relate to the field of data security; and more specifically, to polymorphic encryption applied to multiple data partitions of a secure data vault.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">In recent decades, businesses have significantly increased the amount of sensitive data they collect in order to create personalized customer experiences and unlock new growth opportunities. At the same time, secure data storage has become more difficult as private and state actors relentlessly strive to obtain unauthorized access to private data. Recently the personal, medical, and financial records of many private data repositories have been exposed to the public. Other records have been stolen and sold to third parties. In response to the frequent exposure of private information, some governments have implemented new laws requiring that certain kinds of data, such as personal and health information be kept secure. At the same time business success may require that trade secrets and business relationships also be kept secure.</p><p id="p-0004" num="0003">One approach to thwart the great variety, pervasiveness, and number of the attacks is to encrypt the data in a specialized private data repository. Encrypting the data renders the data useless unless it can be decrypted, but it also makes the data difficult to use. There are two primary approaches to using encrypted data. A first approach is for the user of the data store to decrypt the data, operate on the data, re-encrypt the data, and then store the data again. This requires that the data be sent and received between the data store and the user and it requires that the user have decryption rights, creating attack vectors. If multiple parties are able to access, decrypt, and re-encrypt the data, then an attacker has multiple vectors of attack with each party.</p><p id="p-0005" num="0004">A second approach is to perform the operations in the data store while the data is encrypted. Such operations are very difficult or impossible to perform so that it becomes more expensive to use the data. One variety of this approach is referred to as fully homomorphic encryption which attempts to allow operations to be performed on data while the data is encrypted. Currently, the available types of fully homomorphic encryption are limited and complex. The operations require significant processing resources to accomplish. These expenses have significantly limited the development of any functioning fully homomorphic database.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWING FIGURES</heading><p id="p-0006" num="0005">The invention may best be understood by referring to the following description and accompanying drawings that are used to illustrate embodiments of the invention. In the drawings:</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a high-speed infrastructure with high availability and security in combination according to embodiments of the invention;</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a system with multiple account access to data vaults according to embodiments of the invention;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a secure vault in a data plane with control plane access according to embodiments of the invention;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of a configuration of access to a data vault according to embodiments of the invention;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of a GUI (Graphical User Interface) for an example schema for a customer identity data vault according to embodiments of the invention;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram of a GUI (Graphical User Interface) for an example schema for a payments data vault according to embodiments of the invention;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a decision tree diagram for selecting a DLP (Data Loss Prevention) policy</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram of a secure data vault configured with different partitions to support different roles according to embodiments of the invention;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram of a secure data vault configured in different partitions to support different DLP policies according to embodiments of the invention;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a process flow diagram of configuring a secure data vault according to embodiments of the invention; and</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of a computer system according to embodiments of the invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0018" num="0017">Data security systems seek to find some compromise between access and security. Access is commonly understood as a large number of users having very fast and convenient access to everything that they might want or need. This access is preferably platform-agnostic and reliable so that redundant copies of the data are stored on different hardware platforms and locations that are accessible from any user location including mobile devices. This typically entails providing the data over a range of different networks, both wired and wireless, that are controlled by different operators. Security is commonly understood as password protection and encryption. Passwords can be replaced with biometric information, such as fingerprint, face, or retina scanners, but in most cases these are provided for user convenience and the system can be accessed with a password alone. Some systems have adopted two-factor authentication and a few systems operate with point-to-point encryption. Many systems have different levels of permission to restrict data access to particular classes of users. The permission levels are protected again with passwords. While the objective of immediate and universal data access has largely been achieved with many networks and systems, data security has frequently been compromised.</p><p id="p-0019" num="0018">A common approach towards protecting sensitive data has been to use a number of encryption and tokenization solutions to de-identify the data, ensuring that the data cannot be exploited when it is exposed. The challenge with this approach is that once the data is encrypted, it is no longer useful to the applications and tools that need it to drive the business.</p><p id="p-0020" num="0019">As described herein, a secure data vault is implemented that provides access with security by isolating sensitive data and by providing multiple different encryption forms that are tailored specifically to different users' needs. The sensitive data can be quickly operated on without decrypting the data and often without sending or receiving any sensitive data. When the stored data stays encrypted, and is only transmitted in encrypted form, if at all, then it can be stored redundantly in local and cloud copies with less risk.</p><p id="p-0021" num="0020">While it may be common to store sensitive data in full form, well-annotated and well-referenced, in many instances, this is not necessary. In many scenarios, a user only requires access to a portion of the information. In many scenarios, the user does not require any of the information but only a result determined using the information, such as an average, a maximum, a number of entries or confirmation of some or all of a value. Instead of granting limited access to a large data set, a new data set may be created that has only the necessary information for a particular scenario. A secure data store may be built by identifying a class of users, determining the data that the class of users requires, determining the operations that the class of users requires to perform on that data, and determining an encryption scheme that supports the required operations. The same data may be prepared for more than one class of users. The data may be encrypted in a different way, and stored as a separate copy for each class of users or even for different operations required by the same class of users. With the operations and encryptions determined, that data may then be stored in encrypted form. Security is enhanced if the encrypted data and access control to the encrypted data is isolated from other stored data.</p><p id="p-0022" num="0021">In embodiments described herein, each category of sensitive data is interpreted as a unique data structure composed of different components which can have different use cases. The use cases are identified and different encryption, tokenization and redaction algorithms are used to run operations for each use case on fully encrypted data. In this way, a telephone number is not encrypted in the same way that an email address, social security number, or driver's license number is encrypted. A telephone number may be identified as a complex data type composed of three or more unique structures, such as country code, an area code, and a local code. Each of these components has a different use case. A business may use the country code to understand how many international users it has or which call center to route an incoming call to. The area code may be used to understand customer distribution by area code or used to segment other attributes such as income by area code. Lastly, the local code may be shown in a masked form to verify the correct phone number for multi-factor authentication. These are just a few examples of uses for a telephone number there may be many others and all or parts of other fields may similarly by used in many different ways. The telephone number provides an example of data that may be separated into different parts or different parts may be masked or redacted. The parts may each be stored differently for different uses. In addition, the same part may be stored in different ways for different uses. This may apply also to other data fields.</p><p id="p-0023" num="0022">Telephone numbers may be used to suggest information about the customers in the database. An e-mail address suggests very different information. The top level domain might suggest a location such as .se for Sweden or it may suggest other information such as .tech or .org. The second level domain indicates the e-mail provider which may or may not suggest an employer and the e-mail name may or may not suggest a name or an identity. A social security number suggests almost nothing about a person except that numerically higher numbers were issued later. Because the information in each type of sensitive data is different, a user requires different operations for different types of data.</p><p id="p-0024" num="0023">Consider, for example, the telephone number with three fields, the country code, area code, and the local code. These fields may be encrypted differently in different copies each to support a different use case. At least some of the copies may not include the entire telephone number. The unnecessary parts may be masked or redacted. The different encryptions may be selected to enable operations to run on the data without decrypting the data. For example, a user may wish to perform exact matches in order to find records in the secure data vault that have the same area code and then to match persons in the same area code with an income field to determine an average income within the area code. The area code may be encrypted without the country code and local code and stored independent of the other fields. The encryption type may be based on supporting the matching function for the area code on fully encrypted data. The income field corresponding to the selected area code may be encrypted in a format that allows an average of the incomes to be taken without exposing any one income in that or any other area code. This configuration allows an average income to be determined by area code without ever decrypting the area code or the income data.</p><p id="p-0025" num="0024">The telephone number may also be separately encrypted by using a redaction algorithm on the local code to mask the country code and the area code and only show the last four numbers for identity verification. In this way, different portions of the telephone number have been encrypted differently using two different encryption algorithms to facilitate different operations on the fully encrypted data for different use cases. When the different use cases are known from the start then the different versions of the data can be created at the time that the data is ingested. When new use cases are added later, then another different version may be created as a background process. This may be described as encrypted projections to optimize for query performance and may be considered to be analogous to a traditional database system using indexes as projections to optimize query performance.</p><p id="p-0026" num="0025">The data in its different versions may be made accessible through APIs (Application Programming Interface) so that different versions of the same data may be retrieved based on the parameters of a particular API. For example, a customer service application that has access only to social security numbers in a redacted form can use an API with one set of parameters. Another application that has access to social security numbers in a plain-text or masked form, can use an API with a different set of parameters.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a high-speed infrastructure with high availability and security in combination. In this infrastructure <b>102</b> a user <b>104</b> has access to resources through an app <b>106</b>, through a web interface <b>108</b> or through any other suitable interface. The user may be a member, vendor, customer, or employee of an enterprise. Other users obtain access to enterprise resources in the same or a similar way. All of the interfaces connect through a backend <b>110</b>. Privacy-first APIs may be configured to be highly available and backed by a highly secure backend hosted on a cloud service or a local network. The user <b>104</b> may be isolated by the backend for different services across customer instances to ensure unparalleled security and privacy. On one side, the backend is coupled to and may be hosted by an intranet <b>112</b> to support internal business processes of the enterprise. On another side, the backend is coupled to and may be hosted by cloud services <b>122</b> for wide availability.</p><p id="p-0028" num="0027">The intranet <b>112</b> includes a discrete secure vault <b>114</b> that is isolated from other resources. The intranet also includes any business services <b>116</b> used to support the work of the enterprise and connections to other users <b>118</b> that may also be working with the business services <b>116</b>. The cloud hosting <b>122</b> may be used to host a vault <b>124</b>, cloud services <b>126</b> used by the enterprise, and a virtual network <b>128</b> that provides connections to other resources and users of the enterprise. The vault <b>114</b> on the local side <b>112</b> and the vault <b>124</b> on the cloud-hosted side <b>122</b> may be hosted in different regions and availability zones to ensure availability and to transparently handle and recover from failures without service disruption. Synchronous data replication may be employed to minimize data loss in the event of local failures. In embodiments, users <b>104</b> are allowed access to all of the services <b>118</b>, <b>118</b>, <b>126</b>, <b>128</b> through apps <b>106</b> and other interfaces <b>108</b> but are only allowed access to the vault <b>114</b>, <b>124</b> when needed and only through dynamic, fine-grained policies.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a system with multiple account access to data vaults. An account <b>204</b> includes a workspace <b>206</b> that includes one or more data vaults <b>208</b>-<b>1</b>, <b>208</b>-<b>2</b>, <b>208</b>-<b>3</b>. The data vaults are secure and use sophisticated privacy technology to keep data secure and private. The vaults <b>208</b> may be isolated, highly distributed, and highly available to store sensitive data. The data may be encrypted at rest, in transit, and in-memory while being processed. This constant encryption dramatically improves business security posture, as a significant number of data breaches happen on in-memory data. On top of strong encryption, the vaults <b>208</b> may incorporate several privacy-preserving technologies to protect sensitive data.</p><p id="p-0030" num="0029">The data in a vault may be configured in any of a variety of different ways. In embodiments, a high-level schema is provided as a working template based on typical business needs. The template may include fields and relations in a database format. For example, a customer identity vault template may include the sensitive fields a business would typically want to collect about a customer (e.g., name, email, address, telephone number, billing account, organization, date of birth, etc.). An administrator may add or delete fields and populate the template with actual data.</p><p id="p-0031" num="0030">In some embodiments, enterprise-grade governance tools <b>210</b> control access to the account and the vaults. The governance tools may include any of a variety of different policy-based access controls <b>212</b> and audit, logging, and compliance controls <b>214</b> to grant or deny access to data in the vaults <b>208</b>. Data sets in a data vault may have corresponding audit logs that record all events. The logs may be aggregated and reported in analysis, audit, and metrics dashboards. The governance tools may also provide a Role-Based Access Control (RBAC) model in addition to a Policy-Based Access Control model. RBAC provides easy access control to stakeholders based on roles and privileges.</p><p id="p-0032" num="0031">Users <b>232</b>, applications <b>234</b>, and administrators <b>236</b> obtain access to the governance tools through a direct interface <b>222</b>, such as a browser interface and administrative console, or through APIs (Application Programming Interfaces) <b>224</b>, such as REST (Representational State Transfer) APIs, management APIs, and vault APIs. The browser interface may be used to enable data exploration and account management with a simple graphical user interface. Clicking on various links, panes, windows, and dialog boxes may be configured to drive queries and other operations. The APIs allow applications and user interfaces to obtain access to the data vaults for a variety of user functions. The APIs may also be used for account and workspace management functions.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a secure vault in a data plane with control plane access to indicate some of the roles that may be supported. The accounts <b>302</b> as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> gain access to the vault <b>307</b> through a workspace <b>305</b>. The accounts and the workspace may be considered to be in a control plane <b>304</b> and the vault may be considered to be in a data plane <b>306</b>. Within the control plane are a class of workspace users <b>310</b> that have roles that require access to the workspace and limited access to the encrypted data in the vault based on roles and allowed policies. For the roles of these workspace users <b>310</b>, the vault data is encrypted.</p><p id="p-0034" num="0033">The roles may include administrative roles. A role for an account administrator <b>312</b> may include ability to add new accounts for new interfaces and add new roles for those interfaces. A role for a workspace administrator <b>314</b> may include controlling access to the workspace including one or more data vaults and managing the workspace and the data stored in the data vaults. A workspace administrator role may include policies for viewing and editing the secure data in plain text or any other suitable native or human-readable format.</p><p id="p-0035" num="0034">Vault roles have access to the data in the data plane <b>306</b> that resides in the data vault <b>307</b>. A vault creator <b>316</b> may have an ability to create the schema for the data in the vault and to populate the data in the vault. A vault owner <b>318</b> may serve as a custodian of the data in the vault and may control access to the data in the vault. This may include creating roles or policies that allow for access to the vault data. A vault viewer <b>320</b> may have access to view and edit the data in the vault but may be prohibited from viewing the data in plain text as the vault owner can. A vault viewer <b>322</b> may have access to view the data in the vault with certain limitations but not to edit or modify or delete any data. The various roles shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> are provided as examples and the capabilities, names, and other characteristics of any one or more of these roles may be modified to suit any particular circumstance.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram of a configuration of access to a data vault <b>408</b>. Interfaces <b>422</b> which may include user interfaces <b>126</b> and APIs <b>124</b> are each coupled to a governance layer through associations with one or more roles <b>410</b>. The roles are each associated with one or more policies <b>411</b> and with one or more interfaces. The policies allow access to the data vault <b>408</b>. The governance layer provides a set of capabilities that enable customers to govern and control access to sensitive data that reside in the data vault. The governance layer enforces granular, real-time decisions on every data access request with minimum latency. The user interfaces <b>126</b>, using a browser or console, allow a policy expression language and an accompanying policy code editor to be used to author complex and condition-based access rules as policies <b>411</b>. Each role corresponds to a grouping of policies that allow a user or group of users to act in that role, such as account representative, physician, billing, scheduling, customer support etc. Stated another way, policies are reusable sets of access rules that can be attached to one or more roles. The policies allow a dynamic, granular, real-time, condition-based set of rules to govern access to the vault. The policies associated with the role allow the user in that role to perform only those operations that are needed for the role.</p><p id="p-0037" num="0036">The plurality of roles allows an approach of isolate, protect, and harness to manage sensitive data access. Applications are allowed to communicate with each other and to share data through the APIs <b>124</b>. This harnesses the value of the sensitive data. However, each API is associated with only selected roles. The policies may be configured to employ data loss prevention techniques such as tokenization, redaction, masking, and encrypted computing so that the same data is shared differently depending on the assigned role. In an example, a vault owner creates a policy, then authors a set of granular rules for it. The vault owner can then attach this policy to one or more roles. This action grants a set of permissions to the role. The role can then be assigned to users (UI) or Service Accounts (API).</p><p id="p-0038" num="0037">In one example, a credit card applicant sees her own PII (Personally Identifiable Information) including her SSN (Social Security Number) in plain text. However, a customer support agent sees only the last 4 digits of her SSN for identity verification purposes. The rest is masked. In another example, a front-office staffer leverages the power of encrypted computation to match the SSN of a customer without ever viewing the entire SSN column in plain text. Only a confirmation of the match is displayed. In the United States, the SSN is a unique nine-digit number assigned to a person for taxpayer identification purposes. It is also used for banking, medical, and insurance transactions. In another example, a physician can view and edit medication information of only those patients she treats and not the entire patient database. In another example, medical test and treatment results for a patient are shared with government officials only if the patient has given consent to share their data.</p><p id="p-0039" num="0038">The policies and the structure of the data vault may be used to minimize data access with granular access control. The attack surface area of sensitive data is reduced. The roles may be used to ensure that user interfaces and apps have access only to the specific fields needed to perform the permitted operations that support a legitimate business function. In the example of a data table model, very granular and condition-based access policies may be provided by using column-level and row-level access control, support for SQL WHERE clauses, and Common Expression Language.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of a GUI (Graphical User Interface) for an example schema for a customer identity data vault. Such a GUI may be presented to a workplace administrator, vault creator, vault editor, or vault owner. The schema <b>500</b> is represented as a relational database with linked tables, but any other storage format may be used. The customer identity vault is an example of a structure for storing sensitive personal information. More or less information may be stored, depending on the needs of the users. The same or a similar structure may be used for other types of information. In this example, customer identity encompasses all the personal information related to an individual customer or user needed by the vault's users. Identity could include everything from demographic data such as gender and race, to contact information such as email and phone number, to key personal identifiers like SSN. The present schema <b>500</b> has four tables inside the customer identity vault, a persons table <b>502</b>, an identifiers table <b>504</b>, a contacts table <b>506</b>, and an organizations table <b>508</b>. The tables are illustrated with a single column showing a label for each row. The next column to the right which is not shown contains values for a particular customer. Each column is directed to a different customer. Each table will have hundreds, thousands or more columns, there being one for each customer. The particular configuration of rows and columns may be modified to suit any different data sets and use scenarios.</p><p id="p-0041" num="0040">The tables are all connected or related by an index field <b>510</b>, <b>512</b>, <b>514</b>, <b>516</b> which is called skyflow_id in this example. The index field uniquely identifies a particular customer. Each field in the vault (e.g., skyflow_id, SSN, gender, etc.) may also have an associated privacy data type, as described in more detail below. A vault owner or workspace manager can insert data into the vault from an interface or API by entering the parameters that are to be changed. An interface may allow for a user to identify a table or object, a row, and a column, and then the new or different value that is to be written there. In some embodiments, the new values are indicated in a JSON (JavaScript Object Notation) format.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram of a GUI for an example schema for a payments data vault. The payments schema <b>600</b> is also represented as a relational database with linked tables but any other storage format may be used. The payment vault structure <b>600</b> has six tables or objects, however, there may be more or fewer to suit different applications. In this example, there is a consumers table <b>602</b> for a profile of each consumer, including information such as name, address, email etc. A credit scores table <b>604</b> includes consumer credit data such as credit scores and credit reports. A cards table <b>606</b> contains card information including PAN (Primary Account Number), expiration date, issuing country etc. A transactions table <b>608</b> contains payment transaction-related data including merchant, amount, transaction validation result, etc. A merchants table <b>610</b> contains merchant profiles. The type of merchant may be modified to suit a particular business. The merchants may be vendors, customers, partners, or other merchants. A financial service provider table <b>612</b> has information about the financial service providers that are used by the company that owns the vault.</p><p id="p-0043" num="0042">This example payments data vault <b>600</b> also uses an index field called skyflow_id <b>620</b> to relate all of the tables together. As with the customer identity vault, the illustrated tables represent the headers of two-dimensional tables that include a column for each object and a row for each attribute. Each field has a value for each object or for each unique skyflow_id. The values in the vault can only be modified by those with special access privileges. Indeed, any interaction with data in a vault may be restricted by particular privileges pertaining to the particular role with which a user or application attempts to access the data.</p><p id="p-0044" num="0043">The payment vault may be designed to help companies reduce their PCI (Payment Card Industry) compliance scope and bring products to market faster. The vault may be used as a sensitive object store for sensitive financial data such as credit data, card issuance data and payment data. By storing sensitive financial data in the payment vault, a company can reduce the cost of maintaining security because that data will not be stored on company servers. As a result, the company can focus on product innovation and bringing products to market faster.</p><p id="p-0045" num="0044">As with the customer identity vault or any other vault, the payment vault also enables businesses to execute secure vault functions within the security confines of the vault. These vault functions may be configured to enable businesses to make external API calls from directly within the vault. This reduces the need for any sensitive data regarding the API call to leave the vault and risk interception or capture. For example, an API call may be made directly from the vault to financial service providers. These calls may be used to support credit checks, card issuance and payment processing vault functions.</p><p id="p-0046" num="0045">Some example uses of a payment vault include reducing the scope of a company's PCI Compliance by offloading sensitive data from the company's systems to the external vault using tokenization or other common design patterns. Another use is for credit score checks. A business can create a user profile and retrieve a consumer credit score from one or all of the three main credit bureaus: Experian; Equifax; and Transunion, among others. Another example is to use the vault for credit card issuance. A business may create a new card program with a partner and issue cards to its customers. Such a payment vault may also be used for payment processing in which the vault aids the company in obtaining the values needed to process a payment through partners. Any other vault may be configured by specifying all the tables and fields that are desired as well as their properties. Tables are added to the schema. Fields are added to each table and tags are attached to each field.</p><p id="p-0047" num="0046">Privacy is preserved in the secure data vault with multiple techniques which include sophisticated inference and encryption algorithms including de-identification, tokenization, anonymization, and a technique that will be referred to as polymorphic encryption. De-identification is used in conjunction with tokenization technology to help businesses reduce the amount of sensitive data that is stored on their servers and to replace at least some of that data with tokens. Different kinds of tokens may be used to suit different operations and use cases. These include Data-Loss-Prevention (DLP) tokens, format-preserving tokens, which contain the format and none of the data, and random tokens, which contain none of the data.</p><p id="p-0048" num="0047">Anonymization may be used to abstract away the identifying details in data, to prevent the data from being traced back to an individual. Anonymization enables use-cases like secure multi-party data sharing, that allows businesses to share data with their partners without compromising the integrity and privacy of the data, and data analytics on privacy sensitive data.</p><p id="p-0049" num="0048">Polymorphic encryption as described herein securely protects all sensitive data at rest, in transit and during processing. Traditional databases secure data at rest, but during a query, in-memory decryption followed by processing makes it insecure. Processing data post-decryption is a huge vulnerability for businesses because 46% of data breaches happen on in-memory data. The described type of polymorphic encryption allows data to be queried and processed while remaining encrypted, providing unprecedented security and privacy.</p><p id="p-0050" num="0049">Fields in each table, shown as rows in the drawing figures, may each be assigned a privacy data type (PDT) as a classification of various kinds of sensitive data based on identifiability and sensitivity. In some embodiments, the PDT for each field is assigned in consideration of the identifiability and sensitivity of underlying data. A Default DLP (Data Loss Prevention) Policy, Default Token Policy, supported Operations, and supported Validations of the data may be linked to the PDT. In some embodiments, the PDT is a coded value.</p><p id="p-0051" num="0050">Identifiability refers to the ease with which an individual could be identified using data. In some embodiments there may be three or more values. Low represents data that cannot be easily identified. Some examples are Country, State and ZIP code. Moderate represents data that can be identified relatively easily when combined with other data but cannot uniquely identify the person, for example education information or employment information. High represents data that can uniquely identify the person, for example name, address, telephone number or email address.</p><p id="p-0052" num="0051">Sensitivity refers to the level of damage that could be caused to the person the data belongs to if compromised. In some embodiments there may be three or more values. Low represents data that does not cause harm more significant than an inconvenience, such as changing a telephone number. Moderate represents data that could result in financial loss due to identity theft or denial of benefits, public humiliation, discrimination, and the potential for blackmail. High represents data that involves serious physical, social, or financial harm, resulting in potential loss of life, loss of livelihood or inappropriate physical detention.</p><p id="p-0053" num="0052">Using the identifiability and sensitivity considerations, a default DLP policy may be assigned that defines how data may be stored. In some embodiments, there are four data storage techniques that may be used. Masking may be used to partially mask data without changing its format. This renders the data non-identifiable. For example, the email address johndoe@gmail.com becomes ****@gmail.com. Redacting may be used to completely obscure all the data. No part of the data is revealed. For example, the email address johndoe@gmail.com becomes REDACTED. Tokenization is a third option. Tokenization is a process of substituting sensitive data with a non-sensitive equivalent, referred to as a token, that has no extrinsic or exploitable meaning or value. The token is a reference (or an identifier) that maps back to the sensitive data and can be used instead of the actual sensitive data. In some embodiments, a random token or a format preserving token or both may be used to support different levels of privacy and use.</p><p id="p-0054" num="0053">A random token is not derived from input data. It is stored in the secure data vault as a placeholder for the actual sensitive data. In some cases, it may be used as an index to the input data that is only accessible to those with sufficient privileges. A format-preserving token uses the same format as the original input data but does not include the information of the input data. For example, the clear-text data johndoe@gmail.com could be tokenized as bwe9f0n@h89f2.3b1. The token retains the same format as the original data but is unreadable.</p><p id="p-0055" num="0054">Any secure data vault may be configured with a set of default privacy data types because the identifiability and sensitivity of user data, e.g., a telephone number or payment account number, is the same or similar regardless of the purpose or use of the secure data vault. Other types of data may require specific configurations to be used and there may be special considerations such as when the accessibility of particular data fields is very important. As the data is added to the secure data vault, validations may be used to limit the values entered for a privacy data type. In some embodiments some fields require that the data is expressed in a regularized way. With regular expressions, some privacy data types have a specific format or a specific allowed character set that must match with the input data. These constraints are validated using regular expression validation. For example, each SSN should be nine digits, which may be in a formatted or unformatted pattern. In some embodiments some fields require that the data is within a range. With bounded values some privacy data types should only be allowed to have values within a particular range or from a predefined set. A predefined set of values disallows invalid values for these privacy data types. For example, users should only select a country from a list of possible country values.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a decision tree diagram for selecting a DLP (Data Loss Prevention) policy based on the PDT (Privacy Data Type) for a particular element or field in a secure data vault. In the decision tree <b>702</b>, a type of privacy data <b>704</b> is first subjected to an identifiability analysis <b>706</b>. As a result, the type will be awarded a score of low, medium, or high. The type is then given a value of 1, 2, 3 accordingly. The type is then subjected to a sensitivity analysis <b>708</b> and awarded a score of low, medium, high which is then mapped to another value of 1, 2, or 3. In this simple example, the values are added and mapped to a final score <b>710</b> of possible values from 2 for low identifiability and low sensitivity to 6 for high identifiability and high sensitivity. There may be many other levels and different types of levels but three levels are used here for simplicity. Different functions other than addition may be used to combine the scores including weighting and scaling so that there are more than 6 possible results.</p><p id="p-0057" num="0056">The final score <b>710</b> is then mapped to a DLP policy <b>712</b>. In this example there are 5 possible scores from 2-6 and 5 possible DLP policies. The policies reflect how the data is stored and accessed in a portion of the secure data vault that is accessible to non-administrative roles. Different policies may be used in a different order and there may be more or fewer levels of data loss prevention. The DLP policy is a technique to prevent data from being captured by outsiders by limiting the nature of the data that can be accessed. In some embodiments, the original full core data is stored encrypted in a primary partition of the secure data vault and the same data is also stored with operation-specific encryption in a secondary partition of the secure data vault in accordance with the respective DLP policy. Any non-administrative access is only to the secondary partition through a role. The secondary partition prevents data from being transmitted or accessed in the clear. In the illustrated example, the lowest priority DLP policy is mapped to a plain text policy. The next priority DLP policy is mapped to a masking policy. The next priority is mapped to a redaction policy. The second highest priority DLP policy is mapped to a format preserving token policy and the highest priority DLP policy is mapped to a random token policy. The policies are provided as simplified examples to indicate how different policies may be selected based only on the PDT.</p><p id="p-0058" num="0057">Data may also be stored in the secure data vault based on roles or operations or both. As mentioned above, each role has one or more policies attached to it. The policies allow access only to certain data and only to perform certain operations. One policy may allow for statistics to be performed using values for multiple customers in a particular field, such as an average balance of all customers. Another policy may only allow for a confirmation regarding a particular customer using the same field, such as that a customer has a balance of at least e.g. $1,000. Many policies may restrict all access to particular fields. For the administrator roles, there may be operations to read, write, and edit the data in plain text. For other roles involved in the regular workflow, operations may be significantly limited.</p><p id="p-0059" num="0058">In some embodiments, there are three categories of operations: Exact Match; Aggregation; and Order. There may be more or fewer operation categories to support different uses of the data stored in the secure data vault. Exact match operations attempt to match the query to a value in the data exactly. An exact match operation can retrieve a record for a specific user with a particular email address, SSN, or another identifier. Aggregation operations attempt to aggregate values and produce a SUM, AVERAGE, MAXIMUM, or other statistical operation within a given query. Order operations attempt to produce range operations such as GREATER THAN or LESS THAN. An All Ops status may be added to a PDT to allow all the operations. In some embodiments, the data may be stored three different ways to support the All Ops status.</p><p id="p-0060" num="0059">By limiting operations to those operations that are needed, the related data may be encrypted in a way that supports the needed operations on fully encrypted data. This ability preserves the security and privacy of the data while making it actionable. The privacy data type may be used together with the data type and the kind of data to determine the operations that can be performed. As an example, aggregation and order operations are not likely needed for a telephone number. Exact match operations are not likely needed for numerical scores or account balances.</p><p id="p-0061" num="0060">Polymorphic encryption as described herein provides for a single record to be encrypted and stored in different ways to enable different operations. Consider an organization which performs financial transactions, such as banking or investing. A customer service role may require an ability to confirm the last 4 digits of the SSN to verify a customer. An investigation role may require that the entire SSN be matched with a particular account number. A tax reporting role may require that the entire SSN be included in reports to tax agencies. The SSN has high identifiability and high sensitivity. Each role requires a different level of access to the SSN. Instead of providing a single stored copy of the SSN accessible to each role, the SSN may be stored in three different instances in three different ways, one for each role. More instances with different encryption schemes may be added as more roles are added. This allows each role to perform its necessary operation quickly without decrypting the SSN.</p><p id="p-0062" num="0061">The customer service role only requires an exact match operation on a portion of the SSN. The SSN may be stored masked or partially redacted in an encrypted form that only supports a match function. As an example, a hash function may be used. Each SSN is written into the secure data store by first masking or redacting the first 5 digits, hashing the remaining 4 digits, and then storing the result. As mentioned above, the result will be connected to an index so that the hashed 4 digits are associated with the appropriate customer. A person in customer service receives the customer's name and the actual last 4 digits from the customer, enters the digits into a form, sends the form, and then receives a result of there being a match or not. In the background, the user interface or API, hashes the last 4 digits and then compares the hashed value to that of all customers with the same or a similar name in the secure data store. The user interface or API may even provide a list of names that match the hashed value.</p><p id="p-0063" num="0062">To perform the exact match operation in this way, the value in the secure data vault is never decrypted. In addition, the actual last 4 digits are never sent through the communications interface from the customer representative to the secure data vault. The actual last 4 digits can be hashed before they are sent. This allows quick access to the result with very low risk to the customer. The investigation role may operate similar to the customer service role except that the entire SSN is used and not just the last 4 digits. The tax reporting role may operate using a token. A unique token may be associated with the customer, such as a random token. Only when the report is generated is the actual SSN required and the person generating the report does not require it. Note that for the SSN, there is no need for aggregation and order operations.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram of an example secure data vault that is configured with different partitions to support different roles. The vault <b>802</b> contains a primary data partition <b>804</b>, a secondary data partition <b>806</b> and a ternary data partition <b>806</b>. There may be more or fewer data partitions to suit different implementations. The primary data partition includes tables <b>820</b> for storing the data in the relational database format described above. While three tables are shown, there may be more or fewer. Other data schemas and database formats may be used instead. In this example, an administrator <b>814</b>, such as a vault editor or vault owner in a first role has access to all three partitions to add, remove, and edit entries. The administrator <b>814</b> is connected to the vault through a cloud connection in this example. The vault <b>802</b> may be local on an intranet, remote through a cloud connection as shown or hosted by a third party and accessible through a local area network or wide area network. The governance level, described above may be provided at the local admin or with the vault. Depending on the configuration, there may be roles that are allowed access to the data for a particular purpose. As an example, an API may be allowed access to a full telephone number in order to operate a telephone dialing application.</p><p id="p-0065" num="0064">A second data partition <b>806</b> may be configured to support a user interface <b>816</b> attached to a second role. The second data partition <b>806</b> may be configured to contain only the data that is required for the second role and only encrypted in a format suitable for use by the second role. A third data partition <b>808</b> is configured to support a second user interface <b>818</b> attached to a third role. There may be many more roles and corresponding data partitions. In addition, a user interface may be attached to more than one role.</p><p id="p-0066" num="0065">In some embodiments, the full scope of the secure data is stored in the primary partition <b>804</b> or a different partition in an encrypted form, such that the primary data partition includes all of the tables <b>820</b> for storing the data in the relational database format described above. The primary partition may be used by administrators as a source to encrypt and store data into the secondary, ternary, and additional data partitions to support any desired operation field combinations. As a result, the secondary and additional data partitions <b>806</b>, <b>808</b> may contain much less data than the primary data partition <b>804</b>.</p><p id="p-0067" num="0066">In another embodiment, there is no single partition that contains all of the desired information. An administrator may have a GUI that presents as if the information is all stored in one location as shown, for example in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref>, but that information may not exist in the illustrated format. Instead, the data shown to the administrator may be an aggregation of multiple values stored in different locations. As an example, a telephone number may be stored in one location as only the country code, in another location as only the area code, and in a third location as only the local code, each encrypted in a different format. This makes it very difficult for an attacker to obtain the complete telephone number. For the appropriate administrator, the system may access all three locations, decrypt all three values, and present them as a single field in order to present the telephone number in the persons <b>502</b> or consumers <b>602</b> tables of an administrator GUI.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram of an example secure data vault that is configured in different partitions to support different DLP policies. The vault <b>902</b> contains a primary data partition <b>904</b>. The primary data partition may use tables <b>920</b>, as shown, for storing the data or any other suitable data format and schema. The tables <b>920</b> in the primary data partition <b>904</b> include fields of records to which a first DLP policy applies. In this example, all of the data for which the first DLP policy applied is stored in the primary data partition. The values may be stored differently for different fields and there may be more than one copy of values for the same field. Each copy may be stored to support a different operation but with the same DLP policy.</p><p id="p-0069" num="0068">A secondary data partition <b>906</b> may be configured to support a user interface <b>916</b> attached to a second role. The secondary data partition <b>906</b> may be configured to contain data that is encrypted using a second DLP policy. This data may be masked and hashed or encrypted in any other suitable way. A ternary data partition <b>908</b> is configured to contain data that is encrypted using a third DLP policy. This data may be tokenized or encrypted in any other suitable way. There may be more partitions to support more DLP policies as may be desired for the particular use of the secure data vault <b>902</b>. Alternatively, instead of DLP policies, each data partition may be configured to support a particular operation.</p><p id="p-0070" num="0069">As shown, a user interface <b>914</b>, <b>916</b>, <b>918</b> may be provided access to one or all of the data partitions <b>904</b>, <b>906</b>, <b>908</b> depending on the roles for that user interface and the operations that are allowed by those roles. Three interfaces are shown to represent a variety of different interfaces and roles corresponding to different users and applications that may access the secure data vault. An administrator <b>914</b> has access to all three data partitions <b>904</b>, <b>906</b>, <b>908</b> as is appropriate for an administrative role to add, remove, and edit entries. A first user interface <b>916</b> has specific operations that it may perform based on policies attached to a second role. The first user interface has access to some or all of the data partitions to perform the allowed operations of the attached role. A third user interface <b>918</b> has specific operations that it may perform based on policies attached to a third role. The third user interface also has access to some or all of the data partitions to perform the allowed operations. There may be many more roles and corresponding data partitions. In addition, a user interface may be attached to more than one role.</p><p id="p-0071" num="0070">In some embodiments, there may be a partition with the full scope of the secure data in encrypted form. The other data partitions may contain much less data than the full data partition because there may be some data that is not suitable for encryption using another one of the DLP policies. The examples of <figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref> present two alternative schemas to organize the data stored in the secure data vault. A variety of other schemas may alternatively or additionally be used. As another example, the schema may be like that of <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref> except that additional rows are added for each copy of a value. Instead of one row or field for telephone number, the same table may contain a row for the area code encrypted to enable an aggregation operation, a row for the local code encrypted to allow a match operation, and a row for the complete telephone number encrypted to allow an autodial operation. Still more rows may be added with different encryption schemes to suit more uses or operations. In the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref>, these three rows would be stored in different data partitions because each row corresponds to different operations and roles. In the example of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, theses three rows may be stored in two data partitions because the DLP policy for an area code is different from the DLP policy for a complete telephone number.</p><p id="p-0072" num="0071">As described above, in some embodiments the data vault includes at least a primary partition having a first subset of a plurality of records, each record of the first subset having a plurality of fields and an encrypted value for each of at least a portion of the fields encrypted according to a first encryption scheme, each record corresponding to a different index number and a secondary partition having a second subset of the plurality of records, each record of the second subset having the values for at least a portion of the fields, wherein the values of the second subset are encrypted according to a second encryption scheme that is different from the first encryption scheme wherein the first encryption scheme is configured to permit a first set of operations on the values when the values are encrypted and the second encryption scheme is configured to permit a second set of operations on the values when the values are encrypted.</p><p id="p-0073" num="0072">The first and the second encryption schemes may include at least one of masking, redacting, and tokenizing. The first and the second encryption schemes may correspond to different data loss prevention policies. The first set and the second set of operations may include at least one of match operations, aggregation operations, and order operations. The match operation may be attached to a policy to access records in the secondary partition using the match operation and wherein the match operation is accessible to a user through an interface. The policy may be attached to a role and the user has credentials to access the role.</p><p id="p-0074" num="0073">The data vault may include a governance layer for access control to the secondary partition from the policy. The governance layer may control access to encrypted values and operations using the policy. A first value may be encrypted in the first encryption scheme in the first partition and the first value may also be encrypted in the second encryption scheme in the second partition.</p><p id="p-0075" num="0074">An encryption type field may be associated with each field of the primary partition, wherein the encryption type field identifies the first encryption scheme. The data vault may also include a ternary partition having the plurality of records, wherein the values of the plurality of records are encrypted according to a third encryption scheme that is different from the first and the second encryption scheme, wherein the third encryption scheme is configured to permit the values of the records to be accessed.</p><p id="p-0076" num="0075">As described above, in some embodiments a secure data access system includes a data vault having a plurality of copies of a value, a first copy being configured to enable a first operation and a second copy being configured to enable a second operation, a governance layer having a plurality of policies, at least a first policy configured to enable the first operation, the governance layer configured to permit the first operation for an authenticated user, and an interface layer having a plurality of roles, each role supporting a selected policy, the interface layer further comprising a user interface to receive user credentials, to link the credentials to a role and to send an authentication of the user and the role to the governance layer.</p><p id="p-0077" num="0076">The first copy may be configured to enable the first operation by being encrypted using an encryption scheme that allows the first operation to be performed without decrypting the first value. The second copy may be encrypted and partially redacted as an example.</p><p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a process flow diagram of configuring a secure data vault in accordance with embodiments as described herein. At <b>1002</b> a data set is received for storage and configuration within a secure data vault. The data set has values in multiple different fields for multiple different customers. The data set may have any of a variety of different structures and schema. In some cases, the data is first parsed to pull out the data that is to be secured and to organize the data in a suitable way. The data may also be analyzed to determine a suitable DLP policy for each field in the data. In addition, operations are determined for the use of the data. The operations reflect how the data is to be used so that the data can be stored in a manner that enables the operations that are to be performed on the data values. There may be one operation for a data field or there may be multiple operations for one data field. It there are multiple operations then a copy may be stored for each operation. There is no particular limit to the number of operations that may be supported.</p><p id="p-0079" num="0078">At <b>1004</b>, the operations are associated with at least a portion of the different fields of the data set to form a plurality of operation field combinations. As mentioned above, an operation may be exact match for a social security number field or aggregation for a telephone number field. At <b>1006</b> an encryption scheme is attached to each operation field combination. The encryption scheme will be based on the operation and may also be based on the data type and the DLP policy for the data field. The attached encryption scheme is selected to enable the operation of the operation field combination to be performed without decrypting the encrypted respective value. Some example of such operation and encryption scheme combinations are described above.</p><p id="p-0080" num="0079">At <b>1008</b>, roles are associated with operation field combinations. Each role will have at least one operation field combination and an operation field combination may be associated with more than one role. As mentioned only some operations may be used with a particular field. For example, sums, inequalities, averages, and similar mathematical operations may not be useful with telephone numbers, but other operations may be very useful. The roles help to determine which users have access to perform particular operations on a particular field of the data set.</p><p id="p-0081" num="0080">At <b>1010</b> the values in at least a portion of the plurality of different fields are encrypted in accordance with the attached encryption scheme and at <b>1012</b>, these encrypted values are stored a data vault. At least some of the values are encrypted in accordance with more than one encryption scheme and stored as separate values for the same or a different field.</p><p id="p-0082" num="0081">At <b>1014</b>, a user is associated with at least one role. This role allows the user to perform the associated operation on a particular field of the data set. The permission comes after authenticating the user so that providing access to the operations of a particular role comes after authenticating the user. The user may have access to more than one role and there may be additional permissions that affect which records any particular user or role may be able to access.</p><p id="p-0083" num="0082">At <b>1016</b>, access is provided to the user through a role to perform an operation that is associated with the role on the stored encrypted value in the field that is associated with the operation field combination that is associated with the role.</p><p id="p-0084" num="0083">In some embodiments each field or a group of fields or a table may use encryption type fields to store a parameter to identify the encryption scheme that has been applied to values in a particular field. In such as case an encryption type parameter is associated with an encryption scheme that has been attached to an operation field combination. The encryption type parameter is then stored in association with the values that are encrypted in accordance with the respective encryption scheme.</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of a computer system <b>1100</b> representing an example of a system upon which features of the described embodiments may be implemented, such as the user devices, interfaces, governance, workspace, and data vaults. In the case of cloud services, one or more of the components may be virtualized. The computer system includes a bus or other communication means <b>1101</b> for communicating information, and a processing means such as one or more microprocessors <b>1102</b> coupled with the bus for processing information. The computer system further includes a cache memory <b>1104</b>, such as a random access memory (RAM) or other dynamic data storage device, coupled to the bus for storing information and instructions to be executed by the processor. The main memory also may be used for storing temporary variables or other intermediate information during execution of instructions by the processor. The computer system may also include a main nonvolatile memory <b>1106</b>, such as a read only memory (ROM) or other static data storage device coupled to the bus for storing static information and instructions for the processor.</p><p id="p-0086" num="0085">A mass memory <b>1108</b> such as a solid-state disk, magnetic disk, disk array, or optical disc and its corresponding drive may also be coupled to the bus of the computer system for storing information and instructions. The computer system can also be coupled via the bus to a display device or monitor <b>1114</b> for displaying information to a user. For example, graphical and textual indications of installation status, operations status, schema configurations, and other information may be presented to the user on the display device. Typically, an alphanumeric input device <b>1116</b>, such as a keyboard with alphanumeric, function and other keys, may be coupled to the bus for communicating information and command selections to the processor. A cursor control input device <b>1118</b>, such as a mouse, a trackball, trackpad, or cursor direction keys can be coupled to the bus for communicating direction information and command selections to the processor and to control cursor movement on the display.</p><p id="p-0087" num="0086">A communication device <b>1112</b> is also coupled to the bus. The communication device may include a wired or wireless modem, a network interface card, or other well-known interface devices, such as those used for coupling to Ethernet, token ring, cellular telephony, Wi-Fi, or other types of physical attachment for purposes of providing a communication link to support a local or wide area network (LAN or WAN), for example. In this manner, the computer system may also be coupled to a number of clients or servers via one or more conventional network infrastructures, including an Intranet or the Internet, for example.</p><p id="p-0088" num="0087">The system of <figref idref="DRAWINGS">FIG. <b>11</b></figref> further includes an AI (Artificial Intelligence) engine. This may be implemented in dedicated hardware using parallel processing or in the processor <b>1102</b> or using some combination of resources. The AI engine may also be external to the computer system <b>1100</b> and connected through a network node or some other means. The AI engine may be configured to use historical data accumulated by the computer system or another system to build a model that includes weights and criteria to apply to the selection processes, operations, and encryption among others. The model may be repeatedly rebuilt using the accumulated data to refine and increase accuracy.</p><p id="p-0089" num="0088">A lesser or more equipped computer system than the example described above may be preferred for certain implementations. Therefore, the configuration of the exemplary computer system will vary from implementation to implementation depending upon numerous factors, such as price constraints, performance requirements, technological improvements, or other circumstances. The computer system may be duplicated in different locations for distributed computing. As an example, the system may use a simple pre-programmed deterministic selection model instead of an AI model and the AI engine.</p><p id="p-0090" num="0089">While the steps described herein may be performed under the control of a programmed processor, in alternative embodiments, the steps may be fully or partially implemented by any programmable or hard coded logic, such as Field Programmable Gate Arrays (FPGAs), TTL logic, or Application Specific Integrated Circuits (ASICs), for example. Additionally, the methods described herein may be performed by any combination of programmed general purpose computer components or custom hardware components. Therefore, nothing disclosed herein should be construed as limiting the present invention to a particular embodiment wherein the recited steps are performed by a specific combination of hardware components.</p><p id="p-0091" num="0090">In the present description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances, well-known structures and devices are shown in block diagram form. The specific detail may be supplied by one of average skill in the art as appropriate for any particular implementation.</p><p id="p-0092" num="0091">The present description includes various steps, which may be performed by hardware components or may be embodied in machine-readable instructions, such as software or firmware instructions. The machine-readable instructions may be used to cause a general-purpose or special-purpose processor programmed with the instructions to perform the steps. Alternatively, the steps may be performed by a combination of hardware and software.</p><p id="p-0093" num="0092">The described operations may be provided as a computer program product that may include a machine-readable medium having stored instructions thereon, which may be used to program a computer (or other machine) to perform a process according to the present invention. The machine-readable medium may include, but is not limited to optical disks, CD-ROMs, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, magnet or optical cards, flash memory, or any other type of medium suitable for storing electronic instructions. Moreover, the present invention may also be downloaded as a computer program product, wherein the program may be transferred from a remote computer to a requesting computer by way of data signals embodied in a carrier wave or other machine-readable propagation medium via a communication link (e.g., a modem or network connection).</p><p id="p-0094" num="0093">Some embodiments described herein pertain to a non-transitory machine-readable medium comprising a plurality of instructions, executed on a computing device, to facilitate the computing device to perform one or more of any of the operations described in the various embodiments herein.</p><p id="p-0095" num="0094">Although this disclosure describes some embodiments in detail, it is to be understood that the invention is not limited to the precise embodiments described. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. Various adaptations, modifications and alterations may be practiced within the scope of the invention defined by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A data vault comprising:<claim-text>a primary partition having a first subset of a plurality of records, each record of the first subset having a plurality of fields and an encrypted value for each of at least a portion of the fields encrypted according to a first encryption scheme, each record corresponding to a different index number; and</claim-text><claim-text>a secondary partition having a second subset of the plurality of records, each record of the second subset having the values for at least a portion of the fields, wherein the values of the second subset are encrypted according to a second encryption scheme that is different from the first encryption scheme,</claim-text><claim-text>wherein the first encryption scheme is configured to permit a first set of operations on the values when the values are encrypted and the second encryption scheme is configured to permit a second set of operations on the values when the values are encrypted.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The data vault of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first and the second encryption schemes include at least one of masking, redacting, and tokenizing.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The data vault of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first and the second encryption schemes correspond to different data loss prevention policies.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The data vault of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first set and the second set of operations include at least one of match operations, aggregation operations, and order operations.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The data vault of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the match operation is attached to a policy to access records in the secondary partition using the match operation and wherein the match operation is accessible to a user through an interface.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The data vault of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the policy is attached to a role and the user has credentials to access the role.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The data vault of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising a governance layer for access control to the secondary partition from the policy.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The data vault of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the governance layer controls access to encrypted values and operations using the policy.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The data vault of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein a first value is encrypted in the first encryption scheme in the first partition and the first value is encrypted in the second encryption scheme in the second partition.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The data vault of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising an encryption type field associated with each field of the primary partition, wherein the encryption type field identifies the first encryption scheme.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The data vault of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a ternary partition having the plurality of records, wherein the values of the plurality of records are encrypted according to a third encryption scheme that is different from the first and the second encryption scheme, wherein the third encryption scheme is configured to permit the values of the records to be accessed.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A secure data access system comprising:<claim-text>a data vault having a plurality of copies of a value, a first copy being configured to enable a first operation and a second copy being configured to enable a second operation;</claim-text><claim-text>a governance layer having a plurality of policies, at least a first policy configured to enable the first operation, the governance layer configured to permit the first operation for an authenticated user; and</claim-text><claim-text>an interface layer having a plurality of roles, each role supporting a selected policy, the interface layer further comprising a user interface to receive user credentials, to link the credentials to a role and to send an authentication of the user and the role to the governance layer.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The secure data access system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first copy is configured to enable the first operation by being encrypted using an encryption scheme that allows the first operation to be performed without decrypting the first value.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The secure data access system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the second copy is encrypted and partially redacted.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A method comprising:<claim-text>receiving a data set having values in a plurality of different fields for a plurality of different customers;</claim-text><claim-text>associating operations with at least a portion of the different fields of the data set to form a plurality of operation field combinations;</claim-text><claim-text>attaching an encryption scheme to each operation field combination;</claim-text><claim-text>associating a plurality of roles with at least one operation field combination;</claim-text><claim-text>encrypting the values in the at least a portion of the plurality of different fields in accordance with the attached encryption scheme;</claim-text><claim-text>storing the encrypted values in a data vault;</claim-text><claim-text>providing access through a role to perform an operation that is associated with the role on a stored encrypted value in a field that is associated with an operation field combination that is associated with the role.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein encrypting the values comprises encrypting at least a subset of values in accordance with more than one encryption scheme and storing each encrypted value having a different encryption scheme.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising associating a user with at least one role and authenticating the user and wherein providing access comprises providing access to the authenticated user.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising;<claim-text>associating an encryption type with an attached encryption scheme; and</claim-text><claim-text>storing the encryption type in association with values that are encrypted in accordance with the respective encryption scheme.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein attaching an encryption scheme comprises selecting an encryption scheme based on the associated operation and a data loss prevention policy for the respective field.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the attached encryption scheme is selected to enable the operation of the operation field combination to be performed without decrypting the encrypted respective value.</claim-text></claim></claims></us-patent-application>