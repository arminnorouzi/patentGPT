<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006828A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006828</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17779882</doc-number><date>20201105</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>GB</country><doc-number>1917121.4</doc-number><date>20191125</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3228</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>602</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3213</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">MULTIPLE FACTOR AUTHENTICATION FOR PORTABLE MEMORY STORAGE SYSTEM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>iStorage Limited</orgname><address><city>Middlesex</city><country>GB</country></address></addressbook><residence><country>GB</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>MICHAEL</last-name><first-name>John</first-name><address><city>Ealing, London</city><country>GB</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/GB2020/052799</doc-number><date>20201105</date></document-id><us-371c12-date><date>20220525</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method of configuring a controller <b>14</b> for controlling access to a memory <b>12</b> is provided. The controller <b>14</b> has a display <b>18</b> configured to selectively display a plurality of different input screens, wherein each input screen has a unique code associated therewith and the input screens are for receiving user credentials from a user. The method comprises the steps: a) inputting to the controller <b>14</b> a plurality of authentication factors required to access at least a first portion of the memory <b>12</b>; b) generating, by the controller <b>14</b>, a first encryption key for encrypting data stored on the first portion of the memory <b>12</b>; c) displaying a first input screen at the display <b>18</b>; d) entering first user credentials to the first input screen and storing the first user credentials as a first factor of authentication; e) displaying a second input screen at the display <b>18</b>; f) entering second user credentials to the second input screen and storing the user credentials as a second factor of authentication; g) encrypting the code for the second input screen using the first user credentials; and h) encrypting the first encryption key using at least one of the user credentials. A method of gaining access to the memory <b>12</b> is also provided in which the code for each subsequent input screen is decrypted using user credentials provided at the previous input screen. A method of authenticating a user and a device configured according to the method are also disclosed.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="168.74mm" wi="146.39mm" file="US20230006828A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="116.92mm" wi="48.18mm" file="US20230006828A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="204.98mm" wi="167.72mm" file="US20230006828A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="190.42mm" wi="148.42mm" file="US20230006828A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="93.73mm" wi="145.20mm" file="US20230006828A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="140.72mm" wi="121.75mm" file="US20230006828A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="194.23mm" wi="113.88mm" file="US20230006828A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="185.34mm" wi="110.57mm" file="US20230006828A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><p id="p-0002" num="0001">The present disclosure relates to a method of configuring a controller for controlling access to a memory and a method of authenticating a user. A related portable memory storage device is also disclosed.</p><p id="p-0003" num="0002">It is known to store data in portable memory storage devices such as external hard-drives, flash drives, &#x201c;USB sticks&#x201d; etc. so that data may be readily moved between computers and shared by different users. Flash drives are usually configured with a monolithic memory area which may be protected by access controls such as passwords, PINs, and/or encryption. Partitions are a well-known way to divide a memory area into separate areas that may be accessed, formatted, and changed independently. To protect the data, some portable memory storage devices incorporate password protection of the data, such that only a user who knows (or an attacker who discovers) the password can access the data. Other portable memory storage devices require multiple factors of authorization before allowing a user access to the memory. Commonly authentication is carried out on the host system to which a portable memory storage device is attached.</p><p id="p-0004" num="0003">There are three generic types of authentication factor that may be used to identify and differentiate legitimate users and differentiate legitimate from illegitimate users. The three different factors are:</p><p id="p-0005" num="0004">1) something the user knows (e.g. a password or PIN);</p><p id="p-0006" num="0005">2) something the user is (e.g. biometric data&#x2014;fingerprint data, iris data etc.); and</p><p id="p-0007" num="0006">3) something the user has (e.g. a token).</p><p id="p-0008" num="0007">For further security, some portable memory storage devices store the data in an encrypted form so that an attacker cannot simply bypass the security (e.g. by separating a hard drive from a controller that handles the user authentication, and reading the hard drive directly). It is important to keep the encryption key(s) safe from any potential attacker. It is desirable to improve the security for portable memory storage devices, particularly for portable memory storage devices that have multiple different users.</p><p id="p-0009" num="0008">According to a first aspect, the disclosure provides a method of configuring a controller for controlling access to a memory, the controller connected to a display configured to selectively display a plurality of different input screens, wherein each input screen has a unique code associated therewith, the input screens for receiving user credentials from a user; the method comprising the steps:</p><p id="p-0010" num="0009">a) inputting to the controller a plurality of authentication factors required to access at least a first portion of the memory;</p><p id="p-0011" num="0010">b) generating, by the controller, a first encryption key for encrypting data stored on the first portion of the memory;</p><p id="p-0012" num="0011">c) displaying a first input screen at the display;</p><p id="p-0013" num="0012">d) entering first user credentials to the first input screen and storing the first user credentials as a first factor of authentication;</p><p id="p-0014" num="0013">e) displaying a second input screen at the display;</p><p id="p-0015" num="0014">f) entering second user credentials to the second input screen and storing the user credentials as a second factor of authentication;</p><p id="p-0016" num="0015">g) encrypting the code for the second input screen using the first user credentials; and</p><p id="p-0017" num="0016">h) encrypting the first encryption key using at least one of the user credentials.</p><p id="p-0018" num="0017">This method ensures that the encryption key is stored in encrypted form on the controller. Further, the method prevents an attacker from discovering the form of later input screens until acceptable credentials have been input at earlier input screens. As such, an attacker is forced to attack input screens sequentially rather than in parallel before gaining access to the memory. This increases the difficulty for a malicious user to gain access to the memory.</p><p id="p-0019" num="0018">The plurality of authentication factors may comprise more than two authentication factors; and wherein, before the step h) of encrypting the first encryption key, for each further authentication factor the method comprises: displaying a further input screen at the display; entering further user credentials to the further input screen and storing the user credentials in the controller as further factor of authentication; and encrypting the code for the preceding input screen using the further user credentials.</p><p id="p-0020" num="0019">Having a larger number of authentication factors may increase the security of the memory.</p><p id="p-0021" num="0020">The first encryption key may be divided into a plurality of portions corresponding to the plurality of authentication factors and wherein each step of encrypting a code for an input screen additionally comprises encrypting a different portion of the first encryption key.</p><p id="p-0022" num="0021">Splitting the encryption key into different portions that are encrypted differently (i.e. with different user credentials) may increase the security of the encryption key.</p><p id="p-0023" num="0022">The memory may be divided into a plurality of portions for use by different users, and the method may comprising: repeating at least steps a) to h) for each portion of the memory, such that a different encryption key is generated for, and encrypted for, each portion of the memory.</p><p id="p-0024" num="0023">This may allow different users to securely use the memory. Different users may have access to their memory portion (which may be a logical partition in the memory) but not access to others'. Further, protecting different memory portions (partitions) with different encryption keys ensures that even if an attacker gains access to one memory portion and its associated key, this does not also give the attacker the ability to decrypt data from other memory portions.</p><p id="p-0025" num="0024">The plurality of input screens may comprise a plurality of input screens selected from: a keypad for receiving a code, and at least two different swipe pattern grids for receiving a swipe pattern.</p><p id="p-0026" num="0025">Different users may have different preferences for how to input codes into the controller. Some may find it easier to remember a numerical code while others may prefer a pattern. The swipe pattern grids may have different sizes, e.g. a 3&#xd7;3 grid, 4&#xd7;4 grid, 3&#xd7;5 grid etc.</p><p id="p-0027" num="0026">The method may comprise configuring the controller to require a biometric input or token as a further factor of authentication, wherein authentication via the biometric input or token is required for access to the first encryption key.</p><p id="p-0028" num="0027">Requiring a further factor of authentication that is not &#x201c;something a user knows&#x201d; can increase the security of the memory. For example, a biometric input goes with the user and cannot, for example, be left written down somewhere. A token that is in the user's possession must be physically taken from a user before a malicious user can use it, rather than a piece of information the user knows (e.g. PIN or swipe pattern) which can be readily copied.</p><p id="p-0029" num="0028">The first encryption key may comprise an encryption key for encrypting data stored on the first portion of the memory combined with a public memory partition encryption key for encrypting data stored on a public memory partition of the memory. If present, each further encryption key for a portion of the memory may also be combined with the public memory partition encryption key.</p><p id="p-0030" num="0029">In a second aspect, there is provided a method of authenticating a user using a controller that has been configured according to the method of the first aspect, the method comprising the steps:</p><p id="p-0031" num="0030">i) entering first user credentials to the first input screen displayed on the display as a first authentication factor,</p><p id="p-0032" num="0031">j) determining, by the controller, whether the first user credentials match stored first user credentials and, if not, disallowing access to the memory, and if so:</p><p id="p-0033" num="0032">k) decrypting, by the controller, the code associated with the second input screen; and</p><p id="p-0034" num="0033">l) on the basis of the decrypted code, displaying the second input screen on the display;</p><p id="p-0035" num="0034">m) entering second user credentials to the second input screen as a second authentication factor;</p><p id="p-0036" num="0035">n) determining, by the controller, whether the second user credentials match stored second user credentials.</p><p id="p-0037" num="0036">This method offers improved security for the user by protecting the memory with multiple layers. Further, each input screen after the first is only accessible (i.e. is only decrypted) once the user has input correct user credentials in an earlier screen. Thus, any attacker must figure out the user credentials sequentially, and cannot attack all layers in parallel.</p><p id="p-0038" num="0037">The method of the second aspect may have more than two authentication factors including at least one further authentication factor with a corresponding further input screen and further user credentials. In this case, the controller is configured to require each of the first, second and further user credentials before allowing a user access to at least a portion of the memory, the method comprising, for each further authentication factor: if the second user credentials match stored second user credentials decrypting, by the controller, the code associated with the further input screen; displaying the further input screen; entering further user credentials for the further input screen; determining, by the controller whether the further user credentials match the respective stored further user credentials; and if so, optionally repeating these steps for one or more still further factor(s) of authentication, if present, with each subsequent input screen being accessed by decrypting the associated code if the preceding user credentials match respective stored user credentials.</p><p id="p-0039" num="0038">Further layers of input screens may improve the security of the memory. As above, an attacker does not even know the form of a later input screen (e.g. whether it is a keypad or any particular size of swipe pattern grid) until correct credentials have been input for an earlier input screen, and therefore this limits an attackers ability to attack all layers of security in parallel and instead forces sequential attacks. Other things staying equal, sequential attacks by an attacker will take longer to access the memory than parallel attacks.</p><p id="p-0040" num="0039">If the controller has determined that all user credentials match the respective stored user credentials, such that all factors of authentication have been satisfied, then the method according to the second aspect may comprise decrypting, by the controller, the first encryption key and allowing the user access to at least a portion of the memory having data encrypted by the first encryption key.</p><p id="p-0041" num="0040">Keeping the encryption key itself encrypted improves the security by ensuring that an attacker cannot simply bypass the need to input user credentials (e.g. by attaching the memory to a new controller).</p><p id="p-0042" num="0041">The plurality of factors of authentication may include a requirement for a biometric input or for the presence of a token, the method may then comprise the step of detecting a biometric input from a user or detecting the presence of a token; and wherein if the controller has determined that all user credentials match the respected stored user credentials, and also that the biometric input or token identifies an authorised user, such that all factors of authentication have been satisfied, then the method comprises decrypting, by the controller, the first encryption key and allowing the user access to at least a portion of the memory having data encrypted by the first encryption key.</p><p id="p-0043" num="0042">Additional factors of authentication can improve the security of the memory by requiring further things from the user that may not be readily available to an attacker.</p><p id="p-0044" num="0043">According to another aspect, there is provided a portable memory storage device comprising a controller, a memory, and a display configured to receive input from a user, the portable memory storage device configured according to the method of the first aspect.</p><p id="p-0045" num="0044">The memory may be divided into a plurality of portions, wherein each portion is associated with a respective user, wherein each portion is configured according to the method of the first aspect, such that a different encryption key is generated for each portion.</p><p id="p-0046" num="0045">This may allow multiple users to use the same portable memory storage device such that each user's data is protected by a unique encryption key. If an attacker gains access to one portion (partition) of the memory and its associated encryption key, other portions are still safe by virtue of their unique encryption keys.</p><p id="p-0047" num="0046">The memory may further comprise a public memory partition, wherein the controller is configured to combine the encryption key for each portion with a public memory partition encryption key for encrypting and decrypting data on the public memory partition.</p><p id="p-0048" num="0047">The portable memory storage device may comprise a biometric input device and/or a token detecting device. These may provide further security for the memory by requiring the presence of a token owned by the user or the presence of the user to supply a biometric input.</p><p id="p-0049" num="0048">The controller may be configured to authenticate a user by the method of the second aspect.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><p id="p-0050" num="0049">Certain embodiments of the present disclosure will now be described in greater detail, by way of example only and with reference to the accompanying drawings in which:</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a portable memory storage device having a controller, a memory, and a display;</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a flow chart of one method of configuring the controller;</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a flow chart of another method of configuring the controller;</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically shows the memory of the portable memory storage device divided into partitions;</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically shows the memory of the portable memory storage device divided into partitions with a public memory space;</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIGS. <b>6</b> and <b>7</b></figref> show example swipe pattern grids, each grid designated by a unique code;</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a flow chart of one method of authenticating a user of the portable memory storage device; and</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a flow chart of another method of authenticating a user of the portable memory storage device.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a portable memory storage device <b>10</b>. The portable memory storage device <b>10</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> comprises a memory <b>12</b>, a controller <b>14</b>, a biometric input device <b>16</b>, a display <b>18</b>, a connector <b>20</b>, and a token-detecting device <b>22</b>. The biometric input device <b>16</b> and token-detecting device <b>22</b> are optional and so may not be present in some portable memory storage devices. The connector <b>20</b> is for connecting the portable memory storage device <b>10</b> for data transfer with a computer (not shown). For example, the connector <b>20</b> may be a direct electrical connection to a host computer such as USB SATA, or PCI-E, or the connector <b>20</b> may provide wireless data connection with the computer, such as by NFC, Bluetooth, radio, or Wi-Fi.</p><p id="p-0060" num="0059">The display <b>18</b> is connected to the controller <b>14</b> and is configured to show a plurality of different input screens to the user for the user to input user credentials. For example, the display <b>18</b> may be a touchscreen that is configured to display a plurality of different input screens including a numerical keypad and at least one swipe pattern grid. A swipe pattern grid is an array of dots displayed on the screen. To enter a code into a swipe pattern grid, the user joins up specific dots of the grid by dragging a finger or stylus between the dots in a specific order. Therefore, different users may be presented with, say, a 3&#xd7;3 swipe pattern grid and each user may set a different swipe pattern on that 3&#xd7;3 grid where the swipe pattern is information (user credentials) kept secret by the user. Other sizes of swipe pattern grids may be displayed, including non-square grids, such as 3&#xd7;6 or 5&#xd7;4 grid patterns shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref> show alternative processed for configuring the portable memory storage device <b>10</b>.</p><p id="p-0062" num="0061">In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a process of configuring the device <b>10</b> starts at step <b>100</b>. At step <b>102</b>, the user indicates the number, N, of User IDs to set up, e.g. the number of user profiles. This number may also correspond to a number of memory portions, e.g. partitions <b>12</b><i>a</i>-<i>d </i>(see <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>), set up in the memory <b>12</b>. With brief reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a public memory partition <b>11</b> may additionally be set up, where the public memory partition <b>11</b> is available for use by all authorized users of the portable memory storage device <b>10</b>.</p><p id="p-0063" num="0062">At step <b>103</b>, the memory is partitioned into N portions (or N+1 in the case having a public memory partition) and these are respectively assigned to the user IDs.</p><p id="p-0064" num="0063">At step <b>104</b>, the user selects Process A. As described in detail below, Process A involves splitting an encryption key into N parts and separately encrypting each part. An alternative configuration process, Process B, is described in detail below with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> and is substantially similar to Process A except that the encryption key in Process B is not split into multiple parts.</p><p id="p-0065" num="0064">Following Process A, at step <b>105</b>, the first of the User IDs is selected for configuration.</p><p id="p-0066" num="0065">At step <b>106</b>, a first encryption key is randomly generated, by the controller <b>14</b>, for the first User ID. This encryption key will be used to encrypt/decrypt data stored on the first memory partition (e.g. partition <b>12</b><i>a</i>). When repeated for subsequent users (described below), step <b>106</b> involves randomly generating a second encryption key for a second User ID for encrypting/decrypting data stored on a second partition (e.g. partition <b>12</b><i>b</i>), a third encryption key for a third User ID etc. up to an N<sup>th </sup>encryption key for the N<sup>th </sup>User ID. As described in more detail below, in cases when the memory <b>12</b> includes a public memory partition <b>11</b> (see <figref idref="DRAWINGS">FIG. <b>5</b></figref>), another encryption key (e.g. a 0<sup>th </sup>encryption key) will be randomly generated for the public memory partition <b>11</b> in step <b>106</b>. This encryption key for the public memory partition (<b>11</b>) may be combined with the first encryption key for the first memory partition (<b>12</b><i>a</i>), and may be combined with the second encryption key for the second memory partition (<b>12</b><i>b</i>) etc. such that, as described below, it is the combined encryption key that is encrypted for each user.</p><p id="p-0067" num="0066">At step <b>107</b>, the user selects a number, M, of authentication factors where M&#x3e;1. Each authentication factor corresponds to either a numerical keypad or one of a variety of sizes of swipe pattern grid. The numerical keypad may be designated with code 0001, for example. With brief reference to <figref idref="DRAWINGS">FIGS. <b>6</b> and <b>7</b></figref>, a 5&#xd7;4 swipe pattern grid may, for example, be designated with a code 0003, and a 3&#xd7;6 swipe pattern grid may, for example, be designated with a code 0005. Other sizes of swipe pattern grid may be designated with individual codes, i.e. each swipe pattern grid may have a unique code associated therewith. The code refers to the size/arrangement of the swipe pattern grid that is to be displayed and is independent of any particular pattern (e.g. pattern of joining the dots) that a given user enters as their user credentials for that input screen on the display <b>18</b>.</p><p id="p-0068" num="0067">This number, M, indicates how many different pieces of (secret) information a user must supply in order to be allowed access to the memory <b>12</b> (or to that user's portion of the memory <b>12</b>). In the example shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, M=3, and the user will provide first user credentials, then second user credentials, and then third user credentials. In other examples, M=2 or M&#x3e;3.</p><p id="p-0069" num="0068">The first authentication factor is, for each user, a keypad, i.e. has code 0001. Thus, when the user selects the number of authentication factors at step <b>107</b>, the user is selecting which second and third input screens that user wants to be presented with to set user credentials (e.g. PINs or swipe patterns). For example, the user may select a 5&#xd7;4 swipe pattern grid as their second authentication factor and a 3&#xd7;6 swipe pattern as their third authentication factor.</p><p id="p-0070" num="0069">At step <b>108</b>, the controller <b>14</b> determines the codes associated with the M authentication factors. In the example just described, the codes are: 0001, 0003, and 0005, which correspond to the keypad, the 5&#xd7;4 swipe pattern, and then the 3&#xd7;6 swipe pattern (see <figref idref="DRAWINGS">FIG. <b>6</b></figref>). A copy of these codes is retained unencrypted for the duration of the setup process and is then discarded/sanitized. As described in more detail below, when the user comes to unlock the memory <b>12</b>, he/she will first input a numerical code that is a secret known to that user, then he/she will input a secret swipe pattern on the 5&#xd7;4 swipe pattern grid, and then input a secret swipe pattern on the 3&#xd7;6 grid. As described below in relation to <figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref>, if the numerical code and specific swipe patterns are all correct, the user will be granted access.</p><p id="p-0071" num="0070">At step <b>109</b>, the controller <b>14</b> divides the encryption key (that was generated at step <b>106</b>) into M portions or parts. Thus, when M=3, the encryption key will be divided into three portions.</p><p id="p-0072" num="0071">At step <b>110</b>, the user sets first user credentials for the first authentication factor. In the example portable memory storage device described herein, the first authentication factor is always the numerical keypad (code 0001), and so the first user credentials will be some numerical code. In other examples, the first input screen may be a given one of the swipe pattern grids. All users must be presented with the same first input screen so that all users can enter their first user credentials in the manner allowed by the input screen, i.e. for the first input all users can enter a PIN or all users have set a swipe pattern on a specific size of swipe pattern grid. Subsequent input screens and the total number of input screens may vary between different users.</p><p id="p-0073" num="0072">At step <b>111</b>, the controller <b>14</b> encrypts the first portion of the encryption key using the first user credentials (e.g. the numerical code set at step <b>110</b>). Further, the controller <b>14</b> encrypts the code associated with the second input screen. In the example above, this means that the code 0003 (corresponding to the 5&#xd7;4 swipe pattern grid) will be encrypted using the first user credentials.</p><p id="p-0074" num="0073">At step <b>112</b>, the user is presented with an input screen for the second user credentials and the user sets second user credentials. The form of the input screen at this step is determined by the code that was originally selected for the second authentication factor. In the example above, the second code was 0003, corresponding to the 5&#xd7;4 swipe pattern grid and so, in this case, the user is now shown a 5&#xd7;4 swipe pattern grid at the input screen and the user enters a specific (i.e. secret) swipe pattern as the second user credentials.</p><p id="p-0075" num="0074">At step <b>113</b>, the second portion of the encryption key is encrypted using the second user credentials (e.g. the specific swipe pattern set at step <b>112</b>). Further, the controller <b>14</b> encrypts the code associated with the third input screen using the second user credentials. In the example above, this means that the code 0005 (corresponding to the 3&#xd7;6 swipe pattern grid) will be encrypted using the second user credentials.</p><p id="p-0076" num="0075">At step <b>114</b>, the user is presented with an input screen for the third user credentials and the user sets third user credentials. The form of the input screen at this step is determined by the code that was originally selected for the third authentication factor. In the example above, the third code was 0005, corresponding to the 3&#xd7;6 swipe pattern grid and so, in this case, the user is now shown a 3&#xd7;6 swipe pattern grid at the input screen and the user enters a specific (i.e. secret) swipe pattern on the grid as the third user credentials.</p><p id="p-0077" num="0076">At step <b>115</b>, the third portion of the encryption key is encrypted with the third user credentials. As there are no further authentication factors required, in this example, there is no code (i.e. for a subsequent input screen) that needs to also be encrypted at this stage.</p><p id="p-0078" num="0077">The encryption key is now encrypted in three different portions. Each portion is encrypted using different user credentials. Further, the aforesaid copy of the codes (e.g. 0001, 0003, 0005) may now be discarded/sanitized by the controller <b>14</b>. As such, the only remaining record of the second and third codes is in an encrypted form (respectively encrypted along with the first and second encrypted parts of the encryption key).</p><p id="p-0079" num="0078">A mapping table may be stored in the portable memory storage device <b>10</b> that maps each code (e.g. 0001, 0003 etc.) to a particular input screen (i.e. the keypad and each swipe pattern grid). The mapping table may either be set up during manufacture of the device <b>10</b>, or the controller may be configured to generate (random) codes for each input screen during setup of the device (e.g. during Process A or during Process B).</p><p id="p-0080" num="0079">At step <b>116</b>, the controller selects another User ID, e.g. a second User ID, and, at step <b>117</b> the second user repeats steps <b>106</b>-<b>115</b>. This allows configuration of user credentials and another encryption key for the second user for a second partition (e.g. partition <b>12</b><i>b</i>).</p><p id="p-0081" num="0080">For each User ID, M may be a different number, provided M&#x3e;1. Thus, in one example, the second user may set first, second, third and fourth user credentials, in which case the encryption key is divided into four portions and each portion is encrypted with a respective one of the first to fourth user credentials. Further, the codes for the second, third and fourth input screens may be encrypted along with the first through third portions of the encryption key in the same manner as described previously.</p><p id="p-0082" num="0081">Once all User IDs have been configured (i.e. the steps <b>106</b>-<b>115</b> have been repeated for all of the N User IDs chosen at step <b>102</b>), the process ends at step <b>118</b>.</p><p id="p-0083" num="0082">At this point, the controller <b>12</b> contains a number, N, of User IDs. As described in detail below in relation to <figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref>, when one of the users wishes to access (a portion of) the memory <b>12</b>, that user enters their first user credentials at the keypad. Based on the input first user credentials, the controller <b>14</b> decrypts the code for the second input screen set by that user and causes the display <b>18</b> to display the appropriate second input screen to the user and the user then inputs second user credentials etc. Once all the user credentials for a given user have been input, the user is granted access to the memory <b>12</b> or at least to the portion of the memory associated with that user, e.g. portion <b>12</b><i>a. </i></p><p id="p-0084" num="0083">Although not depicted in the flow chart of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the process may additionally include (at any step) supplying a biometric user credential (e.g. fingerprint or iris scan) or may include supplying a token owned by the user, as additional factors of authorization. The controller <b>14</b> will record this input and require it again when unlocking (a portion of) the memory <b>12</b> at a later time. These additional factors of authorization are not used for encrypting any portions of the encryption key.</p><p id="p-0085" num="0084">In cases where there is a public memory partition <b>11</b> (see <figref idref="DRAWINGS">FIG. <b>5</b></figref>) in the memory <b>12</b>, an encryption key will be generated for the public memory partition <b>11</b>. After setting up all User IDs for the portable memory storage device <b>10</b>, the public memory partition encryption key is encrypted with each user's credentials. That is, the (single) encryption key for the public memory partition <b>11</b> may be combined with the encryption key for a given user's memory partition (and this process is repeated for each user) and, for each user, it is this combined key that is encrypted using either the process described above (Process A) or below (Process B). The combination of encryption keys may be a simple concatenation of the two keys or it may be a more complex process of combining the keys. For example, if the encryption key for the first memory partition (<b>12</b><i>a</i>) is 256 bits, and the public memory partition encryption key is 256 bits, then the combined encryption key may be 512 bits long. In Process A, it is the combined encryption key (e.g. the 513 bits key) that may be split into multiple (i.e. M) portions for encryption. After being combined with each user's encryption key, any unencrypted copies of the public memory partition encryption key remaining on the portable memory storage device <b>10</b> are then sanitized (i.e. irretrievably deleted). Later on, when any given user gains access to their own memory partition (see description below in relation to <figref idref="DRAWINGS">FIGS. <b>8</b> and <b>9</b></figref>), the encrypted public memory partition encryption key will also be decrypted and the user will be granted access to the public memory partition <b>11</b>, in addition to that user gaining access to their own memory partition. That is, the controller <b>14</b> will decrypt the encryption keys to the public memory partition and a user's memory partition when a user has entered correct user credentials. The above-described operation of the public memory space applies equally to all embodiments described herein. <figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an alternative process for configuring the portable memory storage device <b>10</b>.</p><p id="p-0086" num="0085">In <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the process of configuring the dongle starts at step <b>200</b>. At step <b>202</b>, the user indicates the number, N, of User IDs to set up, e.g. the number of user profiles. This number may also correspond to the number of memory partitions <b>12</b><i>a</i>-<i>d </i>of the memory <b>12</b>.</p><p id="p-0087" num="0086">At step <b>203</b>, the memory is partitioned into N portions and these are respectively assigned to the User IDs.</p><p id="p-0088" num="0087">At step <b>204</b>, the user selects Process B. As described above, Process A involves splitting an encryption key into N parts and separately encrypting each part. In Process B the encryption key is not split into multiple portions.</p><p id="p-0089" num="0088">Following Process B, at step <b>205</b>, the first of the User IDs is selected for configuration.</p><p id="p-0090" num="0089">At step <b>206</b>, a first encryption key is randomly generated, by the controller <b>14</b>, for the first User ID and this will be used for encrypting/decrypting data stored on the first user's portion of the memory <b>12</b> (e.g. partition <b>12</b><i>a</i>). When repeated for subsequent users (described below), step <b>106</b> involves randomly generating a second encryption key for a second User ID for encrypting/decrypting data on the second user's portion (e.g. partition <b>12</b><i>b</i>), a third encryption key for a third User ID etc. up to an N<sup>th </sup>encryption key for the N<sup>th </sup>User ID. In cases when the memory <b>12</b> includes a public memory space <b>11</b>, another encryption key (e.g. a 0<sup>th </sup>encryption key) will be randomly generated for the public memory partition <b>11</b> in step <b>206</b>.</p><p id="p-0091" num="0090">At step <b>207</b>, the user selects a number, M, of authentication factors where M&#x3e;1. Each authentication factor corresponds to either a numerical keypad or one of a variety of sizes of swipe pattern grid. The numerical keypad may be designated with code 0001, for example. Again with brief reference to <figref idref="DRAWINGS">FIGS. <b>6</b> and <b>7</b></figref>, a 5&#xd7;4 swipe pattern may be designated with a code 0003, and a 3&#xd7;6 swipe pattern may be designated with a code 0005. Other sizes of swipe pattern may be designated with individual codes. As before, the code refers to the size/arrangement of the swipe pattern grid that is to be displayed and is independent of any particular pattern (e.g. pattern of joining the dots) that a given user enters as their user credentials for that input screen.</p><p id="p-0092" num="0091">This number, M, indicates how many different pieces of information a user must supply in order to be allowed access to the memory <b>12</b> (or to that user's portion of the memory <b>12</b>, e.g. portion <b>12</b><i>a</i>). In the example shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, M=3, and the user will provide first user credentials, then second user credentials, and then third user credentials. In other examples, M=2 or M&#x3e;3.</p><p id="p-0093" num="0092">In the example described herein, the first authentication factor is, for each user, a keypad, i.e. has code 0001. As before, provided all users are given the same first input screen, it is unimportant whether this is a keypad or a given swipe pattern grid. Thus, when the user selects the number of authentication factors at step <b>207</b>, the user is selecting what second and third input screens that user wants to be presented with to set user credentials (e.g. passwords or swipe patterns). For example, the user may select a 3&#xd7;6 swipe pattern (code 0005) grid as their second authentication factor and a keypad as their third authentication factor.</p><p id="p-0094" num="0093">At step <b>208</b>, the controller determines the codes associated with the M authentication factors. In the example just described, the codes are: 0001, 0005, and 0001, which correspond to: the keypad, the 3&#xd7;6 swipe pattern, and then the keypad again. A copy of these codes is retained unencrypted for the duration of the setup process and is then discarded/sanitized. As described below, when the user comes to unlock the memory <b>12</b>, he/she will first input a numerical code that is a secret known to that user, then he/she will input a secret swipe pattern on the 3&#xd7;6 swipe pattern grid, and then input a second code into a keypad. If the numerical codes and specific swipe pattern are all correct, the user will be granted access.</p><p id="p-0095" num="0094">Process B differs from Process A primarily in that the encryption key is not split into parts that are separately encrypted. Therefore, there is no &#x201c;step <b>209</b>&#x201d; in Process B that would broadly correspond to step <b>109</b> in Process A and shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> and Process B moves from step <b>208</b> directly to step <b>210</b>.</p><p id="p-0096" num="0095">At step <b>210</b>, the user sets first user credentials for the first authentication factor. As the first authentication factor is always the numerical keypad, the user credentials will be some numerical code, i.e. PIN.</p><p id="p-0097" num="0096">At step <b>211</b>, the controller <b>14</b> encrypts the code associated with the second input screen. In the example above, this means that the code 0005 (corresponding to the 3&#xd7;6 swipe pattern grid) will be encrypted using the first user credentials.</p><p id="p-0098" num="0097">At step <b>212</b>, the user is presented with an input screen for the second user credentials and the user sets second user credentials. The form of the input screen at this step is determined by the code that was originally selected for the second authentication factor. In the example above, the second code was 0005, corresponding to the 3&#xd7;6 swipe pattern grid and so, in this case, the user is now shown a 3&#xd7;6 swipe pattern grid at the input screen and the user enters a specific (i.e. secret) swipe pattern as the second user credentials.</p><p id="p-0099" num="0098">At step <b>213</b>, the controller <b>14</b> encrypts the code associated with the third input screen using the second user credentials. In the example above, this means that the code 0001 (corresponding to the keypad) will be encrypted using the second user credentials.</p><p id="p-0100" num="0099">At step <b>214</b>, the user is presented with an input screen for the third user credentials and the user sets third user credentials. The form of the input screen at this step is determined by the code that was originally selected for the third authentication factor. In the example above, the third code was 0001, corresponding to the keypad and so, in this case, the user is now shown a keypad at the input screen and the user enters a specific (i.e. secret) numerical code as the third user credentials.</p><p id="p-0101" num="0100">At step <b>215</b>, the encryption key is encrypted with the third user credentials. As there are no further authentication factors required, in this example, there is no code that is also encrypted at this stage.</p><p id="p-0102" num="0101">The encryption key is now encrypted using the third user credentials. The aforesaid copy of the codes (e.g. 0001, 0005, 0001) may now be discarded by the controller <b>14</b>. As such, the only remaining record of the second and third codes is in an encrypted form.</p><p id="p-0103" num="0102">At step <b>216</b>, the controller selects another User ID, e.g. a second User ID, and, at step <b>217</b> the second user repeats steps <b>206</b>-<b>215</b>. This allows configuration of user credentials and another encryption key for the second user.</p><p id="p-0104" num="0103">For each User ID, M may be a different number, provided M&#x3e;1. Thus, in one example, the second user may set first, second, third and fourth user credentials, in which case the codes for the second, third and fourth input screens may be encrypted using the first, second, and third user credentials, while the encryption key is encrypted with the fourth user credentials. In general, in Process B, when there are N user credentials required, the encryption key is encrypted with the N<sup>th </sup>user credentials.</p><p id="p-0105" num="0104">Once all User IDs have been configured (i.e. the steps <b>206</b>-<b>215</b> have been repeated for all of the N User IDs chosen at step <b>202</b>), the process ends at step <b>218</b>.</p><p id="p-0106" num="0105">Although not depicted in the flow chart of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the process may include (at any step) supplying a biometric user credential (e.g. fingerprint or iris scan) or may include supplying a token owned by the user, as additional factors of authorization. The controller <b>14</b> will record this input and require it when unlocking (a portion of) the memory <b>12</b> at a later time. On the same portable memory storage device <b>10</b>, one user may configure the controller to require a biometric input or a token for their User ID while another user does not configure the controller to require a biometric input or token.</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts a process of gaining access to (a portion of) the memory <b>12</b> of a portable memory storage device that has been configured according to Process A, described above in relation to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. As with the example described in conjunction with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the user going through the process shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> has set M=3, i.e. has to input three user credentials to gain access. In other examples, M may be any number greater than 1 and substantially the same process for gaining access to (a portion of) the memory <b>12</b> will apply.</p><p id="p-0108" num="0107">The process starts at step <b>800</b>.</p><p id="p-0109" num="0108">At step <b>801</b>, the user selects their User ID. In an alternative (not shown), the controller <b>14</b> may be configured to skip step <b>801</b> and to infer which user is attempting access to the memory <b>12</b> by checking the PIN entered on the first input screen.</p><p id="p-0110" num="0109">At step <b>802</b>, the display <b>18</b> displays the first input screen, e.g. the keypad (code 0001).</p><p id="p-0111" num="0110">The user enters their first user credentials at step <b>803</b>.</p><p id="p-0112" num="0111">If the user credentials are incorrect, the method ends and returns to the start <b>800</b>.</p><p id="p-0113" num="0112">If the user credentials are correct then, at step <b>804</b><i>a </i>the code for the second input screen is decrypted using the first user credentials. Simultaneously, at step <b>804</b><i>b</i>, the first part of the encryption key is decrypted using the first user credentials, which are then sanitized, and the decrypted first part of the encryption key is passed to the combining step <b>811</b>.</p><p id="p-0114" num="0113">Following step <b>804</b><i>a</i>, at step <b>805</b>, the second input screen is displayed at the display <b>18</b>, based on the code that was decrypted at step <b>804</b><i>a </i>(i.e. the second input screen for that user that was selected during the setup process for that user in the process of <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0115" num="0114">The user enters their second user credentials at step <b>806</b>.</p><p id="p-0116" num="0115">If the user credentials are incorrect, the method ends and returns to the start <b>800</b>.</p><p id="p-0117" num="0116">If the user credentials are correct then, at step <b>807</b><i>a</i>, the code for the third input screen is decrypted using the second user credentials. Simultaneously, at step <b>807</b><i>b</i>, the second part of the encryption key is decrypted using the second user credentials, which are then sanitized, and the decrypted second part of the encryption key is passed to the combining step <b>811</b>.</p><p id="p-0118" num="0117">Following step <b>807</b><i>a</i>, at step <b>808</b>, the third input screen is displayed at the display <b>18</b>, based on the code that was decrypted at step <b>807</b><i>a. </i></p><p id="p-0119" num="0118">The user enters their third user credentials at step <b>809</b>.</p><p id="p-0120" num="0119">If the user credentials are incorrect, the method ends and returns to the start <b>800</b>.</p><p id="p-0121" num="0120">If the user credentials are correct then, at step <b>810</b>, the third and final part of the encryption key is decrypted using the third user credentials, which are then sanitized, and the decrypted third part of the encryption key is passed to the combining step <b>811</b>. The three decrypted parts of the encryption key are combined into the full encryption key at combining step <b>811</b> and, at step <b>812</b><i>b</i>, the user is provided with (i.e. gains use of) the encryption key for the portion of the memory <b>12</b> associated with that User ID (i.e. the User ID entered at step <b>801</b>). Further, at step <b>812</b><i>a</i>, the user is granted access to that partition of the memory <b>12</b>, i.e. read/write access or read-only access as appropriate.</p><p id="p-0122" num="0121">Data stored on that partition of the memory <b>12</b> is encrypted/decrypted using this encryption key.</p><p id="p-0123" num="0122">In the process discussed above, the term &#x201c;encryption key&#x201d; may encompass solely a user's encryption key for that user's memory partition. Alternatively, in cases with a public memory partition <b>11</b>, the term &#x201c;encryption key&#x201d; may encompass a combined encryption key composed of the user's encryption key and the encryption key for the public memory partition <b>11</b>.</p><p id="p-0124" num="0123">Although not shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the process of gaining access to (a portion of) the memory <b>12</b>, can comprise a step of providing a biometric input, such as a fingerprint or iris scan at the biometric input device <b>16</b> or providing a token to the token-detecting device <b>22</b>. This may even be before the first input screen is displayed. Any biometric input or token is not used for decrypting the encryption key.</p><p id="p-0125" num="0124">In cases having a public memory partition <b>11</b>, the user will also be granted access (i.e. read/write access, or read-only access) to the public memory partition <b>11</b> at step <b>812</b><i>a. </i></p><p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. <b>9</b></figref> depicts a process of gaining access to (a portion of) the memory <b>12</b> of a portable memory storage device that has been configured according to Process B, described above in relation to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. As with the example described in conjunction with <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the user going through the process shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref> has set M=3, i.e. has to input three user credentials to gain access. In other examples, M may be any number greater than 1 and substantially the same process for gaining access to (a portion of) the memory <b>12</b> will apply.</p><p id="p-0127" num="0126">The process starts at step <b>900</b>.</p><p id="p-0128" num="0127">At step <b>901</b>, the user selects their User ID. In an alternative (not shown), the controller <b>14</b> may be configured to skip step <b>901</b> and instead to infer which user is attempting access to the memory <b>12</b> by checking the PIN entered on the first input screen.</p><p id="p-0129" num="0128">At step <b>902</b>, the display <b>18</b> displays the first input screen (e.g. keypad) to the user.</p><p id="p-0130" num="0129">At step <b>903</b>, the user enters their first user credentials.</p><p id="p-0131" num="0130">If the first user credentials are incorrect, the method ends and returns to the start <b>800</b>.</p><p id="p-0132" num="0131">If the first user credentials are correct, the code for the second input screen (for that user, i.e. as selected during the setup process for that user in the process shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) is decrypted using the first user credentials at step <b>904</b>.</p><p id="p-0133" num="0132">At step <b>905</b>, the second input screen is displayed at the display <b>18</b>, based on the code decrypted at step <b>904</b>.</p><p id="p-0134" num="0133">The user enters their second user credentials at step <b>906</b>.</p><p id="p-0135" num="0134">If the second user credentials are incorrect, the method ends and returns to the start <b>800</b>.</p><p id="p-0136" num="0135">If the second user credentials are correct, the code for the third input screen is decrypted using the second user credentials at step <b>907</b>.</p><p id="p-0137" num="0136">At step <b>908</b>, the third input screen is displayed at the display <b>18</b>, based on the code decrypted at step <b>907</b>.</p><p id="p-0138" num="0137">The user enters their third and final user credentials at step <b>909</b>.</p><p id="p-0139" num="0138">If the third user credentials are incorrect, the method ends and returns to the start <b>900</b>.</p><p id="p-0140" num="0139">If the third user credentials are correct, the encryption key is decrypted at step <b>910</b> using the third user credentials.</p><p id="p-0141" num="0140">At step <b>911</b><i>a</i>, the user gains access to (i.e. gains use of) the decrypted encryption key, and at step <b>911</b><i>b</i>, the user is granted access to (a portion of) the memory <b>12</b>, i.e. read/write access or read-only access as appropriate, corresponding to that User ID.</p><p id="p-0142" num="0141">Data on that portion of the memory <b>12</b> is encrypted/decrypted using this same encryption key.</p><p id="p-0143" num="0142">In cases having a public memory partition <b>11</b>, the encryption key for the public memory partition will be decrypted in step <b>910</b> as well (i.e. in addition to the decryption of the encryption key for that user's memory partition). The user will also be granted access to the encryption key for the public memory space at step <b>911</b><i>a </i>and also gain access to the public memory partition <b>11</b> at step <b>911</b><i>b. </i></p><p id="p-0144" num="0143">Although not shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the process of gaining access to (a portion of) the memory <b>12</b>, can comprise a step of providing a biometric input, such as a fingerprint or iris scan at the biometric input device <b>16</b> or providing a token to the token-detecting device <b>22</b>. This may even be before the first input screen is displayed.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of configuring a controller for controlling access to a memory, the controller connected to a display configured to selectively display a plurality of different input screens, wherein each input screen has a unique code associated therewith, the input screens for receiving user credentials from a user;<claim-text>the method comprising the steps of:</claim-text><claim-text>a) inputting to the controller a plurality of authentication factors required to access at least a first portion of the memory;</claim-text><claim-text>b) generating, by the controller, a first encryption key for encrypting data stored on the first portion of the memory;</claim-text><claim-text>c) displaying a first input screen at the display;</claim-text><claim-text>d) entering first user credentials to the first input screen and storing the first user credentials as a first factor of authentication;</claim-text><claim-text>e) displaying a second input screen at the display;</claim-text><claim-text>f) entering second user credentials to the second input screen and storing the user credentials as a second factor of authentication;</claim-text><claim-text>g) encrypting the code for the second input screen using the first user credentials; and</claim-text><claim-text>h) encrypting the first encryption key using at least one of the user credentials.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of authentication factors comprises more than two authentication factors; and<claim-text>wherein, before the step h) of encrypting the first encryption key, for each further authentication factor the method comprises:<claim-text>displaying a further input screen at the display;</claim-text></claim-text><claim-text>entering further user credentials to the further input screen and storing the user credentials in the controller as further factor of authentication; and</claim-text><claim-text>encrypting the code for the preceding input screen using the further user credentials.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first encryption key is divided into a plurality of portions corresponding to the plurality of authentication factors and wherein each step of encrypting a code for an input screen additionally comprises encrypting a different portion of the first encryption key.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the memory is divided into a plurality of portions for use by different users, the method comprising:<claim-text>repeating at least steps a) to h) for each portion of the memory, such that a different encryption key is generated for, and encrypted for, each portion of the memory.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of input screens comprise a plurality of input screens selected from: a keypad for receiving a code, and at least two different swipe pattern grids for receiving a swipe pattern.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising configuring the controller to require a biometric input or token as a further factor of authentication, wherein authentication via the biometric input or token is required for access to the first encryption key.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first encryption key comprises an encryption key for encrypting data stored on the first portion of the memory combined with a public memory partition encryption key for encrypting data stored on a public memory partition of the memory, and wherein, if present, each further encryption key for a portion of the memory is combined with the public memory partition encryption key.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method of authenticating a user using a controller that has been configured according to the method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method comprising the steps:<claim-text>i) entering first user credentials to the first input screen displayed on the display as a first authentication factor,</claim-text><claim-text>j) determining, by the controller, whether the first user credentials match stored first user credentials and, if not, disallowing access to the memory, and if so:</claim-text><claim-text>k) decrypting, by the controller, the code associated with the second input screen; and</claim-text><claim-text>l) on the basis of the decrypted code, displaying the second input screen on the display;</claim-text><claim-text>m) entering second user credentials to the second input screen as a second authentication factor;</claim-text><claim-text>n) determining, by the controller, whether the second user credentials match stored second user credentials.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of authenticating a user according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein there are more than two authentication factors including at least one further authentication factor with a corresponding further input screen and further user credentials, wherein the controller is configured to require each of the first, second and further user credentials before allowing a user access to at least a portion of the memory, the method comprising, for each further authentication factor:<claim-text>if the second user credentials match stored second user credentials decrypting, by the controller, the code associated with the further input screen;</claim-text><claim-text>displaying the further input screen;</claim-text><claim-text>entering further user credentials for the further input screen;</claim-text><claim-text>determining, by the controller whether the further user credentials match the respective stored further user credentials; and</claim-text><claim-text>if so, optionally repeating these steps for one or more still further factor(s) of authentication, if present, with each subsequent input screen being accessed by decrypting the associated code if the preceding user credentials match respective stored user credentials.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of authenticating a user according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:<claim-text>if the controller has determined that all user credentials match the respective stored user credentials, such that all factors of authentication have been satisfied, then the method further comprises decrypting, by the controller, the first encryption key and allowing the user access to at least a portion of the memory having data encrypted by the first encryption key.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of authenticating a user according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of factors of authentication include a requirement for a biometric input or for the presence of a token, the method further comprising the step of detecting a biometric input from a user or detecting the presence of a token; and wherein if the controller has determined that all user credentials match the respected stored user credentials, and also that the biometric input or token identifies an authorised user, such that all factors of authentication have been satisfied, then the method comprises decrypting, by the controller, the first encryption key and allowing the user access to at least a portion of the memory having data encrypted by the first encryption key.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A portable memory storage device comprising a controller, a memory, and a display configured to receive input from a user, the portable memory storage device configured according to the method of <claim-ref idref="CLM-00001">claim 1</claim-ref>.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The portable memory storage device according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the memory is divided into a plurality of portions, wherein each portion is associated with a respective user, wherein each portion is configured, such that a different encryption key is generated for each portion.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The portable memory storage device according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the memory further comprises a public memory partition, wherein the controller is configured to combine the encryption key for each portion with a public memory partition encryption key for encrypting and decrypting data on the public memory partition.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The portable memory storage device according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, comprising a biometric input device and/or a token detecting device.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The portable memory storage device according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the controller is configured to authenticate a user.</claim-text></claim></claims></us-patent-application>