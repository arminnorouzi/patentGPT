<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004324A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004324</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17575907</doc-number><date>20220114</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>KR</country><doc-number>10-2021-0086577</doc-number><date>20210701</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>48</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0659</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0613</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0604</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0679</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>4812</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">STORAGE DEVICE, OPERATING METHOD OF STORAGE DEVICE, AND ELECTRONIC DEVICE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SAMSUNG ELECTRONICS CO., LTD.</orgname><address><city>Suwon-si</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LIM</last-name><first-name>Jaehwan</first-name><address><city>Seongnam-si</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Jae Eun</first-name><address><city>Yongin-si</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Ji-Hoon</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>JUN</last-name><first-name>Walter</first-name><address><city>Seoul</city><country>KR</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>LEE</last-name><first-name>Jungwoo</first-name><address><city>Hwaseong-si</city><country>KR</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>LIM</last-name><first-name>Seung-Woo</first-name><address><city>Hwaseong-si</city><country>KR</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>SAMSUNG ELECTRONICS CO., LTD.</orgname><role>03</role><address><city>Suwon-si</city><country>KR</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A storage device includes a nonvolatile memory device and a storage controller. The storage controller accesses the nonvolatile memory device based on a request of an external host device. The storage controller sends a signal to the external host device, based a throughput of accessing the nonvolatile memory device being within a specific range.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="133.35mm" wi="158.75mm" file="US20230004324A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="168.49mm" wi="154.43mm" orientation="landscape" file="US20230004324A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="207.35mm" wi="155.19mm" orientation="landscape" file="US20230004324A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="122.51mm" wi="152.91mm" file="US20230004324A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="191.94mm" wi="143.34mm" file="US20230004324A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="191.94mm" wi="143.34mm" file="US20230004324A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="234.10mm" wi="157.23mm" orientation="landscape" file="US20230004324A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="118.28mm" wi="82.55mm" file="US20230004324A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="234.10mm" wi="140.80mm" orientation="landscape" file="US20230004324A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="197.70mm" wi="84.07mm" file="US20230004324A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="234.10mm" wi="122.09mm" orientation="landscape" file="US20230004324A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="158.16mm" wi="87.97mm" file="US20230004324A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="246.38mm" wi="85.85mm" orientation="landscape" file="US20230004324A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="86.95mm" wi="155.87mm" file="US20230004324A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="246.38mm" wi="98.47mm" orientation="landscape" file="US20230004324A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="246.38mm" wi="113.11mm" orientation="landscape" file="US20230004324A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="246.38mm" wi="125.65mm" orientation="landscape" file="US20230004324A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="168.49mm" wi="136.06mm" orientation="landscape" file="US20230004324A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority under 35 U.S.C. &#xa7; 119 to Korean Patent Application No. 10-2021-0086577 filed on Jul. 1, 2021, in the Korean Intellectual Property Office, the disclosure of which is incorporated by reference herein in its entirety.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The present disclosure relates to an electronic device, and more particularly, relates to a storage device capable of improving performance of an electronic device implemented with multiple processors, an operating method of the storage device, and an electronic device.</p><p id="p-0004" num="0003">An electronic device may be implemented with multiple processors. For example, an electronic device may be implemented to include two or more central processing units (CPUs). Alternatively, each of central processing units of an electronic device may be implemented to include two or more processor cores. Each of the multiple processors, whether CPUs or cores, may communicate with a peripheral device adjacent thereto and may communicate with a remote peripheral device through any other processor.</p><p id="p-0005" num="0004">For example, a processor that is disposed adjacent to a specific peripheral device so as to directly access the specific peripheral device may be referred to as a local processor. A processor that is not disposed adjacent to the specific peripheral device and accesses the specific peripheral device through the local processor adjacent to the specific peripheral device may be referred to as a remote processor.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">It is an aspect to provide a storage device capable of improving throughput efficiency of the storage device, an operating method of the storage device, and an electronic device.</p><p id="p-0007" num="0006">According to an aspect of one or more embodiments, there is provided a storage device comprising a nonvolatile memory device, and a storage controller that accesses the nonvolatile memory device based on a request of an external host device. The storage controller sends a signal to the external host device, based on a throughput of accessing the nonvolatile memory device being within a specific range.</p><p id="p-0008" num="0007">According to another aspect of one or more embodiments, there is provided an operating method comprising accessing, at a storage controller, a nonvolatile memory device based on a request of an external host device; monitoring, at the storage controller, a throughput of accessing the nonvolatile memory device; and sending, from the storage controller, a signal to the external host device based on the throughput being within a specific range.</p><p id="p-0009" num="0008">According to yet another aspect of one or more embodiments, there is provided an electronic device comprising a first processor group including a plurality of first processors; a second processor group including a plurality of second processors, the second processor group being configured to communicate with the first processor group; and a storage device connected with the second processor group, wherein the plurality of second processors directly access the storage device, wherein the plurality of first processors access the storage device through the plurality of second processors, and wherein, based on a throughput of the storage device being within a specific range, the storage device sends a signal to a processor that accesses the storage device from among the plurality of first processors and the plurality of second processors.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0010" num="0009">The above and aspects will become apparent by describing in detail embodiments thereof with reference to the accompanying drawings, in which:</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an electronic device according to an embodiment;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a storage device according to an embodiment;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a test result of throughput of a storage device, according to an embodiment;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of an operating method of an electronic device, according to an embodiment;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a first example of an operating method of a storage device, according to an embodiment;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example in which an electronic device operates when a storage device executes a throughput management process of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, according to an embodiment;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a second example of an operating method of a storage device, according to an embodiment;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example in which an electronic device operates when a storage device executes a throughput management process of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, according to an embodiment;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a third example of an operating method of a storage device, according to an embodiment;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an example in which an electronic device operates when a storage device executes a throughput management process of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, according to an embodiment;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a fourth example of an operating method of a storage device, according to an embodiment;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a second example of a format of a request or report that a storage device sends to an external host device, according to an embodiment;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates an example of a message control register, according to an embodiment;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates a second example of a format of a request or report that a storage device sends to an external host device, according to an embodiment;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>15</b></figref> illustrates a third example of a format of a request or report that a storage device sends to an external host device; according to an embodiment;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates an example of a format of a request or report that a storage device sends to an external host device, according to an embodiment; and</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates an electronic device according to another embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0028" num="0027">Below, various embodiments will be described in detail and clearly to such an extent that an ordinary one in the art easily implements the technical concept of the present disclosure.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an electronic device <b>100</b> according to an embodiment.</p><p id="p-0030" num="0029">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the electronic device <b>100</b> may include a first processor group <b>111</b>, a second processor group <b>112</b>, a third processor group <b>113</b>, and a fourth processor group <b>114</b>. Each of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b> may include a plurality of processors A, B, C, and D.</p><p id="p-0031" num="0030">The electronic device <b>100</b> may include a first node <b>121</b>, a second node <b>122</b>, a third node <b>123</b>, and a fourth node <b>124</b> corresponding to the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>, respectively.</p><p id="p-0032" num="0031">The first processor group <b>111</b> may be directly connected with the first node <b>121</b>. In some embodiments, the processors A, B, C, and D of the first processor group <b>111</b> may be directly connected to the first node <b>121</b>. The processors A, B, C, and D of the first processor group <b>111</b> may be local processors of the first node <b>121</b>. The first node <b>121</b> may be a local node of the first processor group <b>111</b>. The second processor group <b>112</b> may be directly connected with the second node <b>122</b>. In some embodiments, the processors A, B, C, and D of the second processor group <b>112</b> may be directly connected to the second node <b>122</b>. The processors A, B, C, and D of the second processor group <b>112</b> may be local processors of the second node <b>122</b>. The second node <b>122</b> may be a local node of the second processor group <b>112</b>.</p><p id="p-0033" num="0032">The third processor group <b>113</b> may be directly connected with the third node <b>123</b>. In some embodiments, the processors A, B, C, and D of the third processor group <b>113</b> may be directly connected to the third node <b>123</b>. The processors A, B, C, and D of the third processor group <b>113</b> may be local processors of the third node <b>123</b>. The third node <b>123</b> may be a local node of the third processor group <b>113</b>. The fourth processor group <b>114</b> may be directly connected with the fourth node <b>124</b>. In some embodiments, the processors A, B, C, and D of the fourth processor group <b>114</b> may be directly connected to the fourth node <b>124</b>. The processors A, B, C, and D of the fourth processor group <b>114</b> may be local processors of the fourth node <b>124</b>. The fourth node <b>124</b> may be a local node of the fourth processor group <b>114</b>.</p><p id="p-0034" num="0033">The first processor group <b>111</b> may access the second node <b>122</b>, the third node <b>123</b>, and the fourth node <b>124</b> through the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>, respectively. In some embodiments, the processors A, B, C, and D of the first processor group <b>111</b> may access the second node <b>112</b>, the third node <b>123</b>, and the fourth node <b>124</b> through the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>, respectively. The processors A, B, C, and D of the first processor group <b>111</b> may be remote processors of the second node <b>122</b>, the third node <b>123</b>, and the fourth node <b>124</b>. The second node <b>122</b>, the third node <b>123</b>, and the fourth node <b>124</b> may be remote nodes of the first processor group <b>111</b>.</p><p id="p-0035" num="0034">As such, a node and processors that are directly connected to communicate with each other may be a local node and local processors. A node and processors that are connected through another processor group to communicate with each other may be a remote node and remote processors. Below, duplicated descriptions are omitted.</p><p id="p-0036" num="0035">In an embodiment, the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b> may communicate with each other based on ultra path interconnect (UPI).</p><p id="p-0037" num="0036">The electronic device <b>100</b> may further include a first memory (MEM) <b>131</b>, a second memory (MEM) <b>132</b>, a third memory (MEM) <b>133</b>, a fourth memory (MEM) <b>134</b>, a first storage device (SD) <b>141</b>, a second storage device (SD) <b>142</b>, a third storage device (SD) <b>143</b>, and a fourth storage device (SD) <b>144</b>.</p><p id="p-0038" num="0037">Each of the first memory <b>131</b>, the second memory <b>132</b>, the third memory <b>133</b>, and the fourth memory <b>134</b> may include a random access memory such as a dynamic random access memory (DRAM), a phase-change RAM (PRAM), a magnetic RAM (MRAM), a ferroelectric RAM (FRAM), or a resistive RAM (RRAM).</p><p id="p-0039" num="0038">Each of the first storage device <b>141</b>, the second storage device <b>142</b>, the third storage device <b>143</b>, and the fourth storage device <b>144</b> may include a nonvolatile memory such as a flash memory, a phase-change memory, a ferroelectric memory, a magnetic memory, or a resistive memory.</p><p id="p-0040" num="0039">The first node <b>121</b> may include a memory controller MC controlling the first memory <b>131</b> and an interface circuit IC communicating with the first storage device <b>141</b>. The second node <b>122</b> may include a memory controller MC controlling the second memory <b>132</b> and an interface circuit IC communicating with the second storage device <b>142</b>.</p><p id="p-0041" num="0040">The third node <b>123</b> may include a memory controller MC controlling the third memory <b>133</b> and an interface circuit IC communicating with the third storage device <b>143</b>. The fourth node <b>124</b> may include a memory controller MC controlling the fourth memory <b>134</b> and an interface circuit IC communicating with the fourth storage device <b>144</b>.</p><p id="p-0042" num="0041">In an embodiment, the memory controller MC of each of the first node <b>121</b>, the second node <b>122</b>, the third node <b>123</b>, and the fourth node <b>124</b> may communicate with the corresponding memory of the first memory <b>131</b>, the second memory <b>132</b>, the third memory <b>133</b>, and the fourth memory <b>134</b>, respectively, based on the DDR SDRAM standard.</p><p id="p-0043" num="0042">The interface circuit IC of each of the first node <b>121</b>, the second node <b>122</b>, the third node <b>123</b>, and the fourth node <b>124</b> may communicate with the corresponding storage device of the first storage device <b>141</b>, the second storage device <b>142</b>, the third storage device <b>143</b>, and the fourth storage device <b>144</b>, respectively, based on the PCIe (Peripheral Component Interconnect express) or NVMe (Non-Volatile Memory express) standard.</p><p id="p-0044" num="0043">In an embodiment, the electronic device <b>100</b> may be implemented based on Non-Uniform Memory Access (NUMA). A specific processor may locally access a local memory or a local storage device and may remotely access a remote memory or a remote storage device through any other processor group (or any other processors of any other processor group).</p><p id="p-0045" num="0044">In an embodiment, like the first memory <b>131</b>, the second memory <b>132</b>, the third memory <b>133</b>, the fourth memory <b>134</b>, the first storage device <b>141</b>, the second storage device <b>142</b>, the third storage device <b>143</b>, and the fourth storage device <b>144</b>, devices that are placed outside processor groups (or processors of processor groups) and are targeted for access by a processor may be peripheral devices.</p><p id="p-0046" num="0045">A speed at which a specific processor accesses a local peripheral device is faster than a speed at which the specific processor accesses a remote peripheral device. In other words, a latency of access of a remote peripheral device is greater than a latency of access of a local peripheral device. Likewise, efficiency of throughput of a specific peripheral device when accessed by a local processor may be higher than that when accessed by a remote processor.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a storage device <b>200</b> according to an embodiment. In an embodiment, the storage device <b>200</b> may correspond to at least one of the first storage device <b>141</b>, the second storage device <b>142</b>, the third storage device <b>143</b>, and the fourth storage device <b>144</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, the storage device <b>200</b> may include a nonvolatile memory device <b>210</b>, a storage controller <b>220</b>, and an external buffer <b>230</b>. The nonvolatile memory device <b>210</b> may include a plurality of memory cells. Each of the plurality of memory cells may store two or more bits.</p><p id="p-0048" num="0047">For example, the nonvolatile memory device <b>210</b> may include at least one of various nonvolatile memory devices such as a flash memory device, a phase change memory device, a ferroelectric memory device, a magnetic memory device, and a resistive memory device.</p><p id="p-0049" num="0048">The storage controller <b>220</b> may receive various requests for writing data in the nonvolatile memory device <b>210</b> or reading data from the nonvolatile memory device <b>210</b> from an external host device. The storage controller <b>220</b> may store (or buffer) user data communicated with the external host device in the external buffer <b>230</b> and may store metadata for managing the storage device <b>200</b> in the external buffer <b>230</b>.</p><p id="p-0050" num="0049">The storage controller <b>220</b> may access the nonvolatile memory device <b>210</b> through first signal lines SIGL<b>1</b> and second signal lines SIGL<b>2</b>. For example, the storage controller <b>220</b> may send a command and an address to the nonvolatile memory device <b>210</b> through the first signal lines SIGL<b>1</b>. The storage controller <b>220</b> may exchange data with the nonvolatile memory device <b>210</b> through the first signal lines SIGL<b>1</b>.</p><p id="p-0051" num="0050">The storage controller <b>220</b> may exchange control signals with the nonvolatile memory device <b>210</b> through the second signal lines SIGL<b>2</b>.</p><p id="p-0052" num="0051">In an embodiment, the storage controller <b>220</b> may be configured to control two or more nonvolatile memory devices. The storage controller <b>220</b> may provide first signal lines and second signal lines for each of the two or more nonvolatile memory devices.</p><p id="p-0053" num="0052">In another embodiment, the storage controller <b>220</b> may provide first signal lines so as to be shared by the two or more nonvolatile memory devices. The storage controller <b>220</b> may provide a part of second signal lines so as to be shared by the two or more nonvolatile memory devices and may separately provide the remaining part thereof.</p><p id="p-0054" num="0053">The external buffer <b>230</b> may include a random access memory. For example, the external buffer <b>230</b> may include at least one of a dynamic random access memory, a phase change random access memory, a ferroelectric random access memory, a magnetic random access memory, and a resistive random access memory.</p><p id="p-0055" num="0054">The storage controller <b>220</b> may include a bus <b>221</b>, a host interface <b>222</b>, an internal buffer <b>223</b>, a storage processor <b>224</b>, a buffer controller <b>225</b>, a memory manager <b>226</b>, and an error correction code (ECC) block <b>227</b>.</p><p id="p-0056" num="0055">The bus <b>221</b> may provide communication channels between the components in the storage controller <b>220</b>. The host interface <b>222</b> may receive various requests from the external host device and may parse the received requests. The host interface <b>222</b> may store the parsed requests in the internal buffer <b>223</b>.</p><p id="p-0057" num="0056">The host interface <b>222</b> may send various responses to the external host device. The host interface <b>222</b> may exchange signals with the external host device in compliance with a given communication protocol. The internal buffer <b>223</b> may include a random access memory. For example, the internal buffer <b>223</b> may include a static random access memory or a dynamic random access memory.</p><p id="p-0058" num="0057">The storage processor <b>224</b> may drive an operating system or firmware for driving the storage controller <b>220</b>. The storage processor <b>224</b> may read the parsed requests stored in the internal buffer <b>223</b> and may generate commands and addresses for controlling the nonvolatile memory device <b>210</b>. The storage processor <b>224</b> may provide the generated commands and addresses to the memory manager <b>226</b>.</p><p id="p-0059" num="0058">The storage processor <b>224</b> may store various metadata for managing the storage device <b>200</b> in the internal buffer <b>223</b>. The storage processor <b>224</b> may access the external buffer <b>230</b> through the buffer controller <b>225</b>. The storage processor <b>224</b> may control the buffer controller <b>225</b> and the memory manager <b>226</b> such that user data stored in the external buffer <b>230</b> are provided to the nonvolatile memory device <b>210</b>.</p><p id="p-0060" num="0059">The storage processor <b>224</b> may control the host interface <b>222</b> and the buffer controller <b>225</b> such that the data stored in the external buffer <b>230</b> are provided to the external host device. The storage processor <b>224</b> may control the buffer controller <b>225</b> and the memory manager <b>226</b> such that data received from the nonvolatile memory device <b>210</b> are stored in the external buffer <b>230</b>. The storage processor <b>224</b> may control the host interface <b>222</b> and the buffer controller <b>225</b> such that data received from the external host device are stored in the external buffer <b>230</b>.</p><p id="p-0061" num="0060">Under control of the storage processor <b>224</b>, the buffer controller <b>225</b> may write data in the external buffer <b>230</b> or may read data from the external buffer <b>230</b>. The memory manager <b>226</b> may communicate with the nonvolatile memory device <b>210</b> through the first signal lines SIGL<b>1</b> and the second signal lines SIGL<b>2</b> under control of the storage processor <b>224</b>.</p><p id="p-0062" num="0061">The memory manager <b>226</b> may access the nonvolatile memory device <b>210</b> under control of the storage processor <b>224</b>. For example, the memory manager <b>226</b> may access the nonvolatile memory device <b>210</b> through the first signal lines SIGL<b>1</b> and the second signal lines SIGL<b>2</b>. The memory manager <b>226</b> may communicate with the nonvolatile memory device <b>210</b>, based on a protocol that is defined in compliance with the standard or is defined by a manufacturer.</p><p id="p-0063" num="0062">The error correction code block <b>227</b> may perform error correction encoding on data to be provided to the nonvolatile memory device <b>210</b> by using an error correction code (ECC). The error correction code block <b>227</b> may perform error correction decoding on data received from the nonvolatile memory device <b>210</b> by using the error correction code (ECC).</p><p id="p-0064" num="0063">In some embodiments, the storage device <b>200</b> may omit the external buffer <b>230</b> and the buffer controller <b>225</b>. When the external buffer <b>230</b> and the buffer controller <b>225</b> are not included in the storage device <b>200</b>, the above functions of the external buffer <b>230</b> and the buffer controller <b>225</b> may be performed by the internal buffer <b>223</b>.</p><p id="p-0065" num="0064">In an embodiment, the external host device may be selected from the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>. For example, the external host device may be a local processor or a remote processor. In some embodiments, the external host device may be selected from the processors A, B, C, and D of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a test result of throughput of the storage device <b>200</b>, according to an embodiment. In an embodiment, a test was performed by using a flexible IO tester (FIO). The FIO was set to &#x201c;worker16&#x201d;, which indicates that the FIO is capable of sending 16 access commands to the storage device <b>200</b> at the same time.</p><p id="p-0067" num="0066">In <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a horizontal axis represents a queue depth (QD) set to the FIO. 1, 2, 4, 8, 16, 32, 64, 128 were selected as the queue depth. A vertical axis represents throughput of the storage device <b>200</b>. For example, the throughput may indicate a speed of an input and output (IO) that the storage device <b>200</b> supports and may be expressed in units of IOPS (Input/Output Operations Per Second) or Kilo Input/Output Operation Per Second (MOPS).</p><p id="p-0068" num="0067">In each queue depth, a first line L<b>1</b> shows a test result of a local mode, and shows the throughput of the storage device <b>200</b> when a local processor sends a command for an access to the storage device <b>200</b>. A second line L<b>2</b> shows a test result of a normal mode, and shows the throughput of the storage device <b>200</b> when a processor selected from a local processor and remote processor sends a command for an access to the storage device <b>200</b>. A third line L<b>3</b> shows a test result of a remote mode, and shows the throughput of the storage device <b>200</b> when a remote processor sends a command for an access to the storage device <b>200</b>. The normal mode may be a mixed mode of the local mode and the remote mode. In an embodiment, in the normal mode, a processor that sends an access command to the storage device <b>200</b> may be selected from a local processor and a remote processor based on a given policy of the electronic device <b>100</b>.</p><p id="p-0069" num="0068">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>3</b></figref>, in the settings of &#x201c;worker16&#x201d;, when the queue depth was 16 or more, the throughput at which a local processor accessed the storage device <b>200</b> did not increase any more. That is, in the settings of &#x201c;worker16&#x201d;, the throughput when the queue depth is 16 or more may be regarded as a maximum throughput MAX of the storage device <b>200</b>. For example, the maximum throughput MAX of the storage device <b>200</b> may be normalized to a value of 100.</p><p id="p-0070" num="0069">In the settings of &#x201c;worker16&#x201d;, when the queue depth was 4 or less, the storage device <b>200</b> that was used in the local mode, the normal mode, and the remote mode provided the throughput of similar levels. That is, when a specific process has an IO requirement of &#x201c;worker16&#x201d; and a queue depth of 4 or less with regard to the storage device <b>200</b>, the corresponding process may use the throughput of the storage device <b>200</b>, which has similar levels in the local mode, the normal mode, and the remote mode.</p><p id="p-0071" num="0070">In the settings of &#x201c;worker16&#x201d;, when the queue depth was 8 or more, the storage device <b>200</b> provided the throughput that has a difference of a reference value or more between the local mode, the normal mode, and the remote mode. For example, the throughput of the storage device <b>200</b> that is used when a remote processor executes a process having an IO requirement of &#x201c;worker16&#x201d; and a queue depth of 8 or more with regard to the storage device <b>200</b> may be lower than the throughput of the storage device <b>200</b> that is used when a local processor executes the corresponding process.</p><p id="p-0072" num="0071">That is, the throughput of the storage device <b>200</b> that is used when a local processor executes a specific process may be different from the throughput of the storage device <b>200</b> that is used when a remote processor executes the specific process. This result may mean that performance when the local processor executes the specific process is higher than performance when the remote processor executes the specific process.</p><p id="p-0073" num="0072">A first threshold value TV<b>1</b> and a second threshold value TV<b>2</b> may be determined based on the test results of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The first threshold value TV<b>1</b> may be lower than the throughput of the storage device <b>200</b> that is used in the remote mode when the queue depth was 8 in the settings of &#x201c;worker16&#x201d;. For example, the first threshold value TV<b>1</b> may be 60% of the maximum throughput MAX of the storage device <b>200</b>. The second threshold value TV<b>2</b> may be higher than the throughput of the storage device <b>200</b> used in the normal mode and lower than the throughput of the storage device <b>200</b> used in the local mode, when the queue depth was 8 in the settings of &#x201c;worker16&#x201d;. For example, the second threshold value TV<b>2</b> may be 70% of the maximum throughput MAX of the storage device <b>200</b>.</p><p id="p-0074" num="0073">A specific range may be defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>. When the throughput of the storage device <b>200</b> belongs to the range from the first threshold value TV<b>1</b> to the second threshold value TV<b>2</b>, the electronic device <b>100</b> may change a processor, which executes a process of accessing the storage device <b>200</b>, from a remote processor to a local processor. When the change is successfully made, the throughput of the storage device <b>200</b> may change from the third line L<b>3</b> to the first line L<b>1</b>. That is, efficiency of accessing the storage device <b>200</b> may be improved, and performance of the process may be improved.</p><p id="p-0075" num="0074">The description is given as the first threshold value TV<b>1</b> is 60% of the maximum throughput MAX and the second threshold value TV<b>2</b> is 70% of the maximum throughput MAX. However, values of the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b> are not limited to specific values and may vary depending on the performance and physical feature of the storage device <b>200</b>. In other words, the values of the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b> may be set experimentally for a given electronic device operated under a given set of conditions or for a given performance level.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of an operating method of the electronic device <b>100</b>, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, and <b>4</b></figref>, in operation S<b>110</b>, the electronic device <b>100</b> may generate a process having an access (e.g., the IO request) to the storage device <b>200</b> (e.g., one specific storage device of the first storage device <b>141</b>, the second storage device <b>142</b>, the third storage device <b>143</b>, and the fourth storage device <b>144</b>). For example, at least one processor (e.g., at least one processor executing an operating system) of processors A, B, C, and D of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b> may execute a new process.</p><p id="p-0077" num="0076">In operation S<b>120</b>, the electronic device <b>100</b> (or the at least one processor generating the process) may determine whether an input and output (IO) requirement of the newly generated process is greater than or equal to a third threshold value TV<b>3</b>. For example, the third threshold value TV<b>3</b> may correspond to &#x201c;worker16 and queue depth 8&#x201d;. The third threshold value TV<b>3</b> may be 128 corresponding to a product of 16 being a value of &#x201c;worker&#x201d; and 8 being the queue depth.</p><p id="p-0078" num="0077">As described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, in an IO setting lower than &#x201c;worker16 and queue depth 8&#x201d;, the storage device <b>200</b> may provide the throughput that is similar in the local mode, the normal mode, and the remote mode. Accordingly, the electronic device <b>100</b> (or the at least one processor generating the process) may allocate the new process to a remote processor (e.g., access a specific storage device through a processor group connected with the specific storage device).</p><p id="p-0079" num="0078">When the IO requirement is greater than or equal to the third threshold value TV<b>3</b> (operation S<b>120</b>, YES), the electronic device <b>100</b> (or the at least one processor generating the process) may perform operation S<b>140</b>. In an embodiment, the third threshold value TV<b>3</b> may be equal or similar to the second threshold value TV<b>2</b>.</p><p id="p-0080" num="0079">In operation S<b>140</b>, the electronic device <b>100</b> (or the at least one processor generating the process) may determine whether a local processor that is in an idle state exists. When the local processor that is in an idle state does not exist (operation S<b>140</b>, NO) or when the IO requirement is less the third threshold value TV<b>3</b> (operation S<b>120</b>, NO), in operation S<b>130</b> the electronic device <b>100</b> (or the at least one processor generating the process) may allocate the new process to a remote processor (e.g., access a specific storage device through a processor group connected with the specific storage device).</p><p id="p-0081" num="0080">When the local processor that is in an idle state exists (operation S<b>140</b>, YES), in operation S<b>150</b> the electronic device <b>100</b> (or the at least one processor generating the process) may allocate the new process to the local processor (e.g., a processor directly connected with a specific storage device through a node for communication, without passing through any other processor group).</p><p id="p-0082" num="0081">As described above, when use efficiency of the throughput of the storage device <b>200</b> is not affected by whether an IO requirement of a new process belongs to any mode of the remote mode, the normal mode, and the local mode (e.g., the use efficiency of the throughput of the storage device <b>200</b> is similar), the electronic device <b>100</b> may allocate the new process to a remote processor. When use efficiency of the throughput of the storage device <b>200</b> is affected by whether an IO requirement of a new process belongs to any mode of the remote mode, the normal mode, and the local mode (e.g., when the use efficiency of the storage device <b>200</b> is affected), the electronic device <b>100</b> may allocate the new process to a local processor.</p><p id="p-0083" num="0082">According to the embodiment of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, processes having an IO requirement for a specific storage device are prevented from being allocated to local processors. Accordingly, heat generation is prevented from being focused on a specific processor group, and the reliability of the electronic device <b>100</b> is improved. For example, data stored in a memory may be prevented from being lost due to heat generation.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a first example of an operating method of the storage device <b>200</b>, according to an embodiment. In an embodiment, a first example in which the storage device <b>200</b> executes a throughput management process is illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, and <b>5</b></figref>, in operation S<b>210</b>, the storage device <b>200</b> may monitor throughput provided to the external host device while handling an IO requested from the external host device (e.g., a local processor, a remote processor, or a process executed by one thereof). For example, the storage controller <b>220</b> of the storage device <b>200</b> may monitor the throughput while accessing the nonvolatile memory device <b>210</b> based on the requested <b>10</b>.</p><p id="p-0085" num="0084">In operation S<b>220</b>, the storage device <b>200</b> may determine whether the throughput is greater than the first threshold value TV<b>1</b>. When the throughput is not greater than the first threshold value TV<b>1</b> (e.g., is smaller than or equal to the first threshold value TV<b>1</b>) (operation S<b>220</b>, NO), as described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the throughput provided to the external host device may not change depending on whether the storage device <b>200</b> is used in any mode of the local mode, the normal mode, and the remote mode for the external host device. Accordingly, in operation S<b>230</b>, the storage controller <b>220</b> of the storage device <b>200</b> may report the throughput to the external host device.</p><p id="p-0086" num="0085">When the throughput is greater than the first threshold value TV<b>1</b> (operation S<b>220</b>, YES), in operation S<b>240</b>, the storage controller <b>220</b> of the storage device <b>200</b> may determine whether the throughput is less than the second threshold value TV<b>2</b>. When the throughput is not less than the second threshold value TV<b>2</b> (e.g., greater than or equal to the second threshold value TV<b>2</b>) (operation S<b>240</b>, NO), the external host device accessing the storage device <b>200</b> may be a local processor or a process that is executed by the local processor. Accordingly, in operation S<b>230</b>, the storage controller <b>220</b> of the storage device <b>200</b> may report the throughput to the external host device.</p><p id="p-0087" num="0086">When the throughput is greater than the first threshold value TV<b>1</b> and is less than the second threshold value TV<b>2</b> (operation S<b>240</b>, YES), as described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the external host device may be a remote processor or a process that is executed by the remote processor. Accordingly, in operation S<b>250</b>, the storage device <b>200</b> may request a local processor from the external host device. That is, the storage device <b>200</b> may support the improvement of performance of the external host device by comparing the throughput with the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b> and requesting the external host device to redistribute a resource depending on a comparison result.</p><p id="p-0088" num="0087">In the case where operation S<b>210</b> to operation S<b>250</b> are performed, the throughput management process of the storage device <b>200</b> may end. In an embodiment, the throughput management process of the storage device <b>200</b> may be performed periodically. Alternatively, the throughput management process of the storage device <b>200</b> may be performed in response to a change in a value of the throughput.</p><p id="p-0089" num="0088">For example, the throughput of the storage device <b>200</b> may have values from &#x201c;0&#x201d; to the maximum throughput MAX. Here, the values from &#x201c;0&#x201d; to the maximum throughput MAX may be divided into a plurality of ranges (e.g., in units of normalized 10). The storage controller <b>220</b> of the storage device <b>200</b> may determine whether a value of the throughput belongs to any range. For example, the storage device <b>200</b> may perform the throughput management process in response to a change in a range to which a value of the throughput of the storage device <b>200</b> belongs.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example in which the electronic device <b>100</b> operates when the storage device <b>200</b> executes a throughput management process of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>5</b>, and <b>6</b></figref>, in operation S<b>310</b>, a process having an IO requirement for the fourth storage device <b>144</b> may be allocated to at least one of the processors A, B, C, and D of the first processor group <b>111</b>. That is, the process may be a remote process that is allocated to at least one remote processor of the processors A, B, C, and D of the first processor group <b>111</b>. In operation S<b>310</b>, the remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process) may start an access to the fourth storage device <b>144</b> through the interconnection with the fourth processor group <b>114</b>.</p><p id="p-0091" num="0090">In operation S<b>320</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and when the throughput of the fourth storage device <b>144</b> does not belong to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the fourth storage device <b>144</b> may report the throughput. For example, the fourth storage device <b>144</b> may report the throughput to the remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process), based on the interconnection with the fourth processor group <b>114</b>.</p><p id="p-0092" num="0091">In operation S<b>330</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and when the throughput of the fourth storage device <b>144</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the fourth storage device <b>144</b> may request the local processor. For example, the fourth storage device <b>144</b> may request the local processor from the remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process), based on the interconnection with the fourth processor group <b>114</b>.</p><p id="p-0093" num="0092">In operation S<b>340</b>, the electronic device <b>100</b> may perform switching. For example, an execution subject of the process may be changed from the first processor group <b>111</b> to the fourth processor group <b>114</b>. For example, at least one of the processors A, B, C, and D of the fourth processor group <b>114</b> may start the execution of the process having the IO requirement for the fourth storage device <b>144</b>. For example, the change (e.g., switching) of the processor may be made by at least one processor, which executes an operating system, from among processors A, B, C, and D of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>.</p><p id="p-0094" num="0093">In operation S<b>350</b>, at least one of the processors A, B, C, and D of the fourth processor group <b>114</b> may start an access to the fourth storage device <b>144</b> by executing the process having the IO requirement for the fourth storage device <b>144</b>. The processor that executes the process may be a local processor, and the process may be a local process. As the fourth storage device <b>144</b> is accessed by the local processor (or local process), the throughput of the fourth storage device <b>144</b> may be improved, and a speed at which the electronic device <b>100</b> executes the process may be improved.</p><p id="p-0095" num="0094">In operation S<b>360</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and when the throughput of the fourth storage device <b>144</b> does not belong to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the fourth storage device <b>144</b> may report the throughput.</p><p id="p-0096" num="0095">In operation S<b>370</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and when the throughput of the fourth storage device <b>144</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the fourth storage device <b>144</b> may request the local processor. Even though the fourth storage device <b>144</b> requests a local processor, because the fourth storage device <b>144</b> is already accessed by the local processor (or local process), the local processor (or local process) may ignore the request of the fourth storage device <b>144</b>.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a second example of an operating method of the storage device <b>200</b>, according to an embodiment. In an embodiment, a second example in which the storage device <b>200</b> executes the throughput management process is illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, and <b>7</b></figref>, in operation S<b>410</b>, the storage device <b>200</b> may monitor throughput while handling an IO requested from the external host device (e.g., a local processor, a remote processor, or a process executed by one thereof). For example, the storage controller <b>220</b> of the storage device <b>200</b> may monitor the throughput while accessing the nonvolatile memory device <b>210</b> based on the requested IO.</p><p id="p-0098" num="0097">In operation S<b>420</b>, the storage controller <b>220</b> of the storage device <b>200</b> may report the throughput to the external host device.</p><p id="p-0099" num="0098">In the case where operation S<b>410</b> and operation S<b>420</b> are performed, the throughput management process of the storage device <b>200</b> may end. In an embodiment, the throughput management process of the storage device <b>200</b> may be performed periodically. Alternatively, the throughput management process of the storage device <b>200</b> may be performed in response to a change in a value of the throughput.</p><p id="p-0100" num="0099">For example, the throughput of the storage device <b>200</b> may have values from &#x201c;0&#x201d; to the maximum throughput MAX. Here, the values from &#x201c;0&#x201d; to the maximum throughput MAX may be divided into a plurality of ranges (e.g., in units of normalized 10). The storage controller <b>220</b> of the storage device <b>200</b> may determine whether a value of the throughput belongs to any range. For example, the storage device <b>200</b> may perform the throughput management process in response to a change in a range to which a value of the throughput of the storage device <b>200</b> belongs.</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example in which the electronic device <b>100</b> operates when the storage device <b>200</b> executes a throughput management process of <figref idref="DRAWINGS">FIG. <b>7</b></figref>, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>7</b>, and <b>8</b></figref>, in operation S<b>510</b>, a process having an IO requirement for the fourth storage device <b>144</b> may be allocated to at least one of the processors A, B, C, and D of the first processor group <b>111</b>. That is, the process may be a remote process that is allocated to at least one remote processor of the processors A, B, C, and D of the first processor group <b>111</b>. The remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process) may start an access to the fourth storage device <b>144</b> through the interconnection with the fourth processor group <b>114</b>.</p><p id="p-0102" num="0101">In operation S<b>520</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, and the fourth storage device <b>144</b> may report the throughput. For example, the fourth storage device <b>144</b> may report the throughput to the remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process), based on the interconnection with the fourth processor group <b>114</b>. The electronic device <b>100</b> may determine whether to perform switching, based on the reported throughput. For example, when the throughput of the fourth storage device <b>144</b> does not belong to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the electronic device <b>100</b> may not perform switching.</p><p id="p-0103" num="0102">In operation S<b>530</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, and the fourth storage device <b>144</b> may report the throughput. For example, the fourth storage device <b>144</b> may report the throughput to the remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process), based on the interconnection with the fourth processor group <b>114</b>.</p><p id="p-0104" num="0103">In operation S<b>540</b>, when the throughput of the fourth storage device <b>144</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the electronic device <b>100</b> may perform switching. For example, an execution subject of the process may be changed from the first processor group <b>111</b> to the fourth processor group <b>114</b>. At least one of the processors A, B, C, and D of the fourth processor group <b>114</b> may start the execution of the process having the IO requirement for the fourth storage device <b>144</b>. For example, the switching of the processor may be made by at least one processor, which executes an operating system, from among processors A, B, C, and D of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>.</p><p id="p-0105" num="0104">In operation S<b>550</b>, at least one of the processors A, B, C, and D of the fourth processor group <b>114</b> may start an access to the fourth storage device <b>144</b> by executing the process having the IO requirement for the fourth storage device <b>144</b>. The processor that executes the process may be a local processor, and the process may be a local process. As the fourth storage device <b>144</b> is accessed by the local processor (or local process), the throughput of the fourth storage device <b>144</b> may be improved, and a speed at which the electronic device <b>100</b> executes the process may be improved.</p><p id="p-0106" num="0105">In operation S<b>560</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, and the fourth storage device <b>144</b> may report the throughput. Even though the throughput of the fourth storage device <b>144</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, because the fourth storage device <b>144</b> is already accessed by the local processor (or local process), the local processor (or local process) may ignore the request of the fourth storage device <b>144</b>.</p><p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a third example of an operating method of the storage device <b>200</b>, according to an embodiment. In an embodiment, a third example in which the storage device <b>200</b> executes the throughput management process is illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, and <b>9</b></figref>, in operation S<b>610</b>, the storage device <b>200</b> may monitor throughput while handling an IO requested from the external host device (e.g., a local processor, a remote processor, or a process executed by one thereof). For example, the storage controller <b>220</b> of the storage device <b>200</b> may monitor the throughput while accessing the nonvolatile memory device <b>210</b> based on the requested IO.</p><p id="p-0108" num="0107">In operation S<b>620</b>, the storage device <b>200</b> may determine whether the throughput is greater than the first threshold value TV<b>1</b>. In operation S<b>630</b>, the storage device <b>200</b> may determine whether the throughput is less than the second threshold value TV<b>2</b>. When the throughput is not greater than the first threshold value TV<b>1</b> (operation S<b>620</b>, NO) or is not less than the second threshold value TV<b>2</b> (operation S<b>630</b>, NO), that is, when the throughput of the storage device <b>200</b> does not belong to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the storage controller <b>220</b> of the storage device <b>200</b> may terminate the throughput management process without a separate (or additional) operation.</p><p id="p-0109" num="0108">When the throughput is greater than the first threshold value TV<b>1</b> (operation S<b>620</b>, YES) and is less than the second threshold value TV<b>2</b> (operation S<b>630</b>, YES), that is, when the throughput of the storage device <b>200</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, in operation S<b>640</b>, the storage controller <b>220</b> of the storage device <b>200</b> may request a local processor or may report the throughput. In an embodiment, the throughput management process of the storage device <b>200</b> may be performed periodically. Alternatively, the throughput management process of the storage device <b>200</b> may be performed in response to that a value of the throughput changes.</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an example in which the electronic device <b>100</b> operates when the storage device <b>200</b> executes a throughput management process of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>9</b></figref>, and IO in operation S<b>710</b>, a process having an IO requirement for the fourth storage device <b>144</b> may be allocated to at least one of the processors A, B, C, and D of the first processor group <b>111</b>. That is, the process may be a remote process that is allocated to at least one remote processor of the processors A, B, C, and D of the first processor group <b>111</b>. The remote processor A, B, C, or D of the first processor group <b>111</b> (or remote process) may start an access to the fourth storage device <b>144</b> through the interconnection with the fourth processor group <b>114</b>.</p><p id="p-0111" num="0110">In operation S<b>720</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, and when the throughput is greater than the first threshold value TV<b>1</b> and is less than the second threshold value TV<b>2</b>, that is, when the throughput of the storage device <b>200</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the storage controller <b>220</b> of the storage device <b>200</b> may request a local processor or may report the throughput.</p><p id="p-0112" num="0111">In operation S<b>730</b>, the electronic device <b>100</b> may perform switching. For example, an execution subject of the process may be changed from the first processor group <b>111</b> to the fourth processor group <b>114</b>. For example, at least one of the processors A, B, C, and D of the fourth processor group <b>114</b> may start the execution of the process having the IO requirement for the fourth storage device <b>144</b>. For example, the change (e.g., switching) of the processor may be made by at least one processor, which executes an operating system, from among processors A, B, C, and D of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b>.</p><p id="p-0113" num="0112">In operation S<b>740</b>, at least one of the processors A, B, C, and D of the fourth processor group <b>114</b> may start an access to the fourth storage device <b>144</b> by executing the process having the IO requirement for the fourth storage device <b>144</b>. The processor that executes the process may be a local processor, and the process may be a local process. As the fourth storage device <b>144</b> is accessed by the local processor (or local process), the throughput of the fourth storage device <b>144</b> may be improved, and a speed at which the electronic device <b>100</b> executes the process may be improved.</p><p id="p-0114" num="0113">In operation S<b>750</b>, the fourth storage device <b>144</b> may execute the throughput management process illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, and when the throughput of the fourth storage device <b>144</b> belongs to the range defined by the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>, the fourth storage device <b>144</b> may request a local processor. Even though the fourth storage device <b>144</b> requests a local processor, because the fourth storage device <b>144</b> is already accessed by the local processor (or local process), the local processor (or local process) may ignore the request of the fourth storage device <b>144</b>.</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a fourth example of an operating method of the storage device <b>200</b>, according to an embodiment. In an embodiment, a fourth example in which the storage device <b>200</b> executes the throughput management process is illustrated in <figref idref="DRAWINGS">FIG. <b>11</b></figref>. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, and <b>11</b></figref>, in operation S<b>810</b>, the storage device <b>200</b> may monitor throughput while handling an IO requested from the external host device (e.g., a local processor, a remote processor, or a process executed by one thereof). For example, the storage controller <b>220</b> of the storage device <b>200</b> may monitor the throughput while accessing the nonvolatile memory device <b>210</b> based on the requested <b>10</b>.</p><p id="p-0116" num="0115">In operation S<b>820</b>, the storage controller <b>220</b> of the storage device <b>200</b> may determine whether the throughput of the storage device <b>200</b> is less than a fourth threshold value TV<b>4</b>. When the throughput of the storage device <b>200</b> is not less than the fourth threshold value TV<b>4</b> (operation S<b>820</b>, NO), the storage controller <b>220</b> may terminate the throughput management process.</p><p id="p-0117" num="0116">When the throughput of the storage device <b>200</b> is less than the fourth threshold value TV<b>4</b> (operation S<b>820</b>, YES), in operation S<b>830</b>, the storage controller <b>220</b> may report the throughput to the external host device or may request a remote processor.</p><p id="p-0118" num="0117">In response to the storage device <b>200</b> reporting that the throughput or requesting a remote processor, the electronic device <b>100</b> may determine whether a processor accessing the storage device <b>200</b> is a local processor. When the processor accessing the storage device <b>200</b> is a local processor, the electronic device <b>100</b> may allocate the process accessing the storage device <b>200</b> to a remote processor. That is, the switching of the processor may be performed. When the processor accessing the storage device <b>200</b> is a remote processor, the electronic device <b>100</b> may ignore the report or request of the storage device <b>200</b>.</p><p id="p-0119" num="0118">In the case where operation S<b>810</b> to operation S<b>830</b> are performed, the throughput management process may end. In an embodiment, the throughput management process of the storage device <b>200</b> may be performed periodically. Alternatively, the throughput management process of the storage device <b>200</b> may be performed in response to that a value of the throughput changes.</p><p id="p-0120" num="0119">In an embodiment, the fourth threshold value TV<b>4</b> may be less than the first threshold value TV<b>1</b> and the second threshold value TV<b>2</b>. The fourth threshold value TV<b>4</b> may be determined based on throughput corresponding to the queue depth of 1, 2, or 4. The fourth threshold value TV<b>4</b> may be set to 50% or less of the maximum throughput MAX, such as 50%, 40%, 30%, or 20%. In an embodiment, to prevent the switching due to a transient change of the throughput, the storage device <b>200</b> may compare average throughput (e.g., a running average or a running average during a given time interval) with the fourth threshold value TV<b>4</b>.</p><p id="p-0121" num="0120"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a first example of a format of a request or report that the storage device <b>200</b> may send to an external host device, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>12</b></figref>, the storage device <b>200</b> may send a request or a report based on the Peripheral Component Interconnect express (PCIe). The storage device <b>200</b> may send a Message Signaled Interrupt (MSI) capability structure for a 32-bit message address to a corresponding processor. The corresponding processor may store the MSI capability structure for the 32-bit message address in a register.</p><p id="p-0122" num="0121">The MSI capability structure for the 32-bit message address may include byte offsets &#x201c;+000h&#x201d;, &#x201c;+004h&#x201d;, and &#x201c;+008h&#x201d;. The byte offset &#x201c;+000h&#x201d; may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+000h&#x201d; may correspond to an MSI capability header. The 0-th to 7th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a capability ID. The capability ID may have a value of &#x201c;05h&#x201d;. The 8th to 15th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a next capability pointer. The next capability pointer may include an offset for a next PCI capability structure. When other items are absent from a linked list of capabilities, a next capability pointer may include &#x201c;00h&#x201d;.</p><p id="p-0123" num="0122">The 16th to 31st bits of the byte offset &#x201c;+000h&#x201d; may correspond to a message control register. An example of the message control register is illustrated in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>12</b>, and <b>13</b></figref>, the 16th bit (or the 0-th bit of the message control register) indicates &#x201c;MSI enable&#x201d; and may have a value of &#x201c;1&#x201d; when the storage device <b>200</b> sends a report or a request to the corresponding processor. The 17th to 19th bits (or the 1st to 3rd bits of the message control register) may indicate &#x201c;multiple message capable&#x201d; Multiple messages may be called &#x201c;vectors&#x201d;. The number of vectors may be set to a multiple of 2.</p><p id="p-0124" num="0123">The 20th to 22nd bits (or the 4th to 6th bits of the message control register) may indicate &#x201c;multiple message enable&#x201d; The 23rd bit (or the 7th bit of the message control register) may indicate &#x201c;64-bit address capable&#x201d;. The 24th bit (or the 8th bit of the message control register) may indicate &#x201c;per-vector masking capable&#x201d;.</p><p id="p-0125" num="0124">The 25th bit (or the 9th bit of the message control register) may indicate &#x201c;extended message data capable&#x201d;. The 26th bit (or the 10th bit of the message control register) may indicate &#x201c;extended message data enable&#x201d;.</p><p id="p-0126" num="0125">The 27th to 31st bits (or the 11th to 15th bits of the message control register) may be reserved bits (RsvdP). Alternatively, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 27th to 31st bits of the byte offset &#x201c;+000h&#x201d; of the MSI capability structure for the 32-bit message address (or at the 11th to 15th bits of the message control register).</p><p id="p-0127" num="0126">Referring again to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>12</b></figref>, the byte offset &#x201c;+004h&#x201d; of the MSI capability structure for the 32-bit message address may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+004h&#x201d; may correspond to a message address register and may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;.</p><p id="p-0128" num="0127">The byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 32-bit message address may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+008h&#x201d; may correspond to a message data register. A format of information recorded at the message data register may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 0-th to 15th bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 32-bit message address (or at the 0-th to 15th bits of the message data register).</p><p id="p-0129" num="0128">The 16th to 31st bits of the byte offset &#x201c;+008h&#x201d; may correspond to an extended message data register, and whether to implement the extended message data register and the format of the recorded information may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 16th to 31st bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 32-bit message address (or at the 0-th to 15th bits of the extended message data register).</p><p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates a second example of a format of a request or report that the storage device <b>200</b> sends to an external host device, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>14</b></figref>, the storage device <b>200</b> may send a request or a report based on the PCIe. The storage device <b>200</b> may send an MSI capability structure for a 64-bit message address to a corresponding processor. The corresponding processor may store the MSI capability structure for the 64-bit message address in a register.</p><p id="p-0131" num="0130">The MSI capability structure for the 64-bit message address may include byte offsets &#x201c;+000h&#x201d;, &#x201c;+004h&#x201d;, &#x201c;+008h&#x201d;, and &#x201c;+00ch&#x201d;. The byte offset &#x201c;+000h&#x201d; may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+000h&#x201d; may correspond to an MSI capability header. The 0-th to 7th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a capability ID. The 8th to 15th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a next capability pointer. The 16th to 31st bits of the byte offset &#x201c;+000h&#x201d; may correspond to a message control register. The byte offset &#x201c;+000h&#x201d; of the MSI capability structure for the 64-bit message address may be implemented the same as that described with reference to <figref idref="DRAWINGS">FIGS. <b>12</b> and <b>13</b></figref>. Thus, additional description will be omitted to avoid redundancy.</p><p id="p-0132" num="0131">The byte offset &#x201c;+004h&#x201d; of the MSI capability structure for the 64-bit message address may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+004h&#x201d; may correspond to a message address register and may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;.</p><p id="p-0133" num="0132">The byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 64-bit message address may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+008h&#x201d; may correspond to a message upper address register and may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;.</p><p id="p-0134" num="0133">The byte offset &#x201c;+00ch&#x201d; of the MSI capability structure for the 64-bit message address may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+00ch&#x201d; may correspond to a message data register. A format of information recorded at the message data register may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 0-th to 15th bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 64-bit message address (or at the 0-th to 15th bits of the message data register).</p><p id="p-0135" num="0134">The 16th to 31st bits of the byte offset &#x201c;+00ch&#x201d; may correspond to an extended message data register, and whether to implement the extended message data register and the format of the recorded information may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 16th to 31st bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 64-bit message address (or at the 0-th to 15th bits of the extended message data register).</p><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>15</b></figref> illustrates a third example of a format of a request or report that the storage device <b>200</b> sends to an external host device, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>15</b></figref>, the storage device <b>200</b> may send a request or a report based on the PCIe. The storage device <b>200</b> may send an MSI capability structure for a 32-bit message address and a per vector mask (PVM) to a corresponding processor. The corresponding processor may store the MSI capability structure for the 32-bit message address and the PVM in a register.</p><p id="p-0137" num="0136">The MSI capability structure for the 32-bit message address and the PVM may include byte offsets &#x201c;+000h&#x201d;, &#x201c;+004h&#x201d;, &#x201c;+008h&#x201d;, &#x201c;+00ch&#x201d;, and &#x201c;+010h&#x201d;. The byte offset &#x201c;+000h&#x201d; may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+000h&#x201d; may correspond to an MSI capability header. The 0-th to 7th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a capability ID. The 8th to 15th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a next capability pointer. The 16th to 31st bits of the byte offset &#x201c;+000h&#x201d; may correspond to a message control register. The byte offset &#x201c;+000h&#x201d; of the MSI capability structure for the 32-bit message address and the PVM may be implemented the same as that described with reference to <figref idref="DRAWINGS">FIGS. <b>12</b> and <b>13</b></figref>. Thus, additional description will be omitted to avoid redundancy.</p><p id="p-0138" num="0137">The byte offset &#x201c;+004h&#x201d; of the MSI capability structure for the 32-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+004h&#x201d; may correspond to a message address register and may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;.</p><p id="p-0139" num="0138">The byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 32-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+008h&#x201d; may correspond to a message data register. A format of information recorded at the message data register may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 0-th to 15th bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 32-bit message address and the PVM (or at the 0-th to 15th bits of the message data register).</p><p id="p-0140" num="0139">The 16th to 31st bits of the byte offset &#x201c;+008h&#x201d; may correspond to an extended message data register, and whether to implement the extended message data register and the format of the recorded information may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In the case where the extended message data register is not implemented, the 16th to 31st bits of the byte offset &#x201c;+008h&#x201d; may be reserved bits (RsvdP). In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 16th to 31st bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 32-bit message address and the PVM (or at the 0-th to 15th bits of the message data register).</p><p id="p-0141" num="0140">The byte offset &#x201c;+00ch&#x201d; of the MSI capability structure for the 32-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+00ch&#x201d; may correspond to a mask bits register and may store information about &#x201c;per-vector masking capable&#x201d;.</p><p id="p-0142" num="0141">The byte offset &#x201c;+010h&#x201d; of the MSI capability structure for the 32-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+010h&#x201d; may correspond to a pending bits register and may present when &#x201c;per-vector masking capable&#x201d; is set.</p><p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates an example of a format of a request or report that the storage device <b>200</b> sends to an external host device, according to an embodiment. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>16</b></figref>, the storage device <b>200</b> may send a request or a report based on the PCIe. The storage device <b>200</b> may send an MSI capability structure for a 64-bit message address and a per vector mask (PVM) to a corresponding processor. The corresponding processor may store the MSI capability structure for the 64-bit message address and the PVM in a register.</p><p id="p-0144" num="0143">The MSI capability structure for the 64-bit message address and the PVM may include byte offsets &#x201c;+000h&#x201d;, &#x201c;+004h&#x201d;, &#x201c;+008h&#x201d;, &#x201c;+00ch&#x201d;, &#x201c;+010h&#x201d;, and &#x201c;+014h&#x201d;. The byte offset &#x201c;+000h&#x201d; may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+000h&#x201d; may correspond to an MSI capability header. The 0-th to 7th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a capability ID. The 8th to 15th bits of the MSI capability header of the byte offset &#x201c;+000h&#x201d; may include a next capability pointer. The 16th to 31st bits of the byte offset &#x201c;+000h&#x201d; may correspond to a message control register. The byte offset &#x201c;+000h&#x201d; of the MSI capability structure for the 64-bit message address and the PVM may be implemented the same as that described with reference to <figref idref="DRAWINGS">FIGS. <b>12</b> and <b>13</b></figref>. Thus, additional description will be omitted to avoid redundancy.</p><p id="p-0145" num="0144">The byte offset &#x201c;+004h&#x201d; of the MSI capability structure for the 64-bit message address may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+004h&#x201d; may correspond to a message address register and may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;.</p><p id="p-0146" num="0145">The byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 64-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+008h&#x201d; may correspond to a message upper address register and may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;.</p><p id="p-0147" num="0146">The byte offset &#x201c;+00ch&#x201d; of the MSI capability structure for the 64-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 15th bits of the byte offset &#x201c;+00ch&#x201d; may correspond to a message data register. A format of information recorded at the message data register may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 0-th to 15th bits of the byte offset &#x201c;+008h&#x201d; of the MSI capability structure for the 64-bit message address and the PVM (or at the 0-th to 15th bits of the message data register).</p><p id="p-0148" num="0147">The 16th to 31st bits of the byte offset &#x201c;+00ch&#x201d; may correspond to an extended message data register, and whether to implement the extended message data register and the format of the recorded information may be defined by &#x201c;device-specific&#x201d; or &#x201c;system-specific&#x201d;. In the case where the extended message data register is not implemented, the 16th to 31st bits of the byte offset &#x201c;+00ch&#x201d; may be reserved bits (RsvdP). In an embodiment, the storage device <b>200</b> may record information (or a message) for a report of throughput or a request of a local (or remote) processor described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>11</b></figref> at the 16th to 31st bits of the byte offset &#x201c;+00ch&#x201d; of the MSI capability structure for the 64-bit message address and the PVM (or at the 0-th to 15th bits of the message data register).</p><p id="p-0149" num="0148">The byte offset &#x201c;+010h&#x201d; of the MSI capability structure for the 64-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+010h&#x201d; may correspond to a mask bits register and may store information about &#x201c;per-vector masking capable&#x201d;.</p><p id="p-0150" num="0149">The byte offset &#x201c;+014h&#x201d; of the MSI capability structure for the 64-bit message address and the PVM may include 0-th to 31st bits. The 0-th to 31st bits of the byte offset &#x201c;+014h&#x201d; may correspond to a pending bits register and may present when &#x201c;per-vector masking capable&#x201d; is set.</p><p id="p-0151" num="0150">As described above, the electronic device <b>100</b> may allocate a remote processor or a local processor based on an IO requirement for a storage device of a newly generated process. Accordingly, processes accessing a specific storage device may be prevented from being intensively allocated to local processors, and the heat generation of the first processor group <b>111</b>, the second processor group <b>112</b>, the third processor group <b>113</b>, and the fourth processor group <b>114</b> may be uniformly distributed. Also, a refresh interval of the memories <b>131</b>, <b>132</b>, <b>133</b>, and <b>134</b> may be prevented from becoming short, and the performance and reliability of the electronic device <b>100</b> may be improved.</p><p id="p-0152" num="0151">In addition, the storage device <b>200</b> may send performance information, for example, information about a ratio of current throughput to the maximum throughput MAX to a processor. The processor may switch a processor, which accesses the storage device <b>200</b>, between a local processor and a remote processor, based on performance information of the storage device <b>200</b>. Accordingly, the electronic device <b>100</b> may access the storage device <b>200</b> with optimized performance.</p><p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates an electronic device <b>300</b> according to another embodiment. Referring to <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the electronic device <b>300</b> may include a processor <b>310</b>, a storage device (SD) <b>341</b>, a memory (MEM) <b>342</b>, a display device (DP) <b>343</b>, and a camera module (CAM) <b>344</b>. The processor <b>310</b> may store original data of codes and user data in the storage device <b>341</b>. The processor <b>310</b> may load and execute the codes from the storage device <b>341</b> to the memory <b>342</b> and may temporarily load the user data onto the memory <b>342</b> for the purpose of access or revision. The processor <b>310</b> may display image data through the display device <b>343</b>. The processor <b>310</b> may generate image data by using the camera module <b>344</b>.</p><p id="p-0154" num="0153">The processor <b>310</b> may include a first core group <b>311</b>, a second core group <b>312</b>, a third core group <b>313</b>, and a fourth core group <b>314</b>. Each of the first core group <b>311</b>, the second core group <b>312</b>, the third core group <b>313</b>, and the fourth core group <b>314</b> may include a plurality of cores A, B, C, and D.</p><p id="p-0155" num="0154">The processor <b>310</b> may include a first interface circuit (IC) <b>321</b>, a second interface circuit (IC) <b>322</b>, a third interface circuit (IC) <b>323</b>, and a fourth interface circuit (IC) <b>324</b> corresponding to the first core group <b>311</b>, the second core group <b>312</b>, the third core group <b>313</b>, and the fourth core group <b>314</b>, respectively.</p><p id="p-0156" num="0155">The first core group <b>311</b> may be directly connected with the first interface circuit <b>321</b>. In some embodiments, the cores A, B, C, and D of the first core group <b>311</b> may be directly connected to the first interface circuit <b>321</b>. The cores A, B, C, and D of the first core group <b>311</b> may be local cores of the first interface circuit <b>321</b>. The first interface circuit <b>321</b> may be a local interface circuit of the first core group <b>311</b>. The second core group <b>312</b> may be directly connected with the second interface circuit <b>322</b>. In some embodiments, the cores A, B, C, and D of the second core group <b>312</b> may be directly connected to the second interface circuit <b>322</b>. The cores A, B, C, and D of the second core group <b>312</b> may be local cores of the second interface circuit <b>322</b>. The second interface circuit <b>322</b> may be a local interface circuit of the second core group <b>312</b>.</p><p id="p-0157" num="0156">The third core group <b>313</b> may be directly connected with the third interface circuit <b>323</b>. In some embodiments, the cores A, B, C, and D of the third core group <b>313</b> may be directly connected to the third interface circuit <b>323</b>. The cores A, B, C, and D of the third core group <b>313</b> may be local cores of the third interface circuit <b>323</b>. The third interface circuit <b>323</b> may be a local interface circuit of the third core group <b>313</b>. The fourth core group <b>314</b> may be directly connected with the fourth interface circuit <b>324</b>. In some embodiments, the cores A, B, C, and D of the fourth core group <b>314</b> may be directly connected to the fourth interface circuit <b>324</b>. The cores A, B, C, and D of the fourth core group <b>314</b> may be local cores of the fourth interface circuit <b>324</b>. The fourth interface circuit <b>324</b> may be a local interface circuit of the fourth core group <b>314</b>.</p><p id="p-0158" num="0157">The first core group <b>311</b> may access the second interface circuit <b>322</b>, the third interface circuit <b>323</b>, and the fourth interface circuit <b>324</b> through the second core group <b>312</b>, the third core group <b>313</b>, and the fourth core group <b>314</b>, respectively. The cores A, B, C, and D of the first core group <b>311</b> may be remote cores of the second interface circuit <b>322</b>, the third interface circuit <b>323</b>, and the fourth interface circuit <b>324</b>. The second interface circuit <b>322</b>, the third interface circuit <b>323</b>, and the fourth interface circuit <b>324</b> may be remote interface circuits of the first core group <b>311</b>.</p><p id="p-0159" num="0158">As such, an interface circuit and cores that are directly connected to communicate with each other may be a local interface circuit and local cores. An interface circuit and cores that are connected through another core group to communicate with each other may be a remote interface circuit and remote cores. Below, duplicated descriptions are omitted for conciseness.</p><p id="p-0160" num="0159">The first interface circuit <b>321</b> may be directed connected with the storage device <b>341</b>. The second interface circuit <b>322</b> may be directly connected with the memory <b>342</b>. The third interface circuit <b>323</b> may be directed connected with the display device <b>343</b>. The fourth interface circuit <b>324</b> may be directed connected with the camera module <b>344</b>.</p><p id="p-0161" num="0160">The cores A, B, C, and D of the first core group <b>311</b> may be local cores of the storage device <b>341</b>. The cores A, B, C, and D of the second core group <b>312</b>, the third core group <b>313</b>, and the fourth core group <b>314</b> may be remote cores of the storage device <b>341</b>. As described with reference to the electronic device <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a speed at which local cores access the storage device <b>341</b> may be faster than a speed at which remote cores access the storage device <b>341</b>.</p><p id="p-0162" num="0161">As described with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the processor <b>310</b> may allocate a new process to local cores or remote cores, based on an IO requirement of the new process. As described with reference to <figref idref="DRAWINGS">FIGS. <b>5</b> to <b>11</b></figref>, the storage device <b>341</b> may report throughput to the processor <b>310</b> or may request switching of a local core and a remote core. Accordingly, the performance and reliability of the electronic device <b>300</b> may be improved.</p><p id="p-0163" num="0162">In an embodiment, the terms &#x201c;processor group&#x201d; and &#x201c;processors&#x201d; are used in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and the terms &#x201c;core group&#x201d; and &#x201c;cores&#x201d; are used in <figref idref="DRAWINGS">FIG. <b>17</b></figref>. However, the terms are used to describe the present disclosure more easily, not intended to limit the score and spirit of the technical concept. For example, cores may be called &#x201c;processors&#x201d;, and a core group may be called &#x201c;a processor group&#x201d;. The terms &#x201c;core&#x201d; and &#x201c;processor&#x201d; may be used interchangeably.</p><p id="p-0164" num="0163">In the above embodiments, components according to the present disclosure are described by using the terms &#x201c;first&#x201d;, &#x201c;second&#x201d;, &#x201c;third&#x201d;, etc. However, the terms &#x201c;first&#x201d;, &#x201c;second&#x201d;, &#x201c;third&#x201d;, etc. may be used to distinguish components from each other and do not limit the present disclosure. For example, the terms &#x201c;first&#x201d;, &#x201c;second&#x201d;, &#x201c;third&#x201d;, etc. do not involve an order or a numerical meaning of any form.</p><p id="p-0165" num="0164">In the above embodiments, components according to embodiments of the present disclosure are referenced by using blocks. The blocks may be implemented with various hardware devices, such as an integrated circuit, an application specific IC (ASIC), a field programmable gate array (FPGA), and a complex programmable logic device (CPLD), firmware driven in hardware devices, software such as an application, or a combination of a hardware device and software. Also, the blocks may include circuits implemented with semiconductor elements in an integrated circuit, or circuits enrolled as an intellectual property (IP).</p><p id="p-0166" num="0165">According to various embodiments, a storage device may transfer a signal to a host device depending on the amount of throughput used. Accordingly, a local processor or a remote processor may be allocated to the storage device depending on the amount of throughput usage of the storage device, and the used amount of throughput of the storage device may be optimized. Accordingly, a storage device capable of improving throughput efficiency and reducing latency, an operating method of the storage device, and an electronic device are provided.</p><p id="p-0167" num="0166">While the present disclosure has been described with reference to various embodiments thereof, it will be apparent to those of ordinary skill in the art that various changes and modifications may be made thereto without departing from the spirit and scope of the present disclosure as set forth in the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A storage device comprising:<claim-text>a nonvolatile memory device; and</claim-text><claim-text>a storage controller configured to access the nonvolatile memory device based on a request of an external host device,</claim-text><claim-text>wherein the storage controller sends a signal to the external host device, based on a throughput of accessing the nonvolatile memory device being within a specific range.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the signal includes a local processor request based on a non-uniform memory access (NUMA).</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the signal includes information of the throughput.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the signal includes a message signaled interrupt (MSI) format defined in a peripheral component interconnect express (PCIe) standard.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage controller periodically sends a second signal including information of the throughput to the nonvolatile memory device.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage controller sends a second signal including information of the throughput to the nonvolatile memory device, based on a change in a range to which a value of the throughput belongs.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage controller sends a second signal to the external host device based on a value of the throughput being less than a threshold value, and<claim-text>wherein the threshold value is less than a lower value of the specific range.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the specific range corresponds to a range from 60% to 70% of a maximum value of the throughput.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. An operating method comprising:<claim-text>accessing, at a storage controller, a nonvolatile memory device based on a request of an external host device;</claim-text><claim-text>monitoring, at the storage controller, a throughput of accessing the nonvolatile memory device; and</claim-text><claim-text>sending, from the storage controller, a signal to the external host device based on the throughput being within a specific range.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>sending, from the storage controller to the external host device, a second signal including information of the throughput.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>sending, from the storage controller to the external host device, a second signal including information of the throughput based on a change in a range to which a value of the throughput belongs.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>sending, from the storage controller to the external host device, the signal based on a value of the throughput being less than a threshold value.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. An electronic device comprising:<claim-text>a first processor group including a plurality of first processors;</claim-text><claim-text>a second processor group including a plurality of second processors, the second processor group being configured to communicate with the first processor group; and</claim-text><claim-text>a storage device connected with the second processor group,</claim-text><claim-text>wherein the plurality of second processors directly access the storage device,</claim-text><claim-text>wherein the plurality of first processors access the storage device through the plurality of second processors, and</claim-text><claim-text>wherein, based on a throughput of the storage device being within a specific range, the storage device sends a signal to a processor that accesses the storage device from among the plurality of first processors and the plurality of second processors.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The electronic device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein, when an input and output (IO) requirement for the storage device necessary for a new process is less than a threshold value, the new process is executed by an idle processor that is in an idle state from among the plurality of first processors.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The electronic device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein, when an input and output (IO) requirement for the storage device necessary for a new process is greater than a threshold value, the new process is executed by an idle processor that is in an idle state from among the plurality of second processors.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The electronic device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, when there is no idle processor that is in the idle state from among the plurality of second processors, the new process is executed by an idle processor that is in the idle state from among the plurality of first processors.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The electronic device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein, when a process executed by at least one first processor of the plurality of first processors accesses the storage device, based on the signal the process is switched to be executed by at least one second processor that is in an idle state from among the plurality of second processors.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The electronic device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein, when a process executed by at least one second processor of the plurality of second processors accesses the storage device, the signal is ignored.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The electronic device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the signal includes a message signaled interrupt (MSI) format defined in a peripheral component interconnect express (PCIe) standard.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The electronic device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the plurality of first processors are implemented with multiple cores of a central processing unit, and the plurality of second processors are implemented with multiple cores of a central processing unit.</claim-text></claim></claims></us-patent-application>