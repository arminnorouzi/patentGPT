<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004327A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004327</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17899407</doc-number><date>20220830</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0659</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>049</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0616</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0673</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2212</main-group><subgroup>657</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Intelligent Wear Leveling with Reduced Write-amplification for Data Storage Devices Configured on Autonomous Vehicles</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16562225</doc-number><date>20190905</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11435946</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17899407</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Micron Technology, Inc.</orgname><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Bielby</last-name><first-name>Robert Richard Noel</first-name><address><city>Placerville</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Kale</last-name><first-name>Poorna</first-name><address><city>Folsom</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems, methods and apparatus of intelligent wear-leveling with reduced write-amplification for data storage devices configured on autonomous vehicles. For example, a data storage device of a vehicle includes: storage media components; a controller configured to store data into and retrieve data from the storage media components according to commands received in the data storage device; an address map configured to map between: logical addresses specified in the commands received in the data storage device, and physical addresses of memory cells in the storage media components; and an artificial neural network configured to receive, as input and as a function of time, operating parameters indicative a data access pattern, and generate, based on the input, a prediction to determine an optimized operation for wear leveling among memory cells in the data storage device. The controller is configured to perform the optimized operation for wear leveling based on the prediction.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="173.31mm" wi="158.75mm" file="US20230004327A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="218.78mm" wi="176.11mm" file="US20230004327A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="209.38mm" wi="158.24mm" file="US20230004327A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="203.03mm" wi="108.29mm" file="US20230004327A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="183.90mm" wi="99.06mm" file="US20230004327A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="222.00mm" wi="127.68mm" file="US20230004327A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="191.85mm" wi="99.06mm" file="US20230004327A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="215.65mm" wi="135.64mm" file="US20230004327A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="209.30mm" wi="97.54mm" file="US20230004327A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="190.25mm" wi="99.06mm" file="US20230004327A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="194.99mm" wi="99.06mm" file="US20230004327A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="194.99mm" wi="99.06mm" file="US20230004327A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="202.95mm" wi="146.05mm" file="US20230004327A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="177.55mm" wi="162.64mm" file="US20230004327A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="185.50mm" wi="99.06mm" file="US20230004327A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="215.65mm" wi="141.99mm" file="US20230004327A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="196.60mm" wi="99.06mm" file="US20230004327A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a continuation application of U.S. patent application Ser. No. 16/562,225 filed Sep. 5, 2019 and issued as U.S. Pat. No. 11,435,946 on Sep. 6, 2022, the entire disclosures of which application are hereby incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">At least some embodiments disclosed herein relate to data storage devices in general and more particularly, but not limited to, intelligent wear leveling with reduced write-amplification for data storage devices configured on autonomous vehicles.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Recent developments in the technological area of autonomous driving allow a computing system to operate, at least under some conditions, control elements of a motor vehicle without the assistance from a human operator of the vehicle.</p><p id="p-0005" num="0004">For example, sensors (e.g., cameras and radars) can be installed on a motor vehicle to detect the conditions of the surroundings of the vehicle traveling on a roadway. A computing system installed on the vehicle analyzes the sensor inputs to identify the conditions and generate control signals or commands for the autonomous adjustments of the direction and/or speed of the vehicle, with or without any input from a human operator of the vehicle.</p><p id="p-0006" num="0005">In some arrangements, when a computing system recognizes a situation where the computing system may not be able to continue operating the vehicle in a safe manner, the computing system alerts the human operator of the vehicle and requests the human operator to take over the control of the vehicle and drive manually, instead of allowing the computing system to drive the vehicle autonomously.</p><p id="p-0007" num="0006">Autonomous driving and/or advanced driver assistance system (ADAS) typically involves artificial neural network (ANN) for the identification of events and/or objects that are captured in sensor inputs.</p><p id="p-0008" num="0007">In general, an artificial neural network (ANN) uses a network of neurons to process inputs to the network and to generate outputs from the network.</p><p id="p-0009" num="0008">For example, each neuron in the network receives a set of inputs. Some of the inputs to a neuron may be the outputs of certain neurons in the network; and some of the inputs to a neuron may be the inputs provided to the neural network. The input/output relations among the neurons in the network represent the neuron connectivity in the network.</p><p id="p-0010" num="0009">For example, each neuron can have a bias, an activation function, and a set of synaptic weights for its inputs respectively. The activation function may be in the form of a step function, a linear function, a log-sigmoid function, etc. Different neurons in the network may have different activation functions.</p><p id="p-0011" num="0010">For example, each neuron can generate a weighted sum of its inputs and its bias and then produce an output that is the function of the weighted sum, computed using the activation function of the neuron.</p><p id="p-0012" num="0011">The relations between the input(s) and the output(s) of an ANN in general are defined by an ANN model that includes the data representing the connectivity of the neurons in the network, as well as the bias, activation function, and synaptic weights of each neuron. Using a given ANN model a computing device computes the output(s) of the network from a given set of inputs to the network.</p><p id="p-0013" num="0012">For example, the inputs to an ANN network may be generated based on camera inputs; and the outputs from the ANN network may be the identification of an item, such as an event or an object.</p><p id="p-0014" num="0013">A spiking neural network (SNN) is a type of ANN that closely mimics natural neural networks. An SNN neuron produces a spike as output when the activation level of the neuron is sufficiently high. The activation level of an SNN neuron mimics the membrane potential of a natural neuron. The outputs/spikes of the SNN neurons can change the activation levels of other neurons that receive the outputs. The current activation level of an SNN neuron as a function of time is typically modeled using a differential equation and considered the state of the SNN neuron. Incoming spikes from other neurons can push the activation level of the neuron higher to reach a threshold for spiking. Once the neuron spikes, its activation level is reset. Before the spiking, the activation level of the SNN neuron can decay over time, as controlled by the differential equation. The element of time in the behavior of SNN neurons makes an SNN suitable for processing spatiotemporal data. The connectivity of SNN is often sparse, which is advantageous in reducing computational workload.</p><p id="p-0015" num="0014">In general, an ANN may be trained using a supervised method where the parameters in the ANN are adjusted to minimize or reduce the error between known outputs resulted from respective inputs and computed outputs generated from applying the inputs to the ANN. Examples of supervised learning/training methods include reinforcement learning, and learning with error correction.</p><p id="p-0016" num="0015">Alternatively, or in combination, an ANN may be trained using an unsupervised method where the exact outputs resulted from a given set of inputs is not known before the completion of the training. The ANN can be trained to classify an item into a plurality of categories, or data points into clusters.</p><p id="p-0017" num="0016">Multiple training algorithms can be employed for a sophisticated machine learning/training paradigm.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0018" num="0017">The embodiments are illustrated by way of example and not limitation in the figures of the accompanying drawings in which like references indicate similar elements.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a system in which a vehicle is configured with a data storage device to collect and process sensor data according to some embodiments.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an autonomous vehicle having a data storage device according to one embodiment.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIGS. <b>3</b>-<b>5</b></figref> illustrate training of artificial neural networks for maintenance service prediction according to some embodiments.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a method of predictive maintenance according to one embodiment.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a data storage device to accelerate neural network computations according to one embodiment.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a storage media component to accelerate neural network computations according to one embodiment.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a method to accelerate neural network computations in motor vehicles according to one embodiment.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a data storage device configured to support neural network computations according to one embodiment.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates the configuration of a namespace for an artificial neural network (ANN) model according to one embodiment.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates the configuration of a namespace for the inputs to artificial neurons according to one embodiment.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates the configuration of a namespace for the outputs from artificial neurons according to one embodiment.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIGS. <b>14</b>-<b>16</b></figref> show methods of predictive maintenance supported by a model partition, an input partition and an output partition according to one embodiment.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows communications with a data storage device to implement neural network computation according to one embodiment.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>18</b></figref> shows communications within a data storage device to implement neural network computation according to one embodiment.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>19</b></figref> shows a method of communicating with a data storage device to implement neural network computation according to one embodiment.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>20</b></figref> shows a data storage device configured to perform wear leveling with reduced write-amplification according to one embodiment.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows a method of wear leveling with reduced write-amplification in a data storage device of an autonomous vehicle according to one embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0036" num="0035">At least some embodiments disclosed herein provide systems, methods and apparatus to process sensor data generated in a motor vehicle, or another vehicle with or without an advanced driver assistance system (ADAS).</p><p id="p-0037" num="0036">Before a component of a motor vehicle breaks down or malfunctions during the operation of a vehicle, there can be indication of whether the component needs replacement or maintenance. Such indications may not be noticeable to a typical driver or passengers. However, sensor data can be collected and analyzed to predict the probability of component failures. The prediction can be used to schedule maintenance services, which can reduce or eliminate the chances of incidents where a component of a vehicle breaks down or malfunctions during the operation of the vehicle on a roadway. Further, the prediction allows the service trip to be scheduled at a convenient time.</p><p id="p-0038" num="0037">For example, sensors can be installed in an automotive system to collect data during its routine operations; and the sensor data can be used to predict whether and how soon a component needs replacement or maintenance. The sensor data can be provided as input to an artificial neural network (ANN) (e.g., spiking neural network (SNN)) of an artificial intelligent (AI) system to train itself (e.g., using an unsupervised machine learn technique) in a time period in which the vehicle is expected to operate normally. The training customizes the neural network for the specific operating environment(s) of the driver, passenger, or user of the vehicle and the personalized operating habits of the vehicle occupant(s). Subsequently, when the operating data deviates the normal mode, the artificial neural network can detect abnormal conditions. The AI system can be used to suggest a maintenance service and/or identify the component that likely needs replacement or maintenance.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a system in which a vehicle is configured with a data storage device to collect and process sensor data according to some embodiments.</p><p id="p-0040" num="0039">The system of <figref idref="DRAWINGS">FIG. <b>1</b></figref> includes a vehicle (<b>111</b>) having a data storage device (<b>101</b>). Optionally, the vehicle (<b>111</b>) has an advanced driver assistance system (ADAS) (<b>105</b>) and one or more sensors (<b>103</b>) that provide sensor data input to the ADAS (<b>105</b>) and/or the data storage device (<b>101</b>). The data storage device (<b>101</b>) is configured to use an artificial neural network (ANN) (<b>125</b>) to predict/identify a need for a maintenance service based on the data collected by the sensors (<b>103</b>). The ADAS (<b>105</b>) can be omitted without impacting the predictive maintenance features. In some implementations, at least a portion of the data generate by the sensors (<b>103</b>) is used in both the ADAS (<b>105</b>) for driver assistance and in the artificial neural network (ANN) (<b>125</b>) for maintenance prediction. Optionally, the output of the artificial neural network (ANN) (<b>125</b>) can be used in both the data storage device (<b>101</b>) and in the ADAS (<b>105</b>).</p><p id="p-0041" num="0040">The sensor(s) (<b>103</b>) can include digital cameras, lidars, radars, ultrasound sonars, brake sensors, speed sensors, acceleration sensors, airbag sensors, a GPS (global positioning system) receiver, audio sensors/microphones, vibration sensors, force/stress sensors, deformation sensors, motion sensors, temperature sensors, etc. Some of the sensors (<b>103</b>) can be configured primarily to monitor the environment of the vehicle (<b>111</b>); and other sensors (<b>103</b>) can be configured primarily to monitor the operating condition of one or more component of the vehicle (<b>111</b>), such as an internal combustion engine, an exhaust system, an electric motor, a brake, a tire, a battery, etc.</p><p id="p-0042" num="0041">The outputs of the sensor(s) (<b>103</b>) as a function of time are provided as a sensor data stream to the ADAS (<b>105</b>) and/or the artificial neural network (ANN) (<b>125</b>) to provide driver assistance (e.g., autonomous driving) and maintenance prediction.</p><p id="p-0043" num="0042">For example, the vehicle (<b>111</b>) can have a wireless communication device to communicate with a remote server (<b>119</b>) via wireless signals (<b>113</b>) and a communication network (<b>117</b>). The remote server (<b>119</b>) is typically configured at a location away from a road (<b>102</b>) on which the vehicle (<b>111</b>) is in service. For example, the vehicle (<b>111</b>) may provide some sensor data (<b>121</b>) to the server (<b>119</b>) and receive update of the artificial neural network (ANN) (<b>125</b>) from the server (<b>119</b>).</p><p id="p-0044" num="0043">One example of the communication network (<b>117</b>) is a cell phone network having one or more base stations (e.g., <b>115</b>) to receive the wireless signals (e.g., <b>113</b>). Another example of the communication network (<b>117</b>) is internet, where the wireless local area network signals (e.g., <b>113</b>) transmitted by the vehicle (<b>111</b>) is received in an access point (e.g., <b>115</b>) for further communication to the server (<b>119</b>). In some implementations, the vehicle (<b>111</b>) uses a communication link (<b>107</b>) to a satellite (<b>109</b>) or a communication balloon to communicate with the server (<b>119</b>).</p><p id="p-0045" num="0044">The server (<b>119</b>) can also communicate with one or more maintenance service facilities (e.g., <b>127</b>) to receive maintenance service data (<b>123</b>) of vehicles (e.g., <b>111</b>). The maintenance service data (<b>123</b>) can include inspection records and/or service records of components of the vehicles (e.g., <b>111</b>). For example, the inspection records and/or service records can indicate the degree of wear and tear of components inspected during their services at the maintenance service facilities (e.g., <b>127</b>), the identification of failed or malfunctioning components, etc. The sensor data (<b>121</b>) of the vehicles (e.g., <b>111</b>) in a time period prior to the services and the maintenance service data (<b>123</b>) can be used to train an artificial neural network (ANN) (<b>125</b>) to predict the probability of a component requiring a maintenance service. The updated artificial neural network (ANN) (<b>125</b>) can be used to predict and suggest a maintenance service for a vehicle (<b>111</b>) based on sensor data (<b>121</b>) received in a recent period of time. Alternatively, the updated artificial neural network (ANN) (<b>125</b>) can be transmitted to the vehicle (<b>111</b>); and the vehicle (<b>111</b>) can use the data generated from the sensors (<b>103</b>) during routine operations of the vehicle (<b>111</b>) to predict and suggest a maintenance service.</p><p id="p-0046" num="0045">The data storage device (<b>101</b>) of the vehicle (<b>111</b>) can be configured to record sensor data for a period of time that can be used in the ANN for predictive maintenance. Maintenance prediction is typically for a relative long period of time (e.g., a few days, weeks and/or months). In contrast, sensor data recorded for the review of an accident, collision, or near collision involving an autonomous vehicle is typically for a short period of time (e.g., 30 seconds to a few minutes). Thus, a typical black box data recorder configured to record sensor data for the review/analysis of an accident or collision is insufficient for predictive maintenance.</p><p id="p-0047" num="0046">Optionally, the data storage device (<b>101</b>) stores the sensor data of a period of time leading to a trip to a maintenance service facility (e.g., <b>127</b>). The maintenance service facility (e.g., <b>127</b>) can download the sensor data (<b>121</b>) from the data storage device (<b>101</b>) and provide the sensor data (<b>121</b>) and the corresponding maintenance service data (<b>123</b>) to the server (<b>119</b>) to facilitate the training of the artificial neural network (ANN) (<b>125</b>).</p><p id="p-0048" num="0047">Optionally, or in combination, the data storage device (<b>101</b>) is configured with a machine learning module to customize and/or train the artificial neural network (ANN) (<b>125</b>) installed in the vehicle (<b>111</b>) for predictive maintenance.</p><p id="p-0049" num="0048">For example, the machine learning module of the data storage device (<b>101</b>) can be used to calibrate the artificial neural network (ANN) (<b>125</b>) to account for the typical/daily environment in which the vehicle (<b>111</b>) is being operated and/or driving preferences/habits of the driver(s) of the vehicle (<b>111</b>).</p><p id="p-0050" num="0049">For example, during a period of time when the vehicle is expected to be operated under typical/daily environment with healthy components, the sensor data generated by the sensors (<b>103</b>) can be used to train the artificial neural network (ANN) (<b>125</b>) to recognize the patterns of sensor data that represents trouble free operations. Such patterns can vary for different vehicles (e.g., <b>111</b>) based on their routine operating environments and the driving habits/characteristics of their drivers. The training allows the artificial neural network (ANN) (<b>125</b>) to detect deviations from the recognized normal patterns and report anomaly for maintenance predictions.</p><p id="p-0051" num="0050">For example, the artificial neural network (ANN) (<b>125</b>) can include an SNN configured to classify time-based variations of sensor data and/or detect deviation from known patterns of sensor data of the vehicle (<b>111</b>) operated in the normal/healthy condition but in a personalized environment (e.g., a daily route of a driver/passenger) and/or operated under a personalized driving habit/pattern.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an autonomous vehicle (<b>111</b>) having a data storage device (<b>101</b>) according to one embodiment. For example, the vehicle (<b>111</b>) in the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref> can be implemented using the autonomous vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0053" num="0052">The vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>2</b></figref> is configured to have an advanced driver assistance system (ADAS) (<b>105</b>). The ADAS (<b>105</b>) of the vehicle (<b>111</b>) can have an artificial neural network (ANN) (<b>125</b>) for object detection, recognition, identification, and/or classification. The artificial neural network (ANN) (<b>125</b>) and/or another neural network (e.g., configured in the data storage device (<b>101</b>)) can be used to predict the probability of a component of the vehicle (<b>111</b>) requiring a maintenance service (e.g., repair, replacement, or adjustment).</p><p id="p-0054" num="0053">Preferably, the data storage device (<b>101</b>) is configured to process sensor data at least partially for predictive maintenance with reduced computation burden on the processors (<b>133</b>) that are tasked to operate the ADAS (<b>105</b>) and/or other components, such as an infotainment system (<b>149</b>).</p><p id="p-0055" num="0054">The vehicle (<b>111</b>) typically includes an infotainment system (<b>149</b>), a communication device (<b>139</b>), one or more sensors (<b>103</b>), and a computer system (<b>131</b>) that is connected to some controls of the vehicle (<b>111</b>), such as a steering control (<b>141</b>) for the direction of the vehicle (<b>111</b>), a braking control (<b>143</b>) for stopping of the vehicle (<b>111</b>), an acceleration control (<b>145</b>) for the speed of the vehicle (<b>111</b>), etc. In some embodiments, the vehicle (<b>111</b>) in the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref> has a similar configuration and/or similar components.</p><p id="p-0056" num="0055">Some of the sensors (<b>103</b>) are required for the operations of the ADAS (<b>105</b>); and some of the sensors (<b>103</b>) are used to collect data related to the health of the components of the vehicle (<b>111</b>), which may not be used in the ADAS (<b>105</b>). Optionally, the sensor data generated by the sensors (<b>103</b>) can also be used to predict the likelihood of imminent failure of a component. Such a prediction can be used in the ADAS (<b>105</b>) to take emergency actions to render the vehicle in a safe state (e.g., by reducing speed and/or pulling off to park).</p><p id="p-0057" num="0056">The computer system (<b>131</b>) of the vehicle (<b>111</b>) includes one or more processors (<b>133</b>), a data storage device (<b>101</b>), and memory (<b>135</b>) storing firmware (or software) (<b>147</b>), including the computer instructions and data models for ADAS (<b>105</b>).</p><p id="p-0058" num="0057">The one or more sensors (<b>103</b>) of the vehicle can include a visible light camera, an infrared camera, a lidar, radar, or sonar system, a peripheral sensor, a global positioning system (GPS) receiver, a satellite positioning system receiver, a brake sensor, and/or an airbag sensor. Further, the sensors (<b>103</b>) can include audio sensors (e.g., microphone) configured to monitor noises from various components and locations in the vehicle (<b>111</b>), a vibration sensor, a pressure sensor, a force sensor, a stress sensor, and/or a deformation sensor configured to measure loads on a component of the vehicle (<b>111</b>), accelerometers and/or gyroscope sensors measuring the motions of some components of the vehicle (<b>111</b>), etc. Such sensors can be used to monitor the operating status and/or health of the components for predictive maintenance.</p><p id="p-0059" num="0058">The sensor(s) (<b>103</b>) can provide a stream of real time sensor data to the computer system (<b>131</b>). The sensor data generated by a sensor (<b>103</b>) of the vehicle (<b>111</b>) can include an image that captures an object using a camera that images using lights visible to human eyes, or a camera that images using infrared lights, or a sonar, radar, or LIDAR system. Image data obtained from at least one sensor of the vehicle is part of the collected sensor data for recording in the data storage device (<b>101</b>) and/or as input to the artificial neural network (ANN) (<b>125</b>). For example, a camera can be used to obtain roadway information for the travel of the vehicle (<b>111</b>), which can be processed by the artificial neural network (ANN) (<b>125</b>) to generate control signals for the vehicle (<b>111</b>). For example, a camera can be used to monitor the operation state/health of a component of the vehicle (<b>111</b>), which can be processed by the artificial neural network (ANN) (<b>125</b>) to predict or schedule a maintenance service.</p><p id="p-0060" num="0059">The sensor data generated by a sensor (<b>103</b>) of the vehicle (<b>111</b>) can include an audio stream that captures the characteristics of sounds at a location on the vehicle (<b>111</b>), such as a location near an engine, a motor, a transmission system, a wheel, a door, a window, etc. The audio data obtained from at least one sensor (<b>103</b>) of the vehicle (<b>111</b>) can be part of the collected sensor data for recording in the data storage device (<b>101</b>) and/or as input to the artificial neural network (ANN) (<b>125</b>). For example, the audio stream can be used to monitor the operation state/health of a component of the vehicle (<b>111</b>) (e.g., an internal combustion engine, an exhaust system, an electric motor, a brake), which can be processed by the artificial neural network (ANN) (<b>125</b>) to predict or schedule a maintenance service.</p><p id="p-0061" num="0060">The infotainment system (<b>149</b>) can be used to present the predicted or scheduled maintenance service. Optionally, the communication device (<b>139</b>) can establish a connection to a mobile device of the driver of the vehicle (<b>111</b>) to inform the driver of the recommended maintenance service and/or the recommended data of the service, to calendar the appointment, etc.</p><p id="p-0062" num="0061">When the vehicle (<b>111</b>) is configured with an ADAS (<b>105</b>), the outputs of the ADAS (<b>105</b>) can be used to control (e.g., (<b>141</b>), (<b>143</b>), (<b>145</b>)) the acceleration of the vehicle (<b>111</b>), the speed of the vehicle (<b>111</b>), and/or the direction of the vehicle (<b>111</b>), during autonomous driving.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIGS. <b>3</b>-<b>5</b></figref> illustrate training of artificial neural networks for maintenance service prediction according to some embodiments.</p><p id="p-0064" num="0063">In <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a module (<b>171</b>) of supervised machine learning is used to train an artificial neural network (<b>125</b>) to minimize the differences between the service prediction (<b>129</b>) generated from the sensor data (<b>121</b>) and the maintenance service data (<b>123</b>).</p><p id="p-0065" num="0064">For example, the maintenance service data (<b>123</b>) can identify the measured wear and tear of a component as a function of time to predict a time to a recommended service. The sensor data (<b>121</b>) can be used in the artificial neural network (ANN) (<b>125</b>) to generate a predicted time to the recommended service. The supervised machine learning module (<b>171</b>) can adjust the artificial neural network (<b>125</b>) to reduce/minimize the difference between the time predicted based on the sensor data (<b>121</b>) and the time computed from the measurement of wear and tear.</p><p id="p-0066" num="0065">For example, the maintenance service data (<b>123</b>) can identify a component that is replaced or repaired in the maintenance service facility (<b>127</b>). The sensor data (<b>121</b>) recorded for a time period prior to the replacement or repair of the component can be used to calculate the times to the replacement or repair. Further, the segments of the stream of sensor data in the time period before the replacement or repair can be used in the artificial neural network (ANN) (<b>125</b>) to generate a prediction to the time of the replacement or repair. The supervised learning (<b>171</b>) can be used to adjust the artificial neural network (ANN) (<b>125</b>) to reduce the predicted time to the replacement or repair and the actual time to the replacement or repair.</p><p id="p-0067" num="0066">The supervised learning (<b>171</b>) of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can be applied in the server (<b>119</b>) based on the sensor data of a population of vehicles and their maintenance service data (<b>123</b>) to generate a generic ANN for the population of the vehicles.</p><p id="p-0068" num="0067">The supervised learning (<b>171</b>) of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can be applied in the vehicle (<b>111</b>) based on the sensor data of the vehicle and its maintenance service data (<b>123</b>) to generate a customized/personalized ANN for the population of the vehicles. For example, a generic ANN can be initially used in the vehicle (<b>111</b>); and the sensor data of the vehicle (<b>111</b>) and its maintenance service data (<b>123</b>) can be used to further train the artificial neural network (ANN) (<b>125</b>) of the vehicle for customization/personalization of the artificial neural network (ANN) (<b>125</b>) in the vehicle (<b>111</b>).</p><p id="p-0069" num="0068">In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a module (<b>175</b>) of unsupervised machine learning is used to train or refine an artificial neural network (<b>125</b>) to facilitate anomaly detection (<b>173</b>). The unsupervised machine learning module (<b>175</b>) is configured to adjust the ANN (e.g., SNN) for the classification, clustering, or recognized pattern in the sensor data (<b>121</b>) such that a degree of deviation from the classification, clustering, or recognized pattern in the sensor data (<b>121</b>) generated in a recent time period can be used to signal the detection (<b>173</b>) of anomaly. Anomaly detection (<b>173</b>) allows the vehicle (<b>111</b>) to be scheduled for inspection in a maintenance service facility (<b>127</b>). Optionally, after the inspection, maintenance service data (<b>123</b>) can be used to apply a supervised learning (<b>171</b>) to generate more precise predictions to a service, as in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0070" num="0069">Typically, a vehicle (<b>111</b>) can be assumed to be operating in a normal/healthy condition in a certain time period. For example, after a new vehicle (<b>111</b>) is initially delivered for service, the vehicle (<b>111</b>) can be assumed to provide trouble-free services for at least a period of time (e.g., a few months). For example, after a time period following the replacement or repair of a component, the component can be assumed to provide trouble-free service for at least a period of time (e.g., a few months or a year). Thus, the sensor data (<b>121</b>) obtained during this period of time can be pre-classified as &#x201c;normal&#x201d; to train the artificial neural network (ANN) (<b>125</b>) using an unsupervised learning (<b>175</b>) as in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, or a supervised learning (<b>171</b>) as in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0071" num="0070">For example, the sensor data (<b>121</b>) collected during the &#x201c;normal&#x201d; service time period of the vehicle (<b>111</b>) or a component can be classified via an unsupervised learning (<b>175</b>) into a number of clusters. Different clusters may correspond to different types of normal conditions (e.g., traveling on different routes, on roads with different surface conditions, on days with different whether conditions, in different time periods of a day, different days in a week, different mood of driving habits of the driver). When a subsequent sensor data (<b>121</b>) is classified outside of the &#x201c;normal&#x201d; clusters, an anomaly is detected.</p><p id="p-0072" num="0071">Optionally, a supervised machine learning (<b>171</b>) can be used to train the artificial neural network (ANN) (<b>125</b>), as illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. During the &#x201c;normal&#x201d; service period of the vehicle (<b>111</b>) or a component, an expected classification (<b>177</b>) can be used to label the sensor data (<b>121</b>). The supervised learning (<b>171</b>) can be used to minimize the classification differences between the predictions (<b>179</b>) made using the artificial neural network (ANN) (<b>125</b>) according to the sensor data (<b>121</b>) and the expected classification (<b>177</b>). Further, when the sensor data (<b>121</b>) is known to be &#x201c;abnormal&#x201d; (e.g., after a diagnosis made in the maintenance service facility (<b>127</b>) or by the user, driver, or passenger of the vehicle (<b>111</b>)), the expected classification (<b>177</b>) can be changed to &#x201c;abnormal&#x201d; for further training of the artificial neural network (ANN) (<b>125</b>) for direct recognition of the anomaly (e.g., instead of relying upon deviation from known &#x201c;normal&#x201d; clusters for an inference of anomaly).</p><p id="p-0073" num="0072">Thus, the artificial neural network (ANN) (<b>125</b>) can be trained to identify abnormal sensor data and estimate the degree of severity in anomaly to schedule a maintenance service.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a method of predictive maintenance according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>6</b></figref> can be implemented in the data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> in the vehicle (<b>111</b>) or in a computer system (<b>131</b>) in the vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0075" num="0074">At block <b>201</b>, a sensor (e.g., <b>103</b>) installed in a vehicle (<b>111</b>) generates a sensor data stream (e.g., <b>121</b>) during operations of the vehicle (<b>111</b>) on a road (<b>102</b>).</p><p id="p-0076" num="0075">At block <b>203</b>, the sensor data stream (e.g., <b>121</b>) is provided into an artificial neural network (ANN) (<b>125</b>). For example, the artificial neural network (ANN) (<b>125</b>) can include a spiking neural network (SNN).</p><p id="p-0077" num="0076">At block <b>205</b>, the artificial neural network (ANN) (<b>125</b>) generates, based on the sensor data stream (e.g., <b>121</b>), a prediction of a maintenance service.</p><p id="p-0078" num="0077">At block <b>207</b>, a data storage device (<b>101</b>) configured on the vehicle stores at least a portion of the sensor data stream (e.g., <b>121</b>).</p><p id="p-0079" num="0078">At block <b>209</b>, the artificial neural network (ANN) is trained using the sensor data stream (e.g., <b>121</b>) collected within a predetermined time period from the vehicle leaving a factory or a maintenance service facility (<b>127</b>).</p><p id="p-0080" num="0079">For example, the artificial neural network (ANN) can be configured to identify a component of the vehicle (<b>111</b>) that needs repair or replacement in the maintenance service and/or identify a predicted time period to failure or malfunctioning of the component, or a suggested time period to a recommended maintenance service of the component prior the failure or malfunctioning of the component. Thus, the performance of the predicted maintenance service can avoid an incident of failure or malfunctioning of the component while the vehicle (<b>111</b>) operates on the road (<b>102</b>).</p><p id="p-0081" num="0080">For example, the sensor (<b>103</b>) can be a microphone mounted in vicinity of the component, a vibration sensor attached to the component, a pressure sensor installed in the component, a force or stress sensor mounted on or attached to the component, a deformation sensor attached to the component, an accelerometer configured to measure motion parameters of the component.</p><p id="p-0082" num="0081">Optionally, the data storage device (<b>101</b>), the computer system (<b>131</b>) of the vehicle (<b>111</b>), and/or a server (<b>119</b>) remote from the vehicle can have a machine learning module configured to train the artificial neural network (ANN) (<b>125</b>) during a period of time in which the vehicle (<b>111</b>) is assumed to be in a healthy state, such as a predetermined time period from the vehicle (<b>111</b>) leaving a factory or a maintenance service facility (<b>127</b>).</p><p id="p-0083" num="0082">For example, the machine learning module can use an unsupervised machine learning (<b>175</b>) to train the artificial neural network (ANN) (<b>125</b>) to recognize/classify normal patterns of sensor data (<b>121</b>) and thus to have the capability to detect anomaly based on deviation from the normal patterns, as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Alternatively, supervised machine learning (<b>171</b>) can be used, as illustrated in <figref idref="DRAWINGS">FIG. <b>3</b> or <b>5</b></figref>.</p><p id="p-0084" num="0083">For example, unsupervised machine learning (<b>175</b>) can be applied by the data storage device (<b>101</b>) or the computer system (<b>131</b>) of the vehicle (<b>111</b>) during the predetermined period of time in which the vehicle and/or the component is known to be operating without troubles or degradations.</p><p id="p-0085" num="0084">Alternatively, or in combination, some of the sensor data (<b>121</b>) stored in the data storage device (<b>101</b>) of the vehicle (<b>111</b>) can be uploaded to the server (<b>119</b>) for training the artificial neural network (ANN) (<b>125</b>).</p><p id="p-0086" num="0085">In at least some embodiments disclosed herein, the data storage device (<b>101</b>) is configured to accelerate the computations of the artificial neural network (ANN) (<b>125</b>) of the vehicle (<b>111</b>).</p><p id="p-0087" num="0086">For example, in addition to the typical operations to support data access and storage, the data storage device (<b>101</b>) can be further configured to perform at least part of the computations involving the artificial neural network (ANN) (<b>125</b>), such as the generation of the predictions (e.g., <b>129</b> or <b>173</b>) or classifications (e.g., <b>179</b>) from the sensor data (<b>121</b>) and/or the adjustment of the artificial neural network (ANN) (<b>125</b>) through unsupervised machine learning (<b>175</b>) (e.g., as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>) and/or supervised machine learning (<b>171</b>) (e.g., as illustrated in <figref idref="DRAWINGS">FIG. <b>3</b> or <b>5</b></figref>).</p><p id="p-0088" num="0087">For example, the computations configured in the data storage device (<b>101</b>) can be used to reduce the amount of data to be transmitted to the processor(s) (<b>133</b>) to use or apply the artificial neural network (ANN) (<b>125</b>) and/or reduce the computation tasks of the processor(s) (<b>133</b>) in evaluating the outputs of the artificial neural network (ANN) (<b>125</b>) and/or in training the artificial neural network (ANN) (<b>125</b>). Such an arrangement can result in faster output from the data storage device (<b>101</b>) and/or lower energy usage, since the data would not have to be moved in and out of the memory to a dedicated, standalone neural network accelerator. The computation capability of the data storage device (<b>101</b>) in processing data related to the artificial neural network (ANN) (<b>125</b>) enables the computer system (<b>131</b>) of the motor vehicle (<b>111</b>) to monitor the health of the automotive components (e.g., in a non-real-time manner, or a pseudo-real-time manner), with reduced impact, or no impact, on the processing of mission critical tasks (e.g., autonomous driving by the ADAS (<b>105</b>)). Further, the computation capability of the data storage device (<b>101</b>) can be used to accelerate the processing of the sensor data for ADAS (<b>105</b>) and thus improve the processing of mission critical tasks.</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a data storage device (<b>101</b>) to accelerate neural network computations according to one embodiment. For example, the data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b></figref> can be used to implement the data storage device (<b>101</b>) of the vehicle (<b>111</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref>.</p><p id="p-0090" num="0089">In <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the data storage device (<b>101</b>) has a host interface (<b>157</b>) configured to communicate with a processor (e.g., <b>133</b>). For example, the communication between the processor (e.g., <b>133</b>) and the host interface (<b>157</b>) can be, at least in part, in accordance with a communication protocol for a peripheral component interconnect express (PCIe) bus, a serial advanced technology attachment (SATA) bus, a universal serial bus (USB) bus, and/or a storage area network (SAN).</p><p id="p-0091" num="0090">For example, the host interface (<b>157</b>) can be used to receive sensor data (<b>121</b>) generated by the sensors (<b>103</b>) of the vehicle (<b>111</b>) to optionally store a portion of the sensor data (<b>121</b>) in the storage media components (<b>161</b> to <b>163</b>).</p><p id="p-0092" num="0091">For example, each of the storage media components (<b>161</b> to <b>163</b>) can be a memory integrated circuit configured to store data. For example, a media component (<b>161</b> or <b>163</b>) can include one or more integrated circuit dies embedded in an integrated circuit package. An integrated circuit die can have many memory units formed thereon to store data.</p><p id="p-0093" num="0092">In general, some memory integrated circuits are volatile and require power to maintain the stored data; and some memory integrated circuits are non-volatile and can retain the stored data even when not powered.</p><p id="p-0094" num="0093">Examples of non-volatile memory include flash memory, memory units formed based on negative-and (NAND) logic gates, negative-or (NOR) logic gates, phase-change memory (PCM), magnetic memory (MRAM), resistive random-access memory, cross point storage and memory devices. A cross point memory device uses transistor-less memory elements, each of which has a memory cell and a selector that are stacked together as a column. Memory element columns are connected via two perpendicular layers of wires, where one layer is above the memory element columns and the other layer below the memory element columns. Each memory element can be individually selected at a cross point of one wire on each of the two layers. Cross point memory devices are fast and non-volatile and can be used as a unified memory pool for processing and storage. Further examples of non-volatile memory include read-only memory (ROM), programmable read-only memory (PROM), erasable programmable read-only memory (EPROM) and electronically erasable programmable read-only memory (EEPROM) memory, etc. Examples of volatile memory include dynamic random-access memory (DRAM) and static random-access memory (SRAM).</p><p id="p-0095" num="0094">The data storage device (<b>101</b>) can have a controller (<b>151</b>) that includes volatile local memory (<b>153</b>) and at least one processing device (<b>155</b>).</p><p id="p-0096" num="0095">The local memory of the controller (<b>151</b>) can be an embedded memory configured to store instructions for performing various processes, operations, logic flows, and routines that control operation of the processing device (<b>155</b>), including handling communications between the data storage device (<b>101</b>) and the processor(s) (e.g., <b>133</b>) of the vehicle (<b>111</b>), and other functions described herein. The local memory (<b>153</b>) of the controller (<b>151</b>) can include read-only memory (ROM) for storing micro-code and/or memory registers storing, e.g., memory pointers, fetched data, etc., and/or volatile memory, such as dynamic random-access memory (DRAM) and static random-access memory (SRAM).</p><p id="p-0097" num="0096">In <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the data storage device (<b>101</b>) includes a neural network accelerator (<b>159</b>) coupled to the controller (<b>151</b>) and/or the storage media components (<b>161</b> to <b>163</b>).</p><p id="p-0098" num="0097">For example, the neural network accelerator (<b>159</b>) can be configured to perform matrix arithmetic computations. The computations involving artificial neural network (ANN) (<b>125</b>) have matrix multiplication and accumulation operations, which can be computationally intensive for a generic processor (e.g., <b>133</b>). Using the neural network accelerator (<b>159</b>) to perform the matrix arithmetic computations can reduce the data to be transmitted to the processor(s) (<b>133</b>) of the vehicle (<b>111</b>) and reduce the computation workload for the processor(s) (<b>133</b>).</p><p id="p-0099" num="0098">For example, when the artificial neural network (ANN) (<b>125</b>) includes a spiking neural network (SNN), the simulation of the differential equation(s) for controlling the activation level of SNN neurons can be computationally intensive for a generic processor (e.g., <b>133</b>). The neural network accelerator (<b>159</b>) can use special hardware to simulate the differential equation(s) and thus improve the computational efficiency of the computer system (<b>131</b>) as a whole.</p><p id="p-0100" num="0099">In some implementations, the neural network accelerator (<b>159</b>) is an integrated circuit device separate from the controller (<b>151</b>) and/or the storage media components (<b>161</b> to <b>163</b>). Alternatively, or in combination, a neural network accelerator (<b>159</b>) is integrated with the controller (<b>151</b>) in an integrated circuit package. Further, a neural network accelerator (<b>159</b>) can be integrated in at least one of the storage media components (<b>161</b> to <b>163</b>), as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a storage media component (<b>160</b>) to accelerate neural network computations according to one embodiment. For example, each or some of the storage media components (<b>161</b> to <b>163</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref> can be implemented using a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0102" num="0101">In <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the storage media component (<b>160</b>) can be housed within an integrated circuit package. An input/output (I/O) interface (<b>172</b>) of the storage media component (<b>160</b>) is configured to process input/output signals in the pins of the integrated circuit package. For example, the input/output signals can include address signals to specify locations in the media units (<b>176</b>) and data signals representing data to be written in the media units (<b>176</b>) at the locations specified via the address signals, or data retrieved from the locations in the media units (<b>176</b>).</p><p id="p-0103" num="0102">In <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a neural network accelerator (<b>159</b>) is coupled with the control logic (<b>174</b>) and/or the media units (<b>176</b>) to perform computations that are used in the evaluation of the output of an artificial neural network (ANN) (<b>125</b>) and/or in the training of the artificial neural network (ANN) (<b>125</b>).</p><p id="p-0104" num="0103">For example, the input/output interface (<b>172</b>) can receive addresses that identify matrices that are stored in the media units and that are to be operated upon via the neural network accelerator (<b>159</b>). The storage media component (<b>160</b>) can provide the computation results of the neural network accelerator (<b>159</b>) as the output data responsive to the addresses, store the output data in a buffer for further operations, store the output data into a location in the media units (<b>176</b>) specified via the address signals. Thus, the computations performed by the neural network accelerator (<b>159</b>) can be within the storage media component (<b>160</b>), which is close to the media units (<b>176</b>) in which the matrix data is stored. For example, each of the media units (<b>176</b>) can be an integrated circuit die on which memory units of non-volatile memory are formed.</p><p id="p-0105" num="0104">For example, the state data of SNN neurons can be stored in the media units (<b>176</b>) according to a predetermined pattern. The neural network accelerator (<b>159</b>) can automatically update the states of the SNN neurons according to the differential equation(s) for controlling the activation level of SNN neurons over time. Optionally, the neural network accelerator (<b>159</b>) is configured to process spiking of neurons in the neural network. Alternatively, the neural network accelerator (<b>159</b>) of the data storage device (<b>101</b>) and/or the processor(s) (<b>133</b>) can be configured to process the spiking of neurons and/or accumulation of inputs to the SNN.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a method to accelerate neural network computations in motor vehicles according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>9</b></figref> can be implemented in a vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> using a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b></figref> and/or a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For example, the method of <figref idref="DRAWINGS">FIG. <b>9</b></figref> can be used in combination with the method of <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0107" num="0106">At block <b>221</b>, a data storage device (<b>101</b>) of a vehicle (<b>111</b>) receives a sensor data stream from at least one sensor (e.g., <b>103</b>) configured on the vehicle (<b>111</b>).</p><p id="p-0108" num="0107">At block <b>223</b>, the data storage device (<b>101</b>) stores at least a portion of the sensor data stream.</p><p id="p-0109" num="0108">At block <b>225</b>, a neural network accelerator (<b>159</b>) configured within the data storage device (<b>101</b>) performs at least a portion of computations based on an artificial neural network (<b>125</b>) and the sensor data stream.</p><p id="p-0110" num="0109">At block <b>227</b>, a maintenance service of the vehicle (<b>111</b>) is predicted based at least in part on the computations performed by the neural network accelerator (<b>159</b>) configured within the data storage device (<b>101</b>).</p><p id="p-0111" num="0110">Optionally, at block <b>229</b>, the artificial neural network (ANN) is trained in the vehicle (<b>111</b>), using at least in part the neural network accelerator and using the sensor data stream collected within a predetermined time period, such as a period following the delivery of the new vehicle (<b>111</b>) from a factory or following the replacement of a component in a maintenance service facility (<b>127</b>).</p><p id="p-0112" num="0111">For example, the neural network accelerator (<b>159</b>) can be configured on an integrated circuit device that is separate from a controller (<b>151</b>) of the data storage device and/or separate from the storage media components (<b>161</b> to <b>163</b>).</p><p id="p-0113" num="0112">For example, the neural network accelerator (<b>159</b>) can be configured on an integrated circuit device that includes a controller (<b>151</b>) of the data storage device (<b>101</b>), or on an integrated circuit device that includes storage media component (<b>160</b>, <b>161</b> or <b>163</b>) of the data storage device (<b>101</b>).</p><p id="p-0114" num="0113">For example, the neural network accelerator (<b>159</b>) can be configured to perform computations, such as matrix arithmetic computations for ANN and/or differential equation simulations for SNN, using data stored in the data storage device (<b>101</b>).</p><p id="p-0115" num="0114">Examples of the matrix arithmetic computations include matrix multiplication and accumulation operations. After a computation to generate a result of the matrix arithmetic computations using a data stored in the data storage device (<b>101</b>), the neural network accelerator (<b>159</b>) can provide the result as output of the data storage device (<b>101</b>) in retrieving data (e.g., in response to a read command). Alternatively, or in combination, the result of the matrix arithmetic computation can be buffered in the data storage device (<b>101</b>) as operand for a next matrix computation performed in combination with a matrix of data retrieved from the non-volatile memory via a read command received in the host interface (<b>157</b>).</p><p id="p-0116" num="0115">When the artificial neural network (ANN) (<b>125</b>) includes a spiking neural network (SNN), the neural network accelerator can be configured to simulate a differential equation controlling activation levels of neurons in the spiking neural network (SNN). Optionally, the storage media component is configured to store states of the neurons in the spiking neural network according to a predetermined pattern; and the neural network accelerator is configured to automatically update the states of the neurons over time according to the differential equation. For example, the neural network accelerator (<b>159</b>) can be configured to train the spiking neural network (SNN) via unsupervised machine learning to detect anomaly.</p><p id="p-0117" num="0116">The computations performed by the neural network accelerator (<b>159</b>) according to an artificial neural network (ANN) (<b>125</b>) involve different types of data that have different patterns of usages of the data storage device (<b>101</b>).</p><p id="p-0118" num="0117">For example, making a prediction using the artificial neural network (ANN) (<b>125</b>) includes the use of data specifying the model of the artificial neural network (ANN) (<b>125</b>), input data provided to the artificial neurons, and output data generated by the artificial neurons.</p><p id="p-0119" num="0118">The storage capacity of the data storage device (<b>101</b>) can be partitioned into different portions for the different types of ANN-related data. The different portions can be separately configured to optimize the access and storage of the corresponding data according to their patterns of usages by the neural network accelerator (<b>159</b>) and/or the processor(s) (<b>133</b>) of the computer system (<b>131</b>) in which the data storage device (<b>101</b>) is configured.</p><p id="p-0120" num="0119">The model of the artificial neural network (ANN) (<b>125</b>) can include the parameters specifying the static attributes of individual artificial neurons in the artificial neural network (ANN) (<b>125</b>) and the neuron connectivity in the artificial neural network (ANN) (<b>125</b>). The model data of the artificial neural network (ANN) (<b>125</b>) is static and does not change during the prediction calculation made using the artificial neural network (ANN) (<b>125</b>). Thus, the usage pattern of the model data is mostly read. However, the model data of the artificial neural network (ANN) (<b>125</b>) can change when an updated artificial neural network (ANN) (<b>125</b>) is installed. For example, the vehicle (<b>111</b>) can download an updated artificial neural network (ANN) (<b>125</b>) from the server (<b>119</b>) to the data storage device (<b>101</b>) of the vehicle (<b>111</b>) to update its prediction capability. The model data of the artificial neural network (ANN) (<b>125</b>) can also change during or after the training of the artificial neural network (ANN) (<b>125</b>) using a machine learning technique (e.g., <b>171</b> or <b>175</b>). It is preferred to configure a separate partition or namespace of the data storage device (<b>101</b>) to store the model data, where the partition or namespace is operated according to configuration parameters that optimize the memory units for the specific usage patterns of the model data (e.g., mostly read, infrequent update). For example, when the memory units are implemented using a flash memory based on NAND logic gates, the memory units in the ANN model partition/namespace can be configured to operate in a multi-level cell (MLC) mode, a triple level cell (TLC) mode, or a quad-level cell (QLC) mode, wherein each memory cells stores two, three, or four bits for increased storage capability.</p><p id="p-0121" num="0120">Input data provided to the artificial neurons in the artificial neural network (ANN) (<b>125</b>) can include external inputs and internal inputs. The external inputs are generated typically by the sensors (<b>103</b>) of the vehicle (<b>111</b>) but not by artificial neurons in the artificial neural network (ANN) (<b>125</b>). The external inputs can be saved in a cyclic fashion so that the input data of the most recent time period of a predetermined length of driving can be found in the data storage device (<b>101</b>). Thus, it is preferred to configure a separate partition or namespace of the data storage device (<b>101</b>) to store the external input data, where the partition or namespace is operated according to configuration parameters that optimize the memory units for the storage pattern of the external input data (e.g., enhanced endurance, cyclic overwrite). For example, when the memory units are implemented using a flash memory based on NAND logic gates, the memory units in the ANN input partition/namespace can be configured to operate in a single level cell (SLC) mode, where each memory cell stores one bit of data for improved endurance in cyclic overwriting operations.</p><p id="p-0122" num="0121">In some implementations, artificial neurons can have state variables that change over time in response to inputs during prediction calculations. For example, the activation level of a spiking neuron can change over time and is considered a dynamic state variable of the spiking neuron. In some implementations, such state variable data of artificial neurons has a similar storage usage pattern as the external input data; and thus, the state variable data can be stored in the partition or namespace configured for the external input data. In other implementations, the state variable data of artificial neurons is kept in a buffer and stored less frequently than the external inputs; and thus, another partition/namespace can be configured for storing the dynamic state variable data of artificial neurons.</p><p id="p-0123" num="0122">Output data generated by the artificial neurons in the artificial neural network (ANN) (<b>125</b>) can be buffered for further access by the neural network accelerator (<b>159</b>) and/or the processor(s) (<b>133</b>) of the computer system (<b>131</b>). The output data can include external outputs and internal outputs. The external inputs are generated by artificial neurons as the output from the artificial neural network (ANN) (<b>125</b>), such as the results of classifications or predictions made by the artificial neural network (ANN) (<b>125</b>). The output of the artificial neural network (ANN) (<b>125</b>) is typically further processed by the processor(s) (<b>133</b>) of the computer system (<b>131</b>). The external inputs may be saved periodically (e.g., in a way similar to the storing of the state variable data). The internal outputs and/or some of the external outputs can be internal inputs to artificial neurons in the artificial neural network (ANN) (<b>125</b>). In general, it may not be necessary to store the internal outputs from the buffer of the data storage device to the storage media components. In some implementations, when the buffer capability of the data storage device (<b>101</b>) is insufficient to hold the entire state variable data and/or the internal outputs, the data storage device (<b>101</b>) can use a swap partition/namespace to extend the capacity of the buffer. The swap partition/namespace can be configured for optimized random access and for improved endurance.</p><p id="p-0124" num="0123">External outputs and/or dynamic states of neurons can be saved in a separate output partition or namespace, in a cyclic way so that the external output data and/or dynamic states of the neurons can be periodically stored, and the most recent sets of the external outputs and/or dynamic states can be found in the data storage device (<b>101</b>). External outputs and/or dynamic states of neurons can be stored selectively, since some of such data can be re-generated by the ANN from the external inputs stored in the input partition or namespace. Preferably, the output partition or namespace is configured to store one or more sets of external outputs and/or dynamic states that cannot be created from the external inputs stored in the input partition or namespace. In storing data in a cyclic way in an input/output partition or namespace, the oldest stored data sets are erased to make rooms for the most recent data sets. The ANN input/output partition/namespace can be configured for an optimized sequential write stream for copying data from the buffer of the data storage device into the memory units in the storage media components of the data storage device.</p><p id="p-0125" num="0124"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows a data storage device (<b>101</b>) configured to support neural network computations according to one embodiment. For example, the data storage device (<b>101</b>) can be used in the vehicle (<b>111</b>) in <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> to facilitate predictive maintenance and/or support the ADAS (<b>105</b>).</p><p id="p-0126" num="0125">The data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>10</b></figref> includes a host interface (<b>157</b>) and a controller (<b>151</b>), similar to the data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0127" num="0126">The storage capacity (<b>181</b>) of the data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>10</b></figref> can be implemented using a set of storage media components, similar to the storage media components (<b>161</b> to <b>163</b>) in the data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0128" num="0127">A set of namespaces (<b>183</b>, <b>185</b>, <b>187</b>, . . . ) can be created on the storage capacity (<b>181</b>) of the data storage device (<b>101</b>). Each of the namespace (e.g., <b>183</b>, <b>185</b>, or <b>187</b>) corresponds to a named portion of the storage capacity (<b>181</b>). Logical addresses are defined within each namespace. An address map (<b>191</b>) is configured to map between the logical addresses defined in the namespaces (<b>183</b>, <b>185</b>, <b>187</b>, . . . ) to the physical addresses of memory units in the storage media components (e.g., <b>161</b> to <b>163</b> illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0129" num="0128">The address map (<b>191</b>) can include namespace optimization settings (<b>192</b>) for the namespaces (<b>183</b>, <b>185</b>, and <b>187</b>).</p><p id="p-0130" num="0129">For example, an ANN model namespace (<b>183</b>) can be a memory/storage partition configured for the model data of the artificial neural network (ANN) (<b>125</b>). The namespace optimization settings (<b>192</b>) optimizes the memory operations in the ANN model namespace (<b>183</b>) according to the data usage pattern of ANN models (e.g., mostly read, infrequent update centric).</p><p id="p-0131" num="0130">For example, a neuron input namespace (<b>185</b>) can be a memory/storage partition configured for the external input data to the artificial neural network (ANN) (<b>125</b>). The namespace optimization settings (<b>192</b>) optimizes the memory operations in the neuron input namespace (<b>185</b>) according to the data usage pattern of the external input data (e.g., for enhanced endurance supporting cyclic overwrite of continuous input data flow for sequential writes).</p><p id="p-0132" num="0131">For example, a neuron output namespace (<b>187</b>) can be a memory/storage partition configured for the external output data provided from the artificial neural network (ANN) (<b>125</b>). The namespace optimization settings (<b>192</b>) optimizes the memory operations in the neuron output namespace (<b>187</b>) according to the data usage pattern of the external output data (e.g., improved endurance for periodically overwrite of data with random read/write access).</p><p id="p-0133" num="0132">The data storage device (<b>101</b>) includes a buffer (<b>152</b>) configured to store temporary/intermediate data of the artificial neural network (ANN) (<b>125</b>), such as the internal inputs/outputs of the artificial neurons in the artificial neural network (ANN) (<b>125</b>).</p><p id="p-0134" num="0133">Optionally, a swap namespace can be configured in the storage capacity (<b>181</b>) to extend the capacity of the buffer (<b>152</b>).</p><p id="p-0135" num="0134">Optionally, the address map (<b>191</b>) includes a mapping between logic memory addresses received in the host interface (<b>157</b>) to access data of artificial neurons and the identities of the artificial neurons. Thus, a read or write command to access one type of data of an artificial neuron in one namespace can cause the controller <b>151</b> to access another type of data of the artificial neuron in another namespace.</p><p id="p-0136" num="0135">For example, in response to a request to write external input data for a neuron into the storage capacity (<b>181</b>) of the data storage device (<b>101</b>), the address map (<b>191</b>) can be used to calculate the addresses of the model parameters of the neuron in the ANN model namespace (<b>183</b>) and read the model parameters into the buffer (<b>152</b>) to allow the neural network accelerator (<b>159</b>) to perform the computation of the output of the neuron. The output of the neuron can be saved in the buffer (<b>152</b>) as the internal input to other neurons (e.g., to reduce write amplification). Further, the identities of the other neurons connected to the neuron can also be retrieved from the ANN model namespace (<b>183</b>) into the buffer (<b>152</b>), which allows the neural network accelerator (<b>159</b>) and/or the processor to further process the propagation of the output in the artificial neural network (ANN) (<b>125</b>). The retrieval of the model data from the ANN model namespace (<b>183</b>) can be performed in parallel with the storing of the external input data into the neuron input namespace (<b>185</b>). Thus, the processors (<b>133</b>) of the computer system (<b>131</b>) of the vehicle (<b>111</b>) do not have to explicitly send in read commands for the retrieval of the model data from the ANN model namespace (<b>183</b>).</p><p id="p-0137" num="0136">Similarly, in response to reading output data of a neuron, the address map (<b>191</b>) can be used to compute the addresses of the model parameters of the neuron stored in the ANN model namespace (<b>183</b>) and read the model parameters into the buffer (<b>152</b>) to allow the neural network accelerator (<b>159</b>) to apply internal inputs in the buffer (<b>152</b>) to the perform the computation of the output of the neuron. The computed output can be provided as a response to the reading of the output data for the neuron, without the data storage device (<b>101</b>) having to store the output data in the storage media components (e.g., <b>161</b> to <b>163</b>). Thus, the processors (<b>133</b>) and/or the neural network accelerator (<b>159</b>) can control the computations of the neuron via writing inputs to neurons and/or reading outputs from neurons.</p><p id="p-0138" num="0137">In general, incoming external input data to the artificial neural network (ANN) (<b>125</b>) can be raw sensor data (<b>121</b>) generated directly by the sensors (<b>103</b>) without processing by the processors (<b>133</b>) and/or the neural network accelerator (<b>159</b>). Alternatively, indirect sensor data (<b>121</b>) that has processed by the processors (<b>133</b>) for the artificial neural network (ANN) (<b>125</b>) from the signals from the sensors (<b>103</b>) can be provided as the external input data. The incoming external input data can be accepted in the host interface (<b>157</b>) and written in a cyclic way into the neuron input namespace (<b>185</b>), and automatically buffered in the buffer (<b>152</b>) for neural network accelerator (<b>159</b>) to generate neuron outputs using the model stored in the ANN model namespace (<b>183</b>). The outputs generated by the neural network accelerator (<b>159</b>) can be further buffered as internal inputs for further application of the model in the ANN model namespace (<b>183</b>). When the external outputs become available, the data storage device (<b>101</b>) can report the completion of the write requests with an indication of the availability of the external outputs. Optionally, the controller <b>151</b> and/or the neural network accelerator (<b>159</b>) can generate internal read commands to propagate signals in the artificial neural network (ANN) (<b>125</b>) in generating the external outputs. Alternatively, the host processors (<b>133</b>) can control the propagation of signals in the artificial neural network (ANN) (<b>125</b>) by selectively reading outputs of neurons; and the data storage device (<b>101</b>) can actively buffer data that may be needed in the buffer (<b>152</b>) to accelerate the ANN computation.</p><p id="p-0139" num="0138"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates the configuration of a namespace (<b>183</b>) for an artificial neural network (ANN) model according to one embodiment. For example, the configuration of <figref idref="DRAWINGS">FIG. <b>11</b></figref> can be implemented in the data storage device (<b>101</b>) illustrated in <figref idref="DRAWINGS">FIGS. <b>7</b> and/or <b>10</b></figref>. For example, the settings (<b>193</b>) of <figref idref="DRAWINGS">FIG. <b>11</b></figref> can be part of the namespace optimization settings (<b>192</b>) of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0140" num="0139">The configuration of <figref idref="DRAWINGS">FIG. <b>11</b></figref> maps an ANN model namespace (<b>183</b>) to at least one storage media component A (<b>161</b>). Preferably, the at least one storage media component A (<b>161</b>) can be used by the controller (<b>151</b>) in parallel with storage media components (e.g., <b>163</b>) that hosts the other namespaces (e.g., <b>185</b> and <b>187</b>) of ANN data. For example, the storage media component A (<b>161</b>) can be in an integrated circuit package that is separate from the integrated circuit packages for the other namespaces (e.g., <b>185</b> and <b>187</b>). Alternatively, the storage media components (<b>161</b> to <b>163</b>) are formed on separate integrated circuit dies embedded in a same integrated circuit package. Alternatively, the storage media components (<b>161</b> to <b>163</b>) can be formed on separate regions of an integrated circuit die, where the separate regions can be operated substantially in parallel (e.g., for read, for erase, and/or for write).</p><p id="p-0141" num="0140">In <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the settings (<b>193</b>) are optimized to the usage pattern of mostly read and infrequent update.</p><p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates the configuration of a namespace (<b>185</b>) for the inputs to artificial neurons according to one embodiment. For example, the configuration of <figref idref="DRAWINGS">FIG. <b>12</b></figref> can be implemented in the data storage device (<b>101</b>) illustrated in <figref idref="DRAWINGS">FIGS. <b>7</b> and/or <b>10</b></figref>. For example, the settings (<b>195</b>) of <figref idref="DRAWINGS">FIG. <b>12</b></figref> can be part of the namespace optimization settings (<b>192</b>) of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0143" num="0142">The configuration of <figref idref="DRAWINGS">FIG. <b>12</b></figref> maps a neuron input namespace (<b>185</b>) to at least one storage media component B (<b>163</b>). Preferably, the at least one storage media component B (<b>163</b>) can be used by the controller (<b>151</b>) in parallel with storage media components (e.g., <b>161</b>) that hosts the other namespaces (e.g., <b>183</b> and <b>187</b>) of ANN data. For example, the storage media component B (<b>163</b>) can be in an integrated circuit package that is separate from the integrated circuit packages for the other namespaces (e.g., <b>183</b> and <b>187</b>). Alternatively, the storage media components (<b>161</b> to <b>163</b>) are formed on separate integrated circuit dies embedded in a same integrated circuit package. Alternatively, the storage media components (<b>161</b> to <b>163</b>) can be formed on separate regions of an integrated circuit die, where the separate regions can be operated substantially in parallel (e.g., for read, for erase, and/or for write).</p><p id="p-0144" num="0143">In <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the settings (<b>193</b>) are optimized to the usage pattern of enhanced endurance in cyclic sequential overwrite in recording a continuous stream of input data that is sampled at a fixed time interval.</p><p id="p-0145" num="0144"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates the configuration of a namespace (<b>187</b>) for the outputs from artificial neurons according to one embodiment. For example, the configuration of <figref idref="DRAWINGS">FIG. <b>13</b></figref> can be implemented in the data storage device (<b>101</b>) illustrated in <figref idref="DRAWINGS">FIGS. <b>7</b> and/or <b>10</b></figref>. For example, the settings (<b>197</b>) of <figref idref="DRAWINGS">FIG. <b>13</b></figref> can be part of the namespace optimization settings (<b>192</b>) of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0146" num="0145">The configuration of <figref idref="DRAWINGS">FIG. <b>13</b></figref> maps a neuron output namespace (<b>187</b>) to at least one storage media component C (<b>162</b>). Preferably, the at least one storage media component C (<b>162</b>) can be used by the controller (<b>151</b>) in parallel with storage media components (e.g., <b>161</b> and <b>163</b>) that hosts the other namespaces (e.g., <b>183</b> and <b>185</b>) of ANN data. For example, the storage media component C (<b>162</b>) can be in an integrated circuit package that is separate from the integrated circuit packages for the other namespaces (e.g., <b>183</b> and <b>185</b>). Alternatively, the storage media components (<b>161</b> to <b>163</b>) are formed on separate integrated circuit dies embedded in a same integrated circuit package. Alternatively, the storage media components (<b>161</b> to <b>163</b>) can be formed on separate regions of an integrated circuit die, where the separate regions can be operated substantially in parallel (e.g., for read, for erase, and/or for write).</p><p id="p-0147" num="0146">In <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the settings (<b>197</b>) are optimized to the usage pattern of buffered data for periodic overwrite with random access. For example, memory units are configured via the optimization settings (<b>193</b> to <b>197</b>) to update/overwrite in the neuron output namespace (<b>187</b>) at a frequency higher than in the ANN model namespace (<b>183</b>), but lower than in the neuron input namespace (<b>185</b>).</p><p id="p-0148" num="0147"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a method of predictive maintenance supported by a model partition according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>14</b></figref> can be implemented in a vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> using a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref> and/or a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For example, the method of <figref idref="DRAWINGS">FIG. <b>14</b></figref> can be used in combination with the method of <figref idref="DRAWINGS">FIGS. <b>6</b> and/or <b>9</b></figref>.</p><p id="p-0149" num="0148">At block <b>241</b>, non-volatile memory of a data storage device (<b>101</b>) is configured into a plurality of partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ). For example, the non-volatile memory can have the same type of memory units for storing data (e.g., NAND flash memory units); and the same type of memory units in the different partitions (e.g., <b>183</b> to <b>187</b>) can be configured differently to optimize their performances according to the usage patterns of the data stored in the different partitions (e.g., <b>183</b> to <b>187</b>).</p><p id="p-0150" num="0149">At block <b>243</b>, the data storage device (<b>101</b>) stores, for the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) respectively, different sets of memory operation settings (e.g., <b>193</b>, <b>195</b>, <b>197</b>) for different types of data related to an artificial neural network (<b>125</b>), where the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) include a model partition (e.g., <b>183</b>) configured to store model data of the artificial neural network (<b>125</b>).</p><p id="p-0151" num="0150">At block <b>245</b>, the data storage device (<b>101</b>) receives a sensor data stream (e.g., <b>121</b>) from at least one sensor (<b>103</b>) configured on a vehicle (<b>111</b>).</p><p id="p-0152" num="0151">At block <b>247</b>, a controller (<b>151</b>) of the data storage device (<b>101</b>) operates memory units in the partitions (<b>183</b>, <b>185</b>, <b>187</b>, . . . ) according to the sets of memory operation settings (e.g., <b>193</b>, <b>195</b>, <b>197</b>) in response to the sensor data stream (e.g., <b>121</b>).</p><p id="p-0153" num="0152">At block <b>249</b>, the computer system (<b>131</b>) having the data storage device (<b>101</b>) predicts, using the artificial neural network (<b>125</b>), a maintenance service of the vehicle (<b>111</b>) based on the sensor data stream (e.g., <b>121</b>).</p><p id="p-0154" num="0153">For example, the memory operation settings configure the model partition (e.g., <b>183</b>) to store three or more bits per memory cell. The memory operating settings can include address map (<b>191</b>) to map between neurons in the artificial neural network (ANN) (<b>125</b>) and inputs to the neurons. When a first address of an input to a neuron in the artificial neural network (<b>125</b>) is received, the first address in an input partition (e.g., <b>185</b>) separate from the model partition (e.g., <b>183</b>) can be converted into at least one second address of model data associated with the neuron, such that the attributes of the neuron and the identities of neurons connected to the neuron can be retrieved from the model partition (e.g., <b>183</b>) without an explicit command from the processors (<b>133</b>). The controller (<b>151</b>) can automatically retrieve, from the model partition (e.g., <b>183</b>), the model data associated with the neuron using the at least one second address, in response to the receiving of the first address. A neural network accelerator (<b>159</b>) can generate an output of the neuron from the input to the neuron and the model data associated with the neuron. In general, input to the neuron can include outputs from multiple neurons that are connected to the neuron in the artificial neural network (ANN) (<b>125</b>). The controller (<b>151</b>) can save the output of the neuron in the buffer (<b>152</b>) in the data storage device (<b>101</b>) to facilitate accelerated access to the output by the host processor(s) (<b>133</b>) and/or the neural network accelerator (<b>159</b>).</p><p id="p-0155" num="0154">Typically, the model data does not change during computation to predict the maintenance service. For example, the model data can include neuron connectivity data of the artificial neural network and static attributes of neurons in the artificial neural network. The memory operation settings (e.g., <b>192</b>) can configure the model partition (e.g., <b>183</b>) to store more than one bit per memory cell in the non-volatile memory based on the usage pattern of mostly read, infrequent update of the model data.</p><p id="p-0156" num="0155">For example, the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) in the data storage devices can be implemented as namespaces in which logical addresses are defined; and an address map (<b>191</b>) in the data storage device is configured to map the namespaces (<b>183</b>, <b>185</b>, <b>187</b>, . . . ) to separate storage media components (e.g., <b>161</b>, <b>163</b>, <b>162</b>, . . . ).</p><p id="p-0157" num="0156">The model data in the model namespace (<b>183</b>) is updatable during training via machine learning (<b>171</b> or <b>175</b>), or during over-the-air update of the artificial neural network (ANN) (<b>125</b>) from the server (<b>119</b>).</p><p id="p-0158" num="0157">In some implementations, the controller (<b>151</b>) is configured, via the address map (<b>191</b>) to retrieve, from the model partition, model data associated with a neuron in the artificial neural network, in response to an input to, or an output from, the neuron being addressed in a partition separate from the model partition (<b>183</b>). Further, the controller (<b>151</b>) can retrieve, from the model partition (<b>183</b>), the model data associated with the neuron in parallel with storing input to the neuron in the partition (e.g., <b>185</b>) that is separate from the model partition (<b>183</b>).</p><p id="p-0159" num="0158"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows a method of predictive maintenance supported by an input partition according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>15</b></figref> can be implemented in a vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> using a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref> and/or a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For example, the method of <figref idref="DRAWINGS">FIG. <b>15</b></figref> can be used in combination with the method of <figref idref="DRAWINGS">FIGS. <b>6</b>, <b>9</b></figref>, and/or <b>14</b>.</p><p id="p-0160" num="0159">At block <b>261</b>, non-volatile memory of a data storage device (<b>101</b>) is configured into a plurality of partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ). For example, the non-volatile memory can have the same type of memory units (e.g., NAND flash memory units) implemented in multiple storage media components (e.g., <b>161</b> to <b>163</b>).</p><p id="p-0161" num="0160">At block <b>263</b>, the data storage device (<b>101</b>) stores, for the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) respectively, different sets of memory operation settings (e.g., <b>193</b>, <b>195</b>, <b>197</b>) for different types of data related to an artificial neural network (<b>125</b>), where the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) include an input partition (e.g., <b>185</b>) configured to cyclically store input data for the artificial neural network (<b>125</b>).</p><p id="p-0162" num="0161">For example, the input partition (<b>185</b>) can be configured to store external inputs for the artificial neural network (<b>125</b>) but not internal inputs. The input data stored in the input partition (<b>185</b>) is independent of outputs from neurons in the artificial neural network (<b>125</b>).</p><p id="p-0163" num="0162">For example, the input data stored in the input partition (<b>185</b>) can include a portion of the sensor data stream (e.g., <b>121</b>). In some embodiments, the input data stored in the input partition (<b>185</b>) is computed from the sensor data stream (e.g., <b>121</b>) for a subset of neurons in the artificial neural network (<b>125</b>).</p><p id="p-0164" num="0163">For example, the memory operation settings (e.g., <b>195</b>) configure the input partition (<b>185</b>) to store one bit per NAND memory cell in the non-volatile memory for enhanced endurance for repeated data erasure and data programming.</p><p id="p-0165" num="0164">For example, the memory operation settings (e.g., <b>195</b>) configure the controller to write sequentially the input data into to the input partition (<b>185</b>), and to overwrite oldest input data in the input partition (<b>185</b>) with the most recent input data received in the data storage device (<b>101</b>).</p><p id="p-0166" num="0165">At block <b>265</b>, the data storage device (<b>101</b>) receives a sensor data stream (e.g., <b>121</b>) from at least one sensor (<b>103</b>) configured on a vehicle (<b>111</b>).</p><p id="p-0167" num="0166">At block <b>267</b>, a controller (<b>151</b>) of the data storage device (<b>101</b>) operates memory units in the partitions (<b>183</b>, <b>185</b>, <b>187</b>, . . . ) according to the sets of memory operation settings (e.g., <b>193</b>, <b>195</b>, <b>197</b>) in response to the sensor data stream (e.g., <b>121</b>).</p><p id="p-0168" num="0167">At block <b>269</b>, the computer system (<b>131</b>) having the data storage device (<b>101</b>) predicts, using the artificial neural network (<b>125</b>), a maintenance service of the vehicle (<b>111</b>) based on the sensor data stream (e.g., <b>121</b>).</p><p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows a method of predictive maintenance supported by an input partition according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>16</b></figref> can be implemented in a vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> using a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref> and/or a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For example, the method of <figref idref="DRAWINGS">FIG. <b>16</b></figref> can be used in combination with the method of <figref idref="DRAWINGS">FIGS. <b>6</b>, <b>9</b>, <b>14</b></figref>, and/or <b>15</b>.</p><p id="p-0170" num="0169">At block <b>281</b>, non-volatile memory of a data storage device (<b>101</b>) is configured into a plurality of partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ). The non-volatile memory can have the same type of memory units (e.g., NAND flash memory units) for storing data.</p><p id="p-0171" num="0170">At block <b>283</b>, the data storage device (<b>101</b>) stores, for the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) respectively, different sets of memory operation settings (e.g., <b>193</b>, <b>195</b>, <b>197</b>) for different types of data related to an artificial neural network (<b>125</b>), where the partitions (e.g., <b>183</b>, <b>185</b>, <b>187</b>, . . . ) include an output partition (e.g., <b>187</b>) configured to store output data for the artificial neural network (<b>125</b>).</p><p id="p-0172" num="0171">For example, the output data stored in the output partition (e.g., <b>187</b>) can include state data of neurons in the artificial neural network (<b>125</b>). For example, the state data of the neurons in the artificial neural network can identify the activation levels of the neurons for spiking in a spiking neural network. The activation levels can be controlled via a differential equation. Thus, the activation levels can change in response to inputs to the artificial neural network (<b>125</b>) and/or in response to the passage of time.</p><p id="p-0173" num="0172">For example, the output data can include the predictions or classifications generated by the artificial neural network (<b>125</b>) responsive to the sensor data stream.</p><p id="p-0174" num="0173">For example, the memory operation settings configure the output partition to store no more than two bits per memory cell in the non-volatile memory.</p><p id="p-0175" num="0174">At block <b>285</b>, the data storage device (<b>101</b>) receives a sensor data stream (e.g., <b>121</b>) from at least one sensor (<b>103</b>) configured on a vehicle (<b>111</b>).</p><p id="p-0176" num="0175">At block <b>287</b>, a controller (<b>151</b>) of the data storage device (<b>101</b>) operates memory units in the partitions (<b>183</b>, <b>185</b>, <b>187</b>, . . . ) according to the sets of memory operation settings (e.g., <b>193</b>, <b>195</b>, <b>197</b>) in response to the sensor data stream (e.g., <b>121</b>).</p><p id="p-0177" num="0176">At block <b>289</b>, the computer system (<b>131</b>) having the data storage device (<b>101</b>) predicts, using the artificial neural network (<b>125</b>), a maintenance service of the vehicle (<b>111</b>) based on the sensor data stream (e.g., <b>121</b>).</p><p id="p-0178" num="0177">For example, the data storage device (<b>101</b>) can include a buffer (<b>152</b>). The buffer (<b>152</b>) can be implemented via volatile memory (e.g., SRAM or DRAM) for access performance faster than the non-volatile memory (e.g., NAND flash memory) of the data storage device (<b>101</b>). The memory operation settings configure the controller (<b>151</b>) to store the output data in the buffer (<b>152</b>) for access by a processor (e.g., <b>133</b>) via the host interface (<b>157</b>) during or after storing the output data into the output partition (<b>187</b>).</p><p id="p-0179" num="0178">For example, the data storage device (<b>101</b>) can include a neural network accelerator (<b>159</b>) coupled to the controller (<b>151</b>). The neural network accelerator is configured to apply inputs provided to neurons in the artificial neural network (<b>125</b>) to model data of the artificial neural network (<b>125</b>) to generate the output data by one or more output neurons in the artificial neural network (<b>125</b>). In response to the neural network accelerator (<b>159</b>) completing the computation of the output data, the controller is configured to provide the processor (e.g., <b>133</b>) with an indication of the availability of the output data generated by the artificial neural network (<b>125</b>), such that the processor (e.g., <b>133</b>) may request the data storage device (<b>101</b>) to transmit the output data.</p><p id="p-0180" num="0179">Optionally, the controller (<b>151</b>) is configured to provide the output data to the processor in parallel with storing the output data into the output partition. For example, the controller (<b>151</b>) can be configured to automatically discard the output data computed for the previously segment of sensor data stream if the processor (e.g., <b>133</b>) does not request for the transmission of the output data to the processor (e.g., <b>133</b>) within a predetermined period of time, or before the next version of the output data is available. Optionally, after reporting the availability of the output data to the processor (e.g., <b>133</b>), the controller (<b>151</b>) can be configured to selectively discard the output data computed for the previously segment of sensor data stream based on a response of the processor (e.g., <b>133</b>) for the output data to the processor (e.g., <b>133</b>). For example, the processor (e.g., <b>133</b>) may request the transmission of the output data to the processor (e.g., <b>133</b>) without saving the output data into the output partition (e.g., <b>187</b>) in some situations; and in other situations, the processor (e.g., <b>133</b>) may request the transmission of the output data to the processor (e.g., <b>133</b>) and the storing of the output data into the output partition (e.g., <b>187</b>).</p><p id="p-0181" num="0180">Optionally, output data from the artificial neural network (<b>125</b>) can also be stored into the output partition in a cyclic way (e.g., for the segments of output data for time periods selected by the processor (e.g., <b>133</b>)).</p><p id="p-0182" num="0181">For example, external inputs to the artificial neural network (<b>125</b>) can be recorded in the input namespace (<b>185</b>) continuously for the last time period of T<b>1</b>. When the sensor data is sampled at a predetermined time interval T<b>2</b>, the input namespace (<b>185</b>) can hold the latest T<b>1</b>/T<b>2</b> sets of input data. In contrast, external outputs from the artificial neural network (<b>125</b>) can be selectively recorded into the output namespace (<b>187</b>) (e.g., once for every a predetermined period of time T<b>3</b>, where T<b>3</b> is multiple of T<b>2</b>). The output data can be recorded into the output namespace (<b>187</b>) at a lower frequency; and the output namespace (<b>187</b>) can be allocated to store a predetermined number of sets of output data (e.g., via sequential writes and writes in a cyclic way to keep the last sets of output data).</p><p id="p-0183" num="0182">At least some embodiments disclosed herein include a communication protocol/interface that allows a data storage device to perform neural network acceleration on the fly with reduced data traffic to the host processor (e.g., a central processing unit (CPU)).</p><p id="p-0184" num="0183">For example, the host processor (e.g., <b>133</b>) of a vehicle (<b>111</b>) can provide write commands to the data storage device (<b>101</b>) to store the model of an artificial neural network in a model partition (e.g., <b>183</b>). Since the neural network accelerator (<b>159</b>) is configured to apply the model, the data communications sending back the data of the model of artificial neural network (ANN) (<b>125</b>) to the processor can be reduced or eliminated.</p><p id="p-0185" num="0184">To use the ANN model in classifications and/or predictions, the host processor (e.g., <b>133</b>) of a vehicle (<b>111</b>) can stream input data for the artificial neural network (ANN) (<b>125</b>) into the neuron input partition (e.g., <b>185</b>). The neural network accelerator (<b>159</b>) of the storage device (<b>101</b>) can automatically apply the input data to the model stored in ANN model partition (e.g., <b>183</b>) in accordance with the address map (<b>191</b>). The data storage device (<b>101</b>) makes the computed outputs available for propagation in the artificial neural network (ANN) (<b>125</b>). Preferably, the computed outputs are made available to the neural network accelerator (<b>159</b>) through the buffer (<b>152</b>) without the need to store the intermediate outputs into storage media components (e.g., <b>161</b> to <b>163</b>). Thus, the data communications between the host processor (e.g., <b>133</b>) and the data storage device (<b>101</b>) for the transporting of outputs of neurons can be reduced. When the outputs have propagated to the output neurons in the artificial neural network (ANN) (<b>125</b>), the data storage device (<b>101</b>) can provide a response to the write request associating with the writing of a set of input data into the neuron input partition (e.g., <b>185</b>). The response indicates that the external output from neurons in the artificial neural network (ANN) (<b>125</b>) is available. In response, the host processor (e.g., <b>133</b>) of a vehicle (<b>111</b>) can optionally issue read commands to retrieve the external outputs for further processing.</p><p id="p-0186" num="0185"><figref idref="DRAWINGS">FIG. <b>17</b></figref> shows communications with a data storage device (<b>101</b>) to implement neural network computation according to one embodiment. For example, the communications as illustrated in <figref idref="DRAWINGS">FIG. <b>17</b></figref> can be implemented in the vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref>, with a data storage device (<b>101</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref>.</p><p id="p-0187" num="0186">In <figref idref="DRAWINGS">FIG. <b>17</b></figref>, the processor(s) (<b>133</b>) can be configured with a simplified set of instructions (<b>301</b>) to perform neural network computation, since some of the computations involving the artificial neural network (ANN) (<b>125</b>) is performed by the neural network accelerator (<b>159</b>) within the data storage device (<b>101</b>). Thus, it is not necessary to transport the model data back to the processor(s) (<b>133</b>) during the use of the artificial neural network (ANN) (<b>125</b>) for predictions and/or classifications.</p><p id="p-0188" num="0187">The sensor(s) (<b>103</b>) can generate a continuous stream of sensor data (<b>121</b>) based on a rate for sampling data. The sensor data (<b>121</b>) can be sampled at a fixed, predetermined time interval (e.g., during the operation of the vehicle (<b>111</b>)). The processor(s) (<b>133</b>) can execute the instructions (<b>301</b>) to convert the sensor data (<b>121</b>) into an input stream (<b>303</b>) for input neurons in the artificial neural network (ANN) (<b>125</b>). Input neurons in the artificial neural network (ANN) (<b>125</b>) are configured to accept external inputs to the artificial neural network (ANN) (<b>125</b>); and output neurons are configured to provide external outputs from the artificial neural network (ANN) (<b>125</b>).</p><p id="p-0189" num="0188">In general, a complete set of input for the artificial neural network (ANN) (<b>125</b>) at a time instance includes inputs for the entire set of input neurons of the artificial neural network (ANN) (<b>125</b>). The input stream (<b>303</b>) includes a sequence of input sets for a sequence of time instances that are spaced apart from each other according to the fixed, predetermined time interval.</p><p id="p-0190" num="0189">The data storage device (<b>101</b>) stores the input stream (<b>303</b>) into the neuron input namespace (<b>185</b>) in a cyclic way where the oldest input set corresponding to the oldest time instance of data sampling for data sets currently stored in the neuron input namespace (<b>185</b>) is erased to store the newest set of inputs in the input stream (<b>303</b>).</p><p id="p-0191" num="0190">For each input data set, the neural network accelerator (<b>159</b>) applies the model of the artificial neural network (ANN) (<b>125</b>) stored in the ANN model namespace (<b>183</b>). The neural network accelerator (<b>159</b>) (or the processor(s) (<b>133</b>)) can control the propagation of signals within the neural network. When the output neurons of the artificial neural network (ANN) (<b>125</b>) generate their outputs responsive to the input data set, the data storage device (<b>101</b>) can provide to the processor (<b>133</b>) an indication that the neuron output are ready for retrieval. The indication can be configured in a response to the request from the processor(s) (<b>133</b>) to write the input data set into the neuron input namespace (<b>185</b>). The processor(s) (<b>133</b>) can optionally retrieve the output data (<b>305</b>) (e.g., in accordance with conditions and/or criteria programmed in the instructions).</p><p id="p-0192" num="0191">In some embodiments, a trigger parameter is configured in the data storage device (<b>101</b>). When an output parameter in the external output (<b>317</b>) meetings a requirement specified by the trigger parameter, the data storage device provides the response to the request from the processor(s) (<b>133</b>) to write the input data set into the neuron input namespace (<b>185</b>).</p><p id="p-0193" num="0192"><figref idref="DRAWINGS">FIG. <b>18</b></figref> shows communications within a data storage device to implement neural network computation according to one embodiment. For example, the communications of <figref idref="DRAWINGS">FIG. <b>18</b></figref> can be implemented in a data storage device (<b>101</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref>, in connection with the communications of <figref idref="DRAWINGS">FIG. <b>17</b></figref>.</p><p id="p-0194" num="0193">In <figref idref="DRAWINGS">FIG. <b>18</b></figref>, the model namespace (<b>183</b>) stores the model (<b>313</b>) of the entire artificial neural network (ANN) (<b>125</b>). In response to receiving a set of external input (<b>315</b>) for a time instance from the input stream (<b>303</b>) in the buffer (<b>152</b>), the data storage device (<b>101</b>) can write the external input (<b>315</b>) into the input namespace (<b>185</b>) in parallel with retrieving a neuron model (<b>312</b>) containing a portion of the ANN model (<b>313</b>) corresponding to the parameters of the input neurons and/or the identities of neurons connected to the input neurons. The buffer (<b>152</b>) allows the neural network accelerator (<b>159</b>) to combine the neuron model (<b>312</b>) and the external input (<b>315</b>) to generate the output (<b>327</b>) of the input neurons.</p><p id="p-0195" num="0194">In general, the neuron output (<b>327</b>) can include a portion that is the internal output (<b>316</b>) for further propagation within the artificial neural network (ANN) (<b>125</b>) and/or a portion that is the external output (<b>317</b>) for the processor(s) (<b>133</b>).</p><p id="p-0196" num="0195">The internal output (<b>316</b>) is stored in the buffer (<b>152</b>) as internal input (<b>316</b>) for further propagation in the artificial neural network (ANN) (<b>125</b>) in a way similar to the generation of neuron outputs (<b>327</b>) from the external input (<b>315</b>). For example, a portion of the internal input (<b>316</b>) can cause the controller (<b>151</b>) and/or the neural network accelerator (<b>159</b>) to retrieve corresponding neuron model (<b>312</b>) relevant to the internal input such that the internal input is applied as the neuron input (<b>325</b>) in the neural network accelerator (<b>159</b>) to the corresponding neuron model (<b>312</b>) to generate their neuron outputs (<b>327</b>).</p><p id="p-0197" num="0196">When the complete set of external output (<b>317</b>) is available in the buffer (<b>152</b>), the external output (<b>317</b>) can be stored in the output namespace (<b>187</b>).</p><p id="p-0198" num="0197">Optionally, the storage device (<b>101</b>) does not store each set of external output (<b>317</b>) corresponding to a set of stored external input (<b>315</b>) sampled at a time instance. For example, the storage device (<b>101</b>) can be configured to store one set of external output (<b>317</b>) for every a predetermined number of sets of external input (e.g., <b>315</b>). Alternatively, or in combination, the processor(s) (<b>133</b>) can determine whether or not to store the external output (<b>317</b>). For example, the storage device (<b>101</b>) can be configured to store the external output (<b>317</b>) in response to the processor(s) (<b>133</b>) retrieving the external output (<b>317</b>) for further processing. For example, the storage device (<b>101</b>) can be configured to store the external output (<b>317</b>) in response to a write command from the processor(s) (<b>133</b>) after the processing of the external output (<b>317</b>) in the processor(s) (<b>133</b>).</p><p id="p-0199" num="0198"><figref idref="DRAWINGS">FIG. <b>19</b></figref> shows a method of communicating with a data storage device to implement neural network computation according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>19</b></figref> can be implemented in a vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> using a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref> and/or a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For example, the method of <figref idref="DRAWINGS">FIG. <b>19</b></figref> can be used in combination with the method of <figref idref="DRAWINGS">FIGS. <b>6</b>, <b>9</b>, <b>14</b>, <b>15</b></figref>, and/or <b>16</b>.</p><p id="p-0200" num="0199">At block <b>341</b>, one or more processors (<b>133</b>) of a vehicle (<b>111</b>) stores model data (e.g., <b>313</b>) of an artificial neural network (e.g., <b>125</b>) into a data storage device (<b>101</b>).</p><p id="p-0201" num="0200">At block <b>343</b>, the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) receive, from at least one sensor (<b>103</b>) configured on vehicle (<b>111</b>), a set of sensor data.</p><p id="p-0202" num="0201">At block <b>345</b>, the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) generate a set of inputs to the artificial neural network (e.g., <b>125</b>) based on the sensor data.</p><p id="p-0203" num="0202">At block <b>347</b>, the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) provide the set of inputs to the data storage device (<b>101</b>). In response to the set of inputs, the data storage device (<b>101</b>) is configured to generate a set of outputs using the model data (<b>313</b>) of the artificial neural network (e.g., <b>125</b>).</p><p id="p-0204" num="0203">At block <b>349</b>, the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) retrieve the set of outputs from the data storage device (<b>101</b>).</p><p id="p-0205" num="0204">For example, the data storage device (<b>101</b>) generates the set of outputs using at least a portion of the model data (<b>183</b>) stored in the data storage device without transmitting the portion of the model data (<b>183</b>) to the one or more processors (<b>133</b>) between the receiving of the set of inputs and the completion of the computation of the set of outputs.</p><p id="p-0206" num="0205">For example, the portion of the model data (<b>183</b>) can include static attributes of neurons in the artificial neural network (e.g., <b>125</b>) and/or the neuron connectivity data of the artificial neural network (e.g., <b>125</b>).</p><p id="p-0207" num="0206">For example, to provide of the set of inputs to the data storage device (<b>101</b>), the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) can transmit one or more write commands to the data storage device (<b>101</b>). The one or more write commands are configured to instruct the data storage device (<b>101</b>) to store the set of input in the data storage device (<b>101</b>). After the completion of the computation of the set of outputs in the data storage device (<b>101</b>), the controller (<b>151</b>) of the data storage device (<b>101</b>) can transmit a response to the one or more write commands to the one or more processors (<b>133</b>). The response can include an indication that the set of outputs is available for retrieval by the one or more processors (<b>133</b>).</p><p id="p-0208" num="0207">In response to the indication, the one or more processors (<b>133</b>) can optionally retrieve the set of outputs from the data storage device (<b>101</b>) by transmitting a read command to the data storage device (<b>101</b>) for the set of outputs (e.g., after a determination to retrieve the set of outputs from the data storage device (<b>101</b>) for processing).</p><p id="p-0209" num="0208">Alternatively, or in combination, the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) can determine whether to store the set of outputs in non-volatile memory of the data storage device. In response to a determination to store the set of outputs in the non-volatile memory of the data storage device (<b>101</b>), one or more processors (<b>133</b>) of the vehicle (<b>111</b>) can transmit a write command to the data storage device (<b>101</b>).</p><p id="p-0210" num="0209">Since the set of outputs is initially generated in the data storage device (<b>101</b>) and then buffered in the buffer (<b>152</b>) (e.g., volatile memory), the data storage device (<b>101</b>) can execute a write command to store the set of outputs into an output namespace (<b>187</b>) without transmitting the set of outputs to the one or more processors (<b>133</b>) and/or receiving the set of outputs from the one or more processors (<b>133</b>) in response to the write commands.</p><p id="p-0211" num="0210">For example, after receiving, from at least one sensor (<b>103</b>) configured on the vehicle (<b>111</b>), a further set of sensor data (<b>121</b>), the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) generate a further set of inputs to the artificial neural network (<b>125</b>) based on the further set of sensor data.</p><p id="p-0212" num="0211">The one or more processors (<b>133</b>) transmits a further command to write the further set of inputs into the data storage device (<b>101</b>); and the data storage device (<b>101</b>) generates a further set of outputs using the model data (<b>183</b>) of the artificial neural network (<b>125</b>) and the further set of inputs. After receiving a response to the further command to write the further set of inputs, the one or more processors (<b>133</b>) can determine to skip the processing of the further set of outputs and transmit, to the data storage device (<b>101</b>), a subsequent write command to store the further set of outputs. In response, the data storage device (<b>101</b>) can write the further set of outputs that is buffered within the data storage device (<b>101</b>) into the output namespace (<b>187</b>), without the transmitting of the further set of outputs from the one or more processors (<b>133</b>) of the vehicle (<b>111</b>) to the data storage device (<b>101</b>) and/or without the transmitting of the further set of outputs from the data storage device (<b>101</b>) to the one or more processors (<b>133</b>) of the vehicle (<b>111</b>).</p><p id="p-0213" num="0212">At least some of the neural network techniques discussed above can be used in wear leveling with reduced write-amplification in a data storage device.</p><p id="p-0214" num="0213">Some types of memory cells (e.g., NAND flash memory) require an erase operation to set the memory cells in an initialized state before a write operation is performed to store data into memory cells. After a number of cycles of erase/write operations, the memory cells can degrade and become unreliable for storing data. Thus, the useful life of such a memory cell can be limited by a budget of erase/write cycles of the erase/write operations experienced by the memory cell.</p><p id="p-0215" num="0214">Further, such memory cells configured on an integrated circuit can have coarser granularity of erase operation than write operations. Specifically, the smallest number of memory cells that are erased in one erase operation can be larger than the smallest number of memory cells that are programmed to store data in one write operation. For example, a block of NAND memory cells is configured to be eased together in one operation; the block can have multiple pages of NAND memory cells; and the pages can be programmed separately via different write operations to store data.</p><p id="p-0216" num="0215">When a block to be erased has one or more pages of valid data, the data from the pages can be copied into another block before the block is erased. The copying increases the count of write operations performed for the data and thus leads to write amplification.</p><p id="p-0217" num="0216">In general, different blocks of memory cells may experience different numbers of erase/write cycles.</p><p id="p-0218" num="0217">For example, when a block is used to store data that has a low frequency of updates, the block can have a lower number of experienced erase/write cycles than other blocks. As a result, the block can have a lower level of wearing than other blocks.</p><p id="p-0219" num="0218">On the other hand, when a block is used to store data that has a high frequency of updates, the block can have a higher number of experienced erase/write cycles than other blocks. As a result, the block can have a higher level of wearing than other blocks.</p><p id="p-0220" num="0219">A wear leveling operation can be performed to copy data from a low wearing block to a high wearing block and copy data from a high wearing block to a low wearing block. However, the copying can increase the count of write operations performed for the data and thus lead to write amplification.</p><p id="p-0221" num="0220">The useful life of other types of memory cells (e.g., DRAM, SRAM, Cross point memory) may not be limited by the count of erase and/or write operations and/or may have a very high budget of erase/write cycles.</p><p id="p-0222" num="0221">Data access activities in a data storage device can have patterns associated with the usages of the data storage device in a computing system. For example, a data storage device configured in an autonomous vehicle can have a pattern of data access activities associated with a routine, or similar routines, of activities of the vehicle.</p><p id="p-0223" num="0222">An artificial neural network (ANN) (e.g., spiking neural network, convolutional neural network, recurrent neural network) can be configured to predict the data changes and/or movements to optimize data placement and thus reduce write amplification. The predictions can be based on data access patterns indicated by various factors, such as the operating status of the vehicle, the processing status/milestone/workload of the advanced driver assistance system (ADAS) of the vehicle, the activities of applications that have data access requests, types of the access requests (e.g., read/write), frequency of the access requests, address locations of the access requests, chunk sizes of data involved in the access requests, etc. The predictions of the artificial neural network (ANN) groups data that are likely to be erased and/or rewritten together to reduce the likelihood of a valid data item being copied to facilitate the operation of erasing other data.</p><p id="p-0224" num="0223">Further, the predictions of the artificial neural network (ANN) can be used to optimize wear leveling operations to reduce the impact of wear leveling on write amplification.</p><p id="p-0225" num="0224">For example, the artificial neural network (ANN) (e.g., spiking neural network, convolutional neural network, recurrent neural network) can be configured to identify optimized tradeoff between wear-leveling and write-amplification. For example, the artificial neural network (ANN) can be configured to receive input of parameters indicative of data access patterns, and wear-leveling operations. Examples of parameters indicative of data access patterns can include the operating status of the vehicle, the processing status/milestone/workload of the advanced driver assistance system (ADAS) of the vehicle, the activities of applications that have data access requests, types of the access requests (e.g., read/write), frequency of the access requests, address locations of the access requests, chunk sizes of data involved in the access requests, etc. The ANN can predict the optimized wear-leveling operations that achieve a degree of wear-leveling with minimized write-amplification.</p><p id="p-0226" num="0225">Optionally, data can be selectively buffered or placed in memory that practically has no issues or less issues with write-amplification, before the data is transferred to memory cells that are vulnerable to write-amplification. For example, data that is modified frequently can be placed in a storage media component having DRAM, SRAM, and/or cross point memory, etc. according to a prediction based on a data access pattern. When the data is modified infrequently in the data access pattern, the data can be relocated to a storage media component having NAND memory cells.</p><p id="p-0227" num="0226">The artificial neural network (ANN) can be self-trained within the data storage device for the determination of optimized data placements for wear leveling and/or write-amplification reduction (e.g., based on past media allocation activities). For example, an unsupervised machine learning technique can be used to train the artificial neural network (ANN) to self-organize input data to gain prediction/classification capability.</p><p id="p-0228" num="0227">Alternatively, or in combination, a supervised machine learning technique can be used to train the artificial neural network (ANN) to refine or establish a prediction model of optimized caching scheme and its parameters.</p><p id="p-0229" num="0228">The artificial neural network (ANN) can receive input of predictive parameters of data access patterns and measurements of subsequent write-amplification performance resulting from data placements responsive to write commands and/or wear leveling operations. The artificial neural network (ANN) can self-organize to find optimization for data placement under various circumstances using unsupervised learning techniques, or be trained to generate optimized data placement predictions using supervised learning techniques.</p><p id="p-0230" num="0229">For example, during a training period, the write activities in a logical address space are tracked to generate training data to train the artificial neural network (ANN) to recognize groups of logical memory addresses where data in a group of memory addresses is modified together or in close proximity in time (e.g., modified within a predetermined time interval) in a data access pattern. Subsequently, a group of logical memory addresses can be mapped to physical memory address of memory cells in one or more erasure blocks. Each erasure block has a minimal set of memory cells that are required to be erased together. The data storage device can vary the placement of different local memory address groups in an erasure block and track/measure the write-amplification performance for the placement. A training dataset having different data placements and write-amplification performance levels of the respective data placements can be used to train the artificial neural network (ANN) to make predictions for searching and/or determination of a data placement that optimizes the write-amplification performance level.</p><p id="p-0231" num="0230">For example, data access patterns of a data storage device configured in a vehicle can be associated with operating parameters, such as the current operating parameters of the vehicle, the current operating parameters of applications (e.g., components or electronic control units of the vehicle) that are actively using the data storage device, and/or the current operating parameters of the data storage device. The operating parameters can be provided as input to the artificial neural network (ANN) to indicate the data usage patterns.</p><p id="p-0232" num="0231">When a data placement scheme is implemented in the data storage device, the write-amplification performance level can be measured. For example, write-amplification performance level indicators can include a ratio between the number of writes performed for the data in a set of memory addresses and the average number of write commands received for the set of memory addresses.</p><p id="p-0233" num="0232">An unsupervised machine learning technique can be used to train the artificial neural network (ANN), using the data collected during the training period, to associate (e.g., via clustering, classification, etc.) data access patterns, the data placement schemes, and the write-amplification performance levels, which allows the determination of a preferred data placement scheme for the current data access pattern that can optimize the caching performance level.</p><p id="p-0234" num="0233">Optionally, or in combination, optimized data placement schemes determined for various data access patterns can be used to train the artificial neural network (ANN), using a supervised machine learning technique, to minimize a difference between the data placement schemes predicted by the artificial neural network (ANN) and the optimized caching schemes determined for the various data access patterns.</p><p id="p-0235" num="0234">Thus, when the data storage device is operating under a data access pattern represented by the current operating parameters, the artificial neural network (ANN) can be used to determine a data placement scheme to optimize the write-amplification performance in the data storage device.</p><p id="p-0236" num="0235">Wear leveling operations can be adjusted via one or more parameters to optimize write-amplification performance. For example, the data storage device can be configured to tolerate a level of uneven wearing and postpone wear leveling operations until the differences in wearing levels are above a threshold.</p><p id="p-0237" num="0236">For example, the difference between the highest number of experienced erase/program cycles in the memory cells and the lowest number of experienced erase/program cycles in the memory cells is below a threshold, the data storage device can avoid wear leveling operations to reduce write-amplification. When the difference is above the threshold, leveling operations are performed to reduce the difference.</p><p id="p-0238" num="0237">A target performance indicator can be constructed based on an indicator of unevenness in wearing and an indicator of write-amplification performance. For example, the indicator of the unevenness in wearing can be the difference between the highest number of experienced erase/program cycles in the memory cells and the lowest number of experienced erase/program cycles in the memory cells. The target performance indicator can be formulated to increase as unevenness in wearing increases and increase as write-amplification increases. Thus, the artificial neural network (ANN) can be configured to select a threshold for wear leveling based on optimizing the target performance indicator.</p><p id="p-0239" num="0238">Further, the artificial neural network (ANN) can be configured to predict the likelihood of a data object/group being modified soon (e.g., within a subsequent time period of a predetermined length). When the data object/group is predicted to be modified soon, the data storage device is configured to avoid wear leveling the memory region occupied by the data object/group. For example, when the block of memory currently storing the data object/group has low wearing, wear leveling for the memory block can be performed in combination with a subsequent write command that modifies the data object/group, such that a cycle of erase/program for the data object/group due to wear leveling can be eliminated.</p><p id="p-0240" num="0239">Optionally, when the artificial neural network (ANN) classifies the current data access pattern as a new pattern, the data storage device can try varying data placement schemes to generate training data for the new pattern to determine an optimized data placement scheme for the new pattern.</p><p id="p-0241" num="0240"><figref idref="DRAWINGS">FIG. <b>20</b></figref> shows a data storage device configured to perform wear leveling with reduced write-amplification according to one embodiment. For example, the data storage device of <figref idref="DRAWINGS">FIG. <b>20</b></figref> can be implemented using the techniques of a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b> or <b>10</b></figref> in a vehicle (<b>111</b>) illustrated in <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref>.</p><p id="p-0242" num="0241">In <figref idref="DRAWINGS">FIG. <b>20</b></figref>, the data storage device (<b>101</b>) includes an address map (<b>191</b>) that specifies the mapping between logical memory addresses used in the input stream (<b>303</b>) to identify storage locations and the physical memory addresses of memory cells in the storage media components (<b>161</b> to <b>163</b>) where the data of the logical memory addresses is stored physically.</p><p id="p-0243" num="0242">Logical memory addresses can be defined in the namespaces (e.g., <b>183</b>, <b>185</b>, . . . , <b>187</b>) that are defined in the storage capacity provided by the storage media components (<b>161</b> to <b>163</b>) of the data storage device (<b>101</b>). At least some of the storage media components (<b>161</b> to <b>163</b>) have memory cells that have concerns for write-amplification, such as flash memory cells.</p><p id="p-0244" num="0243">Optionally, the some memory cells in at least some of the storage media components (<b>161</b> to <b>163</b>) do not have concerns for write-amplification, such as memory cells made of cross point memory, DRAM, etc. When logical addresses are mapped to such memory cells, the write-amplification performance levels can be evaluated to indicate no write-amplification.</p><p id="p-0245" num="0244">In general, the storage media components (<b>161</b> to <b>163</b>) can have different types of memory cells with different levels of erase/program budgets. The write-amplification performance levels evaluated for the different types of memory cells can be normalized/scaled respect to their erase/program budget levels to facilitate write-amplification performance comparison for placement optimization.</p><p id="p-0246" num="0245">Write activities (<b>351</b>) at logical addresses can be used to train the neural network accelerator (<b>159</b>) to recognize logical memory address groups. Each logical memory address group corresponds to data of an object that is to be modified together (e.g., within a predetermined time interval). The controller (<b>151</b>) can configure the address map (<b>191</b>) to map the logical addresses according to groups to the memory units in the storage media components (<b>161</b> to <b>163</b>).</p><p id="p-0247" num="0246">In general, logical memory addresses can be used by different data objects and thus grouped differently for different data access patterns. Data access patterns can be recognized from operating parameters (<b>353</b>) generated by the controller (<b>151</b>) and/or received in the input stream (<b>303</b>).</p><p id="p-0248" num="0247">Examples of the operating parameters (<b>353</b>) can include the operating parameter of the vehicle (<b>111</b>) in which the data storage device (<b>101</b>) is installed. For example, the operating parameter of the vehicle (<b>111</b>) can include a speed of the vehicle (<b>111</b>), a location of the vehicle (<b>111</b>), a roadway on which the vehicle (<b>111</b>) is traveling, inputs from some of the sensors (<b>103</b>) of the vehicle (<b>111</b>), the status of vehicle controls (e.g., <b>141</b>, <b>143</b>, <b>145</b>), the status of the components of the vehicle (<b>111</b>), such as the infotainment system (<b>149</b>) and/or the communication device (<b>139</b>) of the vehicle (<b>111</b>). The operating parameter of the vehicle (<b>111</b>) can include the status and operations of the advanced driver assistance system (ADAS) (<b>105</b>) and/or other applications/components running in the vehicle (<b>111</b>).</p><p id="p-0249" num="0248">Examples of the operating parameters (<b>353</b>) can include the operating parameter of the data storage device (<b>101</b>), such as the status and operation of the neural network accelerator (<b>159</b>), commands queued in the data storage device (<b>101</b>) for execution, status of background operations to be performed and/or being performed in the data storage device (<b>101</b>), etc.</p><p id="p-0250" num="0249">The operating parameters (<b>353</b>) and the write activities (<b>351</b>) corresponding to the operating parameters (<b>353</b>) can be used by the neural network accelerator (<b>159</b>) to train an artificial neural network (<b>125</b>) stored in the data storage device (<b>101</b>) (e.g., as model data (<b>313</b>) in a model namespace (<b>183</b>)). The training allows the artificial neural networks (<b>125</b>) to identify clusters of logical memory addresses that can be identified as data objects for improved placement implemented via the address map (<b>191</b>).</p><p id="p-0251" num="0250">During a training period, the controller (<b>151</b>) can generate training data by trying different data placement schemes (<b>355</b>) for the data objects recognized by the artificial neural networks (<b>125</b>) for a data access pattern. The controller (<b>151</b>) measures the write-amplification performances of the data placement schemes (<b>355</b>). The training data can include the write activities (<b>351</b>) in logical memory addresses, the operating parameters (<b>353</b>) indicative of the data access patterns, different data placement schemes (<b>355</b>) implemented in the address map (<b>191</b>) to place the data objects in the memory cells in the storage media components (<b>161</b> to <b>163</b>), and write-amplification performance indicators (<b>357</b>) of the respective data placement schemes (<b>355</b>).</p><p id="p-0252" num="0251">Optionally, the write-amplification performance indicators (<b>357</b>) can include the effect of wear leveling operations performed according to a predetermined wear leveling scheme and/or different wear leveling parameters.</p><p id="p-0253" num="0252">For example, the data storage device (<b>101</b>) stores wear levels (<b>358</b>) of memory regions in the storage media components (<b>161</b> to <b>163</b>). The controller (<b>151</b>) can perform operations to level the wearing in the memory regions by moving data out from low wearing regions into high wearing regions to make the low wearing regions available to data that change more frequently.</p><p id="p-0254" num="0253">The neural network accelerator (<b>159</b>) can train the artificial neural network (<b>125</b>) using the training data to recognize data access patterns, predict write-amplification performance indicators (<b>357</b>) for various data placement schemes (<b>355</b>), and/or predict write frequency indicators (<b>359</b>).</p><p id="p-0255" num="0254">For example, the write frequency indicators (<b>359</b>) can include an indication of whether a data object or group will be modified in a wear-leveling time period. When the data object or group is predicted to be modified in the wear-leveling time period, the data object or group is not selected for wear leveling operations.</p><p id="p-0256" num="0255">When the data object or group is modified and/or when the data object or group is selected for wear leveling operations, the modified data is stored into a high wear leveling region selected based on the write frequency of the data object. The selection scheme for the high wear leveling region can be part of the data placement scheme (<b>355</b>) to optimize the write-amplification performance indicators (<b>357</b>).</p><p id="p-0257" num="0256">Based on the predictions by the neural network accelerator (<b>159</b>), the neural network accelerator (<b>159</b>) and/or the controller (<b>151</b>) can determine an optimized set of data placement scheme (<b>355</b>) to control the address map (<b>191</b>).</p><p id="p-0258" num="0257">Optionally, or alternatively, when the data storage device (<b>101</b>) is operating in a data access pattern that is recognized by the artificial neural network (<b>125</b>) based on the operating parameters (<b>353</b>), the controller (<b>151</b>) can vary the data placement scheme (<b>355</b>) to search for a data placement scheme (<b>355</b>) that optimizes the write-amplification performance indicators (<b>357</b>).</p><p id="p-0259" num="0258">The optimized set of data placement scheme (<b>355</b>) can be determined via a search performed by the controller (<b>151</b>) through varying data placement scheme (<b>355</b>) and/or via predictions of write-amplification performance indicators (<b>357</b>), predicted by the neural network accelerator (<b>159</b>) based on selected data placement scheme (<b>355</b>). The data of the optimized set of data placement scheme (<b>355</b>) can be used to further train the neural network accelerator (<b>159</b>) to predict the optimized data placement scheme (<b>355</b>) for the corresponding data access pattern.</p><p id="p-0260" num="0259"><figref idref="DRAWINGS">FIG. <b>21</b></figref> shows a method of wear leveling with reduced write-amplification in a data storage device of an autonomous vehicle according to one embodiment. For example, the method of <figref idref="DRAWINGS">FIG. <b>21</b></figref> can be implemented in a vehicle (<b>111</b>) of <figref idref="DRAWINGS">FIG. <b>1</b> or <b>2</b></figref> using a data storage device (<b>101</b>) of <figref idref="DRAWINGS">FIG. <b>7</b>, <b>10</b>, <b>20</b></figref> and/or a storage media component (<b>160</b>) of <figref idref="DRAWINGS">FIG. <b>8</b></figref>. For example, the method of <figref idref="DRAWINGS">FIG. <b>21</b></figref> can be used in combination with the method of <figref idref="DRAWINGS">FIGS. <b>6</b>, <b>9</b>, <b>14</b>, <b>15</b>, <b>16</b></figref>, and/or <b>19</b>.</p><p id="p-0261" num="0260">At block <b>361</b>, a data storage device (<b>101</b>) stores data into, and retrieving data from, one or more storage media components of the data storage device (<b>101</b>) according to commands in an input stream (<b>303</b>) received in the data storage device (<b>101</b>).</p><p id="p-0262" num="0261">At block <b>363</b>, an address map (<b>191</b>) configured in the data storage device (<b>101</b>) maps (e.g., facilities the translation) between logical addresses specified in the commands received in the data storage device and physical addresses of memory cells in the one or more storage media components (<b>161</b> to <b>163</b>).</p><p id="p-0263" num="0262">At block <b>365</b>, a controller (<b>151</b>) of the data storage device (<b>101</b>) provides, as input, operating parameters (<b>353</b>) indicative data access patterns in the data storage device (<b>101</b>) as a function of time to an artificial neural network (<b>125</b>).</p><p id="p-0264" num="0263">For example, the data storage device (<b>101</b>) can be configured in a vehicle (<b>111</b>) to support the operations of the advanced driver assistance system (ADAS) (<b>105</b>) and/or the infotainment system (<b>149</b>). The operating parameters (<b>353</b>) can include operating parameters of the vehicle (<b>111</b>).</p><p id="p-0265" num="0264">For example, the operating parameters (<b>353</b>) of the vehicle (<b>111</b>) can include a speed of the vehicle (<b>111</b>), a location of the vehicle (<b>111</b>), an input from a sensor (<b>103</b>) configured on the vehicle, a status of a vehicle control (e.g., <b>141</b>, <b>143</b>, or <b>145</b>), a status of an infotainment system (<b>149</b>) of the vehicle (<b>111</b>), or a status of an advanced driver assistance system (ADAS) (<b>105</b>) of the vehicle (<b>111</b>), or any combination thereof.</p><p id="p-0266" num="0265">The operating parameters (<b>353</b>) provided as input to the artificial neural network (<b>125</b>) can include operating parameters of the data processing system (e.g., device <b>101</b>), such as a status of operations of the neural network accelerator (<b>159</b>), a status of pending commands to be executed by the controller (<b>151</b>), or a status of operations in progress in the storage media components (<b>161</b> to <b>163</b>), or any combination thereof.</p><p id="p-0267" num="0266">For example, the artificial neural network (<b>125</b>) can include a spiking neural network that is trained, in the data storage device (<b>101</b>), using a training dataset generated in the data storage device.</p><p id="p-0268" num="0267">At block <b>367</b>, the artificial neural network (<b>125</b>) generates a prediction based on the input to determine an optimized operation for wear leveling among memory cells in the data storage device.</p><p id="p-0269" num="0268">For example, the artificial neural network (<b>125</b>) can be configured to receive write activities (<b>351</b>) in the commands in the input stream (<b>303</b>) and identify logical address groups having write operations that are correlated in time.</p><p id="p-0270" num="0269">For example, the optimized operation for wear leveling can include combining wear leveling operations with predicted write operations.</p><p id="p-0271" num="0270">For example, the prediction made by the artificial neural network (<b>125</b>) can include a write frequency indicator (<b>359</b>) of data stored in a candidate memory region for wear leveling. When wear leveling is applied to the candidate memory region, data in the candidate region is copied to an alternative memory region. The alternative memory region is selected to have wearing higher than the candidate memory region. Thus, copying data from the candidate memory region vacates the candidate memory region for storing data of high frequency of modifications and thus increased wearing to match with the high wearing of the alternative memory region.</p><p id="p-0272" num="0271">For example, the alternative memory region is selected based on a write frequency indicator (<b>359</b>) of data stored in the candidate memory region for wear leveling. Preferably, the alternative memory region has high existing wearing that matches with the low frequency of modification for the data copied from the candidate memory region as predicted by the write frequency indicator generated by the artificial neural network (<b>125</b>).</p><p id="p-0273" num="0272">For example, to combine wear leveling and write command execution, the controller (<b>151</b>) is configured to postpone copying data from the candidate memory region to the alternative memory region when the write frequency indicator (<b>359</b>) indicates that data stored in the candidate memory region is to be modified within a predetermined period of time.</p><p id="p-0274" num="0273">In response to receiving a write command predicted by the artificial neural network (<b>125</b>) for the data stored in the candidate memory region, the controller (<b>151</b>) writes data updated according to the write command and/or the existing data from the candidate memory region to the alternative memory region to free the candidate memory region for storing other data.</p><p id="p-0275" num="0274">Optionally, the artificial neural network (<b>125</b>) is configured to predict an optimized data placement scheme that identifies placement of multiple selected logical address groups in an erasure block. Memory cells in the erasure block are required to be erased together.</p><p id="p-0276" num="0275">In general, the prediction generated (<b>367</b>) by the artificial neural network (<b>125</b>) to determine the optimized operation for wear leveling among memory cells in the data storage device can include an identification of a data access pattern, a write-amplification performance indicator of a data placement scheme for a data access pattern identified via the operating parameters (e.g., with wear leveling effects), the optimized data placement scheme, or a write frequency indicator of data stored in a memory region, or any combination thereof.</p><p id="p-0277" num="0276">For example, the data storage device (<b>101</b>) can include a neural network accelerator (<b>159</b>) configured to generate the prediction using model data (<b>313</b>) of the artificial neural network (<b>125</b>) stored in the data storage device (<b>101</b>).</p><p id="p-0278" num="0277">Optionally, the neural network accelerator (<b>159</b>) is further configured to train the artificial neural network (<b>125</b>) using training data generated in the data storage device (<b>101</b>) in a training period. For example, the training data can include write activities (<b>351</b>) identified in the input stream (<b>303</b>) during the training period, the operating parameters (<b>353</b>) identified in the training period, data placement schemes (<b>355</b>) used in the training period, and write-amplification performance indicators (<b>357</b>) measured during the training period for the data placement schemes (<b>355</b>).</p><p id="p-0279" num="0278">Optionally, the neural network accelerator (<b>159</b>) is further configured to train the artificial neural network (<b>125</b>) using training data generated for a data access pattern. For example, the training data can include the operating parameters (<b>353</b>) that are classified by the artificial neural network (<b>125</b>) to have the data access pattern in a time period; and the training data can further include an optimized data placement scheme (<b>355</b>) determined for the data access pattern recognized from the operating parameters (<b>353</b>) in the time period.</p><p id="p-0280" num="0279">Optionally, the neural network accelerator (<b>159</b>) is configured to determine, for the training data, the optimized data placement schemes (<b>355</b>) based on a search facilitated by predictions of write-amplification performance indicators (<b>357</b>) generated by the artificial neural network (<b>125</b>) for varying data placement schemes (<b>355</b>).</p><p id="p-0281" num="0280">Optionally, or in combination, the controller (<b>151</b>) is configured to determine, for the training data, the optimized data placement schemes (<b>355</b>) based on a search facilitated by measuring performance levels (<b>357</b>) for varying data placement schemes (<b>355</b>) applied to the address map (<b>191</b>).</p><p id="p-0282" num="0281">At block <b>369</b>, a controller (<b>151</b>) of the data storage device (<b>101</b>) performs the optimized operation for wear leveling based on the prediction generated (<b>367</b>) by the artificial neural network (<b>125</b>).</p><p id="p-0283" num="0282">The server (<b>119</b>), the computer system (<b>131</b>), and/or the data storage device (<b>101</b>) can each be implemented as one or more data processing systems.</p><p id="p-0284" num="0283">The present disclosure includes methods and apparatuses which perform the methods described above, including data processing systems which perform these methods, and computer readable media containing instructions which when executed on data processing systems cause the systems to perform these methods.</p><p id="p-0285" num="0284">A typical data processing system may include an inter-connect (e.g., bus and system core logic), which interconnects a microprocessor(s) and memory. The microprocessor is typically coupled to cache memory.</p><p id="p-0286" num="0285">The inter-connect interconnects the microprocessor(s) and the memory together and also interconnects them to input/output (I/O) device(s) via I/O controller(s). I/O devices may include a display device and/or peripheral devices, such as mice, keyboards, modems, network interfaces, printers, scanners, video cameras and other devices known in the art. In one embodiment, when the data processing system is a server system, some of the I/O devices, such as printers, scanners, mice, and/or keyboards, are optional.</p><p id="p-0287" num="0286">The inter-connect can include one or more buses connected to one another through various bridges, controllers and/or adapters. In one embodiment the I/O controllers include a universal serial bus (USB) adapter for controlling USB peripherals, and/or an IEEE-1394 bus adapter for controlling IEEE-1394 peripherals.</p><p id="p-0288" num="0287">The memory may include one or more of: read only memory (ROM), volatile random access memory (RAM), and non-volatile memory, such as hard drive, flash memory, etc.</p><p id="p-0289" num="0288">Volatile RAM is typically implemented as dynamic RAM (DRAM) which requires power continually in order to refresh or maintain the data in the memory. Non-volatile memory is typically a magnetic hard drive, a magnetic optical drive, an optical drive (e.g., a DVD RAM), or other type of memory system which maintains data even after power is removed from the system. The non-volatile memory may also be a random access memory.</p><p id="p-0290" num="0289">The non-volatile memory can be a local device coupled directly to the rest of the components in the data processing system. A non-volatile memory that is remote from the system, such as a network storage device coupled to the data processing system through a network interface such as a modem or ethernet interface, can also be used.</p><p id="p-0291" num="0290">In the present disclosure, some functions and operations are described as being performed by or caused by software code to simplify description. However, such expressions are also used to specify that the functions result from execution of the code/instructions by a processor, such as a microprocessor.</p><p id="p-0292" num="0291">Alternatively, or in combination, the functions and operations as described here can be implemented using special purpose circuitry, with or without software instructions, such as using application-specific integrated circuit (ASIC) or field-programmable gate array (FPGA). Embodiments can be implemented using hardwired circuitry without software instructions, or in combination with software instructions. Thus, the techniques are limited neither to any specific combination of hardware circuitry and software, nor to any particular source for the instructions executed by the data processing system.</p><p id="p-0293" num="0292">While one embodiment can be implemented in fully functioning computers and computer systems, various embodiments are capable of being distributed as a computing product in a variety of forms and are capable of being applied regardless of the particular type of machine or computer-readable media used to actually effect the distribution.</p><p id="p-0294" num="0293">At least some aspects disclosed can be embodied, at least in part, in software. That is, the techniques may be carried out in a computer system or other data processing system in response to its processor, such as a microprocessor, executing sequences of instructions contained in a memory, such as ROM, volatile RAM, non-volatile memory, cache or a remote storage device.</p><p id="p-0295" num="0294">Routines executed to implement the embodiments may be implemented as part of an operating system or a specific application, component, program, object, module or sequence of instructions referred to as &#x201c;computer programs.&#x201d; The computer programs typically include one or more instructions set at various times in various memory and storage devices in a computer, and that, when read and executed by one or more processors in a computer, cause the computer to perform operations necessary to execute elements involving the various aspects.</p><p id="p-0296" num="0295">A machine readable medium can be used to store software and data which when executed by a data processing system causes the system to perform various methods. The executable software and data may be stored in various places including for example ROM, volatile RAM, non-volatile memory and/or cache. Portions of this software and/or data may be stored in any one of these storage devices. Further, the data and instructions can be obtained from centralized servers or peer to peer networks. Different portions of the data and instructions can be obtained from different centralized servers and/or peer to peer networks at different times and in different communication sessions or in a same communication session. The data and instructions can be obtained in entirety prior to the execution of the applications. Alternatively, portions of the data and instructions can be obtained dynamically, just in time, when needed for execution. Thus, it is not required that the data and instructions be on a machine readable medium in entirety at a particular instance of time.</p><p id="p-0297" num="0296">Examples of computer-readable media include but are not limited to non-transitory, recordable and non-recordable type media such as volatile and non-volatile memory devices, read only memory (ROM), random access memory (RAM), flash memory devices, floppy and other removable disks, magnetic disk storage media, optical storage media (e.g., compact disk read-only memory (CD ROM), digital versatile disks (DVDS), etc.), among others. The computer-readable media may store the instructions.</p><p id="p-0298" num="0297">The instructions may also be embodied in digital and analog communication links for electrical, optical, acoustical or other forms of propagated signals, such as carrier waves, infrared signals, digital signals, etc. However, propagated signals, such as carrier waves, infrared signals, digital signals, etc. are not tangible machine readable medium and are not configured to store instructions.</p><p id="p-0299" num="0298">In general, a machine readable medium includes any mechanism that provides (i.e., stores and/or transmits) information in a form accessible by a machine (e.g., a computer, network device, personal digital assistant, manufacturing tool, any device with a set of one or more processors, etc.).</p><p id="p-0300" num="0299">In various embodiments, hardwired circuitry may be used in combination with software instructions to implement the techniques. Thus, the techniques are neither limited to any specific combination of hardware circuitry and software nor to any particular source for the instructions executed by the data processing system.</p><p id="p-0301" num="0300">The above description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding. However, in certain instances, well known or conventional details are not described in order to avoid obscuring the description. References to one or an embodiment in the present disclosure are not necessarily references to the same embodiment; and, such references mean at least one.</p><p id="p-0302" num="0301">In the foregoing specification, the disclosure has been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope as set forth in the following claims. The specification and drawings are, accordingly, to be regarded in an illustrative sense rather than a restrictive sense.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A device, comprising:<claim-text>memory cells; and</claim-text><claim-text>a controller configured to:<claim-text>determine, as a function of time, operating parameters indicative a data access pattern;</claim-text><claim-text>predict, based on the operating parameters as a function of time, an indicator of write frequency in a region of the memory cells;</claim-text><claim-text>determine, based on the indicator of write frequency, an operation of wear leveling for the memory cells; and</claim-text><claim-text>perform the operation of wear leveling for the memory cells.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>one or more storage media components containing the memory cells; and</claim-text><claim-text>an interface;</claim-text><claim-text>wherein the controller is further configured to store data into and retrieve data from the one or more storage media components according to commands received in the interface; and</claim-text><claim-text>wherein the controller is configured to use an address map to convert between:<claim-text>logical addresses specified in the commands received in the interface; and</claim-text><claim-text>physical addresses of the memory cells in the one or more storage media components.</claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>a neural network accelerator;</claim-text><claim-text>wherein the controller is configured to use the neural network accelerator to perform computations of an artificial neural network responsive to the operating parameters as a function of time to predict the indicator of write frequency.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the controller is further configured to postpone, in response to the indicator of write frequency indicating that data stored in the region is to be modified within a predetermined period of time, copying data from the region during the operation of wear leveling.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the region is a first region; and the controller is further configured to select a second region having wearing higher than the first region and copy data from the first region to the second region during the operation of wear leveling.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the artificial neural network includes a spiking neural network; and<claim-text>wherein the artificial neural network is configured to receive write activities in the commands and identify logical address groups having write operations correlated in time.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the controller is configured to combine wear leveling operations with predicted write operations.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the region is a first region; and the controller is configured to write, in response to receiving a write command for first data stored in the first region, into a second region, in accordance with the write command and the first data stored in the first region.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the controller is further configured to generate training data during usages of the device during a period and train, using the neural network accelerator, the artificial neural network using the training data; and<claim-text>wherein the training data includes write activities in commands received in the period, the operating parameters in the period, data placement schemes implemented in the address map in the period, and write amplification performance indicators measured during the period for the data placement schemes.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the controller is further configured to train, using the neural network accelerator, the artificial neural network using training data including:<claim-text>the operating parameters in a time period; and</claim-text><claim-text>data placement schemes determined for data access patterns recognized from the operating parameters in the time period and optimized for a combined target of write-amplification reduction and wear-leveling.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method, comprising:<claim-text>determining, by a controller of a device having memory cells and as a function of time, operating parameters indicative a data access pattern;</claim-text><claim-text>predicting, by the controller and based on the operating parameters as a function of time, an indicator of write frequency in a region of the memory cells;</claim-text><claim-text>determining, by the controller and based on the indicator of write frequency, an operation of wear leveling for the memory cells; and</claim-text><claim-text>performing, by the controller, the operation of wear leveling for the memory cells.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>storing, by the controller, data into and retrieve data from one or more storage media components containing the memory cells according to commands received in an interface of the device; and</claim-text><claim-text>converting, by the controller using an address map to convert, between:<claim-text>logical addresses specified in the commands received in the interface; and</claim-text><claim-text>physical addresses of the memory cells in the one or more storage media components.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:<claim-text>performing, by the controller using a neural network accelerator of the device, computations of an artificial neural network responsive to the operating parameters as a function of time to predict the indicator of write frequency.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>postponing, by the controller and in response to the indicator of write frequency indicating that data stored in the region is to be modified within a predetermined period of time, copying data from the region during the operation of wear leveling.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the region is a first region; and the method further comprises:<claim-text>selecting, by the controller, a second region having wearing higher than the first region to copy data from the first region to the second region during the operation of wear leveling.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>combining, by the controller, wear leveling operations with predicted write operations.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the region is a first region; and the method further comprises:<claim-text>writing, by the controller and in response to receiving a write command for first data stored in the first region, into a second region, in accordance with the write command and the first data stored in the first region.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. A non-transitory computer storage medium storing instructions which, when executed in a device having memory cells and a controller, cause the device to perform a method, comprising:<claim-text>determining, by the controller of the device having the memory cells and as a function of time, operating parameters indicative a data access pattern;</claim-text><claim-text>predicting, by the controller and based on the operating parameters as a function of time, an indicator of write frequency in a region of the memory cells;</claim-text><claim-text>determining, by the controller and based on the indicator of write frequency, an operation of wear leveling for the memory cells; and</claim-text><claim-text>performing, by the controller, the operation of wear leveling for the memory cells.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the method further comprises:<claim-text>generating, by the controller, training data during usages of the device during a period and train, using a neural network accelerator of the device, an artificial neural network using the training data;</claim-text><claim-text>wherein the training data includes write activities in commands received in the period, the operating parameters in the period, data placement schemes implemented in an address map in the period, and write amplification performance indicators measured during the period for the data placement schemes.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the method further comprises:<claim-text>training, by the controller using a neural network accelerator of the device, the artificial neural network using training data including:<claim-text>the operating parameters in a time period; and</claim-text><claim-text>data placement schemes determined for data access patterns recognized from the operating parameters in the time period and optimized for a combined target of write-amplification reduction and wear-leveling.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>