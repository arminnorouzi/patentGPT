<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006834A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006834</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942172</doc-number><date>20220911</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3239</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0637</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3297</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Blockchain With Daisy Chained Records</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16848759</doc-number><date>20200414</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11444776</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942172</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62980467</doc-number><date>20200224</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62841406</doc-number><date>20190501</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><last-name>Wilson</last-name><first-name>Kelce</first-name><address><city>Murphy</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wilson</last-name><first-name>Kelce</first-name><address><city>Murphy</city><state>TX</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Permissioned blockchains with off-chain storage establish integrity and no-later-than date-of-existence for documents, leveraging records containing hash values of documents. When a document's integrity or date is challenged, a new hash value is compared with a record in the blockchain. Proving date-of-existence (via hash value in a publication and/or SMS) for the block containing the record establishes no-later-than date-of-existence for the document. Permissioning monetizes operations, enforcing rules for submission rights and content, thereby precluding problematic material (privacy, obscenity, malicious logic, copyright violations) that threatens long-term viability. Compact records and off-chain storage in a document corral (with quarantine capability) preserve document confidentiality and ease storage burdens for distributed blockchain copies. Using multiple hash values for each document hardens against preimage attacks with quantum computing. Daisy chaining records establishes that relationships existed among documents at registration. Self-addressed blockchain registration (SABRe) permits documents to self-identify their blockchain record address (block ID, index).</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="134.37mm" wi="158.75mm" file="US20230006834A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="235.71mm" wi="171.03mm" orientation="landscape" file="US20230006834A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="228.09mm" wi="161.80mm" file="US20230006834A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="193.55mm" wi="169.59mm" file="US20230006834A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="207.94mm" wi="164.59mm" orientation="landscape" file="US20230006834A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="193.63mm" wi="167.72mm" orientation="landscape" file="US20230006834A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="225.72mm" wi="132.59mm" orientation="landscape" file="US20230006834A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="193.72mm" wi="123.53mm" orientation="landscape" file="US20230006834A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="156.46mm" wi="145.46mm" file="US20230006834A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="139.19mm" wi="139.45mm" file="US20230006834A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="229.62mm" wi="157.23mm" file="US20230006834A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="193.12mm" wi="143.93mm" file="US20230006834A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="183.56mm" wi="159.00mm" file="US20230006834A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="204.89mm" wi="168.23mm" file="US20230006834A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="226.23mm" wi="163.75mm" orientation="landscape" file="US20230006834A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="232.83mm" wi="165.35mm" file="US20230006834A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="228.01mm" wi="174.16mm" orientation="landscape" file="US20230006834A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="240.79mm" wi="169.16mm" file="US20230006834A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="226.48mm" wi="156.72mm" file="US20230006834A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="215.22mm" wi="182.37mm" orientation="landscape" file="US20230006834A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="230.46mm" wi="151.81mm" orientation="landscape" file="US20230006834A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="236.30mm" wi="181.61mm" orientation="landscape" file="US20230006834A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="229.70mm" wi="172.97mm" file="US20230006834A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="185.93mm" wi="170.60mm" orientation="landscape" file="US20230006834A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="193.21mm" wi="156.21mm" file="US20230006834A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="237.57mm" wi="168.99mm" file="US20230006834A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="215.48mm" wi="142.66mm" file="US20230006834A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation in part of U.S. patent application Ser. No. 16/848,759, filed Apr. 14, 2020, titled &#x201c;Blockchain With Daisy Chained Records, Document Corral, Quarantine, Message Timestamping, And Self-Addressing&#x201d;, and claims priority thereto. This application further claims the benefit of U.S. Provisional Patent Application No. 62/980,467, filed Feb. 24, 2020, titled &#x201c;Blockchain With Daisy Chained Records, Document Corral, Quarantine, Message Timestamping, And Self-Addressing&#x201d;, the entirety of which is hereby incorporated by reference herein; and also further claims the benefit of U.S. Provisional Patent Application No. 62/841,406, filed May 1, 2019, titled &#x201c;Blockchain With Daisy Chained Record References&#x201d;, the entirety of which is hereby incorporated by reference herein.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Blockchain records regarding documents are generally isolated entities. Thus, for off-chain storage, when a set of documents is registered in a blockchain using only hash values (as opposed to in-chain storage, in which the documents themselves are placed into the blockchain), information regarding the relationships of the documents is typically not included. Therefore, any third-party verification regarding the documents at a later time, that involves a determination of whether the document owner considered the documents to be related in some manner at the time of registration, may require that representations by the documents' owner be trusted at the time of verification. Although this is a minor point, it is nevertheless at least a blemish on the idea that blockchains provide &#x201c;trust in the absence of a trusted entity&#x201d;, because at least one aspect of the document information (i.e., the existence of some relationship among different documents) cannot be verified in a truly independent manner.</p><p id="p-0004" num="0003">This can become an issue when an arrangement involves multiple separate documents. Some (of many) example scenarios include: (1) real estate transactions; (2) sets of estate planning documents that include codicils for identifying specific bequests, powers of attorney, and others; (3) financial transactions involving multiple stages and/or accounts; and (4) patent cross-license deals with one document that addresses standard essential patents (SEPs) licensing terms, and a separate document that addresses patent licensing terms for non-SEPs. Patent cross-license deals may use separate documents because laws and typical licensing terms can differ widely regarding SEP and non-SEP licensing terms, and companies may become involved in a lawsuit over one class of patents, while the other class is covered by an existing license. The use of multiple documents in real estate transactions and estate planning is well-known. It would therefore, be beneficial to be able to identify that, at the time documents were registered in an off-chain storage blockchain (e.g., a blockchain that stored only document hash values, rather than the documents themselves), the documents were related as part of an identified set of documents.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004">For a more complete understanding of the present invention, reference is now made to the following descriptions taken in conjunction with the accompanying drawings, in which:</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates the Public Electronic Document Dating List (PEDDaL&#xae;) blockchain.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates an equivalent representation of the PEDDaL&#xae; blockchain.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a public record that establishes a no-later-than date-of-existence for a PEDDaL&#xae; block.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates generation of blockchain records.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates generation of a block with daisy chained record references.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates fields of an exemplary blockchain record with daisy chained record references.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates linked record fields for a plurality of blockchain records.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a linking map of daisy chained blockchain records.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a blockchain submission with linking instructions.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a flowchart of operations associated with generating a blockchain with daisy chained record references.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates another flowchart of operations associated with generating a blockchain with daisy chained record references.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a flowchart of operations associated with generating a linking map of daisy chained blockchain records.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a flowchart of operations associated with verifying integrity and a no-later-than date-of-existence for a document.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a secure document corral that can be used with the blockchain of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref>.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates a flowchart of operations associated with using a blockchain with a document corral.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>15</b></figref> illustrates a secure document corral with a quarantine capability that enhances the secure document corral of <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates scenarios of blockchains being in compliance or non-compliance of legal requirements.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates a flowchart of operations associated with using a blockchain with a quarantine-capable document corral.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>18</b></figref> illustrates the use of a network message for timestamping a block.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>19</b></figref> illustrates a timeline of using network messages for timestamping a block in a blockchain.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>20</b></figref> illustrates the use of a digital evidence bag (DEB) with a blockchain.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>21</b></figref> illustrates a flowchart of operations associated with using network messages for timestamping a block in a blockchain.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>22</b></figref> illustrates an arrangement of data for self-addressed blockchain registration (SABRe).</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>23</b></figref> illustrates additional detail an arrangement of data for a SABRe-enabled blockchain.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>24</b></figref> illustrates a flowchart of operations associated with using a SABRe-enabled blockchain.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a block diagram of an example computing device suitable for implementing some of the various examples disclosed herein.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0032" num="0031">Corresponding reference characters indicate corresponding parts throughout the drawings.</p><heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><p id="p-0033" num="0032">The various examples will be described in detail with reference to the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made throughout this disclosure relating to specific examples and implementations are provided solely for illustrative purposes but, unless indicated to the contrary, are not meant to limit all examples.</p><p id="p-0034" num="0033">Systems and methods are disclosed which use a blockchain (a.k.a. block chain or edition chain) to enable the establishment of integrity and no-later-than date-of-existence for documents (e.g., generic computer files) even for documents held in secrecy and those stored in uncontrolled environments. Daisy chained records permit linking various blockchain records, to establish that relationships between the various documents (represented by the records) had been asserted as of the date of registration (in the blockchain) of the documents. Example uses that may advantageously employ a blockchain with daisy chained record references include real estate transactions, estate planning, contract negotiations, financial transactions involving multiple stages and/or accounts, and complex deals that aggregate multiple individual documents.</p><p id="p-0035" num="0034">A permissioned blockchain with off-chain storage establishes integrity and no-later-than date-of-existence for documents, leveraging records in which hash values represent documents. After registration, if a document's integrity or date is questioned, the document is hashed again and the new hash value is compared with the record. A provable date-of-existence for the block containing the record establishes a no-later-than date-of-existence for the document. Using multiple hash values renders preimage attacks into multi-dimensional problems, increasing security against quantum computing. If there is no challenge to the document, the document may remain private (confidential) indefinitely. Even if disclosure is needed to prove the document's age and integrity, in some scenarios, disclosure can be limited to an agreed set of trustworthy parties, without becoming public. Compact records and off-chain storage in a secure document corral preserve document confidentiality and ease storage burdens for the distributed blockchain. Permissioning monetizes operations and enforces record content rules, avoiding problematic material (e.g., obscene material, material posing privacy problems, intellectual property rights violations, and digital files containing malicious logic) to ensure long-term viability. That is, the permissioning entity can bar blockchain entries that contain material other than hashes, timestamps, and other authorized data fields, in the correct location with proper content. Thus, obscene and illegal material can be kept out. Additionally, the permissioning entity can limit submissions to submitters who have paid the required fee and/or belong to the proper group (e.g., industry sector) that is serviced by the blockchain. The priority parent application preceded Bitcoin; earlier terms for &#x201c;block&#x201d; and &#x201c;block chain&#x201d; are &#x201c;edition&#x201d; and &#x201c;edition chain.&#x201d; Daisy chaining records establishes that relationships existed among various documents as of the blockchain registration dates and can be used to identify when a set of documents, that had been registered in a blockchain with an indication of a relationship among the set, is missing one or more of the documents.</p><p id="p-0036" num="0035">Additional benefits of the disclosure include a blockchain for which document protection persists beyond the cessation of operations by any business associated with producing the blockchain. No one involved with the disclosed blockchain can either falsify date proof (of any document that did not actually exist as of the provable date-of-existence) or deny date proof for any document with a corresponding record appearing within the blockchain. Thus, any employee of a permissioning entity being accused of corruption does not taint the proofs offered by the blockchain. Verification of a no-later-than date of existence for a document can be accomplished by anyone, without the need for special software to read the blockchain or locate records&#x2014;contingent only on a copy of the document at issue being available for hashing. Thus, when combined with the off-chain storage, significantly reduced storage requirements, and the benefits of the permissioning entity precluding problematic material, a long-life blockchain is possible. Additional disclosure assists with keeping blockchain operations compliant with legal requirements when an enforceable court order requires deletion of certain material (e.g., a &#x201c;right to be forgotten&#x201d; as identified in the General Data Protection Regulation (GDPR)). Such compliance is challenging, if not possible for on-chain storage blockchains, such as used by Bitcoin and Ethereum.</p><p id="p-0037" num="0036">The daisy chain capability enhances other aspects of the disclosure, such as the use of a document corral, a document quarantine (for items not permitted to remain within a document corral), the use of parallel (different speed) blockchains, and a unique self-addressed blockchain registration (SABRe) capability that enables a document to identify the location of its record within a blockchain, and yet still produce a hash value (message digest) that is within the record it references. Daisy chaining enables identification of sets of documents within a document corral, without either bloating the blockchain or requiring an external data item to track. Daisy chaining also enables identification of the disposition of quarantined documents. Further, daisy chaining also enables identifying an earlier date-of-existence for &#x201c;early&#x201d; documents that leverage the advantageous SABRe capability.</p><p id="p-0038" num="0037">Although various novel concepts are introduced separately, they are compatible with each other. Therefore it is specifically contemplated that combinations will be formed, such as by intermixing ideas and components introduced by any of the figures. That is, examples associated with <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>3</b></figref> may be combined with one or more portions of any ideas associated with the other figures.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrate the Public Electronic Document Dating List (PEDDaL&#xae;) blockchain in differing representations. <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>1</b>B</figref> should be viewed together for the following description: A permissioning entity <b>101</b> generates a blockchain <b>100</b> on a schedule for the benefit of submitters <b>131</b>, <b>132</b>, and <b>133</b>. Permissioning entity <b>101</b> is named so, because it grants permission for records to be included within blockchain <b>100</b>. Reasons for using a permissioning entity include monetizing the blockchain, by permitting only paying submitters to add to blockchain <b>100</b>, and enforcing record content (e.g., ASCII hex characters only, with 256-character record lengths), to preclude potentially problematic material (e.g., obscene material, material posing privacy problems, intellectual property rights violations, and digital files containing malicious logic) from entering blockchain <b>100</b>.</p><p id="p-0040" num="0039">A primary difference between a permissioning entity and a trusted entity is that, whereas a trusted entity (e.g., a trusted timestamping entity, document escrow agent) must be trusted to represent critical facts truthfully and accurately, in order to establish a no-later-than date-of-existence and integrity for a challenged document, there is no need to trust a permissioning entity. For scenarios in which a trusted entity is needed, document challengers and arbiters must trust the trusted entity and, if the trusted entity's assertions are incorrect (i.e., the trusted entity is dishonest or even simply making an honest error) the trusted entity might falsify the proof&#x2014;either improperly denying a correct no-later-than date-of-existence and integrity for a document, or improperly attesting to an incorrect no-later-than date-of-existence and integrity for a document. For scenarios in which a trusted entity is not needed, but a permissioning entity is needed, failures by the permissioning entity, whether due to dishonesty or simple mistake, result in significantly less serious consequences: a record is not entered into the blockchain in a timely manner, and/or records are entered into the blockchain that fail the criteria for inclusion.</p><p id="p-0041" num="0040">If a permissioning entity makes repeated mistakes of not including records in a timely manner, the utility of the blockchain for protecting the documents already registered is not lessened. Document owners, who have already registered documents, are still safe. New documents can be submitted to a different blockchain with, hopefully, a better permissioning entity. In stark contrast, for trust arrangements requiring the use of a trusted entity, a single act of dishonesty by the trusted entity can threaten the protection of all documents. Document owners, who have already registered documents, may lose all their ability to establish no-later-than dates-of-existence and integrity for their registered documents. This is a tragic situation, and a serious risk presented by using trust mechanisms that rely on trusted entities.</p><p id="p-0042" num="0041">Another difference between a permissioning entity and a trusted entity is that, if the trusted entity ceases operations, document owners, who have already registered documents, may lose all their ability to establish no-later-than dates-of-existence and integrity for their registered documents in this scenario, also. In stark contrast, if a permission entity ceases operations, the consequence is limited to document owners not being able to register new documents into the blockchain whereas, for previously-registered documents, no-later-than dates-of-existence and integrity remain safely verifiable. Thus, there is an additional risk factor for systems that use trusted entities, to which systems that need only permissioning entities are not susceptible. The basic issue is that trust in a trusted entity is critical, because a trusted entity can affect proof regarding already-registered documents, whereas a permissioning entity cannot affect proof regarding already-registered documents, in the examples disclosed herein.</p><p id="p-0043" num="0042">Description of blockchain <b>100</b> will begin with an intermediary block <b>102</b><i>b</i>, that is neither the initial block nor the final block in blockchain <b>100</b>. In some examples, the operations described herein, associated with blockchain <b>100</b>, are performed using one or more computing devices <b>2500</b> of <figref idref="DRAWINGS">FIG. <b>25</b></figref>. Block <b>102</b><i>b </i>includes records <b>104</b><i>a</i>, <b>104</b><i>f</i>, <b>104</b><i>g</i>, and <b>104</b><i>h</i>. Record <b>104</b><i>a </i>represents prior block <b>102</b><i>a</i>, and is used to chain block <b>102</b><i>a </i>with block <b>102</b><i>b</i>. Block <b>102</b><i>a </i>is hashed with an integrity verification code (IVC) generator <b>108</b> to generate hash value <b>110</b><i>a</i>. In some examples, and IVC comprises a complete message digest; in some examples, an IVC comprises a partial message digest; in some examples, an IVC comprises two message digests; and in some examples, an IVC comprises a mixture of partial and complete message digests. In some examples, hash value <b>110</b><i>a </i>includes one or more of the Secure Hash Algorithm <b>512</b> (SHA-512) message digest, the SHA-1 message digest, and the SHA-256 message digest. The use of multiple message digests renders blockchain <b>100</b> more resistant to second preimage attacks, which may become a threat to some blockchains in the era for quantum computers and quantum computing. It should be understood that hash value <b>110</b><i>a </i>may alternatively represent any value that can indicate integrity of a digital bit stream, such as cyclic redundancy checks, checksums, and others. In order to establish a no-later-than date-of-existence for block <b>102</b><i>a</i>, hash value <b>110</b><i>a </i>is published in a public record <b>112</b><i>a</i>, for example in an advertisement in a printed publication. In some examples, the Marketplace section of classified advertisements in the USA Today newspaper is used a public record.</p><p id="p-0044" num="0043">Multiple documents <b>106</b><i>f</i>, <b>106</b><i>g</i>, and <b>106</b><i>h </i>are to be registered in blockchain <b>100</b>, specifically, block <b>102</b><i>b</i>. Therefore, each of documents <b>106</b><i>f</i>, <b>106</b><i>g</i>, and <b>106</b><i>h </i>is hashed (or some other integrity verification code operation is performed) by IVC generator <b>108</b> to generate hash values <b>110</b><i>f</i>, <b>110</b><i>g</i>, and <b>110</b><i>h</i>, respectively. These are then entered into records <b>104</b><i>f</i>, <b>104</b><i>g</i>, and <b>104</b><i>h</i>, respectively, as is described in further detail with respect to <figref idref="DRAWINGS">FIGS. <b>3</b>, <b>4</b>, <b>9</b> and <b>10</b></figref>. Block <b>102</b><i>b </i>is then closed, which means that no further records can be added, and published in one or more public locations, such as on a website <b>140</b> (see <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>) and/or transmitted to a plurality of dispersed blockchain nodes. Also, in some examples, block <b>102</b><i>b </i>is written to a fixed media <b>142</b><i>b</i>, such as a DVD, and distributed (see <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>). Distribution of fixed media <b>142</b><i>b </i>may include sending copies to submitters <b>131</b>, <b>132</b>, who submitted records to block <b>102</b><i>b</i>, as well as other archival locations, such as libraries and document archival services.</p><p id="p-0045" num="0044">Block <b>102</b><i>b </i>is then hashed by IVC generator <b>108</b> to generate hash value <b>110</b><i>b</i>, which is entered into record <b>104</b><i>b </i>in a block <b>102</b><i>c</i>. Block <b>102</b><i>c </i>is subsequent to block <b>102</b><i>b</i>, and record <b>104</b><i>a</i>, which represents block <b>102</b><i>b</i>, is used to chain block <b>102</b><i>b </i>with block <b>102</b><i>c</i>. Additionally, in order to establish a no-later-than date-of-existence for block <b>102</b><i>b</i>, hash value <b>110</b><i>b </i>is published in a public record <b>112</b><i>b</i>, for example in another advertisement in a printed publication. In some examples, public record <b>112</b><i>a </i>and public record <b>112</b><i>b </i>are published the same day (e.g., separate classified ads in the same newspaper edition). In some examples, public record <b>112</b><i>a </i>and public record <b>112</b><i>b </i>are published on different days, with public record <b>112</b><i>b </i>following public record <b>112</b><i>a. </i></p><p id="p-0046" num="0045">The process repeats for documents <b>106</b><i>k</i>, <b>106</b><i>m</i>, and <b>106</b><i>n </i>to be registered in blockchain <b>100</b>, specifically, block <b>102</b><i>c</i>. Therefore, each of documents <b>106</b><i>k</i>, <b>106</b><i>m</i>, and <b>106</b><i>n </i>is hashed by IVC generator <b>108</b> to generate hash values <b>110</b><i>k</i>, <b>110</b><i>m</i>, and <b>110</b><i>n</i>, respectively. These are then entered into records <b>104</b><i>k</i>, <b>104</b><i>m</i>, and <b>104</b><i>n</i>, respectively. Block <b>102</b><i>c </i>is then closed and published in one or more public locations, such as on a website <b>140</b> and/or transmitted to a plurality of dispersed blockchain nodes. Also, in some examples, block <b>102</b><i>b </i>is written to a fixed media <b>142</b><i>c</i>, such as a DVD, and distributed (see <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>). Distribution of fixed media <b>142</b><i>c </i>may include sending copies to submitter <b>133</b>, who submitted a record to block <b>102</b><i>c</i>, as well as other archival locations, such as libraries and document archival services. Block <b>102</b><i>c </i>is then hashed by IVC generator <b>108</b> to generate hash value <b>110</b><i>c</i>, which is entered into a record (not illustrated) in a block <b>102</b><i>d</i>. Block <b>102</b><i>d </i>is subsequent to block <b>102</b><i>c</i>, and the record which represents block <b>102</b><i>c</i>, is used to chain block <b>102</b><i>c </i>with block <b>102</b><i>d</i>. Additionally, in order to establish a no-later-than date-of-existence for block <b>102</b><i>c</i>, hash value <b>110</b><i>c </i>is published in a public record <b>112</b><i>c</i>, for example in another advertisement in a printed publication. In some examples, public record <b>112</b><i>b </i>and public record <b>112</b><i>c </i>are published the same day (e.g., separate classified ads in the same newspaper edition). In some examples, public record <b>112</b><i>b </i>and public record <b>112</b><i>c </i>are published on different days, with public record <b>112</b><i>c </i>following public record <b>112</b><i>b. </i></p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a public record <b>112</b> that establishes a no-later-than date-of-existence for a PEDDaL&#xae; block, specifically a block identified as <b>090310</b><i>a</i>, which existed no later than Mar. 19, 2009. Public record <b>112</b> is a real public record for a real block. Therefore, the PEDDaL&#xae; blockchain is able to prove a no-later-than date-of-existence for files as early as Mar. 19, 2009. A classified ad <b>212</b> includes a hash value <b>110</b>, which is the SHA-512 message digest, followed by the SHA-1 message digest for PEDDaL&#xae; block <b>090310</b><i>a</i>. The block identification is shown in a field <b>202</b>; a field <b>204</b> indicates a website (for example, website <b>140</b> of <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>) where a copy of PEDDaL&#xae; block <b>090310</b><i>a </i>can be obtained. A generator version field <b>206</b> indicates a generator version used to generate hash value <b>110</b>. Using the generator version information, the specific hash functions used can be identified. When different hash functions are used, the generator version information will change, although it is possible for the generator version information will change even when the hash functions used remain unchanged.</p><p id="p-0048" num="0047">A date field <b>208</b> indicates the date of publication of public record <b>112</b>, and therefore, establishes the no-later-than date-of-existence for a PEDDaL&#xae; block <b>090310</b><i>a </i>as Mar. 19, 2009. Because the specific public record (classified ad <b>212</b> within the USA Today newspaper) was published to large base of readers, who would have noticed if date field <b>208</b> had been incorrect, after publication and distribution, the date in date field <b>208</b> became a trustworthy date.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates generation of blockchain records <b>104</b><i>p</i>, <b>104</b><i>q</i>, <b>104</b><i>r</i>, <b>104</b><i>s</i>, and <b>104</b><i>t </i>(<b>104</b><i>p</i>-<b>104</b><i>t</i>) from documents <b>106</b><i>p</i>, <b>106</b><i>q</i>, <b>106</b><i>r</i>, <b>106</b><i>s</i>, and <b>106</b><i>t </i>(<b>106</b><i>p</i>-<b>106</b><i>t</i>), respectively, using a record generator <b>308</b>. The generation of other records shown in other figures herein (e.g., records <b>104</b><i>a</i>-<b>104</b><i>d</i>, <b>104</b><i>f</i>-<b>104</b><i>h</i>, <b>104</b><i>k</i>, <b>104</b><i>m</i>, and <b>104</b><i>n</i>) is similar. Document <b>106</b><i>p </i>is hashed by IVC generator <b>108</b> within record generator <b>308</b>, to produce hash value <b>110</b><i>p</i>. An administrative data generator <b>302</b>, also within record generator <b>308</b>, generates administrative data <b>310</b><i>p</i>. Exemplary administrative data <b>310</b><i>p </i>includes a generator version number, a timestamp, and other data. Hash value <b>110</b><i>p </i>and administrative data <b>310</b><i>p </i>are combined (e.g., concatenated) to produce record <b>104</b><i>p</i>. As illustrated, records <b>104</b><i>q</i>-<b>104</b><i>t </i>are generated similarly. A record identifier <b>304</b><i>p </i>is a unique identifier for record <b>104</b><i>p</i>. In some examples, record identifier <b>304</b><i>p </i>is the first hexadecimal octet of a SHA-1 message digest for document <b>106</b><i>p</i>. In some examples, record identifier <b>304</b><i>p </i>is used as a root filename for record <b>104</b><i>p</i>, combined with a file type extension such as, for example, &#x201c;.pdl&#x201d;. There are also equivalent record identifiers <b>304</b><i>q</i>, <b>304</b><i>r</i>, <b>304</b><i>r</i>, and <b>304</b><i>t</i>, for records <b>104</b><i>q</i>, <b>104</b><i>r</i>, <b>104</b><i>r</i>, and <b>104</b><i>t</i>, respectively. Other records and record identifiers mentioned herein have a similar relationship.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates generation of a block <b>102</b><i>e </i>with daisy chained record references. Records <b>104</b><i>p</i>-<b>104</b><i>t </i>are received and provided to a block generator <b>408</b> (using record identifiers <b>304</b><i>p</i>-<b>304</b><i>t </i>as filenames for records <b>104</b><i>p</i>-<b>104</b><i>t</i>), along with linking instructions <b>802</b><i>e</i>, described in more detail with respect to <figref idref="DRAWINGS">FIG. <b>8</b></figref>. Block generator <b>408</b> identifies hash values <b>110</b><i>p</i>-<b>110</b><i>t </i>and administrative data <b>310</b><i>p</i>, <b>310</b><i>q</i>, <b>310</b><i>r</i>, <b>310</b><i>s</i>, and <b>310</b><i>t </i>in records <b>104</b><i>p</i>, <b>104</b><i>q</i>, <b>104</b><i>r</i>, <b>104</b><i>s</i>, and <b>104</b><i>t</i>, respectively. An administrative data generator <b>404</b> uses administrative data <b>310</b><i>p</i>-<b>310</b><i>t </i>to generate new administrative data <b>410</b><i>p</i>, <b>410</b><i>q</i>, <b>410</b><i>r</i>, <b>410</b><i>s</i>, and <b>410</b><i>t</i>, which may replace and/or add to information in administrative data <b>310</b><i>p</i>-<b>310</b><i>t</i>. For example, a record index is added, and a digitally signed timestamp may also be added to indicate the time at which block <b>102</b><i>e </i>is compiled by block generator <b>408</b>. Additionally, a linked record field is populated with linked record values, in accordance with linking instructions <b>802</b><i>e</i>. The updated records <b>104</b><i>p</i>-<b>104</b><i>t</i>, having hash values <b>110</b><i>p</i>-<b>110</b><i>t </i>and administrative data <b>410</b><i>p</i>-<b>410</b><i>t </i>(in place of administrative data <b>310</b><i>p</i>-<b>310</b><i>t</i>), are placed into block <b>102</b><i>e</i>. In some examples, record generator <b>308</b> intakes linking instructions <b>802</b><i>e </i>and generates records with linked record field already populated with linked record values. Thus, either record generator <b>308</b> or block generator <b>408</b> may populate linked record fields with linked record values.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates fields of an exemplary blockchain record with daisy chained record references, specifically record <b>104</b><i>p</i>. As illustrated, record <b>104</b><i>p </i>is in a first defined format that includes hash value <b>110</b><i>p </i>followed by administrative data <b>410</b><i>p</i>, although other formats are possible. In some examples, the first format has a fixed number of bytes, such as 256 bytes. As indicated, hash value <b>110</b><i>p </i>includes a SHA-512 message digest (a first IVC value) in a first IVC portion <b>506</b><i>p</i>, followed by a SHA-1 message digest (a second IVC value) in a second IVC portion <b>508</b><i>p </i>(both for document <b>106</b><i>p</i>). This combination is 168 bytes long on machines having 4-bit bytes in the ASCII text file format, since the SHA-512 message digest is 512 bits and the SHA-1 message digest is 160 bits. Producing blockchain records and blocks in ASCII text file format doubles their size, relative to a binary file format, but permits inspection of the contents of both records and blocks with any ASCII text viewer, thereby precluding the need for proprietary software when independently verifying document registrations. It should be understood that other hash functions may also be used, for example SHA-256, and that some examples may use only a single IVC (hash value) or more than two IVCs. As used within record <b>104</b><i>p</i>, hash value <b>110</b><i>p </i>is an IVC field that has a first IVC value portion <b>506</b><i>p </i>a second IVC portion <b>508</b><i>p. </i></p><p id="p-0052" num="0051">Administrative data <b>410</b><i>p </i>includes generator version information <b>510</b><i>p</i>, a first timestamp in a first timestamp field <b>512</b><i>p</i>, a second timestamp in a second timestamp field <b>514</b><i>p</i>, other administrative data <b>516</b><i>p</i>, a linked record locator field <b>502</b><i>p</i>, and an index value in an index field <b>5004</b><i>p</i>. In some examples, second timestamp field <b>514</b><i>p </i>contains an encrypted timestamp from a trusted timestamping entity (a.k.a. trusted timestamping authority, TTA), for example encrypted with the trusted timestamping entity's private key, as a form of a digital signature of the timestamp. The index is to assist locating records within specific blocks. Together, a block identification and a record index specify a blockchain address <b>518</b>, which provides the location of a record within blockchain <b>100</b>. In some examples, record <b>104</b><i>p </i>has the following format in ASCII text:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0052">Characters 1-128: SHA-512 message digest (representing 512 bits);</li>        <li id="ul0002-0002" num="0053">Characters 129-168: SHA-1 message digest (representing 160 bits);</li>        <li id="ul0002-0003" num="0054">Characters 169-170: 2-digit (hex) generator version (representing 8 bits);</li>        <li id="ul0002-0004" num="0055">Characters 171-178: 8-digit (hex) timestamp (representing 32 bits);</li>        <li id="ul0002-0005" num="0056">Characters 179-198: 20-digit padding with the ASCII character for zeros (reserved for future use);</li>        <li id="ul0002-0006" num="0057">Characters 199-250: linked record locater field, 4&#xd7;13-digit linked record locators; and</li>        <li id="ul0002-0007" num="0058">Characters 251-256: 6-digit (hex) index of the position within the block (document dating list edition (in DDL file), using 1-based indexing.</li>    </ul>    </li></ul></p><p id="p-0053" num="0059">Linked record locator field <b>502</b><i>p </i>indicates linked record values that indicate the location of other records (or a portion of the contents of the other records) in blockchain <b>100</b>, and possibly also in different blockchains (i.e., blockchains other than blockchain <b>100</b>). As indicated, linked record locator field <b>502</b><i>p </i>has a flag <b>520</b><i>q</i>, an index <b>504</b><i>q</i>, a flag <b>520</b><i>r</i>, an index <b>504</b><i>r</i>, a flag <b>520</b><i>k</i>, a block identification <b>522</b><i>c</i>, and an index <b>504</b><i>k</i>. Flag <b>520</b><i>q </i>indicates that the next bit field, containing index <b>504</b><i>q </i>indicates an index within the same block. Similarly, flag <b>520</b><i>r </i>also indicates that the next bit field, containing index <b>504</b><i>r </i>indicates an index within the same block. Index <b>504</b><i>q </i>is the index for record <b>104</b><i>q</i>, and index <b>504</b><i>r </i>is the index for record <b>104</b><i>r</i>. As can be seen in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, records <b>104</b><i>p</i>, <b>104</b><i>q</i>, and <b>104</b><i>r </i>are all within the same block <b>102</b><i>e</i>. Optional flag <b>520</b><i>k </i>indicates that the next bit field, block identification <b>522</b><i>c</i>, indicates a different block than block <b>102</b><i>e</i>, so the next bit field, index <b>504</b><i>k </i>indicates an index within the referenced block. Index <b>504</b><i>k </i>is the index for record <b>104</b><i>k</i>, and block identification <b>522</b><i>c </i>holds the block identification of block <b>102</b><i>c</i>. As can be seen in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, record <b>104</b><i>k </i>is within block <b>102</b><i>c</i>. In some examples, flags are optional. As one example, flags <b>520</b><i>q </i>and <b>520</b><i>r </i>comprise seven zeros to indicate that indices <b>504</b><i>q </i>and <b>504</b><i>r </i>are for records within the same block. Block ID <b>522</b><i>c </i>having non-zero values acts as sufficient indication that index <b>504</b><i>k </i>is for a different block, rendering flag <b>520</b><i>k </i>superfluous for this particular scheme.</p><p id="p-0054" num="0060">In some examples, the flags may be combined with the block identification, such as by having a format with two bit fields: one for the block identification and one for the index. If the index is within the same block (e.g., the case for flags <b>520</b><i>q </i>and <b>520</b><i>r</i>, described above), the bit field for the block identification is padded with zeros. If the index is not within the same block (e.g., the case for flag <b>520</b><i>k</i>), the bit field for the block identification is populated with the block identification, which will be different than all zeros. Thus, in some examples, the flags are not dedicated bit fields, but are instead inferred from whether the block identification is padded with zeros or filled with non-zero values. In some examples, a flag indicating that the index is within the same block is shorter, such as a single character, for example the ASCII character for the number 0 (zero). In some examples, linked record locator field <b>502</b><i>p </i>has the following format in ASCII text:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0061">Characters 199-211: 13-character linked record locator #<b>4</b> (used last);</li>        <li id="ul0004-0002" num="0062">Characters 212-224: 13-character linked record locator #<b>3</b>;</li>        <li id="ul0004-0003" num="0063">Characters 225-237: 13-character linked record locator #<b>2</b>; and</li>        <li id="ul0004-0004" num="0064">Characters 238-250: 13-character linked record locator #<b>1</b> (used first).</li>    </ul>    </li></ul></p><p id="p-0055" num="0065">In some examples, the block identifications have the following format in ASCII text: YYMMDDa=seven (7) characters. In some examples, the indices have the following format in ASCII text: six (6) digit (hex) integer identifying the counted position of the record within the block. For example, an index of 000002 with 256-byte records (on a 1 character=1 byte machine) indicates that the record starts at character <b>257</b> within the block. With this scheme, each linked record value is 13 characters (7+6=13), although different formats and lengths are possible.</p><p id="p-0056" num="0066">As an example, consider a 256-byte (256-character) record having the following set of characters in positions <b>199</b> through <b>256</b>: &#x201c;xxxxxx00 00000000 00018082 5A000999 180825A0 00998000 00123456 78000333&#x201d;, where x indicates unknown. The index is 0x333, indicates that these linked records appear within the 333<sup>rd </sup>record (in hexadecimal, 819 in decimal) in the block. The linked record locator field has three linked records, two within prior blocks, and one within the same block. The linked records in the prior blocks are in block <b>180825</b><i>a</i>, at index 0x998; and in block <b>180825</b><i>a</i>, at index 0x999. The index values are in hexadecimal, the decimal values are 2456 and 2457, respectively. The example linked record that is also within the same block is not referenced by index value (just for this example), but is instead referenced by a portion of the contents of that linked record. In some examples, the first octet (i.e., the first 8 characters) of the SHA-1 message digest of the other record is used as a reference or pointer to a linked record. Specifically, that linked record has the first octet identified as &#x201c;12345678&#x201d;. In order to find that linked record in this scheme, the other records in the block are searched until a record is found that contains 12345678 in the position corresponding to the first 8 characters of the SHA-1 message digest. Since the octet is eight (8) characters in length, in order to preserve a 13-character scheme for a linked record locator field, the zero-padding is reduced to five (5) characters. This referencing by the first SHA-1 octet can be used when the index value of a linked record is subject to change. Index values can change if, for example, an earlier (within the block) record is removed because of problematic content, or is a duplicate of another record.</p><p id="p-0057" num="0067"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates linked record locator fields <b>502</b><i>p</i>, <b>502</b><i>q</i>, <b>502</b><i>r</i>, and <b>502</b><i>k</i>, for a plurality of blockchain records. Linked record locator fields <b>502</b><i>p</i>, <b>502</b><i>q</i>, <b>502</b><i>r</i>, and <b>502</b><i>k </i>will be used to generate a linking map <b>700</b> of daisy chained blockchain records, as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. Linked record locator field <b>502</b><i>p </i>contains links to records <b>104</b><i>q</i>, <b>104</b><i>r</i>, and <b>104</b><i>k</i>, as noted previously. Linked record locator field <b>502</b><i>q </i>has a flag <b>520</b><i>p</i>, an index <b>504</b><i>p</i>, flag <b>520</b><i>r</i>, index <b>504</b><i>r</i>, a flag <b>520</b><i>g</i>, a block identification <b>522</b><i>b</i>, and an index <b>504</b><i>g</i>. Flag <b>520</b><i>p </i>indicates that the next bit field, containing index <b>504</b><i>p </i>indicates an index within the same block. Index <b>504</b><i>p </i>is the index for record <b>104</b><i>p</i>. Flag <b>520</b><i>g </i>indicates that the next bit field, block identification <b>522</b><i>b</i>, indicates a different block, so the next bit field, index <b>504</b><i>g </i>indicates an index within the referenced block. Index <b>504</b><i>g </i>is the index for record <b>104</b><i>g</i>, and block identification <b>522</b><i>b </i>holds the block identification of block <b>102</b><i>b</i>. As can be seen in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, record <b>104</b><i>g </i>is within block <b>102</b><i>b</i>. Linked record locator field <b>502</b><i>r </i>has a flag <b>520</b><i>s</i>, an index <b>504</b><i>s</i>, a flag <b>520</b><i>t</i>, and an index <b>504</b><i>t</i>. Flag <b>520</b><i>s </i>indicates that the next bit field, containing index <b>504</b><i>s </i>indicates an index within the same block. Index <b>504</b><i>s </i>is the index for record <b>104</b><i>s</i>. Flag <b>520</b><i>t </i>indicates that the next bit field, containing index <b>504</b><i>t </i>indicates an index within the same block. Index <b>504</b><i>t </i>is the index for record <b>104</b><i>t</i>. As can be seen in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, records <b>104</b><i>r</i>, <b>104</b><i>s</i>, and <b>104</b><i>t </i>are all within the same block <b>102</b><i>e</i>. Linked record locator field <b>502</b><i>k </i>is the linked record field for record <b>104</b><i>k</i>, and has a flag <b>520</b><i>m</i>, an index <b>504</b><i>m</i>, a flag <b>520</b><i>h</i>, block identification <b>522</b><i>b</i>, and an index <b>504</b><i>h</i>. Flag <b>520</b><i>m </i>indicates that the next bit field, containing index <b>504</b><i>m </i>indicates an index within the same block. Index <b>504</b><i>m </i>is the index for record <b>104</b><i>m</i>. Flag <b>520</b><i>h </i>indicates that the next bit field, block identification <b>522</b><i>b</i>, indicates a different block, so the next bit field, index <b>504</b><i>h </i>indicates an index within the referenced block. Index <b>504</b><i>h </i>is the index for record <b>104</b><i>h</i>, and block identification <b>522</b><i>b </i>holds the block identification of block <b>102</b><i>b</i>. As can be seen in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, record <b>104</b><i>g </i>is within block <b>102</b><i>b</i>. As can be seen in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, records <b>104</b><i>k </i>and <b>520</b><i>m </i>are both within block <b>102</b><i>c</i>, and records <b>104</b><i>h </i>is within block <b>102</b><i>b. </i></p><p id="p-0058" num="0068">Using this information, linking map <b>700</b> can be generated. As seen in linking map <b>700</b>, record <b>104</b><i>p </i>links to records <b>104</b><i>q</i>, <b>104</b><i>r</i>, and <b>104</b><i>k</i>, directly. Record <b>104</b><i>p </i>links back to record <b>104</b><i>p</i>, duplicates the link to record <b>104</b><i>r</i>, and directly links to record <b>104</b><i>g</i>. Record <b>104</b><i>r </i>links to records <b>104</b><i>s </i>and <b>104</b><i>t</i>, directly. Record <b>104</b><i>k </i>links to records <b>104</b><i>m </i>and <b>104</b><i>h</i>, directly. Thus, record <b>104</b><i>p </i>is linked through a daisy chain to record <b>104</b><i>h</i>. In total, nine (9) records are linked via a daisy chain, even though no single record links to more than three (3) records directly. The linking handles multiple records within a block, as well as spans multiple blocks. With this scheme, an unlimited number of records can be linked across an arbitrary number of blocks, with the primary limitation being that a particular record can only link to contemporaneous and preceding records.</p><p id="p-0059" num="0069">A real-world example exists for the PEDDaL&#xae; blockchain. Block <b>191205</b><i>a </i>contains two records, one ending in &#x201c;0000000 00002A 0000000 0000A4 100109A 000004 0000000 00001F 0000A3&#x201d; and the other ending in &#x201c;0000000 00001F 0000000 0000A3 100109A 00000F 0000000 00002A 0000A4&#x201d;. This means that the record at index 0xA3 (164 in decimal) is linked to records with index values 0x2A, 0xA4, and 0x1F within its same block <b>191205</b><i>a</i>, and also the record at index value 0x4 in block <b>100109</b><i>a</i>. Also, the record at index 0xA4 is linked to records with index values 0x1F, 0xA3, and 0x2A within its same block <b>191205</b><i>a</i>, and also the record at index value 0xF in block <b>100109</b><i>a</i>. The records at indices 0xA3 and 0xA4 are directly linked to each other. The record at index 0xA3 is not directly linked (first tier link) to the record at index value 0xF in block <b>100109</b><i>a</i>. However, the record at index 0xA3 is daisy chained (linked via a daisy chain) to the record at index value 0xF in block <b>100109</b><i>a</i>, through the record at index 0xA4. Similarly, the record at index 0xA4 is daisy chained to the record at index value 0x4 in block <b>100109</b><i>a</i>, through the record at index 0xA3.</p><p id="p-0060" num="0070"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a blockchain submission <b>800</b> with linking instructions <b>802</b><i>e</i>. Submission <b>800</b> is sent in by a submitter (a user of blockchain <b>100</b>, e.g., one of submitters <b>131</b>, <b>132</b>, and <b>133</b>). In the illustrated situation, the submitter is submitting records <b>104</b><i>p</i>-<b>104</b><i>t</i>, along with linking instructions <b>802</b><i>e </i>that enable block generator <b>408</b> (see <figref idref="DRAWINGS">FIG. <b>4</b></figref>) to construct linked record values in linked record locator fields <b>502</b><i>p</i>, <b>502</b><i>q</i>, and <b>502</b><i>r </i>(see <figref idref="DRAWINGS">FIG. <b>6</b></figref>). For example, an instruction field <b>806</b><i>p </i>identifies that it is for record <b>104</b><i>p</i>, using record identifier <b>304</b><i>p</i>, and that record <b>104</b><i>p </i>should link to records <b>104</b><i>q</i>, <b>104</b><i>r</i>, and <b>104</b><i>k</i>, using record identifiers <b>304</b><i>q</i>, <b>304</b><i>r</i>, and <b>304</b><i>k</i>, respectively. An instruction field <b>806</b><i>q </i>identifies that it is for record <b>104</b><i>q</i>, using record identifier <b>304</b><i>q</i>, and that record <b>104</b><i>q </i>should link to records <b>104</b><i>p</i>, <b>104</b><i>r</i>, and <b>104</b><i>g</i>, using record identifiers <b>304</b><i>p</i>, <b>304</b><i>r</i>, and <b>304</b><i>g</i>, respectively. An instruction field <b>806</b><i>r </i>identifies that it is for record <b>104</b><i>r</i>, using a record identifier <b>304</b><i>r</i>, and that record <b>104</b><i>r </i>should link to records <b>104</b><i>s </i>and <b>104</b><i>t</i>, using record identifiers <b>304</b><i>s </i>and <b>304</b><i>t</i>, respectively. Record identifiers <b>304</b><i>p</i>-<b>304</b><i>r</i>, <b>304</b><i>g</i>, and <b>304</b><i>k</i>, include sufficient information for block generator <b>408</b> to generate the flags, block identifications and indices shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, and/or the linked record value that uses the contents of the linked records (e.g., the SHA-1 first octet).</p><p id="p-0061" num="0071"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a flowchart <b>900</b> of operations associated with generating blockchain <b>100</b> with daisy chained record references. In some examples, at least a portion of flowchart <b>900</b> is performed using one or more computing devices <b>2500</b>. Operation <b>902</b> includes receiving documents, and operation <b>904</b> includes determining related documents, which will be linked. Operation <b>906</b> includes generating document records, and operation <b>908</b> includes generating linking instructions. The record and linking instructions are submitted in operation <b>910</b> and received by a permissioning entity in operation <b>912</b>. The permissioning entity receives records and linking instructions from other submitters in operation <b>914</b>. A current block is generated in operation <b>916</b> and closed in operation <b>918</b>. The closed block is published and distributed in operation <b>920</b> and a record is generated for it in operation <b>922</b>. An IVC (e.g., hash value) for the closed block is published in operation <b>924</b>, to enable later proof of the date-of-existence for the closed block. The closed block is chained to the subsequent block in operation <b>926</b>, by entering the record for the closed block into the subsequent block. Additional records and linking instructions are received from yet other submitters in operation <b>928</b>, and flowchart <b>900</b> returns to operation <b>916</b>, thereby iterating operations <b>916</b> through <b>928</b> for an arbitrary number of chained blocks.</p><p id="p-0062" num="0072"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an expanded view of operation <b>916</b> in a flowchart. As shown, operation <b>916</b> includes operations <b>1002</b> through <b>1024</b>. Operation <b>1002</b> includes generating a final record in a defined format from a received record and includes operations <b>1004</b> through <b>1014</b>. Operation <b>1004</b> includes populating an IVC field with an IVC value; operation <b>1006</b> includes populating an index field with an index value; operation <b>1008</b> includes populating a generator version field with generator version information; operation <b>1010</b> includes populating a timestamp field with a timestamp value; and operation <b>1012</b> includes populating another administrative data field with the proper information.</p><p id="p-0063" num="0073">Operation <b>1014</b> includes populating a linked record locator field and includes operations <b>1016</b> through <b>1020</b>. Operation <b>1016</b> includes generating flags to specify whether a linked record is within the same block or a different block. Operation <b>1018</b> includes adding block identification for those linked records that are in a different block. Operation <b>1020</b> includes adding a linked record value, for example a record index or a portion of the content of the linked record (e.g., the first octet of the SHA-1 message digest). In some examples, adding a linked record value comprises adding a blockchain address for another record. Operation <b>1022</b> iterates operations <b>1016</b> through <b>1020</b> until all links are complete for the current record. Operation <b>1024</b> then iterates operation <b>1002</b> for all submitted records.</p><p id="p-0064" num="0074"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a flowchart <b>1100</b> of operations associated with generating a linking map of daisy chained blockchain records. In some examples, at least a portion of flowchart <b>1100</b> is performed using one or more computing devices <b>2500</b>. Operation <b>1102</b> includes receiving a record containing links, and operation <b>1104</b> includes identifying a linked record locator field. Operation <b>1106</b> includes reading the flag (same block or different block) for the current link. If the flag indicates that the linked record is in a different block, as determined in decision operation <b>1108</b>, that block is retrieved in operation <b>1110</b>. The referenced record is identified in operation <b>1112</b>, and the link is used to add the referenced record to the linking map in operation <b>1114</b>. Operation <b>1116</b> iterates operations <b>1104</b> through <b>1114</b> for all the links in the current record. Operation <b>1118</b> iterates operations <b>1102</b> through <b>1116</b> for all referenced records, thereby exhausting the limits of the daisy chained links. Operation <b>1120</b> reports the results of the linking map, which in some examples, is a list of all related (linked) records. Decision operation <b>1122</b> determines whether a retrieved set of documents is complete, based on whether any daisy chained records do not correspond to a document in the set of documents. If any documents are missing, operation <b>1124</b> generates an alert that one or more documents, corresponding to records identified within the daisy chain, is missing.</p><p id="p-0065" num="0075"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a flowchart <b>1200</b> of operations associated with verifying integrity and a no-later-than date-of-existence for a document. In some examples, at least a portion of flowchart <b>1200</b> is performed using one or more computing devices <b>2500</b>. A contested (or challenged) document is received in operation <b>1202</b>, and operation <b>1204</b> includes generating an IVC (e.g., one or more hash values) for the document. Operation <b>1206</b> includes receiving block identification information, and operation <b>1208</b> includes retrieving the identified block. Operation <b>1210</b> includes receiving the record index, and operation <b>1212</b> includes retrieving the identified record from the block, using the index. Operation <b>1214</b> includes identifying the document IVC in the record, and decision operation <b>1216</b> includes comparing the IVC generated in operation <b>1204</b> with the IVC identified in operation <b>1214</b>. If they are different, then operation <b>1218</b> reports a failure.</p><p id="p-0066" num="0076">If, however, the document IVC match, then operation <b>1220</b> reports success for that first match, and operation <b>1222</b> generates an IVC for the block. The public record is identified in operation <b>1224</b> and the public record is retrieved in operation <b>1226</b>. Operation <b>1228</b> includes identifying the block IVC in the public record, and decision operation <b>1230</b> includes comparing the IVC generated in operation <b>1222</b> with the IVC identified in operation <b>1228</b>. If they are different, then operation <b>1232</b> reports a failure. Otherwise, operation <b>1234</b> reports that the integrity of the contested document has been verified and uses the date of the public record (Retrieved in operation <b>1226</b>) as the no-later-than date-of-existence for the contested document.</p><p id="p-0067" num="0077"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a secure document corral <b>1300</b> that can be used with blockchain <b>100</b>. Secure document corral <b>1300</b> provides access-controlled secure off-chain storage, in order to preserve document confidentiality and ease storage burdens for distributed copies of blockchain <b>100</b>. A set of documents <b>106</b><i>f</i>-<b>106</b><i>t </i>is held within document corral <b>1300</b>. In some examples, document corral <b>1300</b> is stored in a cloud service. In some examples, document corral <b>1300</b> is stored in a physically secure facility, under the control of the operators of blockchain <b>100</b>. In some examples, document corral <b>1300</b> and blockchain <b>100</b> are operated independently, by different entities. Document corral <b>1300</b> advantageously permits storage of large amounts of data, such as large numbers of documents, large documents, or both. Users can trust documents <b>106</b><i>f</i>-<b>106</b><i>t </i>within document corral <b>1300</b> merely by any testing them against blockchain <b>100</b>. In this way, blockchain <b>100</b> is able to establish both integrity and no-later-than date-of-existence for large volumes of data, even while blockchain <b>100</b> itself remains compact. There is thus no need to reproduce the all of documents <b>106</b><i>f</i>-<b>106</b><i>t </i>on every node that has a copy of blockchain <b>100</b> or otherwise participates in the growth or use of blockchain <b>100</b>. Rather, documents <b>106</b><i>f</i>-<b>106</b><i>t </i>are stored in duplication only as needed for backups (e.g., recovery from failures and malicious attacks, such as ransomware) and access by users (e.g., prepositioning at geographically-dispersed nodes for quicker access). This scheme is therefore far more practical for network bandwidth limitations and user storage requirements, and is also more ecologically friendly due to less electricity demands, than in-chain storage blockchains.</p><p id="p-0068" num="0078">An access control <b>1302</b> controls read and write privileges for documents and other data within document corral <b>1300</b>. A set of users <b>1304</b><i>a </i>and <b>1304</b><i>b </i>have both read and write privileges, as permitted by access control <b>1302</b>. A read-only user <b>1306</b> has only read privileges, as enforced by access control <b>1302</b>. A write-only user <b>1308</b> has only write privileges, as enforced by access control <b>1302</b>. In some examples, write-only user <b>1308</b> enters documents into document corral <b>1300</b> that are obtained from other sources, rather than authored by write-only user <b>1308</b>. As illustrated, user <b>1304</b><i>b </i>has a local copy <b>1310</b> of at least some of documents <b>106</b><i>f</i>-<b>106</b><i>t</i>. It should be understood, however, that any of other users <b>1304</b><i>a</i>, <b>1306</b>, and <b>1308</b> can also have local copies of at least some of documents <b>106</b><i>f</i>-<b>106</b><i>t</i>. Access control <b>102</b> restricts access to document corral <b>1300</b> to only users <b>1302</b><i>a</i>, <b>1302</b><i>b</i>, a<b>306</b>, <b>1308</b>, and permissioning entity <b>101</b>. In some examples, each of users <b>1302</b><i>a</i>, <b>1302</b><i>b</i>, a<b>306</b>, <b>1308</b> is restricted to accessing certain directories and/or documents (or files) within document corral <b>1300</b>. That is, in some examples, access control <b>1302</b> does not grant a particular user access to the entirety of document corral <b>1300</b>.</p><p id="p-0069" num="0079">A document monitor <b>1312</b> determines when documents within document corral <b>1300</b> (e.g., any of documents <b>106</b><i>f</i>-<b>106</b><i>t</i>) are new or altered and triggers generation of a blockchain record (e.g., record <b>104</b><i>f</i>) using record generator <b>308</b>. In some examples, permissioning entity <b>101</b> uses record generator <b>308</b> to generate records upon receiving an alert from document monitor <b>1312</b>. In some examples, a user (e.g., user <b>1304</b><i>b</i>) uses record generator <b>308</b> to generate records upon submitting (writing) documents to document corral <b>1300</b>. Upon some trigger event, such as the number of document records awaiting entry into blockchain <b>100</b> reaching a threshold, or a schedule, or some other trigger event, permissioning entity <b>101</b> uses block generator <b>408</b> to generate a new block that includes at least some of the records awaiting entry into blockchain <b>100</b>. Additionally, a linked record field is populated with linked record values, in accordance with linking instructions, if any are provided. In some examples, permissioning entity <b>101</b> follows at least a portion of flowchart <b>900</b> when adding a new block to blockchain <b>100</b>.</p><p id="p-0070" num="0080">Copies of blockchain <b>100</b> are then distributed among users <b>1302</b><i>a</i>, <b>1302</b><i>b</i>, <b>1306</b>, and <b>1308</b>, as well as possibly also stored within document corral <b>1300</b> and made available to any other interested member of the public. It is the widespread distribution of blockchain <b>100</b>, placing copies of blockchain <b>100</b> out of the control of permissioning entity <b>101</b> that renders blockchain <b>100</b> readily tamper-evident. It is this tamper-evident property that provides the trust element because, with any tampering so trivially detectable, an absence of detecting tampering can be interpreted as an absence of tampering having occurred.</p><p id="p-0071" num="0081">Users <b>1304</b><i>a</i>, <b>1304</b><i>b</i>, and <b>1308</b> can use blockchain <b>100</b> to verify that any documents newly added to document corral <b>1300</b> have a corresponding record within a recent block in blockchain <b>100</b>. This can be accomplished easily, merely by hashing a local copy of the document, and searching within blockchain <b>100</b> for any record that contains the hash. In some examples, permissioning entity <b>101</b> alerts the user who submitted the document into document corral (and also other interested parties) the block ID (e.g., a sequential number code assigned to a block) and record index, so that interested parties can go straight to the identified record and verify its accuracy without having to perform a search. If any recently-submitted documents do not have a corresponding record, interested parties can alert permissioning entity <b>101</b>, as well as other interested parties, about the gap, so that permissioning entity <b>101</b> is on notice of a deficiency that requires remediation.</p><p id="p-0072" num="0082">When users <b>1304</b><i>a</i>, <b>1304</b><i>b</i>, and <b>1306</b> retrieve documents from document corral <b>1300</b>, they can use blockchain <b>100</b> to verify that the documents have not changed since the time of the earliest corresponding record within blockchain <b>100</b>. Any documents for which no corresponding record exists within blockchain <b>100</b> (e.g., no record contains the hash value (message digest) of the document) are treated as unverified. Additionally, in the event that any of users <b>1304</b><i>a</i>, <b>1304</b><i>b</i>, and <b>1306</b> retrieves a set of documents from document corral <b>1300</b>, the set of documents can be checked for completeness by using linked record locator fields. (See <figref idref="DRAWINGS">FIGS. <b>5</b>, <b>6</b>, and <b>7</b></figref>.) This can be accomplished by hashing each document within the set and identifying corresponding records for that set of documents. If any records identified within the daisy chain arrangement are missing from the set of corresponding records, the user can then easily identify that a gap exists. Thus, this arrangement provides an additional dimension of trust: Not only are the documents themselves trustworthy (if they pass validation using the records), but the completeness of a given set of documents can also be trusted (if all daisy chained references are accounted for within the set).</p><p id="p-0073" num="0083"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates a flowchart <b>1400</b> of operations associated with using blockchain <b>100</b> with document corral <b>1300</b>. In some examples, at least a portion of flowchart <b>1400</b> is performed using one or more computing devices <b>2500</b>. Operation <b>1402</b> includes providing a document corral (e.g., document corral <b>1300</b>), and granting external entities access to the document corral, based at least on permissions set for the external entities. The associated blockchain (e.g., blockchain <b>100</b>) is generated in operation <b>1404</b>. Users submit new documents and edit (alter) documents within the document corral in operation <b>1406</b>. Additionally, a document monitoring component monitors for additions and alterations. In some examples, users of the document corral are notified when their submitted documents are received.</p><p id="p-0074" num="0084">New records are generated for new and altered documents in operation <b>1408</b>. That is, operation <b>1408</b> includes based at least upon detecting an addition or alteration of a document within the document corral, generating a blockchain record for the document. In some examples, linking data for sets of documents is also generated. In such examples, operation <b>1408</b> includes generating a blockchain record with a linked record value. In some examples, the linked record value indicates a prior version of an altered document. In some examples, the linked record value indicates a second document that is related to a received document. In such examples, the document relationships would need to be identified, such as specified by a user, electronically extracted from a data structure, or perhaps determining that both documents were attachments to a common message or appeared in a common source location. In some examples, users of the document corral are notified when records corresponding to their submitted documents are generated, and at least a portion of the records (e.g., IVCs) are provided to the users.</p><p id="p-0075" num="0085">Operation <b>1410</b> includes extending the blockchain by adding the blockchain record into a new block of the blockchain and adding one or more new blocks to the blockchain. In some examples, operation <b>1410</b> includes the activities described previously for operations <b>916</b>-<b>926</b> of flowchart <b>900</b>. A trigger event can be used for operation <b>1410</b>, such as a threshold number of new records awaiting entry into the blockchain, or a schedule, or some other event. In some examples, users of the document corral are notified when records corresponding to their submitted documents are placed into the blockchain, and blockchain addresses for the records are provided to the users. Operation <b>1412</b> includes distribute copies of the blockchain outside the control of the permissioning entity (e.g., permissioning entity <b>101</b> of <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>), so that the permissioning entity is unable to alter the blockchain without detection. In some examples, distributing copies of the blockchain outside the control of a permissioning entity of the blockchain comprises publishing the blockchain on a website. In decision operation <b>1414</b>, users and other external interested parties verify that newly submitted or altered documents have corresponding records. If any are missing, an alert is generated for the permissioning entity and others (to ensure that the permissioning entity's activities are properly scrutinized), in operation <b>1416</b>. At this point, the permissioning entity should correct the omission, which is checked in decision operation <b>1418</b>. If the permissioning entity fails to correct the omission, affected users should find a blockchain managed by a different permissioning entity, as operation <b>1420</b>, and start again at operation <b>1402</b> with the new blockchain, document corral, and permissioning entity.</p><p id="p-0076" num="0086">Users retrieve documents from the document corral, either individually or in sets, in operation <b>1422</b>. Operation <b>1424</b> includes validating individual documents according to flowchart <b>1200</b>, or some other similar process. In operation <b>1426</b>, users ensure that the set of documents retrieved is complete. Users can traverse the linked record locator fields (if applicable) to rebuild a daisy chain of document relationships, as described for operations <b>1102</b>-<b>1120</b> of flowchart <b>1100</b>. The set of documents is compared with the reported linking map results, in operation <b>1428</b>. The completeness of the set is determined in decision operation <b>1430</b>, and if any documents are missing, an alert is generated in operation <b>1432</b>. The alert may be sent to permissioning entity, the specific user, and even others, in an attempt to ensure that the operations of document corral <b>1300</b> are subjected to proper scrutiny.</p><p id="p-0077" num="0087"><figref idref="DRAWINGS">FIG. <b>15</b></figref> illustrates a secure document corral <b>1300</b> with a quarantine <b>1500</b> that enhances security over the arrangement shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>. For clarity, not all elements of <figref idref="DRAWINGS">FIG. <b>13</b></figref> are reproduced in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, although it should be understood that any components or capability described for <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>14</b></figref> may also be available for the arrangement shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. User <b>1304</b><i>a </i>(or another user) has placed document <b>106</b><i>t </i>into document corral <b>1300</b>, and a record <b>1510</b><i>t </i>for document <b>106</b><i>t </i>is within blockchain <b>100</b>, specifically, within block <b>102</b><i>a </i>at index <b>1512</b><i>t</i>. The block ID of block <b>102</b><i>a </i>and the value of index <b>1512</b><i>t </i>form an address of record <b>1510</b> within blockchain <b>100</b>.</p><p id="p-0078" num="0088">A trigger event has identified document <b>106</b><i>t </i>as problematic. For example, document <b>106</b><i>t </i>may have material that comprises privacy violations, intellectual property rights violations, malicious logic, and/or obscenity. Triggers may include periodic scans, the addition of new documents into document corral, or events such as user <b>1304</b><i>a </i>or another entity (e.g. permissioning entity <b>101</b>) is provided a notice from a law enforcement authority, a court, an attorney, or source indicating that distribution of document <b>106</b><i>t </i>will create a legal liability. Alternatively, a scanner <b>1520</b> monitors documents (e.g., document <b>106</b><i>t</i>) within document corral <b>1300</b> for quarantine triggers, for example, by scanning the documents for problematic material. In some examples, quarantine triggers are selected from the list consisting of: privacy violations, intellectual property rights violations, malicious logic, and obscenity.</p><p id="p-0079" num="0089">Scanner <b>1520</b> identifies that document <b>106</b><i>t </i>is to be quarantined on its own, or by user <b>1304</b><i>a </i>flagging document <b>106</b><i>t </i>to scanner <b>1520</b>. Based at least upon determining that document <b>106</b><i>t </i>is to be quarantined, scanner <b>1520</b>, or another suitable component, moves document <b>106</b><i>t </i>into document quarantine <b>1500</b>, which provides quarantine storage capability. That is, scanner <b>1520</b> (or some other suitable component) removes document <b>106</b><i>t </i>from document corral <b>1300</b> and places a copy within document quarantine <b>1500</b>. Scanner <b>1520</b> then also forwards a copy of document <b>106</b><i>t </i>to a cleaner <b>1522</b> to generate document <b>106</b><i>u </i>as a replacement for document <b>106</b><i>t </i>in document corral <b>1300</b>. In some examples, cleaner <b>1522</b> generates document <b>106</b><i>u </i>from document <b>106</b><i>t </i>by removing material that triggered quarantine. In some examples, cleaner <b>1522</b> generates document <b>106</b><i>u </i>as a summary of document <b>106</b><i>t. </i></p><p id="p-0080" num="0090">Document <b>106</b><i>u </i>is thus a cleaned version of document <b>106</b><i>t</i>, which represents document <b>106</b><i>t</i>, and is placed into document corral <b>1300</b>. Document <b>106</b><i>u </i>should therefore not trigger quarantine. Records <b>1510</b><i>u </i>is generated for document <b>106</b><i>u </i>using record generator <b>308</b> and block generator <b>408</b>, and added into blockchain <b>100</b> (in block <b>102</b><i>d </i>at index <b>1512</b><i>u</i>). Record <b>1510</b><i>u </i>has linking information in a linked record field <b>1514</b>. In some examples, linked record field <b>1514</b> is the same format as linked record locator field <b>502</b><i>p </i>of <figref idref="DRAWINGS">FIG. <b>5</b></figref>. This provides a no-later-than date-of-existence for document <b>106</b><i>u</i>, which is a provable date for a clean version of document <b>106</b><i>t</i>. Cleaner <b>1522</b> provides the relationship information for documents <b>106</b><i>t </i>and <b>106</b><i>u </i>to a cross-reference component <b>1524</b>, which generates linking instructions (e.g., linking instructions <b>802</b><i>e</i>) to place into linked record field <b>1514</b>. As indicated, linked record field <b>1514</b> indicates the blockchain address of record <b>1510</b><i>t</i>. In some examples, linked record field <b>1514</b> also includes identification of document <b>106</b><i>t </i>and/or a quarantine location (e.g., document quarantine <b>1500</b>) of document <b>106</b><i>t</i>. This quarantine process may be recursive. For example, if quarantine conditions change to include material within document <b>106</b><i>u</i>, document <b>106</b><i>u </i>may be moved into document quarantine <b>1500</b> and this process repeated using a new cleaned version of document <b>106</b><i>u. </i></p><p id="p-0081" num="0091">In some examples, a cleaned reference document <b>106</b><i>v </i>permits rapid cross referencing of documents <b>106</b><i>t </i>and <b>106</b><i>u</i>. For example, cleaned reference document <b>106</b><i>v </i>may include document identifiers (e.g., document names) for both documents <b>106</b><i>t </i>and <b>106</b><i>u</i>, along with an annotation that document <b>106</b><i>t </i>is the original document, which is now stored in document quarantine <b>1500</b>, and document <b>106</b><i>u </i>is the replacement in document corral <b>1300</b>. In some examples, cleaner <b>1522</b> generated cleaned reference document <b>106</b><i>v</i>. In some examples, cleaned reference document <b>106</b><i>v </i>includes at least one item selected from the list consisting of: identification of document <b>106</b><i>t</i>, identification of a quarantine location (e.g., document quarantine <b>1500</b>) of document <b>106</b><i>t</i>, a blockchain address of record <b>1510</b><i>t</i>, identification of document <b>106</b><i>u</i>, and a blockchain address of record <b>1510</b><i>u</i>. In some examples, cleaned reference document <b>106</b><i>v </i>is created or updated after record <b>1510</b><i>u </i>is placed into blockchain <b>100</b>, so that the address of record <b>1510</b><i>u </i>is known. In some examples, one cleaned reference document is generated for each pair of quarantined and cleaned documents. In some examples, a cleaned reference document contains identification of multiple pairs of quarantined and cleaned documents, and is appended with new pairs, as more documents go into document quarantine <b>1500</b>.</p><p id="p-0082" num="0092">With document <b>106</b><i>t </i>having been removed from document corral <b>1300</b>, proving the integrity and no-later-than date-of-existence for document <b>106</b><i>t </i>requires additional work. In one example, for example if document <b>106</b><i>t </i>had contained malware rather than illegal material, user <b>1304</b><i>a </i>may be willing to retrieve a copy of document <b>106</b><i>t </i>from document quarantine <b>1500</b> via access control <b>1502</b>. This may be the case, for example, if since the time that document <b>106</b><i>t </i>had been placed into document quarantine <b>1500</b>, the anti-virus (or other malware protection on the computer of user <b>1304</b><i>a</i>) had improved sufficiently that document <b>106</b><i>t </i>no longer presents a significant threat. For security, though access control <b>502</b> for document quarantine <b>1500</b> may be more stringent, such as with fewer authorized users and/or a stricter authentication scheme, than access control <b>1302</b> for document corral <b>1300</b>.</p><p id="p-0083" num="0093">In some scenarios, user <b>1304</b><i>a </i>cannot or prefers to not access document <b>106</b><i>t </i>in document quarantine <b>1500</b>. A trusted entity <b>1504</b>, however has access to document quarantine <b>1500</b> and can retrieve it for verifying that it matches record <b>1510</b><i>t</i>. That is, trusted entity <b>1504</b> establishes a no-later-than date of existence for document <b>106</b><i>t </i>using blockchain <b>100</b> by generating an IVC for document <b>106</b><i>t</i>; comparing the generated IVC for document <b>106</b><i>t </i>with a recorded IVC within record <b>1510</b><i>t </i>within blockchain <b>100</b>; and reporting a no-later-than date of existence for an earliest block (e.g., block <b>102</b><i>a</i>) that contains the recorded IVC. In such scenarios, however, it may be required that a document challenger or arbiter accept the reporting of trusted entity <b>1504</b>. Although this may be an imperfection in the concept of a blockchain providing self-evident proof, in this manner, even documents containing problematic material can have a version of a provable no-later-than date-of-existence.</p><p id="p-0084" num="0094">In some examples, documents are submitted to scanner <b>1520</b> prior to being placed into document corral <b>1300</b>. In the illustrated scenario, document <b>106</b><i>w </i>is submitted to scanner <b>1520</b> and goes straight into document quarantine <b>1500</b> without first being placed into document corral <b>1300</b>. In this scenario, a cleaned document <b>106</b><i>x</i>, representing document <b>106</b><i>w </i>but without the problematic material, is placed into document corral <b>1300</b>.</p><p id="p-0085" num="0095"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates scenarios of blockchains being in compliance or non-compliance of legal requirements. Four scenarios are presented. In scenario <b>16001</b>, an in-chain storage blockchain <b>1600</b><i>a </i>holds a copy of document <b>106</b><i>t </i>in block <b>1602</b><i>a</i>. That hash value (hash function message digest) of block <b>1602</b><i>a </i>is calculated by hashing the combination of at least documents <b>106</b><i>t </i>and <b>106</b><i>y</i>. This value is stored as hash value <b>1612</b><i>a </i>in block <b>1602</b><i>b</i>. The hash value of block <b>1602</b><i>b </i>is calculated by hashing the combination of at least hash value <b>1612</b><i>a </i>and document <b>106</b><i>z</i>. This value is stored as hash value <b>1612</b><i>b </i>in block <b>1602</b><i>c</i>, which is shown as holding document <b>106</b><i>zz. </i></p><p id="p-0086" num="0096">However, document <b>106</b><i>t </i>is subject to a court order or law enforcement requirement to destroy all copies. For example, document <b>106</b><i>t </i>may be a privacy violation or obscene material. Document <b>106</b><i>t </i>is removed from all copies of blockchain <b>1600</b><i>a</i>. The result is that hashing block <b>1602</b><i>a </i>now produces a hash value that no longer matches hash value <b>1612</b><i>a</i>. This breaks the chain because block <b>1602</b><i>a </i>can no longer be proven to have existed prior to the calculation of hash value <b>1612</b><i>b</i>. Unfortunately, document <b>106</b><i>t </i>is not the only document negatively affected. Without being able to prove the location of the modified version of block <b>1602</b><i>a </i>(the version missing document <b>106</b><i>t</i>) within blockchain <b>1600</b><i>a</i>, the value of having placed document <b>106</b><i>y </i>within blockchain <b>1600</b><i>a </i>is also damaged. The removal of documents from an in-chain storage blockchain threatens to destroy the protection for all documents within the same and earlier blocks.</p><p id="p-0087" num="0097">In scenario <b>16002</b>, an in-chain storage blockchain <b>1600</b><i>b </i>is similarly configured and holds a copy of document <b>106</b><i>t </i>in block <b>1602</b><i>a</i>. However, knowing the effect that removing document <b>106</b><i>t </i>had on blockchain <b>1600</b><i>a</i>, the community that maintains blockchain <b>1600</b><i>b </i>does not remove document <b>106</b><i>t</i>, despite the court order or law enforcement requirement. Anyone possessing a copy of blockchain <b>1600</b><i>b </i>(at least the portion that includes block <b>1602</b><i>a</i>) is committing a legal violation. The prospects indicated in scenarios <b>16001</b> and <b>16002</b> can thus threaten the long term viability of in-chain storage blockchains.</p><p id="p-0088" num="0098">In contrast, for scenario <b>16003</b>, when document <b>106</b><i>t </i>is removed from document corral <b>1300</b>, blockchain <b>100</b> is unaffected and therefore unbroken. The record for document <b>106</b><i>t </i>cannot be used to recreate the problematic content, and so does not require removal. Although the protection of document <b>106</b><i>t </i>that had been provided by blockchain <b>100</b> is now gone, blockchain <b>100</b> is in legal compliance, and the no-later-than dates of existence for documents <b>106</b><i>y</i>, <b>106</b><i>z </i>and <b>106</b><i>zz </i>can still be proven. Scenario <b>16004</b> involves moving document <b>106</b><i>t </i>into document quarantine <b>1500</b>, rather than merely deleting it. If document quarantine <b>1500</b> is handled properly, such as by storing documents outside the jurisdiction of the relevant court or law enforcement agency, or perhaps by operating document quarantine <b>1500</b> in a manner that is blessed by the relevant court or law enforcement agency, the proof for document <b>106</b><i>t </i>may yet persist, even with legal compliance.</p><p id="p-0089" num="0099"><figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates a flowchart <b>1700</b> of operations associated with using blockchain <b>100</b> with a quarantine-capable version of document corral <b>1300</b> (e.g., with document quarantine <b>1500</b>), as shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>. In some examples, at least a portion of flowchart <b>1700</b> is performed using one or more computing devices <b>2500</b>. Operation <b>1702</b> includes providing a document corral, a document quarantine, and access to users. In some examples providing access to the document quarantine includes providing access to a trusted entity. A first document is received at <b>1704</b>. In some examples, the received first document is placed into the document corral, in operation <b>1706</b>. Operation <b>1708</b> then includes generating a first blockchain record for the first document and adding the first blockchain record into the blockchain. Operation <b>1710</b> includes monitoring documents within the document corral for quarantine triggers. In some examples, quarantine triggers are selected from the list consisting of: privacy violations, intellectual property rights violations, malicious logic, and obscenity.</p><p id="p-0090" num="0100">In some examples, however, the received first document is not placed into the document corral until after it has been checked for quarantine triggers. In such examples, operation <b>1710</b> follows operation <b>1704</b>. Decision operation <b>1712</b> determines whether the first document is to be quarantined. If not, flowchart <b>1700</b> returns to operation <b>1706</b>, in which the first document is placed into the document corral or permitted to remain there. Even though a trigger condition has not yet been identified, it is possible that a trigger condition may arise in the future.</p><p id="p-0091" num="0101">If decision operation <b>1712</b> identifies that the first document is to be quarantined, operation <b>1714</b> includes, based at least upon determining that the first document is to be quarantined, moving the first document into the document quarantine. In some examples, this includes removing the first document from the document corral. A cleaned document is generated in operation <b>1716</b>. For example, operation <b>1716</b> includes generating a second document as a replacement for the first document in the document corral, the second document not triggering quarantine. In some examples, generating the second document from the first document includes removing material that triggered quarantine. In some examples, the second document is a summary of the first document.</p><p id="p-0092" num="0102">Operation <b>1718</b> includes generating a second blockchain record for the second document and adding the second blockchain record into the blockchain. In some examples, generating a second blockchain record for the second document includes generating a blockchain record with a linked record value. In some examples, the linked record value indicates a blockchain address of the first record. In some examples, the linked record value indicates the first document. In some examples, the linked record value indicates quarantine storage. Operation <b>1720</b> includes generating a cleaned reference document. In some examples, the cleaned reference document includes at least one item selected from the list consisting of: identification of the first document, identification of a quarantine location of the first document, a blockchain address of the first record, identification of the second document, and a blockchain address of the second record.</p><p id="p-0093" num="0103">At this point, the conditions are set for later proving integrity and no-later-than dates of existence for at least the first (quarantined) and second (cleaned) documents. The cleaned reference document may also be set up for date proof, although its value is less than establishing its age than in permitting rapid identification and/or location of one of the first and second documents from the other. The date proof is similar as has been described earlier for proving ages and integrity for documents and traversing a daisy chain. Operation <b>1722</b> includes retrieving the second document from the document corral and determining integrity or a no-later-than date of existence for the second document using the blockchain. The date proof of the second document may, however, be less important than the date proof of the first document, and so may be skipped in some examples.</p><p id="p-0094" num="0104">Operation <b>1724</b> includes identifying, within a linked record locator field of the second blockchain record, a linked record value for the first document. In some examples, this is the first blockchain record, whereas in some examples, it is another locator or document identifier. Once the first document is located, operation <b>1726</b> includes retrieving the first document from the document quarantine. Operation <b>1728</b> includes locating the first blockchain record within the blockchain and determining a no-later-than date of existence for the first document using the blockchain and the first blockchain record. In some examples, a normal user retrieves the first document from the document quarantine and determines the date, hopefully without encountering problems related to the reason for the quarantine. In some examples, however, the trusted entity performs operations <b>1724</b>-<b>1728</b>. In such examples, the assurance from the trusted entity is the key to establishing the date for the first document. This is because anyone can independently identify (with certainty) a no-later-than date for the first blockchain record. However, only the trusted entity can hash the first document, if the document quarantine access is so limited. Therefore, operation <b>1730</b> includes receiving, from the trusted entity, assurance that the first blockchain record matches the first document. This assurance completes the proof for date and integrity.</p><p id="p-0095" num="0105"><figref idref="DRAWINGS">FIG. <b>18</b></figref> illustrates the use of a network message for timestamping a block. A digital item <b>1810</b>, for example an electronic document such as an image, a video or audio recording, a word processing document, a spreadsheet, a presentation, a token or cryptocurrency transaction, a token or cryptocurrency ledger, or any other digital file, is to be registered in blockchain <b>100</b>. Item <b>1810</b> is sent to an intake <b>1812</b> (e.g., a node operated by permissioning entity or some other node or device), that uses a record generator <b>1808</b> to generate a rapid record <b>1804</b><i>a </i>for item <b>1810</b>. As illustrated, rapid record <b>1804</b><i>a </i>includes a first hash value <b>1820</b> for item <b>1810</b>, a second hash value <b>1822</b> for item <b>1810</b>, and an index <b>1824</b>, such as the count of rapid records having been generated since some reference time or event (e.g., on a particular date). Intake <b>1812</b> also submits item <b>1810</b> to document corral <b>1300</b>. A record for item <b>1810</b>, and other items within document corral <b>1300</b>, will appear within blockchain <b>100</b> as described in relation to <figref idref="DRAWINGS">FIG. <b>13</b></figref>.</p><p id="p-0096" num="0106">In some examples, hash values <b>1820</b> and <b>1822</b> include one or more portions of the SHA-1, SHA-224, SHA-256, SHA-384, and the SHA-512 message digests. The use of two different hash values significantly increases resistance to second preimage attacks. Together hash values <b>1820</b> and <b>1822</b> form an IVC for item <b>1810</b>. In some examples, rapid record <b>1804</b><i>a </i>will appear as a short message service (SMS) message. A single SMS message has a character limit of around 160 characters, unless multiple messages are strung together. A single SMS is able to hold SHA-1 and SHA-384, and still have 24 characters remaining for index <b>1824</b> and other data. A 4-character hexadecimal index field can indicate up to 65,535, which is sufficient to issue a new record index number every minute for an entire week, prior to resetting. A 3-character index field is sufficient to issue a new record index number every minute for an entire day, and leaves more than 20 characters for other administrative data or codes, such as versioning numbers. In some examples, rapid record <b>1804</b><i>a </i>is also submitted to document corral <b>1300</b>.</p><p id="p-0097" num="0107">Rapid record <b>1804</b><i>a </i>is entered into a rapid block <b>1802</b><i>a</i>, which may also be submitted to document corral <b>1300</b>. As illustrated, rapid block <b>1802</b><i>a </i>holds rapid record <b>1804</b><i>a</i>, subsequent rapid records <b>1804</b><i>b </i>and <b>1804</b><i>c</i>, and a rapid record <b>1804</b>Z for a prior rapid block, thereby chaining rapid block <b>1802</b><i>a </i>and the prior rapid block. A network message generator <b>1818</b> generates a network message <b>1806</b><i>a</i>, and includes an IVC generator to generate hash value <b>1830</b> and hash value <b>1832</b> for inclusion within network message <b>1806</b><i>a</i>. In some examples, network message <b>1806</b><i>a </i>comprises an SMS message. In some examples, network message <b>1806</b><i>a </i>comprises a social media post, such as on Twitter or another social media network. Some examples use network messages that are derived from rapid blocks (as just described), some examples use network messages that are copies or near copies of rapid records, and some examples use both. In either case, network message <b>1806</b><i>a </i>indicates rapid record <b>1804</b><i>a</i>. Network message <b>1806</b><i>a </i>also includes an index <b>1834</b>.</p><p id="p-0098" num="0108">Network message <b>1806</b><i>a </i>is submitted to a public messaging network <b>1840</b> for broadcasting. Network message <b>1806</b><i>a </i>may also be submitted to document corral <b>1300</b>, whether by messaging network <b>1840</b> or another entity that generated network message <b>1806</b><i>a </i>for submission to messaging network <b>1840</b>. Messaging network <b>1840</b> timestamps network message <b>1806</b><i>a </i>and broadcasts network message <b>1806</b><i>a </i>over public network <b>1846</b>, which may be a wireless or wired network. For example, public network <b>1846</b> may be a cellular network, a widely-distributed e-mail, or a website on the internet. As illustrated, messaging network <b>1840</b> stores network message <b>1806</b><i>a </i>and other network messages <b>1806</b><i>b</i>-<b>1806</b><i>d </i>in its storage <b>1842</b>, for at least a while. Timestamps <b>1844</b> holds timestamping information for network messages <b>1806</b><i>a</i>-<b>1806</b><i>d. </i></p><p id="p-0099" num="0109">A monitoring node <b>1850</b>, for example a third party that is unrelated to item <b>1810</b>, has no knowledge of the contents of item <b>1810</b>, and thus has no interest in falsifying data with regards to item <b>1810</b> monitors public network <b>1846</b> with a monitoring component <b>1856</b>. Monitoring component <b>1856</b> is able to receive broadcasts from public network <b>1846</b>. As illustrated, monitoring node <b>1850</b> stores received network message <b>1806</b><i>a </i>and other received network messages <b>1806</b><i>b</i>-<b>1806</b><i>d </i>that had been broadcast by messaging network <b>1840</b>, in its storage <b>1852</b>. In some examples, monitoring node <b>1850</b> timestamps network messages <b>1806</b><i>a</i>-<b>1806</b><i>d </i>as they are received, and stores them in timestamps <b>1854</b>. Timestamps <b>1854</b> may provide an independent time verification source for network messages <b>1806</b><i>a</i>-<b>1806</b><i>d</i>, that are outside the control of messaging network <b>1840</b>. As shown, any of network messages <b>1806</b><i>a</i>-<b>1806</b><i>d</i>, timestamps <b>1844</b>, and timestamps <b>1854</b> may be submitted to document corral for inclusion in blockchain <b>100</b>.</p><p id="p-0100" num="0110">Although messaging network <b>1840</b> may eventually delete network messages <b>1806</b><i>a</i>-<b>1806</b><i>d </i>and timestamps <b>1844</b>, and monitoring node <b>1850</b> may cease operations, thereby losing network messages <b>1806</b><i>a</i>-<b>1806</b><i>d </i>timestamps <b>1854</b>, public records <b>112</b><i>a</i>-<b>112</b><i>d </i>provide permanent, truly independent date proof for copies of network messages <b>1806</b><i>a</i>-<b>1806</b><i>d </i>within document corral <b>1300</b>. Although public records <b>112</b><i>a</i>-<b>112</b><i>d </i>do not have the fine time resolution of timestamps <b>1844</b> and <b>1854</b>, they are independently verifiable and permanent.</p><p id="p-0101" num="0111"><figref idref="DRAWINGS">FIG. <b>19</b></figref> illustrates a timeline <b>1910</b> of using network messages for timestamping blocks. A rapid parallel blockchain <b>1900</b> runs in parallel with blockchain <b>100</b>, but has a finer time resolution, for example a resolution on the order of a minute or an hour. In some examples, permissioning entity <b>101</b> may also manage blockchain <b>1900</b>. Although blockchain <b>1900</b> has a finer time resolution than blockchain <b>100</b>, and so thus may provide greater value in the context of tracking cryptocurrency transactions or critical event timing for digital evidence, blockchain <b>1900</b> provides only inherent ordinal timing proof and, for some time resolutions, cannot match the time resolution with a printed public record (e.g., a printed publication, such as a newspaper ad). Cardinal timing proof may, in some examples, be provided externally by another entity, such as a cellular network carrier that stores SMS with timestamps, such as timestamps <b>1844</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref>. Such timing data, being in the control of an entity that may have no interest in facilitating the operation or value of blockchain <b>1900</b>, may eventually disappear. And further, it is not truly independently verifiable, as anyone challenging the timing of a record within blockchain <b>1900</b> must trust the accuracy of the timestamps&#x2014;which may require trusting the entity generating and storing the timestamps (e.g., messaging network <b>1840</b> of <figref idref="DRAWINGS">FIG. <b>18</b></figref>). Fortunately, however, the cardinal timing of the contents of blockchain <b>1900</b> are independently verifiable using blockchain <b>100</b>, although at the coarser time resolution of blockchain <b>100</b>.</p><p id="p-0102" num="0112">In some scenarios, as time lapses, the need for finer time resolution lessens. Consider, for example, cryptocurrency transactions. If a cryptocurrency holder is attempting to spend a particular cryptocurrency unit that was received only a matter of hours prior, blockchain <b>1900</b> may be able to establish that the cryptocurrency holder is the proper owner. However, the transaction in which the cryptocurrency holder received the particular cryptocurrency unit may not yet be established by blockchain <b>100</b>. In this scenario, the potential recipient, such as a retailer that accepts the cryptocurrency, does not trust blockchain <b>1900</b>, because the retailer does not trust timestamps created by a messaging network operator. However, the potential recipient does trust blockchain <b>100</b>, because blockchain <b>100</b> is independently verifiable. When sufficient time has passed that blockchain <b>100</b> can verify the transaction (in which the cryptocurrency holder received the particular cryptocurrency unit), the cryptocurrency holder will be able to spend the cryptocurrency unit with potential recipients that only trust blockchain <b>100</b> but not blockchain <b>1900</b>.</p><p id="p-0103" num="0113">In some examples, rapid parallel blockchain <b>1900</b> issues new blocks on the order of a minute, using SMS messages <b>1806</b><i>a</i>-<b>1806</b><i>f </i>for timestamping. Although such timestamps (e.g., timestamps <b>1844</b>) have a finer resolution than the intervals between public records <b>112</b><i>a</i>, <b>112</b><i>b</i>, and <b>112</b><i>c</i>, the timestamps are under the control of messaging network <b>1840</b>. This means that, to at least some extent, messaging network <b>1840</b> must be trusted to timestamp network messages accurately. For long term storage, when messaging network <b>1840</b> no longer has any interest in maintaining timestamp data and copies of network messages, the reliability of the timestamps may be determined by the reliability of the entity controlling the long term storage of the messages.</p><p id="p-0104" num="0114">This is where the inclusion of the blocks <b>1802</b><i>a</i>-<b>1802</b><i>f </i>of rapid parallel blockchain <b>1900</b> within blockchain <b>100</b> provides value (and also including network messages <b>1806</b><i>a</i>-<b>1806</b><i>f </i>within blockchain <b>100</b>). In the long term, it can be established that the initially-applied timestamps (by messaging network <b>1840</b>) had not been altered. Even if messaging network <b>1840</b> ceases operations and all of its records are lost. Blockchain <b>100</b> may run at a rate in which new blocks are generated hourly, daily, at set intervals each day, or some other interval (which may vary). For example, blocks for blockchain <b>100</b> may be generated at 9 am, noon, and 5 pm in selected time zones, such as one or more of Coordinated Universal Time (UTC), Eastern US, Pacific US, Japan Standard Time, and others. In some examples, blocks for blockchain <b>100</b> may be generated at different time intervals on weekends and holidays. Although, in some examples, publication intervals for public records <b>112</b><i>a</i>, <b>112</b><i>b</i>, and <b>112</b><i>c </i>(of <figref idref="DRAWINGS">FIGS. <b>1</b>A and <b>18</b></figref>) may be daily or slower, if blocks for blockchain <b>100</b> are generated at a more rapid rate, multiple IVCs for the multiple closed blocks closed (during each publication interval) may be published in each of public records <b>112</b><i>a</i>, <b>112</b><i>b</i>, and <b>112</b><i>c</i>. For example, public record <b>112</b><i>a </i>may have nine advertisements representing three block closing times (9 am, noon, and 5 pm) in each of three time zones.</p><p id="p-0105" num="0115">In operation, records <b>1804</b><i>a</i>-<b>1804</b><i>d </i>arrive during a time window <b>1904</b><i>a</i>, and are included in block <b>1802</b><i>a</i>. Block <b>1802</b><i>a </i>becomes part of blockchain <b>1900</b>. Network message <b>1806</b><i>a </i>is generated from block <b>1802</b><i>a </i>for broadcast, and is timestamped. Record <b>1804</b><i>e </i>is generated for block <b>1802</b><i>a </i>during a next time window <b>1904</b><i>b</i>. Additional records <b>1804</b><i>f </i>and <b>1804</b><i>g </i>arrive during time window <b>1904</b><i>b</i>. Records <b>1804</b><i>e</i>-<b>1804</b><i>g </i>are included in block <b>1802</b><i>b</i>. Record <b>1804</b><i>e </i>chains blocks <b>1802</b><i>a </i>and <b>1802</b><i>b</i>, and block <b>1802</b><i>b </i>becomes part of blockchain <b>1900</b>. Network message <b>1806</b><i>b </i>is generated from block <b>1802</b><i>b </i>for broadcast, and is timestamped. Record <b>1804</b><i>h </i>is generated for block <b>1802</b><i>b </i>during a next time window <b>1904</b><i>c</i>. Additional records <b>1804</b><i>i </i>and <b>1804</b>J arrive during time window <b>1904</b><i>c</i>. Records <b>1804</b><i>h</i>-<b>1804</b>J are included in block <b>1802</b><i>c</i>. Record <b>1804</b><i>h </i>chains blocks <b>1802</b><i>b </i>and <b>1802</b><i>c</i>, and block <b>1802</b><i>c </i>becomes part of blockchain <b>1900</b>. Network message <b>1806</b><i>c </i>is generated from block <b>1802</b><i>c </i>for broadcast, and is timestamped. Record <b>1804</b><i>k </i>is generated for block <b>1802</b><i>c </i>during a next time window <b>1904</b><i>d</i>. Additional records <b>1804</b>L and <b>1804</b><i>m </i>arrive during time window <b>1904</b><i>d. </i></p><p id="p-0106" num="0116">Records <b>1804</b><i>k</i>-<b>1804</b><i>m </i>are included in block <b>1802</b><i>d</i>. Record <b>1804</b><i>k </i>chains blocks <b>1802</b><i>c </i>and <b>1802</b><i>d</i>, and block <b>1802</b><i>d </i>becomes part of blockchain <b>1900</b>. Network message <b>1806</b><i>d </i>is generated from block <b>1802</b><i>d </i>for broadcast, and is timestamped. Record <b>1804</b><i>n </i>is generated for block <b>1802</b><i>d </i>during a next time window <b>1904</b><i>e</i>. No additional records arrive during time window <b>1904</b><i>e</i>, so only records <b>1804</b><i>n </i>is included in block <b>1802</b><i>e</i>. Record <b>1804</b><i>n </i>chains blocks <b>1802</b><i>d </i>and <b>1802</b><i>e</i>, and block <b>1802</b><i>e </i>becomes part of blockchain <b>1900</b>. Network message <b>1806</b><i>e </i>is generated from block <b>1802</b><i>e </i>for broadcast, and is timestamped. Record <b>1804</b><i>o </i>is generated for block <b>1802</b><i>e </i>during a next time window <b>1904</b><i>f</i>. Additional records <b>1804</b><i>p</i>, <b>1804</b><i>q</i>, and <b>1804</b><i>r </i>arrive during time window <b>1904</b><i>c</i>. Records <b>1804</b><i>o</i>-<b>1804</b><i>r </i>are included in block <b>1802</b><i>f</i>. Record <b>1804</b><i>o </i>chains blocks <b>1802</b><i>e </i>and <b>1802</b><i>f</i>, and block <b>1802</b><i>f </i>becomes part of blockchain <b>1900</b>. Network message <b>1806</b><i>f </i>is generated from block <b>1802</b><i>f </i>for broadcast, and is timestamped. Record <b>1804</b><i>s </i>is generated for block <b>1802</b><i>d </i>during a next time window, and this process repeats. Blocks <b>1802</b><i>a</i>-<b>1802</b><i>f </i>and possibly also network messages <b>1806</b><i>a</i>-<b>1806</b><i>f </i>are put into blockchain <b>100</b>. As illustrated, time windows <b>1904</b><i>a</i>-<b>1904</b><i>c </i>are portions of time window <b>1902</b><i>a</i>, so blocks <b>1802</b><i>a</i>-<b>1802</b><i>c </i>of blockchain <b>1900</b> become part of block <b>102</b><i>a </i>of blockchain <b>100</b>. Time windows <b>1904</b><i>d</i>-<b>1904</b><i>f </i>are portions of time window <b>1902</b><i>b</i>, so blocks <b>1802</b><i>d</i>-<b>1802</b><i>f </i>of blockchain <b>1900</b> become part of block <b>102</b><i>b </i>of blockchain <b>100</b>. In some examples, the ratio of the number of time windows for blocks of blockchain <b>1900</b> to the number of time windows for blocks of blockchain <b>100</b> are significantly different, such as on the order of hundreds or even thousands.</p><p id="p-0107" num="0117"><figref idref="DRAWINGS">FIG. <b>20</b></figref> illustrates the use of a digital evidence bag (DEB) with blockchain <b>100</b>, and optionally rapid parallel blockchain <b>1900</b>. Evidence is collected digitally from a scene <b>2002</b> using sensor <b>2004</b><i>a </i>and sensor <b>2004</b><i>b </i>of an evidence collection device <b>2006</b>. In some examples, sensors <b>2004</b><i>a </i>and <b>2004</b><i>b </i>comprise a camera and a microphone, respectively, although a different set and number of sensors may be used. Evidence collection device <b>2006</b> has a local evidence store <b>2008</b> that holds evidence item <b>1810</b><i>a </i>and evidence item <b>1810</b><i>b</i>, collected from scene <b>2002</b>. In some examples, evidence collection device <b>2006</b> is an instance of intake <b>1812</b> (of <figref idref="DRAWINGS">FIG. <b>18</b></figref>). In some examples, a network message generator <b>1818</b> on evidence collection device <b>2006</b> generates a network message <b>1806</b><i>g </i>and a network message <b>1806</b><i>h</i>. In some examples, network messages <b>1806</b><i>g </i>and <b>1806</b><i>h </i>comprise SMS messages.</p><p id="p-0108" num="0118">Evidence collection device <b>2006</b> sends evidence items <b>1810</b><i>a </i>and <b>1810</b><i>b </i>to a DEB operator <b>2010</b> over a network <b>2522</b>. DEB operator <b>2010</b> has a local evidence store <b>2012</b> that holds evidence items <b>1810</b><i>a </i>and <b>1810</b><i>b </i>from evidence collection device <b>2006</b>, and also evidence item <b>1810</b><i>c </i>from potentially another source. DEB operator <b>2010</b> has a rapid block generator <b>2014</b> that generates a rapid block for all evidence items collected within a prior time period, such as the prior two minutes. For example, a record may be generated for each of evidence items <b>1810</b><i>a</i>-<b>1810</b><i>c</i>, and placed into a block <b>1802</b><i>i</i>. In some examples, DEB operator <b>2010</b> has a network message generator <b>1818</b> that generates network message <b>1806</b><i>i </i>(for example, an SMS) indicating block <b>1802</b><i>i</i>, for example using the processes described in relation to <figref idref="DRAWINGS">FIG. <b>18</b></figref>.</p><p id="p-0109" num="0119">Messaging network <b>1840</b> receives network messages <b>1806</b><i>g</i>-<b>1806</b><i>i </i>for broadcast (e.g., over public network <b>1846</b>), timestamps them, and stores their timestamps in timestamps <b>1844</b>. Messaging network <b>1840</b> may receive network messages from any of evidence collection device <b>2006</b>, DEB operator <b>2010</b>, and even permissioning entity <b>101</b>. Document corral has copies of evidence items <b>1810</b><i>a</i>-<b>1810</b><i>c</i>, network messages <b>1806</b><i>g</i>-<b>1806</b><i>i</i>, and block <b>1802</b><i>i</i>. Document corral may receive various ones of these from any of evidence collection device <b>2006</b>, DEB operator <b>2010</b>, and messaging network <b>1840</b>. When a subsequent block <b>1802</b>J is chained to block <b>1802</b><i>i </i>by holding a record <b>1804</b><i>u </i>that includes an IVC for block <b>1802</b><i>i</i>, a portion of blockchain <b>1900</b> is formed. In some examples, DEB operator <b>2010</b> and/or permissioning entity <b>101</b> may manage blockchain <b>1900</b>. Blockchain <b>1900</b> provides time and integrity proof for at least evidence items <b>1810</b><i>a </i>and <b>1810</b> because IVCs (hash values) for evidence items <b>1810</b><i>a </i>and <b>1810</b> are contained within block <b>1802</b><i>i</i>. Blockchain <b>100</b> also provides integrity proof for at least evidence items <b>1810</b><i>a </i>and <b>1810</b> because the contents of blockchain <b>1900</b> are within blockchain <b>100</b>. The date resolution for blockchain <b>100</b> is coarser, on the order of days, rather than a minute or so.</p><p id="p-0110" num="0120"><figref idref="DRAWINGS">FIG. <b>21</b></figref> illustrates a flowchart <b>2100</b> of operations associated with using network messages for timestamping a block in blockchain <b>100</b>. In some examples, at least a portion of flowchart <b>2100</b> is performed using one or more computing devices <b>2500</b>. Operation <b>2102</b> includes receiving an item at an intake. In some examples, the first item is an electronic document. In some examples, the electronic document comprises at least one item selected from the list consisting of an image, an audio recording, a video recording, and a word processing document. In some examples, the intake comprises an evidence collection device comprising a sensor. In some examples, the sensor comprises at least one sensor selected from the list consisting of a camera, an infrared image sensor, and RF sensor, a microphone, and an ultrasonic sensor. In some examples, the evidence collection device includes a local evidence store containing the received tem as an evidence item. In some examples, the evidence collection device submits the evidence item to a DEB operator, and receiving an item at an intake comprises the DEB operator receiving the evidence item from the evidence collection device.</p><p id="p-0111" num="0121">Operation <b>2104</b> includes generating a first rapid record, the first rapid record comprising an IVC for the item. Thus, operation <b>2104</b> includes generating the IVC. In some examples, the IVC comprises a hash value comprising a complete message digest. In some examples, the IVC comprises a hash value comprising a partial message digest. In some examples, the IVC comprises a hash value comprising two message digests. In some examples, the IVC comprises a mixture of partial and complete message digests. In some examples, the hash value includes one or more portions of the SHA-1, SHA-224, SHA-256, SHA-384, and the SHA-512 message digests. In some examples, the first rapid record comprises an index value. At this point it is optional to add the first rapid record to a document corral for inclusion in a date-provable blockchain. Operation <b>2106</b> includes entering the first rapid record into the document corral. In some examples, operation <b>2106</b> includes submitting the evidence item to a document corral by the evidence collection device and/or the DEB operator.</p><p id="p-0112" num="0122">Operation <b>2108</b> includes generating a first rapid block comprising the first rapid record and a second rapid record. In some examples, the first rapid block comprises an index value. In some examples, the first rapid block comprises an IVC (hash value, message digest) for a prior rapid block, thereby chaining the first rapid block and the prior rapid block. Operation <b>2110</b> includes generating an IVC for the first rapid block. At this point it is optional to add the first rapid block to the document corral, so operation <b>2106</b> includes entering the first rapid block into the document corral. Operation <b>2112</b> includes generating a network message indicating the first rapid record. In some examples, the network message indicating the first rapid record comprises at least a portion of the first rapid record. In some examples, the network message indicating the first rapid record comprises at least the IVC of the first rapid block. In some examples, the network message comprises an SMS message or a social media post. In some examples, the evidence collection device generates a network message indicating the evidence item. In some examples, the DEB operator generates the network message indicating the evidence item.</p><p id="p-0113" num="0123">Operation <b>2114</b> includes submitting the network message indicating the first rapid record to a public messaging network for broadcasting. In some examples, the evidence collection device submits the network message indicating the evidence item to a public messaging network for broadcasting. In some examples, the DEB operator submits the network message indicating the evidence item to the public messaging network for broadcasting. Operation <b>2116</b> includes timestamping, by the public messaging network, the network message indicating the first rapid record. At this point it is optional to add a copy of the network message to the document corral, so operation <b>2106</b> includes entering a copy of the network message into the document corral. In some examples, operation <b>2106</b> also includes entering the timestamp of the network message into the document corral. Operation <b>2118</b> includes broadcasting, by the public messaging network, the network message indicating the first rapid record over a public medium. In some examples, broadcasting includes sending the network message over a wired network and/or a wireless network to paid subscribers.</p><p id="p-0114" num="0124">Operation <b>2120</b> includes receiving the broadcast network message at a monitoring node. In some examples the monitoring node is also a DEB operator. Operation <b>2122</b> includes timestamping the received broadcast network message. At this point it is optional to add a copy of the received broadcast network message to the document corral, so operation <b>2106</b> includes entering the received broadcast network message into a document corral. In some examples, operation <b>2106</b> also includes entering the timestamp of the received broadcast network message into the document corral.</p><p id="p-0115" num="0125">Operation <b>2124</b> includes generating a rapid blockchain comprising the prior rapid block, the prior rapid block, and a subsequent rapid block. In some examples, the subsequent rapid block comprises an IVC (hash value, message digest) for the first rapid block, thereby chaining the subsequent rapid record and the first rapid block. In some examples, blocks of the rapid blockchain are generated at time intervals of two minutes or less. In some examples, blocks of the rapid blockchain are generated at time intervals of an hour or less. Although the rapid blockchain uses timestamps provided by the public messaging network, which may not be a trusted timestamping entity (TTE), the rapid blockchain does provide higher time resolution than the slower blockchain which does have provable dates. Fortunately, the slower blockchain provides a provable date, although with coarser time resolution. Operation <b>2126</b> includes generating a blockchain record indicating the first rapid record. In some examples, the blockchain record indicating the first rapid record comprises the first rapid record. In some examples, the blockchain record indicating the first rapid record comprises the first rapid block. In some examples, the blockchain record indicates the first rapid record comprises a timestamp for the first rapid block. In some examples, operation <b>2126</b> is part of a larger operation that includes generating blockchain records for the first blockchain from entries in the document corral.</p><p id="p-0116" num="0126">The first blockchain record is added into the slower blockchain, using one or more of flowcharts <b>900</b>, <b>1000</b>, <b>1400</b>, and <b>1700</b>. In some examples, a block of the first blockchain comprises multiple blocks of the rapid blockchain. In some examples, blocks of the first blockchain are generated at time intervals of an hour or less. In some examples, blocks of the first blockchain are generated at time intervals of a day or less. In some examples, blocks of the first blockchain are generated according to a schedule at a set of selected times in a set of selected time zones. In some examples, the schedule varies according to holiday. For later proving the date and integrity of the item received in operation <b>2102</b>, operation <b>2128</b> includes retrieving a timestamp from the public messaging network, such as a timestamp generated in operation <b>2116</b> and/or operation <b>2122</b>. Flowchart <b>1200</b> completes the proof, with the retrieved timestamp providing finer time resolution.</p><p id="p-0117" num="0127"><figref idref="DRAWINGS">FIG. <b>22</b></figref> illustrates an arrangement of data for a self-addressed blockchain registration (SABRe). A user at a user node <b>2208</b> intends to register a document <b>2208</b><i>a </i>in blockchain <b>100</b>, and so makes a reservation request <b>2210</b> requesting a reserved blockchain address. In some examples, reservation request <b>2210</b> includes a specific date and a specific time. In some examples, reservation request <b>2210</b> indicates a time period, such as no-earlier-than and no later-than dates. Permissioning entity <b>101</b> receives reservation request <b>2210</b> and uses reservation data <b>2220</b> to determine a reserved blockchain address <b>2212</b>. Reserved blockchain address <b>2212</b> may include an identified block number and may also include an index number within that identified block, similarly to blockchain address <b>518</b> (of <figref idref="DRAWINGS">FIG. <b>5</b></figref>). That is, in some examples, reserved blockchain address <b>2212</b> includes both a block ID and an index value. For example, permissioning entity <b>101</b> maintains a schedule <b>2222</b> for generating upcoming blocks, identifies one or more blocks matching the requested date, selects a block, and enters reserved blockchain address <b>2212</b> into a list of reservations <b>2224</b>.</p><p id="p-0118" num="0128">Upon receiving reserved blockchain address <b>2212</b>, the user enters it (or a suitable indication) into document <b>2208</b><i>a </i>to make it into document <b>2208</b><i>b</i>. The user generates a blockchain record <b>2204</b> for document <b>2202</b><i>b</i>. Document <b>2202</b><i>b </i>now is able to indicate its own blockchain registration, and when hashed at a later time (e.g., during verification in order to resolve a dispute), will reproduce the hash value (IVC) within the record that it indicates internally. This capability is not currently achievable with any other blockchain, other than PEDDaL&#xae;.</p><p id="p-0119" num="0129">User node <b>2208</b> generates a message <b>2206</b> including record <b>2204</b> and reserved blockchain address <b>2212</b> and transmits message <b>2206</b> to permissioning entity <b>101</b>. Permissioning entity <b>101</b> receives message <b>2206</b> that associates record <b>2204</b> with reserved blockchain address <b>2212</b>. Permissioning entity <b>101</b> identifies reserved blockchain address <b>2212</b> within reservations <b>2224</b> and uses a record scheduler <b>2228</b> to scheduling inclusion of record <b>2204</b> in blockchain <b>100</b> according to reserved blockchain address <b>2212</b>. If record <b>2204</b> is not received in time, but reserved blockchain address <b>2212</b> had included a reserved index value, permissioning entity may zero pad the location within the scheduled block that corresponds to the reserved index (or just put in a different record at that location).</p><p id="p-0120" num="0130">Record <b>2204</b> is placed into a record storage <b>2226</b> to await its scheduled block. If record <b>2204</b> is received early enough prior to the generation of the scheduled block, permissioning entity <b>101</b> may also include record <b>2204</b> in an earlier block as an early record. A linking component <b>2232</b> generates a linked record locating field (e.g., record locator field <b>502</b><i>p</i>) with reserved blockchain address <b>2212</b>, to turn record <b>2204</b> into record <b>2204</b><i>a</i>. A block assembly component <b>2230</b> puts records into blocks for blockchain <b>100</b>, including record <b>2204</b><i>a</i>. Upon the generation period for the scheduled block, if an early record had appeared in an earlier block, linking component <b>2232</b> generates a linked record locating field with the blockchain address of that earlier record (record <b>2204</b><i>a</i>), to turn record <b>2204</b> into record <b>2204</b><i>b</i>. Block assembly component <b>2230</b> puts record <b>2204</b><i>b </i>(or record <b>2204</b>, if there is no linking information) into blockchain <b>100</b> as scheduled (possibly also at the scheduled index position).</p><p id="p-0121" num="0131"><figref idref="DRAWINGS">FIG. <b>23</b></figref> illustrates additional detail an arrangement of data for a SABRe-enabled blockchain. Document <b>2202</b><i>b </i>has a document content section <b>2302</b> and a SABRe reference section <b>2304</b>. SABRe reference section <b>2304</b> includes an indication of a reserved blockchain address <b>2212</b>. In some examples, reserved blockchain address <b>2212</b> includes both a block number and an index value, such as the number of block <b>102</b><i>d </i>and the value of index <b>2308</b>. In some examples, reserved blockchain address <b>2212</b> does not include an index value.</p><p id="p-0122" num="0132">IVC generator <b>108</b> generates a hash value <b>2306</b> for document <b>2202</b><i>b</i>. A record generator (not shown) includes IVC generator <b>108</b> and places hash value <b>2306</b> (or another IVC, as generated by IVC generator <b>108</b>) within scheduled record <b>2204</b><i>b</i>. As illustrated, early record <b>2204</b><i>a </i>has the same hash value <b>2306</b>. This is because early record <b>2204</b><i>a </i>and scheduled record <b>2204</b><i>b </i>are both for the same document <b>2202</b><i>b</i>. As illustrated, early record <b>2204</b><i>a</i>, has a linked record value in a linked record field <b>2320</b> that indicating a blockchain address (e.g., the number of block <b>102</b><i>d </i>and the value of index <b>2308</b>) of scheduled record <b>2204</b><i>b</i>. Also as illustrated, scheduled record <b>2204</b><i>b</i>, has a linked record value in a linked record field <b>2310</b> that indicating a blockchain address (e.g., the number of block <b>102</b><i>b </i>and the value of index <b>2328</b>) of early record <b>2204</b><i>a. </i></p><p id="p-0123" num="0133">Anyone possessing a copy of document <b>2202</b><i>b </i>can locate scheduled record <b>2204</b><i>b </i>using the indication of reserved blockchain address <b>2212</b> in document <b>2202</b><i>b</i>. This permits determining integrity or a no-later-than date of existence for document <b>2202</b><i>b </i>using scheduled record <b>2204</b><i>b</i>. However with linked records, finding scheduled record <b>2204</b><i>b </i>enables locating early record <b>2204</b><i>a </i>using the linked record value (within scheduled record <b>2204</b><i>b</i>) for early record <b>2204</b><i>a</i>. This permits determining integrity or a no-later-than date of existence for document <b>2202</b><i>b </i>using early record <b>2204</b><i>a</i>. In some scenarios, this earlier provable date may be valuable.</p><p id="p-0124" num="0134">In some examples, the SABRe reference section <b>2304</b> is printed in a footer of a document, so that the blockchain registration is easily located by anyone who sees any copy of the document. Such examples thus include printing a blockchain address (blockchain registration address) of a blockchain record (for the document) on a copy of the document itself. This may be performed in combination with use of a daisy chained record, a document corral, a quarantine-enabled document corral, a network message for timestamping, a rapid parallel blockchain, a DEB, and/or other examples described herein.</p><p id="p-0125" num="0135">A real-world example exists for the PEDDaL&#xae; blockchain. The text shown in document content section <b>2302</b> and SABRe reference section <b>2304</b> are in an ASCII text file (so no metadata or other extraneous word processing file data to throw off the hash values), with a single space between &#x201c;experience.&#x201d; and &#x201c;The PEDDaL&#x201d;, and a single carriage return between &#x201c;mechanism.&#x201d; and &#x201c;This document&#x201d;. After &#x201c;at:&#x201d; there is a single space, followed by &#x201c;<b>191205</b><i>a</i>0000A5&#x201d; in lieu of the text window placeholder for reserved blockchain address <b>2212</b>. There are no other spaces or carriage returns, and text file has 319 bytes (characters). The text document predicts its own blockchain registration, because hashing the text file produces the SHA-512 and SHA-1 message digests found in the record at index value 0xA5 in block <b>191205</b><i>a</i>. By recreating the above-described text file carefully, this self-referencing blockchain registration can be independently verified.</p><p id="p-0126" num="0136"><figref idref="DRAWINGS">FIG. <b>24</b></figref> illustrates a flowchart <b>2400</b> of operations associated with using a SABRe-enabled version of blockchain <b>100</b>. In some examples, at least a portion of flowchart <b>2400</b> is performed using one or more computing devices <b>2500</b>. In some examples, the operations described for flowchart <b>2400</b> coincide with (or may be replaced by) similar operations described for flowcharts <b>900</b>, <b>1000</b>, <b>1100</b>, <b>1200</b>, <b>1400</b>, and/or <b>1700</b>. As indicated, some operations of flowchart <b>2400</b> are performed by a user (or set of people submitting a scheduled record) or a third party performing verification, whereas some are performed by the permissioning entity that produces the blockchain.</p><p id="p-0127" num="0137">Operation <b>2402</b> includes requesting a reserved blockchain address. Operation <b>2404</b> includes receiving the request to reserve a blockchain address. Operation <b>2406</b> includes determining a reserved blockchain address. Operation <b>2408</b> includes returning the reserved blockchain address. In some examples, the reserved blockchain address includes both a block ID and an index value. Operation <b>2410</b> includes receiving the reserved blockchain address. In some examples, the reserved blockchain address includes both a block ID and an index value.</p><p id="p-0128" num="0138">Now that the document owner has the reserved blockchain address, operation <b>2412</b> includes entering an indication of the reserved blockchain address into a document. Operation <b>2414</b> includes generating a record for the document. In some examples, generating a record for the document comprises generating a record for a document containing an indication of the reserved blockchain address. Operation <b>2416</b> includes transmitting the record for the document with an association of the reserved blockchain address to the permissioning entity, (or some other node that collects records). Operation <b>2418</b> includes the permissioning entity receiving a record associated with the reserved blockchain address. Operation <b>2420</b> includes scheduling inclusion of the received record in the blockchain according to the reserved blockchain address.</p><p id="p-0129" num="0139">If the record is received while another block is being generated, before the scheduled block, the permissioning entity may also include the record in the earlier block as an early record. The permissioning entity may also put a linked record within the early record for the scheduled record, since the schedule is already known via the reservations. Thus, optional operation <b>2422</b> includes including, within an early record, a linked record value indicating a blockchain address of the scheduled record, and operation <b>2424</b> includes additionally including the received record, as an early record, in the blockchain in an earlier block, prior to the schedule. Operation <b>2426</b> includes including, within the scheduled record, a linked record value indicating a blockchain address of the early record. Operation <b>2428</b> includes including the received record, as a scheduled record, in the blockchain according to the schedule. Operation <b>2430</b> includes distributing copies of the blockchain outside the control of a permissioning entity of the blockchain, such that the permissioning entity is unable to alter the blockchain without detection. In some examples, distributing copies of the blockchain outside the control of a permissioning entity of the blockchain comprises publishing the blockchain on a website.</p><p id="p-0130" num="0140">At a later time, when the document requires date and/or integrity verification, operation <b>2432</b> includes locating the scheduled record within the blockchain using the indication of the reserved blockchain address in the document. If somehow, the early record had already been located, it is also possible to identify, within a linked record locator field of the early record, a linked record value for the scheduled record. This then permits locating the scheduled record within the blockchain using the linked record value for the scheduled record. Operation <b>2434</b> includes determining integrity or a no-later-than date of existence for the document using the scheduled record in the blockchain. In some examples, determining integrity for a document comprises generating an IVC for the document and comparing the generated IVC for the document with a recorded IVC within a record within the blockchain. In some examples, determining a no-later-than date of existence for a document comprises hashing the document, comparing a resulting hash value with a recorded hash value within the blockchain. In some examples, determining a no-later-than date of existence for a block of the blockchain that contains the recorded hash value.</p><p id="p-0131" num="0141">Since the address of the scheduled record is identified within the document, is may be easier to initially locate the scheduled record. However, if an early record had also been generated and linked, it is possible to locate the early record using the scheduled record. Thus, operation <b>2436</b> includes identifying, within a linked record locator field of the scheduled record, a linked record value for the early record. Operation <b>2438</b> includes locating the early record within the blockchain using the linked record value for the early record. Operation <b>2440</b> includes determining integrity or a no-later-than date of existence for the document using the early record in the blockchain.</p><p id="p-0132" num="0142">Some aspects and examples disclosed herein are directed to a method of using a first blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising: generating, for a document, a first record in a first format, the first format comprising: an IVC field comprising a first IVC portion; an index field; and a linked record locator field; wherein the first record comprises: a first IVC value in the first IVC portion of the first record; a first index value in the index field of the first record; and a first linked record value in the first linked record locator field of the first record; and generating, in the first blockchain, a first block comprising the first record, wherein the first linked record value indicates a location of a second record in the first blockchain.</p><p id="p-0133" num="0143">Alternatively, or in addition to the other examples described herein, examples include any combination of the following:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0144">the first linked record value comprises a blockchain address for another record;</li>        <li id="ul0006-0002" num="0145">the IVC field further comprises a second IVC portion, the record further comprises a second IVC value in the second IVC portion, the second IVC value represents a same document as the first IVC value, and the second IVC value represents an output of a different integrity verification function than the first IVC value;</li>        <li id="ul0006-0003" num="0146">the first IVC value comprises at least a portion of a SHA value;</li>        <li id="ul0006-0004" num="0147">the first IVC value comprises at least a portion of a hash value (message digest of a hash function);</li>        <li id="ul0006-0005" num="0148">the SHA is at least one selected from the list consisting of: SHA-1, SHA-224, SHA-256, SHA-348, and SHA-512;</li>        <li id="ul0006-0006" num="0149">the first format further comprises a timestamp field, and the first record further comprises a timestamp value in the timestamp field;</li>        <li id="ul0006-0007" num="0150">the first format further comprises a generator version field, and the first record further comprises generator version information in the generator version field;</li>        <li id="ul0006-0008" num="0151">the first format has a fixed number of bytes;</li>        <li id="ul0006-0009" num="0152">the first format is 256 bytes long;</li>        <li id="ul0006-0010" num="0153">the location of the second record is within the first block;</li>        <li id="ul0006-0011" num="0154">the second record is in the first format and the second record comprises: a second IVC value in the first IVC portion of the second record; and a second index value in the index field of the second record;</li>        <li id="ul0006-0012" num="0155">the second record further comprises: the first index value in the first linked record locator field of the second record;</li>        <li id="ul0006-0013" num="0156">the second record further comprises: a third index value in the first linked record locator field of the second record;</li>        <li id="ul0006-0014" num="0157">the second record further comprises: a block name in the first linked record locator field of the second record;</li>        <li id="ul0006-0015" num="0158">the location of the second record is within a second blockchain;</li>        <li id="ul0006-0016" num="0159">the location of the second record is within a first prior block that is prior to the first block in the first blockchain;</li>        <li id="ul0006-0017" num="0160">the second record comprises a location of a third record, thereby linking the first record with the third record in a daisy chain;</li>        <li id="ul0006-0018" num="0161">the location of the third record is within a second prior block that is prior to the first prior block in the first blockchain; and</li>        <li id="ul0006-0019" num="0162">printing a blockchain address of a blockchain record on a copy of the document.</li>    </ul>    </li></ul></p><p id="p-0134" num="0163">Some aspects and examples disclosed herein are directed to a method of using a blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising: providing a document corral; based at least on permissions set for external entities, granting external entities access to the document corral; monitoring documents within the document corral for additions and alterations; based at least upon detecting an addition or alteration of a first document within the document corral, generating a blockchain record for the first document; and adding the blockchain record into the blockchain.</p><p id="p-0135" num="0164">Alternatively, or in addition to the other examples described herein, examples include any combination of the following:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0165">generating the blockchain;</li>        <li id="ul0008-0002" num="0166">receiving new documents into the document corral;</li>        <li id="ul0008-0003" num="0167">altering documents within the document corral;</li>        <li id="ul0008-0004" num="0168">generating a blockchain record for the first document includes generating a blockchain record with a linked record value;</li>        <li id="ul0008-0005" num="0169">the linked record value indicates a prior version of the first document;</li>        <li id="ul0008-0006" num="0170">the linked record value indicates a second document that is related to the first document;</li>        <li id="ul0008-0007" num="0171">the linked record value comprises a blockchain address;</li>        <li id="ul0008-0008" num="0172">a relationship of the second document with the first document is established by the first document and the second document being attached to a common electronic message;</li>        <li id="ul0008-0009" num="0173">generating the block upon a trigger event;</li>        <li id="ul0008-0010" num="0174">the trigger event comprises a schedule or a threshold number of new records awaiting entry into the blockchain;</li>        <li id="ul0008-0011" num="0175">distributing copies of the blockchain outside the control of a permissioning entity of the blockchain, such that the permissioning entity is unable to alter the blockchain without detection;</li>        <li id="ul0008-0012" num="0176">distributing copies of the blockchain outside the control of a permissioning entity of the blockchain comprises publishing the blockchain on a website;</li>        <li id="ul0008-0013" num="0177">retrieving documents from the document corral;</li>        <li id="ul0008-0014" num="0178">ensuring that a set of retrieved documents is complete;</li>        <li id="ul0008-0015" num="0179">ensuring that a set of retrieved documents is complete comprises traversing linked record locator fields to rebuild a daisy chain of document relationships;</li>        <li id="ul0008-0016" num="0180">based at least on determining that documents are missing, generating an alert; and</li>        <li id="ul0008-0017" num="0181">printing a blockchain address of a blockchain record on a copy of the document.</li>    </ul>    </li></ul></p><p id="p-0136" num="0182">Some aspects and examples disclosed herein are directed to a method of using a blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising: providing a document corral and a document quarantine; generating a first blockchain record for a first document; adding the first blockchain record into the blockchain; identifying that the first document is to be quarantined; based at least upon determining that the first document is to be quarantined, moving the first document into the document quarantine; generating a second document as a replacement for the first document in the document corral, the second document not triggering quarantine; generating a second blockchain record for the second document; and adding the second blockchain record into the blockchain.</p><p id="p-0137" num="0183">Alternatively, or in addition to the other examples described herein, examples include any combination of the following:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0184">generating the blockchain;</li>        <li id="ul0010-0002" num="0185">entering the first blockchain record into the blockchain;</li>        <li id="ul0010-0003" num="0186">monitoring documents within the document corral for quarantine triggers;</li>        <li id="ul0010-0004" num="0187">quarantine triggers are selected from the list consisting of: privacy violations, intellectual property rights violations, malicious logic, and obscenity;</li>        <li id="ul0010-0005" num="0188">removing the first document from the document corral;</li>        <li id="ul0010-0006" num="0189">generating the second document from the first document by removing material that triggered quarantine;</li>        <li id="ul0010-0007" num="0190">generating the second document as a summary of the first document;</li>        <li id="ul0010-0008" num="0191">generating a cleaned reference document;</li>        <li id="ul0010-0009" num="0192">the cleaned reference document includes at least one item selected from the list consisting of: identification of the first document, identification of a quarantine location of the first document, a blockchain address of the first record, identification of the second document, a blockchain address of the second record;</li>        <li id="ul0010-0010" num="0193">generating a second blockchain record for the second document includes generating a blockchain record with a linked record value;</li>        <li id="ul0010-0011" num="0194">the linked record value indicates a blockchain address of the first record;</li>        <li id="ul0010-0012" num="0195">the linked record value indicates the first document;</li>        <li id="ul0010-0013" num="0196">the linked record value indicates quarantine storage;</li>        <li id="ul0010-0014" num="0197">distributing copies of the blockchain outside the control of a permissioning entity of the blockchain, such that the permissioning entity is unable to alter the blockchain without detection;</li>        <li id="ul0010-0015" num="0198">distributing copies of the blockchain outside the control of a permissioning entity of the blockchain comprises publishing the blockchain on a website;</li>        <li id="ul0010-0016" num="0199">retrieving the second document from the document corral;</li>        <li id="ul0010-0017" num="0200">determining integrity or a no-later-than date of existence for the second document using the blockchain;</li>        <li id="ul0010-0018" num="0201">determining integrity for a document using the blockchain comprises generating an IVC for the document and comparing the generated IVC for the document with a recorded IVC within a record within the blockchain;</li>        <li id="ul0010-0019" num="0202">determining a no-later-than date of existence for a document using the blockchain comprises hashing the document; comparing a resulting hash value with a recorded hash value within the blockchain; and determining a no-later-than date of existence for an earliest block of the blockchain that contains the recorded hash value;</li>        <li id="ul0010-0020" num="0203">determining a no-later-than date of existence for a document using the blockchain comprises generating an IVC for the document; comparing the generated IVC for the document with a recorded IVC within a record within the blockchain; and determining a no-later-than date of existence for an earliest block of the blockchain that contains the recorded IVC;</li>        <li id="ul0010-0021" num="0204">identifying, within a linked record locator field of the second blockchain record, a linked record value for the first blockchain record;</li>        <li id="ul0010-0022" num="0205">identifying, within a linked record locator field of the second blockchain record, a linked record value for the first document;</li>        <li id="ul0010-0023" num="0206">locating the first blockchain record within the blockchain;</li>        <li id="ul0010-0024" num="0207">determining a no-later-than date of existence for the first document using the blockchain and the first blockchain record;</li>        <li id="ul0010-0025" num="0208">receiving, from a trusted entity, assurance that the first blockchain record matches the first document;</li>        <li id="ul0010-0026" num="0209">retrieving the first document from the document quarantine;</li>        <li id="ul0010-0027" num="0210">determining integrity or a no-later-than date of existence for the first document using the blockchain; and</li>        <li id="ul0010-0028" num="0211">printing a blockchain address of a blockchain record on a copy of the document.</li>    </ul>    </li></ul></p><p id="p-0138" num="0212">Some aspects and examples disclosed herein are directed to a method of using a blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising: receiving an item at an intake; generating a first rapid record, the first rapid record comprising an IVC for the item; generating a network message indicating the first rapid record; submitting the network message indicating the first rapid record to a public messaging network for broadcasting; generating a blockchain record indicating the first rapid record; and adding the blockchain record into a first blockchain.</p><p id="p-0139" num="0213">Alternatively, or in addition to the other examples described herein, examples include any combination of the following:<ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0214">the first item is an electronic document;</li>        <li id="ul0012-0002" num="0215">the electronic document comprises at least one item selected from the list consisting of: an image, an audio recording, a video recording, and a word processing document;</li>        <li id="ul0012-0003" num="0216">the IVC comprises a hash value comprising a complete message digest;</li>        <li id="ul0012-0004" num="0217">the IVC comprises a hash value comprising a partial message digest;</li>        <li id="ul0012-0005" num="0218">the IVC comprises a hash value comprising two message digests;</li>        <li id="ul0012-0006" num="0219">the IVC comprises a mixture of partial and complete message digests;</li>        <li id="ul0012-0007" num="0220">the hash value includes one or more portions of the SHA-1, SHA-224, SHA-256, SHA-384, and the SHA-512 message digests;</li>        <li id="ul0012-0008" num="0221">the first rapid record comprises an index value;</li>        <li id="ul0012-0009" num="0222">entering the first rapid record into a document corral;</li>        <li id="ul0012-0010" num="0223">the blockchain record indicates the first rapid record comprises the first rapid record;</li>        <li id="ul0012-0011" num="0224">the network message indicates the first rapid record comprises at least a portion of the first rapid record;</li>        <li id="ul0012-0012" num="0225">generating a first rapid block comprising the first rapid record and a second rapid record;</li>        <li id="ul0012-0013" num="0226">the first rapid block comprises an index value;</li>        <li id="ul0012-0014" num="0227">entering the first rapid block into a document corral;</li>        <li id="ul0012-0015" num="0228">the blockchain record indicates the first rapid record comprises the first rapid block;</li>        <li id="ul0012-0016" num="0229">generating an IVC for the first rapid block;</li>        <li id="ul0012-0017" num="0230">the network message indicates the first rapid record comprises at least the IVC of the first rapid block;</li>        <li id="ul0012-0018" num="0231">the first rapid block comprises an index value;</li>        <li id="ul0012-0019" num="0232">broadcasting, by the public messaging network, the network message indicating the first rapid record over a public medium;</li>        <li id="ul0012-0020" num="0233">timestamping, by the public messaging network, the network message indicating the first rapid record;</li>        <li id="ul0012-0021" num="0234">the network message comprises an SMS message or a social media post;</li>        <li id="ul0012-0022" num="0235">broadcasting includes sending the network message over a wired network and/or a wireless network to paid subscribers;</li>        <li id="ul0012-0023" num="0236">receiving the broadcast network message;</li>        <li id="ul0012-0024" num="0237">entering the received broadcast network message into a document corral;</li>        <li id="ul0012-0025" num="0238">timestamping the received broadcast network message;</li>        <li id="ul0012-0026" num="0239">entering the timestamp of the received broadcast network message into a document corral;</li>        <li id="ul0012-0027" num="0240">the blockchain record indicates the first rapid record comprises a timestamp for the first rapid block;</li>        <li id="ul0012-0028" num="0241">the first rapid block comprises an IVC (hash value, message digest) for a prior rapid block, thereby chaining the first rapid block and the prior rapid block;</li>        <li id="ul0012-0029" num="0242">generating a rapid blockchain comprising the prior rapid block, the prior rapid block, and a subsequent rapid block;</li>        <li id="ul0012-0030" num="0243">the subsequent rapid block comprises an IVC (hash value, message digest) for the first rapid block, thereby chaining the subsequent rapid record and the first rapid block;</li>        <li id="ul0012-0031" num="0244">a block of the first blockchain comprises multiple blocks of the rapid blockchain;</li>        <li id="ul0012-0032" num="0245">blocks of the rapid blockchain are generated at time intervals of two minutes or less;</li>        <li id="ul0012-0033" num="0246">blocks of the rapid blockchain are generated at time intervals of an hour or less;</li>        <li id="ul0012-0034" num="0247">blocks of the first blockchain are generated at time intervals of an hour or less;</li>        <li id="ul0012-0035" num="0248">blocks of the first blockchain are generated at time intervals of a day or less;</li>        <li id="ul0012-0036" num="0249">blocks of the first blockchain are generated according to a schedule at a set of selected times in a set of selected time zones;</li>        <li id="ul0012-0037" num="0250">the schedule varies according to holidays;</li>        <li id="ul0012-0038" num="0251">the intake comprises an evidence collection device comprising a sensor;</li>        <li id="ul0012-0039" num="0252">the sensor comprises at least one sensor selected from the list consisting of a camera, an infrared image sensor, and RF sensor, a microphone, and an ultrasonic sensor;</li>        <li id="ul0012-0040" num="0253">the evidence collection device includes a local evidence store containing the received tem as an evidence item;</li>        <li id="ul0012-0041" num="0254">the evidence collection device generates a network message indicating the evidence item;</li>        <li id="ul0012-0042" num="0255">the evidence collection device submits the network message indicating the evidence item to a public messaging network for broadcasting;</li>        <li id="ul0012-0043" num="0256">the evidence collection device submits the evidence item to a DEB operator;</li>        <li id="ul0012-0044" num="0257">the DEB operator generates a network message indicating the evidence item;</li>        <li id="ul0012-0045" num="0258">the DEB operator submits the network message indicating the evidence item to a public messaging network for broadcasting;</li>        <li id="ul0012-0046" num="0259">submitting the evidence item to a document corral by the evidence collection device and/or the DEB operator; and</li>        <li id="ul0012-0047" num="0260">generating blockchain records for the first blockchain from entries in the document corral.</li>    </ul>    </li></ul></p><p id="p-0140" num="0261">Some aspects and examples disclosed herein are directed to a method of using a blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising: receiving a request to reserve a blockchain address; returning a reserved blockchain address; receiving a record associated with the reserved blockchain address; scheduling inclusion of the received record in the blockchain according to the reserved blockchain address; and including the received record, as a scheduled record, in the blockchain according to the schedule.</p><p id="p-0141" num="0262">Alternatively, or in addition to the other examples described herein, examples include any combination of the following:<ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0263">the reserved blockchain address includes both a block ID and an index value;</li>        <li id="ul0014-0002" num="0264">requesting the reserved blockchain address;</li>        <li id="ul0014-0003" num="0265">determining the reserved blockchain address;</li>        <li id="ul0014-0004" num="0266">entering an indication of the reserved blockchain address into a document;</li>        <li id="ul0014-0005" num="0267">generating a record for a document;</li>        <li id="ul0014-0006" num="0268">generating a record for a document comprises generating a record for a document containing an indication of the reserved blockchain address;</li>        <li id="ul0014-0007" num="0269">transmitting the record for the document with an association of the reserved blockchain address;</li>        <li id="ul0014-0008" num="0270">additionally including the received record, as an early record, in the blockchain in an earlier block, prior to the schedule;</li>        <li id="ul0014-0009" num="0271">including, within the early record, a linked record value indicating a blockchain address of the scheduled record;</li>        <li id="ul0014-0010" num="0272">including, within the scheduled record, a linked record value indicating a blockchain address of the early record;</li>        <li id="ul0014-0011" num="0273">determining integrity or a no-later-than date of existence for the document using the scheduled record in the blockchain;</li>        <li id="ul0014-0012" num="0274">determining integrity or a no-later-than date of existence for the document using the early record in the blockchain;</li>        <li id="ul0014-0013" num="0275">identifying, within a linked record locator field of the scheduled record, a linked record value for the early record;</li>        <li id="ul0014-0014" num="0276">locating the early record within the blockchain using the linked record value for the early record;</li>        <li id="ul0014-0015" num="0277">identifying, within a linked record locator field of the early record, a linked record value for the scheduled record;</li>        <li id="ul0014-0016" num="0278">locating the scheduled record within the blockchain using the linked record value for the scheduled record;</li>        <li id="ul0014-0017" num="0279">locating the scheduled record within the blockchain using the indication of the reserved blockchain address in the document;</li>        <li id="ul0014-0018" num="0280">determining integrity for a document comprises generating an IVC for the document and comparing the generated IVC for the document with a recorded IVC within a record within the blockchain;</li>        <li id="ul0014-0019" num="0281">determining a no-later-than date of existence for a document comprises hashing the document; comparing a resulting hash value with a recorded hash value within the blockchain; and determining a no-later-than date of existence for a block of the blockchain that contains the recorded hash value;</li>        <li id="ul0014-0020" num="0282">distributing copies of the blockchain outside the control of a permissioning entity of the blockchain, such that the permissioning entity is unable to alter the blockchain without detection; and</li>        <li id="ul0014-0021" num="0283">distributing copies of the blockchain outside the control of a permissioning entity of the blockchain comprises publishing the blockchain on a website.</li>    </ul>    </li></ul></p><p id="p-0142" num="0284">Some aspects and examples disclosed herein are directed to a system comprising: a processor; and a computer-readable medium storing instructions that are operative, upon execution by the processor, to perform operations disclosed herein. Some aspects and examples disclosed herein are directed to one or more computer storage devices having computer-executable instructions stored thereon, which, on execution by a computer, cause the computer to perform operations disclosed herein. While the aspects of the disclosure have been described in terms of various examples with their associated operations, a person skilled in the art would appreciate that a combination of operations from any number of different examples is also within scope of the aspects of the disclosure.</p><p id="p-0143" num="0285"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a block diagram of example computing device <b>2500</b> for implementing aspects disclosed herein and is designated generally as computing device <b>2500</b>. Computing device <b>2500</b> is one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should computing device <b>2500</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated. The examples disclosed herein may be described in the general context of computer code or machine-useable instructions, including computer-executable instructions such as program components, being executed by a computer or other machine, such as a personal data assistant or other handheld device. Generally, program components including routines, programs, objects, components, data structures, and the like, refer to code that performs particular tasks, or implement particular abstract data types. The disclosed examples may be practiced in a variety of system configurations, including personal computers, laptops, smart phones, mobile tablets, hand-held devices, consumer electronics, specialty computing devices, etc. The disclosed examples may also be practiced in distributed computing environments when tasks are performed by remote-processing devices that are linked through a communications network.</p><p id="p-0144" num="0286">Computing device <b>2500</b> includes a bus <b>2502</b> that directly or indirectly couples the following devices: memory <b>2504</b>, one or more processors <b>2506</b>, one or more presentation components <b>2508</b>, input/output (I/O) ports <b>2510</b>, I/O components <b>2512</b>, a power supply <b>2514</b>, and a network component <b>2516</b>. Computer device <b>2500</b> should not be interpreted as having any dependency or requirement related to any single component or combination of components illustrated therein. While computer device <b>2500</b> is depicted as a seemingly single device, multiple computing devices <b>2500</b> may work together and share the depicted device resources. For instance, computer-storage memory <b>2504</b> may be distributed across multiple devices, processor(s) <b>2506</b> may provide housed on different devices, and so on. Bus <b>2502</b> represents what may be one or more busses (such as an address bus, data bus, or a combination thereof). Although the various blocks of <figref idref="DRAWINGS">FIG. <b>25</b></figref> are shown with lines for the sake of clarity, example systems may be less delineated. Distinction is not made between such categories as &#x201c;workstation,&#x201d; &#x201c;server,&#x201d; &#x201c;laptop,&#x201d; &#x201c;hand-held device,&#x201d; etc., as all are contemplated within the scope of <figref idref="DRAWINGS">FIG. <b>25</b></figref> and the references herein to a &#x201c;computing device.&#x201d;</p><p id="p-0145" num="0287">Computer-storage memory <b>2504</b> may take the form of the non-transitory computer-storage media referenced below and operatively provided storage of computer-readable instructions, data structures, program modules and other data for computing device <b>2500</b>. For example, memory <b>2504</b> may store an operating system and other program modules and program data. Memory <b>2504</b> may be used to store and access instructions configured to carry out the various operations disclosed herein and may include computer-storage media in the form of volatile and/or nonvolatile memory, removable or non-removable memory, data disks in virtual environments, or a combination thereof. Memory <b>2504</b> may include any quantity of memory associated with or accessible by the computing device <b>2500</b>. Memory <b>2504</b> may be internal to the computing device <b>2500</b>, external to the computing device <b>2500</b>, or both. Examples of memory <b>2504</b> include, without limitation, random access memory (RAM); read only memory (ROM); electronically erasable programmable read only memory (EEPROM); flash memory or other memory technologies; CD-ROM, digital versatile disks (DVDs) or other optical or holographic media; magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices; memory wired into an analog computing device; or any other medium for encoding desired information and for access by computing device <b>2500</b>. Additionally, or alternatively, memory <b>2504</b> may be distributed across multiple computing devices <b>2500</b>, e.g., in a virtualized environment in which instruction processing is carried out on multiple computing devices <b>2500</b>. For the purposes of this disclosure, &#x201c;computer storage media,&#x201d; &#x201c;computer-storage memory,&#x201d; &#x201c;memory,&#x201d; and &#x201c;memory devices&#x201d; are synonymous terms for memory <b>2504</b>, and none of these terms include carrier waves or propagating signaling.</p><p id="p-0146" num="0288">Processor(s) <b>2506</b> may include any quantity of processing units that read data from various entities, such as memory <b>2504</b> or I/O components <b>2512</b>. Specifically, processor(s) <b>2506</b> are programmed to execute computer-executable instructions for implementing aspects of the disclosure. The instructions may be performed by one or more processors <b>2506</b> within computing device <b>2500</b>, or by a processor external to computing device <b>2500</b>. In some examples, processor(s) <b>2506</b> are programmed to execute instructions such as those illustrated in the flowcharts depicted in the accompanying drawings. Moreover, in some examples, processor(s) <b>2506</b> represent an implementation of analog techniques to perform the operations described herein. For example, the operations may be performed by an analog computing device <b>2500</b> and/or a digital computing device <b>2500</b>. Presentation component(s) <b>2508</b> present data indications to a user or other device. Exemplary presentation components <b>2508</b> include a display device, speaker, printing component, vibrating component, etc. One skilled in the art will understand and appreciate that computer data may be presented in a number of ways, such as visually in a graphical user interface (GUI), audibly through speakers, wirelessly between computing devices <b>2500</b>, across a wired connection, or in other ways. I/O ports <b>2510</b> allow computing device <b>2500</b> to be logically coupled to other devices including I/O components <b>2512</b>, some of which may be built in. Example I/O components <b>2512</b> include a microphone, joystick, game pad, satellite dish, scanner, printer, wireless device, etc.</p><p id="p-0147" num="0289">Computing device <b>2500</b> may operate in a networked environment via network component <b>2516</b> using logical connections to one or more remote computers. In some examples, network component <b>2516</b> includes a network interface card and/or computer-executable instructions (e.g., a driver) for operating the network interface card. Communication between computing device <b>2500</b> and other devices may occur using any protocol or mechanism over any wired or wireless connection. In some examples, network component <b>2516</b> is operable to communicate data over public, private, or hybrid (public and private) using a transfer protocol, between devices wirelessly using short range communication technologies (e.g., near-field communication (NFC), Bluetooth&#x2122; branded communications, or the like), or a combination thereof. For example, network component <b>2516</b> communicates over a communication link <b>2520</b>, through a network <b>2522</b>, with a cloud resource <b>2524</b>. Various examples of communication link <b>2520</b> include a wireless connection, a wired connection, and/or a dedicated link, and in some examples, at least a portion is routed through the internet. In some examples, cloud resource <b>2524</b> performs at least some of the operations described herein for computing device <b>2500</b>.</p><p id="p-0148" num="0290">Although described in connection with an example computing device <b>2500</b>, examples of the disclosure are capable of implementation with numerous other general-purpose or special-purpose computing system environments, configurations, or devices. Examples of well-known computing systems, environments, and/or configurations that may be suitable for use with aspects of the disclosure include, but are not limited to, smart phones, mobile tablets, mobile computing devices, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, gaming consoles, microprocessor-based systems, set top boxes, programmable consumer electronics, mobile telephones, mobile computing and/or communication devices in wearable or accessory form factors, network PCs, minicomputers, distributed computing environments that include any of the above systems or devices, and the like. Such systems or devices may accept input from the user in any way, including from input devices such as a keyboard or pointing device, via gesture input, proximity input (such as by hovering), and/or via voice input.</p><p id="p-0149" num="0291">Examples of the disclosure may be described in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices in software, firmware, hardware, or a combination thereof. The computer-executable instructions may be organized into one or more computer-executable components or modules. Generally, program modules include, but are not limited to, routines, programs, objects, components, and data structures that perform particular tasks or implement particular abstract data types. Aspects of the disclosure may be implemented with any number and organization of such components or modules. For example, aspects of the disclosure are not limited to the specific computer-executable instructions or the specific components or modules illustrated in the figures and described herein. Other examples of the disclosure may include different computer-executable instructions or components having more or less functionality than illustrated and described herein. In examples involving a general-purpose computer, aspects of the disclosure transform the general-purpose computer into a special-purpose computing device when configured to execute the instructions described herein. By way of example and not limitation, computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile, removable and non-removable memory implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or the like. Computer storage media are tangible and mutually exclusive to communication media. Computer storage media are implemented in hardware and exclude carrier waves and propagated signals. Computer storage media for purposes of this disclosure are not signals per se. Exemplary computer storage media include hard disks, flash drives, solid-state memory, phase change random-access memory (PRAM), static random-access memory (SRAM), dynamic random-access memory (DRAM), other types of random-access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technology, compact disk read-only memory (CD-ROM), digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other non-transmission medium that can be used to store information for access by a computing device. In contrast, communication media typically embody computer readable instructions, data structures, program modules, or the like in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media.</p><p id="p-0150" num="0292">The order of execution or performance of the operations in examples of the disclosure illustrated and described herein is not essential and may be performed in different sequential manners in various examples. For example, it is contemplated that executing or performing a particular operation before, contemporaneously with, or after another operation is within the scope of aspects of the disclosure. When introducing elements of aspects of the disclosure or the examples thereof, the articles &#x201c;a,&#x201d; &#x201c;an,&#x201d; &#x201c;the,&#x201d; and &#x201c;said&#x201d; are intended to mean that there are one or more of the elements. The terms &#x201c;comprising,&#x201d; &#x201c;including,&#x201d; and &#x201c;having&#x201d; are intended to be inclusive and mean that there may be additional elements other than the listed elements. The term &#x201c;exemplary&#x201d; is intended to mean &#x201c;an example of.&#x201d; The phrase &#x201c;one or more of the following: A, B, and C&#x201d; means &#x201c;at least one of A and/or at least one of B and/or at least one of C.&#x201d;</p><p id="p-0151" num="0293">Having described aspects of the disclosure in detail, it will be apparent that modifications and variations are possible without departing from the scope of aspects of the disclosure as defined in the appended claims. As various changes could be made in the above constructions, products, and methods without departing from the scope of aspects of the disclosure, it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of using a first blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising:<claim-text>generating, for a document, a first record in a first format, the first format comprising:<claim-text>an integrity verification code (IVC) field comprising a first IVC portion; and</claim-text><claim-text>a record locator field;</claim-text></claim-text><claim-text>wherein the first record comprises:<claim-text>a first IVC value in the first IVC portion of the IVC field of the first record; and</claim-text><claim-text>a first value in the record locator field of the first record; and</claim-text></claim-text><claim-text>generating, in the first blockchain, a first block comprising the first record, wherein the first value in the record locator field of the first record indicates a blockchain address of a second record, different than the first record, wherein the blockchain address of the second record indicates a location of the second record within the blockchain, wherein the second record is within a second block of the first blockchain that is prior to the first block in the first blockchain, wherein the first value in the record locator field of the first record includes a block identifier of the second block, and wherein the first value in the record locator field of the first record does not link blocks of the first blockchain; and</claim-text><claim-text>linking the first block to a prior block in the first blockchain using an IVC of the prior block in the first blockchain within the first block.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>prior to generating the first block, generating, in the blockchain, the second block comprising the second record; and</claim-text><claim-text>linking the second block to a subsequent block in the first blockchain using an IVC of the second block within the subsequent block in the first blockchain.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first value in the record locator field of the first record further includes a position of the second record within the second block.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>generating the second record in the first format;</claim-text><claim-text>wherein the second record comprises:<claim-text>a third IVC value in the first IVC portion of the IVC field of the second record; and</claim-text><claim-text>a second value in the record locator field of the second record, wherein the second value in the record locator field of the second record indicates a location of a third record in the first blockchain, thereby providing a daisy chain of references to the third record from the first record.</claim-text></claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first record further comprises:<claim-text>a third value in the record locator field of the first record, wherein the third value in the record locator field of the first record indicates a blockchain address of a fourth record, different than the first record and different than the second record, wherein the blockchain address of the fourth record indicates a location of the fourth record within the blockchain, wherein the fourth record is within a third block of the first blockchain that is prior to the first block in the first blockchain, wherein the third value in the record locator field of the first record includes a block identifier of the third block, and wherein the third value in the record locator field of the first record does not link blocks of the first blockchain.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the IVC field further comprises a second IVC portion,</claim-text><claim-text>wherein the first record further comprises a second IVC value in the second IVC portion,</claim-text><claim-text>wherein the second IVC value represents a same document as the first IVC value, and</claim-text><claim-text>wherein the second IVC value represents an output of a different integrity verification function than the first IVC value.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first IVC value comprises at least a portion of a Secure Hash Algorithm (SHA) message digest, and wherein the SHA message digest is generated by at least one function selected from the list consisting of:<claim-text>SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first format further comprises a timestamp field, wherein the first record further comprises a timestamp value in the timestamp field.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first format further comprises an index field, wherein the first record further comprises a first index value in the index field of the first record; and wherein the second record further comprises a second index value in the index field of the second record.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first format further comprises an index field, wherein the first record further comprises a first index value in the index field of the first record; and wherein the second record further comprises a second index value in the index field of the second record.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the second index value appears within the record locator field of the first record.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein first value in the record locator field of the first record further comprises the second index value.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein index values placed in the index field are incremental counts of records within a block.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the blockchain address of the second record indicates a starting bit of the second record within the second block.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A method of using a first blockchain to generate evidence for proving document integrity, the method executable by a processor, the method comprising:<claim-text>receiving a request to reserve a blockchain address for a first record that has not yet been received, the request indicating a future time period;</claim-text><claim-text>selecting a reserved blockchain address for a first record, the reserved blockchain address indicating a first block;</claim-text><claim-text>returning the reserved blockchain address in response to the request;</claim-text><claim-text>after returning the reserved blockchain address, receiving the first record;</claim-text><claim-text>holding the first record until generating the first block;</claim-text><claim-text>generating the first block;</claim-text><claim-text>inserting the first record in the first block; and</claim-text><claim-text>linking the first block to a prior block in the first blockchain using an IVC of the prior block in the first blockchain within the first block.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the reserved blockchain address further indicates a position within the first block, and wherein inserting the first record in the first block comprises:<claim-text>inserting the first record in the first block at the indicated position.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:<claim-text>inserting the indicated position into an index field of the first record.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>receiving the reserved blockchain address;</claim-text><claim-text>inserting an indication of the reserved blockchain address into a document;</claim-text><claim-text>generating the first record for the document containing the indication of the reserved blockchain address, wherein the first record comprises an integrity verification code (IVC) for the document; and</claim-text><claim-text>transmitting the first record across a computer network to a collection point for records for the first blockchain.</claim-text></claim-text></claim></claims></us-patent-application>