<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007220A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007220</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941181</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>9</main-group><subgroup>67</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>60</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>9</main-group><subgroup>73</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>9</main-group><subgroup>67</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>6077</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>6027</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>9</main-group><subgroup>735</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">APPARATUS AND METHOD FOR IMAGE SIGNAL PROCESSING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17150828</doc-number><date>20210115</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11445157</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17941181</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16550707</doc-number><date>20190826</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10897605</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17150828</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16002644</doc-number><date>20180607</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10440341</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16550707</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Micron Technology, Inc.</orgname><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Luo</last-name><first-name>Fa-Long</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Cummins</last-name><first-name>Jaime C.</first-name><address><city>Bainbridge Island</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Schmitz</last-name><first-name>Tamara</first-name><address><city>Scotts Valley</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Apparatuses, systems, and methods related to an image processor formed in an array of memory cells are described. An image processor as described herein is configured to reduce complexity and power consumption and/or increase data access bandwidth by performing image processing in the array of memory cells relative to image processing by a host processor external to the memory array. For instance, one apparatus described herein includes sensor circuitry configured to provide an input vector, as a plurality of bits that corresponds to a plurality of color components for an image pixel, and an image processor formed in an array of memory cells. The image processor is coupled to the sensor circuitry to receive the plurality of bits of the input vector. The image processor is configured to perform a color correction operation in the array by performing matrix multiplication on the input vector and a parameter matrix to determine an output vector that is color corrected.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="97.28mm" wi="158.75mm" file="US20230007220A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="218.86mm" wi="170.52mm" file="US20230007220A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="202.86mm" wi="171.45mm" file="US20230007220A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="215.90mm" wi="64.85mm" orientation="landscape" file="US20230007220A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="220.81mm" wi="154.52mm" file="US20230007220A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">PRIORITY INFORMATION</heading><p id="p-0002" num="0001">This application is a Continuation of U.S. application Ser. No. 17/150,828, filed Jan. 15, 2021, which will issue as U.S. Pat. No. 11,445,157 on Sep. 13, 2022, which is a Continuation of U.S. application Ser. No. 16/550,707, filed Aug. 26, 2019, which issued as U.S. Pat. No. 10,897,605 on Jan. 19, 2021, which is a Continuation of U.S. application Ser. No. 16/002,644, filed Jun. 7, 2018, which issued as U.S. Pat. No. 10,440,341 on Oct. 8, 2019, the contents of which are included herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates generally to semiconductor memory and methods, and more particularly, to apparatuses, systems, and methods for image signal processing.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Memory resources are typically provided as internal, semiconductor, integrated circuits in computers or other electronic systems. There are many different types of memory, including volatile and non-volatile memory. Volatile memory can require power to maintain its data (e.g., host data, error data, etc.). Volatile memory can include random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), synchronous dynamic random access memory (SDRAM), and thyristor random access memory (TRAM), among other types. Non-volatile memory can provide persistent data by retaining stored data when not powered. Non-volatile memory can include NAND flash memory, NOR flash memory, and resistance variable memory, such as phase change random access memory (PCRAM) and resistive random access memory (ReRAM), ferroelectric random access memory (FeRAM), and magnetoresistive random access memory (MRAM), such as spin torque transfer random access memory (STT RAM), among other types.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram illustrating an example of a resource implementation that may be utilized to include an image processor formed in an array of memory cells in accordance with a number of embodiments of the present disclosure.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an example of a portion of a resistive random access memory (ReRAM) array that may be operated as an image processor in accordance with a number of embodiments of the present disclosure.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a parameter matrix usable by an image processor formed in an array of memory cells in accordance with a number of embodiments of the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example of a plurality of color correction operations that may be performed by a number of matrix multiplication units (MMUs) of an image processor formed in an array of memory cells in accordance with a number of embodiments of the present disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example of a plurality of color correction operations that may be performed by a corresponding plurality of MMUs of an image processor formed in an array of memory cells in accordance with a number of embodiments of the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example of a configuration for performance of a plurality of color correction operations on a single MMU of an image processor formed in an array of memory cells in accordance with a number of embodiments of the present disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart illustrating an example of an image processor formed in an array of memory cells performing a color correction in accordance with a number of embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0012" num="0011">The present disclosure includes systems, apparatuses, and methods associated with an image processor formed in an array of memory cells. In a number of embodiments, an apparatus includes sensor circuitry configured to provide an input vector, as a plurality of bits that corresponds to a plurality of color components for an image pixel, and an image processor formed in an array of memory cells. The image processor is coupled to the sensor circuitry to receive the plurality of bits of the input vector. The image processor is configured to perform a color correction operation in the array of memory cells by performance of matrix multiplication on the input vector and a parameter matrix to determine an output vector that is color corrected.</p><p id="p-0013" num="0012">With an increasing demand for higher image resolutions, the data access bandwidth from memory (e.g., DRAM) to processing units of an image signal processor (ISP) (e.g., on a host that may be indirectly coupled to the memory) is progressively increasing. Such increases in data access bandwidth may cause power consumption for such an ISP to be unreasonably large (e.g., for mobile and/or remote devices, such as smart phones).</p><p id="p-0014" num="0013">The present disclosure describes a number of embodiments of image processors to perform color correction processing in the array of memory cells to overcome such potential difficulties, as well as to provide other benefits. Together with there being no data feedback loop and/or related data dependence between color correction operations, various embodiments of signal processing implementations described herein for color correction may allow a majority of (e.g., all) such processing (e.g., computational units and/or control units thereof) to be moved to a memory chip (e.g., associated with and/or within a RAM array) so as to reduce the complexity of memory access.</p><p id="p-0015" num="0014">In the architecture described herein, an image processor may be formed as a part of RAM (e.g., ReRAM) to function as a processor in memory (PIM). Such an image processor may, in a number of embodiments, be termed an in-memory color correction processor. Without resulting in degraded performance relative to other ISP implementations, this image processor may reduce power consumption for color correction without adding notably more components to the memory chip. For example, a crossbar architecture of ReRAM memory cells may not only store (e.g., be used to read and/or write) data, but also may be utilized to perform arithmetic operations such as addition, subtraction, multiplication, and/or division, in addition to the matrix multiplication described herein, on operands via a number of operations without incorporation of additional components.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>2</b></figref> of this disclosure shows a ReRAM cell and crossbar configuration for computing the color correction operations described herein. For example, a crossbar with a 3&#xd7;3 ReRAM cell configuration may be used to perform matrix multiplication on a 3&#xd7;3 matrix (parameter matrix) with a 3&#xd7;1 vector and then to provide an output as a 3&#xd7;1 vector. As described herein, a crossbar of 3&#xd7;3=9 ReRAM cells may be used as an MMU that contributes to or replaces the ISP without modification to an inherent configuration of a ReRAM crossbar array.</p><p id="p-0017" num="0016">Consistent with the pipeline image processor configuration described in connection with <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a plurality of crossbar arrays (e.g., a plurality of 3&#xd7;3 MMUs) may be configured to perform a corresponding number of a plurality of ISP stages of color correction for a corresponding number of a plurality of pixels at the same time (e.g., during a same clock cycle). In a number of embodiments (e.g., as shown and described in connection with <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>), a number of the plurality of MMUs, the plurality of ISP stages, and the plurality of pixels each may be seven. For example, raw data (e.g., a 3&#xd7;1 vector corresponding to RGB color components) of a first pixel may be input to the first crossbar to undergo a first stage of processing. A 3&#xd7;1 vector may be output from the first crossbar to be input to a second crossbar to undergo a second stage of processing for the first pixel. Meanwhile, the first crossbar may perform the first stage of processing for a second pixel. Continuing with this pipeline mode, all seven processing stages for seven different pixels may be performed substantially simultaneously.</p><p id="p-0018" num="0017">Corresponding to the image processor configuration described in connection with <figref idref="DRAWINGS">FIG. <b>6</b></figref>, one crossbar may be used to perform the seven processing stages for each pixel. For example, a first stage (e.g., clock cycle) may be that the raw data (e.g., RGB vector) of one pixel is input to the one crossbar to undergo the first stage of processing. The second stage of processing may be that the output (e.g., a 3&#xd7;1 vector) from the first stage is input back to the same crossbar to undergo the second stage of processing for the same pixel. After seven stages, all seven processing stages for the same pixel may be completed on the one crossbar array.</p><p id="p-0019" num="0018">Accordingly, due to the inherent signal processing capabilities of ReRAM, the color correction processing of an ISP may be performed by and/or on the memory. Moreover, through use of crossbar ReRAM architecture, for example, additional processing components for color correction may be reduced (e.g., unnecessary) because the crossbar of ReRAM may not only store data but also be utilized to perform the matrix multiplication and other arithmetic operations described herein. As such, the image processor described herein may contribute to reduction in power consumption and/or an increase in data access bandwidth related to image signal and/or color correction processing.</p><p id="p-0020" num="0019">The figures herein follow a numbering convention in which the first digit or digits of a reference number correspond to the figure number and the remaining digits identify an element or component in the figure. Similar elements or components between different figures may be identified by the use of similar digits. For example, <b>104</b> may reference element &#x201c;04&#x201d; in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and a similar element may be referenced as <b>504</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram illustrating an example of a resource implementation that may be utilized to include an image processor formed in an array of memory cells in accordance with a number of embodiments of the present disclosure. The resource implementation <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is intended to show components that may be particularly applicable to in-memory color correction processing and other electrical, mechanical, and/or processing elements that may contribute to such processing may be omitted for clarity.</p><p id="p-0022" num="0021">The resource implementation <b>100</b> described herein includes sensor circuitry <b>102</b> configured to provide an input vector as a plurality of bits <b>103</b> that corresponds to a plurality of color components for an image pixel. In a number of embodiments, the sensor circuitry <b>102</b> may be, or may include, digital image sensors and/or photosensors arranged in a color filter array (e.g., a Beyer filter, among other possible configurations) for digital acquisition of a color image. The digital image sensors and/or photosensors may be configured to provide a plurality of bits <b>103</b> that corresponds to a plurality of color components for an image pixel. For example, each of the sensors may be configured to provide a data value that indicates a level of one of a plurality of color components for the image pixel.</p><p id="p-0023" num="0022">The resource implementation <b>100</b> described herein also includes an image processor <b>104</b> formed in an array of memory cells (e.g., as shown and described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The image processor <b>104</b> may be coupled to (e.g., directly via a bus and without intervening processing circuitry) the sensor circuitry <b>102</b> to receive the plurality of bits <b>103</b> of the input vector corresponding to the plurality of color components for the image pixel sensed and/or acquired by the sensor circuitry <b>102</b>. The image processor <b>104</b> may be configured to perform color correction operation by performing matrix multiplication on the input vector (e.g., as shown at <b>331</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>) and a parameter matrix (e.g., as shown at <b>333</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>) to determine an output vector that is color corrected (e.g., as shown at <b>334</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref> and elsewhere herein).</p><p id="p-0024" num="0023">The array of memory cells, including the image processor <b>104</b>, may be formed to include at least a portion of a RAM array <b>105</b>. The image processor <b>104</b> may be formed in the RAM array <b>105</b> to include an MMU <b>106</b>. The MMU <b>106</b> may be formed in the array as a number of memory cells (e.g., as shown and described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>) formed as an MMU <b>106</b>. The number of memory cells may, in a number of embodiments, correspond to a number of parameter entries in the parameter matrix, as described herein. The memory cells included in the image processor <b>104</b> and/or MMU <b>106</b> may be configured to perform (e.g., by matrix multiplication) the determination of the color corrected output vector. The determination of the color corrected output vector may, in a number of embodiments, be performed in-memory (e.g., in the array) without the memory cells being coupled to sensing circuitry including a sense amplifier (not shown).</p><p id="p-0025" num="0024">The number of memory cells of the MMU <b>106</b> may be formed to correspond to a number of parameter entries in a parameter matrix (e.g., as shown at <b>333</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>). The plurality of color components for the image pixel may, in a number of embodiments, correspond to three color components. The three color components may, for example, be red (R), green (G), and blue (B), among other possible numbers and/or colors for the color components of the image pixels (e.g., cyan (C), magenta (M), and yellow (Y), etc.). The plurality of bits <b>103</b> of the input vector (e.g., as shown at <b>331</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>) may be three bits to correspond to the three color components. The image processor <b>104</b> may be configured to perform the matrix multiplication on the input vector and the parameter matrix to yield an output vector (e.g., as shown at <b>334</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref>) to, in a number of embodiments, include three color corrected bits. In a number of embodiments, a fast Fourier transform (FFT) may be performed for the matrix multiplication.</p><p id="p-0026" num="0025">The resource implementation <b>100</b> described herein also may include a controller <b>107</b> configured to direct input of the input vector from the sensor circuitry <b>102</b> (e.g., directly) to the image processor <b>104</b> and/or MMU <b>106</b>. The controller <b>107</b> also may be configured to direct performance of a number of color correction operations (e.g., as described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>) in the array by the image processor <b>104</b> to determine the color corrected output vector.</p><p id="p-0027" num="0026">The resource implementation <b>100</b> described herein also may include a display processor <b>108</b>. The display processor <b>108</b> may be configured to perform other ISP operations following performance of the color correction operations by the image processor <b>104</b> to yield output vectors as described herein. Output from the display processor <b>108</b> may, in a number of embodiments, be an image and/or a series of images displayable by a screen <b>109</b> (e.g., a user interface).</p><p id="p-0028" num="0027">The image processor <b>104</b> and/or MMU <b>106</b> may, in a number of embodiments, be implemented on a number of memory resources. A &#x201c;memory resource&#x201d; as used herein is a general term intended to at least include memory (e.g., memory cells) arranged, for example, in a number of bank groups, banks, bank sections, subarrays, and/or rows of a number of memory devices. The memory resource may be, or may include, in a number of embodiments, a number of volatile memory devices formed and/or operable as RAM, DRAM, SRAM, SDRAM, and/or TRAM, among other types of volatile memory devices. Alternatively or in addition, the memory resource may be, or may include, in a number of embodiments, a number of non-volatile memory devices formed and/or operable as NAND, NOR, PCRAM, ReRAM, FeRAM, MRAM, and/or STT RAM, among other types of non-volatile memory devices.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an example of a portion of a ReRAM array that may be operated as an image processor <b>104</b> and/or MMU <b>106</b> in accordance with a number of embodiments of the present disclosure. The image processors (e.g., as shown at <b>104</b>, <b>504</b>-<b>1</b>, and <b>604</b>-<b>2</b> and described in connection with <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>5</b>, and <b>6</b></figref>, respectively) may, in a number of embodiments, be formed in and/or as an array of memory cells (e.g., the RAM array shown at <b>105</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>1</b></figref>). The portion of the ReRAM array illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> may correspond to an embodiment of a single MMU <b>206</b>, although embodiments of image processors <b>104</b> described herein are not limited to a single MMU, an MMU being formed as a ReRAM array, and/or the number of ReRAM memory cells shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Moreover, architecture of the array of memory cells utilized for the single MMU <b>206</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> may correspond to architecture of a remainder of the RAM array <b>105</b> not utilized as a number of MMUs <b>206</b> (e.g., the remainder may be utilized for other data storage and/or processing operations), although the embodiments are not so limited.</p><p id="p-0030" num="0029">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the array of memory cells of the single MMU <b>206</b> may, in a number of embodiments, be formed as a 3&#xd7;3 array of ReRAM cells in a crossbar configuration <b>211</b>. As such, each ReRAM memory cell <b>217</b> may be coupled to and/or be formed between a first conductive line <b>213</b> and a second conductive line <b>215</b>. Each of the first conductive lines <b>213</b> may correspond to a wordline and each of the second conductive lines <b>215</b> may correspond to a bitline, or vice versa, in a number of embodiments. For example, in the embodiment of the 3&#xd7;3 crossbar array <b>211</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the MMU <b>206</b> includes ReRAM cells <b>217</b>-<b>1</b>-<b>1</b>, <b>217</b>-<b>1</b>-<b>2</b>, and <b>217</b>-<b>1</b>-<b>3</b> coupled to conductive line <b>213</b>-<b>1</b>, ReRAM cells <b>217</b>-<b>2</b>-<b>1</b>, <b>217</b>-<b>2</b>-<b>2</b>, and <b>217</b>-<b>2</b>-<b>3</b> coupled to conductive line <b>213</b>-<b>2</b>, and ReRAM cells <b>217</b>-<b>3</b>-<b>1</b>, <b>217</b>-<b>3</b>-<b>2</b>, and <b>217</b>-<b>3</b>-<b>3</b> coupled to conductive line <b>213</b>-<b>3</b>. Resulting from the configuration of the 3&#xd7;3 crossbar array <b>211</b>, ReRAM cells <b>217</b>-<b>1</b>-<b>1</b>, <b>217</b>-<b>2</b>-<b>1</b>, and <b>217</b>-<b>3</b>-<b>1</b> are coupled to conductive line <b>215</b>-<b>1</b>, ReRAM cells <b>217</b>-<b>1</b>-<b>2</b>, <b>217</b>-<b>2</b>-<b>2</b>, and <b>217</b>-<b>3</b>-<b>2</b> are coupled to conductive line <b>213</b>-<b>2</b>, and ReRAM cells <b>217</b>-<b>1</b>-<b>3</b>, <b>217</b>-<b>2</b>-<b>3</b>, and <b>217</b>-<b>3</b>-<b>3</b> are coupled to conductive line <b>215</b>-<b>3</b>.</p><p id="p-0031" num="0030">An example memory cell included in the crossbar array <b>211</b> configuration of ReRAM cells for the single MMU <b>206</b> is shown at <b>217</b>-<b>2</b>-<b>3</b> in the array and in more detail next to the array. The detail of the ReRAM cell <b>217</b>-<b>2</b>-<b>3</b> shows that, in a number of embodiments, a ReRAM cell may have an architecture including a top electrode <b>220</b> (e.g., which may be the same as or in addition to conductive line <b>213</b>-<b>2</b>) coupled to a source component (not shown) for application of a particular voltage potential <b>219</b>. The ReRAM cell <b>217</b>-<b>2</b>-<b>3</b> may have an architecture that includes a dielectric metal oxide <b>222</b> to serve as a switching medium (e.g., material) through which a conductive path may be formed via application of the particular voltage potential <b>219</b>. The ReRAM cell <b>217</b>-<b>2</b>-<b>3</b> architecture may include a bottom electrode <b>224</b> (e.g., which may be the same as or in addition to conductive line <b>215</b>-<b>3</b>) coupled to a ground component <b>225</b> to serve as a drain. The resistive switching mechanism of the dielectric metal oxide <b>222</b> may be based upon, for example, formation of a filament in the switching medium when the particular voltage potential <b>219</b> is applied between the top electrode <b>220</b> and the bottom electrode <b>224</b>. There may be different mechanisms for implementing ReRAM based upon different switching materials and/or memory cell configurations.</p><p id="p-0032" num="0031">Crossbar ReRAM technology may utilize a silicon-based switching material as a medium for metallic filament formation. When the particular voltage potential <b>219</b> is applied between the two electrodes <b>220</b> and <b>224</b>, a nanofilament may be formed. Because the resistive switching mechanism may be based upon an electric field, a memory state (e.g., data value) of a crossbar ReRAM cell may be stable (e.g., capable of withstanding temperature swings from &#x2212;40 to +125 degrees Celsius, at least a million write/read/erase cycles, and/or to provide a data retention of 10 years at +85 degrees Celsius).</p><p id="p-0033" num="0032">Crossbar ReRAM technology may be formed in a two dimensional (2D) architecture (e.g., as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) and/or in a 3D architecture. The 2D architecture may be formed on and/or the 3D architecture may be stacked upon a single chip (e.g., die) to provide terabytes of data storage. The complementary metal oxide semiconductor (CMOS) compatibility of the crossbar ReRAM technology may enable both logic (e.g., data processing) and memory (e.g., storage) to be integrated onto the single chip. A crossbar ReRAM array may be formed in a one transistor/one capacitor (1T1C) configuration and/or in a configuration with one transistor driving n resistive memory cells (1TNR), among other possible configurations.</p><p id="p-0034" num="0033">Multiple inorganic and organic material systems may enable thermal and/or ionic resistive switching. Such systems may be utilized in the in-memory image processors described herein. Such systems may, in a number of embodiments, include: phase change chalcogenides (e.g., Ge<sub>2</sub>Sb<sub>2</sub>Te<sub>5</sub>, AgInSbTe, among others); binary transition metal oxides (e.g., NiO, TiO<sub>2</sub>, among others); perovskites (e.g., Sr(Zr)TiO<sub>3</sub>, PCMO, among others); solid state electrolytes (e.g., GeS, GeSe, SiO<sub>x</sub>, Cu<sub>2</sub>S, among others); organic charge transfer complexes (e.g., Cu tetracyanoquinodimethane (TCNQ), among others); organic charge acceptor systems (e.g., Al amino-dicyanoimidazole (AIDCN), among others); and/or 2D (layered) insulating materials (e.g., hexagonal BN, among others); among other possible systems for resistive switching.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example <b>330</b> of a parameter matrix <b>333</b> used by an image processor <b>104</b> and/or MMU <b>106</b> formed in an array of memory cells in accordance with a number of embodiments of the present disclosure. As described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the single MMU <b>206</b> may be formed in the RAM array <b>105</b> of memory cells as a 3&#xd7;3 array of resistive ReRAM cells <b>217</b> in a crossbar <b>211</b> configuration.</p><p id="p-0036" num="0035">Each MMU of a plurality of MMUs for use in a pipeline (e.g., as shown and described in connection with <figref idref="DRAWINGS">FIG. <b>5</b></figref>) and/or a single MMU to be repeatedly used (e.g., as shown and described in connection with <figref idref="DRAWINGS">FIG. <b>6</b></figref>) may include (e.g., store) one parameter matrix <b>333</b> at a time. The one parameter matrix <b>333</b> may be selected and/or input from a plurality of selectable parameter matrices. Examples of the plurality of different parameter matrices that enable performance of a corresponding number of a plurality of different color correction operations on MMUs <b>206</b> of the image processor <b>104</b> are described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The plurality of selectable parameter matrices to enable the plurality of different color correction operations may be stored by a parameter matrix component (e.g., as shown at <b>672</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>6</b></figref>). One of the plurality of selectable parameter matrices may, in a number of embodiments, be selectable by a control unit (e.g., as shown at <b>671</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>6</b></figref>) for input to the single MMU <b>106</b>. The one parameter matrix <b>333</b> may include nine (3&#xd7;3) parameter entries to be stored on the corresponding array of nine (3&#xd7;3) ReRAM memory cells <b>217</b> of the MMU <b>206</b>.</p><p id="p-0037" num="0036">Such a parameter matrix <b>333</b> may be represented by:</p><p id="p-0038" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mrow>  <mo>(</mo>  <mtable>   <mtr>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>1</mn>       <mo>&#x2062;</mo>       <mn>1</mn>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>1</mn>       <mo>&#x2062;</mo>       <mn>2</mn>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>1</mn>       <mo>&#x2062;</mo>       <mn>3</mn>      </mrow>     </msub>    </mtd>   </mtr>   <mtr>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>2</mn>       <mo>&#x2062;</mo>       <mn>1</mn>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>2</mn>       <mo>&#x2062;</mo>       <mn>2</mn>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>2</mn>       <mo>&#x2062;</mo>       <mn>3</mn>      </mrow>     </msub>    </mtd>   </mtr>   <mtr>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>3</mn>       <mo>&#x2062;</mo>       <mn>1</mn>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>3</mn>       <mo>&#x2062;</mo>       <mn>2</mn>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>w</mi>      <mrow>       <mn>3</mn>       <mo>&#x2062;</mo>       <mn>3</mn>      </mrow>     </msub>    </mtd>   </mtr>  </mtable>  <mo>)</mo> </mrow></math></maths></p><p id="p-0039" num="0000">where each w value may represent a color correction coefficient to be stored at the position of a corresponding ReRAM memory cell <b>217</b>, as indicated by the subscripts of coefficients w<sub>xx</sub>. Each of the plurality of input vectors <b>331</b> utilized in performance of the matrix multiplication with the parameter matrix <b>333</b> may be a 3&#xd7;1 vector <b>332</b>. In a number of embodiments, the 3&#xd7;1 vector <b>332</b> may have three values (a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>) that correspond to the levels sensed by the sensor circuitry <b>102</b> for each of the color components (e.g., RGB, CMY, etc.) of a pixel. The output vectors <b>334</b> determined by matrix multiplication of each of the input vectors <b>331</b> by a particular parameter matrix <b>333</b> also may each be a 3&#xd7;1 vector <b>336</b> having three values (b<sub>1</sub>, b<sub>2</sub>, b<sub>3</sub>) that correspond to color corrected levels of the color components (e.g., RGB, CMY, YUV, etc.) of the pixel.</p><p id="p-0040" num="0037">Accordingly, a number of parameter entries in a particular parameter matrix <b>333</b> is a number of the plurality of bits in an input vector <b>331</b> squared (e.g., 3&#xd7;3=9 parameter entries). A particular parameter entry of the parameter matrix may be stored by a corresponding memory cell <b>217</b> in the MMU <b>206</b> of the image processor <b>104</b> and a number of a plurality of memory cells in the MMU <b>206</b> may be based at least in part on the number of the plurality of bits in the input vector (e.g., nine ReRAM memory cells <b>217</b> in the MMU <b>206</b> shown and described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The number (e.g., nine) of the plurality of memory cells in the MMU may be arranged in a substantially rectilinear configuration. For example, an edge of each of the two rectilinear directions of the MMU <b>206</b> may be formed to include the number of the plurality of memory cells <b>217</b> corresponding to the number of the plurality of bits of the input vector <b>331</b> (e.g., three memory cells <b>217</b> corresponding to three bits of the 3&#xd7;1 vector <b>332</b>).</p><p id="p-0041" num="0038">A number of alternative color spaces may be used. Such alternative color spaces may, in a number of embodiments, utilize more than three color components per pixel (e.g., a four color CMYK color space in which black (K) is added to CMY, although embodiments are not so limited). Accordingly, the number of parameter entries in a particular parameter matrix <b>333</b> may be a number of the color components per pixel squared, which may correspond to the plurality of bits in the input vector <b>331</b> (e.g., 4&#xd7;4=16 parameter entries). The number of parameter entries in the parameter matrix may, in a number of embodiments, be based on a different number of bits on each side of the matrix (e.g., 4&#xd7;3=12 parameter bits). A controller (e.g., as shown at <b>107</b>) may be configured to include a variable number of the plurality of memory cells <b>217</b> to correspond to the number of the plurality of bits of the input vector <b>331</b> (e.g., based upon the number of color components, the number of bits per pixel, and/or the number of parameter entries in the parameter matrix).</p><p id="p-0042" num="0039"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example of a plurality of color correction operations <b>440</b> that may be performed by a number of MMUs <b>206</b> of an image processor <b>104</b> formed in an array of memory cells in accordance with a number of embodiments of the present disclosure.</p><p id="p-0043" num="0040">An ISP may be an important component of, for example, a digital camera and may be used in various applications (e.g., smart phones, security surveillance systems, and automated (self-driving) vehicles, among many other applications). As described herein, an image processor <b>104</b> may perform in-memory at least some of the operations that an ISP may perform. For example, the following seven signal processing operations for color correction may be performed in-memory by the image processor <b>104</b>: defect correction; demosaic (color interpolation); white balance; color adjustment; gamma adjustment for lightness and/or contrast enhancement; color conversion; and/or down-sampling. These operations may be performed in sequence, although the order between some operations (e.g. color interpolation and white balance) may be reversed. Seven operations of such a sequence of color correction operations are presented herein by way of example. However, such sequences each may, in a number of embodiments, include fewer than or more than seven color correction operations to be performed by the image processor <b>104</b>.</p><p id="p-0044" num="0041">As described herein, a plurality of bits <b>103</b> for an input vector <b>431</b> may be input to a particular MMU <b>206</b> that stores a particular parameter matrix <b>333</b> to enable matrix multiplication for performance of a particular color correction operation <b>440</b> by the image processor <b>104</b>. The input vector <b>431</b> may be input (e.g., directly) from the sensor circuitry <b>102</b> to a particular MMU <b>206</b> for performance of a first operation in the sequence of color correction operations <b>440</b>. The input vectors <b>431</b> input to the particular (e.g., first) MMU <b>206</b> may be raw data (e.g., in the form of bits <b>103</b>) that conform to a color pattern. An example of such a color pattern is the Bayer pattern where half of the total number of pixels are G, while a quarter of the total number of pixels is assigned to both R and B. The Bayer pattern of a color image sensor <b>102</b> (e.g., the respective digital image sensors and/or photosensors arranged in a color filter array) may be covered with either a R, a G, or a B filter in a repeating 2&#xd7;2 patter arrangement.</p><p id="p-0045" num="0042">The sequence of the plurality of color correction operations described herein may be performed by one or more MMUs <b>206</b> of the image processor <b>104</b>. The crossbar array <b>211</b> of memory cells, including the MMUs <b>206</b> of the image processor <b>104</b>, is formed as ReRAM having memory cells <b>217</b> configured to store data values and to perform the color correction operation thereon in-memory without feedback from a subsequent in-memory color correction operation performed in the sequence. For example, an output vector <b>334</b> resulting from performance of one color correction operation may be input as an input vector <b>331</b> for performance of a next color correction operation in the sequence, but not as input for a previous color correction operation in the sequence.</p><p id="p-0046" num="0043">A first color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a defect correction operation, as shown at <b>442</b> in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, for a pixel having a color value different from neighboring pixels. For example, when an image sensor of the sensor circuitry <b>102</b> senses a pixel having a color value that is notably different from its neighbors, the different pixel may be distracting and/or unacceptable to a viewer. Such pixels may be termed &#x201c;defective&#x201d; and, if not corrected, may appear as confetti-like errors (e.g., before or after performance of a following color interpolation operation). These defective pixels may be corrected (e.g., estimated) by interpolation of accurately recorded data in their neighborhood (e.g., with methods such as median filtering, mean filtering, simple additions, and/or shifts, etc.).</p><p id="p-0047" num="0044">A second color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a color interpolation (demosaic) operation, as shown at <b>444</b>, to interpolate for the pixel a number of missing color values from neighboring pixels. The color interpolation operation <b>444</b> may use an output vector from the defect correction operation <b>442</b> as input <b>443</b> to enable performance of the color interpolation operation <b>444</b>. The color interpolation operation <b>444</b> may, for example, be performed by processing to interpolate the two missing color values for each pixel (e.g., in a Bayer pattern) using one or more of a number of possible correction techniques. Such correction techniques may include: bilinear interpolation; median-value interpolation; bilinear interpolation corrected with gradient; Kodak basic reconstruction; edge sensing interpolation with smooth Hue transition; Kodak edge strength algorithm; variable number gradients; pattern recognition; and/or interpolation with a color correction algorithm; among other possibilities.</p><p id="p-0048" num="0045">A third color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a white balance operation, as shown at <b>446</b>, to shift toward whiteness the color values for the plurality of color components of the pixel. The white balance operation <b>446</b> may use an output vector from the color interpolation <b>444</b> as input <b>445</b> to enable performance of the white balance operation <b>446</b>. The white balance operation <b>446</b> may, for example, be based upon the human vision system having an ability to map a white color to a sensation of being white even though an object may have different radiances when illuminated with different light sources. For example, if a white card is taken outside into sunlight, the card may look white to a person. If the white card is taken inside under fluorescent lights, the card still looks white to the person. If the white card is switched to being illuminated by an incandescent light bulb, the card still looks white to the person. Even if the white card is illuminated by a yellow light bulb, the card still looks white to the person within a few minutes. While being illuminated by each of these light sources, the white card is reflecting a different color spectrum. Nonetheless, the human vision system is capable of making the card look white even while perceiving each of the different color spectra.</p><p id="p-0049" num="0046">In a white balance operation <b>446</b> performed by an MMU <b>206</b>, this may be accomplished by white balance processing. The processing of the white balance operation <b>446</b> may be performed by shifting, for example, RGB values using the following Equation (1):</p><p id="p-0050" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mo>(</mo>      <mtable>       <mtr>        <mtd>         <msub>          <mi>R</mi>          <mi>w</mi>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>G</mi>          <mi>w</mi>         </msub>        </mtd>       </mtr>       <mtr>        <mtd>         <msub>          <mi>B</mi>          <mi>w</mi>         </msub>        </mtd>       </mtr>      </mtable>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <mo>(</mo>       <mtable>        <mtr>         <mtd>          <msub>           <mi>W</mi>           <mi>r</mi>          </msub>         </mtd>         <mtd>          <mn>0</mn>         </mtd>         <mtd>          <mn>0</mn>         </mtd>        </mtr>        <mtr>         <mtd>          <mn>0</mn>         </mtd>         <mtd>          <msub>           <mi>W</mi>           <mi>g</mi>          </msub>         </mtd>         <mtd>          <mn>0</mn>         </mtd>        </mtr>        <mtr>         <mtd>          <mn>0</mn>         </mtd>         <mtd>          <mn>0</mn>         </mtd>         <mtd>          <msub>           <mi>W</mi>           <mi>b</mi>          </msub>         </mtd>        </mtr>       </mtable>       <mo>)</mo>      </mrow>      <mo>&#x2062;</mo>      <mrow>       <mo>(</mo>       <mtable>        <mtr>         <mtd>          <msub>           <mi>R</mi>           <mi>d</mi>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>G</mi>           <mi>d</mi>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>B</mi>           <mi>d</mi>          </msub>         </mtd>        </mtr>       </mtable>       <mo>)</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>1</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0051" num="0000">where W<sub>r</sub>, W<sub>g</sub>, and W<sub>b </sub>are coefficients in a parameter matrix to shift the original values of R<sub>d</sub>, G<sub>d</sub>, and B<sub>d</sub>, respectively, of input <b>445</b> of the 3&#xd7;1 vector <b>332</b>. R<sub>w</sub>, G<sub>w</sub>, and B<sub>w </sub>are a 3&#xd7;1 vector <b>336</b> of RGB values output following performance of the white balance operation <b>446</b>. The values of balancing coefficients W<sub>r</sub>, W<sub>g</sub>, and W<sub>b </sub>may depend on lighting conditions (e.g., temperature), systems, and/or environments and, thus, may be tunable.</p><p id="p-0052" num="0047">A fourth color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a color adjustment operation, as shown at <b>448</b>, to shift output of the color values from the sensor circuitry to correspond to perception of the image pixel by human vision. The color adjustment operation <b>448</b> may use an output vector from the white balance operation <b>446</b> as input <b>447</b> to enable performance of the color adjustment operation <b>448</b>. The color adjustment operation <b>448</b> may, for example, be performed because the response of a color filter array used on, for example, CMOS sensor circuitry may not match the response of the human vision system closely enough.</p><p id="p-0053" num="0048">The values for color adjustment of RGB may be determined by performance of the following Equation (2):</p><p id="p-0054" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mo>(</mo>      <mtable>       <mtr>        <mtd>         <mi>R</mi>        </mtd>       </mtr>       <mtr>        <mtd>         <mi>G</mi>        </mtd>       </mtr>       <mtr>        <mtd>         <mi>B</mi>        </mtd>       </mtr>      </mtable>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <mo>(</mo>       <mtable>        <mtr>         <mtd>          <msub>           <mi>C</mi>           <mi>rr</mi>          </msub>         </mtd>         <mtd>          <msub>           <mi>C</mi>           <mi>rg</mi>          </msub>         </mtd>         <mtd>          <msub>           <mi>C</mi>           <mi>rb</mi>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>C</mi>           <mrow>            <mi>g</mi>            <mo>&#x2062;</mo>            <mi>r</mi>           </mrow>          </msub>         </mtd>         <mtd>          <msub>           <mi>C</mi>           <mi>gg</mi>          </msub>         </mtd>         <mtd>          <msub>           <mi>C</mi>           <mi>gb</mi>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>C</mi>           <mi>br</mi>          </msub>         </mtd>         <mtd>          <msub>           <mi>C</mi>           <mi>bg</mi>          </msub>         </mtd>         <mtd>          <msub>           <mi>C</mi>           <mi>bb</mi>          </msub>         </mtd>        </mtr>       </mtable>       <mo>)</mo>      </mrow>      <mo>&#x2062;</mo>      <mrow>       <mo>(</mo>       <mtable>        <mtr>         <mtd>          <msub>           <mi>R</mi>           <mrow>            <mo>_</mo>            <mo>&#x2062;</mo>            <mi>w</mi>           </mrow>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>G</mi>           <mrow>            <mo>_</mo>            <mo>&#x2062;</mo>            <mi>w</mi>           </mrow>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>B</mi>           <mrow>            <mo>_</mo>            <mo>&#x2062;</mo>            <mi>w</mi>           </mrow>          </msub>         </mtd>        </mtr>       </mtable>       <mo>)</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>2</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0055" num="0000">where</p><p id="p-0056" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mrow>  <mo>(</mo>  <mtable>   <mtr>    <mtd>     <msub>      <mi>C</mi>      <mi>rr</mi>     </msub>    </mtd>    <mtd>     <msub>      <mi>C</mi>      <mi>rg</mi>     </msub>    </mtd>    <mtd>     <msub>      <mi>C</mi>      <mi>rb</mi>     </msub>    </mtd>   </mtr>   <mtr>    <mtd>     <msub>      <mi>C</mi>      <mrow>       <mi>g</mi>       <mo>&#x2062;</mo>       <mi>r</mi>      </mrow>     </msub>    </mtd>    <mtd>     <msub>      <mi>C</mi>      <mi>gg</mi>     </msub>    </mtd>    <mtd>     <msub>      <mi>C</mi>      <mi>gb</mi>     </msub>    </mtd>   </mtr>   <mtr>    <mtd>     <msub>      <mi>C</mi>      <mi>br</mi>     </msub>    </mtd>    <mtd>     <msub>      <mi>C</mi>      <mi>bg</mi>     </msub>    </mtd>    <mtd>     <msub>      <mi>C</mi>      <mi>bb</mi>     </msub>    </mtd>   </mtr>  </mtable>  <mo>)</mo> </mrow></math></maths></p><p id="p-0057" num="0000">is a color adjustment coefficient parameter matrix that includes coefficients usable to make the RGB color adjustment. The values of the color adjustment coefficients may be determined according to different lighting conditions (e.g., temperature), systems, and/or environments and, thus, may be tunable.</p><p id="p-0058" num="0049">A fifth color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a gamma/lightness/contrast adjustment operation, as shown at <b>450</b>, to shift lightness and/or contrast for a number of pixels in an image by adjustment of an adjustment vector (e.g., a gamma parameter). The gamma/lightness/contrast adjustment operation <b>450</b> may use an output vector from the color adjustment operation <b>448</b> as input <b>449</b> to enable performance of the gamma/lightness/contrast adjustment operation <b>450</b>. The gamma/lightness/contrast adjustment operation <b>450</b> may, for example, be used to control the overall lightness (e.g., brightness) and/or contrast of the image. Images that may not have their lightness and contrast properly adjusted may appear to be bleached out and/or or too dark. Varying a value of the gamma parameter may contribute to adjustment of not only the lightness, but also of color ratios (e.g., of R to G to B) that affect contrast.</p><p id="p-0059" num="0050">Similar to white balance and color adjustment, the gamma/lightness/contrast adjustment may be determined by performance of the following Equation (3):</p><p id="p-0060" num="0000"><maths id="MATH-US-00005" num="00005"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mo>(</mo>      <mtable>       <mtr>        <mtd>         <msup>          <mi>R</mi>          <mo>&#x2033;</mo>         </msup>        </mtd>       </mtr>       <mtr>        <mtd>         <msup>          <mi>G</mi>          <mo>&#x2033;</mo>         </msup>        </mtd>       </mtr>       <mtr>        <mtd>         <msup>          <mi>B</mi>          <mo>&#x2033;</mo>         </msup>        </mtd>       </mtr>      </mtable>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <mrow>        <mo>(</mo>        <mtable>         <mtr>          <mtd>           <msub>            <mi>D</mi>            <mi>rr</mi>           </msub>          </mtd>          <mtd>           <msub>            <mi>D</mi>            <mi>rg</mi>           </msub>          </mtd>          <mtd>           <msub>            <mi>D</mi>            <mi>rb</mi>           </msub>          </mtd>         </mtr>         <mtr>          <mtd>           <msub>            <mi>D</mi>            <mrow>             <mi>g</mi>             <mo>&#x2062;</mo>             <mi>r</mi>            </mrow>           </msub>          </mtd>          <mtd>           <msub>            <mi>D</mi>            <mi>gg</mi>           </msub>          </mtd>          <mtd>           <msub>            <mi>D</mi>            <mi>gb</mi>           </msub>          </mtd>         </mtr>         <mtr>          <mtd>           <msub>            <mi>D</mi>            <mi>br</mi>           </msub>          </mtd>          <mtd>           <msub>            <mi>D</mi>            <mi>bg</mi>           </msub>          </mtd>          <mtd>           <msub>            <mi>D</mi>            <mi>bb</mi>           </msub>          </mtd>         </mtr>        </mtable>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mrow>        <mo>(</mo>        <mtable>         <mtr>          <mtd>           <msup>            <mi>R</mi>            <mo>&#x2032;</mo>           </msup>          </mtd>         </mtr>         <mtr>          <mtd>           <msup>            <mi>G</mi>            <mo>&#x2032;</mo>           </msup>          </mtd>         </mtr>         <mtr>          <mtd>           <msup>            <mi>B</mi>            <mo>&#x2032;</mo>           </msup>          </mtd>         </mtr>        </mtable>        <mo>)</mo>       </mrow>      </mrow>      <mo>+</mo>      <mrow>       <mo>(</mo>       <mtable>        <mtr>         <mtd>          <msub>           <mi>D</mi>           <mi>r</mi>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>D</mi>           <mi>g</mi>          </msub>         </mtd>        </mtr>        <mtr>         <mtd>          <msub>           <mi>D</mi>           <mi>b</mi>          </msub>         </mtd>        </mtr>       </mtable>       <mo>)</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>3</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0061" num="0000">where</p><p id="p-0062" num="0000"><maths id="MATH-US-00006" num="00006"><math overflow="scroll"> <mrow>  <mrow>   <mo>(</mo>   <mtable>    <mtr>     <mtd>      <msub>       <mi>D</mi>       <mi>rr</mi>      </msub>     </mtd>     <mtd>      <msub>       <mi>D</mi>       <mrow>        <mi>r</mi>        <mo>&#x2062;</mo>        <mi>g</mi>       </mrow>      </msub>     </mtd>     <mtd>      <msub>       <mi>D</mi>       <mi>rb</mi>      </msub>     </mtd>    </mtr>    <mtr>     <mtd>      <msub>       <mi>D</mi>       <mrow>        <mi>g</mi>        <mo>&#x2062;</mo>        <mi>r</mi>       </mrow>      </msub>     </mtd>     <mtd>      <msub>       <mi>D</mi>       <mi>gg</mi>      </msub>     </mtd>     <mtd>      <msub>       <mi>D</mi>       <mi>gb</mi>      </msub>     </mtd>    </mtr>    <mtr>     <mtd>      <msub>       <mi>D</mi>       <mi>br</mi>      </msub>     </mtd>     <mtd>      <msub>       <mi>D</mi>       <mi>bg</mi>      </msub>     </mtd>     <mtd>      <msub>       <mi>D</mi>       <mi>bb</mi>      </msub>     </mtd>    </mtr>   </mtable>   <mo>)</mo>  </mrow>  <mo>&#x2062;</mo>  <mtext>   </mtext>  <mi>i</mi> </mrow></math></maths></p><p id="p-0063" num="0000">is a lightness and contrast coefficient parameter matrix and</p><p id="p-0064" num="0000"><maths id="MATH-US-00007" num="00007"><math overflow="scroll"> <mrow>  <mo>(</mo>  <mtable>   <mtr>    <mtd>     <msub>      <mi>D</mi>      <mi>r</mi>     </msub>    </mtd>   </mtr>   <mtr>    <mtd>     <msub>      <mi>D</mi>      <mi>g</mi>     </msub>    </mtd>   </mtr>   <mtr>    <mtd>     <msub>      <mi>D</mi>      <mi>b</mi>     </msub>    </mtd>   </mtr>  </mtable>  <mo>)</mo> </mrow></math></maths></p><p id="p-0065" num="0000">is a gamma parameter coefficient that together are usable to make the lightness and/or contrast adjustment. The values of the lightness and contrast coefficients and/or the gamma parameter coefficient may be determined according to different lighting conditions (e.g., temperature), systems, and/or environments and, thus, may be tunable.</p><p id="p-0066" num="0051">A sixth color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a color conversion operation, as shown at <b>452</b>, to convert a number of the plurality of color components for the image pixel provided by the sensor circuitry to a corresponding number of a plurality of color components in a different color space that may, for example, be more suitable for further processing. The color conversion operation <b>452</b> may use an output vector from the gamma/lightness/contrast adjustment operation <b>450</b> as input <b>451</b> to enable performance of the color conversion operation <b>452</b>.</p><p id="p-0067" num="0052">The color conversion operation <b>452</b> may, for example, use three colors (e.g., RGB) of each pixel to be converted to a YUV format (e.g., color space) for further application processing (e.g., video compression, among other such applications). This conversion may be accomplished by performance of Equations (4):</p><p id="p-0068" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>Y=</i>0.29900<i>R+</i>0.58700<i>G+</i>0.11400<i>B </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0069" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>Cb=&#x2212;</i>0.16874<i>R&#x2212;</i>0.33126<i>G+</i>0.50000<i>B+</i>2<sup>SP/2 </sup><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0070" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>Cr=</i>0.50000<i>R&#x2212;</i>0.41869<i>G&#x2212;</i>0.08131<i>B+</i>2<sup>SP/2</sup>&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0071" num="0000">where SP corresponds to sample precision. The components of the YUV color space may be converted back to the RGB color space for each pixel by performance of Equations (5):</p><p id="p-0072" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>R=Y+</i>1.40200<i>Cr </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0073" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>G=Y&#x2212;</i>0.34414(<i>Cb&#x2212;</i>2<sup>SP/2</sup>)&#x2212;0.71414(<i>Cr&#x2212;</i>2<sup>SP/2</sup>)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0074" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>B=Y+</i>1.72200(<i>Cb&#x2212;</i>2<sup>SP/2</sup>)&#x2003;&#x2003;(5)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0075" num="0000">Using Equations 4-5, RGB values may be converted to YCbCr values of the YUV color space, which may be utilized in further (e.g., digitalized) processing, and YCbCr values may be converted back to RGB values.</p><p id="p-0076" num="0053">A seventh color correction operation performed in the sequence by the image processor <b>104</b> and/or MMU <b>206</b> may be a down-sampling operation, as shown at <b>454</b>, to reduce inclusion of color values for pixels of the image, for at least one of the plurality of color components in the different color space, to a lower number of color values. The down-sampling operation <b>454</b> may use an output vector from the color conversion operation <b>452</b> as input <b>453</b> to enable performance of the down-sampling operation <b>454</b>.</p><p id="p-0077" num="0054">The down-sampling operation <b>454</b> may, for example, be performed to correspond to visual perception of the image being processed. One down-sampling ratio that may be used for such down-sampling is &#x201c;4:2:0&#x201d;, which means that no down-sampling is performed on four pixels of the Y component, such that all four pixels remain, and 2:1 vertical and horizontal down-sampling is performed for the Cb component and the Cr component, such that only one out of four pixels remain. With a down-sampling ratio having been selected, there are a number of techniques to implement processing of the down-sampling operation <b>454</b>. One technique is to just duplicate the value of one pixel and skip the other adjacent pixels. This may reduce complexity, but potentially produce block effects. Another technique is to apply filtering algorithms. A compromise technique is to apply averaging between adjacent and/or neighboring pixels.</p><p id="p-0078" num="0055">In a number of embodiments, further processing <b>456</b> may be performed in the sequence of color correction operations <b>440</b> by the image processor <b>104</b> and/or MMU <b>206</b> and/or may be performed downstream by other components and/or processors (e.g., of a host (not shown)) of the resource implementation <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The further processing <b>456</b> may use, or begin with using, an output vector from the down-sampling operation <b>454</b> as input <b>455</b> to enable performance of the further processing <b>456</b>. Performance of the further processing <b>456</b> may produce an output <b>434</b> (e.g., either further 3&#xd7;1 vectors <b>336</b> and/or a completed image based on the color corrected pixels described herein). Examples of such further processing <b>456</b> are described in connection with <figref idref="DRAWINGS">FIG. <b>7</b></figref> and elsewhere herein.</p><p id="p-0079" num="0056">Computational complexity and/or memory access may be increased when digital signal processors (DSPs) and/or application-specific integrated circuits (ASICs) external to (e.g., located in, or associated with, a host and/or host processor) a memory array, in which pixel values are stored, are used to implement processing of the color correction operations. Such external DSPs and/or ASICs may be utilized, for example, in an architecture of a digital camera where the application processor also is used to perform digital processing of applications other than image signal and/or color correction processing. However, a plurality of parameters and/or parameter matrices applied at various positions in performance of a sequence of color correction operations may contribute to reduction in power consumption and/or an increase in data access bandwidth relative to image signal and/or color correction processing performed external to the MMUs <b>206</b> and/or the image processor <b>104</b>. The outcome of performance of such processing may be tuned by adjustment of the values used for these parameters and/or parameter matrices, which may vary with different lighting conditions, environments, and/or sensor systems.</p><p id="p-0080" num="0057"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example of a plurality of color correction operations that may be performed by a corresponding plurality of MMUs <b>506</b> of an embodiment of an image processor <b>504</b>-<b>1</b> formed in an array of memory cells in accordance with a number of embodiments of the present disclosure. The plurality of MMUs <b>506</b> may be formed in a pipeline configuration <b>560</b> (e.g., where each MMU, except a last MMU, is coupled to a next MMU). The embodiment of the image processor <b>504</b>-<b>1</b> illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may be formed in an array of memory cells (e.g., the crossbar array <b>211</b> described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>) as a plurality of serially coupled MMUs (e.g., as shown at <b>506</b>-<b>1</b>, <b>506</b>-<b>2</b>, . . . , <b>506</b>-N). The number of the plurality of serially coupled MMUs <b>506</b> may depend upon the number of the corresponding plurality of color correction operations (e.g., as shown at <b>442</b>, <b>444</b>, . . . , <b>454</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>) performed in a sequence (e.g., as shown at <b>440</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>), which may vary depending upon a particular implementation.</p><p id="p-0081" num="0058">The image processor <b>504</b>-<b>1</b> may be configured to (e.g., directly) couple to the color filter array (e.g., sensor circuitry <b>102</b>) to receive the plurality of bits <b>503</b> (e.g., of input vector <b>531</b>). The image processor <b>504</b>-<b>1</b> may be further configured to perform one of a sequence of a plurality of color correction operations on each of the corresponding plurality of the serially coupled MMUs. Accordingly, the image processor <b>504</b>-<b>1</b> may be configured to perform a matrix multiplication on an input vector <b>531</b> and a parameter matrix (e.g., as shown at <b>333</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref> and described in connection with Equations 1-3 and <figref idref="DRAWINGS">FIG. <b>4</b></figref>) on each of the corresponding plurality of the serially coupled MMUs <b>506</b> to determine an output vector <b>534</b> that is color corrected.</p><p id="p-0082" num="0059">Each of a number of input vectors may correspond to an output vector determined by performance of a preceding in-memory color correction operation on an MMU. For example, as shown and described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an output vector for the defect correction operation <b>442</b>, which may result from performance of the operation by MMU <b>506</b>-<b>1</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, may correspond to the input vector <b>443</b> for performance of the color interpolation operation <b>444</b>, which may be operated on to perform the color interpolation operation by MMU <b>506</b>-<b>2</b> in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0083" num="0060">Accordingly, the plurality of the serially coupled MMUs may be formed in the pipeline <b>560</b> such that a first MMU (e.g., <b>506</b>-<b>1</b>) of the pipeline may be configured to perform a first color correction operation of the sequence on a first input vector and a second MMU (e.g., <b>506</b>-<b>2</b>) of the pipeline <b>560</b> may be configured to perform a second color correction operation of the sequence on a first output vector received from the first MMU (e.g., <b>506</b>-<b>1</b>) as a second input vector for the second MMU (e.g., <b>506</b>-<b>2</b>). In a number of embodiments, in a same clock cycle with the performance of the second color correction operation on the second MMU (e.g., <b>506</b>-<b>2</b>), the first MMU (e.g., <b>506</b>-<b>1</b>) may be configured to perform a repeat of the first color correction operation of the sequence on a third input vector (e.g., on a different plurality of bits <b>503</b> of input vector <b>531</b>).</p><p id="p-0084" num="0061">A last output vector (e.g., <b>534</b>) provided by a last MMU (e.g., <b>506</b>-N) of the pipeline <b>560</b> as the color corrected output vector is output from the last MMU (e.g., <b>506</b>-N) of the pipeline to enable a first input vector (e.g., corresponding to the just-mentioned third input vector of the different plurality of bits <b>503</b> of input vector <b>531</b>) to be input to a first MMU (e.g., <b>506</b>-<b>1</b>) of the pipeline <b>560</b> and continuous movement of input and output vectors through the sequence of the plurality of color correction operations. The color corrected output vector <b>534</b> may be output from the plurality of the serially coupled MMUs (e.g., <b>506</b>-<b>1</b>, <b>506</b>-<b>2</b>, . . . , <b>506</b>-N) for storage (e.g., by other memory cells of the crossbar array <b>211</b>) and/or for further processing (e.g., as described in connection with <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>7</b></figref>).</p><p id="p-0085" num="0062">Matrix multiplication may be performed on each of the number of input vectors and a particular parameter matrix (e.g., as shown at <b>333</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref> and described in connection with Equations 1-3 and <figref idref="DRAWINGS">FIG. <b>4</b></figref>) and/or a particular mathematical operation may be performed on the input vectors (e.g., as in connection with Equations 4-5 and <figref idref="DRAWINGS">FIG. <b>4</b></figref>) by respective MMUs. The particular parameter matrix and/or code for performing the particular mathematical operation may be stored by a particular MMU to enable performance of a particular one of the plurality of color correction operations until a last color corrected output vector is determined for a first image pixel. Moreover, the particular parameter matrix and/or code for performing the particular mathematical operation may be stored by the particular MMU (e.g., each of the pipeline <b>560</b> of MMUs <b>506</b>-<b>1</b>, <b>506</b>-<b>2</b>, . . . , <b>506</b>-N) to enable repetitive input of input vectors <b>531</b> of different pluralities of bits <b>503</b> corresponding to different pixels to be input to the first MMU <b>506</b>-<b>1</b> and output <b>534</b> from the last MMU <b>506</b>-N. In a number of embodiments, each of a number of a plurality of output vectors and a corresponding number of a plurality of input vectors utilized in performance of the matrix multiplication may be a 3&#xd7;1 vector. The determined output vector <b>534</b> that is color corrected also may be a 3&#xd7;1 vector.</p><p id="p-0086" num="0063"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example of a configuration for performance of a plurality of color correction operations <b>670</b> on a single MMU <b>606</b> of an image processor <b>604</b>-<b>2</b> formed in an array of memory cells in accordance with a number of embodiments of the present disclosure. The embodiment of the image processor <b>604</b>-<b>2</b> illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref> may be formed in association with an array of memory cells (e.g., the crossbar array <b>211</b> described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>) to include the single MMU <b>606</b>. The image processor <b>604</b>-<b>2</b> may be configured to (e.g., directly) couple to the digital image sensors (e.g., sensor circuitry <b>102</b>) to receive the plurality of bits <b>603</b> (e.g., of input vector <b>631</b>).</p><p id="p-0087" num="0064">The image processor <b>604</b>-<b>2</b> may be formed to include a parameter matrix component <b>672</b> configured to store a plurality of selectable parameter matrices (e.g., as shown at <b>333</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>3</b></figref> and described in connection with Equations 1-3 and <figref idref="DRAWINGS">FIG. <b>4</b></figref>). The image processor <b>604</b>-<b>2</b> may be further formed to include a control unit <b>671</b> configured to select from the plurality of selectable parameter matrices <b>672</b> and direct input <b>678</b> to the single MMU <b>606</b> of a selected parameter matrix.</p><p id="p-0088" num="0065">The image processor <b>604</b>-<b>2</b> may, in a number of embodiments, be configured to couple to a plurality of the sensors to receive a data value <b>603</b>/<b>631</b> to indicate each level of the plurality of color components and perform a sequence (e.g., as shown at <b>440</b> and described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>) of a plurality of color correction operations on the single MMU <b>606</b>. The image processor <b>604</b>-<b>2</b> may perform the sequence of operations to include performance of matrix multiplication on an input vector and the selected parameter matrix, inputted by the control unit <b>671</b> to the single MMU <b>606</b> from the parameter matrix component <b>672</b>, to determine an output vector <b>673</b> that is color corrected. An adjustment vector (e.g., a gamma parameter as described in connection with the fifth color correction operation <b>450</b> and <figref idref="DRAWINGS">FIG. <b>4</b></figref>) may be input, by the control unit <b>671</b>, to the single MMU <b>606</b> (e.g., as another 3&#xd7;1 parameter to be utilized in the matrix multiplication on a 3&#xd7;1 input vector and a selected 3&#xd7;3 parameter matrix).</p><p id="p-0089" num="0066">The single MMU <b>606</b> of the image processor <b>604</b>-<b>2</b> may (e.g., as described in connection with <figref idref="DRAWINGS">FIG. <b>2</b></figref>) be formed as part of the array of memory cells and may be (e.g., directly) coupled to the plurality of the sensors. The parameter matrix component <b>672</b> and/or the control unit <b>671</b> of the image processor <b>604</b>-<b>2</b> may each be directly coupled to the single MMU <b>606</b> (e.g., as shown at <b>678</b> for parameter matrix component <b>672</b> and at <b>673</b> and <b>675</b> for control unit <b>671</b>). The control unit <b>671</b> may be directly coupled <b>677</b> to the parameter matrix component <b>672</b> such that color correction processing is performed on data values stored on memory cells of the image processor <b>604</b>-<b>2</b> and data values involved with in-memory color correction processing may, in a number of embodiments, not be moved for processing to a host component (not shown) that is indirectly coupled to the array.</p><p id="p-0090" num="0067">Each of the plurality of selectable parameter matrices that is stored by the parameter matrix component <b>672</b>, and that is selectable by the control unit <b>671</b> for input to the single MMU <b>606</b>, may include parameter entries configured to enable performance of a particular color correction operation of the sequence. The control unit <b>671</b> may be configured to direct the single MMU <b>606</b> to output an output vector <b>673</b> corresponding to a first pixel, determined by performance of a first color correction operation in the sequence, for storage by the control unit <b>671</b>. The control unit <b>671</b> may be configured to direct input <b>678</b> from the parameter matrix component <b>672</b> to the single MMU <b>606</b> of a second selected parameter matrix corresponding to a second color correction operation. The control unit <b>671</b> may be configured to direct input <b>675</b> of the stored output vector corresponding to the first pixel as an input vector for performance of the second color correction operation. The sequence of the plurality of color correction operations may be performed as such on the single MMU <b>606</b> until an intended (e.g., desired) color corrected output vector is determined for the first pixel. Color correction operations may be performed by image processor <b>604</b>-<b>2</b> on other pixels accordingly.</p><p id="p-0091" num="0068"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart illustrating an example of a method <b>780</b> for an image processor formed in an array of memory cells performing a color correction in accordance with a number of embodiments of the present disclosure. Unless explicitly stated, elements of methods described herein are not constrained to a particular order or sequence. Additionally, a number of the method embodiments, or elements thereof, described herein may be performed at the same, or at substantially the same, point in time.</p><p id="p-0092" num="0069">At block <b>782</b>, the method <b>780</b> may, in a number of embodiments, include transmitting, to an image processor formed in an array of memory cells, an input vector as a plurality of bits that corresponds to a plurality of color components for an image pixel (e.g., as described in connection with <figref idref="DRAWINGS">FIG. <b>1</b></figref> and elsewhere herein). At block <b>784</b>, the method <b>780</b> may, in a number of embodiments, include performing, by the image processor, a matrix multiplication on the input vector and a parameter matrix. At block <b>786</b>, the method <b>780</b> may, in a number of embodiments, include determining, by the image processor, an output vector that includes a plurality of potentially corrected color components based at least in part on the matrix multiplication (e.g., the color components may potentially be corrected by performance of color correction operations, as described in connection with <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> and elsewhere herein).</p><p id="p-0093" num="0070">In a number of embodiments, the method <b>780</b> may further include forming the image processor in the array to include an MMU formed as a 3&#xd7;3 array of ReRAM cells in a crossbar configuration. The method <b>780</b> may further include forming the 3&#xd7;3 crossbar configuration to correspond to a 3&#xd7;3 configuration of parameter entries in the parameter matrix (e.g., as described in connection with <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> and elsewhere herein). As described herein, alternative numbers of memory cells may be formed as an MMU in the crossbar configuration (e.g., based at least in part on a variable number of a plurality of bits of an input vector, a variable number of color components, a variable number of bits per pixel, and/or a variable number of parameter entries in the parameter matrix).</p><p id="p-0094" num="0071">The method <b>780</b> may further include performing a sequence of a plurality of color correction operations on the image processor (e.g., as described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref> and elsewhere herein). In a number of embodiments, the sequence may include performing the color correction operations to (e.g., sequentially) include: a defect correction operation for a pixel having a color value notably different from neighboring pixels; a color interpolation operation to interpolate for the pixel a number of missing color values from neighboring pixels; a white balance operation to shift toward whiteness the color values for the plurality of color components of the pixel; and/or a color adjustment operation to shift output of the color values from the sensor circuitry to correspond to perception of the image pixel by human vision (e.g., as described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>).</p><p id="p-0095" num="0072">The method <b>780</b> may, in a number of embodiments, further include outputting the color corrected output vector, or a plurality of such output vectors, from the image processor for: storage by memory cells in the array other than memory cells included in the image processor; further processing (e.g., video compression, among other such applications) to form a series of images as a video presentation; further processing to form a single image as a still presentation; further processing in an image recognition operation; and/or further processing by a host processor that is indirectly coupled to the array including the image processor.</p><p id="p-0096" num="0073">The method <b>780</b> may include, prior to outputting the color corrected output vector, performing the sequence of the plurality of color correction operations on the image processor to further include, in a number of embodiments, at least one of: a gamma/lightness/contrast adjustment operation to shift lightness and contrast for a number of pixels in an image by adjustment of a gamma parameter; a color conversion operation to convert a number of the plurality of color components for the image pixel provided by the sensor circuitry to a corresponding number of a plurality of color components in a different color space more suitable for further processing; and/or a down-sampling operation to reduce inclusion of color values for pixels of the image, for at least one of the plurality of color components in the different color space, to a lower number of color values (e.g., as described in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref> and elsewhere herein).</p><p id="p-0097" num="0074">In the above detailed description of the present disclosure, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of illustration how one or more embodiments of the disclosure may be practiced. These embodiments are described in sufficient detail to enable those of ordinary skill in the art to practice the embodiments of this disclosure, and it is to be understood that other embodiments may be utilized and that process, electrical, and structural changes may be made without departing from the scope of the present disclosure.</p><p id="p-0098" num="0075">As used herein, particularly with respect to the drawings, reference numbers with hyphenated digits and/or designators such as &#x201c;M&#x201d;, &#x201c;N&#x201d;, &#x201c;X&#x201d;, &#x201c;Y&#x201d;, etc., (e.g., <b>506</b>-<b>1</b>, <b>506</b>-<b>2</b>, . . . , <b>506</b>-N in <figref idref="DRAWINGS">FIG. <b>5</b></figref>) indicate that a plurality of the particular feature so designated may be included. Moreover, when just the first three digits are utilized (e.g., <b>506</b>) without the hyphenation, the digits are presented to generally represent, in some embodiments, all of the plurality of the particular feature.</p><p id="p-0099" num="0076">It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only, and is not intended to be limiting. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d;, and &#x201c;the&#x201d; include singular and plural referents, unless the context clearly dictates otherwise, as do &#x201c;a number of&#x201d;, &#x201c;at least one&#x201d;, and &#x201c;one or more&#x201d; (e.g., a number of memory arrays may refer to one or more memory arrays), whereas a &#x201c;plurality of&#x201d; is intended to refer to more than one of such things. Furthermore, the words &#x201c;can&#x201d; and &#x201c;may&#x201d; are used throughout this application in a permissive sense (i.e., having the potential to, being able to), not in a mandatory sense (i.e., must). The term &#x201c;include,&#x201d; and derivations thereof, means &#x201c;including, but not limited to&#x201d;. The terms &#x201c;coupled&#x201d; and &#x201c;coupling&#x201d; mean to be directly or indirectly connected physically for access to and/or for movement (transmission) of instructions (e.g., control signals, address signals, etc.) and data, as appropriate to the context. The terms &#x201c;data&#x201d; and &#x201c;data values&#x201d; are used interchangeably herein and may have the same meaning, as appropriate to the context (e.g., one or more data units or &#x201c;bits&#x201d;).</p><p id="p-0100" num="0077">While example embodiments including various combinations and configurations of memory resources, processing resources, color correction processors (CPUs), matrix multiplication units (MMUs), ReRAM cells, crossbar arrays, parameter matrices, input vectors, output vectors, controllers, control units, and parameter matrix components, among other components, applicable to an color correction processor have been illustrated and described herein, embodiments of the present disclosure are not limited to those combinations explicitly recited herein. Other combinations and configurations of the memory resources, processing resources, CPUs, MMUs, ReRAM cells, crossbar arrays, parameter matrices, input vectors, output vectors, controllers, control units, and parameter matrix components applicable to the color correction processor disclosed herein are expressly included within the scope of this disclosure.</p><p id="p-0101" num="0078">Although specific embodiments have been illustrated and described herein, those of ordinary skill in the art will appreciate that an arrangement calculated to achieve the same results may be substituted for the specific embodiments shown. This disclosure is intended to cover adaptations or variations of one or more embodiments of the present disclosure. It is to be understood that the above description has been made in an illustrative fashion, and not a restrictive one. Combination of the above embodiments, and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the above description. The scope of the one or more embodiments of the present disclosure includes other applications in which the above structures and processes are used. Therefore, the scope of one or more embodiments of the present disclosure should be determined with reference to the appended claims, along with the full range of equivalents to which such claims are entitled.</p><p id="p-0102" num="0079">In the foregoing Detailed Description, some features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the disclosed embodiments of the present disclosure have to use more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus, the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separate embodiment.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230007220A1-20230105-M00001.NB"><img id="EMI-M00001" he="8.81mm" wi="76.20mm" file="US20230007220A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230007220A1-20230105-M00002.NB"><img id="EMI-M00002" he="9.14mm" wi="76.20mm" file="US20230007220A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230007220A1-20230105-M00003.NB"><img id="EMI-M00003" he="9.48mm" wi="76.20mm" file="US20230007220A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004" nb-file="US20230007220A1-20230105-M00004.NB"><img id="EMI-M00004" he="9.48mm" wi="76.20mm" file="US20230007220A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00005" nb-file="US20230007220A1-20230105-M00005.NB"><img id="EMI-M00005" he="9.48mm" wi="76.20mm" file="US20230007220A1-20230105-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00006" nb-file="US20230007220A1-20230105-M00006.NB"><img id="EMI-M00006" he="9.48mm" wi="76.20mm" file="US20230007220A1-20230105-M00006.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00007" nb-file="US20230007220A1-20230105-M00007.NB"><img id="EMI-M00007" he="9.14mm" wi="76.20mm" file="US20230007220A1-20230105-M00007.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus, comprising:<claim-text>a processor; and</claim-text><claim-text>a memory device external to the processor and comprising an internal image processor, wherein the internal image processor is configured to:<claim-text>receive, from sensor circuitry, an input vector corresponding to an image pixel; and</claim-text><claim-text>perform a plurality of image signal processing stages that generate respective output vectors corresponding to the image pixel; and</claim-text><claim-text>wherein the plurality of image signal processing stages are performed on the memory device without moving image data corresponding to the image pixel from the memory device to the processor.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the internal image processor comprises a plurality of matrix multiplication units (MMUs) corresponding to the respective plurality of image processing stages.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the memory device is a random access memory (RAM) device comprising an array of RAM cells.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the plurality of MMUs comprise RAM cells of the array.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is a host processor.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of image signal processing stages comprise:<claim-text>a defect correction stage;</claim-text><claim-text>a color interpolation stage subsequent to the defect correction stage; and</claim-text><claim-text>a white balance stage subsequent to the color interpolation stage.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the plurality of image signal processing stages comprise:<claim-text>a color adjustment stage subsequent to the white balance stage;</claim-text><claim-text>a color conversion stage subsequent to the color adjustment stage; and</claim-text><claim-text>a down-sampling stage subsequent to the color conversion stage.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the plurality of image signal processing stages comprise a gamma/lightness/contrast adjustment stage between the color adjustment stage and the color conversion stage.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the memory device comprises an array of memory cells configured to store a parameter matrix used to perform the plurality of image signal processing stages, and wherein the internal image processor is configured to perform the plurality of image signal processing stages without moving parameter matrix data from the memory device to the processor.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of image signal processing stages comprises at least seven stages.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method, comprising:<claim-text>receiving, at a memory device and from sensor circuitry, an input vector corresponding to an image pixel; and</claim-text><claim-text>performing a plurality of image signal processing stages that generate respective output vectors corresponding to the image pixel;</claim-text><claim-text>wherein the plurality of image signal processing stages are performed on the memory device via an image processor internal to the memory device without moving image data corresponding to the image pixel from the memory device to a processor external to the memory device.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the memory device comprises an array of memory cells, and wherein the method includes performing the plurality of image signal processing stages by using a group of memory cells of the array as a matrix multiplication unit.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the method includes:<claim-text>storing, in the array, parameter matrix data associated with the image signal processing; and</claim-text><claim-text>performing the plurality of image signal processing stages without moving the parameter matrix data from the memory device to the processor external to the memory device.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein performing the plurality of image signal processing stages comprises:<claim-text>performing a defect correction stage;</claim-text><claim-text>performing a color interpolation stage subsequent to the defect correction stage; and</claim-text><claim-text>performing a white balance stage subsequent to the color interpolation stage.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein performing the plurality of image signal processing stages comprises:<claim-text>performing a color adjustment stage subsequent to the white balance stage;</claim-text><claim-text>performing a color conversion stage subsequent to the color adjustment stage; and</claim-text><claim-text>performing a down-sampling stage subsequent to the color conversion stage.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. An apparatus, comprising:<claim-text>a host processor; and</claim-text><claim-text>a memory device external to the host processor and comprising an internal image processor, wherein the internal image processor is configured to:<claim-text>store, in an array of memory cells of the memory device, a parameter matrix associated with image signal processing;</claim-text><claim-text>receive, from sensor circuitry, an input vector corresponding to an image pixel;</claim-text><claim-text>perform a first stage of a plurality of image signal processing stages that generates a first output vector corresponding to the image pixel;</claim-text><claim-text>provide the first output vector to a subsequent stage of the plurality of image signal processing stages; and</claim-text><claim-text>perform the subsequent stage to generate a second output vector corresponding to the image pixel;</claim-text></claim-text><claim-text>wherein the plurality of image signal processing stages are performed on the memory device without moving data corresponding to the input vector from the memory device to the host processor and without moving data corresponding to the parameter matrix from the memory device to the host processor.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the internal image processor is configured to perform the first stage of the plurality of image processing stages by performing a matrix multiplication operation between the parameter matrix and the input vector.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the internal image processor comprises a plurality of matrix multiplication units corresponding to the plurality of image signal processing stages.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the plurality of matrix multiplication units are comprised of memory cells within the array.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the internal image processor comprises a matrix multiplication unit configured to perform a matrix multiplication using a different parameter matrix at each stage of the plurality of image signal processing stages.</claim-text></claim></claims></us-patent-application>