<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007212A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007212</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17728960</doc-number><date>20220425</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>202110731783.0</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>907</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>372</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>77</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>907</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>372</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>5</main-group><subgroup>77</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD FOR ASYNCHRONOUSLY STORING MASSIVE DATA GENERATED DURING HIGH SPEED VIDEO MEASUREMENT</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>TONGJI UNIVERSITY</orgname><address><city>Shanghai</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Tong</last-name><first-name>Xiaohua</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Chen</last-name><first-name>Peng</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>MA</last-name><first-name>Huangping</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Xie</last-name><first-name>Huan</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Feng</last-name><first-name>Yongjiu</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Liu</last-name><first-name>Shijie</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Jin</last-name><first-name>Yanmin</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>XU</last-name><first-name>Xiong</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="08" designation="us-only"><addressbook><last-name>Liu</last-name><first-name>Sicong</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="09" designation="us-only"><addressbook><last-name>Ye</last-name><first-name>Zhen</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor><inventor sequence="10" designation="us-only"><addressbook><last-name>Wang</last-name><first-name>Chao</first-name><address><city>Shanghai</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>TONGJI UNIVERSITY</orgname><role>03</role><address><city>Shanghai</city><country>CN</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present invention relates to a method for asynchronously storing massive data generated during high speed video measurement, the method including the following steps: step (1), constructing a high speed video measurement hardware model; and step (2) realizing asynchronous I/O real-time storage in a high speed solid state disk on the basis of Windows core programming. Compared with the prior art, the present invention solves the problems of incompleteness or frame drop during real-time storage of massive data, and realizes real-time and lossless storage of massive high speed data.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="38.78mm" wi="158.75mm" file="US20230007212A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="251.88mm" wi="110.41mm" orientation="landscape" file="US20230007212A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="233.34mm" wi="173.14mm" orientation="landscape" file="US20230007212A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application claims the priority benefit of China application serial no. 202110731783.0, filed on Jun. 30, 2021. The entirety of the above-mentioned patent application is hereby incorporated by reference herein and made a part of this specification.</p><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">Technical Field</heading><p id="p-0003" num="0002">The present invention relates to the technical field of high speed video storage, and more particularly to a method for asynchronously storing massive data generated during high speed video measurement.</p><heading id="h-0004" level="1">Description of Related Art</heading><p id="p-0004" num="0003">A high speed video measurement system can acquire hundreds of or thousands of high resolution images in seconds, can instantaneously record the spatial position and state of an object moving at a high speed, and is therefore widely used in the field of engineering measurement. Massive data are necessarily generated when a high speed camera with a high resolution and a high frame frequency is used to persistently measure an object moving at a high speed. If the data storage speed does not match the transmission speed of the high resolution and high frame frequency data, the recorded data of a high speed video will be incomplete or have frames dropped. A mechanical hard disk is generally not suitable for high speed real-time massive data storage due to the poor performance thereof. How to improve the real-time massive data storage speed during high speed video measurement is a problem which is urgent to be solved in the field of high speed video measurement. In the research direction of high speed video storage, numerous scholars put forward solutions to the problem. The solutions can be summarized as follows: (1) an NAND FLASH storage medium based on FPGA; (2) a solid state disk based on an FPGA controlled SATA interface; (3) a solid state disk based on PowerPC and a SATA interface; (4) a storage medium based on FPGA and DDR3-SDRAM; (5) a solid state disk based on PowerPC, FPGA and SATA; (6) the data storage rate is improved on the basis of an SATA interface and a plurality of NAND flashes by combining PowerPC with FPGA and by realizing command queue optimization and data parallel transmission based on a kernel and the like.</p><p id="p-0005" num="0004">However, the solution using NAND FLASH as a storage medium is complex to consider, and the design is not easy to realize. Therefore, the solution is difficult to be applied to practical industrial measurement. The solution using DDR3-SDRAM as a storage medium has a high cost, and the stored data is volatile. With regard to the solution using the SATA interface solid state disk as a storage medium, the maximum read/write rate of the SATA interface is limited; therefore, although the solution realizes queue command data parallel transmission on the basis of the kernel and indeed can improve the data storage rate, the solution is difficult to be applied to the real-time and lossless storage of massive data.</p><heading id="h-0005" level="1">SUMMARY</heading><p id="p-0006" num="0005">The objective of the present invention is to overcome the defects of the prior art and provide a method for asynchronously storing massive data generated during high speed video measurement which realizes real-time and lossless storage of massive high speed data.</p><p id="p-0007" num="0006">The objective of the present invention can be realized by the following technical solution.</p><p id="p-0008" num="0007">According to one aspect of the present invention, a method for asynchronously storing massive data generated during high speed video measurement is provided, the method including the following steps:</p><p id="p-0009" num="0008">step (1), constructing a high speed video measurement hardware model; and</p><p id="p-0010" num="0009">step (2) realizing asynchronous I/O real-time storage in a high speed solid state disk on the basis of Windows core programming.</p><p id="p-0011" num="0010">As a preferred technical solution, the step (1) constructing a high speed video measurement hardware model specifically is as follows:</p><p id="p-0012" num="0011">step 101, constructing an analog data source hardware module;</p><p id="p-0013" num="0012">step 102, constructing a high speed transmission hardware module; and</p><p id="p-0014" num="0013">step 103, constructing a high speed storage hardware module.</p><p id="p-0015" num="0014">As a preferred technical solution, the step 101 specifically is as follows:</p><p id="p-0016" num="0015">using a CMOS high speed camera as an analog data source, wherein the resolution of the COMS high speed camera is 2048&#xd7;2000, the acquisition frame frequency of the COMS high speed camera is 500 fps, and the image bit depth of the COMS high speed camera is 8 bits.</p><p id="p-0017" num="0016">As a preferred technical solution, the step 102 specifically is:</p><p id="p-0018" num="0017">using two optical fiber mediums to connect a CMOS high speed camera data simulator and a high speed image acquisition card, and using a Camera Link HS interface as a data transmission interface.</p><p id="p-0019" num="0018">As a preferred technical solution, the step 103 specifically is as follows: using an M.2 type NVMe protocol high speed solid state disk as a storage medium, wherein the storage medium can adopt a memory array form.</p><p id="p-0020" num="0019">As a preferred technical solution, the step (2) specifically includes:</p><p id="p-0021" num="0020">step 201, asynchronous I/O preprocessing process;</p><p id="p-0022" num="0021">step 202, cyclic asynchronous I/O processing process of massive data; and</p><p id="p-0023" num="0022">step 203, asynchronous I/O stopping-storing processing process.</p><p id="p-0024" num="0023">As a preferred technical solution, the step 201 specifically includes the following steps: step 2011, providing an absolute path of a file to be stored;</p><p id="p-0025" num="0024">step 2012, connecting a corresponding device by using the absolute path of the file to be stored as a parameter;</p><p id="p-0026" num="0025">step 2013, creating an I/O completion port, and binding the I/O completion port to a started device;</p><p id="p-0027" num="0026">step 2014, pre-sending a write command with four null bytes;</p><p id="p-0028" num="0027">step 2015, setting to start to store data; and</p><p id="p-0029" num="0028">step 2016, starting up a thread to prepare for the cyclic asynchronous I/O process of the massive data.</p><p id="p-0030" num="0029">As a preferred technical solution, the step 202 specifically includes the following steps:</p><p id="p-0031" num="0030">step 2021, first checking whether to start to store data; if not, then directly ending the processing process, otherwise executing step 2022;</p><p id="p-0032" num="0031">step 2022, checking an I/O completed queue;</p><p id="p-0033" num="0032">step 2023, determining whether the write command is completed; if not, then continuously checking the I/O completed queue, otherwise executing step 2024;</p><p id="p-0034" num="0033">step 2024, reading a data block from a buffer pool; and</p><p id="p-0035" num="0034">step 2025, sending a write-in-device command, and updating a written offset value.</p><p id="p-0036" num="0035">As a preferred technical solution, the data block in the step 2024 is in a size of a single frame image.</p><p id="p-0037" num="0036">As a preferred technical solution, the step 203 specifically includes the following steps:</p><p id="p-0038" num="0037">step 2031, determining whether stopping-storing is triggered; if so, then executing step 2032;</p><p id="p-0039" num="0038">step 2032, starting up a thread;</p><p id="p-0040" num="0039">step 2033, checking whether preset time is consistent with storage time; if so, then executing step 2035, otherwise executing step 2034;</p><p id="p-0041" num="0040">step 2034, continuously waiting until the storage time is consistent with the preset time, and then executing step 2035; and</p><p id="p-0042" num="0041">step 2035, directly setting to stop storing.</p><p id="p-0043" num="0042">Compared with the prior art, the present invention has the following advantages.</p><p id="p-0044" num="0043">1) The present invention solves the problems of incompleteness or frame drop during real-time storage of massive data, and realizes real-time and lossless storage of massive high speed data;</p><p id="p-0045" num="0044">2) The present invention has a high stability and reliability, uses two optical fiber transmission mediums to connect the high speed camera analog data source and the high speed image acquisition card, and uses two Camera Link HS data transmission interfaces; the maximum data transmission rate is 2.5 GB/s; the solid state disk uses the Samsung 970 Pro 512 GB M.2 type NVMe protocol; the asynchronous I/O storage of the solid state disk is developed on the basis of Windows core programming, and the highest real-time storage speed can reach 2.0 GB/s.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic view of hardware according to the present invention; and</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow chart of a method according to the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0048" num="0047">The technical solutions in the embodiments of the present invention will be clearly and completely described hereafter with reference to the drawings in the embodiments of the present invention. It is apparent that the described embodiments are a part of the embodiments of the present invention, but not the whole. On the basis of the embodiments in the present invention, all the other embodiments obtained by a person skilled in the art without involving an inventive effort should be all concluded in the protection scope of the present invention.</p><p id="p-0049" num="0048">It is a technical problem that the stored data of a high speed video measurement system will be incomplete or have frames dropped if the storage speed of a high speed video does not match the transmission speed of a high resolution and high frame frequency data source. Massive data is at least in units of GB. The speed of a SATA interface solid state disk, as a storage medium, is limited to hundreds of megabytes per second which is difficult to satisfy a requirement for high speed video measurement. In order to overcome the problem, the present invention provides a method for asynchronously storing massive data generated during high speed video measurement, the method mainly consisting of the following steps: (1) constructing a high speed storage hardware environment, specifically: using two optical fiber mediums to connect a CMOS high speed camera data simulator and a high speed image acquisition card; using a Camera Link HS interface as a data transmission interface; using an M.2 type NVMe protocol high speed solid state disk as a storage medium; and (2) realizing asynchronous I/O real-time storage in a high speed solid state disk on the basis of Windows core programming. The experiment verifies a 2 GB/s data source; the write speed of the solid state disk is about 2.0 GB/s, and can perform real-time and lossless high speed video measurement for a long time.</p><p id="p-0050" num="0049">1. Hardware environment of the method for asynchronously storing massive data</p><p id="p-0051" num="0050">A high speed video measurement hardware model is constructed as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The model consists of the following hardware modules: (1) an analog data source hardware module. A CMOS high speed camera is used an analog data source, wherein the resolution of the COMS high speed camera is 2048&#xd7;2000, the acquisition frame frequency of the COMS high speed camera is 500 fps, and the image bit depth of the COMS high speed camera is 8 bits. (2) A high speed transmission hardware module. Two optical fiber transmission mediums are used; the data transmission interface uses the Camera Link HS interface; and the total transmission speed is 2.5 GB/s. The optical fiber high speed transmission mediums are connected to the high speed camera analog data source and the high speed image acquisition card. The high speed image acquisition card is mounted on a Dell commercial desktop computer PCIe3.0&#xd7;16 interface. (3) A high speed storage hardware module. The M.2 type NVMe protocol high speed solid state disk Samsung 970 Pro 512 GB is used as a high speed storage medium; and the solid state disk is mounted on a Dell OptiPlex7040 commercial desktop computer M.2 interface.</p><p id="p-0052" num="0051">2. Massive data high speed storage method based on an asynchronous I/O method</p><p id="p-0053" num="0052">An asynchronous I/O implementation process of the massive data is realized by means of the following modules: (1) an asynchronous I/O preprocessing module; (2) a massive data cyclic asynchronous I/O module; and (3) an asynchronous I/O stopping-storing module. The specific process is as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0054" num="0053">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the asynchronous I/O implementation process is realized by the asynchronous I/O preprocessing module: providing an absolute path of a file to be stored; using the absolute path of the file as a parameter; starting a corresponding device and setting the storage mode of the device as direct storage and asynchronous storage simultaneously; creating an I/O completion port, and binding the I/O completion port to the started device; pre-sending a write command with four null bytes; setting to start to store data; and starting up a thread to prepare for the cyclic asynchronous I/O process of the massive data.</p><p id="p-0055" num="0054">In the massive data cyclic asynchronous I/O module, first checking whether to start to store data; if not, then directly ending the processing process, otherwise checking an I/O completed queue; if no write command is completed, then continuously checking the I/O completed queue, otherwise reading a data block from a buffer pool, wherein the data block is in a size of a single frame image; and sending a write-in-device command, and updating a written offset value. If the real-time asynchronous I/O process needs to stop, then a stopping-storing thread is triggered.</p><p id="p-0056" num="0055">In the asynchronous I/O stopping-storing module, if stopping-storing is triggered, then starting up a thread; checking whether preset time is consistent with storage time, wherein the preset time is storage time pre-determined by a user; if inconsistent, then continuously waiting until the storage time is consistent with the preset time, and then setting the stopping-storing command to be effective for the massive data cyclic asynchronous I/O module; otherwise directly setting the stopping-storing command to be effective for the massive data cyclic asynchronous I/O module.</p><heading id="h-0008" level="1">Experiment and result analysis</heading><p id="p-0057" num="0056">In order to verify the stability and reliability of the method for asynchronously storing massive data generated during high speed video measurement, a camera simulator the real-time transmission speed of which is 2.0 GB/s is designed for a storage experiment of real-time massive data generated during high speed video measurement; during the experiment, the real-time storage speed of the solid state disk is 2.0 GB/s.</p><p id="p-0058" num="0057">1. Experiment implementation flow</p><p id="p-0059" num="0058">In the experiment, first the hardware modules are connected to construct a hardware environment. An Samsung 970 Pro 512 GB high speed solid state disk is mounted on a Dell OptiPlex 7040 commercial desktop computer M.2 interface; the maximum write speed of the solid state disk is 2.3 GB/s. A Teledyne DALSA high speed image acquisition card is mounted on a Dell OptiPlex 7040 commercial desktop computer PCIe3.0&#xd7;16 interface. An ALINX FPGA development board is used to simulate the CMOS high speed camera data source. Two optical fiber mediums are used, wherein the transmission speed of each one is 1.25 GB/s; a high speed data interface Camera Link HS is connected to the CMOS high speed camera analog data source and the high speed image acquisition card.</p><p id="p-0060" num="0059">After the hardware environment is constructed, an acquisition and control system of high speed video measurement software is started. The software system sets the volume of the buffer pool as 5000&#xd7;2048&#xd7;2000 B, namely about 20 GB, sets the size of the block written in the device as 2048&#xd7;2000B, and sets the depth of a read-write queue as 4. The software control system controls the acquisition card to start acquisition; the acquired data is transmitted to the buffer pool of an internal memory in real time; the system controls the solid state disk to start to store data. Please see <figref idref="DRAWINGS">FIG. <b>2</b></figref> for specific asynchronous I/O implementation process of the massive data.</p><p id="p-0061" num="0060">2. Experimental result analysis</p><p id="p-0062" num="0061">As shown in table 1, the acquisition interval is about 10 s; totally 12 groups of data are stored in real time; and the maximum time is 120.297 s.</p><p id="p-0063" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="28pt" align="center"/><colspec colname="2" colwidth="28pt" align="center"/><colspec colname="3" colwidth="63pt" align="center"/><colspec colname="4" colwidth="49pt" align="center"/><colspec colname="5" colwidth="49pt" align="center"/><thead><row><entry namest="1" nameend="5" rowsep="1">TABLE 1</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row><row><entry/><entry>Record</entry><entry/><entry>Number of</entry><entry>Average write</entry></row><row><entry>No.</entry><entry>time/ms</entry><entry>Data volume</entry><entry>image frames</entry><entry>speed GB/s</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="1" colwidth="28pt" align="char" char="."/><colspec colname="2" colwidth="28pt" align="char" char="."/><colspec colname="3" colwidth="63pt" align="char" char="."/><colspec colname="4" colwidth="49pt" align="char" char="."/><colspec colname="5" colwidth="49pt" align="center"/><tbody valign="top"><row><entry>1</entry><entry>10562</entry><entry>24,268,800,000</entry><entry>5925</entry><entry>2.1</entry></row><row><entry>2</entry><entry>20797</entry><entry>43,069,440,000</entry><entry>10515</entry><entry>1.9</entry></row><row><entry>3</entry><entry>30344</entry><entry>61,636,608,000</entry><entry>15048</entry><entry>1.9</entry></row><row><entry>4</entry><entry>40312</entry><entry>79,798,272,000</entry><entry>19482</entry><entry>1.8</entry></row><row><entry>5</entry><entry>50281</entry><entry>99,028,992,000</entry><entry>24177</entry><entry>1.8</entry></row><row><entry>6</entry><entry>60313</entry><entry>132,214,784,000</entry><entry>32279</entry><entry>2.0</entry></row><row><entry>7</entry><entry>70938</entry><entry>150,085,632,000</entry><entry>36642</entry><entry>2.0</entry></row><row><entry>8</entry><entry>80140</entry><entry>167,288,832,000</entry><entry>40842</entry><entry>1.9</entry></row><row><entry>9</entry><entry>90156</entry><entry>187,183,104,000</entry><entry>45699</entry><entry>1.9</entry></row><row><entry>10</entry><entry>100250</entry><entry>205,926,400,000</entry><entry>50275</entry><entry>1.9</entry></row><row><entry>11</entry><entry>110187</entry><entry>232,022,016,000</entry><entry>56646</entry><entry>2.0</entry></row><row><entry>12</entry><entry>120297</entry><entry>247,779,328,000</entry><entry>60493</entry><entry>1.9</entry></row><row><entry namest="1" nameend="5" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0064" num="0062">In table 1, the number of image frames is acquired according to the data volume and the size of the last frame of image (2048&#xd7;2000 B). The average write speed of each group is calculated according to the written data volume and the record time.</p><p id="p-0065" num="0063">During experiment, the method for asynchronously storing massive data can store in real time, at a maximum 2.0 GB/s write speed, the data transmitted from the CMOS high speed camera analog data source at a transmission speed about 2.0 GB/s.</p><p id="p-0066" num="0064">The present invention provides a stable and reliable method for asynchronously storing massive data generated during high speed video measurement to solve the problems of incompleteness or frame drop during real-time storage of massive data. The hardware environment is constructed to design and realize the method for asynchronously storing massive data generated during high speed video measurement. In the designed experiment, the data transmitted from the CMOS high speed camera analog data source at a real-time transmission speed about 2.0 GB/s can be losslessly stored in real time at the speed about 2.0 GB/s with the method for asynchronously storing massive data generated during high speed video measurement. If more massive data are acquired from a high speed video, the present method is still applicable as long as a solid state disk with a wider bandwidth and a greater volume is used.</p><p id="p-0067" num="0065">The descriptions above are only preferred embodiments of the present invention. However, the protection scope of the present invention is not limited to the embodiments; any person skilled in the art can easily conceive of various equivalent modifications or substitutions in the technical scope disclosed by the present invention; and these modifications or substitutions shall be all concluded in the protection scope of the present invention. Therefore, the protection scope the claims shall prevail as the protection scope of the present invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for asynchronously storing massive data generated during high speed video measurement, comprising the following steps:<claim-text>step (1), constructing a high speed video measurement hardware model; and</claim-text><claim-text>step (2) realizing asynchronous I/O real-time storage in a high speed solid state disk on a basis of Windows core programming.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step (1) constructing the high speed video measurement hardware model specifically is as follows:<claim-text>step 101, constructing an analog data source hardware module;</claim-text><claim-text>step 102, constructing a high speed transmission hardware module; and</claim-text><claim-text>step 103, constructing a high speed storage hardware module.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the step 101 specifically is as follows:<claim-text>using a complementary metal-oxide-semiconductor (CMOS) high speed camera as an analog data source, wherein a resolution of the COMS high speed camera is 2048&#xd7;2000, an acquisition frame frequency of the COMS high speed camera is 500 fps, and an image bit depth of the COMS high speed camera is 8 bits.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the step 102 specifically is as follows:<claim-text>using two optical fiber mediums to connect a CMOS high speed camera data simulator and a high speed image acquisition card, and using a Camera Link HS interface as a data transmission interface.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the step 103 specifically is as follows: using an M.2 type NVMe (non-volatile memory express) protocol high speed solid state disk as a storage medium, wherein the storage medium adopt a memory array form.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step (2) specifically comprises:<claim-text>step 201, asynchronous I/O preprocessing process;</claim-text><claim-text>step 202, cyclic asynchronous I/O processing process of massive data; and</claim-text><claim-text>step 203, asynchronous I/O stopping-storing processing process.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the step 201 specifically comprises the following steps:<claim-text>step 2011, providing an absolute path of a file to be stored;</claim-text><claim-text>step 2012, connecting a corresponding device by using the absolute path of the file to be stored as a parameter;</claim-text><claim-text>step 2013, creating an I/O completion port, and binding the I/O completion port to a started device;</claim-text><claim-text>step 2014, pre-sending a write command with four null bytes;</claim-text><claim-text>step 2015, setting to start to store data; and</claim-text><claim-text>step 2016, starting up a thread to prepare for the cyclic asynchronous I/O process of the massive data.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the step 202 specifically comprises the following steps:<claim-text>step 2021, first checking whether to start to store data; if not, then directly ending the processing process, otherwise executing step 2022;</claim-text><claim-text>step 2022, checking an I/O completed queue;</claim-text><claim-text>step 2023, determining whether a write command is completed; if not, then continuously checking the I/O completed queue, otherwise executing step 2024;</claim-text><claim-text>step 2024, reading a data block from a buffer pool; and</claim-text><claim-text>step 2025, sending a write-in-device command, and updating a written offset value.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the data block in the step 2024 is in a size of a single frame image.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method for asynchronously storing massive data generated during high speed video measurement according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the step 203 specifically comprises the following steps:<claim-text>step 2031, determining whether stopping-storing is triggered; if the stopping-storing is triggered, executing step 2032;</claim-text><claim-text>step 2032, starting up a thread;</claim-text><claim-text>step 2033, checking whether preset time is consistent with storage time; if the preset time is consistent with the storage time, executing step 2035; if the preset time is not consistent with the storage time, executing step 2034;</claim-text><claim-text>step 2034, continuously waiting until the storage time is consistent with the preset time, and then executing step 2035; and</claim-text><claim-text>step 2035, directly setting to stop storing.</claim-text></claim-text></claim></claims></us-patent-application>