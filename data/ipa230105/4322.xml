<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004323A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004323</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17463908</doc-number><date>20210901</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>IN</country><doc-number>202141029863</doc-number><date>20210702</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0659</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>064</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0665</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0631</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0613</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0679</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD FOR IMPLEMENTING PREDICTABLE LATENCY MODE FEATURE IN SSD, AND NON-VOLATILE MEMORY (NVM) BASED STORAGE DEVICE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SAMSUNG ELECTRONICS CO., LTD.</orgname><address><city>Suwon-si</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>NADAKUDITI</last-name><first-name>Srinivasa Raju</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>SINGH</last-name><first-name>Abhinav Kumar</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>TANDAVAPURA JAGADISH</last-name><first-name>Chandrashekar</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>YELAKKURU PRABHUSWAMY</last-name><first-name>Manu</first-name><address><city>Bangalore</city><country>IN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method includes: receiving, by a storage device from a core in a host, a request to provide exclusive resource to a command of a predefined submission queue of a non-volatile memory (NVM) set in the storage device, wherein the request pertains to operating the NVM set in a deterministic state; generating a virtual NVM set identifier for a virtual NVM set based on a predefined mapping of the predefined submission queue and the NVM set; determining a storage controller associated with the NVM set based on a predefined mapping of the predefined submission queue, the NVM set, and the virtual NVM set identifier; enabling at least one core to operate in a Predictable Latency Mode; and operating the storage controller and the NVM set in the deterministic state by allocating predetermined resources to execute the command and return data with a predictable latency.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="99.40mm" wi="158.75mm" file="US20230004323A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="240.54mm" wi="162.98mm" orientation="landscape" file="US20230004323A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="239.35mm" wi="142.92mm" orientation="landscape" file="US20230004323A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="243.33mm" wi="142.92mm" orientation="landscape" file="US20230004323A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="156.72mm" wi="164.25mm" file="US20230004323A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="240.54mm" wi="162.31mm" orientation="landscape" file="US20230004323A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="242.23mm" wi="164.25mm" orientation="landscape" file="US20230004323A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">Indian Patent Application No. 202141029863, filed on Jul. 2, 2021, in the Indian</p><p id="p-0003" num="0002">Intellectual Property Office, and entitled: &#x201c;METHOD FOR IMPLEMENTING PREDICTABLE LATENCY MODE FEATURE IN SSD,&#x201d; is incorporated by reference herein in its entirety.</p><heading id="h-0002" level="1">BACKGROUND 1. Field</heading><p id="p-0004" num="0003">Embodiments relate to non-volatile memory based devices.</p><p id="p-0005" num="0004">2. Description of the Related Art</p><p id="p-0006" num="0005">Virtualization is an emerging technology for sharing of the resources. In virtualization technology, for instance, in a bare metal NVM Express (NVMe) controller-based solid state drive (SSD), the different layers of the Host to device interface in a device may support Single Root I/O Virtualization (SR-IOV). In virtualization, SR-IOV is a specification that allows the isolation of PCI Express (PCIe) resources for manageability and performance reasons.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">Embodiments are directed to a method, including: receiving, by a storage device from a core in a host supporting one or more cores, a request to provide exclusive resource to a command belonging to one or more predefined submission queues of a non-volatile memory (NVM) set in the storage device, wherein the request pertains to operating the NVM set in a deterministic state to return data with a predictable latency; generating a virtual NVM set identifier for a virtual NVM set based on a predefined mapping of the one or more predefined submission queues and the NVM set; determining a storage controller associated with the NVM set based on a predefined mapping of the one or more predefined submission queues, the NVM set, and the virtual NVM set identifier; enabling at least one core of the host to operate in a Predictable Latency Mode; and operating the storage controller and the NVM set in the deterministic state by allocating predetermined resources to execute the command and return data with a predictable latency.</p><p id="p-0008" num="0007">Embodiments are also directed to a storage device, including: a receiver configured to receive, from a core in a host device supporting multiple cores, a request to provide exclusive resource to a command belonging to one or more predefined submission queues of a non-volatile memory (NVM) set, wherein the request pertains to operating the NVM set in a deterministic state to return data with a predictable latency; a processing module configured to: generate a virtual NVM set identifier for a virtual NVM set based on a predefined mapping of the one or more predefined submission queues and the NVM set, determine a storage controller associated with the NVM set based on a predefined mapping of the one or more predefined submission queues, the NVM set, and the virtual NVM set identifier, and enable at least one of the multiple cores of the host to operate in a Predictable Latency Mode; and a storage controller driving module configured to operate the determined storage controller and the NVM set in the deterministic state by allocating predetermined resources to execute the command and return data with a predictable latency.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF FIGURES:</heading><p id="p-0009" num="0008">Features will become apparent to those of skill in the art by describing in detail example embodiments with reference to the attached drawings in which:</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates general host-device interface supporting Single Root I/O</p><p id="p-0011" num="0010">Virtualization (SR-IOV);</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an arbitration policy when PLM is enabled for a single controller NVM set;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates another arbitration policy when PLM is enabled for only one controller NVM set;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a control-flow for providing predictable latency for a storage device, in accordance with an example embodiment;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example arbitration mechanism when PLM is enabled for only one controller NVM set, in accordance with an example embodiment; and</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates arbitration policy for a controller in Predictable Latency Mode and normal mode, in accordance with an example embodiment;</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">Example embodiments relate to implementing a Predictable Latency Mode (PLM) feature in a Non-Volatile Memory Express&#xae; (NVMe)-based solid state drive (SSD) device supporting single root I/O virtualization. The NVMe is a host controller interface and storage protocol created to accelerate the transfer of data between enterprise and client systems and solid state drives over a computer's high-speed Peripheral Component Interconnect Express (PCIe) bus. Example embodiments may use a virtual NVM set (VNVM set) concept, through which a controller gives priority in fetching more information, as for instance commands, from controller(s) that are in Predictable Latency Mode.</p><p id="p-0018" num="0017">In an example embodiment, there is provided a method that uses a virtual NVM set concept to uniquely identify controllers that are in Predictable Latency Mode. The VNVM set is derived based at least on a namespace identifier (NS ID), the NVM set, and a Controller ID. A NVMe namespace is a measure of non-volatile memory (NVM) that may be configured into logical blocks. The NVMe namespace may be used when a storage virtual machine is configured with the NVMe protocol. The VNVM sets may be derived while creating the NVMe namespace.</p><p id="p-0019" num="0018">When a &#x201c;CREATE IOSQ&#x201d; is encountered with at least a hint related to an NVM set, then its virtual NVM (VNVM) set is associated with a queue. The VNVM set changes based on Controller ID or NVM set. A table or log is used to uniquely select the VNVM set that is in Predictable Latency Mode. Additional commands may be fetched into the device, for an NVM set that is in deterministic window. Further, the dynamic allocation of the controller resources is performed, for which more priority is needed.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates control flow <b>200</b> for providing predictable latency for a storage device, in accordance with an example embodiment.</p><p id="p-0021" num="0020">In an example embodiment, there is provided a method to provide predictable latency for a storage device, the method including receiving (<b>202</b>), from a core in a host supporting multiple cores, a request to provide exclusive resource to a command belonging to one or more predefined submission queues of a NVM set in a storage device, wherein the request pertains to operating the NVM set in a deterministic state to return data with a predictable latency. In an example embodiment, the host may be a host in virtualization environment defined by SR-IOV.</p><p id="p-0022" num="0021">The method further includes generating (<b>204</b>) a virtual NVM set identifier based on a predefined mapping of the one or more predefined submission queues and the NVM set. The NVM set includes a plurality of namespaces defining a collection of logical block address. The NVM set may optionally include an unallocated storage area defining a space outside the namespace and inaccessible to the host.</p><p id="p-0023" num="0022">The method further includes determining (<b>206</b>) a storage controller associated with the NVM set based on a predefined mapping of the one or more predefined submission queues, the NVM set, and the virtual NVM set identifier. Further, each of the plurality of namespaces is uniquely mapped with a virtual NVM set identifier.</p><p id="p-0024" num="0023">The method further includes enabling (<b>208</b>) at least one of the multiple cores of the host to operate in Predictable Latency Mode.</p><p id="p-0025" num="0024">The method further includes operating (<b>210</b>) the storage controller and the NVM set in the deterministic state by allocating predetermined resources to execute the command and return data with a predictable latency. With respect to executing one or more commands of another virtual NVM set not undergoing the deterministic mode of operation, less resources may be allocated to the storage controller.</p><p id="p-0026" num="0025">According to the present example embodiment, the operation of the storage controller and the NVM set in the deterministic state includes determining a namespace mapped with the virtual NVM set identifier and the storage controller, and allocating resources of the storage device to the namespace. The operation further includes fetching a plurality of commands from one or more associated submission queues based on the allocated resources. If the allocated storage controller is not compatible with a deterministic mode of operation, then the performance of the deterministic mode of operation includes executing the one or more commands belonging to the virtual NVM set based on augmenting resources of the storage controller for executing the command.</p><p id="p-0027" num="0026">The operation further includes fetching one or more commands from each of the one or more associated submission queues based on a predefined sequence for a submission queue, a priority level associated with the submission queue, and an arbitration burst setting, and processing the one or more commands based on defined execution order in the storage controller.</p><p id="p-0028" num="0027">With respect to the further storage controllers associated with the NVM set in a non-deterministic state, the method further includes fetching one or more commands from each submission queue in one or more remaining submission queues from a plurality of submission queues based on a predefined sequence for each submission queue, a priority level associated with each submission queue, and an arbitration burst setting, where the plurality of submission queues including the one or more predefined submission queues mapped to the NVM set. If the execution of the one or more commands is blocked due to the operation of the further NVM set in the non-deterministic state, a time period is estimated indicating the operation of the further NVM set in the non-deterministic state. The execution of the one or more blocked commands is controlled or held until expiry of the time period.</p><p id="p-0029" num="0028">In an example embodiment, the following stages are included: a) prior configuration; and b) real time operation.</p><p id="p-0030" num="0029">As a part of prior configuration, there may be two example stages: Stage 1 and Stage 2.</p><p id="p-0031" num="0030">As a part of Stage 1 of the prior configuration, a VNVM set is derived based at least on namespace identifier (NS ID), a NVM set, and a controller ID. In an example embodiment,</p><p id="p-0032" num="0031">Table 1 illustrates VNVM SET ID derivation from inputs during NS creation:</p><p id="p-0033" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="49pt" align="center"/><colspec colname="2" colwidth="42pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="63pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="4" rowsep="1">TABLE 1</entry></row><row><entry/><entry namest="offset" nameend="4" align="center" rowsep="1"/></row><row><entry/><entry>Controller ID</entry><entry>NS ID</entry><entry>NVMSET ID</entry><entry>VNVMSET ID</entry></row><row><entry/><entry namest="offset" nameend="4" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>1</entry><entry>1</entry><entry>1</entry><entry>1</entry></row><row><entry/><entry>1</entry><entry>3</entry><entry>2</entry><entry>2</entry></row><row><entry/><entry>2</entry><entry>2</entry><entry>1</entry><entry>3</entry></row><row><entry/><entry>2</entry><entry>4</entry><entry>2</entry><entry>4</entry></row><row><entry/><entry namest="offset" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0034" num="0032">Stage 2 illustrates associating the VNVM set association of Table 1 with SQ ID during queue creation with respect to the NVM set as a part of generating following Table 2.</p><p id="p-0035" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="5"><colspec colname="offset" colwidth="14pt" align="left"/><colspec colname="1" colwidth="49pt" align="center"/><colspec colname="2" colwidth="42pt" align="center"/><colspec colname="3" colwidth="49pt" align="center"/><colspec colname="4" colwidth="63pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="4" rowsep="1">TABLE 2</entry></row><row><entry/><entry namest="offset" nameend="4" align="center" rowsep="1"/></row><row><entry/><entry>Controller ID</entry><entry>SQ ID</entry><entry>NVMSET ID</entry><entry>VNVMSET ID</entry></row><row><entry/><entry namest="offset" nameend="4" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>1</entry><entry>1</entry><entry>1</entry><entry>1</entry></row><row><entry/><entry>1</entry><entry>2</entry><entry>1</entry><entry>1</entry></row><row><entry/><entry>1</entry><entry>3</entry><entry>2</entry><entry>2</entry></row><row><entry/><entry>1</entry><entry>4</entry><entry>2</entry><entry>2</entry></row><row><entry/><entry>2</entry><entry>1</entry><entry>1</entry><entry>3</entry></row><row><entry/><entry>2</entry><entry>2</entry><entry>1</entry><entry>3</entry></row><row><entry/><entry>2</entry><entry>3</entry><entry>2</entry><entry>4</entry></row><row><entry/><entry>2</entry><entry>4</entry><entry>2</entry><entry>4</entry></row><row><entry/><entry namest="offset" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0036" num="0033">Accordingly, Table 2 denotes a predefined mapping of the one or more predefined submission queues and the NVM.</p><p id="p-0037" num="0034">As a part of real time operation, there may be following example steps of operation that correspond to <figref idref="DRAWINGS">FIG. <b>4</b></figref>:</p><p id="p-0038" num="0035">Step 1: This step corresponds to steps <b>202</b> and <b>204</b>. When the command &#x201c;CREATE IO SQ&#x201d; arrives from the host with a hint related to an NVM set, then a corresponding virtual NVM set ID is associated with that queue. The association of NVM set ID may be performed based on Table 2. In an example embodiment, an SQ ID 3 linked with NVM set <b>2</b> with respect to &#x201c;CREATE IO SQ&#x201d;, the VNVM ID as determined may be &#x201c;VNVM Set <b>4</b>&#x201d; based on Table 2.</p><p id="p-0039" num="0036">Step 2: This step corresponds to step <b>206</b>. The storage controller ID as determined with respect to the combination of VNVM Set <b>4</b> and SQ ID 3 is Controller <b>2</b> based on Table 2.</p><p id="p-0040" num="0037">Step 3: This step corresponds to steps <b>208</b> and <b>210</b>. Based on the combination of identified controller <b>2</b> and the VNVM Set <b>4</b>, a corresponding namespace ID &#x201c;NS <b>4</b>&#x201d; may be identified from Table 1. Accordingly, the storage controller <b>4</b> and the NVM set <b>2</b> are operated in the deterministic state by allocating predetermined resources of the storage device to NS <b>4</b> for executing the command and returning data with a predictable latency.</p><p id="p-0041" num="0038">The operation further includes fetching the plurality of commands from the one or more predefined submission queues based on the allocated resources to the NS <b>4</b>. If the allocated storage controller (i.e., controller <b>2</b>) is not compatible with deterministic mode of operation, then the performance of deterministic mode of operation includes augmenting resources of the controller <b>2</b> for executing the command. Accordingly, with respect to executing the one or more commands of the same or another virtual NVM set not undergoing the deterministic mode of operation, less resources may be allocated to the storage controller (e.g., controller <b>1</b>).</p><p id="p-0042" num="0039">In an example embodiment, Table 3 illustrates example hardware (HW) resource allocation in accordance with the VNVM ID.</p><p id="p-0043" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="42pt" align="center"/><colspec colname="2" colwidth="140pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 3</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>VNVM SET</entry><entry>HW Resources (TAG)</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="42pt" align="center"/><colspec colname="2" colwidth="140pt" align="char" char="."/><tbody valign="top"><row><entry/><entry>1</entry><entry>202</entry></row><row><entry/><entry>2</entry><entry>18</entry></row><row><entry/><entry>3</entry><entry>18</entry></row><row><entry/><entry>4</entry><entry>18</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0044" num="0040">Thus, I/O determinism quality of service (IOD QOS) may not be affected when a</p><p id="p-0045" num="0041">NVM set is shared by controllers. This may be extended to support a host-selected arbitration mechanism across controllers.</p><p id="p-0046" num="0042"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example arbitration mechanism <b>500</b> when PLM is enabled for only one controller NVM set.</p><p id="p-0047" num="0043"><figref idref="DRAWINGS">FIG. <b>5</b></figref> refers an example scenario wherein two controllers are present. As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, VNVMSET<b>1</b> is set in PLM out of multiple virtual NVM sets. In such a scenario, the VNVMSET<b>1</b> that is in PLM is awarded more processing resources, as compared to the other VNVM sets.</p><p id="p-0048" num="0044">In operation, as depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, multiple VNVM sets (<b>502</b>) are present across the storage controllers. Out of those, VNVMSET<b>1</b> is set in PLM. Further, round robin (RR) arbitration (<b>504</b>) executes among the VNVM sets, such that various submission queues (<b>506</b>) become associated with VNVM sets.</p><p id="p-0049" num="0045">Further, round robin arbitration (<b>508</b>-<i>a</i>) among queues belonging to VNVMSET<b>1</b> operates in accordance with PLM, and round robin arbitration (<b>508</b>-<i>b </i>to <b>508</b>-<i>d</i>) operates among the queues belonging to VNVM sets that are not in PLM. Further, commands (<b>510</b>) are fetched from VNVMSET<b>1</b> that is in PLM. Thus, more commands are fetched from the VNVMSET<b>1</b> compared to other VNVM sets, because VNVMSET<b>1</b> is in PLM.</p><p id="p-0050" num="0046"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates arbitration policy <b>600</b> for a controller in Predictable Latency Mode and normal mode, in accordance with an example embodiment.</p><p id="p-0051" num="0047"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a scenario when multiple controllers are present, out of which one controller (controller C<b>1</b>) is incorporating the special arbitration policy to honor PLM, and another controller (controller C<b>2</b>) is incorporating normal round robin arbitration policy among the queues.</p><p id="p-0052" num="0048">Overall, the controller C<b>1</b> is associated with the special arbitration policy, and the controller C<b>2</b> is associated with standard round robin arbitration policy. The controller C<b>1</b> with special arbitration policy arbitrates among the VNVM sets, whereas the controller C<b>2</b> with round robin arbitration policy arbitrates among the queues. More commands are fetched through the controller C<b>1</b> as compared to the controller C<b>2</b>, as the controller C<b>1</b> is in PLM.</p><p id="p-0053" num="0049">Thus, the IOD QOS may not be affected when a NVM set is shared by controllers. This may be extended to support a host-selected arbitration mechanism across controllers.</p><p id="p-0054" num="0050">By way of summation and review, non-volatile memory (NVM) (e.g., NAND flash memory) may be implemented in numerous physical form factors, including solid state drives (SSDs), peripheral component interconnect express (PCI Express, PCIe) add-in cards, M.2 memory cards, and other forms. NVM Express (NVMe), as a logical device interface, is designed to capitalize on the low latency and internal parallelism of solid state storage devices. A collection of non-volatile memories, referred as a NVM set, may be separated (logically and potentially physically) from NVM of other NVM Sets. A single NVM set may wholly contain a namespace, and may not span more than one NVM Set. Further, within an NVM set, multiple namespaces may be present that can be attached to different controllers, or a single namespace can be shared to different controller.</p><p id="p-0055" num="0051"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates general host-device interface <b>100</b> supporting Single Root I/O Virtualization (SR-IOV). <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an arbitration policy <b>300</b> when PLM is enabled for a single controller NVM set. <figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates another arbitration policy <b>400</b> when PLM is enabled for only one controller NVM set.</p><p id="p-0056" num="0052">As depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a PCIe-based NVM controller supporting Predictable Latency Mode (PLM) may be expected to honor an agreed Quality of Service (QOS) on the NVM sets and their associated namespaces. When PLM is enabled, the I/O information that access NVM in the same NVM set have the same/deterministic QOS attributes. The I/O information that access NVM in one NVM set do not impact the QOS of I/O information that access NVM in a different NVM set. However, in a Single Root I/O Virtualization (SR-IOV) environment, where two or more initiators may be present, I/O's can be triggered independently to the same NVM set. Further, based on the requirement of host applications, a predictable latency window may be enabled independently by one host, whereas another host can be in non-predictive mode.</p><p id="p-0057" num="0053">In general, it may not be possible to honor the Predictable Latency Mode (PLM) feature from the moment information is submitted to the device. If a general arbitration mechanism such as round robin (RR) or weighted round robin (WRR) is followed in the manner depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the device may not be able to honor the PLM feature.</p><p id="p-0058" num="0054">In a general arbitration mechanism, it may not be efficient to honor the PLM feature under all circumstances or loads. For instance, as depicted in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, if multiple controllers are submitting information to the same NVM set, then the PLM feature may not be honored efficiently.</p><p id="p-0059" num="0055">As described above, embodiments relate to computing environment for a PCIe interface-based non-volatile memory (NVM) host controller for solid state drives supporting Single Root I/O Virtualization (SR-IOV). Embodiments may provide a method to honor predictable latency for a storage device. The method may include receiving, from a core in a host supporting multiple cores, a request to provide exclusive resource to a command belonging to one or more predefined submission queues of a NVM set in a storage device, wherein the request pertains to operating the NVM set in a deterministic state to return data with a predictable latency. The method may further include generating a virtual NVM set identifier based on a predefined mapping of the one or more predefined submission queues and the NVM set. The method may further include determining a storage controller associated with the NVM set based on a predefined mapping of the one or more predefined submission queues, the NVM set, and the virtual NVM set identifier. The method may further include enabling at least one of the multiple cores of the host to operate in a Predictable Latency Mode (PLM). The method may further include operating the storage controller and the NVM set in the deterministic state by allocating predetermined resources to execute the command and return data with a predictable latency.</p><p id="p-0060" num="0056">Example embodiments have been disclosed herein, and although specific terms are employed, they are used and are to be interpreted in a generic and descriptive sense only and not for purpose of limitation. In some instances, as would be apparent to one of ordinary skill in the art as of the filing of the present application, features, characteristics, and/or elements described in connection with a particular embodiment may be used singly or in combination with features, characteristics, and/or elements described in connection with other embodiments unless otherwise specifically indicated. Accordingly, it will be understood by those of skill in the art that various changes in form and details may be made without departing from the spirit and scope of the present invention as set forth in the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>receiving, by a storage device from a core in a host supporting one or more cores, a request to provide exclusive resource to a command belonging to one or more predefined submission queues of a non-volatile memory (NVM) set in the storage device, wherein the request pertains to operating the NVM set in a deterministic state to return data with a predictable latency;</claim-text><claim-text>generating a virtual NVM set identifier for a virtual NVM set based on a predefined mapping of the one or more predefined submission queues and the NVM set;</claim-text><claim-text>determining a storage controller associated with the NVM set based on a predefined mapping of the one or more predefined submission queues, the NVM set, and the virtual NVM set identifier;</claim-text><claim-text>enabling at least one core of the host to operate in a Predictable Latency Mode; and</claim-text><claim-text>operating the storage controller and the NVM set in the deterministic state by allocating predetermined resources to execute the command and return data with a predictable latency.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the NVM set includes:<claim-text>a plurality of namespaces defining a collection of logical block address; and</claim-text><claim-text>optionally, an unallocated storage area defining a space outside the plurality of namespaces and inaccessible to the host.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein each of the plurality of namespaces is uniquely mapped with a virtual NVM set identifier.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein operating the storage controller and the NVM set in the deterministic state includes:<claim-text>determining a namespace mapped with the virtual NVM set identifier and the storage controller;</claim-text><claim-text>allocating resources of the storage device to the determined namespace; and</claim-text><claim-text>fetching a plurality of commands from the one or more predefined submission queues based on the allocated resources.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method as claimed in <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>fetching one or more commands from each of the one or more predefined submission queues based on a predefined sequence for a selected submission queue, a priority level associated with the selected submission queue, and an arbitration burst setting; and</claim-text><claim-text>processing the one or more commands based on a defined execution order in the storage controller.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>operating another storage controller associated with the NVM set in a non-deterministic state; and</claim-text><claim-text>operating another NVM set in the storage device in a non-deterministic state.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>fetching one or more commands from each submission queue in one or more remaining submissions queues from a plurality of submission queues based on a predefined sequence for each submission queue, a priority level associated with each submission queue, and an arbitration burst setting, the plurality of submission queues including the one or more predefined submission queues mapped to the NVM set;</claim-text><claim-text>determining whether execution of the one or more commands is blocked due to the operation of the other NVM set in the non-deterministic state;</claim-text><claim-text>estimating a time period that indicates whether the other NVM set operates in the non-deterministic state; and</claim-text><claim-text>controlling execution of the one or more commands until expiry of the time period.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operating of the NVM set in the deterministic state includes executing one or more commands belonging to the virtual NVM set based on allocating more resources of the determined storage controller.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising executing one or more commands of another virtual NVM set that is not operating in the deterministic state based on allocating less resources of the determined storage controller.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. (canceled)</claim-text></claim></claims></us-patent-application>