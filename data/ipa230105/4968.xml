<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004969A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004969</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17944463</doc-number><date>20220914</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20120101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20120101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>405</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0643</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0637</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>40</main-group><subgroup>025</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEM AND TECHNIQUES FOR UTILIZING A SMART CONTRACTS LIBRARY</invention-title><us-related-documents><division><relation><parent-doc><document-id><country>US</country><doc-number>16731849</doc-number><date>20191231</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11475453</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17944463</doc-number></document-id></child-doc></relation></division></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Capital One Services, LLC</orgname><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>WYLIE</last-name><first-name>Stephen</first-name><address><city>Carrollton</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>TANG</last-name><first-name>Qiaochu</first-name><address><city>The Colony</city><state>TX</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Capital One Services, LLC</orgname><role>02</role><address><city>McLean</city><state>VA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed are techniques and an apparatus for accessing a smart contract library that may include a number of templates of different legal contracts implementable as a smart contract between respective parties. Each template may include a number of sections having different contractual terms and conditions and fillable fields for specific contract terms. Each respective section of the number of sections includes programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section and with any specific contract terms input to a fillable field of the respective section. A first user address generated based on cryptographic keys may be associated with a contract-creating computing device in a private blockchain. The first user address may be associated with the first user in the private blockchain. A finalized smart contract may have a smart contract address generated from the first user address and a nonce value.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="104.39mm" wi="158.75mm" file="US20230004969A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="261.79mm" wi="180.42mm" orientation="landscape" file="US20230004969A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="213.19mm" wi="166.96mm" file="US20230004969A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="231.82mm" wi="168.06mm" file="US20230004969A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="231.82mm" wi="165.27mm" file="US20230004969A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="196.00mm" wi="138.09mm" orientation="landscape" file="US20230004969A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="207.94mm" wi="163.91mm" orientation="landscape" file="US20230004969A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="221.15mm" wi="142.32mm" orientation="landscape" file="US20230004969A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="95.84mm" wi="144.36mm" orientation="landscape" file="US20230004969A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="232.49mm" wi="167.89mm" file="US20230004969A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is a divisional application of U.S. patent application Ser. No. 16/731,849, filed Dec. 31, 2019, the entire contents of which is incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0000"><ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0002">Templates for legal contractual documents for word processing software have been available for some time. However, the legal contractual document templates typically have no affiliation with an enterprise or a consumer party or user that is party to the contract. As a result, the templates may not have language that provides a level of protection desired either by the enterprise party or user party.</li>    </ul>    </li></ul></p><p id="p-0004" num="0003">In addition, these templates may not provide notifications of changes to terms and conditions or actions taken by the parties with respect to the changed terms. The terms may also not be evaluated against applicable laws related to contracts, such as usury or the like.</p><p id="p-0005" num="0004">Moreover, the agreed upon changes to the terms and conditions may not be immutable because the configuration management of the contractual document may be lacking. As a result, the revision cycle may require a number of re-iterations between parties before arriving at a contract with acceptable terms and conditions for all parties.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">Disclosed is an example of a method that includes a step of accessing, by a contract-creating computing device, a smart contract library. The smart contract library may include a number of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract. Each template of the number of templates includes a number of sections having different contractual terms and conditions and fillable fields for specific contract terms. Each respective section of the number of sections includes programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section and with any specific contract terms input to a fillable field of the respective section. A selection of a template of a smart contract may be received from the plurality of templates for implementation as a finalized smart contract. A private cryptographic key assigned to a first user of the contract-creating computing device may be obtained. The private cryptographic key may be associated with a public cryptographic key. A first user address associated with the contract-creating computing device in a private blockchain may be generated. The first user address may be based on the private cryptographic key and may be associated with the first user in the private blockchain. A smart contract address may be generated for the finalized smart contract using the first user address and a nonce value. A smart contract hash value may be generated using a value related to the programming code of the smart contract as an input into a hash function. The smart contract hash value may be stored as a transaction in the private blockchain. The transaction may be associated with the smart contract hash value and the first user address in the private blockchain.</p><p id="p-0007" num="0006">An apparatus is disclosed that includes a processor and a memory. The processor may be operable to execute programming code. The memory may be coupled to the processor and be operable to store information and the programming code executable by the processor. The memory may include a secure element operable to store a first user address in a private blockchain and a private cryptographic key or a public cryptographic key. The processor may be operable upon execution of the programming code stored in the memory to perform functions. A smart contract library may be accessed that includes a number of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract. Each template of the number of templates includes a number of sections having different contractual terms and conditions. Each respective section of the number of sections includes programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section. A selection of a template of a smart contract from the number of templates may be received for implementation as a smart contract. An indication of execution of a portion of the smart contract may be received. The executed portion may indicate acceptance of the terms and conditions in the plurality of sections of the selected template. A smart contract address in the private blockchain may be generated using the first user address and a nonce value. A smart contract hash value may be generated using a value related to the programming code of the smart contract as an input into a hash function. The smart contract hash value may be stored as a transaction in the private blockchain. The transaction may be associated with the smart contract address and the first user address in the private blockchain.</p><p id="p-0008" num="0007">An example of non-transitory computer-readable storage medium storing computer-readable program code executable by a processor is also disclosed. A smart contract library may be accessed that includes a number of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract. Each template of the plurality of templates may include a number of sections having different contractual terms and conditions and fillable fields for specific contract terms. Each respective section of the number of sections may include programming code operable to enforce conformance with the different contractual terms and conditions including any specific contract terms. receive a selection of a template of a smart contract from the plurality of templates for implementation as a smart contract. All sections of the selected template may be assembled into a finalized smart contract. An assigned private cryptographic key may be obtained, and the private cryptographic key may be associated with a public key. A first user address may be generated in a private blockchain based on the assigned private cryptographic key. The assigned private cryptographic key may be associated with a public key. An indication of execution of a portion of the finalized smart contract may be received. The executed portion may indicate acceptance of the terms and conditions including the specific contract terms. A smart contract address may be generated using the assigned private cryptographic key and another value as an input into a hash function. The generated smart contract address may be based on an output of the hash function. The smart contract address may be stored as a transaction in a private blockchain, wherein the transaction is associated with the first user address and the smart contract address in a private blockchain.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of a system suitable for implementing examples of uses of smart contracts and the building of a smart contract that utilize a blockchain.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a flow chart of an example of a process for initiating and implementing a smart contract.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a flow chart of an example of a smart contract revision subprocess.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates another example of a process for initiating and implementing a smart contract.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates an example of a system illustrating an example implementation of an example of a smart contract.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates an example of the exchange of communications in the example system of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a logical model of an example of a blockchain, consistent with disclosed examples.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a logical model of a message stored in a blockchain, such as the blockchain element in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, consistent with disclosed examples.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example of a computing architecture suitable for implementing the devices, systems, and techniques described with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>7</b></figref>.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an example of a system implementation suitable for implementing examples of a process that utilizes a blockchain. The networking environment <b>100</b> may include multiple different systems that are internal to an enterprise <b>110</b> and external to the enterprise <b>110</b>. For example, systems and components internal to the enterprise <b>110</b> may include an enterprise network <b>142</b>, an identity and smart contract system <b>140</b>, a smart contract server <b>147</b>, an enterprise wallet management server <b>150</b>, and a collaborative environment <b>148</b>. The networking environment <b>100</b> may also include elements external to the enterprise <b>110</b> that, however, are coupled to the enterprise <b>110</b>. For example, external elements such as a data network <b>111</b>, computing devices <b>101</b>A, <b>101</b>B and <b>101</b>C, blockchain <b>105</b>, computing device <b>102</b>, and the like. The data network <b>111</b> may be a data network, such as the internet, another type of data network (e.g., a wide area network, campus wide network, metropolitan area network, or the like), a cellular network, or the like, external to the enterprise <b>110</b>. The data network <b>111</b> may be coupled to several computing devices, such as computing devices <b>101</b>A, <b>101</b>B and <b>101</b>C as well as blockchain <b>105</b> and computing device <b>102</b>. The data network <b>111</b> may exchange communicates with the enterprise network <b>142</b> utilizing known security protocols.</p><p id="p-0019" num="0018">The smart contract system <b>140</b> may comprise systems with access to blockchain <b>105</b> via the enterprise network <b>142</b> and data network <b>111</b>.</p><p id="p-0020" num="0019">In more detail, the smart contract system <b>140</b> may include a memory <b>143</b>, a smart contract library <b>145</b> and a smart contract configuration component <b>144</b>. The memory <b>143</b> may store programming code for executing processes and functions, such as an example of a process described in more detail with <figref idref="DRAWINGS">FIG. <b>4</b></figref> below. The smart contract library <b>145</b> may store a number of smart contract templates including a smart contract <b>146</b>. In an example, the smart contract library <b>145</b> may include smart contract templates having different classes of contract templates. For example, the different classes of contract templates may include automobile loans for different terms, automobile leasing agreements, apartment leasing agreements, wills, trusts, child custody arrangements, bankruptcy documents, equipment leasing agreements, documents requiring any one of notarization, authentication or auditability, or the like. Each smart contract template, such as smart contract <b>146</b>, in the smart contract library <b>145</b> may have contract terms and conditions, and programming code. The programming code may be executed by a computing device, such as computing devices <b>101</b>A-C. The smart contract server <b>147</b> may be coupled to the enterprise network <b>142</b> with a connection to the data network <b>111</b> and the smart contract system <b>140</b>. The smart contract system <b>140</b> may include a smart contract configuration component <b>144</b>, the smart contract library <b>145</b>, and the memory <b>143</b>.</p><p id="p-0021" num="0020">The networking environment <b>100</b> can generate a non-reputable record of interactions via the blockchain <b>105</b>. Furthermore, the blockchain <b>105</b> can be distributed across a plurality of computing systems, encouraging trust in the validity of the records stored in the blockchain <b>105</b>. In this manner, the disclosed systems provide an innovative technical solution to at least the above-mentioned technical problems with conventional systems.</p><p id="p-0022" num="0021">A computing device, such as <b>101</b>A-C may be operable to receive a request for selection of a smart contract from the smart contract libraryl<b>45</b>, provide information to the identity and smart contract system <b>140</b>, and perform other functions. In some embodiments, computing device, such as <b>101</b>A-C may be operable to receive the request from another element of the networking environment <b>100</b>, such as another computing device, such as <b>101</b>A-C and/or a computing device <b>102</b>. A computing device, such as <b>101</b>A-C, may be operable to interact with blockchain <b>105</b> to process the request by storing a transaction or retrieving information in a transaction from the blockchain <b>105</b>.</p><p id="p-0023" num="0022">For example, a computing device, such as <b>101</b>A-C, may also be operable to store transactions in blockchain <b>105</b>, consistent with examples disclosed herein. As described with reference to the examples of <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>6</b></figref>, the transactions may include smart contracts hash values or the like.</p><p id="p-0024" num="0023">Private blockchain <b>105</b> may comprise a distributed ledger data structure, consistent with disclosed examples. For example, authorized systems, such as enterprise wallet management server <b>150</b> or smart contract server <b>147</b>, may store copies of blockchain <b>105</b>. These authorized systems may be operable to add blocks to blockchain <b>105</b>, validate the contents of blocks produced by other systems, publish the blocks to other authorized systems, and/or manage read/write permissions for other systems to blockchain <b>105</b>. Authorized systems may be operable to receive transactions from other systems for publication in private blockchain <b>105</b>. Other systems may have read-only access to private blockchain <b>105</b>. As described below, private blockchain <b>105</b> may be operable to store information as well as transactions from member systems as transactions to the private blockchain <b>105</b>, where the information or transactions in a transaction may include one or more of: a user's uploaded identifying documents (possibly encrypted), and/or a hash of content of the smart contract; an ownership document endorsement token (ODET) left by one or more trusted independent systems' servers; e-signatures on the smart contract; or metadata including, for example, who is supposed to sign the smart contract and when the smart contract expires (e.g., how long the offer in the smart contract is open or an event that results in expiration).</p><p id="p-0025" num="0024">Enterprise network <b>142</b> may be operable to provide communications between components internal to the enterprise of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and communicate with networks and devices external to the enterprise, such as data network <b>111</b>, computing devices <b>101</b>A-C and <b>102</b>, and private blockchain <b>105</b>. For example, network <b>142</b> may be any type of network (including infrastructure) that provides communications, exchanges information, and/or facilitates the exchange of information, such as a Local Area Network, a Wide Area Network, or other suitable connection(s) that enables identity and smart contract system <b>140</b> to send and receive information between the components of the enterprise.</p><p id="p-0026" num="0025">In some examples, the smart contract may have sufficient programming code to perform the auditing functions. In an operational example, the smart contract server <b>147</b> may be operable to execute programming code, such as the programming code stored in the memory <b>143</b> to perform functions and provide services to the enterprise or enterprise customers. The smart contract server <b>147</b> may distribute instances of the smart contract configuration application <b>157</b> to computing devices that request the smart contract configuration application. The smart contract configuration application <b>157</b> may be a decentralized application downloaded to a mobile device or computing device to generate a smart contract. The smart contract configuration application <b>157</b> may, for example, include programming code that enables generation of a unique address for the smart contract. The form of the unique address may be dependent upon the type of blockchain (e.g., Ethereum or Hyperledger) that is being used by the user. For example, the private blockchain <b>105</b> may mimic the attributes of either Ethereum or Hyperledger and the unique address generated by the smart contract configuration application <b>157</b> may be a digital address associated with information related to the smart contract. A digital address may, for example, be a unique alphanumeric codename (e.g., 1CK6KY6MHgYvmRQ4PAaf-KDrglejbHcE, 1234Z5OX, or the like) for the smart contract. Similar unique alphanumeric codes may be used in the generation of an address for a user, a digital wallet or another smart contract in a blockchain.</p><p id="p-0027" num="0026">The smart contract server <b>147</b> may, for example, be operable to access a smart contract application storage <b>155</b> and provide a copy (or instance) of the smart contract configuration computer application <b>157</b> to a first user's computing device, such as computing device <b>101</b>A, in response to a request from the first user's computing device <b>101</b>A. The request of the copy or instance of the smart contract configuration computer application code may be received via a connection (e.g., through a communication interface &#x2014; not shown in this example) to the external data network <b>111</b> to the enterprise network <b>142</b>. Upon receipt of the smart contract configuration computer application code, the code may be installed as an instance of smart contract configuration computer application (i.e., a smart contract configuration application (App) instance) <b>141</b>A. Similar requests may be made by computing devices <b>101</b>B and <b>101</b>C, which may install instances of the smart contract configuration computer application code as a smart contract configuration app instance <b>141</b>B and a smart contract configuration app instance <b>141</b>C.</p><p id="p-0028" num="0027">When a respective instance of a smart contract configuration application, such as <b>141</b>A, <b>141</b>B or <b>141</b>C is installed on a respective one of computing devices <b>101</b>A-C, the respective instance of the smart contract configuration app may communicate via the data network <b>111</b> and enterprise network <b>142</b> with the smart contract system <b>140</b>. For example, the smart contract configuration component <b>144</b> may receive from the instance of the smart contract configuration application instance, such as <b>141</b>A executing on the first user's computing device <b>101</b>A, a selection of a smart contract from the smart contract library<b>145</b>. In some examples, the selected smart contract, such as <b>146</b>, may include sections. Each section may be modifiable and may have a set of contract attributes and settings for the respective section. Contract attributes of a smart contract may include the number of signers, required signers, signature pages, contract term, an expiration date or period, collateral, terms of default and repossession, annual percentage rate or monthly payment on an amount of money owed, or the like, and the settings may include action to take upon expiration or completed execution, or failure of one party to execute the contract, where a copy of the final terms and conditions of the smart contract may be stored, a hash function or type of hash function to be applied to a final smart contract, electronic signatures, an address where transactions are to be stored, or the like.</p><p id="p-0029" num="0028">Each section of the smart contract <b>146</b> may also include programming code that may be operable to evaluate the terms and settings of the particular section with respect to other actions related to the smart contract for compliance. In addition, the programming code may be operable to take actions in response to the evaluation indicating compliance or non-compliance. For example, the programming code may generate a message to the parties indicating fulfillment of a term of a particular section and trigger actions, such as money transfers, title amendments, notes of satisfaction, or the like. For example, in the context of a vehicle loan, the smart contract programming code may be operable to be taken such as a transfer of title to a vehicle from a lien holder to the owner of a vehicle when a final payment is made to the lien holder, or the like.</p><p id="p-0030" num="0029">The example of <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example of a process <b>200</b> for creating a smart contract. A data storage may be provided that contains a smart contract library template identified by the received indication may be accessed. In the example process <b>200</b>, a contract-creating computing device may access a smart contract library (<b>210</b>). The smart contract library may, for example, include a number of templates of different legal contracts in which each of the templates is implementable as a smart contract between respective parties in the smart contract. In addition, each template of the plurality of templates may include a number of sections having different contractual terms and conditions and fillable fields for specific contract terms. Also, each respective section of the number of sections may include programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section and with any specific contract terms input to a fillable field of the respective section. At <b>215</b>, the contract-creating computing device may receive a selection of a template of a smart contract from the plurality of templates in the smart contract library for implementation as a finalized smart contract. The process of selecting the template of a smart contract may include additional steps. For example, the selection of a template may be an indication that the selected template is related to one of: an automobile purchase, an automobile lease, a personal loan, a business loan, a rental agreement, a will, a trust agreement, an insurance agreement, or the like may be received. The selected template may include programming code suitable for implementing the smart contract based on the selected template.</p><p id="p-0031" num="0030">At <b>220</b>, a private cryptographic key may be obtained. The private cryptographic key may be assigned to a first user of the contract-creating computing device. The private cryptographic key is associated with a public cryptographic key. A first user address associated with the contract-creating computing device in a private blockchain may be generated (<b>225</b>). The first user address is based on the private cryptographic key and is associated with the first user in the private blockchain. A smart contract address may be generated, at <b>230</b>, for the finalized smart contract using the first user address and a nonce value. As an authentication measure and to preserve a version of the smart contract, a smart contract hash value may be generated (<b>235</b>). For example, a smart contract hash value may be generated using a value related to the programming code of the smart contract as an input into a hash function.</p><p id="p-0032" num="0031">The smart contract hash value may be a hash of the finalized smart contract. The hash of the finalized smart contract may include as inputs: the text of the finalized smart contract (e.g., all sections of the smart contract including all of the revised text and/or all of the programming code of each section of the finalized contract), the programming code of the sections of the smart contract, a hash value of the programming code of the sections of the smart contract, an identifier associated with the contract-creator computing device, identifiers of the parties to the smart contract, or the like.</p><p id="p-0033" num="0032">At <b>240</b>, the smart contract hash value may be stored as a transaction in the private blockchain. In an example, the transaction may be associated with the smart contract hash value and the first user address in the private blockchain.</p><p id="p-0034" num="0033">At <b>245</b>, in response to completion of a section of the smart contract, a subsequent smart contract hash value may be generated as a subsequent transaction in the private blockchain. For example, programming code of a particular section of the smart contract may receive indications from each respective party to the smart contract regarding a term or condition of the particular section of the smart contract. In a specific example, the particular section may require a transfer and receipt of funds to satisfy the respective terms or conditions of the particular section of the smart contract. Upon the transfer and receipt of the funds, the funds transferring party, the fund recipient party, or the financial institution executing the transfer may provide inputs (e.g., hash values of amount of funds, bank account numbers, routing numbers or the like) to a subsequent transaction in the private blockchain. The subsequent transaction may be associated with the smart contract address, an address of each party of the smart contract, or the like.</p><p id="p-0035" num="0034">In an example of the execution of programming code in the smart contract, the programming code of the smart contract may contain functions that the user can invoke by calling them directly, or, may be invoked in response to an event, such as by making a deposit of cryptocurrency into the smart contract.</p><p id="p-0036" num="0035">In some examples, any response time periods (e.g., payment grace periods, period for acceptance or the like) may be managed by initiating a call to a function by an external source, such as scheduler program or the like. For example, a function such as determining if your loan has gone into delinquency may need to be called by a scheduler that may reside on wallet management server <b>150</b> or something keeping track of given periods outlined in the smart contracts. Such an example may occur because a user may not make any further payments on a loan, and logic residing in the payment function to check the payment relative to the date may not ever run again. However, this example payment function may be run any time an entity related to the smart contract wishes to call any of the smart contract's functions. For example, a loan smart contract may include a method for making a payment, checking an amount paid, and checking remaining balance. The payment method may, for example, accept payments from one wallet per loan, or from any wallet for just one loan. The former way may reduce costs for the financial institution in servicing loans on the cryptocurrency network (particularly Ethereum), but it may also limit the payor to only make payments from one wallet. The latter way would be akin to making payments on a single loan from multiple bank accounts. The payment method may either contain, or call upon completion, a piece of code that checks for satisfaction of the loan terms&#x2014;i.e. the loan has been fully paid off by the due date. If this condition has been met, some action may be initiated, for instance, a digital title transfer, or the like. In a further example, a system may be implemented where interaction between two parties needs to take place. For instance, one party may use a smart contract to facilitate document upload. Once the documents have been uploaded through a smart contract function call, a hash of the document and its path may be stored in the smart contract, and this function may alert a second party to review the submitted documents. Upon satisfactory review by the second party, the smart contract may take another action such as notifying the first party, and/or allowing access to additional smart contract templates (such as open an account, get a loan, or the like).</p><p id="p-0037" num="0036">Returning to the example of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in response to the subsequent transaction being authenticated as complying with the respective section of the smart contract by the programming code of the respective section, programming code of a section of the smart contract may report that the subsequent transaction is in the private blockchain (<b>250</b>). The report may be sent to an entity associated with the smart contract library for further distribution to the parties of the smart contract. Alternatively, the report may be sent directly to the parties of the smart contract.</p><p id="p-0038" num="0037">The process <b>200</b> may include additional processes. For example, in an additional process, one or more sections of a number of sections of the selected template may be revised. To facilitate revisions, functions may be accessible by administrators where, if a message is sent with the right credentials or a transaction is made from the correct originating wallet, then a loan's monthly due date or balance may be modified during the loan's term. Once a smart contract is initiated, a variable in the smart contract that stores an address of a smart contract and a function that can update the variable may be used to actually change one or more sections of the smart contract. If the address is different than the current smart contract's address, the context of execution can jump to the new address in order to run the updated code.</p><p id="p-0039" num="0038">This additional process is shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> and may be performed, for example, after the selection of a template of a smart contract is received by the contract creating device. <figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a flow chart of an example of a smart contract revision subprocess. In this example, the selected smart contract may include one or more sections that include terms and conditions that may be revised. In the example, process <b>300</b> may be a subprocess to process <b>200</b>. The process <b>300</b> may enable one or more sections of the selected smart contract to be revised by inputting specific contract terms in the fillable field of the one or more sections of the selected template that has been selected to be revised (<b>310</b>).</p><p id="p-0040" num="0039">In the example, the contract-creating computing device may, prior to assembling all sections of the selected template, receive an updated section of the one or more sections from the contract-creating computing device (<b>315</b>) based on the revision to the inputted specific contract terms in the fillable field of the updated section or a specific section-related contractual terms. An identical section of the selected template may be replaced with the updated section for assembling (<b>320</b>).</p><p id="p-0041" num="0040">Some or all of the section of the number of sections of the selected template may include programmable code that implements a compliance scheme to ensure different terms or conditions related to the finalized smart contract are fulfilled. In the example, the programming code of the revised section of the selected template may be modified based on the received revision to the selected section or template (<b>325</b>).</p><p id="p-0042" num="0041">In one or more examples, the programming code of the smart contract may be operable to track revisions to the selected template of the smart contract. Upon completion of the revisions to the selected template, a programming code hash value may be generated by inputting the modified programming code into a programming code hash function (<b>330</b>). In the example, all sections of the selected template including the revised one or more sections of the selected template may be assembled into a finalized smart contract (<b>335</b>).</p><p id="p-0043" num="0042">Other subprocesses may also be implemented. For example, in addition to storing the smart contract hash value as a transaction in the private block chain, the programming code hash value may also be stored as part of a revision-related transaction to the private blockchain. For the example, the revision-related transaction may be associated with the smart contract address, a contract participating device address, and/or a contract creator-address in the private blockchain. The revision-related transaction that stores the programming code hash value as the revision-related transaction may be an initial transaction stored in the private blockchain prior to storing the smart contract hash value.</p><p id="p-0044" num="0043">The process <b>300</b> may further include sending a message related to the finalized smart contract for delivery to a contract participating device. For example, the contract participating device may be different from the contract-creating computing device. In the example, the contract participating device may be a computing device (e.g., a tablet, a desktop computer, a smart phone, a laptop, or the like) having a computing device identifier. The computing device identifier may be associated with the smart contract. In the example, a contract participating hash value indicating a further portion of the smart was executed the party associated with the contract participating device may be received from the contract participating device. The contract participating hash value may be stored as a subsequent transaction in the private blockchain. The subsequent transaction may be associated with the contract participating hash value, a smart contract address in the private blockchain, and the first user address in the private blockchain. In addition, authentication information may be received from the contract participating device via a short-range wireless communication link. The contract participating device may be authenticated based on the received authentication information. Based on the authentication, access may be provided to a secure collaborative environment within a network environment to the contract participating device. The secure collaborative environment may enable contract participating devices, such as the contract creating device and devices of the parties to the smart contract, to negotiate and modify terms and conditions of the smart contract. For example, while the contract participating devices are operating within the collaborative environment, the respective contract participating devices may receive a notification of a revision to the one or more sections of the smart contract by one or more of the respective contract participating devices within the collaborative environment.</p><p id="p-0045" num="0044">In another example of generating a smart contract, FIG.<b>4</b> provides another process example for generating a smart contract. The process <b>400</b> example of <figref idref="DRAWINGS">FIG. <b>4</b></figref> may be provided by a non-transitory computer readable medium embodied with programming code that when executed by a processor causes the processor to perform functions. For example, in the process <b>400</b>, the processor may, at <b>410</b>, access a smart contract library. The smart contract library may include a number of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract. In an example, each template of the number of templates may include a number of sections having different contractual terms and conditions and fillable fields for specific contract terms, and each respective section of the number of sections may include programming code operable to enforce conformance with the different contractual terms and conditions including any specific contract terms input into the fillable fields provided by an instance of the smart contract application, such as <b>141</b>C. At <b>415</b>, the processor may receive a selection of a template of a smart contract from the number of templates for implementation as a smart contract.</p><p id="p-0046" num="0045">All sections of the selected template may be assembled into a finalized smart contract by an instance of the smart contract application (<b>420</b>). In the example, one or more sections of a number of sections of the selected template may be revised. For example, specific contract terms may be input in a fillable field of the one or more sections of the selected template. For example, terms and conditions may be input into the fillable fields. In an automobile finance contract example, a loan term (i.e., duration of the loan), an annual percentage rate (APR), an amount to finance, a payment amount, a payment due date, a default conditions, early payment conditions, or the like.</p><p id="p-0047" num="0046">All sections of the selected template including the revised one or more sections of the selected template may be assembled into a finalized smart contract. The smart contract application may, for example, forward the assembled and finalized smart contract to the smart contract configuration server <b>144</b> for validation. For example, the smart contract configuration server <b>144</b> may be operable to initiate a review process to ensure the contractual terms of the smart contract are valid.</p><p id="p-0048" num="0047">An assigned private cryptographic key that is associated with a public key may be obtained (<b>425</b>). In the example, the smart contract application may initiate an encryption process as described with reference to other examples herein.</p><p id="p-0049" num="0048">In addition, a first user address in a private blockchain may be generated based on the assigned private cryptographic key that may be associated with a public key (<b>430</b>).</p><p id="p-0050" num="0049">As the parties begin to take actions to finalize the terms and conditions of the smart contract, a portion of the finalized smart contract may be executed. An indication of execution of a portion of the finalized smart contract may be received (<b>435</b>). The execution of the portion of the finalized smart contract may indicate acceptance of the terms and conditions including the specific contract terms. In the example, a smart contract address may be generated (at <b>440</b>) based on an output of a hash function which uses the assigned private cryptographic key and another value as an input into the hash function. In the example, a smart contract address in the private blockchain may be generated using the first user address and a nonce value. The smart contract address may be stored (<b>445</b>) as a transaction in a private blockchain. For example, the transaction may be associated with the first user address and the smart contract address in a private blockchain.</p><p id="p-0051" num="0050">The completion of respective sections of the smart contract may be monitored by one or more processes. For example, the smart contract may be set as a state machine, where there are variables keeping track of progress. For instance, if one is trying to enter into a home loan contract, there are several stages involved here, including: finding a home, getting prequalified, signing contract with a seller, loan origination/providing identity and income verification, title company paperwork, and loan company servicing. The smart contract may be operable to monitor a user's progress through all of the above stages. There may be programming code that implements stipulations in each section of the contract related to the above stages, and the implemented stipulations may look for signatures to be provided, or assets to be transferred into a digital wallet belonging to the smart contract. In addition, different functions may be called in order to perform an action on the smart contract. For example, one or more of the functions may pertain to one specific step but may be operable to ensure that all the steps before the specific step have been successfully fulfilled and that any related subsequent steps or future steps have not been completed already(unless the smart contract allows steps to be performed out of order or the like). For example, each time a function is called, the function may be operable to validate a status of a respective section of the smart contract (and possibly other sections). In response to the respective section being successfully completed, other functions related to this particular section and previous sections may be blocked from executing again if so desired by the users. For example, a master controller may also run functions periodically on the smart contract in order to enact mechanisms that should happen monthly or on some periodic basis (e.g., notification of an upcoming payment due date, or the like).</p><p id="p-0052" num="0051">In the example of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, at <b>450</b>, in response to completion of a section of the smart contract, a subsequent smart contract hash value may be generated as a subsequent transaction in the private blockchain. The subsequent smart contract hash value may be generated, for example, using a value related to the programming code of the smart contract as an input into a hash function. For example, programming code of a particular section of the smart contract may receive indications from each respective party to the smart contract regarding a term or condition of the particular section of the smart contract. In a specific example, the particular section may require a transfer and receipt of funds to satisfy the respective terms or conditions of the particular section of the smart contract. Upon the transfer and receipt of the funds, the funds transferring party, the fund recipient party, or the financial institution executing the transfer may provide inputs (e.g., hash values of amount of funds, bank account numbers, routing numbers or the like) to a subsequent transaction in the private blockchain. The subsequent transaction may be associated with the smart contract address, an address of each party of the smart contract, or the like.</p><p id="p-0053" num="0052">In response to the subsequent transaction being authenticated as complying with the respective section of the smart contract by the programming code of the respective section, programming code of a section of the smart contract may report that the subsequent transaction is in the private blockchain (<b>455</b>). The report may be sent to an entity associated with the smart contract library for further distribution to the parties of the smart contract. Alternatively, the report may be sent directly to the parties of the smart contract.</p><p id="p-0054" num="0053">In the example, prior to step <b>420</b>, an instance of the smart contract application executing on the processor of a computing device may receive a revision to the selected template of the smart contract. For example, the programming code of the selected template may be modified based on the received revision to the selected template. In addition, revisions to the selected template of the smart contract may tracked, and upon tracking no further revisions of the selected template, a programming code hash value may be generated to memorialize a version of the programming code of the smart contract by inputting the modified programming code into a programming code hash function. The programming code hash value may be stored as part of a revision-related transaction to the private blockchain. In the example, the revision-related transaction may be associated with the smart contract address, a contract participating device address, and the first user address in the private blockchain.</p><p id="p-0055" num="0054">In another example, the instance of the smart contract application executing on the processor may receive authentication information in a communication from a contract participating device via a short-range wireless communication link of the computing device. The instance of the smart contract application executing on the processor may authenticate the contract participating device based on the authentication information in the received communication. The instance of the smart contract application executing on the processor, in response to the authentication of the contract participating device, may provide access to a secure collaborative environment, such as <b>148</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, within an enterprise, such as <b>110</b>, to contract participating device.</p><p id="p-0056" num="0055">In a further example, the instance of the smart contract application executing on the processor may forward a partially-revised version of the selected template to an instance of the smart contract application executing on a contract participating device different from the instance of the smart contract application executing on the processor. In the example, the instance of the smart contract application executing on the contract participating device may approve of a revision, and in response to the approval, an approved-revised version of the selected template may be assembly into the finalized smart contract may be receive from the contract participating device.</p><p id="p-0057" num="0056">The instance of the smart contract application executing on the processor, in a further example, may receive an indication that the selected template is related one of: an automobile purchase, an automobile lease, a personal loan, a business loan, a rental agreement, a will, a trust agreement, an insurance agreement, real estate lease, or the like.</p><p id="p-0058" num="0057">In another example, the instance of the smart contract application when executed may enable the processor to receive a contract participating hash value from a contract participating device. The contract participating hash value may indicate a further executed portion of the smart contract was signed by the party associated with the contract participating device. The instance of the smart contract application executing on the processor may store the contract participating hash value as a subsequent transaction in the private blockchain. In an example, the subsequent transaction may be associated with the contract participating hash value, a smart contract address in the private blockchain and the first user address in the private blockchain.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> illustrates an example of a system illustrating an example implementation of a smart contract. In the system example of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, the system <b>500</b> may function based on instances of the smart contract application executing in digital wallets of a number of the system elements, such as the auto owner, the dealer server, the vehicle, the enterprise server, and, optionally, public safety server (with an instance of the smart contract application <b>565</b>. In the example system, programming code of a smart contract may be operable to connect to systems external to the smart contract. For example, the external systems may be accessible via hypertext transfer protocol (HTTP), but also any other communication protocol.</p><p id="p-0060" num="0059">In an example, the system <b>500</b> may include a data network <b>520</b>, a private blockchain platform <b>550</b>, an enterprise server (with an instance of a smart contract application) <b>525</b>, a purchaser mobile device <b>510</b>, a dealer server (with an instance of a smart contract application) <b>535</b>, and a vehicle application <b>540</b>. The data network <b>520</b> may interconnect the other elements, such as <b>510</b>, <b>525</b>, <b>535</b>, <b>540</b> and <b>550</b> in the system <b>500</b>. The private blockchain platform <b>550</b> may retain a smart contract <b>505</b>. The smart contract <b>505</b> may, in this example, be an automobile purchase contract with additional conditions related to payment terms, transfer of possession, and, ultimately, transfer of ownership upon satisfaction of the terms of the smart contract <b>505</b>. The vehicle wallet <b>545</b> of the purchased vehicle may include an instance of the smart contract application that is executed by a processor of the purchased vehicle. For example, the purchased vehicle may include programming code, such as Apple CarPlay&#xae;, Android Automotive OS&#xae;, or the like that enables the vehicle to connect to a data network such as <b>520</b>. The data network <b>520</b> may be the internet, a cellular network, or the like.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> illustrates an example of the exchange of communications in the example system of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>. In <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, an automobile dealer may be an entity that sells automobiles to purchasers of automobiles. The automobile dealer may communicate electronically with other devices via a dealer server <b>535</b> as shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>. To participate in and utilize smart contracts, the automobile dealer may have a digital wallet, such as dealer server <b>535</b>. The purchasers may be persons or entities (e.g., rental car companies or the like) that purchase and take possession of the automobiles sold by the automobile dealers. Similarly, in order to participate in and utilize smart contracts, the purchaser or person in possession of the automobile may have an automobile purchaser mobile device, such as <b>510</b> of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, that has a purchaser wallet <b>515</b>. An enterprise may be a financial institution that provides automobile financing and loans. The enterprise may provide the enterprise server <b>525</b>, which may communicate with the automobile dealer server <b>535</b> and a purchaser wallet <b>515</b>. As discussed with reference to <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref>, the dealer and a purchaser may negotiate terms of a sale of an automobile, the enterprise and the purchaser may negotiate terms of an automobile loan and financing based on the terms of the sale of the automobile between the dealer and the purchaser. All of the terms and conditions of the loan and financing, payment to the dealer may be memorialized in a smart contract, such as <b>505</b> of <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>. The smart contract may be stored on the private blockchain platform <b>550</b>. The private blockchain platform <b>550</b> may also provide the processing devices for execution of the programming code of the smart contract <b>505</b>.</p><p id="p-0062" num="0061">In an optional example, the public safety server with the smart contract application instance <b>565</b> may be operable to receive notifications regarding a status of the vehicle, such as stolen, repossessed so that law enforcement do not apprehend the reprocessing person, abandoned, or the like.</p><p id="p-0063" num="0062">In the example of <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the automobile dealer and purchaser may agree upon the purchase of an automobile by the purchaser. The automobile dealer via the dealer server <b>535</b> may initiate a smart contract purchase (<b>580</b>). For example, the initiation of the smart contract purchase (<b>580</b>) may entail the dealer server <b>535</b> generating a smart contract from a smart contract template. The dealer server <b>535</b> may input information relevant to the automobile to be purchased and dealer information for receipt of payment for the vehicle. The dealer server <b>535</b> may forward the smart contract to the purchaser wallet <b>515</b>. The purchaser wallet <b>515</b> may execute on a mobile device that has an instance of the smart contract application described above with reference to the examples of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b></figref>. The purchaser wallet <b>515</b> may be operable via the instance of the smart contract application executing on the purchaser mobile device <b>510</b> to input information into a smart contract template, such as through the fillable input fields, sent by the dealer server <b>535</b> as part of the initiate smart contract purchase (<b>580</b>). The instance of the smart contract application executing on the purchaser mobile device <b>510</b> may determine that sufficient information for making a loan request (e.g., verifiable purchaser identifying information, income information, employment history, and the like) has been input into the smart contract. With the input of sufficient information, the instance of the smart contract application executing on the purchaser mobile device <b>510</b> may forward loan qualification request (<b>581</b>) to the enterprise server <b>525</b> for evaluation.</p><p id="p-0064" num="0063">At <b>582</b>A, the enterprise server <b>525</b> may approve the loan and forward the loan approval to the dealer server <b>535</b>. The purchaser wallet <b>515</b> may execute the smart contract (<b>582</b>B) to indicate the purchaser of the automobile agrees to the terms and conditions of the smart contract. The dealer server <b>535</b> may forward a finalized smart contract (<b>583</b>) to the private blockchain platform <b>550</b> for posting of the finalized smart contract <b>546</b> to a blockchain, such as <b>505</b>, maintained or managed by the private blockchain platform <b>550</b>. Multiple finalized smart contracts in addition to finalized smart contract <b>546</b> may be posted to the blockchain <b>505</b></p><p id="p-0065" num="0064">The dealer server <b>535</b> may, in response to the finalized smart contract, initialize the vehicle according to the finalized smart contract (<b>583</b>). For example, the dealer server <b>535</b> may during the initialization of the vehicle (<b>584</b>) provide information related to the smart contract maintained in the blockchain <b>505</b> to the vehicle wallet <b>545</b>. For example, the provided information may include encrypted authentication key information related to the finalized smart contract, smart contract identifying information, or the like. The vehicle wallet <b>545</b> may optionally generate an initialization vehicle transaction to the blockchain (<b>594</b>) that is sent to the private blockchain platform <b>550</b> for storage as a transaction in the blockchain <b>505</b> as an acknowledgement that the vehicle has been initialized according to a smart contract identified in the finalized smart contract (<b>583</b>) message.</p><p id="p-0066" num="0065">The purchaser may make a payment according to the terms and conditions of the smart contact via the purchaser wallet <b>515</b>. The first payment according to terms (<b>585</b>) may be sent from the purchaser wallet <b>515</b> to the enterprise server <b>525</b>. The enterprise server <b>525</b> may send a notification of first payment according to terms (<b>586</b>) to the private blockchain platform <b>550</b> for storage as a transaction in the blockchain <b>505</b>.</p><p id="p-0067" num="0066">In an optional exchange, the programming code of the smart contract may cause the private blockchain platform <b>550</b> to generate a payment confirmation (<b>597</b>) to be sent to the vehicle wallet <b>545</b>. In an example, the vehicle wallet <b>545</b> may be operable to execute remedial actions, in the case that a payment confirmation according to the terms of the smart contract is not received. Alternatively, the vehicle wallet <b>545</b> may be operable to respond only to specific non-payment-related messages.</p><p id="p-0068" num="0067">The notification of payment messages (<b>585</b>) and (<b>586</b>) (and (<b>597</b>), if enabled) may continue for the term of the smart contract. While not shown, receipt of the final payment by the enterprise server <b>525</b> may trigger the transfer of the automobile title from the enterprise to the purchaser. The enterprise server <b>525</b> may generate a message for storage as a transaction in the blockchain indicating that the loan has been satisfied.</p><p id="p-0069" num="0068">In an example, the purchaser may fail to make a payment (<b>587</b>). In response to the failure to receive payment (<b>587</b>), the enterprise server <b>525</b> may generate a notification of non-payment (<b>588</b>) message for delivery to the private blockchain platform <b>550</b> for generation of a transaction to be stored in the blockchain.</p><p id="p-0070" num="0069">The private blockchain platform <b>550</b> may enable the finalized smart contract to generate a message in response to receipt of the notification of non-payment <b>588</b>. For example, the programming code of the smart contract may be operable to generate a non-payment notice and cause the non-payment notice (<b>589</b>) to be sent to the vehicle wallet <b>545</b>. The instance of the smart contract application executing on the vehicle wallet <b>545</b> may generate a non-payment notice (<b>589</b>A) that is sent to the purchaser wallet <b>515</b>. The vehicle wallet <b>545</b> may be coupled to an ignition system of the vehicle or other system affecting operation of the vehicle. The vehicle wallet <b>545</b> may act according to the non-payment notice <b>590</b>. For example, if the vehicle is parked, the vehicle wallet <b>545</b> may be operable to disable the ignition system of the vehicle. The vehicle wallet <b>545</b> may also be operable to, optionally, generate notifications, such as notification of vehicle wallet (VW) action <b>592</b> that is sent to the enterprise server <b>525</b>. The enterprise server <b>525</b> may be operable to, optionally, send a notification of the VW action (<b>592</b>A) to the purchaser wallet <b>515</b>. In addition, the vehicle wallet <b>545</b> may send a message to the private blockchain platform <b>550</b> for generation of a transaction of the VW action (<b>593</b>).</p><p id="p-0071" num="0070">The instance of the smart contract application executing on the various devices, such as the purchaser's mobile device, and the vehicle processor, as well as the programming code of the smart contract may enable a number of functions and actions. For example, lack of payment of the required payments may enable the smart contract to initiate a repossession process that notifies the vehicle wallet <b>545</b> of an identity of a repossession professional who may access the vehicle for purposes of repossession. The vehicle wallet <b>545</b> may also be able to access location services of the vehicle to notify the enterprise server <b>525</b> of the location of the vehicle. In some examples, if the vehicle is stolen, a purchaser using the smart contract application may notify the enterprise server <b>525</b>, which notifies the smart contract in the blockchain of the stolen vehicle. Programming code of the smart contract may notify the vehicle wallet <b>545</b> to act and may cause the generation of a message notifying law enforcement of the stolen vehicle.</p><p id="p-0072" num="0071">Blockchain technology and techniques may be used to mitigate problems with smart contract security and smart contract integrity by creating transactions in the blockchain application platform (&#x201c;the blockchain&#x201d;) that are immutable and visible to all. It is extremely difficult for a bad actor to change a validated transaction in the blockchain. By storing a hash of a smart contract on the blockchain, any party can later prove the legality of their copy without having to have expensive trusted third parties to store a copy of a smart contract. In addition, a blockchain solution also adds security and reduces costs as users only pay for the processing power needed to execute a smart contract configuration application and validate and store an electronic signature, a smart contract, related information or the like.</p><p id="p-0073" num="0072">The benefits of blockchain technology may be summarized in five basic principles of blockchain technology: 1) a distributed database, 2) peer-to-peer transmission, 3) transparency and anonymity, 4) irreversibility of records, and 5) computational logic. With a distributed database, each party on a blockchain has access to the entire database and its complete history. For example, no single party controls the data or the information. Every party can verify the records of its transaction partners directly, without an intermediary. Communication occurs directly between peers instead of through a central node. Each node stores and forwards information to all other nodes. In public blockchains, every transaction and its associated value are visible to anyone with access to the system. Each node, or user, on a public blockchain may, for example, have a unique 30-plus-character alphanumeric address that identifies it. Users can choose to remain anonymous or provide proof of their identity to others. Transactions occur between blockchain addresses. As for the irreversibility of records, once a transaction is entered in the blockchain, and the accounts are updated, the records cannot be altered, because the records are linked to every transaction record that came before them (hence the term &#x201c;chain&#x201d;). Various computational algorithms and approaches are deployed to ensure that the recording in the blockchain is permanent, chronologically ordered, and available to all others on the network. The digital nature of the ledger means that blockchain transactions can be tied to computational logic and programmed. As a result, users can set up algorithms and rules that automatically trigger transactions between nodes in the blockchain.</p><p id="p-0074" num="0073">There are several different blockchain application platforms and protocols in use. As a way of comparison between the several different blockchain application platforms and protocols, the Ethereum blockchain application platform and the Hyperledger Fabric blockchain application platform are discussed in more detail. However, the disclosed examples should not be limited to these two specific blockchain application platforms since the examples and techniques described herein and referenced in the claims are intended to be implementable on any blockchain application platform.</p><p id="p-0075" num="0074">The Ethereum blockchain application platform (referred to as &#x201c;Ethereum&#x201d;) may, for example, provide features such as anonymity, full transparency, openness to the public, one single ledger, an extremely large network, security derived from network size, and all nodes (called &#x201c;miners&#x201d;) in the blockchain are equal. In Ethereum, a block holds a fixed amount of data. Multiple transactions may be stored into a block until the block is filled. Once all nodes are filled in, the network compares blocks. Once a majority of nodes in the network agree on the contents of the block, the block is encrypted and linked (&#x201c;chained&#x201d;) to another block in the existing blockchain. Ethereum may utilize digital wallets that are gateways to decentralized applications on the Ethereum blockchain that allow the digital wallet owner the ability to hold cryptocurrency built on Ethereum as well as write, deploy and use smart contracts. While Ethereum is a public blockchain, Ethereum may also be made private by using the open source code in a private network.</p><p id="p-0076" num="0075">Conversely, Hyperledger Fabric is a private blockchain application platform (referred to herein as &#x201c;Hyperledger&#x201d;) having features, such as named users, users need permission from other users to interact, closed to the public, multiple ledgers (e.g., multiple blockchains called channels in Hyperledger), a smaller network, a security derived from an access control list (ACL), three levels of nodes (e.g., endorser, peer and orderer nodes), complex, fast, low-cost, and honesty to protect reputation. For example, a transaction in a smart contract implemented in Hyperledger may have consensus, provenance (all recorded transactions are permanent), immutability (cryptographically linked), finality (single source of finality) and privacy.</p><p id="p-0077" num="0076">As an example, a named user in Hyperledger may announce a transaction, and the transaction may be managed by a smart contract (that may utilize a &#x201c;chaincode&#x201d;). In some examples, a smart contract function is executed only by the selected endorser nodes. For example, endorser nodes agree on the result of the transaction/code execution prior to the transaction being added to the blockchain. Only the endorser nodes (or nodes granted permission presumably by all nodes in the transaction) may have access to the blockchain (or ledger), and since all parties agree to the content of data in the ledger the ledger does not need to be reconciled or audited by the respective parties to the smart contract. However, in cases where enterprise compliance or government regulations are involved, the ledger may be audited with permission of the parties by the enterprise or a governmental body to confirm, for example, regulatory or statutory compliance regarding information in the smart contract.</p><p id="p-0078" num="0077">The operational example may include the smart contract configuration component <b>144</b> delivering the selected smart contract to a smart contract address associated with the selected smart contract in a blockchain, such as <b>105</b>. The smart contract configuration component <b>144</b> may send to the smart contract configuration application instance <b>141</b>A executing on the first user's computing device <b>101</b>A, the selected smart contract address of the selected smart contract that is stored in the blockchain <b>105</b>. In some examples, the blockchain <b>105</b> may be part of a larger blockchain platform. For example, if the blockchain <b>105</b> is part of a private blockchain platform (e.g., Hyperledger Fabric), information associated with the selected smart contract may only be accessible by the first user and any other users the first user authorizes and provides with the address of the selected smart contract. The first user may or may not encrypt the information. Conversely, if the blockchain <b>105</b> is part of a public blockchain platform (e.g., Ethereum), any user with the address of the selected smart contract may access the information in the smart contract. However, to ensure privacy, the smart contract referenced by the hash stored in blockchain <b>105</b> may be encrypted, so access is limited to only the first user and any other authorized user having the encryption key.</p><p id="p-0079" num="0078">It may be helpful to provide some details of a blockchain, such as that described with respect to the examples of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>5</b>B</figref>. <figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a logical model of an example of a blockchain, such as <b>105</b>, consistent with disclosed examples. In the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the blockchain <b>105</b> may include many such blockchains maintained by many different systems (e.g., computing devices <b>101</b>A-C and <b>102</b>, or other systems) and computing devices (such as <b>101</b>A-C and <b>102</b>). In the logical model <b>600</b>, such blockchain examples may comprise data-storage blocks, such as blocks <b>601</b><i>a</i>-<b>601</b><i>d</i>. Blocks of the blockchain may include transactions, such as messages <b>607</b><i>a</i>-<b>607</b><i>d</i>. Generally, blocks in the blockchain may include a header, such as headers <b>602</b><i>a</i>-<b>602</b><i>d</i>, and each header uniquely identifies each block. The headers <b>602</b><i>a</i>-<b>602</b><i>d </i>may, for example, include a hash value generated by a hash function. As mentioned above, a hash function is any function that can be used to map input data of arbitrary size to a hash value of a fixed size. For example, a header may include at least one of the previous block's hash value, a hash value generated based on any transactions in the block (e.g., a Merkle root), and a timestamp. Consistent with disclosed examples, system <b>600</b> may require that blocks added to blockchain <b>105</b> in the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref> satisfy at least one of a proof-of-work condition and an electronic signature condition. For example, the headers <b>602</b><i>a</i>-<b>602</b><i>d </i>may include a nonce chosen to ensure the header satisfies the proof-of-work condition, such as <b>605</b><i>a</i>-<b>605</b><i>d</i>. As a non-limiting example, the proof-of-work condition <b>605</b><i>a</i>-<b>605</b><i>d </i>may require the hash of the header fall within a predetermined range of values. As an additional example, the header may be digitally signed with a cryptographic key of an authorized system, and the electronic signature may be included in the header. This electronic signature may be verified using a key available to the members of system <b>600</b>.</p><p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a logical model of a message <b>607</b><i>b </i>stored in a blockchain (e.g., an element of blockchain <b>105</b>), consistent with disclosed examples. In some examples, message <b>607</b><i>b </i>may comprise index information <b>703</b>. In certain examples, index information <b>703</b> may comprise information identifying a user. For example, index information <b>703</b> may be at least one of a full name, email address, phone number, or other non-sensitive personal information of the user. In various examples, index information <b>703</b> may include one or more references to earlier blocks in the private blockchain. For example, index information <b>703</b> may include one or more references to one or more earlier blocks associated with the same user. A reference may include, as a non-limiting example, a hash of a preceding block in the blockchain associated with the same user. In some examples, index information <b>703</b> may be obfuscated or encrypted according to methods known to one of skill in the art. For example, index information <b>703</b> may be encrypted with a cryptographic key. As an additional example, index information <b>703</b> may comprise a hash of at least one of a full name, email address, phone number, or other non-sensitive personal information of the user.</p><p id="p-0081" num="0080">Message <b>607</b><i>b </i>may comprise additional information <b>705</b>, consistent with disclosed examples. The amount of additional information is limited by the amount of data storage, or memory, available in the blockchain. If a block of the blockchain has more data storage or memory available, the amount of additional information that can be included in the message <b>607</b><i>b </i>includes greater amounts of information. Examples of additional information <b>705</b> include information related to a smart contract including conditions and terms, programming code version information for each section, timestamps, or the like. In various examples, the additional information <b>705</b> may be obfuscated or encrypted according to methods known to one of skill in the art. For example, the additional information <b>705</b> may be encrypted with a cryptographic key.</p><p id="p-0082" num="0081">Message <b>607</b><i>b </i>may comprise authentication record <b>708</b>, consistent with disclosed examples. In some examples, authentication record <b>708</b> may comprise information enabling subsequent auditing of transactions. For example, authentication record <b>708</b> may identify at least one of computing devices, such as <b>101</b>A-C, a commercial institution associated with computing devices, such as <b>101</b>A-C, a purpose of the authentication request, a result of the authentication request, and information related to the authentication request. In some examples, a purpose of the authentication request may include the creation of a relationship (e.g., a financial relationship, such as a bank account, brokerage account, credit card account, and/or loan account) with a commercial institution associated with computing device, such as <b>101</b>A-C, or the performance of a service by computing device, such as <b>101</b>A-C (e.g., a financial server, such as performing transactions in a financial account associated with the user, cashing a check provided by the user, selling a cashier's check to the user, and/or debiting a user's account once or periodically to make payments on a loan). As would be appreciated by one of skill in the art, the above authentication purpose examples are not intended to be limiting. In some examples, a result of the authentication request may include whether the purpose of the authentication request was achieved. For example, when the purpose of the authentication request was the creation of a relationship, the result of the authentication request may indicate whether the relationship was created. As another example, when the purpose of the authentication request was the performance of a service, the result of the authentication request may indicate whether the service was performed. As would be appreciated by one of skill in the art, the above authentication result examples are not intended to be limiting. In some examples, information related to the authentication request may include additional contact information, demographic information, financial information, or similar personal information provided in connection with the authentication request. In some examples, such information may merely indicate that such information was provided, and/or provide a location where such information may be obtained. In some examples, authentication record <b>708</b> may be obfuscated or encrypted according to methods known to one of skill in the art. For example, authentication record <b>708</b> may be encrypted with a cryptographic key.</p><p id="p-0083" num="0082">Cryptographic keys may be used to encrypt elements of transactions in blocks, consistent with disclosed examples. In some examples, such cryptographic keys may be associated with users of computing device, such as <b>101</b>A-C and <b>102</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In various examples, at least some of the cryptographic keys may be associated with authorized systems. Corresponding cryptographic keys may be available to decrypt the encrypted message elements, consistent with disclosed examples. For example, when an element of a message in a block is encrypted with a symmetric key, the same symmetric key may be available for decrypting the encrypted element. As another example, when an element of a message in a block is encrypted with a private key, a corresponding public key may be available for decrypting the encrypted element. In some examples, the corresponding cryptographic keys may be available to users of user contract participating computing devices <b>101</b>A-C and computing device <b>102</b>.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example of a computing architecture <b>800</b> suitable for implementing various embodiments as previously described. In one example, the computing architecture <b>800</b> may include or be implemented as part of networking environment <b>100</b>.</p><p id="p-0085" num="0084">In an example of an apparatus, the apparatus may include a processor, one or more wireless communication transceivers, a display device and a memory. The processor may be operable to execute programming code. The one or more wireless communication transceivers may be coupled to the processor and be operable to establish a wireless communication link. For example, the one or more wireless communication transceiver may be at least one of: a Bluetooth transceiver, a near-field radio frequency transceiver, a wi-fi transceiver, an optical transceiver, or a cellular transceiver. The processor may be operable to access the smart contract library via one of the one or more wireless communication transceivers.</p><p id="p-0086" num="0085">The display device may be coupled to the processor and be operable to display content in response to commands from the processor. The memory may be coupled to the processor and operable to store information and the programming code executable by the processor. In addition, the memory may include a secure element operable to store a first user address in a private blockchain, and a private cryptographic key or a public cryptographic key. For example, transactions on a Bitcoin blockchain generally have an input (one or more sources of digital currency spent) and an output (one or more &#x201c;sinks&#x201d; or places where the digital currency goes). These all stem from some &#x201c;genesis&#x201d; that populates an initial store of value for a coin. In the example of distributed ledgers not involving a currency, there may be a genesis block, but transactions are linked to each other using an ordering service rather than inputs and outputs of currency. Thus, a system such as that shown in the examples may have a coordinated view of time (and relativity, from the physics notion) to ensure a transaction obtains the necessary endorsements to complete successfully.</p><p id="p-0087" num="0086">As used in this application, the terms &#x201c;system&#x201d; and &#x201c;component&#x201d; are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution, examples of which are provided by the example computing architecture <b>800</b>. For example, a component can be, but is not limited to being, a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical and/or magnetic storage medium), an object, an executable, a thread of execution, a program, and/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and/or thread of execution, and a component can be localized on one computer and/or distributed between two or more computers. Further, components may be communicatively coupled to each other by various types of communications media to coordinate operations. The coordination may involve the uni-directional or bi-directional exchange of information. For instance, the components may communicate information in the form of signals communicated over the communications media. The information can be implemented as signals allocated to various signal lines. In such allocations, each message is a signal. Further embodiments, however, may alternatively employ data transactions. Such data transactions may be sent across various connections. Examples of connections include parallel interfaces, serial interfaces, and bus interfaces.</p><p id="p-0088" num="0087">The computing architecture <b>800</b> includes various common computing elements, such as one or more processors, multi-core processors, co-processors, memory units, chipsets, controllers, peripherals, interfaces, oscillators, timing devices, video cards, audio cards, multimedia input/output (I/O) components, power supplies, and so forth. The embodiments, however, are not limited to implementation by the computing architecture <b>800</b>.</p><p id="p-0089" num="0088">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the computing architecture <b>800</b> includes a processing unit <b>804</b>, a system memory <b>806</b> and a system bus <b>808</b>. The processing unit <b>804</b> can be any of various commercially available processors. The identity and smart contract system <b>140</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> may incorporate one or more of the components of the computer architecture <b>800</b>, such as the processing unit <b>804</b>, the system memory <b>806</b> and so on. Other components, such as the keyboard <b>838</b> and the mouse <b>840</b>, may be omitted in some examples identity and smart contract system <b>140</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The one or more of the components of the computer architecture <b>800</b> may be incorporated in the computing devices <b>101</b>A-C and <b>102</b>.</p><p id="p-0090" num="0089">The system bus <b>808</b> provides an interface for system components including, but not limited to, the system memory <b>806</b> to the processing unit <b>804</b>. The system bus <b>808</b> can be any of several types of bus structure that may further interconnect to a memory bus (with or without a memory controller), a peripheral bus, and a local bus using any of a variety of commercially available bus architectures. Interface adapters may connect to the system bus <b>808</b> via slot architecture. Example slot architectures may include without limitation Accelerated Graphics Port (AGP), Card Bus, (Extended) Industry Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus, Peripheral Component Interconnect (Extended) (PCI(X)), PCI Express, Personal Computer Memory Card International Association (PCMCIA), and the like.</p><p id="p-0091" num="0090">The computing architecture <b>800</b> may include or implement various articles of manufacture. An article of manufacture may include a non-transient computer-readable storage medium to store logic. Examples of a computer-readable storage medium may include any tangible media capable of storing electronic data, including volatile memory or non-volatile memory, removable or non-removable memory, erasable or non-erasable memory, writeable or re-writeable memory, and so forth. Examples of logic may include executable computer program instructions implemented using any suitable type of code, such as source code, compiled code, interpreted code, executable code, static code, dynamic code, object-oriented code, visual code, and the like. Embodiments may also be at least partly implemented as instructions contained in or on a non-transitory computer-readable medium, which may be read and executed by one or more processors to enable performance of the operations described herein.</p><p id="p-0092" num="0091">The system memory <b>806</b> may include various types of computer-readable storage media in the form of one or more higher speed memory units, such as read-only memory (ROM), random-access memory (RAM), dynamic RAM (DRAM), Double-Data-Rate DRAM (DDRAM), synchronous DRAM (SDRAM), static RAM (SRAM), programmable ROM (PROM), erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), flash memory, polymer memory such as ferroelectric polymer memory, ovonic memory, phase change or ferroelectric memory, silicon-oxide-nitride-oxide-silicon (SONOS) memory, magnetic or optical cards, an array of devices such as Redundant Array of Independent Disks (RAID) drives, solid state memory devices (e.g., USB memory, solid state drives (SSD) and any other type of storage media suitable for storing information. In the illustrated embodiment shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the system memory <b>806</b> can include non-volatile memory <b>810</b> and/or volatile memory <b>812</b>. A basic input/output system (BIOS) can be stored in the non-volatile memory <b>810</b>.</p><p id="p-0093" num="0092">The computing device <b>802</b> may include various types of computer-readable storage media in the form of one or more lower speed memory units, including an internal hard disk drive (HDD) <b>814</b> or external HDD <b>814</b>A, and an optical disk drive <b>820</b> to read from or write to a removable optical disk <b>822</b> (e.g., a CD-ROM or DVD). The internal HDD <b>814</b> and optical disk drive <b>820</b> can be connected to the system bus <b>808</b> by an HDD interface <b>824</b> and an optical drive interface <b>828</b>, respectively. The HDD interface <b>824</b> for external drive implementations can include at least one or both of Universal Serial Bus (USB) and IEEE 1394 interface technologies.</p><p id="p-0094" num="0093">The drives and associated computer-readable media provide volatile and/or nonvolatile storage of data, data structures, computer-executable instructions, and so forth. For example, several program modules can be stored in the drives and memories <b>810</b>, <b>812</b>, including an operating system <b>830</b>, one or more application programs <b>832</b>, other program modules <b>834</b>, and program data <b>836</b>. In one embodiment, the one or more application programs <b>832</b>, other program modules <b>834</b>, and program data <b>836</b> can include, for example, the various applications and/or components of the computing architecture <b>800</b>.</p><p id="p-0095" num="0094">A user can enter commands and information into the computing device <b>802</b> through one or more wired/wireless input devices, for example, a keyboard <b>838</b> and a pointing device, such as a mouse <b>840</b>. Other input devices may include microphones, infra-red (IR) remote controls, radio-frequency (RF) remote controls, game pads, stylus pens, card readers, dongles, fingerprint readers, gloves, graphics tablets, joysticks, keyboards, retina readers, touch screens (e.g., capacitive, resistive, etc.), trackballs, track pads, sensors, styluses, and the like. These and other input devices are often connected to the processing unit <b>804</b> through an input device interface <b>842</b> that is coupled to the system bus <b>808</b> but can be connected by other interfaces such as a parallel port, IEEE 1394 serial port, a game port, a USB port, an IR interface, and so forth.</p><p id="p-0096" num="0095">A display device <b>844</b> or another type of display device is also connected to the system bus <b>808</b> via an interface, such as a video adaptor <b>846</b>. The display device <b>844</b> may be internal or external to the computing device <b>802</b>. In addition to display device <b>844</b>, a computer typically includes other peripheral output devices, such as speakers, printers, and so forth. For example, the selected template may be presented on the display device <b>844</b>. The processing unit <b>804</b> may enable a graphical user interface on the display device <b>844</b>. The graphical user interface may be operable to enable revision of the terms and conditions in the one or more sections of the selected template and storing of the selected template with revisions to the terms and conditions in the memory.</p><p id="p-0097" num="0096">The computing device <b>802</b> may operate in a networked environment using logical connections via wire and/or wireless communications to one or more remote computers, such as a remote computer <b>888</b>. The remote computer <b>888</b> can be a workstation, a server computer, a router, a personal computer, portable computer, microprocessor-based entertainment appliance, a peer device or other common network node, and typically includes many or all the elements described relative to the computing device <b>802</b>, although, for purposes of brevity, only a remote memory/storage device <b>850</b> is illustrated. The logical connections depicted include wire/wireless connectivity to a local area network (LAN) <b>852</b> and/or larger networks, for example, a wide area network (WAN) <b>854</b>. Such LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network, for example, the Internet.</p><p id="p-0098" num="0097">For example, identity and smart contract system implemented according to the example of <figref idref="DRAWINGS">FIG. <b>8</b></figref> may authenticate the identity of one or more users related to transactions stored at an address in the blockchain. As explained through the description of the examples of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b></figref>, the combination of using a smart contract application provides a level of security and service from the enterprise that is presently unavailable. An instance of the smart contract configuration application may be stored in memory <b>812</b> or any one of the internal HDD <b>814</b> or external HDD <b>814</b>A, usable to implement the hardware and process examples described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>6</b></figref> above.</p><p id="p-0099" num="0098">When used in a LAN networking environment, the computing device <b>802</b> is connected to the LAN <b>852</b> through a communication interface <b>856</b> that may be either wired and/or wireless. The communication interface <b>856</b> can facilitate wired<b>250</b> and/or wireless communications to the LAN <b>852</b>, which may also include a wireless access point disposed thereon for communicating with the wireless functionality of the communication interface <b>856</b>.</p><p id="p-0100" num="0099">When used in a WAN networking environment, the computing device <b>802</b> can include a modem <b>858</b>, or is connected to a communications server on the WAN <b>854</b> or has other means for establishing communications over the WAN <b>854</b>, such as by way of the Internet. The modem <b>858</b>, which can be internal or external and a wire and/or wireless device, connects to the system bus <b>808</b> via the input device interface <b>842</b>. In a networked environment, program modules depicted relative to the computing device <b>802</b>, or portions thereof, can be stored in the remote memory/storage device <b>850</b>. It will be appreciated that the network connections shown are examples and other means of establishing a communications link between the computing devices and computers can be used.</p><p id="p-0101" num="0100">The computing device <b>802</b> is operable to communicate with wire and wireless devices or entities using the IEEE 802 family of standards, such as wireless devices operatively disposed in wireless communication (e.g., IEEE 802.11 over-the-air modulation techniques). This includes at least Wi-Fi (or Wireless Fidelity), WiMax, and Bluetooth&#x2122; wireless technologies, among others. Thus, the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi-Fi networks use radio technologies called IEEE 802.11x (a, b, g, n, etc.) to provide secure, reliable, fast wireless connectivity. A Wi-Fi network can be used to connect computers to each other, to the Internet, and to wire networks (which use IEEE 802.3-related media and functions).</p><p id="p-0102" num="0101">The various elements of the devices, apparatuses or systems as previously described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>6</b>-<b>8</b></figref> may include various hardware elements, software elements, or a combination of both. Examples of hardware elements may include structural members, logic devices, components, processors, microprocessors, circuits, processors, circuit elements (e.g., transistors, resistors, capacitors, inductors, and so forth), integrated circuits, application specific integrated circuits (ASIC), programmable logic devices (PLD), digital signal processors (DSP), field programmable gate array (FPGA), memory units, logic gates, registers, semiconductor device, chips, microchips, chip sets, and so forth. Examples of software elements may include software components, programs, applications, computer programs, application programs, system programs, software development programs, machine programs, operating system software, middleware, firmware, software modules, routines, subroutines, functions, methods, procedures, software interfaces, application program interfaces (API), instruction sets, computing code, computer code, code segments, computer code segments, words, values, symbols, or any combination thereof.</p><p id="p-0103" num="0102">While the foregoing examples refer to smart contracts and the execution of smart contracts, the above described examples may be useful in other areas, such as manufacturing, supply chain applications, auctions and online marketplaces, advertising and media sales, healthcare, and education, inventory management, Internet-of-Things/Smart device/Autonomous devices, banking and financial services, eCommerce, hospitality, law enforcement, government operations, insurance or the like.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus comprising:<claim-text>a processor operable to execute programming code; and</claim-text><claim-text>a memory coupled to the processor and operable to store information and the programming code executable by the processor, the memory comprising a secure element operable to store a first user address in a private blockchain, and a private cryptographic key or a public cryptographic key;</claim-text><claim-text>wherein the processor is operable upon execution of the programming code stored in the memory to perform functions, including functions to:</claim-text><claim-text>access a smart contract library comprising a plurality of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract, wherein:<claim-text>each template of the plurality of templates includes a plurality of sections having different contractual terms and conditions, and</claim-text><claim-text>each respective section of the plurality of sections includes programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section;</claim-text></claim-text><claim-text>receive a selection of a template of a smart contract from the plurality of templates for implementation as a smart contract;</claim-text><claim-text>receive an indication of execution of a portion of the smart contract, wherein the executed portion indicates acceptance of the contractual terms and conditions in the plurality of sections of the selected template;</claim-text><claim-text>generate a smart contract address in the private blockchain using the first user address and a nonce value;</claim-text><claim-text>generate a smart contract hash value using a value related to the programming code of the smart contract as an input into a hash function; and</claim-text><claim-text>store the smart contract hash value as a transaction in the private blockchain, wherein the transaction is associated with the smart contract address and the first user address in the private blockchain.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a display device coupled to the processor and operable to display content in response to commands from the processor, wherein the processor of the apparatus when executing the programming code stored in the memory is further operable to:</claim-text><claim-text>revise one or more sections of a plurality of sections of the selected template by inputting specific contract terms in a fillable field of the one or more sections of the selected template presented on the display device; and</claim-text><claim-text>assemble all sections of the selected template including the revised one or more sections of the selected template into a finalized smart contract.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a display device coupled to the processor and operable to display content in response to commands from the processor, wherein the processor of the apparatus when executing the programming code stored in the memory is further operable to:</claim-text><claim-text>present the selected template on the display device; and</claim-text><claim-text>enable a graphical user interface on the display device, wherein the graphical user interface is operable to revise the terms and conditions in the one or more sections of the plurality of sections of the selected template and store the selected template with revisions to the terms and conditions in the memory.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>a wireless communication transceiver coupled to the processor and operable to establish a wireless communication link, wherein the wireless communication transceiver is at least one of: a Bluetooth transceiver, a near-field radio frequency transceiver, a wi-fi transceiver, an optical transceiver, or a cellular transceiver.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00004">claim 4</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>access the smart contract library via one of the one or more wireless communication transceivers.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>generate the smart contract having sections with the specific contract terms and conditions and the programming code operable to evaluate compliance with the specific contract terms.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>obtain a private cryptographic key assigned to a first user of the contract-creating computing device, wherein the private cryptographic key is associated with a public cryptographic key.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>generate a first user address associated with the contract-creating computing device in a private blockchain, wherein the first user address is based on the private cryptographic key and is associated with the first user in the private blockchain.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>receive from a second party contract participating device a revision to a section of the smart contract, wherein the section with the revision is a revised section of the smart contract.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>modify programming code of the revised section of the smart contract based on the received revision to the smart contract, wherein the modified programming code implements a compliance scheme to ensure different terms or conditions related to the revision of the revised section of the smart contract are fulfilled;</claim-text><claim-text>track revisions to the smart contract including the modified programming code;</claim-text><claim-text>upon no longer tracking a further revision due to completion of the revisions to the smart contract, generate a programming code hash of the modified programming code of the revised section of the smart contract; and</claim-text><claim-text>store, in addition to the subsequent smart contract hash value, the programming code hash of the modified programming code of the revised section of the smart contract as part of a revision-related transaction to the private blockchain, wherein the revision-related transaction is associated with the smart contract address for the smart contract, a second party contract participating device address, and the first user address in the private blockchain</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method comprising:<claim-text>accessing a smart contract library comprising a plurality of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract, wherein:<claim-text>each template of the plurality of templates includes a plurality of sections having different contractual terms and conditions, and</claim-text><claim-text>each respective section of the plurality of sections includes programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section;</claim-text></claim-text><claim-text>receiving a selection of a template of a smart contract from the plurality of templates for implementation as a smart contract;</claim-text><claim-text>receiving an indication of execution of a portion of the smart contract, wherein the executed portion indicates acceptance of the contractual terms and conditions in the plurality of sections of the selected template;</claim-text><claim-text>generating a smart contract address in the private blockchain using the first user address and a nonce value;</claim-text><claim-text>generating a smart contract hash value using a value related to the programming code of the smart contract as an input into a hash function; and</claim-text><claim-text>storing the smart contract hash value as a transaction in the private blockchain, wherein the transaction is associated with the smart contract address and the first user address in the private blockchain.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>revising one or more sections of a plurality of sections of the selected template by inputting specific contract terms in a fillable field of the one or more sections of the selected template presented on the display device; and</claim-text><claim-text>assembling all sections of the selected template including the revised one or more sections of the selected template into a finalized smart contract.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>presenting the selected template on a display device; and</claim-text><claim-text>enabling a graphical user interface on the display device, wherein the graphical user interface is operable to revise the terms and conditions in the one or more sections of the plurality of sections of the selected template and store the selected template with revisions to the terms and conditions in memory.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>establishing a wireless communication link via at least one of: a Bluetooth transceiver, a near-field radio frequency transceiver, a wi-fi transceiver, an optical transceiver, a cellular transceiver, or a combination thereof.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, the processor of the apparatus when executing the programming code stored in the memory is further operable to:<claim-text>accessing the smart contract library via one of the one or more wireless communication transceivers.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A non-transitory computer readable medium embodied with programming code that when executed by a processor causes the processor to:<claim-text>access a smart contract library comprising a plurality of templates of different legal contracts implementable as a smart contract between respective parties in the smart contract, wherein:<claim-text>each template of the plurality of templates includes a plurality of sections having different contractual terms and conditions, and</claim-text><claim-text>each respective section of the plurality of sections includes programming code operable to enforce conformance with specific section-related contractual terms and conditions of the respective section;</claim-text></claim-text><claim-text>receive a selection of a template of a smart contract from the plurality of templates for implementation as a smart contract;</claim-text><claim-text>receive an indication of execution of a portion of the smart contract, wherein the executed portion indicates acceptance of the contractual terms and conditions in the plurality of sections of the selected template;</claim-text><claim-text>generate a smart contract address in the private blockchain using the first user address and a nonce value;</claim-text><claim-text>generate a smart contract hash value using a value related to the programming code of the smart contract as an input into a hash function; and</claim-text><claim-text>store the smart contract hash value as a transaction in the private blockchain, wherein the transaction is associated with the smart contract address and the first user address in the private blockchain.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with the programming code that when executed causes the processor to:<claim-text>revising one or more sections of a plurality of sections of the selected template by inputting specific contract terms in a fillable field of the one or more sections of the selected template presented on the display device; and</claim-text><claim-text>assembling all sections of the selected template including the revised one or more sections of the selected template into a finalized smart contract.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with the programming code that when executed causes the processor to:<claim-text>presenting the selected template on a display device; and</claim-text><claim-text>enabling a graphical user interface on the display device, wherein the graphical user interface is operable to revise the terms and conditions in the one or more sections of the plurality of sections of the selected template and store the selected template with revisions to the terms and conditions in memory.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with the programming code that when executed causes the processor to:<claim-text>establishing a wireless communication link via at least one of: a Bluetooth transceiver, a near-field radio frequency transceiver, a wi-fi transceiver, an optical transceiver, a cellular transceiver, or a combination thereof.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with the programming code that when executed causes the processor to:<claim-text>accessing the smart contract library via one of the one or more wireless communication transceivers.</claim-text></claim-text></claim></claims></us-patent-application>