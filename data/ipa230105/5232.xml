<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005233A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005233</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17878635</doc-number><date>20220801</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>19</main-group><subgroup>20</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04883</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>15</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>T</subclass><main-group>7</main-group><subgroup>507</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>V</subclass><main-group>40</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>19</main-group><subgroup>20</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04842</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>04883</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>15</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20170101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>7</main-group><subgroup>507</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>V</subclass><main-group>40</main-group><subgroup>171</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>2219</main-group><subgroup>2012</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>T</subclass><main-group>2219</main-group><subgroup>2024</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">BEAUTIFICATION TECHNIQUES FOR 3D DATA IN A MESSAGING SYSTEM</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17006471</doc-number><date>20200828</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11410401</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17878635</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62893046</doc-number><date>20190828</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Snap Inc.</orgname><address><city>Santa Monica</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Goodrich</last-name><first-name>Kyle</first-name><address><city>Venice</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Hare</last-name><first-name>Samuel Edward</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Lazarov</last-name><first-name>Maxim Maximov</first-name><address><city>Culver City</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Mathew</last-name><first-name>Tony</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>McPhee</last-name><first-name>Andrew James</first-name><address><city>Culver City</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Moreno</last-name><first-name>Daniel</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Sagar</last-name><first-name>Dhritiman</first-name><address><city>Marina del Rey</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>Shang</last-name><first-name>Wentao</first-name><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The subject technology receives a selection of a selectable graphical item from a plurality of selectable graphical items, the selectable graphical item comprising an augmented reality content generator for applying a 3D effect, the 3D effect including at least one beautification operation. The subject technology captures image data and depth data using a camera. The subject technology applies, to the image data and the depth data, the 3D effect including the at least one beautification operation based at least in part on the augmented reality content generator, the beautification operation being performed as part of applying the 3D effect. The subject technology generates a 3D message based at least in part on the applied 3D effect including the at least one beautification operation. The subject technology renders a view of the 3D message based at least in part on the applied 3D effect including the at least one beautification operation.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="231.14mm" wi="158.75mm" file="US20230005233A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="245.96mm" wi="162.90mm" file="US20230005233A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="242.99mm" wi="163.49mm" file="US20230005233A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="218.69mm" wi="153.50mm" file="US20230005233A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="228.68mm" wi="158.50mm" file="US20230005233A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="237.32mm" wi="157.82mm" file="US20230005233A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="225.98mm" wi="158.50mm" file="US20230005233A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="241.81mm" wi="145.29mm" file="US20230005233A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="241.05mm" wi="153.50mm" file="US20230005233A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="241.30mm" wi="153.50mm" file="US20230005233A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="241.05mm" wi="154.77mm" file="US20230005233A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="241.05mm" wi="154.77mm" file="US20230005233A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="246.72mm" wi="170.77mm" orientation="landscape" file="US20230005233A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="237.91mm" wi="167.72mm" orientation="landscape" file="US20230005233A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="237.83mm" wi="166.88mm" orientation="landscape" file="US20230005233A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="237.83mm" wi="169.33mm" orientation="landscape" file="US20230005233A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="223.86mm" wi="168.74mm" orientation="landscape" file="US20230005233A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="223.86mm" wi="168.91mm" orientation="landscape" file="US20230005233A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="223.94mm" wi="167.64mm" orientation="landscape" file="US20230005233A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="240.28mm" wi="166.88mm" orientation="landscape" file="US20230005233A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="240.62mm" wi="166.62mm" orientation="landscape" file="US20230005233A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="240.62mm" wi="167.72mm" orientation="landscape" file="US20230005233A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="238.68mm" wi="157.73mm" file="US20230005233A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="244.94mm" wi="167.89mm" file="US20230005233A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/006,471, filed on Aug. 28, 2020, which claims priority to U.S. Provisional Patent Application Ser. No. 62/893,046 filed Aug. 28, 2019, entitled &#x201c;BEAUTIFICATION TECHNIQUES FOR 3D DATA IN A MESSAGING SYSTEM,&#x201d; and the contents of which are incorporated herein by reference in their entireties for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">With the increased use of digital images, affordability of portable computing devices, availability of increased capacity of digital storage media, and increased bandwidth and accessibility of network connections, digital images have become a part of the daily life for an increasing number of people.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading><p id="p-0004" num="0003">To easily identify the discussion of any particular element or act, the most significant digit or digits in a reference number refer to the figure number in which that element is first introduced.</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagrammatic representation of a networked environment in which the present disclosure may be deployed, in accordance with some example embodiments.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagrammatic representation of a messaging client application, in accordance with some example embodiments.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagrammatic representation of a data structure as maintained in a database, in accordance with some example embodiments.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagrammatic representation of a message, in accordance with some example embodiments.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart for an access-limiting process, in accordance with some example embodiments.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic diagram illustrating a structure of the message annotations, as described in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, including additional information corresponding to a given 3D message, according to some embodiments.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating various modules of an annotation system, according to some example embodiments.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart illustrating a method to generate a 3D message, according to some example embodiments.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart illustrating a method of performing conversion passes for processing image and depth data which may be performed in conjunction with the method for generating a 3D message, according to some example embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a flowchart illustrating a method of performing beautification of image and depth data which may be performed in conjunction with the method for generating a 3D message, according to some example embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flowchart illustrating a method of updating a view of a 3D message in response to movement data which may be performed in conjunction with the method for generating a 3D message, according to some example embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates example user interfaces depicting a carousel for selecting and applying an augmented reality content generator to media content (e.g., an image or video), and presenting the applied augmented reality content generator in the messaging client application or the messaging system, according to some embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is an example illustrating capturing image information and generating a 3D message in a display of a client device, according to some example embodiments.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is an example illustrating a raw depth map and a packed depth map, according to some example embodiments.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is an example illustrating a depth inpainting mask and depth inpainting, according to some example embodiments.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is an example of 3D effects illustrating particles, a reflection on a graphical object (e.g., glasses), and a 3D attachment that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor), and an example of 3D effects illustrating post effects and a dynamic 3D attachment that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is an example of a 3D effect illustrating dynamic artificial lighting that is rendered in response to movement data, and an example of 3D effects illustrating reflection/refraction on the glasses, a 3D attachment, and an animated sprite background that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is an example of example of 3D effects illustrating a controlled particle system (e.g., animated projectile), and 2D and 3D attachments that are rendered in response to movement data, and an example of 3D effects illustrating joint animation on 3D attachments (e.g., bunny ears) that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is an example of 3D effects illustrating sprites, reflection on glasses, 2D and 3D attachments that are rendered in response to movement data, and an example of 3D effects illustrating reflection/refraction on the glasses, particles, and an animated background that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is an example of 3D effects illustrating an attachment and an animated foreground occluding the user's face that are rendered in response to movement data, and an example of 3D effects illustrating dynamic artificial lighting, particles, and reflection/refraction on the glasses that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is an example of 3D effects illustrating retouch, post effects, 3D attachment, and particles that are rendered in response to movement data, and an example of 3D effects illustrating a 3D attachment, sprites, and particles that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is block diagram showing a software architecture within which the present disclosure may be implemented, in accordance with some example embodiments.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a diagrammatic representation of a machine, in the form of a computer system within which a set of instructions may be executed for causing the machine to perform any one or more of the methodologies discussed, in accordance with some example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0028" num="0027">Users with a range of interests from various locations can capture digital images of various subjects and make captured images available to others via networks, such as the Internet. To enhance users' experiences with digital images and provide various features, enabling computing devices to perform image processing operations on various objects and/or features captured in a wide range of changing conditions (e.g., changes in image scales, noises, lighting, movement, or geometric distortion) can be challenging and computationally intensive.</p><p id="p-0029" num="0028">As discussed herein, the subject infrastructure supports the creation and sharing of interactive 3D media, referred to herein as 3D messages, throughout various components of a messaging system. The infrastructure as described herein enables other forms of 3D media to be provided across the subject system, which allows for depth-based media to be shared across the messaging system and alongside photo and video messages. In example embodiments described herein, messages can enter the system from a live camera or via from storage (e.g., where 3D messages and/or other messages are stored in memory or a database). The subject system supports motion sensor input and manages the sending and storage of depth data, and loading of external effects and asset data.</p><p id="p-0030" num="0029">As described herein, a three-dimensional (3D) message refers to an interactive 3D image including at least image and depth data. In an example embodiment, a 3D message is rendered using the subject system to visualize the spatial detail/geometry of what the camera sees, in addition to a traditional image texture. When a viewer interacts with this 3D message by moving the client device, the movement triggers corresponding changes in the perspective the image and geometry are rendered at to the viewer.</p><p id="p-0031" num="0030">As referred to herein, the phrase &#x201c;augmented reality experience,&#x201d; &#x201c;augmented reality content item,&#x201d; &#x201c;augmented reality content generator&#x201d; includes or refers to various image processing operations corresponding to an image modification, filter, LENSES, media overlay, transformation, and the like, as described further herein.</p><p id="p-0032" num="0031">As mentioned herein, a 3D augmented reality content generator refers to a real-time special effect and/or sound that may be added to a message and modifies image and/or depth data with a AR effects and/other 3D content such as 3D animated graphical elements, and the like.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example messaging system <b>100</b> for exchanging data (e.g., messages and associated content) over a network. The messaging system <b>100</b> includes multiple instances of a client device <b>102</b>, each of which hosts a number of applications including a messaging client application <b>104</b>. Each messaging client application <b>104</b> is communicatively coupled to other instances of the messaging client application <b>104</b> and a messaging server system <b>108</b> via a network <b>106</b> (e.g., the Internet).</p><p id="p-0034" num="0033">A messaging client application <b>104</b> is able to communicate and exchange data with another messaging client application <b>104</b> and with the messaging server system <b>108</b> via the network <b>106</b>. The data exchanged between messaging client application <b>104</b>, and between a messaging client application <b>104</b> and the messaging server system <b>108</b>, includes functions (e.g., commands to invoke functions) as well as payload data (e.g., text, audio, video or other multimedia data).</p><p id="p-0035" num="0034">The messaging server system <b>108</b> provides server-side functionality via the network <b>106</b> to a particular messaging client application <b>104</b>. While certain functions of the messaging system <b>100</b> are described herein as being performed by either a messaging client application <b>104</b> or by the messaging server system <b>108</b>, the location of certain functionality either within the messaging client application <b>104</b> or the messaging server system <b>108</b> is a design choice. For example, it may be technically preferable to initially deploy certain technology and functionality within the messaging server system <b>108</b>, but to later migrate this technology and functionality to the messaging client application <b>104</b> where a client device <b>102</b> has a sufficient processing capacity.</p><p id="p-0036" num="0035">The messaging server system <b>108</b> supports various services and operations that are provided to the messaging client application <b>104</b>. Such operations include transmitting data to, receiving data from, and processing data generated by the messaging client application <b>104</b>. This data may include, message content, client device information, geolocation information, media annotation and overlays, message content persistence conditions, social network information, and live event information, as examples. Data exchanges within the messaging system <b>100</b> are invoked and controlled through functions available via user interfaces (UIs) of the messaging client application <b>104</b>.</p><p id="p-0037" num="0036">Turning now specifically to the messaging server system <b>108</b>, an Application Program Interface (API) server <b>110</b> is coupled to, and provides a programmatic interface to, an application server <b>112</b>. The application server <b>112</b> is communicatively coupled to a database server <b>118</b>, which facilitates access to a database <b>120</b> in which is stored data associated with messages processed by the application server <b>112</b>.</p><p id="p-0038" num="0037">The Application Program Interface (API) server <b>110</b> receives and transmits message data (e.g., commands and message payloads) between the client device <b>102</b> and the application server <b>112</b>. Specifically, the Application Program Interface (API) server <b>110</b> provides a set of interfaces (e.g., routines and protocols) that can be called or queried by the messaging client application <b>104</b> in order to invoke functionality of the application server <b>112</b>. The Application Program Interface (API) server <b>110</b> exposes various functions supported by the application server <b>112</b>, including account registration, login functionality, the sending of messages, via the application server <b>112</b>, from a particular messaging client application <b>104</b> to another messaging client application <b>104</b>, the sending of media files (e.g., images or video) from a messaging client application <b>104</b> to the messaging server application <b>114</b>, and for possible access by another messaging client application <b>104</b>, the setting of a collection of media data (e.g., story), the retrieval of a list of friends of a user of a client device <b>102</b>, the retrieval of such collections, the retrieval of messages and content, the adding and deletion of friends to a social graph, the location of friends within a social graph, and opening an application event (e.g., relating to the messaging client application <b>104</b>).</p><p id="p-0039" num="0038">The application server <b>112</b> hosts a number of applications and subsystems, including a messaging server application <b>114</b>, an image processing system <b>116</b> and a social network system <b>122</b>. The messaging server application <b>114</b> implements a number of message processing technologies and functions, particularly related to the aggregation and other processing of content (e.g., textual and multimedia content) included in messages received from multiple instances of the messaging client application <b>104</b>. As will be described in further detail, the text and media content from multiple sources may be aggregated into collections of content (e.g., called stories or galleries). These collections are then made available, by the messaging server application <b>114</b>, to the messaging client application <b>104</b>. Other processor and memory intensive processing of data may also be performed server-side by the messaging server application <b>114</b>, in view of the hardware requirements for such processing.</p><p id="p-0040" num="0039">The application server <b>112</b> also includes an image processing system <b>116</b> that is dedicated to performing various image processing operations, typically with respect to images or video received within the payload of a message at the messaging server application <b>114</b>.</p><p id="p-0041" num="0040">The social network system <b>122</b> supports various social networking functions services, and makes these functions and services available to the messaging server application <b>114</b>. To this end, the social network system <b>122</b> maintains and accesses an entity graph <b>304</b> (as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) within the database <b>120</b>. Examples of functions and services supported by the social network system <b>122</b> include the identification of other users of the messaging system <b>100</b> with which a particular user has relationships or is &#x201c;following&#x201d;, and also the identification of other entities and interests of a particular user.</p><p id="p-0042" num="0041">The application server <b>112</b> is communicatively coupled to a database server <b>118</b>, which facilitates access to a database <b>120</b> in which is stored data associated with messages processed by the messaging server application <b>114</b>.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is block diagram illustrating further details regarding the messaging system <b>100</b>, according to example embodiments. Specifically, the messaging system <b>100</b> is shown to comprise the messaging client application <b>104</b> and the application server <b>112</b>, which in turn embody a number of some subsystems, namely an ephemeral timer system <b>202</b>, a collection management system <b>204</b> and an annotation system <b>206</b>.</p><p id="p-0044" num="0043">The ephemeral timer system <b>202</b> is responsible for enforcing the temporary access to content permitted by the messaging client application <b>104</b> and the messaging server application <b>114</b>. To this end, the ephemeral timer system <b>202</b> incorporates a number of timers that, based on duration and display parameters associated with a message, or collection of messages (e.g., a story), selectively display and enable access to messages and associated content via the messaging client application <b>104</b>. Further details regarding the operation of the ephemeral timer system <b>202</b> are provided below.</p><p id="p-0045" num="0044">The collection management system <b>204</b> is responsible for managing collections of media (e.g., collections of text, image video and audio data). In some examples, a collection of content (e.g., messages, including images, video, text and audio) may be organized into an &#x201c;event gallery&#x201d; or an &#x201c;event story.&#x201d; Such a collection may be made available for a specified time period, such as the duration of an event to which the content relates. For example, content relating to a music concert may be made available as a &#x201c;story&#x201d; for the duration of that music concert. The collection management system <b>204</b> may also be responsible for publishing an icon that provides notification of the existence of a particular collection to the user interface of the messaging client application <b>104</b>.</p><p id="p-0046" num="0045">The collection management system <b>204</b> furthermore includes a curation interface <b>208</b> that allows a collection manager to manage and curate a particular collection of content. For example, the curation interface <b>208</b> enables an event organizer to curate a collection of content relating to a specific event (e.g., delete inappropriate content or redundant messages). Additionally, the collection management system <b>204</b> employs machine vision (or image recognition technology) and content rules to automatically curate a content collection. In certain embodiments, compensation may be paid to a user for inclusion of user-generated content into a collection. In such cases, the curation interface <b>208</b> operates to automatically make payments to such users for the use of their content.</p><p id="p-0047" num="0046">The annotation system <b>206</b> provides various functions that enable a user to annotate or otherwise modify or edit media content associated with a message. For example, the annotation system <b>206</b> provides functions related to the generation and publishing of media overlays for messages processed by the messaging system <b>100</b>. The annotation system <b>206</b> operatively supplies a media overlay or supplementation (e.g., an image filter) to the messaging client application <b>104</b> based on a geolocation of the client device <b>102</b>. In another example, the annotation system <b>206</b> operatively supplies a media overlay to the messaging client application <b>104</b> based on other information, such as social network information of the user of the client device <b>102</b>. A media overlay may include audio and visual content and visual effects. Examples of audio and visual content include pictures, texts, logos, animations, and sound effects. An example of a visual effect includes color overlaying. The audio and visual content or the visual effects can be applied to a media content item (e.g., a photo) at the client device <b>102</b>. For example, the media overlay may include text that can be overlaid on top of a photograph taken by the client device <b>102</b>. In another example, the media overlay includes an identification of a location overlay (e.g., Venice beach), a name of a live event, or a name of a merchant overlay (e.g., Beach Coffee House). In another example, the annotation system <b>206</b> uses the geolocation of the client device <b>102</b> to identify a media overlay that includes the name of a merchant at the geolocation of the client device <b>102</b>. The media overlay may include other indicia associated with the merchant. The media overlays may be stored in the database <b>120</b> and accessed through the database server <b>118</b>.</p><p id="p-0048" num="0047">In one example embodiment, the annotation system <b>206</b> provides a user-based publication platform that enables users to select a geolocation on a map, and upload content associated with the selected geolocation. The user may also specify circumstances under which a particular media overlay should be offered to other users. The annotation system <b>206</b> generates a media overlay that includes the uploaded content and associates the uploaded content with the selected geolocation.</p><p id="p-0049" num="0048">In another example embodiment, the annotation system <b>206</b> provides a merchant-based publication platform that enables merchants to select a particular media overlay associated with a geolocation via a bidding process. For example, the annotation system <b>206</b> associates the media overlay of a highest bidding merchant with a corresponding geolocation for a predefined amount of time.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram illustrating data structures <b>300</b> which may be stored in the database <b>120</b> of the messaging server system <b>108</b>, according to some example embodiments. While the content of the database <b>120</b> is shown to comprise a number of tables, it will be appreciated that the data could be stored in other types of data structures (e.g., as an object-oriented database).</p><p id="p-0051" num="0050">The database <b>120</b> includes message data stored within a message table <b>314</b>. The entity table <b>302</b> stores entity data, including an entity graph <b>304</b>. Entities for which records are maintained within the entity table <b>302</b> may include individuals, corporate entities, organizations, objects, places, events, etc. Regardless of type, any entity regarding which the messaging server system <b>108</b> stores data may be a recognized entity. Each entity is provided with a unique identifier, as well as an entity type identifier (not shown).</p><p id="p-0052" num="0051">The entity graph <b>304</b> furthermore stores information regarding relationships and associations between entities. Such relationships may be social, professional (e.g., work at a common corporation or organization) interested-based or activity-based, merely for example.</p><p id="p-0053" num="0052">The database <b>120</b> also stores annotation data, in the example form of filters, in an annotation table <b>312</b>. Filters for which data is stored within the annotation table <b>312</b> are associated with and applied to videos (for which data is stored in a video table <b>310</b>) and/or images (for which data is stored in an image table <b>308</b>). Filters, in one example, are overlays that are displayed as overlaid on an image or video during presentation to a recipient user. Filters may be of varies types, including user-selected filters from a gallery of filters presented to a sending user by the messaging client application <b>104</b> when the sending user is composing a message. Other types of filters include geolocation filters (also known as geo-filters) which may be presented to a sending user based on geographic location. For example, geolocation filters specific to a neighborhood or special location may be presented within a user interface by the messaging client application <b>104</b>, based on geolocation information determined by a GPS unit of the client device <b>102</b>. Another type of filer is a data filer, which may be selectively presented to a sending user by the messaging client application <b>104</b>, based on other inputs or information gathered by the client device <b>102</b> during the message creation process. Example of data filters include current temperature at a specific location, a current speed at which a sending user is traveling, battery life for a client device <b>102</b>, or the current time.</p><p id="p-0054" num="0053">Other annotation data that may be stored within the image table <b>308</b> are augmented reality content generators (e.g., corresponding to applying LENSES, augmented reality experiences, or augmented reality content items). An augmented reality content generator may be a real-time special effect and sound that may be added to an image or a video.</p><p id="p-0055" num="0054">As described above, augmented reality content generators, augmented reality content items, overlays, image transformations, AR images and similar terms refer to modifications that may be made to videos or images. This includes real-time modification which modifies an image as it is captured using a device sensor and then displayed on a screen of the device with the modifications. This also includes modifications to stored content, such as video clips in a gallery that may be modified. For example, in a device with access to multiple augmented reality content generators, a user can use a single video clip with multiple augmented reality content generators to see how the different augmented reality content generators will modify the stored clip. For example, multiple augmented reality content generators that apply different pseudorandom movement models can be applied to the same content by selecting different augmented reality content generators for the content. Similarly, real-time video capture may be used with an illustrated modification to show how video images currently being captured by sensors of a device would modify the captured data. Such data may simply be displayed on the screen and not stored in memory, or the content captured by the device sensors may be recorded and stored in memory with or without the modifications (or both). In some systems, a preview feature can show how different augmented reality content generators will look within different windows in a display at the same time. This can, for example, enable multiple windows with different pseudorandom animations to be viewed on a display at the same time.</p><p id="p-0056" num="0055">Data and various systems using augmented reality content generators or other such transform systems to modify content using this data can thus involve detection of objects (e.g., faces, hands, bodies, cats, dogs, surfaces, objects, etc.), tracking of such objects as they leave, enter, and move around the field of view in video frames, and the modification or transformation of such objects as they are tracked. In various embodiments, different methods for achieving such transformations may be used. For example, some embodiments may involve generating a three-dimensional mesh model of the object or objects, and using transformations and animated textures of the model within the video to achieve the transformation. In other embodiments, tracking of points on an object may be used to place an image or texture (which may be two dimensional or three dimensional) at the tracked position. In still further embodiments, neural network analysis of video frames may be used to place images, models, or textures in content (e.g., images or frames of video). Augmented reality content generators thus refer both to the images, models, and textures used to create transformations in content, as well as to additional modeling and analysis information needed to achieve such transformations with object detection, tracking, and placement.</p><p id="p-0057" num="0056">Real-time video processing can be performed with any kind of video data (e.g., video streams, video files, etc.) saved in a memory of a computerized system of any kind. For example, a user can load video files and save them in a memory of a device, or can generate a video stream using sensors of the device. Additionally, any objects can be processed using a computer animation model, such as a human's face and parts of a human body, animals, or non-living things such as chairs, cars, or other objects.</p><p id="p-0058" num="0057">In some embodiments, when a particular modification is selected along with content to be transformed, elements to be transformed are identified by the computing device, and then detected and tracked if they are present in the frames of the video. The elements of the object are modified according to the request for modification, thus transforming the frames of the video stream. Transformation of frames of a video stream can be performed by different methods for different kinds of transformation. For example, for transformations of frames mostly referring to changing forms of object's elements characteristic points for each of element of an object are calculated (e.g., using an Active Shape Model (ASM) or other known methods). Then, a mesh based on the characteristic points is generated for each of the at least one element of the object. This mesh used in the following stage of tracking the elements of the object in the video stream. In the process of tracking, the mentioned mesh for each element is aligned with a position of each element. Then, additional points are generated on the mesh. A first set of first points is generated for each element based on a request for modification, and a set of second points is generated for each element based on the set of first points and the request for modification. Then, the frames of the video stream can be transformed by modifying the elements of the object on the basis of the sets of first and second points and the mesh. In such method, a background of the modified object can be changed or distorted as well by tracking and modifying the background.</p><p id="p-0059" num="0058">In one or more embodiments, transformations changing some areas of an object using its elements can be performed by calculating of characteristic points for each element of an object and generating a mesh based on the calculated characteristic points. Points are generated on the mesh, and then various areas based on the points are generated. The elements of the object are then tracked by aligning the area for each element with a position for each of the at least one element, and properties of the areas can be modified based on the request for modification, thus transforming the frames of the video stream. Depending on the specific request for modification properties of the mentioned areas can be transformed in different ways. Such modifications may involve changing color of areas; removing at least some part of areas from the frames of the video stream; including one or more new objects into areas which are based on a request for modification; and modifying or distorting the elements of an area or object. In various embodiments, any combination of such modifications or other similar modifications may be used. For certain models to be animated, some characteristic points can be selected as control points to be used in determining the entire state-space of options for the model animation.</p><p id="p-0060" num="0059">In some embodiments of a computer animation model to transform image data using face detection, the face is detected on an image with use of a specific face detection algorithm (e.g., Viola-Jones). Then, an Active Shape Model (ASM) algorithm is applied to the face region of an image to detect facial feature reference points.</p><p id="p-0061" num="0060">In other embodiments, other methods and algorithms suitable for face detection can be used. For example, in some embodiments, features are located using a landmark which represents a distinguishable point present in most of the images under consideration. For facial landmarks, for example, the location of the left eye pupil may be used. In an initial landmark is not identifiable (e.g., if a person has an eyepatch), secondary landmarks may be used. Such landmark identification procedures may be used for any such objects. In some embodiments, a set of landmarks forms a shape. Shapes can be represented as vectors using the coordinates of the points in the shape. One shape is aligned to another with a similarity transform (allowing translation, scaling, and rotation) that minimizes the average Euclidean distance between shape points. The mean shape is the mean of the aligned training shapes.</p><p id="p-0062" num="0061">In some embodiments, a search for landmarks from the mean shape aligned to the position and size of the face determined by a global face detector is started. Such a search then repeats the steps of suggesting a tentative shape by adjusting the locations of shape points by template matching of the image texture around each point and then conforming the tentative shape to a global shape model until convergence occurs. In some systems, individual template matches are unreliable and the shape model pools the results of the weak template matchers to form a stronger overall classifier. The entire search is repeated at each level in an image pyramid, from coarse to fine resolution.</p><p id="p-0063" num="0062">Embodiments of a transformation system can capture an image or video stream on a client device (e.g., the client device <b>102</b>) and perform complex image manipulations locally on the client device <b>102</b> while maintaining a suitable user experience, computation time, and power consumption. The complex image manipulations may include size and shape changes, emotion transfers (e.g., changing a face from a frown to a smile), state transfers (e.g., aging a subject, reducing apparent age, changing gender), style transfers, graphical element application, and any other suitable image or video manipulation implemented by a convolutional neural network that has been configured to execute efficiently on the client device <b>102</b>.</p><p id="p-0064" num="0063">In some example embodiments, a computer animation model to transform image data can be used by a system where a user may capture an image or video stream of the user (e.g., a selfie) using a client device <b>102</b> having a neural network operating as part of a messaging client application <b>104</b> operating on the client device <b>102</b>. The transform system operating within the messaging client application <b>104</b> determines the presence of a face within the image or video stream and provides modification icons associated with a computer animation model to transform image data, or the computer animation model can be present as associated with an interface described herein. The modification icons include changes which may be the basis for modifying the user's face within the image or video stream as part of the modification operation. Once a modification icon is selected, the transform system initiates a process to convert the image of the user to reflect the selected modification icon (e.g., generate a smiling face on the user). In some embodiments, a modified image or video stream may be presented in a graphical user interface displayed on the mobile client device as soon as the image or video stream is captured and a specified modification is selected. The transform system may implement a complex convolutional neural network on a portion of the image or video stream to generate and apply the selected modification. That is, the user may capture the image or video stream and be presented with a modified result in real time or near real time once a modification icon has been selected. Further, the modification may be persistent while the video stream is being captured and the selected modification icon remains toggled. Machine taught neural networks may be used to enable such modifications.</p><p id="p-0065" num="0064">In some embodiments, the graphical user interface, presenting the modification performed by the transform system, may supply the user with additional interaction options. Such options may be based on the interface used to initiate the content capture and selection of a particular computer animation model (e.g., initiation from a content creator user interface). In various embodiments, a modification may be persistent after an initial selection of a modification icon. The user may toggle the modification on or off by tapping or otherwise selecting the face being modified by the transformation system and store it for later viewing or browse to other areas of the imaging application. Where multiple faces are modified by the transformation system, the user may toggle the modification on or off globally by tapping or selecting a single face modified and displayed within a graphical user interface. In some embodiments, individual faces, among a group of multiple faces, may be individually modified or such modifications may be individually toggled by tapping or selecting the individual face or a series of individual faces displayed within the graphical user interface.</p><p id="p-0066" num="0065">In some example embodiments, a graphical processing pipeline architecture is provided that enables different augmented reality experiences (e.g., AR content generators) to be applied in corresponding different layers. Such a graphical processing pipeline provides an extensible rendering engine for providing multiple augmented reality experiences that are included in a composite media (e.g., image or video) for rendering by the messaging client application <b>104</b> (or the messaging system <b>100</b>).</p><p id="p-0067" num="0066">As mentioned above, the video table <b>310</b> stores video data which, in one embodiment, is associated with messages for which records are maintained within the message table <b>314</b>. Similarly, the image table <b>308</b> stores image data associated with messages for which message data is stored in the entity table <b>302</b>. The entity table <b>302</b> may associate various annotations from the annotation table <b>312</b> with various images and videos stored in the image table <b>308</b> and the video table <b>310</b>.</p><p id="p-0068" num="0067">A story table <b>306</b> stores data regarding collections of messages and associated image, video, or audio data, which are compiled into a collection (e.g., a story or a gallery). The creation of a particular collection may be initiated by a particular user (e.g., each user for which a record is maintained in the entity table <b>302</b>). A user may create a &#x2018;personal story&#x2019; in the form of a collection of content that has been created and sent/broadcast by that user. To this end, the user interface of the messaging client application <b>104</b> may include an icon that is user-selectable to enable a sending user to add specific content to his or her personal story.</p><p id="p-0069" num="0068">A collection may also constitute a &#x2018;live story,&#x2019; which is a collection of content from multiple users that is created manually, automatically, or using a combination of manual and automatic techniques. For example, a &#x2018;live story&#x2019; may constitute a curated stream of user-submitted content from varies locations and events. Users whose client devices have location services enabled and are at a common location event at a particular time may, for example, be presented with an option, via a user interface of the messaging client application <b>104</b>, to contribute content to a particular live story. The live story may be identified to the user by the messaging client application <b>104</b>, based on his or her location. The end result is a &#x2018;live story&#x2019; told from a community perspective.</p><p id="p-0070" num="0069">A further type of content collection is known as a &#x2018;location story&#x2019;, which enables a user whose client device <b>102</b> is located within a specific geographic location (e.g., on a college or university campus) to contribute to a particular collection. In some embodiments, a contribution to a location story may require a second degree of authentication to verify that the end user belongs to a specific organization or other entity (e.g., is a student on the university campus).</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram illustrating a structure of a message <b>400</b>, according to some embodiments, generated by a messaging client application <b>104</b> for communication to a further messaging client application <b>104</b> or the messaging server application <b>114</b>. The content of a particular message <b>400</b> is used to populate the message table <b>314</b> stored within the database <b>120</b>, accessible by the messaging server application <b>114</b>. Similarly, the content of a message <b>400</b> is stored in memory as &#x201c;in-transit&#x201d; or &#x201c;in-flight&#x201d; data of the client device <b>102</b> or the application server <b>112</b>. The message <b>400</b> is shown to include the following components:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0071">A message identifier <b>402</b>: a unique identifier that identifies the message <b>400</b>.</li>        <li id="ul0002-0002" num="0072">A message text payload <b>404</b>: text, to be generated by a user via a user interface of the client device <b>102</b> and that is included in the message <b>400</b>.</li>        <li id="ul0002-0003" num="0073">A message image payload <b>406</b>: image data, captured by a camera component of a client device <b>102</b> or retrieved from a memory component of a client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0004" num="0074">A message video payload <b>408</b>: video data, captured by a camera component or retrieved from a memory component of the client device <b>102</b> and that is included in the message <b>400</b>.</li>        <li id="ul0002-0005" num="0075">A message audio payload <b>410</b>: audio data, captured by a microphone or retrieved from a memory component of the client device <b>102</b>, and that is included in the message <b>400</b>.</li>        <li id="ul0002-0006" num="0076">A message annotations <b>412</b>: annotation data (e.g., filters, stickers or other enhancements) that represents annotations to be applied to message image payload <b>406</b>, message video payload <b>408</b>, or message audio payload <b>410</b> of the message <b>400</b>.</li>        <li id="ul0002-0007" num="0077">A message duration parameter <b>414</b>: parameter value indicating, in seconds, the amount of time for which content of the message (e.g., the message image payload <b>406</b>, message video payload <b>408</b>, message audio payload <b>410</b>) is to be presented or made accessible to a user via the messaging client application <b>104</b>.</li>        <li id="ul0002-0008" num="0078">A message geolocation parameter <b>416</b>: geolocation data (e.g., latitudinal and longitudinal coordinates) associated with the content payload of the message. Multiple message geolocation parameter <b>416</b> values may be included in the payload, each of these parameter values being associated with respect to content items included in the content (e.g., a specific image into within the message image payload <b>406</b>, or a specific video in the message video payload <b>408</b>).</li>        <li id="ul0002-0009" num="0079">A message story identifier <b>418</b>: identifier values identifying one or more content collections (e.g., &#x201c;stories&#x201d;) with which a particular content item in the message image payload <b>406</b> of the message <b>400</b> is associated. For example, multiple images within the message image payload <b>406</b> may each be associated with multiple content collections using identifier values.</li>        <li id="ul0002-0010" num="0080">A message tag <b>420</b>: each message <b>400</b> may be tagged with multiple tags, each of which is indicative of the subject matter of content included in the message payload. For example, where a particular image included in the message image payload <b>406</b> depicts an animal (e.g., a lion), a tag value may be included within the message tag <b>420</b> that is indicative of the relevant animal. Tag values may be generated manually, based on user input, or may be automatically generated using, for example, image recognition.</li>        <li id="ul0002-0011" num="0081">A message sender identifier <b>422</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the client device <b>102</b> on which the message <b>400</b> was generated and from which the message <b>400</b> was sent</li>        <li id="ul0002-0012" num="0082">A message receiver identifier <b>424</b>: an identifier (e.g., a messaging system identifier, email address, or device identifier) indicative of a user of the client device <b>102</b> to which the message <b>400</b> is addressed.</li>    </ul>    </li></ul></p><p id="p-0072" num="0083">The contents (e.g., values) of the various components of message <b>400</b> may be pointers to locations in tables within which content data values are stored. For example, an image value in the message image payload <b>406</b> may be a pointer to (or address of) a location within an image table <b>308</b>. Similarly, values within the message video payload <b>408</b> may point to data stored within a video table <b>310</b>, values stored within the message annotations <b>412</b> may point to data stored in an annotation table <b>312</b>, values stored within the message story identifier <b>418</b> may point to data stored in a story table <b>306</b>, and values stored within the message sender identifier <b>422</b> and the message receiver identifier <b>424</b> may point to user records stored within an entity table <b>302</b>.</p><p id="p-0073" num="0084"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram illustrating an access-limiting process <b>500</b>, in terms of which access to content (e.g., an ephemeral message <b>502</b>, and associated multimedia payload of data) or a content collection (e.g., an ephemeral message group <b>504</b>) may be time-limited (e.g., made ephemeral).</p><p id="p-0074" num="0085">An ephemeral message <b>502</b> is shown to be associated with a message duration parameter <b>506</b>, the value of which determines an amount of time that the ephemeral message <b>502</b> will be displayed to a receiving user of the ephemeral message <b>502</b> by the messaging client application <b>104</b>. In one embodiment, an ephemeral message <b>502</b> is viewable by a receiving user for up to a maximum of 10 seconds, depending on the amount of time that the sending user specifies using the message duration parameter <b>506</b>.</p><p id="p-0075" num="0086">The message duration parameter <b>506</b> and the message receiver identifier <b>424</b> are shown to be inputs to a message timer <b>512</b>, which is responsible for determining the amount of time that the ephemeral message <b>502</b> is shown to a particular receiving user identified by the message receiver identifier <b>424</b>. In particular, the ephemeral message <b>502</b> will only be shown to the relevant receiving user for a time period determined by the value of the message duration parameter <b>506</b>. The message timer <b>512</b> is shown to provide output to a more generalized ephemeral timer system <b>202</b>, which is responsible for the overall timing of display of content (e.g., an ephemeral message <b>502</b>) to a receiving user.</p><p id="p-0076" num="0087">The ephemeral message <b>502</b> is shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> to be included within an ephemeral message group <b>504</b> (e.g., a collection of messages in a personal story, or an event story). The ephemeral message group <b>504</b> has an associated group duration parameter <b>508</b>, a value of which determines a time-duration for which the ephemeral message group <b>504</b> is presented and accessible to users of the messaging system <b>100</b>. The group duration parameter <b>508</b>, for example, may be the duration of a music concert, where the ephemeral message group <b>504</b> is a collection of content pertaining to that concert. Alternatively, a user (either the owning user or a curator user) may specify the value for the group duration parameter <b>508</b> when performing the setup and creation of the ephemeral message group <b>504</b>.</p><p id="p-0077" num="0088">Additionally, each ephemeral message <b>502</b> within the ephemeral message group <b>504</b> has an associated group participation parameter <b>510</b>, a value of which determines the duration of time for which the ephemeral message <b>502</b> will be accessible within the context of the ephemeral message group <b>504</b>. Accordingly, a particular ephemeral message group <b>504</b> may &#x201c;expire&#x201d; and become inaccessible within the context of the ephemeral message group <b>504</b>, prior to the ephemeral message group <b>504</b> itself expiring in terms of the group duration parameter <b>508</b>. The group duration parameter <b>508</b>, group participation parameter <b>510</b>, and message receiver identifier <b>424</b> each provide input to a group timer <b>514</b>, which operationally determines, firstly, whether a particular ephemeral message <b>502</b> of the ephemeral message group <b>504</b> will be displayed to a particular receiving user and, if so, for how long. Note that the ephemeral message group <b>504</b> is also aware of the identity of the particular receiving user as a result of the message receiver identifier <b>424</b>.</p><p id="p-0078" num="0089">Accordingly, the group timer <b>514</b> operationally controls the overall lifespan of an associated ephemeral message group <b>504</b>, as well as an individual ephemeral message <b>502</b> included in the ephemeral message group <b>504</b>. In one embodiment, each and every ephemeral message <b>502</b> within the ephemeral message group <b>504</b> remains viewable and accessible for a time-period specified by the group duration parameter <b>508</b>. In a further embodiment, a certain ephemeral message <b>502</b> may expire, within the context of ephemeral message group <b>504</b>, based on a group participation parameter <b>510</b>. Note that a message duration parameter <b>506</b> may still determine the duration of time for which a particular ephemeral message <b>502</b> is displayed to a receiving user, even within the context of the ephemeral message group <b>504</b>. Accordingly, the message duration parameter <b>506</b> determines the duration of time that a particular ephemeral message <b>502</b> is displayed to a receiving user, regardless of whether the receiving user is viewing that ephemeral message <b>502</b> inside or outside the context of an ephemeral message group <b>504</b>.</p><p id="p-0079" num="0090">The ephemeral timer system <b>202</b> may furthermore operationally remove a particular ephemeral message <b>502</b> from the ephemeral message group <b>504</b> based on a determination that it has exceeded an associated group participation parameter <b>510</b>. For example, when a sending user has established a group participation parameter <b>510</b> of 24 hours from posting, the ephemeral timer system <b>202</b> will remove the relevant ephemeral message <b>502</b> from the ephemeral message group <b>504</b> after the specified 24 hours. The ephemeral timer system <b>202</b> also operates to remove an ephemeral message group <b>504</b> either when the group participation parameter <b>510</b> for each and every ephemeral message <b>502</b> within the ephemeral message group <b>504</b> has expired, or when the ephemeral message group <b>504</b> itself has expired in terms of the group duration parameter <b>508</b>.</p><p id="p-0080" num="0091">In certain use cases, a creator of a particular ephemeral message group <b>504</b> may specify an indefinite group duration parameter <b>508</b>. In this case, the expiration of the group participation parameter <b>510</b> for the last remaining ephemeral message <b>502</b> within the ephemeral message group <b>504</b> will determine when the ephemeral message group <b>504</b> itself expires. In this case, a new ephemeral message <b>502</b>, added to the ephemeral message group <b>504</b>, with a new group participation parameter <b>510</b>, effectively extends the life of an ephemeral message group <b>504</b> to equal the value of the group participation parameter <b>510</b>.</p><p id="p-0081" num="0092">Responsive to the ephemeral timer system <b>202</b> determining that an ephemeral message group <b>504</b> has expired (e.g., is no longer accessible), the ephemeral timer system <b>202</b> communicates with the messaging system <b>100</b> (and, for example, specifically the messaging client application <b>104</b>) to cause an indicium (e.g., an icon) associated with the relevant ephemeral message group <b>504</b> to no longer be displayed within a user interface of the messaging client application <b>104</b>. Similarly, when the ephemeral timer system <b>202</b> determines that the message duration parameter <b>506</b> for a particular ephemeral message <b>502</b> has expired, the ephemeral timer system <b>202</b> causes the messaging client application <b>104</b> to no longer display an indicium (e.g., an icon or textual identification) associated with the ephemeral message <b>502</b>.</p><p id="p-0082" num="0093">As discussed herein, the subject infrastructure supports the creation and sharing of interactive 3D media, referred to herein as 3D messages, throughout various components of the messaging system <b>100</b>. The infrastructure as described herein enables other forms of 3D media to be provided across the subject system, which allows for depth-based media to be shared across the messaging system <b>100</b> and alongside photo and video messages. In example embodiments described herein, messages can enter the system from a live camera or via from storage (e.g., where 3D messages and/or other messages are stored in memory or a database). The subject system supports motion sensor input and manages the sending and storage of depth data, and loading of external effects and asset data.</p><p id="p-0083" num="0094">As mentioned above, a three-dimensional (3D) message refers to an interactive 3D image including at least image and depth data. In an example embodiment, a 3D message is rendered using the subject system to visualize the spatial detail/geometry of what the camera sees, in addition to a traditional image texture. When a viewer interacts with this 3D message by moving a client device, the movement triggers corresponding changes in the perspective the image and geometry are rendered at to the viewer.</p><p id="p-0084" num="0095">In an embodiment, the subject system provides 3D effects that work in conjunction with other components of the system to process depth data, which provides particles, shaders, 2D assets and 3D geometry that can inhabit different depth-planes within messages. In an example, this enables the subject system to provide LENSES and effects that have occlusion and respond the interactions of the user (e.g., as detected through motion sensor data) by changing the physical placement and visual appearance of the assets in such messages. The 3D effects as described herein, in an example, are rendered in a real-time manner for the user, which also enables different particles and layers to be placed in different positions for each user who views such particles and layers.</p><p id="p-0085" num="0096">As discussed herein, a 2D attachment or 3D attachment refers to images (e.g., sprites) or geometry (e.g., corresponding to a 3D object) that can be attached to a 3D effect in a similar manner to being attached to an augmented reality content generator.</p><p id="p-0086" num="0097">As described herein, face effects refer to beautification, face retouch, stretching and other effects that can be applied to an image containing a face in order to deform or beautify the face through an augmented reality content generator and/or other media overlay.</p><p id="p-0087" num="0098">As mentioned herein, a gyro-based interaction refers to a type of interaction in which a given client device's rotation is used as an input to change an aspect of the effect (e.g. rotating phone along x-axis in order to change the color of a light in the scene).</p><p id="p-0088" num="0099">As mentioned herein, a 3D augmented reality content generator refers to a real-time special effect and/or sound that may be added to a 3D message and modifies image and/or depth data.</p><p id="p-0089" num="0100">In an embodiment, when a user initiates a capture of a 3D message, the subject system applies a bundled or dynamic depth effect augmented reality content generator using mesh generated based on depth information and a camera image. In order to recreate the same effect after storing the 3D message to the cloud (e.g., in the database <b>120</b> of the messaging server system <b>108</b>), raw input data or the generated mesh, augmented reality content generator etc., are stored. In an example, to reduce storage requirements, raw input data in addition to a camera image are stored. The following discussion relates to example data that is stored in connection with such a 3D message in accordance to some embodiments.</p><p id="p-0090" num="0101"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic diagram illustrating a structure of the message annotations <b>412</b>, as described above in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, including additional information corresponding to a given 3D message, according to some embodiments, generated by the messaging client application <b>104</b>. In an embodiment, the content of a particular message <b>400</b> including the additional data shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> is used to populate the message table <b>314</b> stored within the database <b>120</b> for a given 3D message, which is then accessible by the messaging server application <b>114</b> and/or the messaging client application <b>104</b>. As illustrated in an example embodiment, message annotations <b>412</b> includes the following components corresponding to data for a 3D message:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0102">augmented reality content generator identifier <b>652</b>: identifier of an augmented reality content generator (e.g., animation and/or effect, including a 3D effect, LENSES, filter, and the like) utilized in the message</li>        <li id="ul0004-0002" num="0103">message identifier <b>654</b>: identifier of the message</li>        <li id="ul0004-0003" num="0104">asset identifiers <b>656</b>: a set of identifiers for assets in the message. For example, respective asset identifiers can be included for a number of assets that is determined by the particular 3D augmented reality content generator. In an embodiment, such assets are created by the 3D augmented reality content generator on the sender side, uploaded to the messaging server application <b>114</b>, and utilized by the 3D augmented reality content generator on the receiver side in order to recreate the message. Examples of typical assets include:        <ul id="ul0005" list-style="none">            <li id="ul0005-0001" num="0105">The original still RGB image captured by the camera</li>            <li id="ul0005-0002" num="0106">A combined depth map and portrait segmentation mask, which provides a 3D capture of the user separated from their background. In an embodiment and described further herein, this is generated by render passes in the 3D augmented reality content generator from the raw depth data and a portrait segmentation, which can be packed into a multichannel image (e.g., RGB channels with alpha channel) for transmission</li>            <li id="ul0005-0003" num="0107">A blurred background image to place behind the 3D user capture. In an embodiment, this is generated by render passes in the augmented reality content generator making use of the portrait segmentation mask to perform inpainting of image content behind the user</li>            <li id="ul0005-0004" num="0108">3D depth data (mentioned further below)</li>            <li id="ul0005-0005" num="0109">portrait segmentation mask (mentioned further below)</li>        </ul>        </li>        <li id="ul0004-0004" num="0110">depth data <b>658</b>: raw depth data (e.g., 640&#xd7;360 with 16 bit) and/or a depth map</li>        <li id="ul0004-0005" num="0111">mask data <b>660</b>: data corresponding to a portrait segmentation mask based on the raw depth data and/or depth map</li>        <li id="ul0004-0006" num="0112">metadata <b>662</b> corresponding to additional metadata including, but not limited to, the following:        <ul id="ul0006" list-style="none">            <li id="ul0006-0001" num="0113">3D message metadata appended to camera image metadata            <ul id="ul0007" list-style="none">                <li id="ul0007-0001" num="0114">camera intrinsic data                <ul id="ul0008" list-style="none">                    <li id="ul0008-0001" num="0115">focal length</li>                    <li id="ul0008-0002" num="0116">principal point</li>                </ul>                </li>                <li id="ul0007-0002" num="0117">camera extrinsic data                <ul id="ul0009" list-style="none">                    <li id="ul0009-0001" num="0118">quaternion indicating rotation between two cameras</li>                    <li id="ul0009-0002" num="0119">translation between two cameras</li>                </ul>                </li>                <li id="ul0007-0003" num="0120">other camera information (e.g., camera position)</li>            </ul>            </li>            <li id="ul0006-0002" num="0121">augmented reality content generator ID of 3D depth effect in a corresponding augmented reality content generator</li>            <li id="ul0006-0003" num="0122">Media attribute to indicate message has depth</li>            <li id="ul0006-0004" num="0123">Augmented reality content generator asset metadata corresponding to an augmented reality content generator</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0091" num="0124">Although not shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, in an example embodiment, a given 3D message also includes the following data (e.g., as described before in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>): 1) a placeholder 2D image (e.g., a 2D photo with information corresponding to 3D effects), and 2) a standard 2D overlay applied to the 3D message (e.g., filters based on geolocation, stickers, captions, etc.). A 3D message therefore includes, in an embodiment, a placeholder image which includes metadata corresponding to configuration data for an augmented reality content generator (e.g., camera intrinsic data, attached object positions) and references to stored assets in connection with the 3D message.</p><p id="p-0092" num="0125">In an example, the user is able to select from a number of augmented reality content generators which results in different visual treatments of the raw data provided by the camera. In an example, after an augmented reality content generator (which involves 3D data) has been selected in the messaging client application <b>104</b>, the camera captures raw depth data, and the camera image. In an example, this raw data is provided to components for rendering a view of the message including the depth data. Additionally, this raw data, in an embodiment, is utilized by the message client application <b>104</b> (or component thereof) to generate a portrait segmentation mask.</p><p id="p-0093" num="0126">In an embodiment, an augmented reality content generator includes logic for generating assets, which are uploaded to the messaging server application <b>114</b>, and other data (anything else which the receiver needs in order to rebuild the effect e.g. field of view information, configuration parameters, etc.), which is attached to the message.</p><p id="p-0094" num="0127">In an example, the sender then generates a standard 2D image message to which augmented reality content generator metadata is included that contains information utilized by the receiver to reconstruct the 3D message. This includes the ID of the 3D message augmented reality content generator (e.g., the receiver also downloads and executes the same augmented reality content generator that was used by the sender), a 3D message ID (e.g., to associate all assets with this particular 3D message), and the assets IDs and configuration data produced by the 3D augmented reality content generator itself, including arbitrary structured data embedded directly in the metadata (e.g., numbers, text, vectors and matrices) and any number of asset IDs referencing larger assets stored in the messaging server application <b>114</b> (e.g., images, videos, 3D meshes).</p><p id="p-0095" num="0128">In an embodiment, facial data processing occurs only on the sender side. The results of this processing are then stored as configuration data by the 3D message augmented reality content generator (for example, the 3D transform of the head as a transformation matrix), and on the receiver side this configuration data is retrieved and used (e.g., the receiver does not re-process facial data from the original image). This dangerously enables a receiving device to render for display the #D</p><p id="p-0096" num="0129">As an example, the receiver receives a standard 2D image message, but because of the presence and content of the augmented reality content generator metadata, the receiver reconstructs a 3D message based on such metadata. This involves first fetching the 3D message augmented reality content generator using its ID, and then fetching all assets associated with the 3D message ID. The receiver loads the 3D message augmented reality content generator, and the augmented reality content generator itself contains the logic for requesting the appropriate assets and data and reassembling the 3D message. In an example, the 3D message assets will not include information for performing additional processing with respect to a given media overlay, so for example if a sticker (e.g., overlaid image) has been applied on top of the 3D message, the receiver will receive the underlying unobscured 3D message assets, and the sticker will be applied by the receiver as a media overlay.</p><p id="p-0097" num="0130"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram <b>700</b> illustrating various modules of an annotation system <b>206</b>, according to some example embodiments. The annotation system <b>206</b> is shown as including an image and depth data receiving module <b>702</b>, a sensor data receiving module <b>704</b>, an image and depth data processing module <b>706</b>, a 3D effects module <b>708</b>, a rendering module <b>710</b>, a sharing module <b>712</b>, and an augmented reality content generator module <b>714</b>. The various modules of the annotation system <b>206</b> are configured to communicate with each other (e.g., via a bus, shared memory, or a switch). Any one or more of these modules may be implemented using one or more computer processors <b>750</b> (e.g., by configuring such one or more computer processors to perform functions described for that module) and hence may include one or more of the computer processors <b>750</b> (e.g., a set of processors provided by the client device <b>102</b>).</p><p id="p-0098" num="0131">Any one or more of the modules described may be implemented using hardware alone (e.g., one or more of the computer processors <b>750</b> of a machine (e.g., machine <b>2300</b>) or a combination of hardware and software. For example, any described module of the annotation system <b>206</b> may physically include an arrangement of one or more of the computer processors <b>750</b> (e.g., a subset of or among the one or more computer processors of the machine (e.g., machine <b>2300</b>) configured to perform the operations described herein for that module. As another example, any module of the annotation system <b>206</b> may include software, hardware, or both, that configure an arrangement of one or more computer processors <b>750</b> (e.g., among the one or more computer processors of the machine (e.g., machine <b>2300</b>) to perform the operations described herein for that module. Accordingly, different modules of the annotation system <b>206</b> may include and configure different arrangements of such computer processors <b>750</b> or a single arrangement of such computer processors <b>750</b> at different points in time. Moreover, any two or more modules of the annotation system <b>206</b> may be combined into a single module, and the functions described herein for a single module may be subdivided among multiple modules.</p><p id="p-0099" num="0132">Furthermore, according to various example embodiments, modules described herein as being implemented within a single machine, database, or device may be distributed across multiple machines, databases, or devices.</p><p id="p-0100" num="0133">The image and depth data receiving module <b>702</b> receives images and depth data captured by a client device <b>102</b>. For example, an image is a photograph captured by an optical sensor (e.g., camera) of the client device <b>102</b>. An image includes one or more real-world features, such as a user's face or real-world object(s) detected in the image. In some embodiments, an image includes metadata describing the image. For example, the depth data includes data corresponding to a depth map including depth information based on light rays emitted from a light emitting module directed to an object (e.g., a user's face) having features with different depths (e.g., eyes, ears, nose, lips, etc.). By way of example, a depth map is similar to an image but instead of each pixel providing a color, the depth map indicates distance from a camera to that part of the image (e.g., in absolute terms, or relative to other pixels in the depth map).</p><p id="p-0101" num="0134">The sensor data receiving module <b>704</b> receives sensor data from a client device <b>102</b>. Sensor data is any type of data captured by a sensor of the client device <b>102</b>. In an example, sensor data can include motion of the client device <b>102</b> gathered by a gyroscope, touch inputs or gesture inputs from a touch sensor (e.g., touchscreen), GPS, or another sensor of the client device <b>102</b> that describes a current geographic location and/or movement of the client device <b>102</b>. As another example, sensor data may include temperature data indicating a current temperature as detected by a sensor of the client device <b>102</b>. As another example, the sensor data may include light sensor data indicating whether the client device <b>102</b> is in a dark or bright environment.</p><p id="p-0102" num="0135">The image and depth data processing module <b>706</b> performs operations on the received image and/or depth data. For example, various image processing and/or depth processing operations are performed by the image and depth data processing module <b>706</b>, which are discussed further herein.</p><p id="p-0103" num="0136">The 3D effects module <b>708</b> performs various operations based on 3D algorithms or techniques that correspond to animations and/or providing visual and/or auditory effects to the received image and/or depth data, which is described further herein.</p><p id="p-0104" num="0137">The rendering module <b>710</b> performs rendering of the 3D message for display by the messaging client application <b>104</b> based on data provided by at least one of the aforementioned modules.</p><p id="p-0105" num="0138">The sharing module <b>712</b> generates the 3D message for storing and/or sending to the messaging server system <b>108</b>. The sharing module <b>712</b> enables sharing of 3D messages to other users of the messaging server system <b>108</b>.</p><p id="p-0106" num="0139">The augmented reality content generator module <b>714</b> cause display of selectable graphical items that, in an embodiment, are presented in a carousel arrangement. By way of example, the user can utilize various inputs to rotate the selectable graphical items onto and off of the display screen in manner corresponding to a carousel providing a cyclic view of the graphical items. The carousel arrangement allows multiple graphical items to occupy a particular graphical area on the display screen. In an example, augmented reality content generators can be organized into respective groups for including on the carousel arrangement thereby enabling rotating through augmented reality content generators by group.</p><p id="p-0107" num="0140">In a given 3D message, a 3D model of the subject or scene can be captured using the embodiments described herein. Such a 3D model can be combined with an augmented reality content generator(s) e.g., (LENSES and AR effects) and 3D effects and shared within the subject system, offering additional elements of interactivity for the viewer.</p><p id="p-0108" num="0141">In embodiments described herein, by using depth and image data, 3D face and scene reconstruction can be performed that adds a Z-axis dimension (e.g., depth dimension) to a traditional 2D photos (e.g., X-axis and Y-axis dimensions). This format enables the viewer to interact with the 3D message, changing the angle/perspective in which the 3D message is rendered by the subject system, and affecting particles and shaders that are utilized in rendering the 3D message.</p><p id="p-0109" num="0142">In an example, viewer interaction input comes from movement (e.g., from a movement sensor of the device displaying the 3D message to the viewer) whilst viewing the 3D message, which in turn is translated to changes in perspective for how content, particles and shaders are rendered. Interaction can also come from onscreen touch gestures and other device motion.</p><p id="p-0110" num="0143"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flowchart illustrating a method <b>800</b> to generate a 3D message, according to some example embodiments. The method <b>800</b> may be embodied in computer-readable instructions for execution by one or more computer processors such that the operations of the method <b>800</b> may be performed in part or in whole by the messaging client application <b>104</b>, particularly with respect to respective components of the annotation system <b>206</b> described above in <figref idref="DRAWINGS">FIG. <b>7</b></figref>; accordingly, the method <b>800</b> is described below by way of example with reference thereto. However, it shall be appreciated that at least some of the operations of the method <b>800</b> may be deployed on various other hardware configurations and the method <b>800</b> is not intended to be limited to the messaging client application <b>104</b>.</p><p id="p-0111" num="0144">At operation <b>802</b>, the image and depth data receiving module <b>702</b> receives image data and depth data captured by an optical sensor (e.g., camera) of the client device <b>102</b>. In an example, to create a 3D message, the user selects a 3D message camera mode in the messaging client application <b>104</b>, which causes the camera to capture raw depth data and a portrait segmentation mask along with the camera image.</p><p id="p-0112" num="0145">At operation <b>804</b>, the 3D effects module <b>708</b> selects a 3D effect. In an example, the 3D effect may be selected based on a user input corresponding to a selection of a 3D augmented reality content generator as provided, for example, in a user interface of the messaging client application <b>104</b>.</p><p id="p-0113" num="0146">At operation <b>806</b>, the 3D effects module <b>708</b> applies the selected 3D effect to the image data and/or the depth data. In an example, the selected 3D effect includes logic to enable processing the image data and/or depth data.</p><p id="p-0114" num="0147">At operation <b>808</b>, the rendering module <b>710</b> renders a view of a 3D message using the applied 3D effect. In an example, the rendering module provides the view of the 3D message based on the applied 3D effect, which is displayed by the messaging client application <b>104</b>. As described further herein, the viewer of the 3D message can provide additional inputs (e.g., movement data and/or touch inputs) which causes the 3D message to be updated and re-rendered in response to such inputs.</p><p id="p-0115" num="0148">At operation <b>810</b>, the sharing module <b>712</b> generates a 3D message including 3D effect data. As discussed before, the 3D message may include the information described in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and/or <figref idref="DRAWINGS">FIG. <b>4</b></figref>, which enables the 3D message to be reconstructed and rendered by a viewer of the 3D message upon receipt of the 3D message.</p><p id="p-0116" num="0149">At operation <b>812</b>, the sharing module <b>712</b> stores at or sends the generated 3D message to the messaging server system <b>108</b>. In an example, the messaging client application <b>104</b> sends the 3D message to the messaging server system <b>108</b>, which enables the 3D message to be stored and/or viewed at a later time by a particular recipient or viewer of the 3D message.</p><p id="p-0117" num="0150">In an embodiment, in a scenario where a given 3D message is received (e.g., by a sender client device sharing the 3D message to a receiver client device), similar operations described in operation <b>802</b> to operation <b>808</b> may be performed in order to render a view of the received 3D message (e.g., thereby foregoing the operation <b>810</b> and operation <b>812</b> to generate the 3D message and/or store or send the 3D message).</p><p id="p-0118" num="0151">The following discussion relates to example embodiments for sharing 3D messages and/or storing such 3D messages in persistent storage (e.g., the database <b>120</b>).</p><p id="p-0119" num="0152">In an embodiment, a user can initiate (e.g., by selecting a command provided in a user interface of the messaging client application <b>104</b>) a process for storing the 3D message to the database <b>120</b> of the messaging server system <b>108</b>. In this example, the image and depth data are stored, as well as information as described before in <figref idref="DRAWINGS">FIG. <b>6</b></figref> (e.g., a 3D augmented reality content generator to load with the 3D message).</p><p id="p-0120" num="0153">In an embodiment, the user (e.g., a sender of the 3D message) can initiate a process (e.g., by selecting a command provided in a user interface of the messaging client application <b>104</b>) to send the 3D messages to a set of recipients (e.g., one or more receivers of the 3D message). In an embodiment, the messaging client application <b>104</b> can provide a prompt and/or message that informs the user about 3D messages and how they are different to photos and videos (e.g., 2D messages).</p><p id="p-0121" num="0154">In an embodiment, a given 3D message can be exported after being stored in the messaging server system <b>108</b>. For example, when a user selects an export command for a selected 3D message, a respective augmented reality content generator corresponding to a 3D effect, associated with the 3D message, is retrieved and the 3D effect is applied on the image data over a loop in order to generate a video which can be looped. In this video, a 3D mesh can be rotated in 360 degrees completing a loop for a particular period of time.</p><p id="p-0122" num="0155"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart illustrating a method <b>900</b> of performing conversion passes for processing the image and depth data which may be performed in conjunction with the method <b>800</b> for generating a 3D message as described above, according to some example embodiments.</p><p id="p-0123" num="0156">The method <b>900</b> may be embodied in computer-readable instructions for execution by one or more computer processors such that the operations of the method <b>900</b> may be performed in part or in whole by the messaging client application <b>104</b>, particularly with respect to respective components of the annotation system <b>206</b> described above in <figref idref="DRAWINGS">FIG. <b>7</b></figref>; accordingly, the method <b>900</b> is described below by way of example with reference thereto. However, it shall be appreciated that at least some of the operations of the method <b>900</b> may be deployed on various other hardware configurations and the method <b>900</b> is not intended to be limited to the messaging client application <b>104</b>.</p><p id="p-0124" num="0157">At operation <b>902</b>, the image and depth data receiving module <b>702</b> receives image data and depth data captured by an optical sensor (e.g., camera) of the client device <b>102</b>. In an example, the depth data includes a depth map corresponding to the image data. In an embodiment, the image data (e.g., a color frame) is resized if a height of the image data exceeds a particular size (e.g., 2048 pixels) to improve processing utilization (e.g., for the image processing operations described further herein) and better ensure compatibility with a wider variety of client devices.</p><p id="p-0125" num="0158">In an example embodiment, machine learning techniques and heuristics are utilized to generate depth maps in instances in which a given client device does not include appropriate hardware (e.g., depth sensing camera) that enables capture depth information. Such machine learning techniques can train a machine learning model from training data from shared 3D messages in an example (or other image data). Such heuristics include using face tracking and portrait segmentation to generate a depth map of a person.</p><p id="p-0126" num="0159">In an example embodiment, the aforementioned machine learning techniques can utilize a neural network model to generate a depth map. For depth estimation, the input to the neural network is an RGB image and the output is a depth image. In an example, the neural network generates the depth map, which is lower resolution than the RGB image. 3D effects that are rendered using such a depth map can be limited, in an example, by the lower resolution of the depth map. In particular, fine detail (e.g., hair) can be challenging to preserve at the lower resolution of this depth map. Thus, as discussed further herein, the subject technology provides various techniques to address this potential shortcoming related to the depth map in order to generate more 3D effects that look more natural and less artificial when rendered and presented to a viewing user of the 3D message.</p><p id="p-0127" num="0160">In an example embodiment, multi-view stereo computer vision techniques are utilized to generate depth maps from a multiple images or a video in which the user moves the camera relative to the scene.</p><p id="p-0128" num="0161">In another embodiment, a neural network model can be utilized by the client device to generate a segmentation mask(s), which is then used to perform inpainting of a background of a given image and a corresponding depth map, which is discussed further herein.</p><p id="p-0129" num="0162">At operation <b>904</b>, the image and depth data processing module <b>706</b> generates a depth map using at least the depth data. As discussed further below, a second depth map, referred to a packed depth map, can be generated based at least in part on the depth map for additional technical advantages.</p><p id="p-0130" num="0163">At operation <b>906</b>, the image and depth data processing module <b>706</b> generates a segmentation mask based at least in part on the image data. In an embodiment, the image and depth data processing module <b>706</b> determines the segmentation mask using a convolutional neural network to perform dense prediction tasks where a prediction is made for every pixel to assign the pixel to a particular object class (e.g., face/portrait or background), and the segmentation mask is determined based on the groupings of the classified pixels (e.g., face/portrait or background). Alternatively, the segmentation mask may be received as included in the raw input data after being generated by the hardware of client device <b>102</b> (e.g., neural network processor or other machine learning oriented processor).</p><p id="p-0131" num="0164">At operation <b>908</b>, the image and depth data processing module <b>706</b> performs background inpainting and blurring of the received image data using at least the segmentation mask to generate background inpainted image data. In an example, the image and depth data processing module <b>706</b> performs a background inpainting technique that eliminates the portrait (e.g., including the user's face) from the background and blurring the background to focus on the person in the frame. In an embodiment, some of the aforementioned processing (e.g., conversion passes) are utilized for the depth and the color textures, while other image processing are utilized for the color texture (e.g. blurring the background). In an embodiment, the processing (e.g., conversion passes) are chained for rendering to the target, and the processed depth map and color texture are rendered in a manner to be consumed by the effect(s).</p><p id="p-0132" num="0165">At operation <b>910</b>, the image and depth data processing module <b>706</b> generates a depth inpainting mask based at least in part on the depth map. In an example, the depth map may correspond to the packed depth map mentioned before. In an example, the image and depth data processing module <b>706</b> uses the depth inpainting mask in order to clean up artifacts in the depth map. Alternatively, the image and depth data processing module <b>706</b> can instead utilize the segmentation mask mentioned above for inpainting the depth map (e.g., forego generating the depth inpainting mask).</p><p id="p-0133" num="0166">At operation <b>912</b>, the image and depth data processing module <b>706</b> performs inpainting of the depth map using the depth inpainting mask to generate an inpainted depth map. As mentioned before, the inpainted depth map corresponds to a post-processed depth map in which artifacts, if any, have been removed from the original depth map. In an example, the post-processed depth map includes segmentation applied to an alpha channel (e.g., a channel other than channels that define color values for pixels in an image) of the depth map.</p><p id="p-0134" num="0167">At operation <b>914</b>, the image and depth data processing module <b>706</b> generates a depth normal map based at least in part on the depth map. In an embodiment, the depth map in this operation can correspond to the packed depth map mentioned before. In an example, the image and depth data processing module <b>706</b> provides a post-process foreground image by applying, using the depth normal map, a 3D effect(s) to a foreground region of the image data.</p><p id="p-0135" num="0168">At operation <b>916</b>, the rendering module <b>710</b> generates a view of the 3D message using at least the background inpainted image, the inpainted depth map, and the post-processed foreground image, which are assets that are included the generated 3D message. In an example, the rendering module <b>710</b> renders a view of the 3D message for display by the messaging client application <b>104</b>.</p><p id="p-0136" num="0169">In an embodiment, a client device (e.g., the client device <b>102</b>), receives a selection of a selectable graphical item from a plurality of selectable graphical items, the selectable graphical item corresponds an augmented reality content generator including a 3D effect. The client device captures image data using at least one camera of the client device. The client device generates depth data using a machine learning model based at least in part on the captured image data. The client device applies, to the image data and the depth data, the 3D effect based at least in part on the augmented reality content generator.</p><p id="p-0137" num="0170">In an example, the image data is captured with more than one camera. Alternatively, the image data is captured using dual pixel autofocus from a single camera (where depth information can be derived using multiple images captured by the dual pixel autofocus). As discussed before, the machine learning model can be a deep neural network or a convolutional neural network that provides a prediction of depth data based on the captured image data, and the machine learning model receives the captured image data as an input, and generates a depth map as an output. In some implementations, the machine learning model executes on a neural network processor or a graphics processing unit of the client device.</p><p id="p-0138" num="0171">The following discussion relates to various &#x201c;cameras&#x201d; which, in an embodiment, are included as components of the annotation system <b>206</b> such as the image and depth data processing module <b>706</b>, the 3D effects module <b>708</b> and/or the rendering module <b>710</b> and perform various operations for processing the image and/or depth data in conjunction with rendering and/or generating a 3D message.</p><p id="p-0139" num="0172">In an embodiment, a scene camera contains the bulk of the effect(s). This is where all 3D or graphical attachments, gyro-based interaction and particles are added and/or configured. In an example, attachments are configured on the send and receive side by saving positions, rotations, etc., through persistent storage.</p><p id="p-0140" num="0173">In an embodiment, a face effects camera contains face effects that can be applied on both the color and depth textures, or on the color texture. For effects that affect both the color and the depth map textures, face effects are rendered in the depth inpainting out layer. In an example, this is utilized for a face stretch effect.</p><p id="p-0141" num="0174">In an embodiment, for face effects that only affect the color texture, such face effects are placed in a separate layer within the same camera to prevent them from being applied on to the depth map. Examples of effects like this are a face retouch effect and a face mask effect.</p><p id="p-0142" num="0175">In an embodiment, a compositing camera renders the output of the scene camera and applies any effects that are applied to the whole scene at the end of the pipeline (e.g., a color filter or screen space particles).</p><p id="p-0143" num="0176">Beautification techniques refer to image processing operations (e.g., &#x201c;beautification operations&#x201d;) that are related to retouching of image data, including a region(s) of the image data corresponding to a representation of a face (e.g., facial image data), that can achieve similar results to plastic surgery or makeup in the physical world. For example, such beautification techniques can modify facial image data in the digital domain, such as slimming cheeks, enlarging eyes, smoothing skin, brightening teeth or skin, removing blemishes or wrinkles, changing eye color, shrinking sagging skin, enhancing skin color, adding facial tattoos or markings, and the like. Thus, a given beautification technique can enhance an aesthetic appeal of facial images. It is useful to provide beautification of facial image data in an automated manner to avoid tedious (e.g., manually selected or performed by the user) interactions from a user thereby resulting in an more convenient and efficient process for presenting a rendering of the facial beautification.</p><p id="p-0144" num="0177">Further, when facial image data is to be modified, regions of the image data should be selected for modification in an accurate manner to avoid visual artifacts that can result in a lower quality or unaesthetically pleasing application of a beautification technique. Thus, it is advantageous to utilize a portrait segmentation mask as discussed further herein to more accurately apply a given beautification technique to facial image data.</p><p id="p-0145" num="0178">In the subject system, a selected AR content generator can include at least one beautification technique that is applied to image data and depth data, resulting in a beautification effect that can be provided in a display (e.g., rendering) of the generated 3D message.</p><p id="p-0146" num="0179"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a flowchart illustrating a method <b>1000</b> of performing beautification of image and depth data which may be performed in conjunction with the method <b>900</b> for generating a 3D message as described above, according to some example embodiments. The method <b>1000</b> may be embodied in computer-readable instructions for execution by one or more computer processors such that the operations of the method <b>1000</b> may be performed in part or in whole by the messaging client application <b>104</b>, particularly with respect to respective components of the annotation system <b>206</b> described above in <figref idref="DRAWINGS">FIG. <b>7</b></figref>; accordingly, the method <b>1000</b> is described below by way of example with reference thereto. However, it shall be appreciated that at least some of the operations of the method <b>1000</b> may be deployed on various other hardware configurations and the method <b>1000</b> is not intended to be limited to the messaging client application <b>104</b>.</p><p id="p-0147" num="0180">As described before, the subject system enables the application of face effects (e.g., beautification, face retouch, stretching and other effects) that can be applied to an image containing a face in order to deform or beautify the face through an augmented reality content generator and/or other image processing operation(s). As discussed herein, &#x201c;beautification&#x201d; refers to analyzing images according to user provided criteria to modify the images to meet the criteria. Such criteria can include X, Y, and Z values associated with the color and transparency of pixels in an image. As &#x201c;beatification operation&#x201d; refers to a set of image processing operations to perform beatification of facial image data.</p><p id="p-0148" num="0181">At operation <b>1002</b>, the 3D effects module <b>708</b> receives, at a client device (e.g., the client device <b>102</b>), a selection of a selectable graphical item from a plurality of selectable graphical items (e.g., in an interface as further discussed in <figref idref="DRAWINGS">FIG. <b>12</b></figref> below). In an example, the selectable graphical item is or corresponds to an augmented reality content generator for applying a 3D effect, and the 3D effect including at least one beautification operation that is to be performed in conjunction with the 3D effect.</p><p id="p-0149" num="0182">One example of such a beautification operation includes face retouching which includes a number of features to retouch the user's face such as softening skin, teeth whitening, eye sharpening and eye whitening. Another example of a beautification operation includes a face stretch effect that enables stretching points of the user's face. Yet another example of a beautification operation includes changing the color of the user's eyes and/or creating eye reflections. Another example of a beautification operation includes a face liquify effect that spherically warps the face. Another example of a beautification operation includes a face inset effect that maps a feature of the face (e.g., eyes) to other areas of the face. It is appreciated that other types of beautification techniques are contemplated and within the scope of the subject system.</p><p id="p-0150" num="0183">The beautification operation can modify the image data to increase skin smoothness, adjust lighting, and modify color in the facial image data. Example approaches to achieve the aforementioned image effects include using portrait division, portrait fusion, color correction, Gaussian mixture model (GMM), Gaussian filter, Bayesian segmentation, skin color detection, bilateral filter, HSV color descriptor, wavelet transform, gradient domain image processing, Poisson image cloning, Lee filter, edge-preserving smoothing filter, blurring, noise reduction, blemish removal, feature detection and extraction, and the like. Other approaches may be utilized by the subject technology to perform a given beautification operation. For instance, machine learning models can be applied in a beautification operation such as convolutional neural networks, generative adversarial networks, and the like. Such machine learning models can be utilized to preserve facial feature structures, smooth blemishes or remove wrinkles, or preserve facial skin texture in facial image data.</p><p id="p-0151" num="0184">At operation <b>1004</b>, the image and depth data receiving module <b>702</b> captures image data and depth data from an optical sensor of a client device (e.g., the client device <b>102</b>). In an embodiment, in response to the selection of the selectable graphical time corresponding to a particular 3D effect, the client device <b>102</b> can initiate operations at the image and depth data receiving module <b>702</b> to receive the captured image data and the depth data. As discussed herein, raw input data from such a camera can include the captured image data and the depth data, and in some embodiments, also include a portrait segmentation mask that is generated using hardware capabilities of the client device (e.g., a GPU or a neural network processor, and the like).</p><p id="p-0152" num="0185">At operation <b>1006</b>, the 3D effects module <b>708</b> applies, to the image data and the depth data, 3D effect including at least one beautification operation. In an embodiment, as part of applying the 3D effect, the 3D effects module <b>708</b> performs the beautification operation on a region of at least the image data including facial image data in which the beautification operation comprising at least one of smoothing, lighting adjustment, or color modification of pixels in the region. Further, the beautification operation include utilization of a machine learning model for preserving facial feature structures, smoothing blemishes, removing wrinkles, or preserving facial skin texture in facial image data included in the captured image data.</p><p id="p-0153" num="0186">At operation <b>1008</b>, the sharing module <b>712</b> generates a 3D message based at least in part on the applied 3D effect including the at least one beautification operation. In an embodiment, information (e.g., metadata) corresponding to the applied beautification technique and the post-processed image data is included with the 3D message, among other assets discussed herein, such that when the 3D message is stored in the data <b>120</b> of the messaging server system <b>108</b>, and upon subsequent viewing by a recipient, the 3D message is rendered with the applied beautification operation.</p><p id="p-0154" num="0187">At operation <b>1010</b>, the rendering module <b>710</b> renders a view of the 3D message render a view of the 3D message based at least in part on the applied 3D effect including the at least one beautification operation. In an alternative embodiment, it is appreciated that operation <b>1008</b> and <b>1010</b> can be performed in a different order such that a view of the 3D message is performed initially (e.g., to provide a preview of the 3D message), and then the 3D message is generated with the included assets and metadata as described further herein.</p><p id="p-0155" num="0188"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flowchart illustrating a method <b>1100</b> of updating a view of a 3D message in response to movement data which may be performed in conjunction with the method <b>800</b> for generating a 3D message as described above, according to some example embodiments. The method <b>1100</b> may be embodied in computer-readable instructions for execution by one or more computer processors such that the operations of the method <b>1100</b> may be performed in part or in whole by the messaging client application <b>104</b>, particularly with respect to respective components of the annotation system <b>206</b> described above in <figref idref="DRAWINGS">FIG. <b>7</b></figref>; accordingly, the method <b>1100</b> is described below by way of example with reference thereto. However, it shall be appreciated that at least some of the operations of the method <b>1100</b> may be deployed on various other hardware configurations and the method <b>1100</b> is not intended to be limited to the messaging client application <b>104</b>.</p><p id="p-0156" num="0189">At operation <b>1102</b>, the sensor data receiving module <b>704</b> receives movement data from a movement sensor (e.g., gyroscope, motion sensor, touchscreen, etc.). In an embodiment, messaging client application <b>104</b> receives sensor data captured by a sensor of the client device <b>102</b>, such as a location or movement sensor.</p><p id="p-0157" num="0190">At operation <b>1104</b>, the 3D effects module <b>708</b> updates a view of a 3D message based on the movement data. In an embodiment, in response to movement data corresponding to a change in roll/yaw/pitch orientation of the client device, the 3D message has a corresponding change in how it is rendered by the 3D effects module <b>708</b> (e.g., input of &#x2212;10 degree roll will shift the perspective of the content +10 degree roll). In an embodiment, in response to not receiving movement data (e.g., roll/yaw/pitch) for a particular period of time (e.g., 3 seconds), the 3D effects module <b>708</b> updates the view of the 3D message by showing an animation with a subtle shift to pitch, roll and yaw to demonstrate depth and parallax. Additionally, in response to movement, the aforementioned animation will stop and the response to input is processed by the 3D effects module <b>708</b>.</p><p id="p-0158" num="0191">In an embodiment, as described before, additional 3D effects and/or augmented reality content generators (e.g., media overlays) can be applied to the image and/or depth data which changes the property of both the image texture, the geometry of the depth map as well as the depth dimension in front of the reconstructed model.</p><p id="p-0159" num="0192">At operation <b>1106</b>, the rendering module <b>710</b> renders the updated view of the 3D message. The updated view of the 3D is provided for display on a display of the client device (e.g., the client device <b>102</b>).</p><p id="p-0160" num="0193"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates example user interfaces depicting a carousel for selecting and applying an augmented reality content generator to media content (e.g., an image or video), and presenting the applied augmented reality content generator in the messaging client application <b>104</b> (or the messaging system <b>100</b>), according to some embodiments.</p><p id="p-0161" num="0194">In embodiments of such user interfaces, selectable graphical items <b>1250</b> may be presented in a carousel arrangement in which a portion or subset of the selectable graphical items <b>1250</b> are visible on a display screen of a given computing device (e.g., the client device <b>102</b>). By way of example, the user can utilize various inputs to rotate the selectable graphical items onto and off of the display screen in manner corresponding to a carousel providing a cyclic view of the graphical items. The carousel arrangement as provided in the user interfaces therefore allow multiple graphical items to occupy a particular graphical area on the display screen.</p><p id="p-0162" num="0195">In an example, respective AR experiences corresponding to different AR content generators can be organized into respective groups for including on the carousel arrangement thereby enabling rotating through media overlays by group. Although a carousel interface is provided as an example, it is appreciated that other graphical interfaces may be utilized. For example, a set of augmented reality content generators can include graphical list, scroll list, scroll graphic, or another graphical interface that enables navigation through various graphical items for selection, and the like. As used herein a carousel interface refers to display of graphical items in an arrangement similar to a circular list, thereby enabling navigation, based on user inputs (e.g., touch or gestures), through the circular list to select or scroll through the graphical items. In an example, a set of graphical items may be presented on a horizontal (or vertical) line or axis where each graphical item is represented as a particular thumbnail image (or icon, avatar, and the like). At any one time, some of the graphical items in the carousel interface may be hidden. If the user wants to view the hidden graphical items, in an example, the user may provide a user input (e.g., touch, gesture, and the like) to scroll through the graphical items in a particular direction (e.g., left, right, up, or down, and the like). Afterward, a subsequent view of the carousel interface is displayed where an animation is provided or rendered to present one or more additional graphical items for inclusion on the interface, and where some of the previously presented graphical items may be hidden in this subsequent view. In an embodiment, in this manner the user can navigate through the set of graphical items back and forth in a circular fashion. Thus, it is appreciated that the carousel interface can optimize screen space by displaying only a subset of images from a set of graphical items in a cyclic view.</p><p id="p-0163" num="0196">As described herein, augmented reality content generators can be included on the carousel arrangement (or another interface as discussed above) thereby enabling rotating through augmented reality content generators. Further, augmented reality content generators can be selected for inclusion based on various signals including, for example, time, date, geolocation, metadata associated with the media content, and the like. In the carousel arrangement of the user interface examples of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, respective augmented reality content generators are selected from available augmented reality content generators provided by the subject system.</p><p id="p-0164" num="0197">In the following discussion, the selectable graphical items correspond to respective augmented reality content generators that are applied to media content. As illustrated in user interface <b>1200</b>, selectable graphical items <b>1250</b>, corresponding to a carousel arrangement, includes a selectable graphical item <b>1251</b> in the display screen of an electronic device (e.g., the client device <b>102</b>). For example, a swipe gesture is received via a touch screen of the client device <b>102</b>, and in response to receiving the swipe gesture, navigation through the selectable graphical items is enabled to facilitate selection of a particular augmented reality content generator. The selectable graphical item <b>1251</b> is selected via a touch input (e.g., tap, or through a touch release at the end of the gesture) by the user. In this example, the selectable graphical item <b>1251</b> corresponds to a particular augmented reality content generator including 3D effects.</p><p id="p-0165" num="0198">In a second example of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, upon selection of the selectable graphical item <b>1251</b>, 3D effects <b>1260</b>, 3D effects <b>1262</b>, and 3D effects <b>1264</b> are rendered for display on the client device <b>102</b>. In this example, the 3D effects <b>1260</b> are particle-based effects that are rendered spatially and are moving in response to sensor information (e.g., gyroscopic data, and the like) on the viewer's electronic device (e.g., the client device <b>102</b>). The 3D effects <b>1262</b> can include color filtering and shader effects, which can also move in response to the sensor information. The 3D effects <b>1264</b> includes a 3D attachment (e.g., headband of roses), which in some examples refers to an wearable 3D object or model of some type, shape(s), color, texture, and the like. Thus, the corresponding augmented reality content generator includes a 3D object rendered in proximity to facial image data from the image data. Examples of coloring filtering include a daylight effect that matches a time of day for a location corresponding to where a message is created (e.g., based on included location metadata with the message). Examples of shader effects include, but are not limited to, the following:</p><p id="p-0166" num="0199">liquid moving around the screen</p><p id="p-0167" num="0200">glimmer effects</p><p id="p-0168" num="0201">bloom effects</p><p id="p-0169" num="0202">iridescent effects</p><p id="p-0170" num="0203">changing the background based on movement</p><p id="p-0171" num="0204">In a third example of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the user provides movement of the client device <b>102</b> in a display of 3D effects <b>1270</b> and 3D effects <b>1272</b> in the user interface <b>1200</b>. In this example, the 3D effects <b>1270</b>, 3D effects <b>1272</b>, and 3D effects <b>1274</b> are different versions, respectively, of the 3D effects <b>1260</b>, 3D effects <b>1262</b>, and 3D effects <b>1264</b> discussed in the second example. The 3D effects <b>1270</b>, 3D effects <b>1272</b>, and 3D effects <b>1274</b> have been rendered for display in response to the movement of the client device <b>102</b> (e.g., motion data from a gyroscopic sensor), and the a view of the aforementioned 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the particles, color filtering, and/or 3D attachment are changed in response to movement data.</p><p id="p-0172" num="0205">In an embodiment, a given client device (e.g., the client device <b>102</b>) selects a set of augmented reality content generators from available augmented reality content generator based on metadata associated with each respective augmented reality content generator, the metadata including information indicating a corresponding augmented reality content generator includes at least a 3D effect, the set of augmented reality content generators including at least one augmented reality content generator without a 3D effect and at least one augmented reality content generator with a 3D effect. The client device receives a selection of a selectable graphical item from the selectable graphical items, the selectable graphical item comprising an augmented reality content generator including a 3D effect. The client device captures image data and depth data using at least one camera of the client device. The at least one camera includes a first camera and a second camera, the first camera having a first focal length and the second camera having a second focal length, the first focal length and the second focal length being different. Further, the client device applies, to the image data and the depth data, the 3D effect based at least in part on the augmented reality content generator.</p><p id="p-0173" num="0206">In an embodiment, a disparity map is generated based at least in part on a distance between a first pixel from a first image captured by the first camera and a second pixel from a second image captured by the second camera, the first pixel and second pixel corresponding to a same object. The disparity map is an image where each pixel includes a distance value between a pixel from the first image to corresponding pixel from the second image. First pixels of a first object in the disparity map have a greater brightness than second pixels of a second object in the disparity map, the first pixels having a lesser depth values than second depth values of the second pixels. Further, in an example, a depth map is generated based at least in part on the disparity map.</p><p id="p-0174" num="0207">In an implementation, the aforementioned 3D effects and corresponding metadata are included in a message, which can be provided (e.g., shared) with another user of the messaging system <b>100</b>. This other user can receive the message, and upon being accessed, view the message for display on a receiving client device. The receiving client device, using similar or the same components as described in <figref idref="DRAWINGS">FIG. <b>7</b></figref> above, renders the 3D effects for display as specified in the received message. Further, this other user can provide movement to the receiving client device, which in response, initiates a re-rendering of the 3D effects in which the perspective of the scene that is being viewed by the viewer is changed based on the provided movement.</p><p id="p-0175" num="0208"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is an example illustrating capturing image information and generating a 3D message in a display of a client device, according to some example embodiments.</p><p id="p-0176" num="0209">In a first example, a view <b>1300</b> is provided for display on a display of a client device (e.g., the client device <b>102</b>). The view <b>1300</b> includes an image of a representation of a user's portrait (e.g., including a face). Selectable graphical element <b>1305</b> is provided for display in the view <b>1300</b>. In an embodiment, selectable graphical element <b>1305</b> corresponds to an augmented reality content generator for generating a 3D message and applying 3D effects and other image processing operations as discussed further herein. Upon selection of selectable graphical element <b>1305</b>, a second interface can be presented include an interface to capture an image (e.g., using a front-facing camera lens on the client device <b>102</b> with depth capturing capabilities) that initiates operations (as described elsewhere herein) to generate a 3D message for display.</p><p id="p-0177" num="0210">In a second example, a view <b>1350</b> includes a display of the 3D message captured in the first example in the view <b>1300</b> with a depth effect that introduces blurring into the background area (e.g., behind the portrait of the user) of the image. This display in the view <b>1350</b> can be updated to render the 3D effects associated with the 3D message in response to receiving sensor data (e.g., movement data, gyroscopic sensor data, and the like) in which the user is moving the client device. In an example, depending on the relative position of the client device with respect to a viewing user, the 3D effects can be updated for presentation on the display of the client device taking into account the change in position. For example, if the display of the client device is tilted in a particular manner to a first position, one set of 3D effects may be rendered and provided for display, and when the client device is moved to a different position, a second set of 3D effects may be rendered to update the image and indicate a change in viewing perspective, which provides a more 3D viewing experience to the viewing user.</p><p id="p-0178" num="0211">The following discussion relates to various techniques that are utilized to generate (e.g., as illustrated in the view <b>1350</b>) a given 3D message for rendering (e.g., as a preview on the client device, or at a different receiving device from the client device) in accordance with some embodiments.</p><p id="p-0179" num="0212"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is an example illustrating a raw depth map and a packed depth map, according to some example embodiments. The following examples are performed by a given client device as part of generating a given 3D message using at least raw input data (e.g., image data and depth data) provided by a camera of the client device.</p><p id="p-0180" num="0213">In a first example, an example of a raw depth map <b>1400</b> generated by a given client device (e.g., the client device <b>102</b>) based on raw data captured by the camera of the client device. Such raw data may include image data (e.g., photo image) and depth data from the camera. In an example, the client device converts a single channel floating point texture into a raw depth map that enables multiple passes of processing without losing precision. The client device can spread (e.g., send or transform portions of data) the single channel floating point texture into multiple lower precision channels which is illustrated in a second example as a packed depth map <b>1450</b>. In an embodiment, the raw depth map <b>1400</b> and the packed depth map <b>1450</b> have a lower resolution (e.g., lower number of total pixels) than the raw image data captured by the camera of the client device.</p><p id="p-0181" num="0214">The client device performs operations to separate a foreground with a given subject (e.g., portrait of a user) in a given image from a background in the same image. In an embodiment, the client device generates a segmentation mask using at least the raw depth map <b>1400</b> or the packed depth map <b>1450</b> described above. Alternatively, in an example, a segmentation mask may be included in the raw data captured by the camera when the capabilities of the client device include generating the segmentation mask as part of the image capturing process.</p><p id="p-0182" num="0215">Using the segmentation mask, the client device performs a diffusion based inpainting technique to remove the foreground subject from the background in the image, thereby generating a background inpainting image (e.g., without the foreground subject). In an example, a diffusion based inpainting technique attempts to fill in a missing region (e.g., the foreground subject) by propagating image content from the boundary to an interior of the missing region. Removing the foreground subject in this manner is advantageous at least because, after rendering the 3D message, when the camera of the client device is moved, it is possible that a &#x201c;ghost&#x201d; of the (portion of) image of the subject is seen in the background (e.g., resulting in an undesirable visual effect) when the foreground subject is not removed (e.g., when not performing the above operations).</p><p id="p-0183" num="0216">Further, after rendering the 3D message, when the client device is moved and in areas of the image with (large) changes in depth (e.g., between the foreground and background corresponding to a portion of a side of a user's face), if the segmentation mask and inpainting techniques are not performed as described herein, stretching artifacts can appear in the portion of the image with a user's face, and a boundary of the user's face or head can appear smeared between the foreground and background of the image. Moreover, without performing techniques described herein, a hard (e.g., visually pronounced) boundary between the foreground and the background of the image can appear as an unwanted visual effect when the client device is moved, making the image appear more artificial, unrealistic, distorted, and exaggerated.</p><p id="p-0184" num="0217"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is an example illustrating a depth inpainting mask and depth inpainting, according to some example embodiments. The examples in <figref idref="DRAWINGS">FIG. <b>15</b></figref> can be performed conjunctively with the examples in <figref idref="DRAWINGS">FIG. <b>14</b></figref> (e.g., after the operations in <figref idref="DRAWINGS">FIG. <b>14</b></figref> are performed).</p><p id="p-0185" num="0218">In an embodiment, the client device performs, using a depth inpainting mask, the same diffusion based inpainting technique (e.g., as discussed above with respect to background inpainting) to extend the foreground boundaries of the depth map (e.g., the packed depth map <b>1450</b>). As shown in a first example, a depth inpainting mask <b>1500</b> is generated using at least the depth map. In an example, the depth inpainting mask <b>1500</b> can be determined using approaches applied on the depth map including boundary detection, and machine learning techniques such as deep convolutional neural networks that perform classifications of each pixel in the depth map, encoder-decoder architecture for segmentation, fully convolutional networks, feature maps, deconvolutional networks, unsupervised feature learning, and the like.</p><p id="p-0186" num="0219">In a second example, image data <b>1550</b> (e.g., an inpainted depth map) shows a result of inpainting of the depth map using the depth inpainting mask <b>1500</b>. This is performed, in an example, to improve the appearance (e.g., more accurately render) of hair, ears, or shoulders. As mentioned before, the depth map can be lower resolution than the image data (e.g., the RBG image) and 3D effects or image processing operations applied to the depth map may be limited by the lower resolution. To better preserve fine details such as hair, the aforementioned depth map inpainting technique is provided by the subject technology. By using the depth map and the depth inpainting mask <b>1500</b>, the client device can determine and fill particular regions of the image (e.g., regions with missing or bad data) as depicted in the image data <b>1550</b>.</p><p id="p-0187" num="0220">In an example, the client device determines a depth map based at least in part on the depth data, generates a depth inpainting mask corresponding to a region of the depth map including facial depth data; and performs depth map inpainting of the depth map using at least the generated depth inpainting mask. The depth map could be a packed depth map in an embodiment.</p><p id="p-0188" num="0221">In an embodiment, the client device generates a depth normal map by determining a plane fitting around a neighborhood of each depth pixel in the depth map. This is advantageous for determining how light should interact with the surface e.g., to achieve interesting lighting effects and beautification effects. In an example, the generated depth normal map is a low resolution image but can be effectively utilized to provide such effects in the 3D message. In an example, a normal map uses RGB information (e.g., corresponding with the X, Y and Z axis in 3D space), and the RGB information can be utilized by the client device to determine the direction that surface normals (or &#x201c;normals&#x201d;) are oriented in for each polygon, where the client device uses the determined orientation of the surface normals to determine how to shade the polygon. Stated in another way, a normal map is an image that stores a direction at each pixel, and the directions are called normals. The red, green, and blue channels of the image can be used by the client device to control the direction of a normal of each pixel, and the normal map can be used to mimic high-resolution details on a low-resolution image.</p><p id="p-0189" num="0222">In an example, the client device generates a normal map of the depth map for applying a lighting effect to facial image data of the image data, and applies the lighting effect to the facial image data based at least in part on the normal map. In an example, the lighting effect includes at least two different colors, a first color from the two different colors being applied to a first portion of the facial image data, and a second color from the two different colors being applied to a second image of the facial image data.</p><p id="p-0190" num="0223">Using the generated normal map, the client device can apply beautification techniques (discussed further herein), lighting effects, and other image processing techniques to produce 3D effects that are convincing and natural looking to a viewing user of the 3D message. The client device generates a post-processed foreground image based at least on the aforementioned techniques involving the generated normal map.</p><p id="p-0191" num="0224">The client device generates a 3D message that includes various assets such as the post-processed foreground image, the post-processed depth map, the inpainted background image, and other metadata included (e.g., as discussed before). In an embodiment, a receiving device of the 3D message can utilize the included assets to render a view of the 3D message by generating a foreground mesh and a background mesh. The foreground mesh can be generated using the post-processed depth map and metadata related to camera intrinsic metadata (e.g., lens information, and the like as discussed before). The background mesh can be generated using at least the inpainted background image.</p><p id="p-0192" num="0225">The following discussion of <figref idref="DRAWINGS">FIG. <b>16</b></figref> to <figref idref="DRAWINGS">FIG. <b>21</b></figref> are examples of 3D effects and other graphical effects that are presented for display on a given client device (e.g., client device <b>102</b>) utilizing at least some of the aforementioned techniques.</p><p id="p-0193" num="0226"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is an example of 3D effects illustrating particles, a reflection on a graphical object (e.g., glasses), and a 3D attachment that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor), and an example of 3D effects illustrating post effects and a dynamic 3D attachment that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0194" num="0227">In a first example of <figref idref="DRAWINGS">FIG. <b>16</b></figref>, a view <b>1600</b> of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the particles, reflection and/or 3D attachment are changed in the view <b>1600</b> in response to movement data.</p><p id="p-0195" num="0228">As further shown, a second example of 3D effects illustrates a view <b>1650</b> post effects and a dynamic 3D attachment that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor). In this second example of <figref idref="DRAWINGS">FIG. <b>13</b></figref>, a view of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, 3D text (e.g., &#x201c;Santa Monica&#x201d;) changes positions in response to movement data.</p><p id="p-0196" num="0229"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is an example of a 3D effect illustrating dynamic artificial lighting that is rendered in response to movement data, and an example of 3D effects illustrating reflection/refraction on the glasses, a 3D attachment, and an animated sprite background that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0197" num="0230">In a first example of <figref idref="DRAWINGS">FIG. <b>17</b></figref>, a view <b>1700</b> of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the artificial lighting on the face changes in response to movement data.</p><p id="p-0198" num="0231">A second example of 3D effects in <figref idref="DRAWINGS">FIG. <b>17</b></figref> illustrates a view <b>1750</b> showing reflection/refraction on the glasses, a 3D attachment, and an animated sprite background that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor). In the second example of <figref idref="DRAWINGS">FIG. <b>17</b></figref>, a view of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the reflection/refraction on the glasses and the animated sprite background changes in response to movement data.</p><p id="p-0199" num="0232"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is an example of example of 3D effects illustrating a controlled particle system (e.g., animated projectile), and 2D and 3D attachments that are rendered in response to movement data, and an example of 3D effects illustrating joint animation on 3D attachments (e.g., bunny ears) that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor), according to some example embodiments.</p><p id="p-0200" num="0233">In a first example of <figref idref="DRAWINGS">FIG. <b>18</b></figref>, a view <b>1800</b> of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the animation of the controlled particle system changes and the attachments are moved in response to movement data.</p><p id="p-0201" num="0234">In a second example of <figref idref="DRAWINGS">FIG. <b>18</b></figref>, a view <b>1850</b> of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the animation of the 3D attachment changes in response to movement data.</p><p id="p-0202" num="0235"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is an example of 3D effects illustrating sprites, reflection on glasses, 2D and 3D attachments that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor), and an example of 3D effects illustrating reflection/refraction on the glasses, particles, and an animated background that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0203" num="0236">In a first example of <figref idref="DRAWINGS">FIG. <b>19</b></figref>, a view <b>1900</b> of 3D effects is updated (e.g., re-rendered) in response to newly received movement data which can change the perspective of the scene that is being viewed by the viewer. For example, the reflection on the glasses, sprites, and attachments change in response to movement data.</p><p id="p-0204" num="0237">In a second example of <figref idref="DRAWINGS">FIG. <b>19</b></figref>, a view <b>1950</b> of 3D effects includes a reflection/refraction on the glasses, particles, and background that change in response to movement data.</p><p id="p-0205" num="0238"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is an example of 3D effects illustrating an attachment and an animated foreground occluding the user's face that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor), and an example of 3D effects illustrating dynamic artificial lighting, particles, and reflection/refraction on the glasses that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0206" num="0239">In a first example of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, a view <b>2000</b> shows the occlusion effect (e.g., ice or frozen effect) with respect to the foreground changes in response to movement data.</p><p id="p-0207" num="0240">In a second example of <figref idref="DRAWINGS">FIG. <b>20</b></figref>, a view <b>2050</b> shows 3D effects illustrating dynamic artificial lighting, particles, and reflection/refraction on the glasses that are rendered in response to movement data (e.g., motion data from a gyroscopic sensor).</p><p id="p-0208" num="0241"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is an example of 3D effects illustrating retouch, post effects, 3D attachment, and particles that are rendered in response to movement data, and an example of 3D effects illustrating a 3D attachment, sprites, and particles that are rendered in response to movement data, according to some example embodiments.</p><p id="p-0209" num="0242">In a first example of <figref idref="DRAWINGS">FIG. <b>21</b></figref>, a view <b>2100</b> shows the sprites (e.g., petals from flowers) are animated, and particles that are changed in response to movement data.</p><p id="p-0210" num="0243">In a second example of <figref idref="DRAWINGS">FIG. <b>21</b></figref>, a view <b>2150</b> shows the 3D attachment (e.g., mask) that is animated and changes position, sprites are animated, and particles are changed in response to movement data.</p><p id="p-0211" num="0244"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a block diagram illustrating an example software architecture <b>2206</b>, which may be used in conjunction with various hardware architectures herein described. <figref idref="DRAWINGS">FIG. <b>22</b></figref> is a non-limiting example of a software architecture and it will be appreciated that many other architectures may be implemented to facilitate the functionality described herein. The software architecture <b>2206</b> may execute on hardware such as machine <b>2300</b> of <figref idref="DRAWINGS">FIG. <b>23</b></figref> that includes, among other things, processors <b>2304</b>, memory <b>2314</b>, and (input/output) I/O components <b>2318</b>. A representative hardware layer <b>2252</b> is illustrated and can represent, for example, the machine <b>2300</b> of <figref idref="DRAWINGS">FIG. <b>23</b></figref>. The representative hardware layer <b>2252</b> includes a processing unit <b>2254</b> having associated executable instructions <b>2204</b>. Executable instructions <b>2204</b> represent the executable instructions of the software architecture <b>2206</b>, including implementation of the methods, components, and so forth described herein. The hardware layer <b>2252</b> also includes memory and/or storage modules memory/storage <b>2256</b>, which also have executable instructions <b>2204</b>. The hardware layer <b>2252</b> may also comprise other hardware <b>2258</b>.</p><p id="p-0212" num="0245">In the example architecture of <figref idref="DRAWINGS">FIG. <b>22</b></figref>, the software architecture <b>2206</b> may be conceptualized as a stack of layers where each layer provides particular functionality. For example, the software architecture <b>2206</b> may include layers such as an operating system <b>2202</b>, libraries <b>2220</b>, frameworks/middleware <b>2218</b>, applications <b>2216</b>, and a presentation layer <b>2214</b>. Operationally, the applications <b>2216</b> and/or other components within the layers may invoke API calls <b>2208</b> through the software stack and receive a response as one or more messages <b>2212</b> as in response to the API calls <b>2208</b>. The layers illustrated are representative in nature and not all software architectures have all layers. For example, some mobile or special purpose operating systems may not provide a frameworks/middleware <b>2218</b>, while others may provide such a layer. Other software architectures may include additional or different layers.</p><p id="p-0213" num="0246">The operating system <b>2202</b> may manage hardware resources and provide common services. The operating system <b>2202</b> may include, for example, a kernel <b>2222</b>, services <b>2224</b>, and drivers <b>2226</b>. The kernel <b>2222</b> may act as an abstraction layer between the hardware and the other software layers. For example, the kernel <b>2222</b> may be responsible for memory management, processor management (e.g., scheduling), component management, networking, security settings, and so on. The services <b>2224</b> may provide other common services for the other software layers. The drivers <b>2226</b> are responsible for controlling or interfacing with the underlying hardware. For instance, the drivers <b>2226</b> include display drivers, camera drivers, Bluetooth&#xae; drivers, flash memory drivers, serial communication drivers (e.g., Universal Serial Bus (USB) drivers), Wi-Fi&#xae; drivers, audio drivers, power management drivers, and so forth depending on the hardware configuration.</p><p id="p-0214" num="0247">The libraries <b>2220</b> provide a common infrastructure that is used by the applications <b>2216</b> and/or other components and/or layers. The libraries <b>2220</b> provide functionality that allows other software components to perform tasks in an easier fashion than to interface directly with the underlying operating system <b>2202</b> functionality (e.g., kernel <b>2222</b>, services <b>2224</b> and/or drivers <b>2226</b>). The libraries <b>2220</b> may include system libraries <b>2244</b> (e.g., C standard library) that may provide functions such as memory allocation functions, string manipulation functions, mathematical functions, and the like. In addition, the libraries <b>2220</b> may include API libraries <b>2246</b> such as media libraries (e.g., libraries to support presentation and manipulation of various media format such as MPREG4, H.264, MP3, AAC, AMR, JPG, PNG), graphics libraries (e.g., an OpenGL framework that may be used to render 2D and 3D in a graphic content on a display), database libraries (e.g., SQLite that may provide various relational database functions), web libraries (e.g., WebKit that may provide web browsing functionality), and the like. The libraries <b>2220</b> may also include a wide variety of other libraries <b>2248</b> to provide many other APIs to the applications <b>2216</b> and other software components/modules.</p><p id="p-0215" num="0248">The frameworks/middleware <b>2218</b> (also sometimes referred to as middleware) provide a higher-level common infrastructure that may be used by the applications <b>2216</b> and/or other software components/modules. For example, the frameworks/middleware <b>2218</b> may provide various graphic user interface (GUI) functions, high-level resource management, high-level location services, and so forth. The frameworks/middleware <b>2218</b> may provide a broad spectrum of other APIs that may be used by the applications <b>2216</b> and/or other software components/modules, some of which may be specific to a particular operating system <b>2202</b> or platform.</p><p id="p-0216" num="0249">The applications <b>2216</b> include built-in applications <b>2238</b> and/or third-party applications <b>2240</b>. Examples of representative built-in applications <b>2238</b> may include, but are not limited to, a contacts application, a browser application, a book reader application, a location application, a media application, a messaging application, and/or a game application. Third-party applications <b>2240</b> may include an application developed using the ANDROID&#x2122; or JOS&#x2122; software development kit (SDK) by an entity other than the vendor of the particular platform, and may be mobile software running on a mobile operating system such as IOS&#x2122; ANDROID&#x2122;, WINDOWS&#xae; Phone, or other mobile operating systems. The third-party applications <b>2240</b> may invoke the API calls <b>2208</b> provided by the mobile operating system (such as operating system <b>2202</b>) to facilitate functionality described herein.</p><p id="p-0217" num="0250">The applications <b>2216</b> may use built in operating system functions (e.g., kernel <b>2222</b>, services <b>2224</b> and/or drivers <b>2226</b>), libraries <b>2220</b>, and frameworks/middleware <b>2218</b> to create user interfaces to interact with users of the system. Alternatively, or additionally, in some systems interactions with a user may occur through a presentation layer, such as presentation layer <b>2214</b>. In these systems, the application/component &#x201c;logic&#x201d; can be separated from the aspects of the application/component that interact with a user.</p><p id="p-0218" num="0251"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a block diagram illustrating components of a machine <b>2300</b>, according to some example embodiments, able to read instructions from a machine-readable medium (e.g., a machine-readable storage medium) and perform any one or more of the methodologies discussed herein. Specifically, <figref idref="DRAWINGS">FIG. <b>23</b></figref> shows a diagrammatic representation of the machine <b>2300</b> in the example form of a computer system, within which instructions <b>2310</b> (e.g., software, a program, an application, an applet, an app, or other executable code) for causing the machine <b>2300</b> to perform any one or more of the methodologies discussed herein may be executed. As such, the instructions <b>2310</b> may be used to implement modules or components described herein. The instructions <b>2310</b> transform the general, non-programmed machine <b>2300</b> into a particular machine <b>2300</b> programmed to carry out the described and illustrated functions in the manner described. In alternative embodiments, the machine <b>2300</b> operates as a standalone device or may be coupled (e.g., networked) to other machines. In a networked deployment, the machine <b>2300</b> may operate in the capacity of a server machine or a client machine in a server-client network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine <b>2300</b> may comprise, but not be limited to, a server computer, a client computer, a personal computer (PC), a tablet computer, a laptop computer, a netbook, a set-top box (STB), a personal digital assistant (PDA), an entertainment media system, a cellular telephone, a smart phone, a mobile device, a wearable device (e.g., a smart watch), a smart home device (e.g., a smart appliance), other smart devices, a web appliance, a network router, a network switch, a network bridge, or any machine capable of executing the instructions <b>2310</b>, sequentially or otherwise, that specify actions to be taken by machine <b>2300</b>. Further, while only a single machine <b>2300</b> is illustrated, the term &#x201c;machine&#x201d; shall also be taken to include a collection of machines that individually or jointly execute the instructions <b>2310</b> to perform any one or more of the methodologies discussed herein.</p><p id="p-0219" num="0252">The machine <b>2300</b> may include processors <b>2304</b> (e.g., processor <b>2308</b> to processor <b>2312</b>), memory/storage <b>2306</b>, and I/O components <b>2318</b>, which may be configured to communicate with each other such as via a bus <b>2302</b>. The memory/storage <b>2306</b> may include a memory <b>2314</b>, such as a main memory, or other memory storage, and a storage unit <b>2316</b>, both accessible to the processors <b>2304</b> such as via the bus <b>2302</b>. The storage unit <b>2316</b> and memory <b>2314</b> store the instructions <b>2310</b> embodying any one or more of the methodologies or functions described herein. The instructions <b>2310</b> may also reside, completely or partially, within the memory <b>2314</b>, within the storage unit <b>2316</b>, within at least one of the processors <b>2304</b> (e.g., within the processor's cache memory), or any suitable combination thereof, during execution thereof by the machine <b>2300</b>. Accordingly, the memory <b>2314</b>, the storage unit <b>2316</b>, and the memory of processors <b>2304</b> are examples of machine-readable media.</p><p id="p-0220" num="0253">The I/O components <b>2318</b> may include a wide variety of components to receive input, provide output, produce output, transmit information, exchange information, capture measurements, and so on. The specific I/O components <b>2318</b> that are included in a particular machine <b>2300</b> will depend on the type of machine. For example, portable machines such as mobile phones will likely include a touch input device or other such input mechanisms, while a headless server machine will likely not include such a touch input device. It will be appreciated that the I/O components <b>2318</b> may include many other components that are not shown in <figref idref="DRAWINGS">FIG. <b>23</b></figref>. The I/O components <b>2318</b> are grouped according to functionality merely for simplifying the following discussion and the grouping is in no way limiting. In various example embodiments, the I/O components <b>2318</b> may include output components <b>2326</b> and input components <b>2328</b>. The output components <b>2326</b> may include visual components (e.g., a display such as a plasma display panel (PDP), a light emitting diode (LED) display, a liquid crystal display (LCD), a projector, or a cathode ray tube (CRT)), acoustic components (e.g., speakers), haptic components (e.g., a vibratory motor, resistance mechanisms), other signal generators, and so forth. The input components <b>2328</b> may include alphanumeric input components (e.g., a keyboard, a touch screen configured to receive alphanumeric input, a photo-optical keyboard, or other alphanumeric input components), point based input components (e.g., a mouse, a touchpad, a trackball, a joystick, a motion sensor, or other pointing instrument), tactile input components (e.g., a physical button, a touch screen that provides location and/or force of touches or touch gestures, or other tactile input components), audio input components (e.g., a microphone), and the like.</p><p id="p-0221" num="0254">In further example embodiments, the I/O components <b>2318</b> may include biometric components <b>2330</b>, motion components <b>2334</b>, environmental components <b>2336</b>, or position components <b>2338</b> among a wide array of other components. For example, the biometric components <b>2330</b> may include components to detect expressions (e.g., hand expressions, facial expressions, vocal expressions, body gestures, or eye tracking), measure biosignals (e.g., blood pressure, heart rate, body temperature, perspiration, or brain waves), identify a person (e.g., voice identification, retinal identification, facial identification, fingerprint identification, or electroencephalogram based identification), and the like. The motion components <b>2334</b> may include acceleration sensor components (e.g., accelerometer), gravitation sensor components, rotation sensor components (e.g., gyroscope), and so forth. The environmental components <b>2336</b> may include, for example, illumination sensor components (e.g., photometer), temperature sensor components (e.g., one or more thermometer that detect ambient temperature), humidity sensor components, pressure sensor components (e.g., barometer), acoustic sensor components (e.g., one or more microphones that detect background noise), proximity sensor components (e.g., infrared sensors that detect nearby objects), gas sensors (e.g., gas detection sensors to detection concentrations of hazardous gases for safety or to measure pollutants in the atmosphere), or other components that may provide indications, measurements, or signals corresponding to a surrounding physical environment. The position components <b>2338</b> may include location sensor components (e.g., a GPS receiver component), altitude sensor components (e.g., altimeters or barometers that detect air pressure from which altitude may be derived), orientation sensor components (e.g., magnetometers), and the like.</p><p id="p-0222" num="0255">Communication may be implemented using a wide variety of technologies. The I/O components <b>2318</b> may include communication components <b>2340</b> operable to couple the machine <b>2300</b> to a network <b>2332</b> or devices <b>2320</b> via coupling <b>2324</b> and coupling <b>2322</b>, respectively. For example, the communication components <b>2340</b> may include a network interface component or other suitable device to interface with the network <b>2332</b>. In further examples, communication components <b>2340</b> may include wired communication components, wireless communication components, cellular communication components, Near Field Communication (NFC) components, Bluetooth&#xae; components (e.g., Bluetooth&#xae; Low Energy), Wi-Fi&#xae; components, and other communication components to provide communication via other modalities. The devices <b>2320</b> may be another machine or any of a wide variety of peripheral devices (e.g., a peripheral device coupled via a USB).</p><p id="p-0223" num="0256">Moreover, the communication components <b>2340</b> may detect identifiers or include components operable to detect identifiers. For example, the communication components <b>2340</b> may include Radio Frequency Identification (RFID) tag reader components, NFC smart tag detection components, optical reader components (e.g., an optical sensor to detect one-dimensional bar codes such as Universal Product Code (UPC) bar code, multi-dimensional bar codes such as Quick Response (QR) code, Aztec code, Data Matrix, Dataglyph, MaxiCode, PDF417, Ultra Code, UCC RSS-2D bar code, and other optical codes), or acoustic detection components (e.g., microphones to identify tagged audio signals). In addition, a variety of information may be derived via the communication components <b>2340</b>, such as, location via Internet Protocol (IP) geo-location, location via Wi-Fi&#xae; signal triangulation, location via detecting a NFC beacon signal that may indicate a particular location, and so forth.</p><p id="p-0224" num="0257">The following discussion relates to various terms or phrases that are mentioned throughout the subject disclosure.</p><p id="p-0225" num="0258">&#x201c;Signal Medium&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying the instructions for execution by a machine and includes digital or analog communications signals or other intangible media to facilitate communication of software or data. The term &#x201c;signal medium&#x201d; shall be taken to include any form of a modulated data signal, carrier wave, and so forth. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a matter as to encode information in the signal. The terms &#x201c;transmission medium&#x201d; and &#x201c;signal medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><p id="p-0226" num="0259">&#x201c;Communication Network&#x201d; refers to one or more portions of a network that may be an ad hoc network, an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a wireless WAN (WWAN), a metropolitan area network (MAN), the Internet, a portion of the Internet, a portion of the Public Switched Telephone Network (PSTN), a plain old telephone service (POTS) network, a cellular telephone network, a wireless network, a Wi-Fi&#xae; network, another type of network, or a combination of two or more such networks. For example, a network or a portion of a network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access (CDMA) connection, a Global System for Mobile communications (GSM) connection, or other types of cellular or wireless coupling. In this example, the coupling may implement any of a variety of types of data transfer technology, such as Single Carrier Radio Transmission Technology (1&#xd7;RTT), Evolution-Data Optimized (EVDO) technology, General Packet Radio Service (GPRS) technology, Enhanced Data rates for GSM Evolution (EDGE) technology, third Generation Partnership Project (3GPP) including 3G, fourth generation wireless (4G) networks, Universal Mobile Telecommunications System (UMTS), High Speed Packet Access (HSPA), Worldwide Interoperability for Microwave Access (WiMAX), Long Term Evolution (LTE) standard, others defined by various standard-setting organizations, other long-range protocols, or other data transfer technology.</p><p id="p-0227" num="0260">&#x201c;Processor&#x201d; refers to any circuit or virtual circuit (a physical circuit emulated by logic executing on an actual processor) that manipulates data values according to control signals (e.g., &#x201c;commands&#x201d;, &#x201c;op codes&#x201d;, &#x201c;machine code&#x201d;, etc.) and which produces corresponding output signals that are applied to operate a machine. A processor may, for example, be a Central Processing Unit (CPU), a Reduced Instruction Set Computing (RISC) processor, a Complex Instruction Set Computing (CISC) processor, a Graphics Processing Unit (GPU), a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Radio-Frequency Integrated Circuit (RFIC) or any combination thereof. A processor may further be a multi-core processor having two or more independent processors (sometimes referred to as &#x201c;cores&#x201d;) that may execute instructions contemporaneously.</p><p id="p-0228" num="0261">&#x201c;Machine-Storage Medium&#x201d; refers to a single or multiple storage devices and/or media (e.g., a centralized or distributed database, and/or associated caches and servers) that store executable instructions, routines and/or data. The term shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media, including memory internal or external to processors. Specific examples of machine-storage media, computer-storage media and/or device-storage media include non-volatile memory, including by way of example semiconductor memory devices, e.g., erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), FPGA, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks The terms &#x201c;machine-storage medium,&#x201d; &#x201c;device-storage medium,&#x201d; &#x201c;computer-storage medium&#x201d; mean the same thing and may be used interchangeably in this disclosure. The terms &#x201c;machine-storage media,&#x201d; &#x201c;computer-storage media,&#x201d; and &#x201c;device-storage media&#x201d; specifically exclude carrier waves, modulated data signals, and other such media, at least some of which are covered under the term &#x201c;signal medium.&#x201d;</p><p id="p-0229" num="0262">&#x201c;Component&#x201d; refers to a device, physical entity, or logic having boundaries defined by function or subroutine calls, branch points, APIs, or other technologies that provide for the partitioning or modularization of particular processing or control functions. Components may be combined via their interfaces with other components to carry out a machine process. A component may be a packaged functional hardware unit designed for use with other components and a part of a program that usually performs a particular function of related functions. Components may constitute either software components (e.g., code embodied on a machine-readable medium) or hardware components. A &#x201c;hardware component&#x201d; is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments, one or more computer systems (e.g., a standalone computer system, a client computer system, or a server computer system) or one or more hardware components of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware component that operates to perform certain operations as described herein. A hardware component may also be implemented mechanically, electronically, or any suitable combination thereof. For example, a hardware component may include dedicated circuitry or logic that is permanently configured to perform certain operations. A hardware component may be a special-purpose processor, such as a field-programmable gate array (FPGA) or an application specific integrated circuit (ASIC). A hardware component may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example, a hardware component may include software executed by a general-purpose processor or other programmable processor. Once configured by such software, hardware components become specific machines (or specific components of a machine) uniquely tailored to perform the configured functions and are no longer general-purpose processors. It will be appreciated that the decision to implement a hardware component mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software), may be driven by cost and time considerations. Accordingly, the phrase &#x201c;hardware component&#x201d; (or &#x201c;hardware-implemented component&#x201d;) should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. Considering embodiments in which hardware components are temporarily configured (e.g., programmed), each of the hardware components need not be configured or instantiated at any one instance in time. For example, where a hardware component comprises a general-purpose processor configured by software to become a special-purpose processor, the general-purpose processor may be configured as respectively different special-purpose processors (e.g., comprising different hardware components) at different times. Software accordingly configures a particular processor or processors, for example, to constitute a particular hardware component at one instance of time and to constitute a different hardware component at a different instance of time. Hardware components can provide information to, and receive information from, other hardware components. Accordingly, the described hardware components may be regarded as being communicatively coupled. Where multiple hardware components exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) between or among two or more of the hardware components. In embodiments in which multiple hardware components are configured or instantiated at different times, communications between such hardware components may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware components have access. For example, one hardware component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware component may then, at a later time, access the memory device to retrieve and process the stored output. Hardware components may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information). The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented components that operate to perform one or more operations or functions described herein. As used herein, &#x201c;processor-implemented component&#x201d; refers to a hardware component implemented using one or more processors. Similarly, the methods described herein may be at least partially processor-implemented, with a particular processor or processors being an example of hardware. For example, at least some of the operations of a method may be performed by one or more processors or processor-implemented components. Moreover, the one or more processors may also operate to support performance of the relevant operations in a &#x201c;cloud computing&#x201d; environment or as a &#x201c;software as a service&#x201d; (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), with these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., an API). The performance of certain of the operations may be distributed among the processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processors or processor-implemented components may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other example embodiments, the processors or processor-implemented components may be distributed across a number of geographic locations.</p><p id="p-0230" num="0263">&#x201c;Carrier Signal&#x201d; refers to any intangible medium that is capable of storing, encoding, or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible media to facilitate communication of such instructions. Instructions may be transmitted or received over a network using a transmission medium via a network interface device.</p><p id="p-0231" num="0264">&#x201c;Computer-Readable Medium&#x201d; refers to both machine-storage media and transmission media. Thus, the terms include both storage devices/media and carrier waves/modulated data signals. The terms &#x201c;machine-readable medium,&#x201d; &#x201c;computer-readable medium&#x201d; and &#x201c;device-readable medium&#x201d; mean the same thing and may be used interchangeably in this disclosure.</p><p id="p-0232" num="0265">&#x201c;Client Device&#x201d; refers to any machine that interfaces to a communications network to obtain resources from one or more server systems or other client devices. A client device may be, but is not limited to, a mobile phone, desktop computer, laptop, portable digital assistants (PDAs), smartphones, tablets, ultrabooks, netbooks, laptops, multi-processor systems, microprocessor-based or programmable consumer electronics, game consoles, set-top boxes, or any other communication device that a user may use to access a network. In the subject disclosure, a client device is also referred to as an &#x201c;electronic device.&#x201d;</p><p id="p-0233" num="0266">&#x201c;Ephemeral Message&#x201d; refers to a message that is accessible for a time-limited duration. An ephemeral message may be a text, an image, a video and the like. The access time for the ephemeral message may be set by the message sender. Alternatively, the access time may be a default setting or a setting specified by the recipient. Regardless of the setting technique, the message is transitory.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>receiving, at a client device, a selection of a selectable graphical item from a plurality of selectable graphical items, the selectable graphical item comprising an augmented reality content generator for applying a 3D effect, the 3D effect including at least one beautification operation, the beautification operation comprising modifying image data, the image data including a region corresponding to a representation of a face, the beautification operation further comprising using a machine learning model for at least one of smoothing blemishes or preserving facial skin texture;</claim-text><claim-text>applying, to image data and depth data, the 3D effect including the at least one beautification operation based at least in part on the augmented reality content generator, the applying, to the image data and the depth data, the 3D effect comprising:<claim-text>generating a depth map using at least the depth data,</claim-text><claim-text>generating a segmentation mask based at least on the image data, and</claim-text><claim-text>performing background inpainting and blurring of the image data using at least the segmentation mask to generate background inpainted image data; and</claim-text></claim-text><claim-text>generating a 3D message based at least in part on the applied 3D effect including the at least one beautification operation.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein applying, to the image data and the depth data, the 3D effect comprises:<claim-text>generating a packed depth map based at least in part on the depth map, the generating the packed depth map comprising:</claim-text><claim-text>converting a single channel floating point texture to a raw depth map, and</claim-text><claim-text>generating multiple channels based at least in part on the raw depth map; and</claim-text><claim-text>performing the beautification operation on a particular region of at least the image data including facial image data, the beautification operation comprising at least one of smoothing, lighting adjustment, or color modification.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the beautification operation further comprises utilizing a portrait segmentation mask when applying the beautification operation to the image data including the region corresponding to the representation of the face, and the machine learning model comprises one of a convolutional neural network or a generative adversarial network.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining the depth map based at least in part on the depth data;</claim-text><claim-text>generating a depth inpainting mask corresponding to a respective region of the depth map including facial depth data; and</claim-text><claim-text>performing depth map inpainting of the depth map using at least the generated depth inpainting mask.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the depth map comprises a packed depth map.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the packed depth map has a lower resolution than the image data.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>generating a normal map of the depth map for applying a lighting effect to facial image data of the image data; and</claim-text><claim-text>applying the lighting effect to the facial image data based at least in part on the normal map.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the lighting effect comprises at least two different colors, a first color from the two different colors being applied to a first portion of the facial image data, and a second color from the two different colors being applied to a second image of the facial image data.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>capturing image data and depth data using a camera of the client device;</claim-text><claim-text>causing display of an interface comprising the plurality of selectable graphical items, each selectable graphical item corresponding to a respective augmented reality content generator of a set of augmented reality content generators; and</claim-text><claim-text>rendering a view of the 3D message based at least in part on the applied 3D effect including the at least one beautification operation.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>receiving a swipe gesture via a touch screen of the client device; and</claim-text><claim-text>in response to receiving the swipe gesture, causing navigation through the plurality of selectable graphical items.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system comprising:<claim-text>a processor; and</claim-text><claim-text>a memory including instructions that, when executed by the processor, cause the processor to perform operations comprising:</claim-text><claim-text>receiving, at a client device, a selection of a selectable graphical item from a plurality of selectable graphical items, the selectable graphical item comprising an augmented reality content generator for applying a 3D effect, the 3D effect including at least one beautification operation, the beautification operation comprising modifying image data, the image data including a region corresponding to a representation of a face, the beautification operation further comprising using a machine learning model for at least one of smoothing blemishes or preserving facial skin texture;</claim-text><claim-text>applying, to image data and depth data, the 3D effect including the at least one beautification operation based at least in part on the augmented reality content generator, the applying, to the image data and the depth data, the 3D effect comprising:<claim-text>generating a depth map using at least the depth data,</claim-text><claim-text>generating a segmentation mask based at least on the image data, and</claim-text><claim-text>performing background inpainting and blurring of the image data using at least the segmentation mask to generate background inpainted image data; and</claim-text></claim-text><claim-text>generating a 3D message based at least in part on the applied 3D effect including the at least one beautification operation.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein applying, to the image data and the depth data, the 3D effect comprises:<claim-text>generating a packed depth map based at least in part on the depth map, the generating the packed depth map comprising:</claim-text><claim-text>converting a single channel floating point texture to a raw depth map, and</claim-text><claim-text>generating multiple channels based at least in part on the raw depth map; and</claim-text><claim-text>performing the beautification operation on a particular region of at least the image data including facial image data, the beautification operation comprising at least one of smoothing, lighting adjustment, or color modification.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the beautification operation further comprises utilizing a portrait segmentation mask when applying the beautification operation to the image data including the region corresponding to the representation of the face, and the machine learning model comprises one of a convolutional neural network or a generative adversarial network.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:<claim-text>determining the depth map based at least in part on the depth data;</claim-text><claim-text>generating a depth inpainting mask corresponding to a respective region of the depth map including facial depth data; and</claim-text><claim-text>performing depth map inpainting of the depth map using at least the generated depth inpainting mask.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the depth map comprises a packed depth map.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the packed depth map has a lower resolution than the image data.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the operations further comprise:<claim-text>generating a normal map of the depth map for applying a lighting effect to facial image data of the image data; and</claim-text><claim-text>applying the lighting effect to the facial image data based at least in part on the normal map.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the lighting effect comprises at least two different colors, a first color from the two different colors being applied to a first portion of the facial image data, and a second color from the two different colors being applied to a second image of the facial image data.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:<claim-text>capturing image data and depth data using a camera of the client device;</claim-text><claim-text>causing display of an interface comprising the plurality of selectable graphical items, each selectable graphical item corresponding to a respective augmented reality content generator of a set of augmented reality content generators; and</claim-text><claim-text>rendering a view of the 3D message based at least in part on the applied 3D effect including the at least one beautification operation.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer-readable medium comprising instructions, which when executed by a computing device, cause the computing device to perform operations comprising:<claim-text>receiving, at a client device, a selection of a selectable graphical item from a plurality of selectable graphical items, the selectable graphical item comprising an augmented reality content generator for applying a 3D effect, the 3D effect including at least one beautification operation, the beautification operation comprising modifying image data, the image data including a region corresponding to a representation of a face, the beautification operation further comprising using a machine learning model for at least one of smoothing blemishes or preserving facial skin texture;</claim-text><claim-text>applying, to image data and depth data, the 3D effect including the at least one beautification operation based at least in part on the augmented reality content generator, the applying, to the image data and the depth data, the 3D effect comprising:<claim-text>generating a depth map using at least the depth data,</claim-text><claim-text>generating a segmentation mask based at least on the image data, and</claim-text><claim-text>performing background inpainting and blurring of the image data using at least the segmentation mask to generate background inpainted image data; and</claim-text></claim-text><claim-text>generating a 3D message based at least in part on the applied 3D effect including the at least one beautification operation.</claim-text></claim-text></claim></claims></us-patent-application>