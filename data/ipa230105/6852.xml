<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006853A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006853</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942948</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>18</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0893</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>563</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>1886</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>4633</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>185</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0893</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>563</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">TRAFFIC REPLICATION IN OVERLAY NETWORKS SPANNING MULTIPLE SITES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16983344</doc-number><date>20200803</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11456888</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942948</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16445030</doc-number><date>20190618</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10778457</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16983344</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>VMware, Inc.</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Mathew</last-name><first-name>Subin Cyriac</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Tessmer</last-name><first-name>Alexander</first-name><address><city>Mountain View</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Raman</last-name><first-name>Chidambareswaran</first-name><address><city>Sunnyvale</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Some embodiments provide a method of replicating messages for a logical network. At a particular tunnel endpoint in a particular datacenter, the method receives a message to be replicated to members of a replication group. The method replicates the message to a set of tunnel endpoints of the replication group located in a same segment of the particular datacenter as the particular tunnel endpoint. The method replicates the message to a first set of proxy endpoints of the replication group, each of which is located in a different segment of the particular datacenter and for replicating the message to tunnel endpoints located in its respective segment of the particular datacenter. The method replicates the message to a second set of proxy endpoints of the replication group, each of which is located in a different datacenter and for replicating the message to tunnel endpoints located in its respective datacenter.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="110.15mm" wi="158.75mm" file="US20230006853A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="216.32mm" wi="154.35mm" orientation="landscape" file="US20230006853A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="140.04mm" wi="81.79mm" file="US20230006853A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="241.47mm" wi="158.50mm" file="US20230006853A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="188.64mm" wi="159.26mm" file="US20230006853A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="239.35mm" wi="139.45mm" file="US20230006853A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="216.41mm" wi="82.97mm" file="US20230006853A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="232.24mm" wi="148.25mm" orientation="landscape" file="US20230006853A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="200.24mm" wi="150.45mm" orientation="landscape" file="US20230006853A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Multicast is the delivery of a message or information to a group of destination machines simultaneously in a single transmission from the source. Copies of the message are automatically replicated and forwarded by other network elements. Forwarding and replicating multicast packets are usually done by intermediate nodes in the network&#x2014;switches fulfill multicast forwarding inside a layer 2 network while (multicast) routers fulfill multicast routing across layer 3 networks. Typically, switches that support multicast use IGMP (Internet Group Management Protocol) snooping, while routers that support multicast use PIM (Protocol Independent Multicast) as the routing protocol.</p><p id="p-0003" num="0002">Numerous multicast applications have been developed and deployed, including financial software, video services, etc. A use case worth noting is overlay based network virtualization (layer 2 tunneling), referred to as VXLAN. VXLAN can support a large number of logical layer 2 networks over a physical IP network. It is based on MAC-over-UDP encapsulation, and requires an IP multicast group to be allocated for encapsulation of BUM (broadcast, unknown unicast, and multicast) traffic inside a logical network. As a result, a large number of multicast groups may be consumed, especially in a cloud environment in which each tenant may create a number of logical networks. These created logical networks and corresponding multicast groups may span across physical layer 3 networks, datacenters, and regions.</p><p id="p-0004" num="0003">Unfortunately, use of IP multicast is limited by a lack of infrastructure to support it. Low end switches and routers usually do not support IGMP and PIM, and they usually do not support a large number of multicast groups. Moreover, even when the physical network hardware has the capabilities to support multicast, users generally eschew enabling multicast in datacenter networks due to the complexity in management and scalability of IP multicast. Enabling multicast across datacenters and provider networks is even more difficult.</p><p id="p-0005" num="0004">What is needed is a network system for enabling a large number of multicast groups across physical networks that may include datacenters or provider networks. Such a network system should support network virtualization without relying on built-in multicast capabilities of the physical network, while nevertheless leverage the multicast capabilities offered by the physical network to achieve higher efficiency, even when multicast is not fully enabled in the physical network. Further, such a network system should minimize the amount of bandwidth used when transmitting multicast traffic between physical networks.</p><heading id="h-0002" level="1">BRIEF SUMMARY</heading><p id="p-0006" num="0005">Some embodiments of the invention provide a hierarchical method for scalable replication of messages (e.g., broadcast, unknown unicast, and multicast messages) for a logical overlay network (e.g., a VXLAN) spanning multiple physical underlay networks (e.g., datacenters). The logical network includes network endpoints (e.g., virtual machines, containers, etc.) that are the sources and destinations of network traffic. Each network endpoint is associated with a tunnel endpoint through which it sends traffic to and receives traffic from other network endpoints. When a tunnel endpoint located in a particular network segment of a particular physical network receives a message to be replicated to other logical network endpoints, in some embodiments the tunnel endpoint (i) replicates the message to other tunnel endpoints within the same network segment, (ii) replicates the message to a proxy tunnel endpoint for each of the other segments within the same physical network, and (iii) replicates the message to a proxy tunnel endpoint for each of the other physical networks. The tunnel endpoints receiving the message are responsible for forwarding the message to the logical network endpoints that require receipt of the message.</p><p id="p-0007" num="0006">Each of the tunnel endpoints may belong to one or more replication groups (e.g., multicast groups), and each group may be associated with a different logical network or logical network segment. Because the logical network spans multiple physical networks with multiple physical network segments (e.g., IP subnets, VLANs, multicast islands), a given replication group may have tunnel endpoint members located in different physical network segments and different physical networks. Thus, the proxy endpoints for each network segment replicate the message to other tunnel endpoints belonging to the replication group within their respective segments. Similarly, the proxy endpoints for each other physical network replicate the message to (i) the other tunnel endpoints belonging to the replication group within network segments of their respective physical networks and (ii) proxy endpoints for each network segment within their respective physical networks.</p><p id="p-0008" num="0007">As mentioned, in some embodiments the message is a broadcast, unknown-unicast or multicast (BUM) packet. In some embodiments, each network segment is able to support multicast traffic between the tunnel endpoints. In some embodiments, some or all of the network segments do not support multicast protocols, and instead use unicast protocols to replicate and forward multicast packets to each endpoint in the multicast group. Multicast replication of BUM traffic to different network segments using proxy endpoints is described in more detail in U.S. Pat. No. 9,432,204, which is incorporated herein by reference.</p><p id="p-0009" num="0008">In some embodiments, a tunnel endpoint or proxy endpoint receives the message from another tunnel endpoint (e.g., a proxy endpoint), and determines whether and where to replicate the message based on flags that are set in the message (e.g., in fields of an encapsulation header). For example, in some embodiments, if the message has no replication flags set, then the receiving tunnel endpoint does not perform any replication and only forwards the message to any logical network endpoints (e.g., VMs) that require the message. If the message header (e.g., the encapsulation header) has a segment replication flag set, then the receiving tunnel endpoint is a proxy endpoint for its segment and replicates the message to other tunnel endpoints in its network segment that belong to the replication group (sending these messages without any flags set). If the message header has a network replication flag set, then the receiving tunnel endpoint is a proxy endpoint for its physical network and replicates the message to (i) proxy endpoints for the other segments of its physical network (sending these messages with the segment replication flag set) and (ii) other tunnel endpoints in its network segment of its physical network (sending these messages without any flags set).</p><p id="p-0010" num="0009">When replicating the message, in some embodiments the receiving endpoint identifies (e.g., from the message header) which logical network and which replication group the message belongs to. For each selected endpoint to which the receiving endpoint must replicate the message, the receiving endpoint encapsulates the message with a header that includes its own address as the source address, the selected proxy endpoint as the destination address, a virtual network identifier (VNI) for the logical network associated with the message, a replication (e.g., multicast) group identifier, and the replication flags set as needed to ensure that the receiving endpoints do not perform redundant or unnecessary replication of the message after receiving it.</p><p id="p-0011" num="0010">In some embodiments, each tunnel endpoint belonging to a replication group individually selects the proxy endpoints that it uses for replicating messages to other network segments and other physical networks. To make these selections, in some embodiments each tunnel endpoint receives configuration information from a centralized network control system that identifies the other tunnel endpoints in each replication group to which the tunnel endpoint belongs, sorted into the network segments and physical networks in which each of the other tunnel endpoints is located. In other embodiments, this information may be exchanged directly between tunnel endpoints (e.g., using a distributed control plane protocol).</p><p id="p-0012" num="0011">Based on this configuration information (listing the tunnel endpoints belonging to the replication group, sorted by physical network and network segment), each tunnel endpoint in the group selects proxy endpoints for (i) each other physical network and (ii) each other network segment within its respective physical network. In some embodiments, in order to balance the traffic load and replication burden across the various endpoints, each tunnel endpoint randomly selects the proxy endpoint for each other physical network and each other network segment within its respective physical network using a probabilistic or other random selection algorithm. In other embodiments, the tunnel endpoints also receive traffic load or other statistics and use these to inform the proxy endpoint selection. If a tunnel endpoint receives an update to the list for a network segment or physical network, in some embodiments the tunnel endpoint re-selects the proxy endpoint for that updated network segment or physical network.</p><p id="p-0013" num="0012">As noted above, in some embodiments a tunnel endpoint may belong to more than one replication group (e.g., be associated with different logical networks or different logical network segments). If a tunnel endpoint belongs to multiple replication groups, then it may select different proxy endpoints for the different replication groups in the same segment or physical network. In addition, that tunnel endpoint may be selected as a proxy endpoint by other tunnel endpoints in multiple replication groups.</p><p id="p-0014" num="0013">In some embodiments, the physical networks include provider networks or datacenters, which may be located in different physical locations. These physical networks may in some embodiments also be grouped by geographic region or area. Network interconnections between different physical network groups may have higher cost, higher latency, and/or lower bandwidth than interconnections between physical networks in the same geographic region. Therefore, some embodiments also provide for additional levels of replication, i.e., for segments of a physical network, physical networks, and groups of physical networks (and groups of groups of physical networks, etc.). In such embodiments, each tunnel endpoint would also select proxy endpoints for each other group of physical networks, and the encapsulation header would include a third flag that could be set.</p><p id="p-0015" num="0014">The preceding Summary is intended to serve as a brief introduction to some embodiments of the invention. It is not meant to be an introduction or overview of all of the inventive subject matter disclosed in this document. The Detailed Description that follows and the Drawings that are referred to in the Detailed Description will further describe the embodiments described in the Summary as well as other embodiments. Accordingly, to understand all the embodiments described by this document, a full review of the Summary, Detailed Description and the Drawings is needed. Moreover, the claimed subject matters are not to be limited by the illustrative details in the Summary, Detailed Description and the Drawing, but rather are to be defined by the appended claims, because the claimed subject matters can be embodied in other specific forms without departing from the spirit of the subject matters.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0016" num="0015">The novel features of the invention are set forth in the appended claims. However, for purposes of explanation, several embodiments of the invention are set forth in the following figures.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> illustrates a network in which a tunnel endpoint replicates a data packet to all tunnel endpoints of a particular replication group across different segments and datacenters of the network.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>2</b></figref> conceptually illustrates a process performed by a tunnel endpoint in some embodiments when it receives a message for replication from a logical endpoint.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>3</b></figref> conceptually illustrates a process performed by a tunnel endpoint in some embodiments when it receives a message for replication from another tunnel endpoint (e.g., a proxy endpoint for a segment or a datacenter).</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of configuration information used by a tunnel endpoint to identify proxy endpoints.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b></figref> conceptually illustrates a process performed in some embodiments by a tunnel endpoint to select proxy endpoints for other segments and datacenters.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a network in which a tunnel endpoint also replicates a data packet to all tunnel endpoints of a particular replication group across different segments, datacenters, and datacenter groups of the network.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>7</b></figref> conceptually illustrates an electronic system with which some embodiments of the invention are implemented.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0024" num="0023">Some embodiments of the invention provide a hierarchical method for scalable replication of messages (e.g., broadcast, unknown unicast, and multicast messages) for a logical overlay network (e.g., a VXLAN) spanning multiple physical underlay networks (e.g., datacenters). The logical network includes network endpoints (e.g., virtual machines, containers, etc.) that are the sources and destinations of network traffic. Each network endpoint is associated with a tunnel endpoint through which it sends traffic to and receives traffic from other network endpoints. When a tunnel endpoint located in a particular network segment of a particular physical network receives a message to be replicated to other logical network endpoints, in some embodiments the tunnel endpoint (i) replicates the message to other tunnel endpoints within the same network segment, (ii) replicates the message to a proxy endpoint for each of the other segments within the same physical network, and (iii) replicates the message to a proxy endpoint for each of the other physical networks. The tunnel endpoints receiving the message are responsible for forwarding the message to the logical network endpoints that require receipt of the message.</p><p id="p-0025" num="0024">Each of the tunnel endpoints may belong to one or more replication groups (e.g., multicast groups), and each group may be associated with a different logical network or logical network segment. Because the logical network spans multiple physical networks with multiple physical network segments (e.g., IP subnets, VLANs, multicast islands), a given replication group may have tunnel endpoint members located in different physical network segments and different physical networks. Thus, the proxy endpoints for each network segment replicate the message to other tunnel endpoints belonging to the replication group within their respective segments. Similarly, the proxy endpoints for each other physical network replicate the message to (i) the other tunnel endpoints belonging to the replication group within network segments of their respective physical networks and (ii) proxy endpoints for each network segment within their respective physical networks.</p><p id="p-0026" num="0025">As mentioned, in some embodiments the message is a broadcast, unknown-unicast or multicast (BUM) packet. In some embodiments, each network segment is able to support multicast traffic between the tunnel endpoints. In some embodiments, some or all of the network segments do not support multicast protocols, and instead use unicast protocols to replicate and forward multicast packets to each endpoint in the multicast group. Multicast replication of BUM traffic to different network segments using proxy endpoints is described in more detail in U.S. Pat. No. 9,432,204, which is incorporated herein by reference.</p><p id="p-0027" num="0026">For some embodiments, <figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a network <b>100</b> that spans multiple datacenters <b>102</b> and <b>103</b>. At least one logical network is implemented in the network <b>100</b> across the multiple datacenters, and in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> a tunnel endpoint associated with one of the endpoints of the logical network replicates a data packet to all tunnel endpoints of a particular replication group across different segments and datacenters of the network <b>100</b>. The logical network is implemented by physical forwarding elements in the network <b>100</b> (e.g., software forwarding elements executing on host computers, hardware forwarding elements to which logical network endpoints connect, etc.) that also act as the tunnel endpoints for an overlay network. Each logical network, in some embodiments, is an abstraction of a network that allows for numerous independent and isolated networks to be implemented within the physical network <b>100</b>. For clarity, host computers and logical network endpoints are not shown in this figure.</p><p id="p-0028" num="0027">Each of the different logical networks implemented within the network <b>100</b> may span a single segment within a datacenter, multiple segments within multiple datacenters, both of the illustrated datacenters as well as additional datacenters not shown in the figure, etc. A logical network of some embodiments may be defined to include multiple logical forwarding elements (e.g., logical switches and logical routers), which are implemented by the physical forwarding elements of the network and also may span multiple segments and datacenters.</p><p id="p-0029" num="0028">As illustrated in the example of <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, the logical network is divided across two datacenters <b>102</b> and <b>103</b> located at different sites (e.g., different geographical locations). Each of these datacenters is divided into multiple physical segments; the first datacenter <b>102</b> is divided into segments <b>104</b> and <b>105</b>, while the second datacenter <b>103</b> is divided into segments <b>106</b> and <b>107</b>. There may be additional physical segments of each datacenter that are not shown. In some embodiments, each of the segments is a subnet, VLAN, or multicast island within the physical network of the datacenter. The segments in each datacenter exchange network traffic via the datacenter fabric (e.g. routers <b>108</b> and <b>109</b>), and the datacenters exchange traffic over a datacenter interconnect <b>110</b> (e.g. a wide area network (WAN) or the Internet).</p><p id="p-0030" num="0029">As illustrated, each of the network segments <b>104</b>-<b>107</b> includes a number of tunnel endpoints that receive and forward network data traffic. Specifically, segment <b>104</b> in datacenter <b>102</b> includes endpoints <b>111</b>-<b>116</b>, segment <b>105</b> in datacenter <b>102</b> includes endpoints <b>121</b>-<b>126</b>, segment <b>106</b> in datacenter <b>103</b> includes endpoints <b>131</b>-<b>136</b>, and segment <b>107</b> in datacenter <b>103</b> includes endpoints <b>141</b>-<b>146</b>.</p><p id="p-0031" num="0030">As mentioned, the physical forwarding elements of the network <b>100</b> also act as tunnel endpoints for forwarding logical network data packets through the network (as the network <b>100</b> includes additional forwarding elements, not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, that are not configured to implement the logical network). When one of the tunnel endpoint forwarding elements receives a data packet from a logical network endpoint (the sources and destinations of the data packets), it performs logical network processing to identify the destination(s) in the network <b>100</b> for the data packets, encapsulates the data packet, and transmits the data packet to the destination through the physical network of the datacenter(s).</p><p id="p-0032" num="0031">An example of a tunnel endpoint forwarding element <b>155</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. In some embodiments, the forwarding element <b>155</b> executes in virtualization software (not shown) on a host computer <b>160</b> connected to the network fabric of datacenter <b>102</b>, and is managed by a datacenter network controller cluster (not shown). Even though only a single forwarding element <b>155</b> is shown, in some embodiments a set of forwarding elements may execute on the host computer to collectively implement one or more logical networks. In this example, the forwarding element <b>155</b> implements logical forwarding elements (e.g., logical routers and logical switches) for logical networks A and B. Other forwarding elements (not shown) executing on the host computer, on other host computers in the same datacenter, and in other datacenters, also implement the same logical networks A and B and their logical forwarding elements.</p><p id="p-0033" num="0032">The forwarding element <b>155</b> is connected to virtual machines VM<b>1</b> <b>165</b> and VM<b>2</b> <b>170</b> belonging to logical network A, executing on the host computer <b>160</b> (i.e., on top of the virtualization software). In addition, a third virtual machine <b>175</b>, belonging to logical network B and also connected to the forwarding element <b>155</b>, executes on the host computer. The virtual machines are examples of network endpoints that exchange data traffic (e.g., packets) with other network endpoints in their respective logical network, and with external tunnel endpoints. Outgoing packet data from the VMs <b>165</b> and <b>170</b> is encapsulated by the tunnel endpoint forwarding element for delivery over the physical network <b>100</b>, with the encapsulation header including a logical network identifier (also referred to as a virtual network identifier) for logical network A. Incoming packet data is decapsulated by the tunnel endpoint forwarding element, which then performs logical network processing based on information in the encapsulation header (including the virtual network identifier) and the underlying packet in order to deliver the traffic to the correct network endpoint.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> also illustrates the replication of a data packet <b>150</b> that is sent by a logical network endpoint (not shown) connected to tunnel endpoint <b>111</b>, which is illustrated as solid black. The data packet <b>150</b> is to be replicated to all member endpoints of a replication group (e.g., because the data packet <b>150</b> is broadcast to all network endpoints connected to a particular logical switch or to any logical switch of a particular logical network). The members of this particular replication group includes endpoints <b>111</b>, <b>112</b>, <b>114</b>, <b>115</b>, <b>121</b>-<b>126</b>, <b>131</b>, <b>132</b>, <b>135</b>, <b>136</b>, <b>141</b>, and <b>144</b>-<b>146</b>, illustrated using diagonal lines in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Tunnel endpoints that are not illustrated as shaded do not belong to the replication group. Not all tunnel endpoints of a physical network segment belong to the same replication group, and tunnel endpoints may be members of more than one replication group. For example, though all tunnel endpoints located in network segment <b>105</b> belong to the replication group, only some of the tunnel endpoints in the other segments belong to the same group. In some embodiments, these other endpoints may belong to other replication groups, and some of the endpoints in the replication group may also belong to these other replication groups.</p><p id="p-0035" num="0034">The source tunnel endpoint <b>111</b> (i.e., the tunnel endpoint that receives the data packet from its source logical network endpoint) forwards the data packet <b>150</b> to any other logical network endpoints connected to that tunnel endpoint <b>111</b> (not shown). For instance, if the source logical network endpoint was VM <b>165</b> in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, then the tunnel endpoint <b>155</b> might forward the data packet to VM <b>170</b>. In addition, the source tunnel endpoint <b>111</b> is in the network segment <b>104</b>, and replicates (solid lines) the data packet <b>150</b> to other members of the replication group within the network segment <b>101</b>, namely to tunnel endpoints <b>112</b>, <b>114</b>, and <b>115</b>. These tunnel endpoints <b>112</b>, <b>114</b>, and <b>115</b> each forward the data packet <b>150</b> to their connected logical network endpoints (not shown). It should be noted that, in replicating a data packet to another tunnel endpoint, the source tunnel endpoint <b>111</b> encapsulates a copy of the data packet in a tunnel header (e.g., a VXLAN tunnel header) with a network address of the source tunnel endpoint <b>111</b> as the source address and a network address of the respective destination tunnel endpoint as the destination address. Thus, when the source tunnel endpoint sends the data packet <b>150</b> to tunnel endpoints <b>112</b>, <b>114</b>, and <b>115</b>, the same inner data packet <b>150</b> is sent with three different tunnel headers.</p><p id="p-0036" num="0035">The source tunnel endpoint <b>111</b> also replicates the same data packet <b>150</b> to member tunnel endpoints in network segments <b>105</b>-<b>107</b>. However, the source tunnel endpoint <b>111</b> does not forward the data packet <b>150</b> directly to all the member tunnel endpoints in these other network segments. Instead, the source tunnel endpoint <b>111</b> forwards (dotted line) the replication data packet <b>150</b> to a proxy endpoint in the other network segment <b>105</b> in its own datacenter <b>102</b> (e.g., via router <b>108</b>). Specifically, the source tunnel endpoint <b>111</b> has selected the endpoint <b>121</b> as the proxy endpoint for the network segment <b>105</b>. Proxy endpoint <b>121</b> is outlined with a thicker black border to indicate that it was selected as a proxy by source tunnel endpoint <b>111</b>. The proxy endpoint <b>121</b> then forwards (dotted lines) the data packet <b>150</b> to the other tunnel endpoints <b>122</b>-<b>126</b> in its own segment <b>105</b> that are members of the replication group. The tunnel endpoints <b>122</b>-<b>126</b> each forward the data packet <b>150</b> to their connected logical network endpoints (not shown). Again, as noted above, each time the data packet <b>150</b> is replicated, the sending tunnel endpoint encapsulates the data packet <b>150</b> in a tunnel header.</p><p id="p-0037" num="0036">In order to forward the data packet <b>150</b> to tunnel endpoints in the other datacenter <b>103</b>, the source tunnel endpoint <b>111</b> selects a single proxy endpoint in the datacenter <b>103</b> (in this case, the proxy endpoint <b>141</b> in segment <b>107</b>). Proxy endpoint <b>141</b> is also outlined with a thicker black border to indicate that it was selected as a proxy by source tunnel endpoint <b>111</b>. The source tunnel endpoint forwards (dashed line) the data packet to the datacenter proxy endpoint <b>141</b> via the datacenter interconnect <b>110</b> and router <b>109</b>. The proxy endpoint <b>141</b> forwards the data packet <b>150</b> to its connected logical network endpoints (not shown), and forwards (dashed lines) the data packet <b>150</b> to the local tunnel endpoints <b>144</b>-<b>146</b> that are members of the replication group in the same segment <b>107</b>. The tunnel endpoints <b>144</b>-<b>146</b> each forward the data packet <b>150</b> to their connected logical network endpoints (not shown).</p><p id="p-0038" num="0037">In addition, the proxy endpoint <b>141</b> selects a proxy endpoint <b>131</b> in the other segment <b>106</b> of its datacenter <b>103</b> and forwards (dot-dash line) the packet to this proxy endpoint <b>131</b>. The proxy endpoint <b>131</b> then forwards (dot-dash lines) the data packet <b>150</b> to the other tunnel endpoints <b>132</b>, <b>135</b>, and <b>136</b> in its segment <b>106</b> that are members of the replication group. The endpoints <b>131</b>, <b>132</b>, <b>135</b>, and <b>136</b> each forward the data packet <b>150</b> to their connected logical network endpoints (not shown).</p><p id="p-0039" num="0038">In this example, source tunnel endpoint <b>111</b> only selected two proxy endpoints, namely tunnel endpoint <b>121</b> and <b>141</b>, both of which are outlined with a thicker border. The tunnel endpoint <b>131</b> also served as a proxy endpoint, but was selected by proxy endpoint <b>141</b> rather than source tunnel endpoint <b>111</b> (this proxy endpoint <b>131</b> is not outlined with the thicker border, to distinguish it from the proxies selected by the source tunnel endpoint <b>111</b>). From the perspective of source tunnel endpoint <b>111</b>, only one proxy endpoint per segment in its own datacenter is required to be selected, and only one proxy endpoint per other datacenter. These selected proxies perform their own assessment of the network topology and select proxies of their own, in hierarchical fashion. Source tunnel endpoint <b>111</b> does not know or need to know that tunnel endpoint <b>131</b> is also a proxy, as that responsibility has been delegated to the next level of the hierarchy to proxy endpoint <b>141</b>. This distributed responsibility allows the technique to scale, to cases with many more tunnel endpoints, segments, and datacenters than the simplified example illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0040" num="0039">By using proxies in different network segments in the same datacenter <b>102</b>, the source tunnel endpoint <b>111</b> is able to forward the data packet <b>150</b> with minimal computing and bandwidth cost, since there could potentially be many other segments and each segment could potentially have many members of the replication group. In the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, source tunnel endpoint <b>111</b> only needs to send a single packet to a single endpoint <b>121</b> instead of sending six different copies of the same packet over the router <b>108</b>. Using proxies also allows the replication and forwarding of messages to fully utilize the local network structure of each network segment, some of which has hardware configured to support multicast in some embodiments. Doing so leverages the multicast capabilities offered by the physical network to achieve higher efficiency while supporting optimized replication and delivery paths based on the physical network topology. For segments that do not support multicast, a selected proxy endpoint must rely on unicast to replicate the packet <b>150</b> to the other group members in the segment.</p><p id="p-0041" num="0040">In addition, by using proxies for different datacenters, the source tunnel endpoint <b>111</b> is able to forward the data packet <b>150</b> without having to send duplicate packets over the datacenter interconnect <b>110</b>, one for each subnet. The simplified example of <figref idref="DRAWINGS">FIG. <b>1</b></figref> only has two datacenters with two segments each, but there could potentially be several such datacenters, each with many subnets. Using only a single proxy for the entire datacenter avoids high bandwidth usage which can be especially costly in hybrid cloud deployments, where the customer is charged for traffic into and out of the local datacenter environment.</p><p id="p-0042" num="0041">In some embodiments, a tunnel endpoint receives the message from either a network endpoint or another tunnel endpoint (e.g., a proxy endpoint), and determines whether and where to replicate the message based on flags that are set in the message (e.g., in fields of an encapsulation header). For example, in some embodiments, if the message has no replication flags set, then the receiving endpoint does not perform any replication and only forwards the message to any logical network endpoints (e.g., VMs) that require the message. If the message header (e.g., the encapsulation header) has a segment replication flag set, then the receiving tunnel endpoint is a proxy endpoint for its segment and replicates the message to other tunnel endpoints in its network segment that belong to the replication group (sending these messages without any flags set). If the message header has a network (e.g., datacenter) replication flag set, then the receiving tunnel endpoint is a proxy endpoint for its physical network and replicates the message to (i) proxy endpoints for the other segments of its physical network (sending these messages with the segment replication flag set) and (ii) other tunnel endpoints in its network segment of its physical network (sending these messages without any flags set).</p><p id="p-0043" num="0042">When replicating the message, in some embodiments the receiving endpoint identifies (e.g., from the message header) to which logical network and/or replication group the message belongs. For each selected endpoint to which the receiving tunnel endpoint replicates the message, the receiving tunnel endpoint encapsulates the message with a header that includes its own address as the source address, the selected tunnel endpoint as the destination address, a virtual network identifier (VNI) for the logical network associated with the message, a replication (e.g., multicast) group identifier, and the replication flags set as needed to ensure that the receiving tunnel endpoints do not perform redundant or unnecessary replication of the message after receiving it.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>2</b></figref> conceptually illustrates a process <b>200</b> of some embodiments for receiving a message from a logical network endpoint and forwarding the message to one or more destinations. In some embodiments, the process <b>200</b> is performed by a tunnel endpoint upon receiving a message from a logical endpoint that connects to the tunnel endpoint. For example, the process <b>200</b> could be performed by source tunnel endpoint <b>111</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, described above.</p><p id="p-0045" num="0044">The process <b>200</b> begins by receiving (at <b>205</b>) a data packet from a logical network endpoint. In some embodiments, the tunnel endpoint receives the packet from a logical network endpoint that executes on the same host computer as the source tunnel endpoint.</p><p id="p-0046" num="0045">The process <b>200</b> determines (at <b>210</b>) whether the received packet is a broadcast, unicast, or multicast (BUM) packet. In some embodiments, this determination is made by checking whether the destination IP address of the received packet is a multicast IP address, or whether the destination MAC address is a broadcast address. If the process <b>200</b> determines that the packet is not a BUM packet, then the process performs packet processing at <b>215</b> to forward the packet to its destination (i.e., as a unicast packet). The process <b>200</b> then ends.</p><p id="p-0047" num="0046">If, however, the received packet is a BUM packet, the process <b>200</b> determines (at <b>220</b>) the replication group for the packet. In some embodiments, the forwarding element (tunnel endpoint) determines a logical forwarding element and/or logical network to which the source of the packet belongs (e.g., based on a source address of the packet, an interface via which the packet was received, etc.). This logical forwarding element and/or logical network is mapped to a replication group (which may also be based on whether the received packet is a broadcast packet, multicast packet, or unknown unicast packet).</p><p id="p-0048" num="0047">The process <b>200</b> then identifies (at <b>225</b>) a proxy endpoint for each other datacenter that includes tunnel endpoints in the replication group identified for the BUM packet. In some embodiments, the proxy endpoints are identified from a predefined list of selected proxy endpoints for each datacenter, as will be discussed in further detail below.</p><p id="p-0049" num="0048">With the proxy endpoints for each other datacenter identified, the process <b>200</b> replicates (at <b>230</b>) the BUM packet to each of the identified proxy endpoints for the other datacenters with the datacenter flag set. In some embodiments, each of these copies of the BUM packet are encapsulated in a different tunnel header with different destination addresses corresponding to the identified proxy endpoints. In some embodiments, as mentioned, the tunnel header includes a datacenter replication flag (indicating that the receiver of the packet is a datacenter proxy) and a segment replication flag (indicating that the receiver of the packet is a segment proxy). In different embodiments, the sending tunnel endpoint can set or not set the segment flag when the datacenter flag is set.</p><p id="p-0050" num="0049">The process <b>200</b> also identifies (at <b>235</b>) a proxy endpoint for each other physical network segment (e.g., IP subnet, VLAN, multicast island, etc.) in the same datacenter that includes tunnel endpoints in the replication group identified for the BUM packet. In some embodiments, the proxy endpoints are identified from a predefined list of selected proxy endpoints for each segment, as will be discussed in further detail below.</p><p id="p-0051" num="0050">With the proxy endpoints for each other segment in the same datacenter as the source tunnel endpoint identified, the process <b>200</b> replicates (at <b>240</b>) the BUM packet to each of these identified proxy endpoints for the other segments with the segment flag set and the datacenter flag not set. In some embodiments, each of these copies of the BUM packet are encapsulated in a different tunnel header with different destination addresses corresponding to the identified proxy endpoints. By setting the segment replication flag and not the datacenter replication flag, the recipients of these copies of the packet will replicate the packet to other tunnel endpoints in their segment, but not to proxy endpoints in other segments (thereby avoiding replication loops).</p><p id="p-0052" num="0051">In addition, the process <b>200</b> identifies (at <b>245</b>) all other tunnel endpoints in the replication group identified for the BUM packet that are in the same network segment as the source tunnel endpoint. In some embodiments, the tunnel endpoints are identified from a predefined list of all tunnel endpoints in the multicast group, as will be discussed in further detail below.</p><p id="p-0053" num="0052">The process <b>200</b> replicates (at <b>250</b>) the packet to each of these identified tunnel endpoints, in this case with neither the datacenter nor segment replication flags set. These flags instruct the receiving tunnel endpoints to deliver the packet to any connected logical network endpoints that require the packet, but not to further replicate the packet to any other tunnel endpoints. The process <b>200</b> then ends.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>3</b></figref> conceptually illustrates a process <b>300</b> of some embodiments for receiving a message from a tunnel endpoint and replicating the message to one or more destinations. In some embodiments, the process <b>300</b> is performed by a tunnel endpoint upon receiving a message from another tunnel endpoint (e.g., a source tunnel endpoint or proxy endpoint for a segment or a datacenter). For example, the process <b>300</b> could be performed by any of the proxy tunnel endpoints <b>121</b>, <b>131</b>, or <b>141</b> or the other recipient tunnel endpoints in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, described above.</p><p id="p-0055" num="0054">The process <b>300</b> begins by receiving (at <b>305</b>) a data packet from another tunnel endpoint. In some embodiments, the packet is encapsulated with a tunnel header that includes a datacenter replication flag and a segment replication, either or both of which may be set. The tunnel endpoint from which the encapsulated packet is received may be located in the same network segment, a different network segment of the same datacenter, or a different datacenter. This information is conveyed by which (if any) of the replication flags are set in the tunnel header of the received packet.</p><p id="p-0056" num="0055">The process <b>300</b> determines (at <b>310</b>) whether the packet has the datacenter replication flag set. In some embodiments, as mentioned, the datacenter and segment replication flags are stored in fields of an encapsulation header of the BUM packet. The datacenter replication flag is set when the receiving tunnel endpoint is a datacenter proxy endpoint (i.e., is the only tunnel endpoint in its datacenter that has received the packet at this point).</p><p id="p-0057" num="0056">If the datacenter flag is not set, then the receiving tunnel endpoint is not a datacenter proxy endpoint, and the process proceeds to <b>315</b> to determine whether the segment replication flag is set. The segment replication flag is set when the receiving tunnel endpoint is a network segment proxy endpoint (i.e., is the only tunnel endpoint in its network segment that has received the packet at this point). In some embodiments, as shown in this process <b>300</b>, when the datacenter flag is set, whether the segment flag is set is inconsequential.</p><p id="p-0058" num="0057">If the datacenter and segment replication flags are not set, then the receiving tunnel endpoint is neither a segment proxy endpoint nor a datacenter proxy endpoint, and does not need to further replicate the packet. Accordingly, the process <b>300</b> performs packet processing at <b>320</b> to deliver the packet to one or more logical network endpoints associated with the receiving tunnel endpoint (i.e., that are connected to the receiving tunnel endpoint). The process <b>300</b> then ends.</p><p id="p-0059" num="0058">Returning to <b>310</b>, if the datacenter flag is set, then the receiving tunnel endpoint is a datacenter proxy endpoint, and has the responsibility to replicate the packet to all other segments in its datacenter. Thus, the process <b>300</b> identifies (at <b>325</b>) a proxy endpoint for each other physical network segment (e.g., IP subnet, VLAN, multicast island, etc.) in the same datacenter that includes tunnel endpoints in the replication group for the BUM packet. In some embodiments, the proxy endpoints are identified from a predefined list of selected proxy endpoints for each segment, as will be discussed in further detail below.</p><p id="p-0060" num="0059">With the proxy endpoints for each other segment in the same datacenter as the receiving tunnel endpoint identified, the process <b>300</b> replicates (at <b>330</b>) the BUM packet to each of these identified proxy endpoints for the other segments with the segment flag set and the datacenter flag not set. In some embodiments, each of these copies of the BUM packet are encapsulated in a different tunnel header with different destination addresses corresponding to the identified proxy endpoints. By setting the segment replication flag and not the datacenter replication flag, the recipients of these copies of the packet will replicate the packet to other tunnel endpoints in their segment, but not to proxy endpoints in other segments (thereby avoiding replication loops).</p><p id="p-0061" num="0060">When the datacenter flag and/or the segment flag is set in the received packet, the process <b>300</b> identifies (at <b>335</b>) all other tunnel endpoints in the replication group for the BUM packet that are in the same network segment as the source tunnel endpoint. In some embodiments, the tunnel endpoints are identified from a predefined list of all tunnel endpoints in the multicast group, as will be discussed in further detail below.</p><p id="p-0062" num="0061">The process <b>300</b> replicates (at <b>340</b>) the packet to each of these identified tunnel endpoints, in this case with neither the datacenter nor segment replication flags set. These flags instruct the receiving tunnel endpoints to deliver the packet to any connected logical network endpoints that require the packet, but not to further replicate the packet to any other tunnel endpoints. In addition to performing any of the required replication, the process <b>300</b> processes and delivers (at <b>320</b>) the packet to one or more logical network endpoints associated with the receiving tunnel endpoint (i.e., that are connected to the receiving tunnel endpoint).</p><p id="p-0063" num="0062">From <figref idref="DRAWINGS">FIG. <b>3</b></figref>, it is apparent that in some embodiments, the datacenter flag obviates the need for the segment flag. This is because a tunnel endpoint that serves as a datacenter proxy also serves as a segment proxy. In some embodiments, a tunnel endpoint interprets the datacenter flag as a segment flag, or in other embodiments treats the segment flag as set whenever the datacenter flag is set. However, the reverse is not true, as the segment flag cannot be interpreted as a datacenter flag. This is to prevent segment proxy endpoints that receive the packet from datacenter proxy endpoints from redundantly attempting to select additional segment proxy endpoints in the datacenter.</p><p id="p-0064" num="0063">In some embodiments, each tunnel endpoint belonging to a replication group individually selects the proxy endpoints that it uses for replicating messages to other network segments and other physical networks. To make these selections, in some embodiments each tunnel endpoint receives configuration information from a centralized network control system that identifies the other tunnel endpoints in each replication group to which the tunnel endpoint belongs, sorted into the network segments and physical networks in which each of the other tunnel endpoints is located. In other embodiments, this information may be exchanged directly between tunnel endpoints (e.g., using a distributed control plane protocol).</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>4</b></figref> conceptually illustrates configuration information stored in some embodiments by a tunnel endpoint, which that tunnel endpoint uses to select proxy endpoints for replicating messages to a multicast group. Specifically, <figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of configuration information used by source tunnel endpoint <b>111</b> to identify proxy endpoints, as described above in relation to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Persons of ordinary skill in the art will understand that the format of the configuration file as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref> is only one of many possible formats.</p><p id="p-0066" num="0065">The configuration information includes a list <b>405</b> of all tunnel endpoints in the logical network, which in this example is a VXLAN. The list of tunnel endpoints is organized by multicast group, datacenter, and segment, so that the source tunnel endpoint can quickly identify which VXLAN tunnel endpoints (VTEPs) are in the same multicast group and where they are located. In some embodiments, the tunnel endpoint stores a different list <b>405</b> for each replication group.</p><p id="p-0067" num="0066">From this list, it is clear that in this example the tunnel endpoint <b>111</b> is a member of two multicast groups, the first group corresponding to the network <b>100</b> described above. Further, the tunnel endpoint list stored by the tunnel endpoint <b>111</b> does not include an entry for itself, since that is redundant information from its perspective. In some embodiments, the tunnel endpoint modifies the list <b>405</b> after receiving it, to remove its own entry. However, in other embodiments, the tunnel endpoint list <b>405</b> may also include its own entry, and the tunnel endpoint simply ignores any references to itself when using the list. In addition, the list indicates that there is a third network segment in datacenter <b>102</b>, that includes additional tunnel endpoints <b>151</b>-<b>156</b>. This third segment is omitted from the illustration in <figref idref="DRAWINGS">FIG. <b>1</b></figref> for the sake of clarity.</p><p id="p-0068" num="0067">The configuration information also includes a list <b>410</b> of the selected proxy endpoints. These are selected by the tunnel endpoint <b>111</b>, as will be further described below. The list of proxy endpoints is chosen from the list of all tunnel endpoints <b>405</b>. Because there are two additional segments in datacenter <b>102</b>, there are only two entries for segment proxy endpoints in the same datacenter. Since there is only one additional datacenter <b>103</b>, there is only a single entry for a datacenter proxy endpoint in that datacenter. This reflects the fact that the tunnel endpoint <b>111</b> only has responsibility for choosing one proxy per segment in its own datacenter, and choosing a single proxy endpoint for the other datacenter. In some embodiments, the list <b>410</b> of selected proxy endpoints is generated at the tunnel endpoint, based on the list <b>405</b> of all tunnel endpoints in the multicast group. In other embodiments, the list <b>410</b> is received from the control plane, from either a central controller or from other tunnel endpoints in distributed fashion.</p><p id="p-0069" num="0068">Based on this configuration information (listing the tunnel endpoints belonging to the replication group, sorted by physical network and network segment), each tunnel endpoint in the group selects proxy endpoints for (i) each other physical network site (e.g., datacenter) and (ii) each other network segment within its respective physical network site. In some embodiments, in order to balance the traffic load and replication burden across the various endpoints, each tunnel endpoint randomly selects the proxy endpoint for each other physical network site, and each other network segment within its respective physical network site (such that different tunnel endpoints will select different proxy endpoints for the same segment or datacenter for the same replication group, thereby balancing the load between these different tunnel endpoints). In other embodiments, the tunnel endpoints also receive traffic load or other statistics and use these to inform the proxy endpoint selection. If a tunnel endpoint receives an update to the list for a network segment or physical network, in some embodiments the tunnel endpoint re-selects the proxy endpoint for that updated network segment or physical network.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>5</b></figref> conceptually illustrates a process <b>500</b> of some embodiments for selecting proxy endpoints. In some embodiments, the process <b>500</b> is performed by a tunnel endpoint for each replication group to which the tunnel endpoint belongs. Every tunnel endpoint in a replication group performs the process <b>500</b> independently in some embodiments, such that each tunnel endpoint may select different proxy endpoints than other tunnel endpoints in the same segment or datacenter.</p><p id="p-0071" num="0070">As shown, the process <b>500</b> begins by receiving (at <b>505</b>) a list of tunnel endpoints sorted by datacenter and segment (e.g., the configuration data <b>405</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>). In some embodiments, the tunnel endpoint includes lists of tunnel endpoints for more than one replication group, in which case the process <b>500</b> is performed by the tunnel endpoint for each of these multi cast groups.</p><p id="p-0072" num="0071">The process <b>500</b> selects (at <b>510</b>) a different segment in the same datacenter than the segment in which the tunnel endpoint that performs the process is located (assuming that there is at least one such segment). For the selected segment, the process <b>500</b> selects (at <b>515</b>) one of the members of the multicast group in the segment as the proxy endpoint. In some embodiments, the process <b>500</b> identifies members of the multicast group using the configuration information (e.g., the list of all tunnel endpoints). In order to select one of the members, in some embodiments the process selects a proxy endpoint randomly (e.g., computing a random number modulo the number of possible proxy endpoints and correlating this to one of the tunnel endpoints). In other embodiments, the process selects a proxy endpoint based on load information associated with each of the group members in the segment. The load information may be included in the configuration information in some embodiments. After selecting a proxy endpoint for the selected segment, the process <b>500</b> determines (at <b>520</b>) whether there are additional segments in the same datacenter. If so, the process returns to <b>510</b>, described above.</p><p id="p-0073" num="0072">If there are no additional segments in the same datacenter, then the process <b>500</b> selects (at <b>525</b>) a different datacenter than the datacenter in which the tunnel endpoint that performs the process is located. For the selected datacenter, the process <b>500</b> selects (at <b>530</b>) one of the members of the multicast group in the datacenter as the proxy endpoint. In some embodiments, the process <b>500</b> identifies members of the multicast group using the configuration information (e.g., the list of all tunnel endpoints <b>405</b>). In order to select one of the members, in some embodiments the process <b>500</b> selects a proxy endpoint randomly (e.g., computing a random number modulo the number of possible proxy endpoints and correlating this to one of the tunnel endpoints). In other embodiments, the process <b>500</b> selects a proxy endpoint based on traffic load information and statistics associated with each of the group members in the segment. The traffic load information and statistics may be included in the configuration information in some embodiments. After selecting a proxy endpoint for the selected datacenter, the process <b>500</b> determines at <b>535</b> whether there are additional datacenters. If so, the process returns to <b>525</b>, described above.</p><p id="p-0074" num="0073">If there are no additional segments in the same datacenter, then the process <b>500</b> stores at <b>540</b> the selections of proxy endpoints for the other segments in the same datacenter, and for the other datacenters, in a local configuration file (e.g., the list of all proxy endpoints <b>410</b>). The process <b>500</b> then ends.</p><p id="p-0075" num="0074">As noted above, in some embodiments a tunnel endpoint may belong to more than one replication group (e.g., be associated with different logical networks or different logical network segments). If a tunnel endpoint belongs to multiple replication groups, then it may select different proxy endpoints for the different replication groups in the same segment or physical network. In addition, that tunnel endpoint may be selected as a proxy endpoint by other tunnel endpoints in multiple replication groups.</p><p id="p-0076" num="0075">In some embodiments, the physical networks include provider networks or datacenters, which may be located in different physical locations. These physical networks may in some embodiments also be grouped by geographic region or area. Network interconnections between different physical network groups may have higher cost, higher latency, and/or lower bandwidth than interconnections between physical networks in the same geographic region. Therefore, some embodiments also provide for additional levels of replication, i.e., for segments of a physical network, physical networks, and groups of physical networks (and groups of groups of physical networks, etc.). In such embodiments, each tunnel endpoint would also select proxy endpoints for each other group of physical networks, and the encapsulation header would include a third flag that could be set.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a network <b>600</b> that spans multiple groups of datacenters <b>605</b> and <b>610</b>. The network <b>600</b> includes tunnel endpoints that operate in a similar manner as those in the network <b>100</b> described above by reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, but with additional datacenters that are grouped into datacenter groups. In this example, a tunnel endpoint replicates a data packet to all tunnel endpoints of a particular replication group across different segments, datacenters, and datacenter groups of the network. A first datacenter group <b>604</b> includes at least datacenters <b>602</b>, <b>603</b>, <b>630</b>, and <b>632</b>, which are connected via datacenter interconnect <b>605</b> (which may represent a set of datacenter interconnects). A second datacenter group <b>610</b> includes datacenters <b>637</b>, <b>652</b>, <b>653</b>, and <b>654</b>, which are connected via datacenter interconnect <b>615</b> (which may represent a set of datacenter interconnects). The two datacenter groups <b>604</b> and <b>610</b> are also connected by a datacenter group interconnect <b>620</b> (which may represent a set of datacenter group interconnects). In general, traffic over the inter-group connections <b>620</b> (e.g., a long distance link or set of links between distant geographical regions) incurs higher costs (which may be monetary, latency-based, etc.) than traffic over the intra-group connections <b>605</b> and <b>615</b> (e.g., more local links within a geographical region).</p><p id="p-0078" num="0077">In this case, each tunnel endpoint in a replication group selects (i) a proxy endpoint for each other datacenter group, (ii) a proxy endpoint for each other datacenter within its datacenter group, and (iii) a proxy endpoint for each other network segment within its datacenter. The replication of a data packet <b>625</b> received from a source logical network endpoint (e.g., operating on the same host as the source tunnel endpoint) by source tunnel endpoint <b>611</b> (illustrated in solid black) is shown in this figure. The replication of the packet to tunnel endpoints in the appropriate replication group within the same datacenter group operates in the same manner as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> and described by reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> above.</p><p id="p-0079" num="0078">That is, the source tunnel endpoint replicates the packet to any other tunnel endpoints belonging to the replication group within the same network segment <b>626</b> (not shown), as well as to proxy endpoints in segments <b>627</b> and <b>624</b> (via datacenter network fabric router <b>664</b>) and to proxy endpoints in each of the other datacenters <b>603</b>, <b>630</b>, and <b>632</b> within the same datacenter group <b>604</b>. These datacenter proxy endpoints then replicate the packet to proxy endpoints in the other segments of their respective datacenters, which also replicate the packet as required within their respective segments.</p><p id="p-0080" num="0079">For reasons of clarity, the replicated packets are illustrated as being sent directly to the receiving proxy endpoints in each datacenter, though in practice the packets must transit via internal datacenter routers (e.g., <b>664</b>, <b>633</b>) first (not shown for datacenters <b>630</b> and <b>632</b>). Only a few tunnel endpoints are illustrated in each segment of each datacenter, with those in the same multicast group as the source tunnel endpoint <b>611</b> illustrated with diagonal lines, and the proxy endpoints selected by the source tunnel endpoint <b>611</b> outlined with a thicker border. As noted above, each tunnel endpoint in a given segment may belong to more than one replication group, and not every tunnel endpoint in a given segment necessarily belongs to the same replication group as source tunnel endpoint <b>611</b>.</p><p id="p-0081" num="0080">The multicast group to which source tunnel endpoint <b>611</b> belongs also has additional members in the second datacenter group <b>610</b> (these members are also illustrated with dashed lines). Accordingly, the source tunnel endpoint <b>611</b> must also replicate the packet <b>625</b> to these members. In some embodiments, the source tunnel endpoint selects (e.g., by performing a process analogous to process <b>500</b>, extended to datacenter groups) a proxy endpoint <b>635</b> for the datacenter group <b>610</b> from the list of tunnel endpoints for the replication group received by the tunnel endpoint <b>611</b>.</p><p id="p-0082" num="0081">Group proxy endpoint <b>635</b> in datacenter <b>637</b> receives the packet <b>625</b> from source tunnel endpoint <b>611</b> over the datacenter group interconnect <b>620</b>. The group proxy endpoint <b>635</b> is also outlined in a thicker border to indicate that it was selected as a proxy endpoint by source tunnel endpoint <b>611</b>. The group proxy endpoint would have performed a process similar to process <b>500</b> to select datacenter proxy endpoints <b>640</b>, <b>645</b>, and <b>650</b> for the other datacenters <b>652</b>-<b>654</b> in its datacenter group, and selects segment proxy endpoints <b>655</b> and <b>660</b> for the segments in its own datacenter. Note that the proxy endpoints selected by group proxy endpoint <b>635</b> are not outlined in a thicker border, as they were not selected as proxies by source tunnel endpoint <b>611</b>.</p><p id="p-0083" num="0082">Group proxy endpoint <b>635</b> then replicates the packet <b>625</b> to the other members of the replication group in the same datacenter group <b>610</b> (e.g., performing a process similar to the process <b>300</b>, extended to another layer of hierarchy with a check for a third flag). As above, for reasons of clarity, the replicated packets are illustrated as being sent directly to the receiving proxy endpoints (including <b>635</b>) in each datacenter, though in practice the packets must transit via internal datacenter routers (e.g., <b>665</b> and <b>670</b>) first (not shown for datacenters <b>653</b> and <b>654</b>). Other members of the multicast group in datacenter group <b>610</b> that receive the packet from group proxy endpoint <b>635</b> then also replicate the packet as described above. In some embodiments, these members of the multicast group perform a process similar to the process <b>300</b>, extended to another layer of hierarchy with a check for a third flag.</p><p id="p-0084" num="0083">In some embodiments, the hierarchical levels of replication are not limited to just segments, datacenters, and datacenter groups. Additional higher levels such as states or provinces, national boundaries, and even inter-continental levels of hierarchy can be implemented in the same fashion as described above. At every level of hierarchy, the cost of transmitting data between the elements of that hierarchy level may be higher than the cost of transmitting data between the elements of the next lower level, so only a single proxy tunnel endpoint is assigned to each level by the original source tunnel endpoint. Therefore, even as the number of multicast group members increase exponentially (e.g., with the number of multicast group members), the number of proxies selected by any proxy at any level only increases linearly (with the number of hierarchy levels).</p><p id="p-0085" num="0084">As used in this specification, the term data packet, packet, data message, or message refers to a collection of bits in a particular format sent across a network. It should be understood that the term data packet, packet, data message, or message may be used herein to refer to various formatted collections of bits that may be sent across a network, such as Ethernet frames, IP packets, TCP segments, UDP datagrams, etc. While the examples above refer to data packets, packets, data messages, or messages, it should be understood that the invention should not be limited to any specific format or type of data message. Further, the terms endpoint, end machine and virtual machine (VM) may be used herein to refer to any instance of a data compute node (DCN) that operates in virtualization software, including VMs and containers that execute within VMs. While the examples above refer to virtual machines, it should be understood that the invention should not be limited to any specific type of DCN.</p><p id="p-0086" num="0085">This specification refers throughout to computational and network environments that include virtual machines (VMs). However, virtual machines are merely one example of data compute nodes (DNCs) or data compute end nodes, also referred to as addressable nodes or endpoints. DCNs may include non-virtualized physical hosts, virtual machines, containers that run on top of a host operating system without the need for a hypervisor or separate operating system, and hypervisor kernel network interface modules. In fact, the example networks could include combinations of different types of DCNs in some embodiments.</p><p id="p-0087" num="0086">VMs, in some embodiments, operate with their own guest operating systems on a host using resources of the host virtualized by virtualization software (e.g., a hypervisor, virtual machine monitor, etc.). The tenant (i.e., the owner of the VM) can choose which applications to operate on top of the guest operating system. Some containers, on the other hand, are constructs that run on top of a host operating system without the need for a hypervisor or separate guest operating system. In some embodiments, the host operating system isolates the containers for different tenants and therefore provides operating-system level segregation of the different groups of applications that operate within different containers. This segregation is akin to the VM segregation that is offered in hypervisor-virtualized environments, and thus can be viewed as a form of virtualization that isolates different groups of applications that operate in different containers. Such containers are more lightweight than VMs.</p><p id="p-0088" num="0087">Hypervisor kernel network interface modules, in some embodiments, are a type of non-VM DCN that includes a network stack with a hypervisor kernel network interface and receive/transmit threads. One example of a hypervisor kernel network interface module is the vmknic module that is part of the ESX hypervisor of VMware Inc.</p><p id="p-0089" num="0088">Many of the above-described features and applications are implemented as software processes that are specified as a set of instructions recorded on a computer readable storage medium (also referred to as computer readable medium). When these instructions are executed by one or more processing unit(s) (e.g., one or more processors, cores of processors, or other processing units), they cause the processing unit(s) to perform the actions indicated in the instructions. Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc. The computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.</p><p id="p-0090" num="0089">In this specification, the term &#x201c;software&#x201d; is meant to include firmware residing in read-only memory or applications stored in magnetic storage, which can be read into memory for processing by a processor. Also, in some embodiments, multiple software inventions can be implemented as sub-parts of a larger program while remaining distinct software inventions. In some embodiments, multiple software inventions can also be implemented as separate programs. Finally, any combination of separate programs that together implement a software invention described here is within the scope of the invention. In some embodiments, the software programs, when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>7</b></figref> conceptually illustrates an electronic system <b>700</b> with which some embodiments of the invention are implemented. The electronic system <b>700</b> may be a computer (e.g., a desktop computer, personal computer, tablet computer, server computer, mainframe, a blade computer etc.), phone, PDA, or any other sort of electronic device. Such an electronic system includes various types of computer readable media and interfaces for various other types of computer readable media. Electronic system <b>700</b> includes a bus <b>705</b>, processing unit(s) <b>710</b>, a system memory <b>725</b>, a read-only memory <b>730</b>, a permanent storage device <b>735</b>, input devices <b>740</b>, and output devices <b>745</b>.</p><p id="p-0092" num="0091">The bus <b>705</b> collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices of the electronic system <b>700</b>. For instance, the bus <b>705</b> communicatively connects the processing unit(s) <b>710</b> with the read-only memory <b>730</b>, the system memory <b>725</b>, and the permanent storage device <b>735</b>.</p><p id="p-0093" num="0092">From these various memory units, the processing unit(s) <b>710</b> retrieve instructions to execute and data to process in order to execute the processes of the invention. The processing unit(s) may be a single processor or a multi-core processor in different embodiments.</p><p id="p-0094" num="0093">The read-only-memory (ROM) <b>730</b> stores static data and instructions that are needed by the processing unit(s) <b>710</b> and other modules of the electronic system. The permanent storage device <b>735</b>, on the other hand, is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even when the electronic system <b>700</b> is off. Some embodiments of the invention use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) as the permanent storage device <b>735</b>.</p><p id="p-0095" num="0094">Other embodiments use a removable storage device (such as a floppy disk, flash drive, etc.) as the permanent storage device. Like the permanent storage device <b>735</b>, the system memory <b>725</b> is a read-and-write memory device. However, unlike storage device <b>735</b>, the system memory is a volatile read-and-write memory, such as random-access memory. The system memory stores some of the instructions and data that the processor needs at runtime. In some embodiments, the invention's processes are stored in the system memory <b>725</b>, the permanent storage device <b>735</b>, and/or the read-only memory <b>730</b>. From these various memory units, the processing unit(s) <b>710</b> retrieve instructions to execute and data to process in order to execute the processes of some embodiments.</p><p id="p-0096" num="0095">The bus <b>705</b> also connects to the input and output devices <b>740</b> and <b>745</b>. The input devices enable the user to communicate information and select commands to the electronic system. The input devices <b>740</b> include alphanumeric keyboards and pointing devices (also called &#x201c;cursor control devices&#x201d;). The output devices <b>745</b> display images generated by the electronic system. The output devices include printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some embodiments include devices such as a touchscreen that function as both input and output devices.</p><p id="p-0097" num="0096">Finally, bus <b>705</b> also couples electronic system <b>700</b> to a network <b>765</b> through a network adapter (not shown). In this manner, the computer can be a part of a network of computers (such as a local area network (&#x201c;LAN&#x201d;), a wide area network (&#x201c;WAN&#x201d;), or an Intranet, or a network of networks, such as the Internet. Any or all components of electronic system <b>700</b> may be used in conjunction with the invention.</p><p id="p-0098" num="0097">Some embodiments include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media). Some examples of such computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD&#x2212;RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, read-only and recordable Blu-Ray&#xae; discs, ultra-density optical discs, any other optical or magnetic media, and floppy disks. The computer-readable media may store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations. Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.</p><p id="p-0099" num="0098">While the above discussion primarily refers to microprocessor or multi-core processors that execute software, some embodiments are performed by one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs). In some embodiments, such integrated circuits execute instructions that are stored on the circuit itself.</p><p id="p-0100" num="0099">As used in this specification, the terms &#x201c;computer&#x201d;, &#x201c;server&#x201d;, &#x201c;processor&#x201d;, and &#x201c;memory&#x201d; all refer to electronic or other technological devices. These terms exclude people or groups of people. For the purposes of the specification, the terms display or displaying means displaying on an electronic device. As used in this specification, the terms &#x201c;computer readable medium,&#x201d; &#x201c;computer readable media,&#x201d; and &#x201c;machine readable medium&#x201d; are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.</p><p id="p-0101" num="0100">While the invention has been described with reference to numerous specific details, one of ordinary skill in the art will recognize that the invention can be embodied in other specific forms without departing from the spirit of the invention. In addition, at least one figure conceptually illustrates a process. The specific operations of this process may not be performed in the exact order shown and described. The specific operations may not be performed in one continuous series of operations, and different specific operations may be performed in different embodiments. Furthermore, the process could be implemented using several sub-processes, or as part of a larger macro process. Thus, one of ordinary skill in the art would understand that the invention is not to be limited by the foregoing illustrative details, but rather is to be defined by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-01-20" num="01-20"><claim-text><b>1</b>-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A method of replicating messages to members of a replication group across a plurality of datacenters, the method comprising:<claim-text>at a particular proxy endpoint in a particular segment of a particular datacenter:<claim-text>receiving a message from a source tunnel endpoint in a source datacenter for the message, the message to be replicated to members of the replication group comprising the particular proxy endpoint, wherein the source tunnel endpoint replicates the message to proxy endpoints in each of the plurality of datacenters;</claim-text><claim-text>replicating the message to a set of proxy endpoints each of which (i) is located in a different segment of the particular datacenter than the particular segment and (ii) is for replicating the message to tunnel endpoints of the replication group located in its respective segment of the particular datacenter; and</claim-text><claim-text>replicating the message to a set of tunnel endpoints of the replication group located in the particular segment of the particular datacenter.</claim-text></claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein:<claim-text>replicating the message to the set of proxy endpoints comprises encapsulating the message with a first encapsulating header that stores a first flag indicating that the message should be replicated to all local endpoints of the replication group in the same segment as the proxy endpoint receiving the message; and</claim-text><claim-text>the message received from the source tunnel endpoints comprises a second encapsulating header that stores a second flag indicating that the message should be replicated to all proxy endpoints of the replication group in different segments of the same datacenter as the particular proxy endpoint.</claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein replicating the message to the set of tunnel endpoints comprises encapsulating the message with a third encapsulation header that does not store the first flag or the second flag.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein:<claim-text>the particular datacenter is a first datacenter, the source datacenter is a second datacenter, the particular proxy endpoint is a first proxy endpoint, the set of proxy endpoints is a first set of proxy endpoints, and the set of tunnel endpoints is a first set of tunnel endpoints; and</claim-text><claim-text>a second proxy endpoint in a third datacenter (i) receives the message from the source tunnel endpoint, (ii) replicates the message to a second set of proxy endpoints each of which is located in a different segment of the third datacenter than the second proxy endpoint, and (iii) replicates the message to a second set of tunnel endpoints located in a same segment of the third datacenter as the second proxy endpoint.</claim-text></claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the segments are segments of a logical network implemented across the plurality of datacenters.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein the logical network is a logical overlay network and the tunnel endpoints are used to establish the logical overlay network.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref> further comprising:<claim-text>receiving, at the particular proxy endpoint, a list of members for the replication group at all segments of all datacenters in the plurality of datacenters; and</claim-text><claim-text>based on the received list:<claim-text>selecting a proxy endpoint for each segment in the particular datacenter other than the particular segment, wherein the set of proxy endpoints comprises the selected proxy endpoints; and</claim-text><claim-text>selecting a proxy endpoint for each other datacenter.</claim-text></claim-text></claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The method of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein selecting a proxy endpoint for a specific segment of the particular datacenter comprises randomly selecting a tunnel endpoint in the specific segment that is a member of the replication group.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The method of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein selecting a proxy endpoint for a specific datacenter comprises randomly selecting a tunnel endpoint in the specific datacenter that is a member of the replication group.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The method of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the selected proxy endpoint for the source datacenter is not the source tunnel endpoint of the message.</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. A non-transitory machine-readable medium storing a program which when executed by at least one processing unit operates as a particular proxy endpoint in a particular segment of a particular datacenter to replicate messages to members of a replication group across a plurality of datacenters, the program comprising sets of instructions for:<claim-text>receiving a message from a source tunnel endpoint in a source datacenter for the message, the message to be replicated to members of the replication group comprising the particular proxy endpoint, wherein the source tunnel endpoint replicates the message to proxy endpoints in each of the plurality of datacenters;</claim-text><claim-text>replicating the message to a set of proxy endpoints each of which (i) is located in a different segment of the particular datacenter than the particular segment and (ii) is for replicating the message to tunnel endpoints of the replication group located in its respective segment of the particular datacenter; and</claim-text><claim-text>replicating the message to a set of tunnel endpoints of the replication group located in the particular segment of the particular datacenter.</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein:<claim-text>the set of instructions for replicating the message to the set of proxy endpoints comprises a set of instructions for encapsulating the message with a first encapsulating header that stores a first flag indicating that the message should be replicated to all local endpoints of the replication group in the same segment as the proxy endpoint receiving the message; and</claim-text><claim-text>the message received from the source tunnel endpoints comprises a second encapsulating header that stores a second flag indicating that the message should be replicated to all proxy endpoints of the replication group in different segments of the same datacenter as the particular proxy endpoint.</claim-text></claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein the set of instructions for replicating the message to the set of tunnel endpoints comprises a set of instructions for encapsulating the message with a third encapsulation header that does not store the first flag or the second flag.</claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein:<claim-text>the particular datacenter is a first datacenter, the source datacenter is a second datacenter, the particular proxy endpoint is a first proxy endpoint, the set of proxy endpoints is a first set of proxy endpoints, and the set of tunnel endpoints is a first set of tunnel endpoints; and</claim-text><claim-text>a second proxy endpoint in a third datacenter (i) receives the message from the source tunnel endpoint, (ii) replicates the message to a second set of proxy endpoints each of which is located in a different segment of the third datacenter than the second proxy endpoint, and (iii) replicates the message to a second set of tunnel endpoints located in a same segment of the third datacenter as the second proxy endpoint.</claim-text></claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the segments are segments of a logical network implemented across the plurality of datacenters.</claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00035">claim 35</claim-ref>, wherein the logical network is a logical overlay network and the tunnel endpoints are used to establish the logical overlay network.</claim-text></claim><claim id="CLM-00037" num="00037"><claim-text><b>37</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the program further comprises sets of instructions for:<claim-text>receiving, at the particular proxy endpoint, a list of members for the replication group at all segments of all datacenters in the plurality of datacenters; and</claim-text><claim-text>based on the received list:<claim-text>selecting a proxy endpoint for each segment in the particular datacenter other than the particular segment, wherein the set of proxy endpoints comprises the selected proxy endpoints; and</claim-text><claim-text>selecting a proxy endpoint for each other datacenter.</claim-text></claim-text></claim-text></claim><claim id="CLM-00038" num="00038"><claim-text><b>38</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00037">claim 37</claim-ref>, wherein the set of instructions for selecting a proxy endpoint for a specific segment of the particular datacenter comprises a set of instructions for randomly selecting a tunnel endpoint in the specific segment that is a member of the replication group.</claim-text></claim><claim id="CLM-00039" num="00039"><claim-text><b>39</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00037">claim 37</claim-ref>, wherein the set of instructions for selecting a proxy endpoint for a specific datacenter comprises a set of instructions for randomly selecting a tunnel endpoint in the specific datacenter that is a member of the replication group.</claim-text></claim><claim id="CLM-00040" num="00040"><claim-text><b>40</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00037">claim 37</claim-ref>, wherein the selected proxy endpoint for the source datacenter is not the source tunnel endpoint of the message.</claim-text></claim></claims></us-patent-application>