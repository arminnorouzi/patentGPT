<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006966A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006966</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943365</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>61</main-group><subgroup>4511</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>61</main-group><subgroup>5014</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>145</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>101</main-group><subgroup>686</subgroup><symbol-position>L</symbol-position><classification-value>N</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>61</main-group><subgroup>4511</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>46</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>61</main-group><subgroup>5014</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>145</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>2101</main-group><subgroup>686</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">APPARATUS AND METHOD FOR ESTABLISHING AND MAINTAINING A DS-LITE TUNNEL</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17280561</doc-number><date>20210326</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11483281</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/CN2020/081656</doc-number><date>20200327</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943365</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>ARRIS Enterprises LLC</orgname><address><city>Suwanee</city><state>GA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Li</last-name><first-name>Ju</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NIU</last-name><first-name>Lijie</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Haiqiang</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Xin</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>WEN</last-name><first-name>Haijuan</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>XIAO</last-name><first-name>He</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An electronic apparatus for establishing a Dual-Stack Lite (DS-lite) tunnel is provided. The apparatus sends a request for an Internet Protocol (IP) address of a Domain Name System (DNS) server and a domain name of an Address Family Transition Router (AFTR) server to a Dynamic Host Configuration Protocol (DHCP) server using an IP address of the DHCP server, receives the IP address of the DNS server and the domain name of the AFTR server from the DHCP server in response to the request, sends a DNS query including the domain name of the AFTR server to the DNS server using the IP address of the DNS server. In response to the DNS query being successful, the apparatus receives an IP address of the AFTR server from the DNS server, and establishes the DS-lite tunnel between the apparatus and the AFTR server using the IP address of the AFTR server.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="125.05mm" wi="158.75mm" file="US20230006966A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="228.35mm" wi="193.55mm" orientation="landscape" file="US20230006966A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="239.69mm" wi="177.88mm" orientation="landscape" file="US20230006966A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="238.34mm" wi="196.00mm" file="US20230006966A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="238.17mm" wi="191.43mm" file="US20230006966A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="144.44mm" wi="142.16mm" file="US20230006966A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Electronic communication on the Internet is performed according to Internet Protocol (IP). IP addresses are used to identify electronic devices within a network environment. Internet Protocol version 4 (IPv4) is the fourth iteration of the Internet Protocol, and uses a 32-bit address scheme. However, IPv4 address resources are limited, and with the growth of the Internet and increasing numbers of devices it is expected that the number of unused IPv4 addresses will eventually run out. Internet Protocol version 6 (IPv6) was created to solve this problem. By using a 128-bit address scheme, IPv6 fulfills the need for more IP addresses. However, providing IPv6 addresses alone is often not workable because most of the systems that make up the public Internet are still enabled and support only IPv4, and many user's client devices do not yet fully support IPv6. Accordingly, during the transition from IPv4 to IPv6, service providers must continue to support both versions.</p><p id="p-0003" num="0002">Dual-Stack Lite (DS-lite) is a solution that has evolved from IPv4 to IPv6. DS-lite allows service providers with IPv6 infrastructure to migrate to an IPv6 access network without changing end user software, and connect their IPv4 subscribers to the Internet. Without DS-lite, a gateway device must have at least one IPv4 address and one IPv6 address in order to provide client devices in the local network of the gateway device with IPv4/IPv6 dual-stack routing, for example. If DS-lite is used, however, the gateway device can provide the client devices with IPv4/IPv6 dual-stack routing while having only an IPv6 address. Thus, a gateway device equipped with DS-lite technology can greatly save IPv4 address resources. DS-lite uses IPv4-in-IPv6 tunneling to send a subscriber's IPv4 packet through a tunnel on the IPv6 access network to the service provider. The IPv6 packet is decapsulated to recover the subscriber's IPv4 packet and is then sent to the Internet. The response packets traverse through the same path back to the subscriber.</p><p id="p-0004" num="0003">For a gateway device that has DS-lite technology enabled, users can access the Internet using their client devices through the gateway device via either IPv4 or IPv6. However, if DS-lite fails, some client devices using an IPv4 address will lose Internet access. For example, the user's laptop computer, desktop computer, smartphone, tablet, etc. may be unable to browse websites or connect to external networks. Complaints from users without Internet access are a serious problem from multiple system operators (MSOs) and Internet service providers (ISPs).</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0005" num="0004">Thus, it is important to keep the DS-lite function of gateway devices operating stably. Accordingly, there is a need to provide an apparatus and method for establishing and maintaining a DS-lite tunnel that can avoid failure of DS-lite functionality.</p><p id="p-0006" num="0005">According to some example embodiments of inventive concepts described herein, an electronic apparatus for establishing a DS-lite tunnel is provided. The electronic apparatus includes a memory storing computer-readable instructions, and a processor configured to execute the computer-readable instructions to send a request for an Internet Protocol (IP) address of a Domain Name System (DNS) server and a domain name of an Address Family Transition Router (AFTR) server to a Dynamic Host Configuration Protocol (DHCP) server using an IP address of the DHCP server, receive the IP address of the DNS server and the domain name of the AFTR server from the DHCP server in response to the request, and send a DNS query to the DNS server using the IP address of the DNS server, wherein the DNS query includes the domain name of the AFTR server. In response to the DNS query being successful, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to receive an IP address of the AFTR server from the DNS server, and establish the DS-lite tunnel between the gateway device and the AFTR server using the IP address of the AFTR server.</p><p id="p-0007" num="0006">In some example embodiments, in response to failure of the DNS query, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to establish the DS-lite tunnel between the electronic apparatus and the AFTR server using a predetermined IP address. The predetermined IP address is stored in the memory based on one of a default configuration of the electronic apparatus, an initial setting by a user of the electronic apparatus, or a previous successful DNS query.</p><p id="p-0008" num="0007">In some example embodiments, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to save the IP address of the AFTR server in the memory of the electronic apparatus in response to the DNS query being successful.</p><p id="p-0009" num="0008">In some example embodiments, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to maintain the DS-lite tunnel between the electronic apparatus and the AFTR server using the saved IP address of the AFTR server that is stored in the memory of the electronic apparatus in response to the DNS query being successful.</p><p id="p-0010" num="0009">In some example embodiments, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to periodically transmit subsequent DNS queries to the DNS server based on a DNS time to live (TTL) timer.</p><p id="p-0011" num="0010">In some example embodiments, in response to one of the subsequent DNS queries being successful, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to receive a subsequent IP address of the AFTR server from the DNS server, maintain the DS-lite tunnel between the electronic apparatus and the AFTR server using the subsequent IP address of the AFTR server, and update the memory of the electronic apparatus with the subsequent IP address of the AFTR server.</p><p id="p-0012" num="0011">In some example embodiments, in response to failure of one of the subsequent DNS queries, the processor of the electronic apparatus is further configured to execute the computer-readable instructions to retrieve the saved IP address or the subsequent IP address of the AFTR server that is stored in the memory of the electronic apparatus in response to the DNS query or one of the subsequent DNS queries being successful, and maintain the DS-lite tunnel between the gateway device and the AFTR server using the retrieved IP address of the AFTR server.</p><p id="p-0013" num="0012">According to some other example embodiments of inventive concepts described herein, a method for establishing a Dual-Stack Lite (DS-lite) tunnel is provided. The method may include sending a request for an Internet Protocol (IP) address of a Domain Name System (DNS) server and a domain name of an Address Family Transition Router (AFTR) server to a Dynamic Host Configuration Protocol (DHCP) server using an IP address of the DHCP server, receiving the IP address of the DNS server and the domain name of the AFTR server from the DHCP server in response to the request, and sending a DNS query to the DNS server using the IP address of the DNS server, wherein the DNS query includes the domain name of the AFTR server. In response to the DNS query being successful, the method further includes receiving an IP address of the AFTR server from the DNS server, and establishing the DS-lite tunnel between the gateway device and the AFTR server using the IP address of the AFTR server.</p><p id="p-0014" num="0013">In some example embodiments, in response to failure of the DNS query, the method further includes establishing the DS-lite tunnel between the gateway device and the AFTR server using a predetermined IP address that is stored in a memory of the gateway device.</p><p id="p-0015" num="0014">In some example embodiments, the predetermined IP address is stored in the memory of the gateway device based on one of a default configuration of the gateway device, an initial setting by a user, or a previous successful DNS query.</p><p id="p-0016" num="0015">In some example embodiments, the method further includes saving the IP address of the AFTR server in a memory of the gateway device in response to the DNS query being successful.</p><p id="p-0017" num="0016">In some example embodiments, the method further includes maintaining the DS-lite tunnel between the gateway device and the AFTR server using the saved IP address of the AFTR server that is stored in the memory of the gateway device in response to the DNS query being successful.</p><p id="p-0018" num="0017">In some example embodiments, the method further includes periodically transmitting subsequent DNS queries to the DNS server based on a DNS time to live (TTL) timer.</p><p id="p-0019" num="0018">In some example embodiments, in response to one of the subsequent DNS queries being successful, the method further includes receiving a subsequent IP address of the AFTR server from the DNS server, maintaining the DS-lite tunnel between the gateway device and the AFTR server using the subsequent IP address of the AFTR server, and updating the memory of the gateway device with the subsequent IP address of the AFTR server.</p><p id="p-0020" num="0019">In some example embodiments, in response to failure of one of the subsequent DNS queries, the method further includes retrieving the saved IP address or the subsequent IP address of the AFTR server that is stored in the memory of the gateway device in response to the DNS query or one of the subsequent DNS queries being successful, and maintaining the DS-lite tunnel between the gateway device and the AFTR server using the retrieved IP address of the AFTR server.</p><p id="p-0021" num="0020">According to yet some other example embodiments of inventive concepts described herein, a non-transitory computer-readable medium storing a software program for establishing a DS-lite tunnel is provided. The software program, when executed by a processor of the above-described electronic apparatus, causes the electronic apparatus to perform the above-described method for establishing the DS-lite tunnel, for example.</p><p id="p-0022" num="0021">Thus, according to various example embodiments of inventive concepts disclosed herein, it is possible to establish and maintain a DS-lite tunnel between a gateway device and an AFTR server, even in the event of a failure of a DNS query, using mechanism that employs a predetermined IP address or a saved IP address to ensure that the DS-lite technology keeps working when a DNS query fails.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an architecture diagram of an example of a network including a plurality of electronic apparatuses, according to some example embodiments.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing a flow of communications for establishing a DS-lite tunnel between a gateway device and an AFTR server.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart of a method for establishing a DS-lite tunnel between a gateway device and an AFTR server, according to some example embodiments.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow chart of a method for maintaining a DS-lite tunnel between a gateway device and an AFTR server, according to some example embodiments.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is block diagram of an electronic apparatus for establishing and maintaining a DS-lite tunnel, according to some example embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0028" num="0027">For simplicity and illustrative purposes, the principles of the embodiments are described by referring mainly to examples thereof. In the following description, numerous specific details are set forth in order to provide a thorough understanding of some example embodiments. It will be apparent however, to one of ordinary skill in the art, that some other example embodiments may be practiced without limitation to these specific details. In some instances, well known methods and structures have not been described in detail so as not to unnecessarily obscure the example embodiments.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an architecture diagram of an example of a network including a plurality of electronic apparatuses, according to some example embodiments.</p><p id="p-0030" num="0029">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a possible implementation of a network <b>1</b> may include a network cloud <b>5</b>, a gateway device <b>10</b>, a plurality of client devices <b>20</b> (e.g., client device <b>1</b>, client device <b>2</b>, [ . . . ], client device N), a DHCP server <b>30</b>, a DNS server <b>40</b>, and an AFTR server <b>50</b>, for example. The local network of the gateway device <b>10</b> may also include a network switch <b>12</b> (e.g., providing wired connections) and a network repeater <b>14</b> (e.g., a wireless extender), although such devices may not be present according to some other example embodiments. It should be appreciated that various example embodiments of inventive concepts disclosed herein are not limited to one of each device and there may be multiple or many of one or more of the aforementioned electronic apparatuses in the network <b>1</b>, which may itself consist of multiple communication networks and various known or future developed wired and/or wireless connectivity technologies, protocols, devices, and the like.</p><p id="p-0031" num="0030">The gateway device <b>10</b> is an electronic device that provides network access between local area network (LAN) hosts to a wide area network (WAN) via a modem. The modem may or may not be integrated directly into the hardware of the gateway device <b>10</b> according to various example embodiments. The WAN is a larger external computer network, general operated by an internet service provider (ISP) or multiple system operator (MSO), also referred to generally as the Internet. For example, the gateway device <b>10</b> may provide routing between client devices <b>20</b> in the LAN and the Internet, wired and wireless connectivity within the LAN, network address translation (NAT) for IPv4, DHCP for IPv4 and router advertisements for IPv6, among many other functions. The gateway device <b>10</b> may be referred to as a residential gateway, a home gateway, a router, a modem, an access point, or the like. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the gateway device <b>10</b> may communicate with the DHCP server <b>30</b>, the DNS server <b>40</b>, and/or the AFTR server <b>50</b> via the network cloud <b>5</b>.</p><p id="p-0032" num="0031">The plurality of client devices <b>20</b> may be any of a wide variety of user devices, including but not limited to, laptop computers, desktop computers, tablets, smartphones, Internet of Things (IoT) devices, televisions, set-top boxes, media hubs, Bluetooth devices, and the like. The gateway device <b>10</b> may provide wired and/or wireless connectivity to the client devices <b>20</b> to enable access to an external network, such as a wide area network (WAN), the Internet, etc. Some of the client devices <b>20</b> may be able to use both IPv4 addresses and IPv6 addresses. However, some other client devices <b>20</b> may use IPv4 addresses only.</p><p id="p-0033" num="0032">The Dynamic Host Configuration Protocol (DHCP) server <b>30</b> is a network server that dynamically assigns IP addresses, default gateways, and other network configuration parameters to client devices <b>20</b> automatically, via the gateway device <b>10</b>. A centralized dual-protocol DHCP server <b>30</b> can provide both IPv4 addresses and IPv6 addresses to client devices <b>20</b>.</p><p id="p-0034" num="0033">The Domain Name Server (DNS server) <b>40</b> is used to translate a domain name to an Internet Protocol (IP) address for the further route in the Internet. For example, when a user of a client device <b>20</b> needs to access a web site, the user will input the domain name of the web site in a web browser, and the web browser will send a DNS request to the DNS server <b>40</b> to translate the input website name to an IP address. Then, the web browser of the client device <b>20</b> can access the website with this IP address.</p><p id="p-0035" num="0034">In order to provide Internet access to the client devices <b>20</b> with only IPv4 address capability, the gateway device <b>10</b> may set up a Dual-Stack Lite (DS-lite) tunnel with an Address Family Transition Router (AFTR) server <b>50</b>. The essence of DS-lite technology is to deploy an IPv4-in-IPv6 tunnel over an IPv6 network for IPv4 service transmission. For DS-lite service, the gateway device <b>10</b> will setup a tunnel with the AFTR server <b>50</b> to transmit the IPv4-in-IPv6 packets. The AFTR server <b>50</b> acts as an IPv4 over IPv6 tunnel endpoint. In the upstream direction, the AFTR server <b>50</b> is responsible for removing IPv6 headers of packets received from the gateway device <b>10</b> (e.g., request packets) through the DS-lite tunnel, and then sending them to the Internet. In the downstream direction, the AFTR server <b>50</b> is responsible for encapsulating IPv6 headers of the packets received from the destination IPv4 host (e.g., reply packets), and sending them to the gateway device <b>10</b> through the DS-lite tunnel.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram showing a flow of communications for establishing a DS-lite tunnel between a gateway device and an AFTR server. For example, a gateway device <b>10</b> may communicate with a DHCP server <b>30</b>, a DNS server <b>40</b>, and an AFTR server <b>50</b>, as described above in connection with <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0037" num="0036">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a method for establishing a DS-lite tunnel between a gateway device and an AFTR server involves a series a communications exchanged between a gateway device, a DHCP server, a DNS server, and a AFTR server, including at least:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0037">1. Message 1 (&#x201c;DHCP discover&#x201d;) includes a DHCP option 6 to request an IP address of a DNS server, and DHCP option 64 to request a domain name of an AFTR server.</li>        <li id="ul0002-0002" num="0038">2. Message 2 (&#x201c;DHCP offer&#x201d;) includes the IP address of the DNS server, and the domain name of the AFTR server.</li>        <li id="ul0002-0003" num="0039">3. Message 3 (&#x201c;DNS query for AFTR server address&#x201d;) includes the domain name of the AFTR server.</li>        <li id="ul0002-0004" num="0040">4. Message 4 (&#x201c;DNS response&#x201d;) includes the IP address of the AFTR server.</li>        <li id="ul0002-0005" num="0041">5. Message 5 (&#x201c;Setup DSlite tunnel) is sent by the gateway device to the AFTR server using the IP address of the AFTR server.</li>        <li id="ul0002-0006" num="0042">6. Message 6 (&#x201c;setup DSlite tunnel response&#x201d;) is received by the gateway device from the AFTR server.</li>    </ul>    </li></ul></p><p id="p-0038" num="0043">Once the gateway device receives the &#x201c;setup DSlite tunnel response&#x201d; from the AFTR server, the gateway device can establish the DS-lite tunnel between the gateway device and the AFTR server, and provide access to an external network (the Internet) to client devices (e.g., user devices with IPv4 addresses only) in the local area network (LAN) of the gateway device via the DS-lite tunnel and the AFTR server.</p><p id="p-0039" num="0044">Additionally, the gateway device can maintain the DS-lite tunnel between the gateway device and the AFTR server. For example, the gateway device may periodically send subsequent DNS queries to the DNS server, and receive subsequent IP addresses of the AFTR server from the DNS server.</p><p id="p-0040" num="0045">However, a problem exists in a known gateway device and related method for establishing and maintaining a DS-lite tunnel. If the known gateway device does not receive a reply (no Message 4&#x2014;&#x201c;DNS response&#x201d;) from the DNS server in response to the DNS query, then the known gateway device will not be able to establish the DS-lite tunnel between the gateway device and the AFTR server according to the related method. Similarly, if the known gateway device does not receive a reply (DNS response) from the DNS server in response to one of the subsequent DNS queries, then the known gateway device will not be able to maintain the DS-lite tunnel between the known gateway device and the AFTR server according to the related method. For example, a gateway device starting an IPv6 connection slowly may cause the first IPv6 DNS query to fail. Other reasons why a DNS query might fail include, but are not limited to, a dropped connection, congestion on the network, low signal strength, interference, packets arriving out of sequence, and numerous other problems that can occur within specific network environments.</p><p id="p-0041" num="0046">In either case, the absence of receiving the reply (&#x201c;DNS response&#x201d;) from the DNS server in response to a DNS query results in a failure of the DNS query, and the process for establishing the DS-lite tunnel terminates, or in the case of maintaining the DS-lite tunnel the DS-lite tunnel is terminated (e.g., deleted, demolished, destroyed, etc.). If the DS-lite tunnel is terminated upon failure of a DNS query, the known gateway device may not be configured to retry the DNS request, and/or may not be configured to restart the process from the beginning, in which case the known gateway device will do nothing in response to the failure of the DNS query according to the related method. When the DS-lite tunnel is destroyed upon failure of the DNS query, this results in an &#x201c;IPv4 datapath fail,&#x201d; which is a serious issue. As a result, the users of client devices having only IPv4 addresses will not be able to access the Internet (e.g., websites, external networks, or the like) via the known gateway device and related method.</p><p id="p-0042" num="0047">Accordingly, there is a need for an improved method and apparatus for avoiding failure of the DS-lite function and keeping a DS-lite tunnel between a gateway device and an AFTR server operating stably in response to a failed DNS query.</p><p id="p-0043" num="0048"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart of a method for establishing a DS-lite tunnel between a gateway device and an AFTR server, according to some example embodiments.</p><p id="p-0044" num="0049">The method of <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be performed by the gateway device <b>10</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. The gateway device <b>10</b> may include processing circuitry for implementing the algorithm for establishing the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b>. For example, the gateway device <b>10</b> may include a memory device storing software in the form of computer-readable instructions and a processor configured to execute the software. The gateway device <b>10</b> may also store data (e.g., IP addresses) in the memory device or in a separate memory, for use during the process. Thus, the gateway device <b>10</b> may include a combination of hardware and software programmed to establish the DS-lite tunnel.</p><p id="p-0045" num="0050">At step S<b>100</b>, the gateway device <b>10</b> starts up. At GW startup, the gateway device <b>10</b> knows an IP address of a DHCP server <b>30</b>. For example, the IP address of the DHCP server <b>30</b> may be pre-configured or stored in the memory of the gateway device <b>10</b> from a previous communication session.</p><p id="p-0046" num="0051">At step S<b>110</b>, the gateway device <b>10</b> acquires an IP address of the DNS server <b>40</b> and a domain name of the AFTR server <b>50</b> from the DHCP server <b>30</b>. The gateway device <b>10</b> connects with the DHCP server <b>30</b> using the IP address of the DHCP server <b>30</b>. The gateway device <b>10</b> sends a request (&#x201c;DHCP discover&#x201d;) to the DHCP server <b>30</b>, including a request for an IP address of a DNS server <b>40</b> (e.g., via DHCP option 6) and a domain name of an AFTR server <b>50</b> (e.g., via DHCP option 64). In response to the DHCP request, the gateway device <b>10</b> receives a reply (&#x201c;DHCP offer&#x201d;) from the DHCP server <b>30</b>, including the IP address of the DNS server <b>40</b> and the domain name of the AFTR server <b>50</b>.</p><p id="p-0047" num="0052">At step S<b>120</b>, the gateway device <b>10</b> sends a DNS query to the DNS server <b>40</b>, including the domain name of the AFTR server <b>50</b>. The gateway device <b>10</b> connects with the DNS server <b>40</b> using the IP address of the DNS server <b>40</b> that the gateway device <b>10</b> received from the DHCP server <b>30</b> (at step S<b>110</b>). The gateway device <b>10</b> sends the DNS query (&#x201c;DNS query for AFTR server address&#x201d;) to the DNS server <b>40</b>, including a request for the IP address of the AFTR server <b>50</b>.</p><p id="p-0048" num="0053">At step S<b>130</b>, the gateway device <b>10</b> determines whether a reply to the DNS query was received from the DNS server <b>40</b>. If a reply to the DNS query (&#x201c;DNS response&#x201d;) was received from the DNS server <b>40</b> (&#x201c;YES&#x201d; at step S<b>130</b>), the DNS query was successful, and the method proceeds to step S<b>140</b>.</p><p id="p-0049" num="0054">At step S<b>140</b>, the gateway device <b>10</b> receives the IP address of the AFTR server <b>50</b>, which is included in the reply to the DNS query (&#x201c;DNS response&#x201d;) that the gateway device <b>10</b> received from the DNS server <b>40</b>.</p><p id="p-0050" num="0055">At step S<b>150</b>, the gateway device <b>10</b> establishes a DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b>. The gateway device <b>10</b> connects with the AFTR server <b>50</b> using the IP address of the AFTR server <b>50</b> that the gateway device <b>10</b> received from the DNS server <b>40</b> (at step S<b>140</b>), and sends a request to establish the DS-lite tunnel (&#x201c;setup DSlite tunnel&#x201d;) to the AFTR server <b>50</b>. In response to the request, the gateway device <b>10</b> receives a reply (&#x201c;setup DSlite tunnel response&#x201d;) from the AFTR server <b>50</b>, and establishes the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b>.</p><p id="p-0051" num="0056">As discussed above, the gateway device <b>10</b> can then provide the client devices <b>20</b> (e.g., user devices with IPv4 addresses only) with access to an external network (the Internet), via the DS-lite tunnel that has been established between the gateway device <b>10</b> and the AFTR server <b>50</b> using the IP address of the AFTR server <b>50</b>.</p><p id="p-0052" num="0057">According to some example embodiments, the gateway device <b>10</b> saves the IP address of the AFTR server <b>50</b> in the memory of the gateway device <b>10</b>, at step S<b>160</b>.</p><p id="p-0053" num="0058">Once the DS-lite tunnel is established, the gateway device <b>10</b> can maintain the DS-lite tunnel with the AFTR server <b>50</b>. For example, the gateway device <b>10</b> may periodically send subsequent DNS queries for subsequent IP addresses of the AFTR server <b>50</b> to the DNS server <b>40</b>, based on a DNS time to live (TTL) timer. At step S<b>170</b>, the gateway device <b>10</b> determines whether the DNS TTL timer has elapsed (&#x201c;DNS TTL timer expired?&#x201d;). If the DNS TTL timer has not yet elapsed (&#x201c;NO&#x201d; at step S<b>170</b>), then the method returns to step S<b>170</b> (e.g., after some delay or the like). If the DNS TTL timer has elapsed, then the method returns to step S<b>120</b> to send a subsequent DNS query to the DNS server <b>40</b> (also refer to step S<b>220</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>). Details regarding the subsequent DNS query will be discussed below with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0054" num="0059">Now referring back to step S<b>130</b>, if the gateway device <b>10</b> determines that a reply to the DNS query (&#x201c;DNS response&#x201d;) was not received from the DNS server <b>40</b> (&#x201c;NO&#x201d; at step S<b>130</b>), then the DNS query failed. As discussed above, the related method performed by the known gateway device would ordinarily end at this point, without establishing a DS-lite tunnel in the event of failure of the DNS query (e.g., &#x201c;IPv4 datapath fail&#x201d;), and the client devices having only IPv4 addresses would be unable to access the Internet. However, in the event that the gateway device <b>10</b> according to some example embodiments does not receive a reply to the DNS query from the DNS server <b>40</b>, then the method according to some example embodiments of inventive concepts disclosed herein does not end, and instead proceeds to step S<b>180</b>.</p><p id="p-0055" num="0060">At step S<b>180</b>, the gateway device <b>10</b> retrieves a predetermined IP address from the memory of the gateway device <b>10</b>. The predetermined IP address may be stored in the memory of the gateway device <b>10</b> based on a default configuration of the gateway device <b>10</b>, an initial setting by a user (e.g., a customer, a technician, a network administrator, etc.), or a previous successful DNS query, according to some example embodiments. For example, the predetermined IP address may be a user pre-set using Management Information Base (MIB). An MSO can use Simple Network Management Protocol (SNMP) to manage user modems and gateways remotely. Most of the modem and gateway configuration information is saved in MIB and can be accessed and set remotely via SNMP. Alternatively, the predetermined IP address may be saved in the memory of the gateway device <b>10</b> in response to a previous successful DNS query, for example.</p><p id="p-0056" num="0061">At step S<b>190</b>, the gateway device <b>10</b> establishes the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b> using the predetermined IP address. The gateway device <b>10</b> connects with the AFTR server <b>50</b> using the predetermined IP address that the gateway device <b>10</b> retrieved from the memory of the gateway device <b>10</b>, and sends a request to establish the DS-lite tunnel (&#x201c;setup DSlite tunnel&#x201d;) to the AFTR server <b>50</b>. In response to the request, the gateway device <b>10</b> receives a reply (&#x201c;setup DSlite tunnel response&#x201d;) from the AFTR server <b>50</b>, and establishes the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b>.</p><p id="p-0057" num="0062">In this manner, the gateway device <b>10</b> according to some example embodiments of inventive concepts disclosed herein can provide the client devices <b>20</b> (e.g., user devices with IPv4 addresses only) with access to an external network (the Internet), via the DS-lite tunnel that has been established between the gateway device <b>10</b> and the AFTR server <b>50</b>, even in the event of a failed DNS query by using a predetermined IP address that is stored in the memory of the gateway device <b>10</b>.</p><p id="p-0058" num="0063">Next, a process for maintaining the DS-lite tunnel that has been established between the gateway device <b>10</b> and the AFTR server <b>50</b>, including details regarding the subsequent DNS query (mentioned above in connection with step S<b>170</b>), will be discussed with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0059" num="0064"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow chart of a method for maintaining a DS-lite tunnel between a gateway device and an AFTR server, according to some example embodiments.</p><p id="p-0060" num="0065">The method of <figref idref="DRAWINGS">FIG. <b>4</b></figref> may be performed by the gateway device <b>10</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. The gateway device <b>10</b> may include processing circuitry for implementing the algorithm for maintaining the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b>. For example, the gateway device <b>10</b> may include a memory device storing software in the form of computer-readable instructions and a processor configured to execute the software. The gateway device <b>10</b> may also store data (e.g., IP addresses) in the memory device or in a separate memory, for use during the process. Thus, the gateway device <b>10</b> may include a combination of hardware and software programmed to maintain the DS-lite tunnel.</p><p id="p-0061" num="0066">After a DNS TTL timer expires (&#x201c;YES&#x201d; at S<b>170</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, for example), a method for maintaining the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b> may proceed to step S<b>220</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, according to some example embodiments. At step S<b>220</b>, the gateway device <b>10</b> sends a subsequent DNS query to the DNS server <b>40</b>, including the domain name of the AFTR server <b>50</b> and a request for a subsequent IP address of the AFTR server <b>50</b>.</p><p id="p-0062" num="0067">At step S<b>230</b>, the gateway device <b>10</b> determines whether a reply to the subsequent DNS query was received from the DNS server <b>40</b>. If a reply to the subsequent DNS query (&#x201c;DNS response&#x201d;) was received from the DNS server <b>40</b> (&#x201c;YES&#x201d; at step S<b>230</b>), the subsequent DNS query was successful, and the method proceeds to step S<b>240</b>.</p><p id="p-0063" num="0068">At step S<b>240</b>, the gateway device <b>10</b> receives the subsequent IP address of the AFTR server <b>50</b>, which is included in the reply to the subsequent DNS query (&#x201c;DNS response&#x201d;) that the gateway device <b>10</b> received from the DNS server <b>40</b>.</p><p id="p-0064" num="0069">At step S<b>250</b>, the gateway device <b>10</b> maintains the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b> using the subsequent IP address of the AFTR server <b>50</b> that the gateway device <b>10</b> received from the DNS server <b>40</b> (at step S<b>240</b>).</p><p id="p-0065" num="0070">As discussed above, the gateway device <b>10</b> can then continue to provide the client devices <b>20</b> (e.g., user devices with IPv4 addresses only) with access to an external network (the Internet), via the DS-lite tunnel that has been maintained between the gateway device <b>10</b> and the AFTR server <b>50</b> using the subsequent IP address of the AFTR server <b>50</b>.</p><p id="p-0066" num="0071">According to some example embodiments, the gateway device <b>10</b> updates the memory of the gateway device <b>10</b> with the subsequent IP address of the AFTR server <b>50</b>, at step S<b>260</b>.</p><p id="p-0067" num="0072">Again, the gateway device <b>10</b> may continue to maintain the DS-lite tunnel with the AFTR server <b>50</b>, if still needed. For example, the gateway device <b>10</b> may periodically send additional subsequent DNS queries for additional subsequent IP addresses of the AFTR server <b>50</b> to the DNS server <b>40</b>, based on the DNS TTL timer. At step S<b>270</b>, the gateway device <b>10</b> determines whether the DNS TTL timer has elapsed (&#x201c;DNS TTL timer expired?&#x201d;). If the DNS TTL timer has not yet elapsed (&#x201c;NO&#x201d; at step S<b>270</b>), then the method returns to step S<b>270</b> (e.g., after some delay or the like). If the DNS TTL timer has elapsed, then the method returns to step S<b>220</b> to send an additional subsequent DNS query to the DNS server <b>40</b>. This process may continue (e.g., repeat at periodic intervals) for as long as the gateway device <b>10</b> needs to maintain the DS-lite tunnel with the AFTR server <b>50</b>.</p><p id="p-0068" num="0073">Now referring back to step S<b>230</b>, if the gateway device <b>10</b> determines that a reply to the subsequent DNS query (&#x201c;DNS response&#x201d;) was not received from the DNS server <b>40</b> (&#x201c;NO&#x201d; at step S<b>230</b>), then the subsequent DNS query failed. As discussed above, the related method performed by the known gateway device would ordinarily end at this point, without maintaining the DS-lite tunnel in the event of failure of the subsequent DNS query (e.g., &#x201c;IPv4 datapath fail&#x201d;), and the client devices having only IPv4 addresses would lose access to the Internet. However, in the event that the gateway device <b>10</b> according to some example embodiments does not receive a reply to the subsequent DNS query from the DNS server <b>40</b>, then the method according to some example embodiments of inventive concepts disclosed herein does not end, and instead proceeds to step S<b>280</b>.</p><p id="p-0069" num="0074">At step S<b>280</b>, the gateway device <b>10</b> retrieves a saved IP address of the AFTR server <b>50</b> from the memory of the gateway device <b>10</b>. For example, the gateway device <b>10</b> may have stored an IP address of the AFTR server <b>50</b> in the memory of the gateway device <b>10</b> in response to a previous successful DNS query (e.g., at step S<b>160</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>), according to some example embodiments.</p><p id="p-0070" num="0075">At step S<b>290</b>, the gateway device <b>10</b> maintains the DS-lite tunnel between the gateway device <b>10</b> and the AFTR server <b>50</b> using the saved IP address of the AFTR server <b>50</b>, according to some example embodiments.</p><p id="p-0071" num="0076">In this manner, the gateway device <b>10</b> according to some example embodiments of inventive concepts disclosed herein can continue to provide the client devices <b>20</b> (e.g., user devices with IPv4 addresses only) with access to an external network (the Internet), via the DS-lite tunnel that has been maintained between the gateway device <b>10</b> and the AFTR server <b>50</b>, even in the event of a failed subsequent DNS query by using a saved IP address that is stored in the memory of the gateway device <b>10</b> in response to a previous successful DNS query.</p><p id="p-0072" num="0077"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is block diagram of an electronic apparatus for establishing and maintaining a DS-lite tunnel, according to some example embodiments. For example, the electronic apparatus may be a gateway device <b>10</b> described above in connection with <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and may perform the methods described above in connection with <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref>.</p><p id="p-0073" num="0078">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the gateway device <b>10</b> includes at least a processor <b>101</b>, a memory <b>102</b>, and a bus <b>103</b>, among various other electronic components (e.g., for enabling wired and/or wireless communication) which are not illustrated for simplicity.</p><p id="p-0074" num="0079">The processor <b>101</b> controls the general operations of the gateway device <b>10</b> and may include, but is not limited to, a central processing unit (CPU), dedicated control circuitry, a hardware microprocessor, a multi-core processor, a single core processor, a field programmable gate array (FPGA), a microcontroller, an integrated circuit (IC), an application specific integrated circuit (ASIC), a large scale integrated circuit (LSI), system LSI, super LSU or ultra LSI components, a digital signal processor (DSP), or other similar processing device capable of executing any type of instructions, algorithms, programs, or software for controlling the circuitry and performing the above-described functions of the gateway device <b>10</b>.</p><p id="p-0075" num="0080">The memory <b>102</b> may be a non-transitory computer-readable medium that stores various programming code (e.g., software instructions) and data for implementing steps of an algorithm when executed by the processor <b>101</b>. The memory <b>102</b> may include a single memory or multiple memories or memory locations that include, but are not limited to, a random access memory (RAM), dynamic random access memory (DRAM), a memory buffer, a hard drive, a database, an erasable programmable read only memory (EEPROM), a read only memory (ROM) a flash memory, logic blocks of a field programmable gate array (FPGA), hard disk or any other various layers of memory hierarchy. The memory <b>102</b> can be used to store any type of software instructions including a program associated with algorithms, processes, or operations for controlling the general functions and operation of the gateway device <b>10</b> and performing the method of establishing and maintaining the DS-lite tunnel for the client devices <b>20</b>. For example, the memory <b>102</b> can include RAM as a working memory for the processor <b>101</b> and/or a non-volatile memory provided for storage of program code, software, apps, device information, user data, and various other pieces of data associated with establishing and maintaining a DS-lite tunnel in a network.</p><p id="p-0076" num="0081">The bus <b>103</b> is an internal connection that enables communication between various electronic components of the gateway device <b>10</b>. For example, the processor <b>101</b> may store and retrieve program instructions and/or data for performing steps of the algorithm from the memory <b>102</b> via the bus <b>103</b>.</p><p id="p-0077" num="0082">In summary, the above-described method and apparatus according to various example embodiments of inventive concepts disclosed herein make it possible to establish and maintain a DS-lite tunnel between a gateway device and an AFTR server, even in the event of a failure of a DNS query or a subsequent DNS query, using mechanism that employs a predetermined IP address or a saved IP address of the AFTR server that is stored in a memory of the gateway device in order to ensure that the DS-lite technology keeps working when a DNS query fails. These features amount to technological improvements over a known gateway device and related method for at least the reasons discussed in detail above.</p><p id="p-0078" num="0083">Each of the elements of the present invention may be configured by implementing dedicated hardware or a software program on a memory controlling a processor to perform the functions of any of the components or combinations thereof. Any of the components may be implemented as a CPU or other processor reading and executing a software program from a recording medium such as a hard disk or a semiconductor memory, for example. The processes disclosed above constitute examples of algorithms that can be affected by software, applications (apps, or mobile apps), or computer programs. The software, applications, computer programs or algorithms can be stored on a non-transitory computer-readable medium for instructing a computer, such as a processor in an electronic apparatus, to execute the methods or algorithms described herein and shown in the drawing figures (<figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref>). The software and computer programs, which can also be referred to as programs, applications, components, or code, include machine instructions for a programmable processor, and can be implemented in a high-level procedural language, an object-oriented programming language, a functional programming language, a logical programming language, or an assembly language or machine language.</p><p id="p-0079" num="0084">The term &#x201c;non-transitory computer-readable medium&#x201d; refers to any computer program product, apparatus or device, such as a magnetic disk, optical disk, solid-state storage device (SSD), memory, and programmable logic devices (PLDs), used to provide machine instructions or data to a programmable data processor, including a computer-readable medium that receives machine instructions as a computer-readable signal. By way of example, a computer-readable medium can comprise DRAM, RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired computer-readable program code in the form of instructions or data structures and that can be accessed by a general-purpose or special-purpose computer, or a general-purpose or special-purpose processor. Disk or disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and Blu-ray disc. Combinations of the above are also included within the scope of computer-readable media.</p><p id="p-0080" num="0085">While the principles of the inventive concepts have been described above in connection with specific devices, apparatuses, systems, algorithms, programs and/or methods, it is to be clearly understood that this description is made only by way of example and not as limitation. One of ordinary skill in the art will appreciate that various modifications and changes can be made without departing from the scope of the claims below.</p><p id="p-0081" num="0086">The word &#x201c;comprise&#x201d; or a derivative thereof, when used in a claim, is used in a nonexclusive sense that is not intended to exclude the presence of other elements or steps in a claimed structure or method. As used in the description herein and throughout the claims that follow, &#x201c;a&#x201d;, &#x201c;an&#x201d;, and &#x201c;the&#x201d; includes plural references unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of &#x201c;in&#x201d; includes &#x201c;in&#x201d; and &#x201c;on&#x201d; unless the context clearly dictates otherwise. Use of the phrases &#x201c;capable of,&#x201d; &#x201c;configured to,&#x201d; or &#x201c;operable to&#x201d; in one or more embodiments refers to some apparatus, logic, hardware, and/or element designed in such a way to enable use thereof in a specified manner.</p><p id="p-0082" num="0087">The above description illustrates various embodiments along with examples of how aspects of particular embodiments may be implemented and are presented to illustrate the flexibility and advantages of particular embodiments as defined by the following claims, and should not be deemed to be the only embodiments. One of ordinary skill in the art will appreciate that based on the above disclosure and the following claims, other arrangements, embodiments, implementations and equivalents may be employed without departing from the scope hereof as defined by the claims. It is contemplated that the implementation of the components and functions of the present disclosure can be done with any newly arising technology that may replace any of the above-implemented technologies. Accordingly, the specification and figures are to be regarded in an illustrative rather than a restrictive sense, and all such modifications are intended to be included within the scope of the present invention. The benefits, advantages, solutions to problems, and any element(s) that may cause any benefit, advantage, or solution to occur or become more pronounced are not to be construed as a critical, required, or essential features or elements of any or all the claims. The invention is defined solely by the appended claims including any amendments made during the pendency of this application and all equivalents of those claims as issued.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What we claim is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An electronic apparatus for establishing a Dual-Stack Lite (DS-lite) tunnel, the electronic apparatus comprising:<claim-text>a memory storing computer-readable instructions;</claim-text><claim-text>a processor configured to execute the computer-readable instructions to:<claim-text>acquire an Internet Protocol (IP) address of a Domain Name System (DNS) server and a domain name of an Address Family Transition Router (AFTR) server from a Dynamic Host Configuration Protocol (DHCP) server;</claim-text><claim-text>send a DNS query to the DNS server, wherein the DNS query comprises the domain name of the AFTR server;</claim-text><claim-text>determine that a reply to the DNS query was received from the DNS server, wherein the reply comprises the IP address of the AFTR server;</claim-text><claim-text>establish a DS-lite tunnel between the electronic apparatus and the AFTR server;</claim-text><claim-text>provide to one or more client devices with IPv4 addresses only access to an external network via the DS-lite tunnel using the IP address of the AFTR server;</claim-text><claim-text>maintain the DS-lite tunnel with the AFTR server; and</claim-text><claim-text>periodically send one or more subsequent DNS queries for one or more subsequent IP addresses of the AFTR server to the DNS server based on a DNS time to live (TTL) timer.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The electronic apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is further configured to execute the computer-readable instructions to:<claim-text>in response to failure of the DNS query, establish the DS-lite tunnel between the electronic apparatus and the AFTR server using a predetermined IP address,</claim-text><claim-text>wherein the predetermined IP address is stored in the memory based on one of:<claim-text>a default configuration of the electronic apparatus;</claim-text><claim-text>an initial setting by a user of the electronic apparatus; or</claim-text><claim-text>a previous successful DNS query.</claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The electronic apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the IP address of the AFTR server is saved in the memory of the electronic apparatus.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The electronic apparatus of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the processor is further configured to execute the computer-readable instructions to:<claim-text>maintain the DS-lite tunnel between the electronic apparatus and the AFTR server using the saved IP address of the AFTR server that is stored in the memory of the electronic apparatus in response to the DNS query being successful.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The electronic apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is further configured to execute the computer-readable instructions to:<claim-text>determine that the DNS time to live (TTL) timer has elapsed.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The electronic apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is further configured to execute the computer-readable instructions to:<claim-text>determine that the one of the one or more subsequent DNS queries is successful based on a reply to the one of the one or more subsequent DNS queries.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The electronic apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is further configured to execute the computer-readable instructions to:<claim-text>in response to failure of one of the one or more subsequent DNS queries:<claim-text>retrieve the saved IP address or the subsequent IP address of the AFTR server that is stored in the memory of the electronic apparatus in response to the DNS query or one of the subsequent DNS queries being successful; and</claim-text><claim-text>maintain the DS-lite tunnel between the gateway device and the AFTR server using the retrieved IP address of the AFTR server.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method for establishing a Dual-Stack Lite (DS-lite) tunnel, the method comprising:<claim-text>acquiring an Internet Protocol (IP) address of a Domain Name System (DNS) server and a domain name of an Address Family Transition Router (AFTR) server from a Dynamic Host Configuration Protocol (DHCP) server;</claim-text><claim-text>sending a DNS query to the DNS server, wherein the DNS query comprises the domain name of the AFTR server;</claim-text><claim-text>determining that a reply to the DNS query was received from the DNS server, wherein the reply comprises the IP address of the AFTR server;</claim-text><claim-text>establishing a DS-lite tunnel between the electronic apparatus and the AFTR server;</claim-text><claim-text>providing to one or more client devices with IPv4 addresses only access to an external network via the DS-lite tunnel using the IP address of the AFTR server;</claim-text><claim-text>maintaining the DS-lite tunnel with the AFTR server; and</claim-text><claim-text>periodically sending one or more subsequent DNS queries for one or more subsequent IP addresses of the AFTR server to the DNS server based on a DNS time to live (TTL) timer.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>in response to failure of the DNS query, establishing the DS-lite tunnel between the gateway device and the AFTR server using a predetermined IP address that is stored in a memory of the gateway device,</claim-text><claim-text>wherein the predetermined IP address is stored in the memory of the gateway device based on one of:</claim-text><claim-text>a default configuration of the gateway device;</claim-text><claim-text>an initial setting by a user of the gateway device; or</claim-text><claim-text>a previous successful DNS query.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein<claim-text>the IP address of the AFTR server is saved in a memory of the gateway device.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>maintaining the DS-lite tunnel between the gateway device and the AFTR server using the saved IP address of the AFTR server that is stored in the memory of the gateway device in response to the DNS query being successful.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>determine that the DNS time to live (TTL) timer has elapsed.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>in response to one of the subsequent DNS queries being successful:<claim-text>receiving a subsequent IP address of the AFTR server from the DNS server;</claim-text><claim-text>maintaining the DS-lite tunnel between the gateway device and the AFTR server using the subsequent IP address of the AFTR server; and</claim-text><claim-text>updating the memory of the gateway device with the subsequent IP address of the AFTR server.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>in response to failure of one of the subsequent DNS queries:<claim-text>retrieving the saved IP address of the AFTR server that is stored in the memory of the gateway device in response to the DNS query being successful; and</claim-text><claim-text>maintaining the DS-lite tunnel between the gateway device and the AFTR server using the saved IP address of the AFTR server.</claim-text></claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer-readable medium of an electronic apparatus storing one or more computer-readable instructions for establishing a Dual-Stack Lite (DS-lite) tunnel, that when executed by a processor of the electronic apparatus, cause the processor to perform one or more operations comprising:<claim-text>acquiring an Internet Protocol (IP) address of a Domain Name System (DNS) server and a domain name of an Address Family Transition Router (AFTR) server from a Dynamic Host Configuration Protocol (DHCP) server;</claim-text><claim-text>sending a DNS query to the DNS server, wherein the DNS query comprises the domain name of the AFTR server;</claim-text><claim-text>determining that a reply to the DNS query was received from the DNS server, wherein the reply comprises the IP address of the AFTR server;</claim-text><claim-text>establishing a DS-lite tunnel between the electronic apparatus and the AFTR server;</claim-text><claim-text>providing to one or more client devices with IPv4 addresses only access to an external network via the DS-lite tunnel using the IP address of the AFTR server;</claim-text><claim-text>maintaining the DS-lite tunnel with the AFTR server; and</claim-text><claim-text>periodically sending one or more subsequent DNS queries for one or more subsequent IP addresses of the AFTR server to the DNS server based on a DNS time to live (TTL) timer.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the software program, when executed by the processor of the electronic apparatus, further causes the electronic apparatus to:<claim-text>in response to failure of the DNS query, establish the DS-lite tunnel between the electronic apparatus and the AFTR server using a predetermined IP address that is stored in a memory of the electronic apparatus based on one of:<claim-text>a default configuration of the electronic apparatus;</claim-text><claim-text>an initial setting by a user of the electronic apparatus; or</claim-text><claim-text>a previous successful DNS query.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the IP address of the AFTR server is saved in a memory of the electronic apparatus.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the software program, when executed by the processor of the electronic apparatus, further causes the electronic apparatus to at least one of:<claim-text>maintain the DS-lite tunnel between the electronic apparatus and the AFTR server using the saved IP address of the AFTR server in response to the DNS query being successful; and</claim-text><claim-text>determine that the one of the one or more subsequent DNS queries is successful based on a reply to the one of the one or more subsequent DNS queries.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the software program, when executed by the processor of the electronic apparatus, further causes the electronic apparatus to:<claim-text>determine that the DNS time to live (TTL) timer has elapsed.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the software program, when executed by the processor of the electronic apparatus, further causes the electronic apparatus to:<claim-text>in response to failure of one of the subsequent DNS queries:<claim-text>retrieve the saved IP address of the AFTR server that is stored in the memory of the electronic apparatus in response to the DNS query being successful; and</claim-text><claim-text>maintain the DS-lite tunnel between the electronic apparatus and the AFTR server using the saved IP address of the AFTR server.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>