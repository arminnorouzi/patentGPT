<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007662A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007662</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930183</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="regional"><country>EP</country><doc-number>18206310.7</doc-number><date>20181114</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>72</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>72</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e61">DYNAMIC SLICE PRIORITY HANDLING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17281529</doc-number><date>20210330</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11470620</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/EP2019/077560</doc-number><date>20191011</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930183</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62744439</doc-number><date>20181011</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Koninklijke KPN N.V.</orgname><address><city>Rotterdam</city><country>NL</country></address></addressbook><residence><country>NL</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NEDERLANDSE ORGANISATIE VOOR TOEGEPAST-NATUURWETENSCHAPPELIJK ONDERZOEK TNO</orgname><address><city>'s-Gravenhage</city><country>NL</country></address></addressbook><residence><country>NL</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>IJntema</last-name><first-name>Wieger</first-name><address><city>Rotterdam</city><country>NL</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Nooren</last-name><first-name>Pieter</first-name><address><city>Delft</city><country>NL</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Embodiments provide functionality for dynamic handling of network slice priorities. In an embodiment, a slice priority manager receives, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in a communication network. Based on the received data, changes in the network services node's ability to maintain the instantiated network slices are identified and a communication service provider is notified of the change. To continue, slice priority data that indicates a preferred order of a portion of the network slices for allocating the network resources is received from the communication service provider. In turn, an indication of the slice priority data is forwarded to the network services node to update allocation of network resources for the slices.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="80.52mm" wi="158.75mm" file="US20230007662A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="183.05mm" wi="118.87mm" orientation="landscape" file="US20230007662A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="161.80mm" wi="118.53mm" orientation="landscape" file="US20230007662A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="155.36mm" wi="118.53mm" orientation="landscape" file="US20230007662A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="118.96mm" wi="118.45mm" orientation="landscape" file="US20230007662A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="155.28mm" wi="127.76mm" orientation="landscape" file="US20230007662A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="203.62mm" wi="119.04mm" orientation="landscape" file="US20230007662A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="114.98mm" wi="133.43mm" orientation="landscape" file="US20230007662A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="191.85mm" wi="125.14mm" orientation="landscape" file="US20230007662A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="198.63mm" wi="127.76mm" orientation="landscape" file="US20230007662A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="203.03mm" wi="111.84mm" orientation="landscape" file="US20230007662A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="199.47mm" wi="125.14mm" orientation="landscape" file="US20230007662A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="139.36mm" wi="136.74mm" orientation="landscape" file="US20230007662A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="171.45mm" wi="98.30mm" orientation="landscape" file="US20230007662A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="64.52mm" wi="102.36mm" orientation="landscape" file="US20230007662A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="69.43mm" wi="91.44mm" orientation="landscape" file="US20230007662A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="133.60mm" wi="103.38mm" orientation="landscape" file="US20230007662A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. application Ser. No. 17/281,529, which is the U.S. National Stage Application of International Application No. PCT/EP2019/077560 filed on Oct. 11, 2019, published in English, which claims priority under 35 U.S.C. &#xa7; 119 or 365 to European Application No. 18206310.7, filed Nov. 14, 2018, which claims the benefit of U.S. Provisional Application No. 62/744,439, filed on Oct. 11, 2018. The entire teachings of the above applications are incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The invention relates to a network node, a communications network and a method for managing slide priorities.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Next generation network architectures, such as 5G, may separate network functions from the underlying hardware resources, e.g., in the case of a telecommunication network, the network nodes of the network. For that purpose, so-called Network Virtualization (NV) techniques may be used, and, in particular, Network Function Virtualization (NFV) techniques which provide network functions that are instantiable in software using the hardware of one or more of the network nodes. Herein, &#x201c;providing&#x201d; or &#x201c;establishing&#x201d; a network function may thus comprise or refer to the instantiation of a network function in a network.</p><p id="p-0005" num="0004">Such next generation network architectures may further define virtual data planes which separate data traffic in the network. Such virtual data planes, which may be established by a Software-Defined Network (SDN) but also by other techniques, may include a management plane to enable transmissions of management data in the network, a control plane to enable transmission of control data in the network, and a user plane to enable transmission of user data to and/or from User Equipment (UE) connected to the network. The user plane may also be referred to simply as the &#x201c;data plane.&#x201d;</p><p id="p-0006" num="0005">Next generation network architectures, such as the architecture described in 3GPP TS 28.530, &#x201c;Management and orchestration; Concepts, use cases and requirements,&#x201d; 3GPP, September 2018, creates isolated network slices inside the mobile operator domain. These slices can be tailored for specific services and functionalities. In this approach, the infrastructure of a mobile operator supports multiple network slices. In 3GPP TS 28.530, the requirements state that the 3GPP management system has the capability of re-allocating resources of a Network Slice Instance (NSI) according to a priority.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">While priorities are contemplated by 3GPP TS 28.530 requirements, these priorities are static and there is no existing functionality for dynamically managing network slice priorities. Embodiments based on the present disclosure provide a new way to handle priorities of different virtual network slices that are provided on a physical network in the event there is a lack of network resources, for example, in the case of network failure, or if there is an abundance of network resources. Instead of using static priorities, as is done in the approach currently developed in 3GPP, embodiments make the definition of the priorities in the network slicing management functions dynamic, based on interactions between the network operator (NOP) and the communication service providers (CSPs) that use the slices for their services. In embodiments, the information flows between the NOP and the CSPs and the decisions on slice priorities may be provided by a new function, a Slice Priority Manager. An embodiment builds on the network-level implementation of priorities currently under development for the network functions virtualization management and orchestration (NFV-MANO) architecture.</p><p id="p-0008" num="0007">Embodiments improve the ability for CSPs to provide end users an uninterrupted and high-quality service experience by reducing the number of network slice de-instantiations. Further, in the event capacity reductions are still needed, e.g., a slice is de-instantiated, the capacity reductions may be applied to the network slices according to preferences provided by the CSPs themselves. For example, a CSP may prefer capacity reductions where the negative consequences for its end users are the smallest.</p><p id="p-0009" num="0008">An example embodiment for providing network slice priority handling may be directed to a network node configured as a slice priority management node for use with a communication network. The network node may be configured to receive, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in the communication network, where the network services node may be configured to enable the instantiation of the network slices, each representing a virtual network. In an embodiment, the data indicating changes may be any such data that indicates an influence on the ability to maintain a network slice. Based on the received data, the network node may identify a change in the network services node's ability to maintain the instantiated network slices and notify a communication service provider of the change. In turn, the network node may receive, from the communication service provider, slice priority data that indicates a preferred order of a portion of the network slices for allocating the network resources. In response, the network node may forward an indication of the slice priority data to the network services node.</p><p id="p-0010" num="0009">According to an example embodiment, the indication of the slice priority data may include at least one of the slice priority data and instructions to remove a given network slice of the instantiated network slices. In another embodiment, the data received from the network services node at the network node may indicate a lack of resources for maintaining the instantiated network slices or an abundance of resources for maintaining the instantiated network slices. According to an embodiment, the network node may further be configured, in response to receiving the slice priority data from the communication service provider, to determine if changing allocation of network resources based on the slice priority data corrects a resource problem and, if changing the allocation of network resources based on the slice priority data does not correct the resource problem, notify the communication service provider. In such an embodiment, the network node may be configured to determine if changing the allocation of the network resources based on the slice priority data corrects the resource problem based upon at least one of: connectivity capacity data, storage capacity data, and processing capacity data. According to an embodiment, at least one of the connectivity capacity data, the storage capacity data, and the processing capacity data may include at least one of: base capacity data, maximum guaranteed capacity data, and maximum non-guaranteed capacity data.</p><p id="p-0011" num="0010">An example embodiment of the network node may further be configured to notify the communication service provider of the change via an exposure function. Moreover, in another example embodiment of the network node, the data indicating changes in network resources may be pushed to the network node from the network services node or received in response to a request from the network node to the network services node. Yet another embodiment of the network node may be configured to receive data indicating available network resources from a transport network system.</p><p id="p-0012" num="0011">According to yet another embodiment, the network node may be configured, in identifying a change in the network services node's ability to maintain the instantiated network slices, to determine there are insufficient resources available to maintain a slice associated with the communication service provider and only notify the communication service provider of the change in the network services node's ability to maintain the instantiated network slices if it is determined there are insufficient resources available to maintain the slice associated with the communication service provider. In such an embodiment, a communication service provider is only notified of the change, if the change affects one of the communication service provider's slices. According to an embodiment, the network node may be configured to determine there are insufficient resources available to maintain the slice based upon any data that influences maintaining a slice. For instance, in an example embodiment, the network node may be configured to determine there are insufficient resources available to maintain the slice associated with the communication service provider based upon at least one of: connectivity capacity data, storage capacity data, and processing capacity data. According to one such embodiment, at least one of the connectivity capacity data, the storage capacity data, and the processing capacity data may include at least one of: base capacity data, maximum guaranteed capacity data, and maximum non-guaranteed capacity data.</p><p id="p-0013" num="0012">Another embodiment of the network node may be configured to provide priority handling at the subnet slice level of granularity. In such an embodiment, the data indicating changes in network resources available for maintaining instantiated network slices may include location information or subnet slice identifiers, where the location information and subnet slice identifiers may indicate changes in network resources available to maintain instantiated subnet slices forming the network slices. Further, the network node may be configured to provide the location information or the subnet slice identifiers to the communication service provider, receive subnet slice priority data from the communication service provider, and forward an indication of the subnet slice priority data to the network services node. In this way, the communication service provider is made aware of changes in maintaining slices for particular geographic areas that are covered by particular subnet slices and the communication service provider provides its preferred priority for allocating resources to the subnet slices/geographic areas. Then, by forwarding an indication of the communication service provider's subnet preferences to the network services node, the network services node can implement the subnet preferences.</p><p id="p-0014" num="0013">Yet another embodiment of the network node may be configured, in notifying the communication service provider of the change, to indicate an order with which slices associated with the communication service provider will be allocated resources by the network services node. In one such embodiment, the network node may be configured to indicate the order using a mapping that numerically decouples priority indicators used by the network services node from priority indicators used by the communication service provider. In this way, the communication service provider is not notified of the priority with which slices associated with the communication service provider will be allocated resources as compared to network slices not associated with the communication service provider.</p><p id="p-0015" num="0014">Another example embodiment of the network node may be configured to store default slice priority data associated with the communication service provider and forward the default slice priority data to the network services node if the slice priority data is not received from the communication service provider.</p><p id="p-0016" num="0015">In accordance with another embodiment, the network node may be configured to determine a proposed slice priority and provide the proposed slice priority to the communication service provider. According to such an embodiment, the network node may be configured to determine the proposed slice priority based upon at least one of historical data, current resource usage data, and machine learning analysis of resource usage data.</p><p id="p-0017" num="0016">An embodiment of the network node may be configured to provide network slice priority handling for multiple communication service providers. In such an embodiment, the network node may further be configured to notify a second communication service provider of the change, receive slice priority data from the second communication service provider that indicates a preferred order of a second portion of the network slices for allocating the network resources, and forward an indication of the slice priority data received from the second communication service provider to the network services node.</p><p id="p-0018" num="0017">In an embodiment where the network node provides slice priority handling for multiple communication service providers, the network node may be further configured to determine if changing allocation of network resources based on the slice priority data received from the first communication service provider and the slice priority data received from the second communication service provider corrects a resource problem and, if changing the allocation of network resources based on the slice priority data received from the first communication service provider and the second communication service provider does not correct the resource problem, notify the first communication service provider and the second communication service provider.</p><p id="p-0019" num="0018">Another embodiment is directed to a communication network comprising a plurality of network nodes, where the network is configured to enable instantiation of network slices which represent virtual networks. The communication network may comprise a slice priority management function configured to receive, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in the communication network, where the network services node is configured to enable the instantiation of the network slices that each represent a virtual network. The slice priority management function in the communication network may further be configured to identify a change in the network services node's ability to maintain the instantiated network slices based on the received data, notify a communication service provider of the change, and receive, from the communication service provider, slice priority data that indicates a preferred order of a portion of the network slices for allocating the network resources. Further, the slice priority management function may forward an indication of the slice priority data to the network services node.</p><p id="p-0020" num="0019">Yet another embodiment is directed to a method for managing slice priority in a communication network. Such a method embodiment may begin by receiving, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in the communication network where, the network services node imay be configured to enable the instantiation of the network slices that each represent a virtual network. The method may continue by identifying a change in the network services node's ability to maintain the instantiated network slices based on the received data and notifying a communication service provider of the change. In turn, slice priority data may be received from the communication service provider and an indication of the slice priority data may be forwarded to the network services node.</p><p id="p-0021" num="0020">In accordance with another aspect of the disclosure, a non-transitory computer readable medium may be provided comprising a computer program that comprises instructions for causing a processor system to provide slice priority handling. According to such an embodiment, the instructions may cause the processor system to receive, from a network services node (configured to enable the instantiation of the network slices each representing a virtual network), data indicating changes in network resources available for maintaining instantiated network slices in the communication network. Further, the instructions may cause the processor system to, based on the received data, identify a change in the network services node's ability to maintain the instantiated network slices and notify a communication service provider of the change. The instructions also may cause the processor system to receive, from the communication service provider, slice priority data indicating a preferred order of a portion of the network slices for allocating the network resources and forward an indication of the slice priority data to the network services node.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0022" num="0021">The foregoing will be apparent from the following more particular description of example embodiments, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating embodiments.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a network including slices in which an embodiment may be implemented.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a network with sufficient resources for implementing slices.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a network with insufficient resources for maintaining instantiated slices in which an embodiment may be implemented.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a network with slices configured after re-allocation of network resources according to principles of an embodiment.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts interactions between slice management functions and a network services node in which an embodiment may be implemented.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating capacity information flows that are utilized in embodiments.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a method for managing network slice priority in an embodiment.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram depicting dynamic handling of slice priorities according to an embodiment.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an embodiment of dynamic handling of slice priorities through an exposure function.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts an embodiment for handling slice priorities by pulling information on changes in network resources.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an embodiment providing dynamic slice priority management using information exchanged with a transport network.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts slice subnets that may be managed according to embodiments.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates resource capacities that may be employed in providing dynamic slice priorities according embodiments.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a system which may represent a network node implementing a slice management function according to an embodiment.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>15</b></figref> depicts a computer readable medium comprising non-transitory data comprising instructions for causing a processor system to perform an embodiment.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of an exemplary data processing system that may be used to implement an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0039" num="0038">A description of example embodiments follows.</p><p id="p-0040" num="0039">The teachings of all patents, published applications and references cited herein are incorporated by reference in their entirety.</p><p id="p-0041" num="0040">Embodiments provide dynamic priority handling for network slices. <figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a network <b>100</b> in which embodiments may be employed. The network <b>100</b> includes the user equipment devices <b>101</b><i>a </i>and <b>101</b><i>b </i>which are a phone and a car, respectively. The network <b>100</b> is implemented by the physical components which include the 5G radio access network <b>102</b> which is connected to the 5G core network <b>103</b>. The 5G core network <b>103</b> is coupled to any number of data networks <b>104</b><i>a </i>and <b>104</b><i>n</i>. Through the radio access network <b>102</b> and core network <b>103</b>, the user equipment devices <b>101</b><i>a </i>and <b>101</b><i>b </i>are able to connect to the data networks <b>104</b><i>a</i>-<i>n. </i></p><p id="p-0042" num="0041">The network <b>100</b> includes the virtualized networks, called network slices, <b>107</b><i>a </i>and <b>107</b><i>n</i>. The network slice <b>107</b><i>a </i>comprises the virtualized 5G radio access network <b>105</b><i>a </i>and virtualized 5G core network <b>106</b><i>a </i>and the network slice <b>107</b><i>n </i>comprises the virtualized 5G radio access network <b>105</b><i>n </i>and virtualized 5G core network <b>106</b><i>n</i>. The slices <b>107</b><i>a</i>-<i>n, </i>5G radio access networks <b>105</b><i>a</i>-<i>n</i>, and 5G core networks <b>107</b><i>a</i>-<i>n </i>are instantiated using the physical components <b>102</b> and <b>103</b>. In the network <b>100</b>, the network slices <b>107</b><i>a </i>and <b>107</b><i>n </i>each represent a virtual network that provides connectivity, processing, and storage services, amongst other services, to the user equipment devices <b>101</b><i>a </i>and <b>101</b><i>b</i>. Embodiments can be employed in the network <b>100</b> to control allocation of network resources for maintaining the instantiated slices <b>107</b><i>a</i>-<i>n</i>. In an implementation, an embodiment may be provided as a slice priority management function operating in a management plane of the network <b>100</b>.</p><p id="p-0043" num="0042">In networks with multiple network slice instances (NSIs), i.e., slices, each slice can have a different priority. Therefore, network traffic in low priority slices will be affected when the infrastructure of the operator is not able to accommodate all of the slices.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a network <b>220</b> during normal operation. In the network <b>220</b>, the operator, in this example, European Telecommunications Standards Institute Management and Orchestration node, i.e., network services node, <b>221</b> communicates with the transport network <b>226</b>, which could be part of the Network Function Virtualization Infrastructure and the network services node <b>221</b> communicates with the virtual infrastructure layer <b>225</b> which is part of the Network Function Virtualization Infrastructure (NFVI). The layers <b>225</b> and <b>226</b> form the NFVI. The NFVI is the environment in which virtual network functions run. The NFVI environment includes physical resources (not shown), virtual resources, e.g., the emergency slice <b>223</b> and the enhanced mobile broadband (eMBB) slice <b>224</b>, and a virtualization layer, e.g., the virtual infrastructure <b>225</b>.</p><p id="p-0045" num="0044">To elaborate, computing, memory, and networking resources are the physical parts in NFVI. Virtual resources are instantiated on these physical resources. Any commodity network switch, which is part of the transport network <b>226</b> or physical server, storage server, or the like, comprise the physical parts in NFVI. Virtual resources include virtual computing, memory, and networking resources, e.g., the slices <b>223</b> and <b>224</b>, that are utilized by virtual network functions, e.g., the functions <b>222</b>. The virtualization layer <b>225</b> is responsible for abstracting physical resources into virtual resources. The virtualization layer may be referred to as a &#x201c;Hypervisor.&#x201d; The virtualization layer <b>225</b> decouples software from hardware which enables the software to progress independently from hardware.</p><p id="p-0046" num="0045">The network services node <b>221</b> uses the virtual infrastructure layer <b>225</b> to instantiate the eMBB slice <b>224</b> and the emergency slice <b>223</b>, which are just two example slices, amongst others, that may be instantiated in the network <b>220</b>. Further, the network <b>220</b> includes the management functions <b>222</b>. The management functions <b>222</b> include any functions, e.g., management functions that operate on multiple slices. In <figref idref="DRAWINGS">FIG. <b>2</b></figref> normal operation for all slices, <b>224</b> and <b>223</b>, is shown.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts the network <b>220</b> after an event <b>227</b>, such as the instantiation of a new slice or the failure of some elements of the network infrastructure, which causes a capacity shortage for the network infrastructure, to accommodate all slices. According to 3GPP requirements, in such situations, slices with higher priority will take over resources from lower priority slices. This may result in other slices being de-instantiated from the network infrastructure.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates the network <b>220</b> where a lack of capacity is solved by re-allocating resources to the higher priority slice, the emergency slice <b>223</b>. Existing methods perform this re-allocation based on a static priority, however, at the time of the event <b>227</b>, the static priority may no longer be desired, but, existing methods do not accommodate a change in priority. In contrast, embodiments described herein facilitate dynamic setting of resource priorities for maintaining slices and, thus, when an event occurs, such as a failure or abundance of resources, the resources can be allocated according to priorities that are determined at the time of the event based on the current conditions of the network and desired preferences of communication service providers.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an example of a deployment scenario of how functions can interact with the NFV-MANO functions <b>551</b>. It is noted that the deployment scenario depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref> is but one example and functions can be named differently and be configured to perform different functionalities. In an example, functions that interact with the NFV-MANO functions <b>551</b> may be any such functions as described in 3GPP TS 28.533, &#x201c;Management and orchestration; Architecture framework,&#x201d; 3GPP, September 2018. Further, the NFV-MANO functions <b>551</b> may include any such functions as described in ETSI, &#x201c;GS NFV-MAN 001-Network Functions Virtualisation (NFV); Management and Orchestration,&#x201d; December 2012.</p><p id="p-0050" num="0049">Returning to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in this deployment scenario the functions that interact with the NFV-MANO functions <b>551</b> include the network slice subnet management function (NSSMF) <b>556</b>, network function management function (NFMF) <b>557</b>, physical network function (PNF) <b>558</b>, and virtualized network function (VNF) <b>559</b>. The NSSMF <b>556</b> is capable of consuming the virtual network function (VNF) life cycle management (LCM) and the network service life cycle management related services provided by NFV-MANO. The NSSMF <b>556</b> is also a provider of network slice subnet related services. The NFMF <b>557</b> provides application level management of VNFs and physical network functions (PNFs) and is a producer of the network function (NF) provisioning service that includes configuration management (CM), fault management (FM) and performance management (PM). The NFMF <b>557</b> is also a consumer of the NF provisioning service produced by the VNFs and PNFs. The PNF <b>558</b> is a network function that is not virtualized, for example a base station. The VNF <b>559</b> is any network function that can run on a virtual infrastructure.</p><p id="p-0051" num="0050">The NFV-MANO functions <b>551</b> include the network function virtualization orchestrator (NFVO) <b>552</b>, virtual network function manager (VNFM) <b>553</b>, and virtualized infrastructure manager (VIM) (<b>554</b>). The NFVO <b>552</b> generates, maintains, and tears down network services of VNFs themselves. If there are multiple VNFs, NFVO <b>552</b> enables creation of end to end service over multiple VNFs. NFVO <b>552</b> is also responsible for global resource management of NFVI resources. For example, managing the NFVI resources, i.e. computing, storage, and networking resources among multiple VIMs in a network. The NFVO <b>552</b> performs its functions by not talking directly to VNFs but, through VNFM <b>553</b> and VIM <b>554</b>. The VNFM <b>553</b> manages a VNF or multiple VNFs i.e., it does the life cycle management of VNF instances. Life cycle management relates to setting up/maintaining and tearing down VNFs. The VIM <b>554</b> is the management system for NFVI. The VIM <b>554</b> is responsible for controlling and managing the NFVI computing, network, and storage resources within one operator's infrastructure domain. The VIM <b>554</b> is also responsible for collection of performance measurements and events.</p><p id="p-0052" num="0051">The functions <b>556</b>, <b>557</b>, <b>558</b>, and <b>559</b> can provide priorities for the subnet slices that can then be enforced by NFV-MANO <b>551</b>. In a standard approach, the functions <b>556</b>, <b>557</b>, <b>558</b>, and <b>559</b> determine a static priority for each slice that is then used by NFV-MANO <b>551</b>. However, this static priority does not necessarily reflect a desired allocation of network resources at the time of the capacity problem and does not ensure the best use of network resources.</p><p id="p-0053" num="0052">Embodiments solve the foregoing problem through use of a slice priority manager function that can be implemented to provide dynamic handling of slice priorities. <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates capacity information message flows in a network <b>660</b> that may be used in embodiments. In NFV-MANO, the capability to handle priorities for &#x201c;network services&#x201d; which map to 3GPP's network subnet slices, is being developed, through a new sub interface in the Os-Ma-nfvo interface. This interface is called the Network Function Virtualization infrastructure (NFVI) Capacity Information interface. The interface allows the capacity information message flows <b>667</b><i>a</i>-<i>d </i>to be implemented between the network services node, NFV-MANO <b>661</b>, and the network node <b>662</b> implementing the slice management functions <b>663</b>-<b>666</b>. It is noted that while the node <b>662</b> is depicted including the functions <b>663</b>-<b>666</b>, embodiments are not so limited, and the node <b>662</b> may include any functions as described in 3GPP TR 28.801, &#x201c;Telecommunication management; Study on management and orchestrations of network slicing for next generation network,&#x201d; 3GPP, January 2018. In <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the slice management functions include the communication service management function (CSMF) <b>663</b>, network slice management function (NSMF) <b>664</b>, and network slice subnet management function (NSSMF) <b>665</b>. The CSMF <b>663</b> is responsible for translating the communication service requirements to network slice requirements and the CSMF <b>663</b> communicates this with the NSMF <b>664</b>. The NSMF <b>664</b> is responsible for management and orchestration of a network slice instance (NSI), translates network slice requirements into network slice subnet requirements and communicates this with the NSSMF <b>665</b>. The NSSMF <b>665</b> is responsible for management and orchestration of a network slice subnet instance (NSSI). The NSSMF <b>665</b> can communicate with the NSMF <b>664</b>.</p><p id="p-0054" num="0053">Further, the node <b>662</b> includes slice priority manager (SPM) <b>666</b> that may be implemented as a function to implement any embodiments described herein. For instance, the SPM <b>666</b> may perform the communications and processing to provide dynamic slice priority handling as described.</p><p id="p-0055" num="0054">Further, the SPM <b>666</b>, implementing an embodiment, may also communicate with other functions in providing dynamic slice priority handling. For instance, if the SPM <b>666</b> determines that a slice needs to be de-instantiated, then the SPM <b>666</b> will communicate with the NSMF <b>664</b> to get the slice de-instantiated. In another embodiment, if the SPM <b>666</b> determines that a subnet slice needs to be de-instantiated, the SPM <b>666</b> will communicate with the NSSMF <b>665</b>. In yet another example embodiment, that utilizes default priorities, the NSMF <b>664</b> and NSSMF <b>665</b> can ask the SPM <b>666</b> for default priorities.</p><p id="p-0056" num="0055">In another instance, the SPM <b>666</b> can communicate with the NFV-MANO <b>661</b> directly for NFVI capacity information. Similarly, in another embodiment the SPM <b>666</b> communicates directly with the NFV-MANO <b>661</b> to update the slice priority, computing, storage, or networking resource limits. In yet another embodiment, for updating the slice priority, computing, storage, or networking resource limits, the SPM <b>666</b> communicates to the NSSMF <b>665</b> and the NSSMF <b>665</b> translates these communications and provides them to the NFV-MANO system <b>661</b>. Further, another embodiment may also implement the various functionalities of the SPM <b>666</b> in the NSSMF <b>665</b>, NSMF <b>664</b>, and/or CSMF <b>663</b>, amongst other examples.</p><p id="p-0057" num="0056">The interface between the nodes <b>662</b> and <b>661</b> provides the following functions: Query NFVI capacity information <b>667</b><i>a</i>, get a NFVI capacity information response <b>667</b><i>b</i>, subscribe to NFVI capacity notifications <b>667</b><i>c</i>, and get NFVI capacity notifications <b>667</b><i>d </i>when there is capacity shortage or abundance, for example. The messages <b>667</b><i>a </i>and <b>667</b><i>b </i>utilize a polling mechanism and the messages <b>667</b><i>c </i>and <b>667</b><i>d </i>utilize a subscribe/notify mechanism. In embodiments, both mechanisms can be used.</p><p id="p-0058" num="0057">With the standard static priority approach depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, when a network failure in the infrastructure of the mobile operator occurs, complete network slices are turned off or are deleted in order to maintain operation of higher priority network slices. Turning off or deleting complete slices leads to service unavailability for end users that depend on the lower priority slices, which is undesirable. The problem with this static priority approach is that it also turns off slices in situations where turning off slices is not necessary. For example, if the slices that are candidates for removal are, at that time, only used to a fraction of their capacity, the fractionally utilized slices could still be maintained if the currently used capacity is accounted for rather than the nominal capacity. Another example is that the degree of dependence of end users on the slices may vary over time. For instance, end users' needs for the services provided over the slices may vary, for example, because of the availability of alternative services or delivery infrastructure, or because of the varying use of the services over time. With fixed priorities, a slice that carries less important services during the network failure may be maintained at the cost of a slice that provides more important services. The current 3GPP specification does not provide mechanisms to include real-time information on actual use of slice capacity or priorities from third parties and end users in the decisions to de-instantiate slices.</p><p id="p-0059" num="0058">Embodiments of the disclosure solve the problems of static slice priority by making the handling of priority of slices more dynamic, so that the steps taken during network failures can be adapted to the real-time needs of third party service providers and end-users. The dynamic handling of priorities reuses the priorities that are under development in ETSI NFV and which may be used in 3GPP. The dynamic priority handling provided by embodiments is implemented by further real-time analysis carried out by the network slice management functions and/or a newly implemented slice priority management function which utilizes further information provided by third parties on the desired priorities of the third parties' services.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow chart of a method <b>770</b> for providing dynamic slice priority management according to an embodiment. The method <b>770</b> may be implemented through any variety of mechanisms in any variety of environments known in the art. The method <b>770</b> may be implemented in a network node. Further, the method <b>770</b> may be implemented as a network function. For instance, next generation network architectures, such as 5G, may separate network functions from the underlying hardware resources, in the case of a telecommunication network, the network nodes of the network. For that purpose, so-called NV techniques may be used, and in particular NFV techniques which provide network functions that are instantiable in software using the hardware of one or more of the network nodes. Herein, &#x201c;providing&#x201d; or &#x201c;establishing&#x201d; a network function may thus comprise or refer to the instantiation of the network function in the network.</p><p id="p-0061" num="0060">As described herein, next generation network architectures may further define virtual data planes which separate data traffic in the network. Such virtual data planes, which may be established by a SDN but also by other techniques, may include a management plane to enable transmissions of management data in the network. In an embodiment, the method <b>770</b> is implemented as a management plane function operating in the management plane of a network.</p><p id="p-0062" num="0061">In an example embodiment, the method <b>770</b> is implemented as a function, e.g., the SPM <b>666</b>. According to an embodiment, the steps <b>771</b>-<b>775</b> of the method <b>770</b> are done by the SPM function <b>666</b>. Further, in other embodiments, communications between the SPM <b>666</b> (implementing the method <b>770</b>) and the NFV-MANO <b>661</b> can be via other functions. For instance, a communication can go from the SPM <b>666</b> to the CSMF <b>663</b>, then to the NSMF <b>664</b> and then to the NSSMF <b>665</b>, and then to the NFV-MANO <b>661</b>. In another embodiment, communication to the NFV-MANO <b>661</b> can go from the SPM <b>666</b> to the NSMF <b>664</b>, from the NSMF <b>664</b> to the NSSMF <b>665</b>, and then from the NSSMF <b>665</b> to the NFV-MANO <b>661</b>. In yet another embodiment, a communication goes from the SPM <b>666</b> to the NSSMF <b>665</b> and then from the NSSMF <b>665</b> to the NFV-MANO <b>661</b>.</p><p id="p-0063" num="0062">In another embodiment wherein, the SPM <b>666</b> implements the method <b>770</b>, when the SPM <b>666</b> communicates with a CSP, it goes via the CSMF <b>663</b>. Further, according to yet another embodiment, when the SPM <b>666</b> communicates with a CSP the communications go from the SPM <b>666</b> to the NSMF <b>664</b> and then from the NSMF <b>664</b> to the CSMF <b>663</b>.</p><p id="p-0064" num="0063">Returning to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the method <b>770</b> begins at step <b>771</b> by receiving, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in a communication network. In such an embodiment, the network services node is configured to enable the instantiation of the network slices that each represent a virtual network. According to an embodiment, the data received at step <b>771</b> indicates a lack of resources for maintaining the instantiated network slices or an abundance of resources for maintaining the instantiated network slices. In an example embodiment, the data is received at step <b>771</b> in response to a push from the network services node. In another embodiment, the data is received at step <b>771</b> in response to a request from a network node to the network services node.</p><p id="p-0065" num="0064">According to an embodiment, the network services node from which the data is received at step <b>771</b> is a NFV-MANO node. Further, while embodiments are described as being implemented in a communication network with a NFV-MANO node, embodiments are not so limited and may be implemented in any communication network with slicing. While data is received at step <b>771</b> from a network services node, an alternative embodiment of the method <b>770</b> also includes receiving data indicating available network resources from a transport network system.</p><p id="p-0066" num="0065">The method <b>770</b> continues at step <b>772</b> by identifying a change in the network services node's ability to maintain the instantiated network slices based on the received data. In turn, at step <b>773</b>, a communication service provider is notified of the change in the network services node's ability to maintain the instantiated network slice. In an embodiment, the communication service provider is notified of the change at step <b>773</b> via an exposure function.</p><p id="p-0067" num="0066">Next, at step <b>774</b> slice priority data is received from the communication service provider. Thus, in such an embodiment, the communication service provider determines a preferred order for maintaining instantiated slices and communicates data indicating the preferred priority. In an embodiment, the slice priority data received at step <b>774</b> indicates a preferred order of a portion of the network slices for allocating the network resources. Further, in an embodiment, the slice priority data also includes preferred changes or priorities for allocating resources to the various services, e.g., storage, processing, and connectivity, provided by slices. According to an embodiment, the &#x201c;portion&#x201d; of network slices includes slices associated with the communication service provider.</p><p id="p-0068" num="0067">Finally, at step <b>775</b> an indication of the slice priority data is forwarded to the network services node. In this way, the network services node can modify allocation of network resources for maintaining instantiated network slices in accordance with the communication service provider's preferences. According to an embodiment, the indication of the slice priority data includes the slice priority data and/or instructions to remove a given network slice of the instantiated network slices.</p><p id="p-0069" num="0068">In an alternative embodiment of the method <b>770</b>, in response to receiving the slice priority data from the communication service provider at step <b>774</b>, the method includes determining if changing allocation of network resources based on the slice priority data corrects a resource problem. Then, if changing the allocation of network resources based on the slice priority data does not correct the resource problem, the communication service provider is notified so that that communication service provider can attempt to determine a slice priority configuration that corrects the resource problem. In such an embodiment, the method may determine if changing allocation of the network resources based on the slice priority data corrects the resource problem based upon at least one of: connectivity capacity data, storage capacity data, and processing capacity data. According to an embodiment, the connectivity capacity data, the storage capacity data, and the processing capacity data may each have a base capacity, maximum guaranteed capacity, and maximum non-guaranteed capacity.</p><p id="p-0070" num="0069">An alternative embodiment of the method <b>770</b>, at step <b>772</b>, identifies a change in the network services node's ability to maintain instantiated slices on a slice by slice basis. In this way, the method <b>770</b> may identify that there are insufficient resources available to maintain a slice associated with an individual communication service provider. Then, at step <b>773</b>, the communication service provider is only notified of the change in the network services node's ability to maintain the instantiated network slices if it is determined there are insufficient resources available to maintain a slice associated with the communication service provider. In this way, a communication service provider is not needlessly notified of a change. According to an embodiment, the method <b>770</b> determines there are insufficient resources available to maintain the slice associated with the communication service provider based upon connectivity capacity data, storage capacity data, and/or processing capacity data. In such an embodiment, the connectivity capacity data, the storage capacity data, and the processing capacity data may each include a base capacity data, maximum guaranteed capacity data, and maximum non-guaranteed capacity data.</p><p id="p-0071" num="0070">Another embodiment of the method <b>770</b> is configured to provide dynamic slice handling for a plurality of communication service providers. In such an embodiment, multiple communication service providers are notified of the change in the network services node's ability to maintain the instantiated slices. According to an embodiment, only the communication service providers who have slices affected by the change in resources are notified. In turn, slice priority data is received from each communication service provider. The slice priority data indicates a preferred order for allocating resources to network slices associated with each respective communication service provider. Then, an indication of the slice priority data received from each communication service provider is forwarded to the network services node. In an alternative embodiment, prior to forwarding the data to the network services node, it is determined if changing the allocation of network resources based on the slice priority received from the multiple communication service providers corrects a resource problem. Then, if changing the allocation of network resources based on the slice priority data received from the multiple communication service providers does not correct the resource problem, the multiple communication service providers are notified so that the communication service providers can provide updated slice priority data in an attempt to overcome the problem.</p><p id="p-0072" num="0071">In an embodiment of the method <b>770</b>, in notifying the communication service provider of the change at step <b>773</b>, the method also includes indicating an order with which slices associated with the communication service provider will be allocated resources by the network services node. According to an embodiment, in indicating the order with which slices associated with the communication service provider will be allocated resources by the network services node, the method indicates the order using a mapping that numerically decouples priority indicators used by the network services node from priority indicators used by the communication service provider.</p><p id="p-0073" num="0072">It is noted that the method <b>770</b> may also include the functionality of any embodiments described herein, such as the functionality described herein in relation to <figref idref="DRAWINGS">FIGS. <b>6</b> and <b>8</b>-<b>16</b></figref>. Likewise, the other embodiments described herein may implement any of the embodiments of the method <b>770</b> described hereinabove.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts dynamic handling of slice priorities in a network <b>880</b> according to an embodiment. The mobile network <b>880</b> is managed by a Network Operator (NOP) <b>881</b> that has set up multiple slices in the mobile network <b>880</b>. The slices are used for services offered by several Communication Service Providers (CSPs), such as the CSP <b>888</b>, which in general are 3<sup>rd </sup>parties. The NOP <b>881</b> can itself also be a CSP. The slices are managed by the NOP <b>881</b>. The NOP <b>881</b> can also let a CSP handle parts of the management functions by giving the CSP access to the management functions through an Exposure Function (EF) (not shown). The network <b>880</b> also includes a slice management function <b>883</b> that includes the CSMF <b>884</b>, NSMF <b>885</b>, NSSMF <b>886</b>, and SPM <b>887</b>. It is noted that while in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, and the other figures described herein, e.g., <figref idref="DRAWINGS">FIGS. <b>9</b>-<b>11</b></figref>, the slice management function is depicted as including the CSMF, NSMF, NSSMF, and SPM, embodiments are not so limited and the slice management function/system can comprise other logical functional blocks. For instance, embodiments may be implemented in any slice management system that provides services including: configuration management (CM), fault management (FM), performance management (PM), and life cycle management (LCM) for VNFs and network slices.</p><p id="p-0075" num="0074">According to an embodiment, when slices are created a Network Service Descriptor (NSD) information element is sent from the 3GPP Slice Management system <b>883</b> to the NFV-MANO system <b>882</b>. This information element contains an initial/default priority value. The handling of slices with different priorities is managed by the NFV-MANO system <b>882</b> and is not currently in the 3GPP scope. However, in the network <b>880</b>, slice priority values can be set and be updated by the 3GPP Slice Management system <b>883</b>.</p><p id="p-0076" num="0075">Each slice has a capacity in the areas of connectivity, storage, and processing, and each area (connectivity, storage, and processing) of capacity can be characterized by one or more parameters. These parameters may include a minimum/base capacity (that is always reserved for the slice), a maximum that is guaranteed to be achievable, and a headroom capacity that may be available if the total network resources allow. The 3GPP Slice Management system <b>883</b> can retrieve information about current resource usage from the NFV-MANO system <b>882</b>. The current resource usage data may include information related to memory, storage, CPU usage, network capacity, radio capacity, and other resource information.</p><p id="p-0077" num="0076">In the network <b>880</b> new functionality for dynamic slice priority management is provided that is bundled in the SPM functional box <b>887</b>. This function <b>887</b> can comprise smaller functionalities and these smaller functionalities can also be provided by micro services. In embodiments, these functionalities can be co-located with other functionalities and are not necessarily grouped physically or virtually together. This means that the complete or parts of the functionality that comprise the SPM function <b>887</b> can be implemented on a Services Based Architecture (SBA) by one or more different management services. This is also the case for the Exposure Function (EF) and other functions that are described herein.</p><p id="p-0078" num="0077">In general, the network <b>880</b> operates in normal operation, i.e. without network failures or resource shortages and then when a resource problem occurs, the NFV-MANO system <b>882</b> sends <b>830</b> information to the slice management function <b>887</b> regarding changes in available resources. Further, according to an embodiment, thresholds may be set for when the NFV-MANO <b>882</b> sends <b>830</b> information to the slice management function <b>887</b>. In an embodiment, the NFV-MANO system <b>882</b> may send the information using messages as described hereinabove in relation to <figref idref="DRAWINGS">FIG. <b>6</b></figref>. The SPM <b>887</b> analyzes <b>831</b> whether the change in resources causes problems in maintaining network slices. If it is determined that there are problems in maintaining network resources, the CSP <b>888</b> is notified <b>832</b> by the SPM <b>887</b> via an application program interface (API). In an alternative embodiment, the SPM <b>887</b> does not perform the analysis <b>831</b> and the information regarding changes in resources is sent to CSPs. Further, in an embodiment, a CSP may only be notified if the change in resources affects a slice that is utilized by the CSP.</p><p id="p-0079" num="0078">Further, it is noted that while only a single CSP <b>888</b> is depicted, the network <b>880</b> may include a plurality of CSPs and then, the SPM function <b>887</b> may provide dynamic slice priority services for the plurality of CSPs. Moreover, in an embodiment, only the CSPs with the low-priority slices that are candidates for removal are informed. However, embodiments are not so limited and CSPs may always be informed of changes in available resources.</p><p id="p-0080" num="0079">To continue, upon receiving notification of the change in resources, the CSP <b>888</b> determines <b>833</b> a preferred action. Possible actions include changing, i.e., upgrading or downgrading, the priority of slices and decreasing the current minimal capacity for slices. In an embodiment, the capacity may refer to capacity for processing, storage, and connectivity provided by a slice. Next, the CSP <b>888</b> communicates <b>834</b> its determined preferences to the SPM <b>887</b>. The SPM <b>887</b> checks <b>835</b> whether the new modification by the CSP <b>888</b> solves the resource problems. If not, then the steps <b>832</b>, <b>833</b>, <b>834</b>, and <b>835</b> are executed again. In an embodiment, the steps <b>832</b>, <b>833</b>, <b>834</b>, and <b>835</b> are repeated only for affected low priority slices.</p><p id="p-0081" num="0080">Further, in another embodiment, there is a predetermined maximum for the number of iterations. In such an embodiment, the predetermined maximum number of iterations may be a property set for the SPM <b>887</b>. When the maximum number of iterations is reached, in an embodiment, the SPM <b>887</b> will stop the iterations and communicate the latest priority changes and resource allocation changes to the NFV-MANO <b>882</b>. In such an embodiment, the NFV-MANO <b>882</b> will determine how to proceed and may de-instantiate a slice to allow higher priority slices to continue to function. In another embodiment, iterations may be stopped prior to reaching a maximum number, but when the same slice priority data or resource allocation changes are received from the same CSP as in a previous iteration. In that case, the SPM <b>887</b> communicates the latest priority changes and resource allocation changes to the NFV-MANO <b>882</b>. In another embodiment, where there are multiple CSPs, iterations may still continue even where a CSP provides the same priority and resource allocation changes for multiple iterations so as to allow other CSPs to modify their priority and resource allocation changes.</p><p id="p-0082" num="0081">If it is determined <b>835</b>, that the new configuration solves the resource problems, the slice priorities will be updated <b>836</b> by sending the priorities to the NFV-MANO node <b>882</b>. In an embodiment, the SPM <b>887</b> and the slice management system <b>883</b> will forward the updated slice priority information via the Os-Ma-nfvo interface to the NFV-MANO node <b>882</b>. Upon receipt of the updated priorities, the NFV-MANO node <b>882</b> can enforce the priorities, e.g., allocate resources for maintaining instantiated slices based on the updated priorities.</p><p id="p-0083" num="0082">The SPM function <b>887</b> is configured to implement the dynamic slice priority handling. In an embodiment, the SPM function <b>887</b> detects resource problems, based on information obtained from the NFV-MANO system <b>882</b>. Further, the SPM function <b>887</b> communicates with the CSP <b>888</b> that uses the various slices directly, through new messages. The SPM <b>887</b> can also check if the newly assigned slice properties or capacities will solve the resource problems and can make decisions on the adjustment of priorities, based on the (updated) priorities from multiple CSPs.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates an embodiment of dynamic handling of slice priorities through an exposure function <b>989</b>. The mobile network <b>980</b> is managed by a NOP <b>981</b> that has set up multiple slices in the mobile network <b>980</b>. The network <b>980</b> includes a slice management function <b>983</b> that includes the CSMF <b>984</b>, NSMF <b>985</b>, NSSMF <b>986</b>, and SPM <b>987</b>. The SPM <b>987</b> communicates with the CSP <b>988</b> via the exposure function <b>989</b>.</p><p id="p-0085" num="0084">During operation, when a resource problem occurs, the NFV-MANO system <b>982</b> sends <b>930</b> information to the slice management function <b>983</b> regarding changes in available resources. The SPM <b>987</b> analyzes <b>931</b> whether the change in resources causes problems in maintaining network slices. If it is determined that there are problems in maintaining network slices, the SPM <b>987</b> notifies <b>932</b><i>a </i>the exposure function <b>989</b> and the exposure function <b>989</b> sends <b>932</b><i>b </i>the message to the CSP <b>988</b> that there are problems in maintaining network slices. Upon receiving notification of the change in resources, the CSP <b>988</b> determines <b>933</b> a preferred action. Then, the CSP <b>988</b> communicates <b>934</b><i>a </i>its determined preferences to the exposure function <b>989</b> and the exposure <b>989</b> provides <b>934</b><i>b </i>the CSP's <b>988</b> preferences to the SPM <b>987</b>. The SPM <b>987</b> checks <b>935</b> whether modifications preferred by the CSP <b>988</b> solves the resource problem. If not, then the steps <b>932</b><i>a</i>-<i>b</i>, <b>933</b>, <b>934</b><i>a</i>-<i>b</i>, and <b>935</b> are executed again. If it is determined <b>935</b> that the new configuration solves the resource problem, the slice priorities will be updated and the slice management system <b>983</b> forwards <b>936</b> the updated slice priority information to the NFV-MANO node <b>982</b>.</p><p id="p-0086" num="0085">In the network <b>980</b>, the communication between the slice management node <b>983</b> and the CSP <b>988</b> in steps <b>932</b><i>a</i>-<i>b </i>and <b>934</b><i>a</i>-<i>b </i>is established via the intermediate exposure function <b>989</b>. Thus, the communication flows between the slice management node <b>983</b> and CSP <b>988</b> are split into the steps <b>932</b><i>a </i>and <b>932</b><i>b </i>and the steps <b>934</b><i>a </i>and <b>934</b><i>b</i>. The exposure function <b>989</b> can filter and secure the information coming to the NOP <b>981</b> domain from the external/outside CSP <b>988</b> domain and may translate or convert the information from the CSP.</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts a network <b>1080</b> that implements slice priority handling by pulling information on changes in network resources. The mobile network <b>1080</b> is managed by a NOP <b>1081</b> that has set up multiple slices in the mobile network <b>1080</b>. The network <b>1080</b> includes a slice management function <b>1083</b> that includes the CSMF <b>1084</b>, NSMF <b>1085</b>, NSSMF <b>1086</b>, and SPM <b>1087</b>. The SPM <b>1087</b> communicates with the CSP <b>1088</b> via the exposure function <b>1089</b>.</p><p id="p-0088" num="0087">In the network <b>1080</b>, instead of the NFV-MANO node <b>1082</b> taking the initiative to inform the slice management node <b>1083</b> of changes regarding available resources as in the networks <b>880</b> and <b>980</b> described herein, the information is requested (pulled) <b>1030</b><i>a </i>by the slice management node <b>1083</b>. In embodiments, the resource information may be requested <b>1030</b><i>a </i>periodically or may be triggered by other events detected by the slice management node <b>1083</b>.</p><p id="p-0089" num="0088">To illustrate, according to periodic scheduling, or in response to a triggered event, the slice management node <b>1083</b> requests <b>1030</b><i>a </i>information from the NFV-MANO node <b>1082</b>. In response, the NFV-MANO system <b>1082</b> sends <b>1030</b><i>b </i>information to the slice management node <b>1083</b> regarding changes in available resources. The SPM <b>1087</b> analyzes <b>1031</b> whether the change in resources causes problems in maintaining network slices. If it is determined that there are problems in maintaining network resources, the SPM <b>1087</b> notifies <b>1032</b><i>a </i>the exposure function <b>1089</b> and the exposure function <b>1089</b> sends <b>1032</b><i>b </i>the message to the CSP <b>1088</b> that there are problems in maintaining network slices. Upon receiving notification of the change in resources, the CSP <b>1088</b> determines <b>1033</b> a preferred action. Then, the CSP <b>1088</b> communicates <b>1034</b><i>a </i>its determined preferences to the exposure function <b>1089</b> and the exposure function <b>1089</b> provides <b>1034</b><i>b </i>the CSP's <b>1088</b> preferences to the SPM <b>1087</b>. The SPM <b>1087</b> checks <b>1035</b> whether the modification by the CSP <b>1088</b> solves the resource problems. If not, then the steps <b>1032</b><i>a</i>-<i>b</i>, <b>1033</b>, <b>1034</b><i>a</i>-<i>b</i>, and <b>1035</b> are executed again. If it is determined <b>1035</b> that the new configuration solves the resource problems, the slice priorities will be updated by the SPM <b>1087</b> and the slice management system <b>1083</b> forwards <b>1036</b> the updated slice priority information to the NFV-MANO node <b>1082</b>. It is noted that while the network <b>1080</b> is depicted communicating between the slice management node <b>1083</b> and the CSP <b>1088</b> via the exposure function <b>1089</b>, the network <b>1080</b> is not limited to such a configuration and the slice management node <b>1083</b> and CSP <b>1088</b> may communicate directly.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an embodiment that provides dynamic slice priority management using information exchanged with a transport network <b>1190</b>. The mobile network <b>1180</b> is managed by a NOP <b>1181</b> that has set up multiple slices in the mobile network <b>1180</b>. The network <b>1180</b> includes a slice management function <b>1183</b> that includes the CSMF <b>1184</b>, NSMF <b>1185</b>, NSSMF <b>1186</b>, and SPM <b>1187</b>. The network <b>1180</b> also includes the CSP <b>1088</b> and transport network <b>1190</b>.</p><p id="p-0091" num="0090">In the network <b>1180</b>, instead of getting capacity or resource usage information solely from the NFV-MANO system <b>1182</b> information is also retrieved directly from a transport network system <b>1190</b>. The transport network system <b>1190</b> can be a management system of network equipment, e.g., a firewall, a router, and/or a switch, or a Software Defined Network (SDN) system or any other transport network system that can provide network equipment capacity information or resource usage data. The network <b>1180</b> is depicted using a polling mechanism to obtain data from the transport network <b>1190</b>, however, embodiments are not so limited and a push mechanism where the transport network <b>1190</b> notifies the slice management node <b>1183</b> of changes regarding available resources may also be used. Further, while not depicted, the network <b>1180</b> may also employ an exposure function as described herein. Further still, while <figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates the slice management node <b>1183</b> receiving resource information from the NFV-MANO node <b>1182</b>, in an alternative embodiment, the information regarding changes in resources may only be received from the transport network <b>1190</b>.</p><p id="p-0092" num="0091">In operation, according to periodic scheduling, or in response to a triggered event, the slice management node <b>1183</b> requests <b>1137</b>, information from the transport network node <b>1190</b> and, in response, the transport network node <b>1190</b> sends <b>1138</b> information on changes in resources to the slice management node <b>1183</b>. Likewise, the NFV-MANO node <b>1182</b> sends <b>1130</b> information on changes in resources to the slice management node <b>1183</b>. The SPM <b>1187</b> analyzes <b>1131</b>, using the information from the transport network <b>1190</b> and NFV-MANO node <b>1182</b>, whether the change in resources causes problems in maintaining network slices. If it is determined that there are problems in maintaining network slices, the SPM <b>1187</b> notifies <b>1132</b> the CSP <b>1188</b> that there are problems in maintaining network slices. Upon receiving notification of the change in resources, the CSP <b>1188</b> determines <b>1133</b> a preferred action. Then, the CSP <b>1188</b> communicates <b>1134</b> its determined preferences to the SPM <b>1187</b>. The SPM <b>1187</b> checks <b>1135</b> whether the new modification by the CSP <b>1188</b> solves the resource problems. If not, then the steps <b>1132</b>, <b>1133</b>, <b>1134</b>, and <b>1135</b> are executed again. If it is determined <b>1135</b> that the new configuration solves the resource problems, the slice priorities will be updated <b>1136</b> by the SPM <b>1187</b> and the slice management system <b>1183</b> forwards the updated slice priority information to the NFV-MANO node <b>1182</b>.</p><p id="p-0093" num="0092">It is noted that any features described herein may be implemented in any of the embodiments described herein, limited only by features that are incompatible. Further, features, e.g., an exposure function, push and polling information exchange, and receiving information from a transport network, may be used in any of the embodiments described herein, including the method <b>770</b> and the networks <b>880</b>, <b>980</b>, <b>1080</b>, and <b>1180</b>, amongst others.</p><p id="p-0094" num="0093">As described herein, in an embodiment a CSP, e.g., the CSP <b>888</b>, is only notified of changes in the network service's nodes ability to maintain an instantiated slice if the failing slice is associated with, e.g., used by, the CSP. However, in an alternative embodiment, instead of involving only CSPs with low priority slices, CSPs that have higher priority slices can also be notified about changes in resource availability. In such an embodiment, the CSP associated with a higher priority slice, e.g., a slice that is not affected by the change in resource availability, is notified. In such an embodiment, the notified CSP determines a change in slice priority or needed slice capacity, and forwards the updated preferences to the slice priority manager. The message to the CSP with high priority slices can include a request to lower the guaranteed maxima for the resources in the CSP's associated slice(s). Then, the message back to the slice priority management function can include an information element specifying a new maximum determined by the CSP. By notifying CSPs associated with slices that are not affected by the change in resources, the slice priority management function can free up network resources for other slices. Similarly, in embodiments, CSPs may be notified when there is also an abundance of resources and in this way, CSPs can modify a preferred slice priority or modify capacity requirements to free-up network resources so that other slices can be instantiated or additional resources can be provided to other slices.</p><p id="p-0095" num="0094">Another embodiment provides slice priority management with finer granularity than the network slice level. In such an embodiment, priority management may be controlled for different geographic areas or network segments, i.e., subnet slices. In such an embodiment, instead of modifying a complete slice which is located over a large geographical area, only subnet slices are modified in the case of a local capacity or resource problem. Thus, if a problem occurs in a certain area which is geographically covered by a network slice subnet, slice management, e.g., a slice management function or node implementing slice management, only takes action for this specific subnet. <figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts a slice <b>1220</b> and the slice subnets <b>1220</b><i>a</i>-<i>d </i>that may be managed according to embodiments.</p><p id="p-0096" num="0095">In such an embodiment, subnet slice identifiers or geographic information is added to messages. The subnet slice identifiers indicate affected subnet slices and likewise, the geographic information indicates the affected geographic area. In an example embodiment, the data indicating changes in network resources available for maintaining instantiated network slices includes location information or subnet slice identifiers. The location information and subnet slice identifiers indicate changes in network resources available to maintain instantiated subnet slices forming the network slices. The location information or subnet slice identifiers are provided to the CSP and the CSP provides subnet slice priority data indicating a preferred priority for providing network resources to subnet slices or geographic locations. In turn, the subnet slice priority data is provided to the network services node. Such an embodiment may also include determining if modifying network resource allocation according to the subnet slice priority data corrects a resource problem and, if not, notifying the CSP.</p><p id="p-0097" num="0096">An example embodiment provides CSPs with an indication of the order with which slices will be allocated resources. In one such embodiment, the CSP is notified of the actual order amongst all of the instantiated slices with which the CSP's associated slices will be allocated resources. To illustrate, consider an example where there are four slices, referred to as slice-1, slice-2, slice-3, and slice 4, and slice-3 and slice-4 are associated with a CSP. In the network, slice-3 and slice-4 are priority 3 and 4 respectively. In an embodiment where the CSP is made aware of its associated slices' actual priority, the CSP will be told that slice-3 is priority 3 and slice-4 is priority 4.</p><p id="p-0098" num="0097">In an alternative embodiment, a mapping is used between CSP internal priorities and priorities used in slice management. The priorities that CSPs use internally can be decoupled numerically from the priorities used in slice management, e.g., a node implementing embodiments described herein. To illustrate, returning to the example with slice-1, slice-2, slice-3, and slice-4. If the indications of slice priority are numerically decoupled, the CSP will be notified that slice-3 is priority 1 and slice-4 is priority 2. In this way, the CSP is only notified of the order with which its associated slices will be allocated resources but, the CSP is not notified of the priority of its associated slices as compared to other slices in the network.</p><p id="p-0099" num="0098">The advantage of this numeric decoupling is that CSPs are not bound to use the external priorities from slice management in their internal systems that may use other ordering or depend on yet other external priority lists as well. Table 1 below illustrates an example of how two sets of priorities can be mapped. In Table 1, the internal priorities column indicates the priority with which CSP X's slices are allocated resources compared only to the slices associated with communication service provider X. The slice management priorities column indicates the priority with which CSP X's slices will be allocated resources compared to all of the slices in the network.</p><p id="p-0100" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="56pt" align="center"/><colspec colname="2" colwidth="126pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>Internal priorities</entry><entry>Slice management</entry></row><row><entry/><entry>CSPX</entry><entry>priorities</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>1</entry><entry>2</entry></row><row><entry/><entry>2</entry><entry>4</entry></row><row><entry/><entry>3</entry><entry>7</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables><br/>In an embodiment, the numeric decoupling can be implemented by an exposure function, e.g., exposure function <b>989</b>, or can be done by the slice priority manager, e.g., slice priority manager <b>987</b>. In another embodiment, the mapping from internal CSP priorities and slice management priorities and back is done by the CSP itself when determining how to change priority, e.g., at step <b>833</b>, or in an (additional) intermediate step in the communications between the CSP and the slice manager.</p><p id="p-0101" num="0099">As described herein, in an embodiment, the slice priority management function, e.g., the SPM <b>887</b> described hereinabove in relation to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, determines whether changing priorities and/or the allocation of resources according to updates received from the CSP correct the resource allocation problem. In an embodiment, this decision making by the SPM is based on various types of information that the SPM receives from the CSP. For example, the CSP may indicate various measures for the capacity for the connectivity, storage, and processing functionality of a slice that the CSP wishes to have available in the CSP's slice. The capacity can be expressed in a combination of the base capacity, capacity that is always reserved for the slice, a (higher) maximum guaranteed capacity, capacity that is always made available to the slice upon request by the CSP, and an additional headroom capacity, capacity that may be made available if the total network resources and resources used by other slices permits. As an option, these measures may also be geographically or network-topology dependent. As another option, these measures may be defined to vary in time in a predetermined way. The CSP can include the various capacity values and their further specification in the messages exchanged between the CSP and the slice priority manager. Further, the CSP may also indicate preferences, e.g., priorities that vary over time, as the availability of resources varies over time. Further, the slice priority manager can receive the inputs for these measures from different CSPs and then use the inputs from multiple CSPs to decide on the optimal way to account for a lack of resources between the slices from different CSPs. As an output of the decision, the slice priority manager may send new values of the measures back to the CSPs if the original changes do not correct the resource problem.</p><p id="p-0102" num="0100">Further, in embodiments, the information received from the network services node may also include details regarding changes to the various capacity levels of each individual slice. For instance, information may indicate changes in base capacity, maximum guaranteed capacity, and additional headroom for the functionalities, e.g., storage, processing, and connectivity, for slices.</p><p id="p-0103" num="0101"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates capacities <b>1331</b>-<b>1333</b> for a given resource <b>1330</b> that may be employed in providing dynamic priorities as described herein. In <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the resource <b>1330</b> is has three capacity levels, a base capacity <b>1331</b> that is always reserved for a slice, maximum guaranteed capacity <b>1332</b> (which encompasses the base capacity <b>1331</b>) that is always available to the slice upon request, and an additional headroom capacity <b>1333</b> (which encompasses the base capacity <b>1331</b> and maximum guaranteed capacity <b>1332</b>) that may be made available if the total network resources allow. Thus, <figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates the capacity levels for a resource, e.g., connectivity, for a slice. The slice likewise has the three capacity levels for the other resources the slice provides, e.g., processing and storage.</p><p id="p-0104" num="0102">Another embodiment uses default parameters for changes in resources, e.g., a shortage of resources or an abundance of resources. In such an embodiment, instead of the information exchange and real-time CSP input, the slice priority manager may fall back on predetermined defaults for a CSP for the CSP's preferred priorities and guaranteed capacity. This fall back may be employed if the CSP is not responsive to the notification of the change regarding the ability to maintain an instantiated slice. This may occur, for example, because of the resource shortage. In one such embodiment, default parameter values are stored for each CSP by the slice manager. The default values may be taken from preferences provided by the CSP during an earlier situation with resource shortages. The default values may also be determined based on other online or offline interactions between the CSP and the slice manager. In such an embodiment, the default values are provided to the network services nodes as if the default values had been provided in real-time as in other embodiments described herein.</p><p id="p-0105" num="0103">Yet another embodiment creates slice priority proposals that are provided to the CSPs. Instead of only notifying the CSP of capacity or resource problems, the slice priority manager creates a proposal for the CSP on how to change priorities or how to change specific slice parameters, e.g., processing, storage, or transport. This proposal can be created from several sources, including historical data (how the CSP responded in past situations), current resource usage (the slice priority manager detects that the CSP could have the same quality of service (QoS) with different slice parameters), or a machine learning algorithm (based on historical data, current data, and predicting future traffic patterns). The use of machine learning may operate using a neural network trained with historical data to predict preferences based on network conditions.</p><p id="p-0106" num="0104">These extra functionalities can be performed by the slice priority manager prior to notifying the CSP of the change in network resources. Then, the proposal can be sent when the CSP is notified of the changes in the network services node's ability to maintain the instantiated network slices. In an embodiment, the CSP can respond positively or negatively to the proposal and can also ask for capacity information if this was not already provided. If, however, the CSP does not agree with the proposal, then the CSP can provide its own priority preferences as described herein.</p><p id="p-0107" num="0105">In another embodiment, the CSP is prompted to provide a new priority preference when there is not a change in the network services node's ability to maintain instantiated slices. In such an embodiment, the CSP may be prompted periodically or in response to any other desired triggering event.</p><p id="p-0108" num="0106"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a system <b>1400</b> which may represent a network node implementing a slice management function according to an embodiment. It can be seen that the system <b>1400</b> may comprise a network interface <b>1410</b> for communicating with (other) network nodes in the network. The network interface <b>1410</b> may take any suitable form, including but not limited to, a wired network interface based on Ethernet or optical fiber or a wireless network interface. <figref idref="DRAWINGS">FIG. <b>14</b></figref> further shows the system <b>1400</b> comprising storage <b>1430</b>, such as a hard disk, a solid-state drive, or an array thereof, which may be used by the system <b>1400</b> for storing data.</p><p id="p-0109" num="0107">The system <b>1400</b> may further comprise a processor <b>1420</b> which may be configured, e.g., by hardware design or software, to perform the operations for providing dynamic slice priority functionality described herein. For example, the processor <b>1420</b> may be embodied by a single Central Processing Unit (CPU), but also be a combination or system of such CPUs and/or other types of processing units. In general, the system <b>1400</b> may be embodied by a (single) device or apparatus, e.g., a network server. However, the system <b>1400</b> may also be embodied by a distributed system of such devices or apparatuses.</p><p id="p-0110" num="0108">In general, the dynamic slice priority management functionality described herein may be implemented at least in part by a device or apparatus. The device or apparatus may comprise one or more (micro)processors which execute appropriate software. Software implementing the functionality described herein may have been downloaded and/or stored in a corresponding memory or memories, e.g., in volatile memory such as RAM or in non-volatile memory such as Flash. Alternatively, the methods and systems described herein may be implemented in the device or apparatus in the form of programmable logic, e.g., as a Field-Programmable Gate Array (FPGA). In general, a function may be implemented as a circuit.</p><p id="p-0111" num="0109"><figref idref="DRAWINGS">FIG. <b>15</b></figref> depicts a computer readable medium comprising non-transitory data comprising instructions for causing a processor system to perform an embodiment. It is noted that any of the methods described herein, for example in any of the claims, may be implemented on a computer as a computer implemented method, as dedicated hardware, or as a combination of both. Instructions for the computer, e.g., executable code, may be stored on a computer readable medium <b>1500</b> as for example shown in <figref idref="DRAWINGS">FIG. <b>15</b></figref>, e.g., in the form of a series <b>1510</b> of machine readable physical marks and/or as a series of elements having different electrical, e.g., magnetic, or optical properties or values. The executable code may be stored in a transitory or non-transitory manner. Examples of computer readable mediums include memory devices, optical storage devices, integrated circuits, servers, online software, etc. <figref idref="DRAWINGS">FIG. <b>15</b></figref> shows by way of example an optical storage device <b>1500</b>.</p><p id="p-0112" num="0110"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a block diagram of an exemplary data processing system <b>1600</b> that may be used to implement an embodiment. Such data processing systems include data processing entities described in this specification, including but not limited to data processing entities implementing the embodiments described herein, such as the method <b>770</b>.</p><p id="p-0113" num="0111">The data processing system <b>1600</b> may include at least one processor <b>1602</b> coupled to memory elements <b>1604</b> through a system bus <b>1606</b>. As such, the data processing system <b>1600</b> may store program code within memory elements <b>1604</b>. Further, processor <b>1602</b> may execute the program code accessed from memory elements <b>1604</b> via system bus <b>1606</b>. In one aspect, data processing system <b>1600</b> may be implemented as a computer that is suitable for storing and/or executing program code. It should be appreciated, however, that data processing system <b>1600</b> may be implemented in the form of any system including a processor and memory that can perform the functions described herein.</p><p id="p-0114" num="0112">Memory elements <b>1604</b> may include one or more physical memory devices such as, for example, local memory <b>1608</b> and one or more bulk storage devices <b>1610</b>. Local memory may refer to random access memory or other non-persistent memory device(s) generally used during actual execution of the program code. A bulk storage device may be implemented as a hard drive, solid state disk, or other persistent data storage device. The processing system <b>1600</b> may also include one or more cache memories (not shown) that provide temporary storage of at least some program code in order to reduce the number of times program code must be retrieved from the bulk storage device <b>1610</b> during execution.</p><p id="p-0115" num="0113">Input/output (I/O) devices depicted as input device <b>1612</b> and output device <b>1614</b> optionally can be coupled to the data processing system <b>1600</b>. Examples of input devices may include, but are not limited to, for example, a microphone, a keyboard, a pointing device such as a mouse, a game controller, a Bluetooth controller, a VR controller, and a gesture based input device, or the like. Examples of output devices may include, but are not limited to, for example, a monitor or display, speakers, or the like. Input device <b>1612</b> and/or output device <b>1614</b> may be coupled to data processing system <b>1600</b> either directly or through intervening I/O controllers. A network adapter <b>1616</b> may also be coupled to the data processing system <b>1600</b> to enable the data processing system <b>1600</b> to become coupled to other systems, computer systems, remote network devices, and/or remote storage devices through intervening private or public networks. The network adapter <b>1616</b> may comprise a data receiver for receiving data that is transmitted by said systems, devices and/or networks and a data transmitter for transmitting data to said systems, devices and/or networks. Modems, cable modems, and Ethernet cards are examples of different types of network adapters that may be used with data processing system <b>1600</b>.</p><p id="p-0116" num="0114">As shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref>, memory elements <b>1604</b> may store an application <b>1618</b>. It should be appreciated that data processing system <b>1600</b> may further execute an operating system (not shown) that can facilitate execution of the application <b>1618</b>. The application <b>1618</b>, being implemented in the form of executable program code, can be executed by data processing system <b>16000</b>, e.g., by processor <b>1602</b>. Responsive to executing the application <b>1618</b>, the data processing system <b>1600</b> may be configured to perform one or more operations described herein.</p><p id="p-0117" num="0115">In one aspect, for example, data processing system <b>1600</b> may implement the dynamic slice priority management functionality described herein. In that case, application <b>1618</b> may represent an application that, when executed, configures data processing system <b>1600</b> to perform the functionality described herein.</p><p id="p-0118" num="0116">Embodiments or aspects thereof may be implemented in the form of hardware, firmware, or software. If implemented in software, the software may be stored on any non-transient computer readable medium that is configured to enable a processor to load the software or subsets of instructions thereof. The processor then executes the instructions and is configured to operate or cause an apparatus to operate in a manner as described herein.</p><p id="p-0119" num="0117">Further, firmware, software, routines, or instructions may be described herein as performing certain actions and/or functions of the data processors. However, it should be appreciated that such descriptions contained herein are merely for convenience and that such actions in fact result from computing devices, processors, controllers, or other devices executing the firmware, software, routines, instructions, etc.</p><p id="p-0120" num="0118">It should be understood that the flow diagrams, block diagrams, and network diagrams may include more or fewer elements, be arranged differently, or be represented differently. But it further should be understood that certain implementations may dictate the block and network diagrams and the number of block and network diagrams illustrating the execution of the embodiments be implemented in a particular way.</p><p id="p-0121" num="0119">Accordingly, further embodiments may also be implemented in a variety of computer architectures, physical, virtual, cloud computers, and/or some combination thereof, and thus, the data processors described herein are intended for purposes of illustration only and not as a limitation of the embodiments.</p><p id="p-0122" num="0120">While example embodiments have been particularly shown and described, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the embodiments encompassed by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A network node configured as a slice priority management node for use with a communication network, the network node configured to:<claim-text>receive, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in the communication network, the network services node configured to enable the instantiation of the network slices, each slice representing a virtual network;</claim-text><claim-text>based on the received data, identify a change in the network services node's ability to maintain the instantiated network slices;</claim-text><claim-text>notify a communication service provider of the change;</claim-text><claim-text>receive, from the communication service provider, slice priority data, the slice priority data indicating a preferred order of a portion of the network slices for allocating the network resources; and</claim-text><claim-text>forward an indication of the slice priority data to the network services node.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the data received from the network services node indicates a lack of resources for maintaining the instantiated network slices or an abundance of resources for maintaining the instantiated network slices.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> further configured, in response to receiving the slice priority data from the communication service provider, to:<claim-text>determine if changing allocation of network resources based on the slice priority data corrects a resource problem; and</claim-text><claim-text>if changing the allocation of network resources based on the slice priority data does not correct the resource problem, notify the communication service provider.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the data indicating changes in network resources is pushed to the network node from the network services node or received in response to a request from the network node to the network services node.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> further configured to:<claim-text>in identifying a change in the network services node's ability to maintain the instantiated network slices, determine there are insufficient resources available to maintain a slice associated with the communication service provider; and</claim-text><claim-text>only notify the communication service provider of the change in the network services node's ability to maintain the instantiated network slices if it is determined there are insufficient resources available to maintain the slice associated with the communication service provider.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the data indicating changes in network resources available for maintaining instantiated network slices includes location information or subnet slice identifiers, where the location information and subnet slice identifiers indicate changes in network resources available to maintain instantiated subnet slices forming the network slices, and the network node is further configured to:<claim-text>provide the location information or the subnet slice identifiers to the communication service provider;</claim-text><claim-text>receive subnet slice priority data from the communication service provider; and</claim-text><claim-text>forward an indication of the subnet slice priority data to the network services node.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> where, in notifying the communication service provider of the change, the network node is configured to:<claim-text>indicate an order with which slices associated with the communication service provider will be allocated resources by the network services node.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The network node of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein, in indicating an order with which slices associated with the communication service provider will be allocated resources by the network services node, the network node is configured to:<claim-text>indicate the order using a mapping that numerically decouples priority indicators used by the network services node from priority indicators used by the communication service provider.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> further configured to:<claim-text>store default slice priority data associated with the communication service provider; and</claim-text><claim-text>forward the default slice priority data to the network services node if the slice priority data is not received from the communication service provider.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> further configured to:<claim-text>determine a proposed slice priority; and</claim-text><claim-text>provide the proposed slice priority to the communication service provider.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The network node according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the communication service provider is a first communication service provider and the portion of network slices is a first portion of network slices and the network node is further configured to:<claim-text>notify a second communication service provider of the change;</claim-text><claim-text>receive, from the second communication service provider, slice priority data, the slice priority data received from the second communication service provider indicating a preferred order of a second portion of the network slices for allocating the network resources; and</claim-text><claim-text>forward an indication of the slice priority data received from the second communication service provider to the network services node.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The network node according to <claim-ref idref="CLM-00011">claim 11</claim-ref> further configured to:<claim-text>determine if changing allocation of network resources based on the slice priority data received from the first communication service provider and the slice priority data received from the second communication service provider corrects a resource problem; and</claim-text><claim-text>if changing the allocation of network resources based on the slice priority data received from the first communication service provider and the slice priority data received from the second communication service provider does not correct the resource problem, notify the first communication service provider and the second communication service provider.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A communication network comprising a plurality of network nodes and configured to enable instantiation of network slices which represent virtual networks, the communication network comprising:<claim-text>a slice priority management function configured to:<claim-text>receive, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in the communication network, the network services node configured to enable the instantiation of the network slices, each slice representing a virtual network;</claim-text><claim-text>based on the received data, identify a change in the network services node's ability to maintain the instantiated network slices;</claim-text><claim-text>notify a communication service provider of the change;</claim-text><claim-text>receive, from the communication service provider, slice priority data, the slice priority data indicating a preferred order of a portion of the network slices for allocating the network resources; and</claim-text><claim-text>forward an indication of the slice priority data to the network services node.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A method for managing slice priority in a communication network, the method comprising:<claim-text>receiving, from a network services node, data indicating changes in network resources available for maintaining instantiated network slices in the communication network, the network services node configured to enable the instantiation of the network slices, each slice representing a virtual network;</claim-text><claim-text>based on the received data, identifying a change in the network services node's ability to maintain the instantiated network slices;</claim-text><claim-text>notifying a communication service provider of the change;</claim-text><claim-text>receiving, from the communication service provider, slice priority data, the slice priority data indicating a preferred order of a portion of the network slices for allocating the network resources; and</claim-text><claim-text>forwarding an indication of the slice priority data to the network services node.</claim-text></claim-text></claim></claims></us-patent-application>