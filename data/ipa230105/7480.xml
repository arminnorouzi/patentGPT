<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007481A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007481</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17782072</doc-number><date>20201103</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>PCT/CN2019/124565</doc-number><date>20191211</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>069</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>041</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>069</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20210101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>12</main-group><subgroup>041</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">ENHANCEMENT OF AUTHENTICATION</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Telefonaktiebolaget LM Ericsson (publ)</orgname><address><city>Stockholm</city><country>SE</country></address></addressbook><residence><country>SE</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>YANG</last-name><first-name>Chenyi</first-name><address><city>Guangzhou</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>DENG</last-name><first-name>Zhiming</first-name><address><city>Guangzhou</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>DENG</last-name><first-name>Hualiang</first-name><address><city>Guangzhou</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>ZHANG</last-name><first-name>Mengjie</first-name><address><city>Guangzhou</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>CHUNLAN</last-name><first-name>Wu</first-name><address><city>Guangzhou</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Telefonaktiebolaget LM Ericsson (publ)</orgname><role>03</role><address><city>Stockholm</city><country>SE</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/080832</doc-number><date>20201103</date></document-id><us-371c12-date><date>20220602</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Methods and apparatus for enhancement of authentication. A method performed by a communication device may comprise sending a first request to a communication equipment, wherein the request comprises a communication device identifier of the communication device. The method may further comprise receiving a first response from the communication equipment, the first response comprising one or more parameters. The method may further comprise generating a first key and a second key based on the received response; The method may further comprise sending a second request to the communication equipment, the second request comprising the first key and a message based on the second key.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="196.77mm" wi="104.82mm" file="US20230007481A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="233.43mm" wi="153.75mm" file="US20230007481A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="210.57mm" wi="160.61mm" file="US20230007481A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="221.15mm" wi="169.84mm" file="US20230007481A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="219.79mm" wi="158.41mm" file="US20230007481A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="222.59mm" wi="106.85mm" file="US20230007481A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="255.95mm" wi="87.88mm" file="US20230007481A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="216.75mm" wi="136.31mm" file="US20230007481A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present disclosure relates to methods, communication device and communication equipment for enhancement of authentication, especially for enhancement of Digest Authentication and Key Agreement (AKA).</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Digest Authentication and Key Agreement (AKA) is a procedure for authenticating a user equipment (UE) subscriber by combining both Digest scheme and 3GPP AKA authentication mechanism as specified by 3GPP TS 33.102 (V15.1.0). Digest AKA is not only used by HyperText Transfer Protocol (HTTP) but also used by the Session Initiation Protocol (SIP) and the Constrained Application Protocol (CoAP). The Digest AKA is widely used in IP Multimedia Subsystem (IMS) and in Generic Bootstrapping Architecture (GBA). The existing Digest AKA works well with 3G and 4G networks, but challenges exist when the current Digest AKA is deployed in 5G networks since the 5G AKA procedure is different from the AKA procedure used in 3G/4G networks.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0004" num="0003">Some embodiments herein advantageously enable the existing applications (e.g., applications in IMS or GBA) that are using Digest AKA to work with 5G AKA.</p><p id="p-0005" num="0004">More particularly, some embodiments include a method performed by a communication device (e.g., a User Equipment or UE). The method may comprise sending a first request to a communication equipment, wherein the first request comprises a communication device identifier of the communication device. The method may further comprise receiving a first response from the communication equipment, wherein the first response comprises one or more parameters. The method may further comprise generating a first key and a second key based on the received first response. The method may further comprise sending a second request to the communication equipment, wherein the second request comprises the first key and a message based on the second key. In some embodiments, the second key is a shared key between the communication device and communication equipment. In some embodiments, the first key may be based, at least in part, on the one or more parameters. In some embodiments, the message based on the second key is a Digest Authentication and Key Agreement (AKA) message. In some embodiments, the method may further comprise validating the first response received from the communication equipment.</p><p id="p-0006" num="0005">Embodiments also include a communication device. The communication device comprises processing circuitry and memory. The memory contains instructions executable by the processing circuitry whereby the communication device is configured to send a first request to a communication equipment, wherein the first request comprises an identifier of the communication device. The communication device may further be configured to receive a first response from the communication equipment, wherein the first response comprises one or more parameters. The communication device may further be configured to generate a first key and a second key based on the received first response. The communication device may further be configured to send a second request to the communication equipment, wherein the second request comprises the first key and a message based on the second key. In some embodiments, the second key is a shared key between the communication device and the communication equipment. In some embodiments, the first key may be based, at least in part, on the one or more parameters. In some embodiments, the message based on the second key is a Digest Authentication and Key Agreement (AKA) message. In some embodiments, the communication device may further be configured to validate the first response received from the communication equipment.</p><p id="p-0007" num="0006">Some embodiments include a computer program product. The computer program product comprises computer-readable instructions stored in a non-transitory computer-readable storage medium of the computer program product. When the instructions are executed by processing circuitry (e.g., at least one processor) of the communication device, they enable the communication device to perform one or more of the described communication device functionalities.</p><p id="p-0008" num="0007">Some embodiments include a method performed by a communication equipment. The method may comprise receiving a first request from a communication device, wherein the first request comprises an identifier of the communication device. The method may further comprise sending a first response to the communication device, wherein the first response comprises one or more parameters. The method may further comprise receiving a second request from the communication device, wherein the second request comprises a first key and a message based on a second key. The method may further comprise sending a second response to the communication device, wherein the second response indicates a result of the validation of the second request. In some embodiments, the second key is a shared key between the communication device and the communication equipment. In some embodiments, the first key may be based, at least in part, on the one or more parameters. In some embodiments, the message based on the second key is a Digest Authentication and Key Agreement (AKA) message. In some embodiments, the method may further comprise validating the first key and validating the message based on the second key.</p><p id="p-0009" num="0008">Some embodiments include a communication equipment. The communication equipment comprises processing circuitry and memory. The memory contains instructions executable by the processing circuitry whereby the communication device is configured to receive a first request from a communication device, wherein the first request comprises an identifier of the communication device. The communication equipment may further be configured to send a first response to the communication device, wherein the first response comprises one or more parameters. The communication equipment may further be configured to receive a second request from the communication device, wherein the second request comprises a first key and a message based on a second key. The communication equipment may further be configured to send a second response to the communication device, wherein the second response indicates a result of the validation of the second request. In some embodiments, the second key is a shared key between the communication device and the communication equipment. In some embodiments, the first key may be based, at least in part, on the one or more parameters. In some embodiments, the message based on the second key is a Digest Authentication and Key Agreement (AKA) message. In some embodiments, the communication equipment may further be configured to validate the first key and validate the message based on the second key.</p><p id="p-0010" num="0009">Some embodiments include a computer program product. The computer program product comprises computer-readable instructions stored in a non-transitory computer-readable storage medium of the computer program product. When the instructions are executed by processing circuitry (e.g., at least one processor) of the communication equipment, they enable the communication equipment to perform one or more of the described communication device functionalities.</p><p id="p-0011" num="0010">Embodiments also include corresponding, computer programs, and carriers. A computer program comprises instructions which, when executed on at least one processor of a communication device or a communication equipment, cause the communication device or a communication equipment to carry out any of the embodiments described above. Embodiments further include a carrier containing such a computer program. This carrier may comprise one of an electronic signal, optical signal, radio signal, or computer readable storage medium.</p><p id="p-0012" num="0011">For some of the embodiments above, only a few changes may be needed on the UE side and in the authentication application program interface (API). No change may be needed for the existing applications that rely on Digest AKA procedure or the 5G AKA procedure on the core network side. For some of the embodiments above, they may be used in other networks beside 5G, such as 6G or further generation 3GPP networks in future.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0013" num="0012">Exemplary embodiments will be described, by way of example, with reference to the accompanying drawings, in which:</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a signalling diagram of the HTTP Digest AKA procedure.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a signalling diagram of the 5G AKA authentication procedure.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is an architecture of an enhanced AKA according to some embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a signaling diagram of an enhanced AKA Digest procedure according to some embodiments.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a signalling diagram of another enhanced AKA Digest procedure according to some other embodiments.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a logic flow diagram of a method performed by a communication device according to some embodiments.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a logic flow diagram of a method performed by a communication equipment according to some embodiments.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of a communication device according to some embodiments.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of a communication equipment according to some embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows an existing HTTP Digest AKA procedure. HTTP Digest AKA, as defined in RFC3310, is a procedure for authenticating a UE subscriber by combining both the HTTP Digest authentication scheme defined in RFC2617 and the 3GPP AKA authentication mechanism specified in 3GPP TS 33.102 (V15.1.0). The basic idea of HTTP Digest AKA is to map the AKA parameters onto the HTTP Digest challenge-response authentication procedure.</p><p id="p-0024" num="0023">As is shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>:</p><p id="p-0025" num="0024">1) UE sends an initial request (e.g., an HTTP GET message) which includes an identifier of the subscriber, e.g., a Mobile Station International Subscriber Directory Number (MSISDN) or an International Mobile Subscriber Identity (IMSI) to an authentication server (referred to as Auth Server in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0026" num="0025">2) When the Auth Server, which could be a Proxy-Call Session Control Function (P-CSCF) used in IP Multimedia Subsystem (IMS) or a Bootstrapping Server Function (BSF) used in Generic Bootstrapping Architecture (GBA), receives the initial request, it initiates an authentication request to the Authentication Center (AuC) with the subscriber identifier.</p><p id="p-0027" num="0026">3) The AuC replies with an authentication vector which comprises of an Authentication Token (AUTN), a Random Challenge (RAND) and an Expected Authentication Response (XRES) to the Auth Server.</p><p id="p-0028" num="0027">4) After obtaining the authentication vector, the Auth Server populates the RAND and AUTN into a 401 Unauthorized response and sends the response to UE.</p><p id="p-0029" num="0028">5) UE passes the received RAND and AUTN to its Universal Integrated Circuit Card (UICC). UICC runs the pre-shared key and algorithm in the Subscriber Identity Module (USIM) to verify the AUTN. If successful, the UE can authenticate the network side. UICC also derives the Authentication Response (RES) and key materials. UE receives the RES from the UICC and generates a Digest based on a hash of the RES and other parameters.</p><p id="p-0030" num="0029">6) UE sends the generated Digest to the Auth Server in another request.</p><p id="p-0031" num="0030">7) The Auth Server uses the same hash algorithm to compute a hash based on XRES received from the AuC. This hash is compared with the Digest received from UE. If they are equivalent, the network can authenticate the UE as well.</p><p id="p-0032" num="0031">8) For the purpose of mutual authentication and message integrity, the server calculates a hash based on XRES and other parameters, such as the content of the received request message. The hash is populated into a 200 OK response. The UE can also verify the received hash against the hash calculated locally.</p><p id="p-0033" num="0032">This Digest AKA procedure is not only used by HTTP but also by Session Initiation Protocol (SIP) and Constrained Application Protocol (CoAP). For the example of using Digest AKA on SIP, please refer to RFC 3310. For the example of using Digest AKA on CoAP, please refer to RFC 7252. The Digest AKA has been widely used in IMS (see 3GPP TS 29.228 (V15.2.0)) and GBA (see 3GPP TS 33.220 (V15.4.0)).</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an 5G AKA authentication procedure, which is used to replace the existing AKA mechanism used in 3G and 4G networks. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>:</p><p id="p-0035" num="0034">1) The UE initiates an authentication procedure by sending an Authentication Request with a subscriber identifier, such as Subscriber Permanent Identity (SUPI) or Subscriber Concealed Identity (SUCI) which is an encrypted SUPI, to a Security Anchor Function (SEAF).</p><p id="p-0036" num="0035">2) The SEAF then calls the Authentication Server Function (AUSF) by sending an Nausf_UEAuthentication request which comprises the received subscriber identifier and the serving network name.</p><p id="p-0037" num="0036">3) The AUSF then sends an Nudm_UEAuthentication request including the received subscriber identifier and serving network name to the Unified Data Management (UDM).</p><p id="p-0038" num="0037">4) The UDM sends back an Authentication Vector which comprises an Authentication Token (AUTN), a Random Challenge (RAND) and an Expected Authentication Response (XRES*) to the AUSF.</p><p id="p-0039" num="0038">5) The AUSF stores the XRES* and computes a hash value of the Expected Authentication Response (HXRES*) from the received XRES*.</p><p id="p-0040" num="0039">6) The AUSF then sends an Authentication Vector which comprises of the AUTN, the RAND and the HXRES* to the SEAF.</p><p id="p-0041" num="0040">7) The SEAF sends an Authentication Request which comprises the AUTN and RAND to the UE.</p><p id="p-0042" num="0041">8) The UE receives the Authentication Request and validates the received AUTN. UE also calculates a RES* using the RAND and a pre-shared key.</p><p id="p-0043" num="0042">9) The UE then sends the calculated RES* included in an Authentication Response to the SEAF.</p><p id="p-0044" num="0043">10-11) The SEAF validates the RES* received from UE by hashing and comparing the hash of the RES* received from UE with the HXRES* received from AUSF. If they match, the UE is successfully authenticated in the serving network. But the SEAF continues to authenticate the UE with the home network. Hence, the SEAF sends the RES* received from the UE to the AUSF.</p><p id="p-0045" num="0044">12-13) The AUSF compares the RES* received from UE with the XRES* received from the UDM is step 4. If they match, the UE is successfully authenticated in the home network. The AUSF then sends an Authentication Success Response including K<sub>SEAF </sub>and the SUPI to the SEAF.</p><p id="p-0046" num="0045">14) The SEAF sends the Authentication Success Response to UE.</p><p id="p-0047" num="0046">For more details about 5G AKA, please refer to 3GPP TS 33.501 (V15.5.0). Compared to the 3G or 4G AKA, in the 5G AKA, the difference is mainly on the network side. In the current Digest AKA procedure as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the RES calculated by UE is never sent over the network because the UE is assumed to know the RES and the Auth Server is assumed to know the XRES. Thus, the UE only computes a Digest by hashing the RES and other parameters. The Auth Server side uses XRES and the same parameters known by UE to compute a hash value and compare it with the received Digest. However, in the 5G AKA procedure described above and shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the SEAF doesn't know XRES* during the authentication procedure. Hence, the UE needs to send the RES* to the SEAF and the SEAF has to hash it to HRES* and compare it with the HXRES* received from the AUSF. Therefore, the current Digest AKA authentication cannot work with 5G.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example of an architecture in which an enhanced Digest AKA can be used with 5G AKA. With the enhanced Digest AKA, the UE can securely transmit the RES* to the server. Meanwhile, the enhanced Digest AKA procedure is still compatible with existing Digest AKA authentication mechanism and the 5G AKA authentication mechanism. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the Auth Server can be one of Application Functions (AFs) deployed in or connected to 5G core network (5GC). The Auth Server <b>14</b>A comprises two interfaces. The first interface facing the UE supports the Digest AKA procedure based on HTTP, SIP, or CoAP. The second interface facing the AUSF <b>16</b> in 5GC network supports 5G AKA procedure. Thus, the Auth Server <b>14</b>A can use the Nausf_UEauthentication service provided by the AUSF <b>16</b>. In one of the embodiments, the second interface may be supported by a SEAF <b>14</b>B. The SEAF <b>14</b>B may be embedded within the Auth Server <b>14</b>A (as shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) or independent from the Auth Server <b>14</b>A but connected to the Auth Server <b>14</b>A (not shown in the figure). In another embodiment, the second interface may be supported by a Proxy-Call Session Control Function (P-CSCF) <b>14</b>B, by a Bootstrapping Server Function (BSF) <b>14</b>B, or by another network function. Either of the network functions may be embedded within the Auth Server <b>14</b>A or independent from the Auth Server <b>14</b>A but connected to the Auth Server <b>14</b>A.</p><p id="p-0049" num="0048">Further, in some embodiments, a security protocol (e.g., Transport Layer Security (TLS), Secure Sockets Layer (SSL) protocol, etc.) may be used to protect the interface between the UE and the Auth Server. In embodiments where the UE does not or cannot support any security protocols, e.g, TLS or SSL, for instance, for some constrained Internet of Things (IoT) devices, an alternative approach that allows transferring the RES* in secured ways will be provides in the later embodiment.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows one of the embodiments of the enhanced Digest AKA procedure integrated with 5GC where TLS is used to protect the security of the interface between the UE <b>12</b> and the Auth Server/SEAF <b>14</b>. In some other embodiments, TLS maybe replaced by another security protocol (e.g., SSL protocol) to protect the interface between the UE and the Auth Server. In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, HTTP is used as an example. In some other embodiments, HTTP may be replaced by another transfer protocol (e.g., SIP or CoAP) to transfer the data. The Auth Server <b>14</b>A and the SEAF <b>14</b>B may be collocated or separated from each other but could communicate with each other. The SEAF <b>14</b>B could be replaced by a Proxy-Call Session Control Function (P-CSCF) <b>14</b>B, by a Bootstrapping Server Function (BSF) <b>14</b>B, or by another network function.</p><p id="p-0051" num="0050">1) The UE establishes a TLS connection with the Auth Server <b>14</b> A, so that the following communication are protected by a secured connection.</p><p id="p-0052" num="0051">2) The UE sends an HTTP GET request with the UE's subscriber identifier. The subscriber identifier could be one or more of a Subscriber Permanent Identity (SUPI), a Subscriber Conceal Identity (SUCI), a Mobile Station International Subscriber Directory Number (MSISDN), an International Mobile Subscriber Identity (IMSI), an External ID, or any other subscriber identifier of the UE <b>12</b>.</p><p id="p-0053" num="0052">An example of an HTTP GET message is shown as below:</p><p id="p-0054" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="196pt" align="left"/><thead><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>&#x2003;</entry><entry>GET / HTTP/1.1 Host: bsf.home1.net:80</entry></row><row><entry/><entry>User-Agent: Bootstrapping Client Agent; Release-6</entry></row><row><entry/><entry>Date: Thu, 08 Jan 2004 10:13:17 GMT</entry></row><row><entry/><entry>Accept: */*</entry></row><row><entry/><entry>Authorization:Digest username=&#x201c;&#x3c;SUPI/SUCI&#x201d;,realm=&#x201c;&#x3c;serving</entry></row><row><entry/><entry>network name&#x3e;&#x201d;, nonce=&#x201c;&#x201d;, uri=&#x201c;/&#x201d;, response=&#x201c;&#x201d;</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0055" num="0053">3) When the Auth Server/SEAF <b>14</b> receives the request (the subscriber identifier is passed to the SEAF <b>14</b>B if the SEAF <b>14</b>B is separated from the Auth Server), the SEAF <b>14</b>B sends an Nausf_UEAuthentication message comprising the subscriber identifier and the Serving Network Name to the AUSF <b>16</b>.</p><p id="p-0056" num="0054">4) The AUSF <b>16</b> sends an Nudm_UEAuthentication message to UDM <b>18</b>, the Nudm_UEAuthentication message including the received subscriber identifier and Serving Network Name.</p><p id="p-0057" num="0055">5) The UDM <b>18</b> responds to the AUSF <b>16</b> with an Authentication Vector including RAND, XRES*, and AUTN.</p><p id="p-0058" num="0056">6) The AUSF <b>16</b> stores the XRES* and computes a hash value of the XRES* (HXRES*) from the received XRES*.</p><p id="p-0059" num="0057">7) The AUSF <b>16</b> sends an Authentication Vector including the received RAND, AUTN and computed HXRES* to the Auth Server/SEAF <b>14</b>.</p><p id="p-0060" num="0058">8) The Auth Server/SEAF <b>14</b> populates the RAND and AUTN into an HTTP 401 Unauthorized Response and sends it to UE <b>12</b>.</p><p id="p-0061" num="0059">An example of an HTTP 401 Unauthorized Response message is shown as below:</p><p id="p-0062" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="14pt" align="left"/><colspec colname="2" colwidth="203pt" align="left"/><thead><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>&#x2003;</entry><entry>HTTP/1.1 401 Unauthorized</entry></row><row><entry/><entry>Server: Bootstrapping Server; Release-6</entry></row><row><entry/><entry>Date: Thu, 08 Jan 2004 10:13:17 GMT</entry></row><row><entry/><entry>WWW-Authenticate: Digest realm=&#x201c;&#x3c;serving network name&#x3e;&#x201d;, nonce=</entry></row><row><entry/><entry>base64(RAND + AUTN + server specific data), algorithm=AKAv1-MD5,</entry></row><row><entry/><entry>qop=&#x201c;auth-int&#x201d;, opaque=&#x201c;5ccc069c403ebaf9f0171e9517f30e41&#x201d;</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0063" num="0060">9) The UE <b>12</b> passes the AUTN and RAND to its Universal Integrated Circuit Card (UICC). After the UICC successfully validates the received AUTN, it generates RES, and derives RES* from RES. The UE <b>12</b> continues to derive an anchor key K<sub>SEAF</sub>.</p><p id="p-0064" num="0061">10) The UE <b>12</b> sends the RES* to the Auth Server/SEAF <b>14</b> in the directive &#x201c;cnonce&#x201d; after encoding it with base64. The anchor key K<sub>SEAF </sub>is used as the &#x201c;password&#x201d; parameter (shared key) for calculating the Digest response as described by RFC3310 and RFC2617.</p><p id="p-0065" num="0062">An example of the second HTTP GET message including RES* and the Digest is shown as below:</p><p id="p-0066" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="21pt" align="left"/><colspec colname="2" colwidth="196pt" align="left"/><thead><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>&#x2003;</entry><entry>GET / HTTP/1.1 Host: bsf.homel.net:80</entry></row><row><entry/><entry>User-Agent: Bootstrapping Client Agent; Release-6; 3gpp-gba-tmpi</entry></row><row><entry/><entry>Date: Thu, 08 Jan 2004 10:13:18 GMT</entry></row><row><entry/><entry>Accept: */*</entry></row><row><entry/><entry>Authorization: Digest username=&#x201c;&#x3c;supi/suci&#x3e;&#x201d;,</entry></row><row><entry/><entry>&#x2003;realm=&#x201c;&#x3c;serving network name&#x3e;&#x201d;,</entry></row><row><entry/><entry>&#x2003;nonce=&#x201c;base64(RAND + AUTN + server specific</entry></row><row><entry/><entry>data)&#x201d;,</entry></row><row><entry/><entry>&#x2003;uri=&#x201c;/&#x201d;,</entry></row><row><entry/><entry>&#x2003;qop=auth-int,</entry></row><row><entry/><entry>&#x2003;nc=00000001,</entry></row><row><entry/><entry>&#x2003;cnonce=&#x201c;base64(RES*) &#x201d; ,</entry></row><row><entry/><entry>&#x2003;response= &#x201c;Digest (password=K<sub>SEAF, ...</sub>) &#x2033;,</entry></row><row><entry/><entry>&#x2003;opaque=&#x201c;5ccc069c403ebaf9f0171e9517f30e41&#x201d;,</entry></row><row><entry/><entry>&#x2003;alaorithm=AKAvl-MD5</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0067" num="0063">Compared to the current Digest AKA procedure shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in the enhanced AKA procedure shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, since the Auth Server/SEAF doesn't know XRES* during the authentication procedure, the UE needs to send the RES* to the Auth Server/SEAF. Thus, RES* cannot be used as a shared key between the UE and the Auth Server/SEAF as is done in the current Digest AKA. Therefore, a new key needs to be used as a shared key between the UE and the Auth Server/SEAF. In some embodiments, anchor key K<sub>SEAF </sub>is used as the shared key because both the UE and the Auth Server/SEAF can obtain K<sub>SEAF </sub>without changing the existing 5G AKA procedure. Furthermore, when anchor key K<sub>SEAF </sub>is used as the shared key, only the UE side and the authentication application program interface (API) facing to UE side need to be changed. On the network side, no change is needed for the current 5G AKA procedure. Even if the SEAF is replaced with a P-CSCF or a BSF, when the P-CSCF or the BSF works with a 5G network, they can obtain the same key without changing the existing 5G AKA procedure.</p><p id="p-0068" num="0064">11-12) The Auth Server/SEAF <b>14</b> retrieves RES* from the cnonce directive. The SEAF <b>14</b>B which may be embedded in the Auth Server <b>14</b>A hashes the RES* to HRES* as specified by Annex A.5 of 3GPP TS 33.501 (V15.5.0). The HRES* is compared with HXRES* included in the Authentication Vector which is received from the AUSF. If they match, the Auth Server/SEAF <b>14</b> sends the RES* to the AUSF in a Nausf_UEAuth_Confirm message.</p><p id="p-0069" num="0065">13) The AUSF <b>16</b> checks if the RES* received from the SEAF <b>14</b>B matches the stored XRES* which the AUSF <b>16</b> received from the UDM <b>18</b> in step 5. If so, the AUSF <b>16</b> confirms the authentication with the anchor key K<sub>SEAF</sub>, and sends it back to the SEAF <b>14</b>B which may be embedded in the Auth Server <b>14</b>A in a Nausf_UEAuthetication_Authetication Response message as specified by TS 33.501 (V15.5.0).</p><p id="p-0070" num="0066">14) The Auth Server <b>14</b>A obtains the anchor key K<sub>SEAF </sub>from SEAF <b>14</b>B, uses it as the &#x201c;password&#x201d; parameter (shared key) in generation of the server-side digest for purpose of server authentication as specified by RFC 3310.</p><p id="p-0071" num="0067">15) If the Digest validation is successful, the Auth Server returns a 200 OK response to the UE <b>12</b> as described in RFC3310 and RFC2617.</p><p id="p-0072" num="0068">An example of sending a HTTP 200 OK response is shown as below:</p><p id="p-0073" num="0000"><tables id="TABLE-US-00004" num="00004"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="left"/><thead><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry>HTTP/1.1 200 OK</entry></row><row><entry>&#x2003;Server: Bootstrapping Server; Release-6; 3gpp-gba-tmpi</entry></row><row><entry>&#x2003;Authentication-Info: qop=auth-int,</entry></row><row><entry>rspauth=&#x201c;6629fae49394a05397450978507c4ef1&#x201d;,</entry></row><row><entry>&#x2003;cnonce=&#x201c;6629fae49393a05397450978507c4ef1&#x201d;,</entry></row><row><entry>nc=00000001, nextnonce=&#x201c;base64(RAND + AUTN + server specific data)&#x201d; </entry></row><row><entry>Date: Expires: Thu, 08 Jan 2004 10:23:17 GMT</entry></row><row><entry>Content-Type: application/vnd.3gpp.bsf+xml</entry></row><row><entry>Content-Length: (...)</entry></row><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0074" num="0069"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows an embodiment of the enhanced AKA Digest procedure where no security protocol (e.g., TLS or SSL) is available for the interface between the UE <b>12</b> and the Auth Server <b>14</b>A. For instance, the UE <b>12</b> may be a constrained IoT device that cannot support TLS/SSL, or TLS/SSL may not be strong enough due, for instance, to a lack of hardware random number generator. HTTP is also used in <figref idref="DRAWINGS">FIG. <b>5</b></figref> as an example. In some other embodiments however, another transfer protocol, e.g., Session Initiation Protocol (SIP) or Constrained Application Protocol (CoAP), may be used to transfer the data. The Auth Server <b>14</b>A and SEAF <b>14</b>B may be collocated or separated from each other but could communicate with each other. In some embodiments, the SEAF <b>14</b>B could be replaced by a Proxy-Call Session Control Function (P-CSCF) <b>14</b>B, by a Bootstrapping Server Function (BSF) <b>14</b>B, or by another network function.</p><p id="p-0075" num="0070">Compared with the enhanced AKA Digest procedure shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the main difference of the AKA Digest procedure shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> is that a key pair including a public key and a private key is used to protect the RES* computed by UE <b>12</b>. The detailed differences are listed as below:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0071">There is no security protocol used to protect the interface between the UE <b>12</b> and the Auth Server <b>14</b>A in step 1.</li>        <li id="ul0002-0002" num="0072">In step 7, the Auth Server/SEAF <b>14</b> includes a public key of a key pair of which the private key (K<sub>private</sub>) is stored within the Auth Server/SEAF <b>14</b> itself. The public key (K<sub>public</sub>) is populated in the directive of &#x201c;nonce&#x201d; as RFC 3310, the nonce directive comprises RAND, AUTN and server data that are appended by server-side. The public key is populated in the part of server data.</li>        <li id="ul0002-0003" num="0073">In step 9, the UE <b>12</b> uses the public key to encrypt the RES*. After UE encoded the RES* with Base64, the encrypted RES* is populated in the &#x201c;cnonce&#x201d; directive and sent to the Auth Server/SEAF <b>14</b>.</li>        <li id="ul0002-0004" num="0074">In step 10, the Auth Server <b>14</b>A uses the private key corresponding to the public key to decrypt the RES* and passes the RES* to the SEAF <b>14</b>B which may be embedded in or connected to the Auth Server.</li>    </ul>    </li></ul></p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts a method <b>600</b> performed by a communication device (e.g., a wireless device, such as a user equipment, UE) according to particular embodiments. Blocks in dashed lines are optional. The method in some embodiments may include sending a first request (e.g., HTTP GET, SIP REGISTER or CoAP GET) to a communication equipment, the request comprising an identifier of the communication device (e.g., SUPI, SUCI, IMSI, MSISDN, an external ID, etc.) (block <b>602</b>). In some embodiments, the communication equipment may comprise an Authentication Server. In some embodiments, the communication equipment implements a Proxy-Call Session Control Function (P-CSCF), a Bootstrapping Server Function (BSF), or a Security Anchor Function (SEAF). The method in some embodiments may also include receiving a first response from the communication equipment, the first response comprising one or more parameters (e.g., RAND, AUTN, etc.) (block <b>603</b>). The method in some embodiments may further include generating a first key and a second key based on the received first response (block <b>605</b>). In some embodiments, the first key is based, at least in part, on the one or more parameters. In some embodiments, the first key is a value of authentication response (RES*). In some embodiments, the second key is a shared key between the communication device and the communication equipment (e.g., K<sub>SEAF</sub>). The method in some embodiments may also include sending a second request to the communication equipment, the second request comprising the first key and a message based on the second key (block <b>606</b>). In some embodiments, the message based on the second key is a Digest Authentication and Key Agreement (AKA) message.</p><p id="p-0077" num="0076">The method in some embodiments also include validating the first response received from the communication equipment (block <b>604</b>). In some embodiments, the method may also include receiving a second response (e.g., HTTP, SIP or CoAP success response) indicating that the validation of the second request message is successful (block <b>607</b>).</p><p id="p-0078" num="0077">The method in some embodiments may also include establishing an encrypted or otherwise secured connection with a communication equipment (block <b>601</b>) before sending the first request (block <b>602</b>). In some embodiments, the encrypted connection is based on the Transport Layer Security (TLS) protocol or on the Secure Sockets Layer (SSL) protocol. In some embodiments, the method may include encrypting the first key using a fourth key (K<sub>public</sub>) (not shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>) when sending the second request comprising the first key (block <b>606</b>).</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a method <b>700</b> performed by a communication equipment (e.g., a SEAF, a P-CSCF, a BSF, etc.) according to particular embodiments. Blocks in dashed lines are optional. The method in some embodiments may include receiving a first request from a communication device (e.g., a wireless device, such as a user equipment, UE), the first request comprising an identity of the communication device (e.g., SUPI, SUCI, IMSI, MSISDN, an external ID, etc.) (block <b>702</b>). In some embodiments, the communication equipment comprises an Authentication Server. In some embodiments, the first request is a HTTP GET, a SIP REGISTER or a CoAP GET message. The method in some embodiments may also include sending a first response to the communication device, the first response comprising one or more parameters (e.g., RAND, AUTN, etc.) (block <b>705</b>). The method in some embodiments may also include receiving a second request from the communication device, the second request comprises a first key and a message based on a second key (block <b>706</b>). In some embodiments, the first key is based, at least in part, on the one or more parameters. In some embodiments, the first key is a value of authentication response (RES*). In some embodiments, the second key is a shared key between the communication device and the communication equipment (e.g., K<sub>SEAF</sub>) In some embodiments, the message based on the second key is a Digest Authentication and Key Agreement (AKA) message. The method in some embodiments may further include sending a second response (e.g., HTTP, SIP or CoAP success response) to the communication device, the second response indicating a result of the validation of the second request (block <b>711</b>).</p><p id="p-0080" num="0079">In some embodiments, the method may also include validating the first key (block <b>707</b>). In some embodiments, validating the first key comprises computing a hash of the first key and comparing the computed hash of the first key with an expected hash of the first key. In some embodiments, the first key is a value of an authentication response (RES*), the hash of the first key is a hash value of the authentication response (HRES*) and the expected hash of the first key is an expected hash value of the authentication response (HXRES*). In some embodiments, the method may also include validating the message based on a second key (block <b>710</b>). In some embodiments, validating the message based on the second key comprises validating the message using a third key received from a network node (e.g., AUSF). In some embodiments, the third key is a shared key (e.g., K<sub>SEAF</sub>) between the communication device and communication equipment.</p><p id="p-0081" num="0080">In some embodiments, the method may also include sending the communication device identifier received from the communication device to a network node (e.g., AUSF) (block <b>703</b>). In some embodiments, the method may also include receiving an expected hash of the first key from the network node (e.g., AUSF) (block <b>704</b>). In some embodiments, the method may also include sending the validated first key to the network node (e.g., AUSF) (block <b>708</b>). In some embodiments, the method may also include receiving a third key from the network node (e.g., AUSF) (block <b>709</b>).</p><p id="p-0082" num="0081">The method in some embodiments may include establishing an encrypted or otherwise secured connection with a communication equipment (block <b>701</b>) before receiving the first request (block <b>702</b>). In some embodiments, the encrypted connection is based on the Transport Layer Security (TLS) protocol or on the Secure Sockets Layer (SSL) protocol. The method in the other embodiments may include that, when receiving the first key (block <b>706</b>), the first key is encrypted by the communication device using a fourth key (e.g., K<sub>public</sub>, not shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>), and when validating the first key (block <b>707</b>), decrypting the first key using a fifth key (e.g., K<sub>private</sub>, not shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a communication device <b>800</b> (e.g., wireless device, UE) as implemented in accordance with one or more embodiments. As shown, the communication device <b>800</b> includes processing circuitry <b>810</b> and communication circuitry <b>820</b>. The communication circuitry <b>820</b> (e.g., radio circuitry) is configured to transmit and/or receive information to and/or from one or more other nodes, e.g., via any communication technology. Such communication may occur via one or more antennas <b>840</b> that are either internal or external to the communication device <b>800</b>. The processing circuitry <b>810</b> is configured to perform processing described above (e.g., in <figref idref="DRAWINGS">FIG. <b>6</b></figref>), such as by executing instructions stored in memory <b>830</b>. The processing circuitry <b>810</b> in this regard may implement certain functional means, units, or modules.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates communication equipment <b>900</b> configured for communicating with a communication device as implemented in accordance with one or more embodiments. As shown, the communication equipment <b>900</b> includes processing circuitry <b>910</b> and communication circuitry <b>920</b>. The communication circuitry <b>920</b> is configured to transmit and/or receive information to and/or from one or more other nodes, e.g., via any communication technology. The processing circuitry <b>910</b> is configured to perform processing described above (e.g., in <figref idref="DRAWINGS">FIG. <b>7</b></figref>), such as by executing instructions stored in memory <b>930</b>. The processing circuitry <b>910</b> in this regard may implement certain functional means, units, or modules.</p><p id="p-0085" num="0084">A computer program comprises instructions which, when executed on at least one processor of a communication device or communication equipment, cause the communication device or communication equipment to carry out any of the respective processing described above. A computer program in this regard may comprise one or more code modules configured to perform one or more steps of the processing described above.</p><p id="p-0086" num="0085">Embodiments further include a carrier containing such a computer program. This carrier may comprise one of an electronic signal, optical signal, radio signal, or computer readable storage medium.</p><p id="p-0087" num="0086">In this regard, embodiments herein also include a computer program product stored on a non-transitory computer readable (storage or recording) medium and comprising instructions that, when executed by a processor of a communication device or a communication equipment, cause the communication device or communication equipment to perform as described above. Embodiments further include a computer program product comprising program code portions for performing the steps of any of the embodiments herein when the computer program product is executed by a computing device. This computer program product may be stored on a computer readable recording medium.</p><p id="p-0088" num="0087">Additional embodiments will now be described. At least some of these embodiments may be described as applicable in certain contexts and/or wireless network types for illustrative purposes, but the embodiments are similarly applicable in other contexts and/or wireless network types not explicitly described.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method performed by a communication device, the method comprising:<claim-text>sending a first request to a communication equipment, the request comprising an identifier of the communication device;</claim-text><claim-text>receiving a first response from the communication equipment, the first response comprising one or more parameters;</claim-text><claim-text>generating a first key and a second key based on the received first response; and</claim-text><claim-text>sending a second request to the communication equipment, the second request comprising the first key and a message based on the second key.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second key is a shared key between the communication device and communication equipment.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second key is KSEAF.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first key is based, at least in part, on the one or more parameters.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the first key is a value of authentication response (RES*).</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more parameters comprise a random challenge (RAND) and an Authentication Token (AUTN).</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises validating the first response received from the communication equipment.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. (canceled)</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the message based on the second key is a Digest Authentication and Key Agreement (AKA) message.</claim-text></claim><claim id="CLM-10-19" num="10-19"><claim-text><b>10</b>.-<b>19</b>. (canceled)</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A method performed by a communication equipment, the method comprising:<claim-text>receiving a first request from a communication device, the first request comprising an identifier of the communication device;</claim-text><claim-text>sending a first response to the communication device, the first response comprising one or more parameters;</claim-text><claim-text>receiving a second request from the communication device, the second request comprises a first key and a message based on a second key; and</claim-text><claim-text>sending a second response to the communication device, the second response indicating a result of a validation of the second request.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>, the method further comprising:<claim-text>validating the first key; and</claim-text><claim-text>validating the message based on the second key.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the second key is a shared key between the communication device and communication equipment.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The method according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the shared key is K<sub>SEAF</sub>.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the message based on the second key is a Digest Authentication and Key Agreement (AKA) message.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the first request comprises a random challenge (RAND) and an Authentication Token (AUTN).</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein validating the first key comprises computing a hash of the first key and comparing the computed hash of the first key with an expected hash of the first key.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The method according to <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the first key is based, at least in part, on the one or more parameters.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The method according to <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein the first key is a value of an authentication response (RES*), the hash of the first key is a hash value of the authentication response (HRES*) and the expected hash of the first key is an expected hash value of the authentication response (HXRES*).</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein validating the message based on the second key comprises validating the message using a third key received from a network node.</claim-text></claim><claim id="CLM-30-45" num="30-45"><claim-text><b>30</b>.-<b>45</b>. (canceled)</claim-text></claim><claim id="CLM-00046" num="00046"><claim-text><b>46</b>. A communication device comprising:<claim-text>processing circuitry and memory, the memory containing instructions executable by the processing circuitry whereby the communication device is configured to:<claim-text>send a first request to a communication equipment, the request comprising an identifier of the communication device;</claim-text><claim-text>receive a first response from the communication equipment, the first response comprising one or more parameters;</claim-text><claim-text>generate a first key and a second key based on the received first response; and</claim-text><claim-text>send a second request to the communication equipment, the second request comprising the first key and a message based on the second key.</claim-text></claim-text></claim-text></claim><claim id="CLM-47-49" num="47-49"><claim-text><b>47</b>.-<b>49</b>. (canceled)</claim-text></claim><claim id="CLM-00050" num="00050"><claim-text><b>50</b>. A communication equipment comprising:<claim-text>processing circuitry and memory, the memory containing instructions executable by the processing circuitry whereby the communication equipment is configured to:</claim-text><claim-text>receive a first request from a communication device, the first request comprising an identifier of the communication device;</claim-text><claim-text>send a first response to the communication device, the first response comprising one or more parameters;</claim-text><claim-text>receive a second request from the communication device, the second request comprises a first key and a message based on a second key; and</claim-text><claim-text>send a second response to the communication device, the second response indicating a result of a validation of the second request.</claim-text></claim-text></claim><claim id="CLM-51-53" num="51-53"><claim-text><b>51</b>.-<b>53</b>. (canceled)</claim-text></claim></claims></us-patent-application>