<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006817A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006817</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17579035</doc-number><date>20220119</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0825</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3236</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0894</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CONNECTED SECURE KEY REDISTRIBUTION SYSTEM AND METHOD</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17366560</doc-number><date>20210702</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11233632</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17579035</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Cal-Chip Electronics Specialty Products, Inc.</orgname><address><city>Warminster</city><state>PA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>GIULIANO</last-name><first-name>Jason Michael</first-name><address><city>Furlong</city><state>PA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>RANCOUR, II</last-name><first-name>Thomas Scott</first-name><address><city>Stanwood</city><state>MI</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In one embodiment, a method for securely distributing secret keys for hardware devices is disclosed. A distributor server transmits to a provider server an order for hardware devices. Each hardware device has a unique identifier and at least one secret key for authentication. The provider server sends a database associated with the distributor, for each of the hardware devices, the unique identifier and an unencrypted version of the at least one secret key. In response to an order received by the distributor from a customer for a portion of the hardware devices, the distributor server provides the database the unique identifiers and an associated customer order identifier, and the distributor server provides a customer server the unique identifiers. In response to the customer providing order information, the database provides the customer the unencrypted keys for the hardware devices to enable authentication.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="85.01mm" wi="158.75mm" file="US20230006817A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="194.06mm" wi="132.84mm" orientation="landscape" file="US20230006817A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="245.28mm" wi="132.84mm" orientation="landscape" file="US20230006817A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="245.28mm" wi="131.74mm" orientation="landscape" file="US20230006817A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="245.28mm" wi="132.33mm" orientation="landscape" file="US20230006817A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="245.28mm" wi="132.33mm" orientation="landscape" file="US20230006817A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="245.28mm" wi="132.33mm" orientation="landscape" file="US20230006817A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="245.28mm" wi="132.33mm" orientation="landscape" file="US20230006817A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="245.28mm" wi="143.51mm" orientation="landscape" file="US20230006817A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="179.92mm" wi="146.98mm" orientation="landscape" file="US20230006817A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a continuation of U.S. patent application Ser. No. 17/366,560, filed Jul. 2, 2021, which claims the benefit of U.S. Provisional Patent Application No. 63/047,381, filed Jul. 2, 2020. The disclosures of the foregoing references are incorporated herein by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Broadly used machine-to-machine (M2M), sensor network, and internet of things (IoT) systems implement some form of symmetric and/or asymmetric encryption, hashing functions, message authentication codes (MACs), and/or digital signatures safeguarding connected devices and networks. For low cost and low power M2M and sensor networks that use hardware devices with embedded MCUs/MPUs with limited computational power and memory, compromises have been made in the complexity of security protocols used to authenticate devices joining the network and securing the data transmitted. Examples of these protocols include ZigBee, Bluetooth, LoRaWAN, SigFox, and Zwave. Many of these protocols have decided to use symmetric encryption as the primary authentication and security method due to the benefits of symmetric encryption algorithms in terms of implementation on memory, power, and computationally-constrained MCUs and MPUs.</p><p id="p-0004" num="0003">The exact protocol implementation and cryptography varies between industry standards, but all rely on maintaining the integrity of shared secret key (SK). There is extensive public documentation around the exact implementations of pre-shared secret key symmetric encryption.</p><p id="p-0005" num="0004">In some cases, like LoRaWAN ABP mode, the hardware device directly encrypts data transmitted on the network with its secret key(s) stored in local memory. In other cases, like LoRaWAN OTAA mode, the hardware device uses a secret key stored in local memory to initiate a &#x201c;join&#x201d; process with the network where this secret key is used only to authenticate the join process and subsequently a set of dynamically created &#x201c;session keys&#x201d; are instantiated per the network protocol and used for subsequent communication. In all cases, there is a need to use a secret key(s) stored in the hardware device prior to joining the network as a critical part of the process of authenticating the hardware device on the network and enabling subsequent communication.</p><p id="p-0006" num="0005">The current standards-based network protocols using secret key symmetric encryption define at least two network elements. The first network element is hardware devices. These are end-points (sensors, actuators, HMI devices, etc.) that join and send data on the network. The second network element is the network root of trust entity. This is the entity that authenticates hardware devices attempting to join a network and optionally negotiates a protocol-specific security policy. The exact terminology for this entity varies across industry standards. Examples includes Zigbee (Trust center, Zigbee router or coordinator), LoRaWAN (Join server), and Zwave (controller). The hardware devices may communicate directly with the network root of trust in star network typologies, or have their communications relayed or forwarded through other hardware devices (hop) in mesh network typologies.</p><p id="p-0007" num="0006">One of the ongoing challenges with the current secret key symmetric encryption-based network protocols is the need to securely register the initial secret keys in both the network trust entity and the hardware device before the device can attempt to join the network. If the secrecy of this key is compromised then significant security vulnerabilities are exposed to the entire network.</p><p id="p-0008" num="0007">In a completely vertically integrated solution scenario where one company designs, manufactures, and deploys all network elements, it would be fairly straightforward to maintain the secrecy and integrity of the secret key. The real world ecosystem and marketplace, however, is composed of multiple solution component providers and creates a need for the secure distribution of these secret keys through the multi-tiered hardware device supply chain and network deployment. Existing industry standards define how hardware devices can be registered and authenticated on these networks, but none of the standards define a process and methodology for how the pre-provisioned secret keys seeded into hardware devices memory are securely distributed through a multi-tiered hardware device supply chain and complex marketplace including hardware device OEMs/CMs, distributors/resellers, hardware device owners, network operators, owners of the data generated by hardware devices, and lessors of hardware devices.</p><p id="p-0009" num="0008">Supply chain participants may include the following:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0009">Original Equipment Manufacturers (OEMs). OEMs manufacture hardware devices such as sensors, actuators, and gateways that rely on a security/authentication method based on a pre-shared &#x201c;secret&#x201d; key programmed into the memory of the device. These OEMs generally do not know which customer will buy which device at the time of manufacture. Note that a contract manufacturer (CM) may act on behalf of the OEM and may be the entity that programs the secret keys into the hardware device. As used herein, the term &#x201c;manufacturer&#x201d; or &#x201c;provider&#x201d; may include an OEM and/or a CM or any other provider of hardware devices.</li>        <li id="ul0002-0002" num="0010">Distributor, reseller. In typical markets, OEMs do not sell directly to customers, but to distributors or resellers. The distributor will stock the physical hardware from the OEMs and sell it to the end customer. For the customer to make use of the product they must have access to the pre-programmed secret key. As used herein, the term &#x201c;distributor&#x201d; may include any entity that buys and sells hardware devices, including resellers.</li>        <li id="ul0002-0003" num="0011">Customers. The customer is typically the end user of the sensors, actuators, and/or gateways who needs access to the secret key to actually use the devices. It is noted that the term &#x201c;customer&#x201d; is not limited to end users. For example, a customer may buy hardware devices to lease them to an end user.</li>        <li id="ul0002-0004" num="0012">Network provider (optional). The network provider is the company managing the network. For the customer's devices to join this network, the secret key must be registered with the network provider's root of trust. The term &#x201c;customer representative network&#x201d; may include any type of network, provided by the network provider, which may be accessed by a representative of the customer for authenticating hardware devices.</li>        <li id="ul0002-0005" num="0013">Lease or finance company (optional). In some cases, the IoT products or other devices will be lease or financed. Ideally, the lessor would maintain ownership of the secret key, but would register the device with the network on behalf of the lessee.</li>    </ul>    </li></ul></p><p id="p-0010" num="0014">Due to the lack of secret key distribution innovations in the marketplace, some industry standard protocols have defined a &#x201c;pairing&#x201d; process where the hardware device and network root of trust both enter a less secure &#x201c;pairing&#x201d; mode to allow the initial authentication of the hardware device on the network. In some cases all devices use the same secret keys during the initial pairing handshake. Although allowed, this method is increasingly discouraged due to potential security vulnerabilities during the pairing process. Further, &#x201c;pairing&#x201d; is a manual process that requires a person to initiate the &#x201c;pairing&#x201d; mode on the device. For some use cases like pairing a single temperature sensor to a person's phone, the &#x201c;manual&#x201d; overhead of pairing is not an issue. For IoT applications that need to deploy hundreds of thousands of sensors, however, the labor cost and time of this method is prohibitive. Further the person performing the manual pairing still must be trusted to some level. Although the root secrete keys of the device are not exposed during the manual pairing process, in most cases there is nothing preventing the unpaired device from simply being provisioned to another network, in effect being stolen.</p><p id="p-0011" num="0015">More recent updates to industry standards (example Zigbee 3.0) improve the security during pairing by requiring some type of &#x201c;out of band&#x201d; methodology to exchange the secret key during the initial pairing process, for example, using a cellphone with a camera to capture a QR code on the device and using the phone's &#x201c;out of band&#x201d; IP connection with the network root of trust to register the secret key. Although more secure than prior pairing processes, this is still a manual process and will not scale to high-volume sensor deployments due to the labor costs and security issues outlined above.</p><p id="p-0012" num="0016">Still another marketplace workaround for the lack of a secret key distribution method is the addition of a physical hardware secure element (HSE) chip (ICs) to the hardware sensor design. Although this approach technically provides an &#x201c;out of band&#x201d; process for hardware device owners to extract secret keys from devices, it adds the additional cost of the ICs to the hardware endpoints. Further to extract the secret keys, the end customer must implement a software process with the IC manufactures &#x201c;porthole&#x201d; to actually extract the secret keys per each IC. This incurs both NRE and subscription costs. In actuality, most hardware devices (e.g., sensors, actuators) do not use HSE ICs and simply have the secret key directly programmed into the non-volatile memory of the hardware device by the hardware device OEM/CM.</p><p id="p-0013" num="0017">In actuality, the most common methods being used in the marketplace to provide the pre-programmed secret keys within hardware devices to their purchaser (end customer) is the sensor OEM publishing them in clear text and delivering them to customers via emails, spreadsheets, flat files (CSV, etc.), or printed on labels included with hardware devices. This clear text exposure of hardware device secret keys as they move through the supply chain completely undermines the security foundation of the secret key symmetric encryption-based industry standard network protocols like LoRaWAN, Zigbee, and others.</p><p id="p-0014" num="0018"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a system <b>11</b> in which a direct sale is made from the OEM (provider) <b>104</b> to the customer <b>106</b>, the OEM <b>104</b> providing the secret keys <b>114</b> to the customer. According to this embodiment, a silicon manufacturer <b>102</b> manufactures un-provisioned ICs (e.g., hardware devices) <b>116</b> and provides them to the OEM in operation <b>122</b>. The OEM <b>104</b> has a database <b>110</b> that includes a device unique identifier (DUID) <b>112</b> and at least one secret key <b>114</b> for each hardware device. This data <b>112</b>, <b>114</b> is provided to the un-provisioned device <b>116</b> to cause device <b>118</b>.</p><p id="p-0015" num="0019">In operation <b>124</b>, the unique identifiers and secret keys are sent to the customer server <b>107</b> of the customer <b>106</b>. This data <b>112</b>, <b>114</b> is typically sent via CVS file, email, etc.</p><p id="p-0016" num="0020">The customer <b>106</b> then buys, receives, and deploys the hardware device (operation <b>126</b>). In operation <b>128</b>, the customer registers the unique identifiers and keys by sending them to the network authority <b>108</b> for device authentication, the network authority storing the unique identifiers <b>112</b> and secret keys <b>114</b> in a database <b>109</b>. The authenticated device <b>120</b> joins the network using the unique identifier and secret key(s). Such direct sales from OEMs to end customers are limited in the real-world supply chain to a limited set of large enterprises driving high volume products.</p><heading id="h-0003" level="2">Distributor Providing Keys (FIG. <b>2</b>)</heading><p id="p-0017" num="0021">The current situation also creates a logistics problem when OEMs use distributors/resellers. In the real marketplace, OEMs manufacture hardware devices in large batches and inject unique secret keys at the time of manufacture. In most cases, the OEM does not know who will purchase a particular hardware device at the time of manufacture, and in most cases the end customer actually purchases the device from a distributor/reseller and not directly from the hardware OEM. Hardware devices are manufactured with both a public serial number(s), device unique identifiers (DUIDs), and secret keys. The public serial numbers (or MAC address/EUIs/UUID) are stored in internal non-volatile memory and typically printed in clear text on the device. The secret keys are stored in protected internal non-volatile memory of the hardware device and to maintain integrity should never be printed or shared in clear text. In many cases, hardware devices have multiple secret keys. Only the end customer should have clear-text access to the secret keys and/or securely control the process of registering the secret keys with the network root of trust.</p><p id="p-0018" num="0022"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a system <b>12</b> in which devices <b>118</b> are sold through a distributor <b>130</b>, the distributor providing the customer the secret keys <b>114</b> either with the devices or in a spreadsheet. The components and operations are similar to those of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, but for the role of the distributor <b>130</b>. Here, the OEM sends the unique identifiers to the distributor (operation <b>125</b>), and the distributor <b>130</b> in turn sends the unique identifiers to the customer <b>106</b> (operation <b>127</b>).</p><p id="p-0019" num="0023">Each of these operations <b>125</b>, <b>127</b> creates a security risk. The distributor/reseller <b>130</b> must somehow connect the customer <b>106</b> to the secret keys of the devices they purchased. Today, the OEMs are including a printed secret key (or manifest of secret keys) with the shipment of products. Alternatively, they are emailing a excel spreadsheet or CVS file with the keys to distributors and/or customers.</p><p id="p-0020" num="0024">Distributors/resellers must provide end customers buying hardware devices with the specific secret keys for each device purchased. Logistically, they must track the unique serial number of each device and its secret keys. At the time of purchase, the distributor must somehow securely deliver these secret keys to the end customers. To ensure security, the distributor/reseller should not have unprotected access to the clear-text secret keys of the devices they sell. To maintain integrity, the distributor/reseller must provide a method to cache (temporally store) and/or transfer secret keys with protected methods and processes to the end customer or enable the customer to directly control the secure delivery of the secret keys of hardware devices purchased to the network root of trust the customer selects.</p><heading id="h-0004" level="1">BRIEF SUMMARY</heading><p id="p-0021" num="0025">The present disclosure may be directed, in one aspect, to a method or system for securely distributing secret keys for hardware devices. In one aspect, a method includes a) a distributor server of a distributor transmitting to a provider server of a provider an order for hardware devices, wherein the hardware devices have unique identifiers, and wherein each respective hardware device has (i) a corresponding unique identifier of the unique identifiers and (ii) at least one secret key enabling authentication of the respective hardware device; b) receiving at a database associated with the distributor the unique identifiers and unencrypted keys, wherein for each of the respective hardware devices, the database receives the corresponding unique identifier and an unencrypted key of the unencrypted keys, the unencrypted key being an unencrypted version of the at least one secret key for the respective hardware device; c) in response to an order received by the distributor from a customer for a portion of the hardware devices: i) the distributor server providing the database (1) the unique identifiers corresponding to the hardware devices of the ordered portion, and (2) an associated customer order identifier for the order; and ii) the distributor server providing a customer server the unique identifiers corresponding to the hardware devices of the ordered portion; and d) in response to a representative of the customer providing order information for the ordered portion of the hardware devices, the database providing the customer server or a customer representative network the unencrypted keys for the hardware devices of the ordered portion to enable authentication of the hardware devices of the ordered portion.</p><p id="p-0022" num="0026">In another aspect, a system includes a provider server of a provider; a distributor server of a distributor, the distributor server configured to transmit to the provider server an order for hardware devices, wherein the hardware devices have unique identifiers, and wherein each respective hardware device has (i) a corresponding unique identifier of the unique identifiers and (ii) at least one secret key enabling authentication of the respective hardware device; and a database associated with the distributor, the database configured to receive the unique identifiers and unencrypted keys, wherein for each of the respective hardware devices, the database receives the corresponding unique identifier and an unencrypted key of the unencrypted keys, the unencrypted key being an unencrypted version of the at least one secret key for the respective hardware device; wherein the distributor server is further configured to, in response to an order received by the distributor from a customer for a portion of the hardware devices: provide the database (1) the unique identifiers corresponding to the hardware devices that of the ordered portion, and (2) an associated customer order identifier for the order; and provide a customer server the unique identifiers corresponding to the hardware devices of the ordered portion; wherein in response to a representative of the customer providing order information for the ordered portion of the hardware devices, the database is configured to provide the customer server or a customer representative network the unencrypted keys for the hardware devices of the ordered portion to enable authentication of the hardware devices of the ordered portion.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0023" num="0027">The present disclosure will become more fully understood from the detailed description and the accompanying drawings, wherein:</p><p id="p-0024" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of a prior art system in which a direct sale is made from the manufacturer to the customer, the manufacturer providing the secret keys to the customer.</p><p id="p-0025" num="0029"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a prior art system in which devices are sold through a distributor, the distributor providing the customer the secret keys either with the devices or in a spreadsheet.</p><p id="p-0026" num="0030"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a system in which devices are sold through a distributor and the devices' secret keys are provided to the customer using a database associated with the distributor.</p><p id="p-0027" num="0031"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of a system similar to <figref idref="DRAWINGS">FIG. <b>3</b></figref> where devices are sold through a distributor, but where a cryptographically secure unique claim UUID (cUUID) is used to retrieve the secret key.</p><p id="p-0028" num="0032"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of another system where devices are sold through a distributor, but where the secret keys are provided from the database to a customer representative network.</p><p id="p-0029" num="0033"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of another system where devices are sold through a distributor, but where the distributor utilizes the provider's database for storing the unique identifiers and secret keys.</p><p id="p-0030" num="0034"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of a system similar to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, but where the secret keys are sent not to the customer, but to a customer representative network that may be a network of a third party.</p><p id="p-0031" num="0035"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of another system where devices are sold through a distributor, but where the customer leases the devices to an end user.</p><p id="p-0032" num="0036"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of a system enabling multiple lessors of a single hardware device.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0033" num="0037">The drawings represent one or more embodiments of the present invention(s).</p><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0034" num="0038">The following description of the preferred embodiment(s) is merely exemplary in nature and is in no way intended to limit the invention or inventions. The description of illustrative embodiments is intended to be read in connection with the accompanying drawings, which are to be considered part of the entire written description. In the description of the exemplary embodiments disclosed herein, any reference to direction or orientation is merely intended for convenience of description and is not intended in any way to limit the scope of the present inventions. Relative terms such as &#x201c;lower,&#x201d; &#x201c;upper,&#x201d; &#x201c;horizontal,&#x201d; &#x201c;vertical,&#x201d; &#x201c;above,&#x201d; &#x201c;below,&#x201d; &#x201c;up,&#x201d; &#x201c;down,&#x201d; &#x201c;left,&#x201d; &#x201c;right,&#x201d; &#x201c;top,&#x201d; &#x201c;bottom,&#x201d; &#x201c;front&#x201d; and &#x201c;rear&#x201d; as well as derivatives thereof (e.g., &#x201c;horizontally,&#x201d; &#x201c;downwardly,&#x201d; &#x201c;upwardly,&#x201d; etc.) should be construed to refer to the orientation as then described or as shown in the drawing under discussion. These relative terms are for convenience of description only and do not require a particular orientation unless explicitly indicated as such. The discussion herein describes and illustrates some possible non-limiting combinations of features that may exist alone or in other combinations of features. Furthermore, as used herein, the term &#x201c;or&#x201d; is to be interpreted as a logical operator that results in true whenever one or more of its operands are true. Furthermore, as used herein, the phrase &#x201c;based on&#x201d; is to be interpreted as meaning &#x201c;based at least in part on,&#x201d; and therefore is not limited to an interpretation of &#x201c;based entirely on.&#x201d;</p><p id="p-0035" num="0039">As used throughout, ranges are used as shorthand for describing each and every value that is within the range. Any value within the range can be selected as the terminus of the range. In addition, all references cited herein are hereby incorporated by referenced in their entireties. In the event of a conflict in a definition in the present disclosure and that of a cited reference, the present disclosure controls.</p><p id="p-0036" num="0040">In the following description, where block diagrams or circuits are shown and described, one of skill in the art will recognize that, for the sake of clarity, not all peripheral components or circuits are shown in the figures or described in the description. For example, common components such as memory devices and power sources may not be discussed herein, as their role would be easily understood by those of ordinary skill in the art. Further, the terms &#x201c;couple&#x201d; and &#x201c;operably couple&#x201d; can refer to a direct or indirect coupling of two components of a circuit.</p><p id="p-0037" num="0041">It is noted that for the sake of clarity and convenience in describing similar components or features, the same or similar reference numbers may be used herein across different embodiments or figures. This is not to imply that the components or features identified by a particular reference number are identical across each embodiment or figure, but only to suggest that the components or features are similar in general function or identity.</p><p id="p-0038" num="0042">Features of the present inventions may be implemented in software, hardware, firmware, or combinations thereof. The computer programs described herein are not limited to any particular embodiment, and may be implemented in an operating system, application program, foreground or background processes, driver, or any combination thereof. The computer programs may be executed on a single computer or server processor or multiple computer or server processors.</p><p id="p-0039" num="0043">Processors described herein may be any central processing unit (CPU), microprocessor, micro-controller, computational, or programmable device or circuit configured for executing computer program instructions (e.g., code). Various processors may be embodied in computer and/or server hardware of any suitable type (e.g., desktop, laptop, notebook, tablets, cellular phones, etc.) and may include all the usual ancillary components necessary to form a functional data processing device including without limitation a bus, software and data storage such as volatile and non-volatile memory, input/output devices, graphical user interfaces (GUIs), removable data storage, and wired and/or wireless communication interface devices including Wi-Fi, Bluetooth, LAN, etc.</p><p id="p-0040" num="0044">Computer-executable instructions or programs (e.g., software or code) and data described herein may be programmed into and tangibly embodied in a non-transitory computer-readable medium that is accessible to and retrievable by a respective processor as described herein which configures and directs the processor to perform the desired functions and processes by executing the instructions encoded in the medium. A device embodying a programmable processor configured to such non-transitory computer-executable instructions or programs may be referred to as a &#x201c;programmable device&#x201d;, or &#x201c;device&#x201d;, and multiple programmable devices in mutual communication may be referred to as a &#x201c;programmable system.&#x201d; It should be noted that non-transitory &#x201c;computer-readable medium&#x201d; as described herein may include, without limitation, any suitable volatile or non-volatile memory including random access memory (RAM) and various types thereof, read-only memory (ROM) and various types thereof, USB flash memory, and magnetic or optical data storage devices (e.g., internal/external hard disks, floppy discs, magnetic tape CD-ROM, DVD-ROM, optical disk, ZIP&#x2122; drive, Blu-ray disk, and others), which may be written to and/or read by a processor operably connected to the medium.</p><p id="p-0041" num="0045">In certain embodiments, the present inventions may be embodied in the form of computer-implemented processes and apparatuses such as processor-based data processing and communication systems or computer systems for practicing those processes. The present inventions may also be embodied in the form of software or computer program code embodied in a non-transitory computer-readable storage medium, which when loaded into and executed by the data processing and communications systems or computer systems, the computer program code segments configure the processor to create specific logic circuits configured for implementing the processes.</p><p id="p-0042" num="0046">The following discloses methods and systems for secure distribution of pre-provisioned secret keys in hardware devices required for many M2M (machine to machine), sensor network, and IoT systems based on pre-shared secret key symmetric encryption (AES, DES, IDEA, Rcx, Blowfish) protocols to the final device owner, user, or lessor through a multi-tiered hardware device supply chain including hardware device OEMs (providers), distributors/resellers, hardware device owners, network operators, owners of the data generated by hardware devices, and lessors of hardware devices.</p><heading id="h-0007" level="2">Database Providing Keys (FIG. <b>3</b>)</heading><p id="p-0043" num="0047"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a system <b>13</b> in which devices <b>118</b> are sold through a distributor <b>130</b> and the devices' <b>118</b> secret keys are provided to the customer using a database <b>140</b> associated with the distributor <b>130</b>, but to which the distributor has limited access. The database <b>140</b> is critical to enabling a more secure distribution of secret keys.</p><p id="p-0044" num="0048">In the exemplified embodiment, the silicon manufacturer <b>102</b> provides the un-provisioned IC/hardware <b>116</b> to the provider <b>104</b> (in this embodiment an OEM, though the invention is not so limited) (operation <b>122</b>). The OEM <b>104</b> has a database <b>110</b> that includes a device unique identifier (DUID) <b>112</b> and at least one secret key <b>114</b> for each hardware device. This data <b>112</b>, <b>114</b> is provided to the un-provisioned device <b>116</b> to cause device <b>118</b>. The at least one secret key <b>114</b> enables authentication of the hardware device.</p><p id="p-0045" num="0049">In operation <b>132</b>, rather than sending both the identifiers <b>112</b> and secret keys <b>114</b> to the distributor <b>130</b> in cleartext (un-encrypted) form, the OEM <b>104</b> only sends the identifiers <b>112</b> to the distributor <b>130</b>. In operation <b>136</b>, the OEM server <b>105</b> securely uploads both the unique identifiers <b>112</b> and the unencrypted secret keys <b>114</b> to the new database <b>140</b>, which may be associated with the distributor <b>130</b>. The data for the device may comprise a unique identifier and an unencrypted version of the at least one secret key for each of the hardware devices. Further, while the database <b>140</b> may be associated with the distributor, it may be configured such that the distributor does not have general access to the unencrypted secret keys forming part of the device data. By not having &#x201c;general access,&#x201d; only one or two administrators of the distributor have access to the unencrypted secret keys (e.g., cleartext access to the keys. The other representatives of the distributor only have access to the encrypted secret keys. The identifiers and secret keys are preferably uploaded using a TLS-protected IP connection.</p><p id="p-0046" num="0050">The distributor server <b>131</b> transmits to the provider server <b>105</b> orders for hardware devices, the distributor and provider being separate and distinct entities. The distributor <b>130</b> in turn receives orders from customers to purchase some portion of the hardware devices <b>118</b> stored by distributor <b>130</b>. In operation <b>138</b>, in response to the customer order, the distributor server <b>131</b> provides the database <b>140</b> (1) the unique identifiers for the hardware devices that form part of the customer-ordered portion, and (2) an associated customer order identifier for the order. The customer order identifier may be, for example, a customer order number, a hash function, or some other means for identifying the customer order. In further response to the customer order, in operation <b>134</b>, the distributor server sends a customer server <b>107</b> of the customer <b>106</b> the unique identifier for each of the hardware devices of the ordered portion. The unique identifiers may be sent in cleartext.</p><p id="p-0047" num="0051">In the exemplified embodiment, a representative of the customer logs into the database <b>140</b> from a customer representative network and provides, via a user interface <b>107</b>, order information for the ordered portion of the hardware devices (operation <b>142</b>). This order information may be, for example, one or more of each unique identifier for the hardware devices of the ordered portion, the customer order identifier, and/or a Hash, or some other information about the customer order.</p><p id="p-0048" num="0052">In response to the customer representative logging in and providing the order information, the database <b>140</b> provides the customer server <b>107</b> (or in other embodiments the customer representative network <b>108</b>) unencrypted versions of the at least one secret key (e.g., in cleartext) for each of the hardware devices of the ordered portion (operation <b>144</b>) to enable the customer representative network to authenticate the hardware devices of the ordered portion. In the exemplified embodiment, the customer server then registers the unique identifiers and secret keys (e.g., via CVS or email) with the customer representative network <b>108</b> (operation <b>146</b>). The exemplified network <b>108</b> has a database <b>109</b> for storing the unique identifiers <b>112</b> and secret keys <b>114</b>. The devices join the network <b>108</b> using the unique identifiers <b>112</b> and secret keys <b>114</b> and become authenticated devices <b>120</b>.</p><p id="p-0049" num="0053">It is noted that, for the sake of simplicity, <figref idref="DRAWINGS">FIG. <b>3</b></figref> and other figures refer to a single distributor server, provider server, and customer server. But in practice, each of these servers may comprise multiple processors in different locations. Further, while the above invention has been described as a method, it may instead be a system comprising the components discussed above.</p><p id="p-0050" num="0054">The embodiment of <figref idref="DRAWINGS">FIG. <b>3</b></figref> enables distributors/resellers to securely transfer the secure keys injected by the OEM into devices to a customer who purchases a specific device through the distributer/reseller. The distributor/reseller provides a secure electronic system as a service to enable OEMs to directly upload and temporarily store the secure keys for all of the devices they sell through said distributor in a method where the secret keys are protected and not generally available in cleartext to the distributors' employees processing orders. Further measures to protect the secret keys may include restricting access to the database <b>140</b> storing the secret keys via user account, secondary encryption of the secret keys including the option for the customer to provide their own public key to the distributor/reseller, and/or the generation cryptographically secure unique claim UUID (cUUID) that can be used to retrieve the secret key for a specific device. Methods can be used independently or in any combination to increase security. Customers who buy devices from the distributor will be provided a method to securely &#x201c;claim&#x201d; the secret keys for the specific hardware devices they purchase from the distributor via the secure electronic system. This process greatly improves the security of all devices and networks as the pre-provisioned secret key(s) stored in hardware devices is only exposed in cleartext to the actual end customer purchasing the hardware device. The secure electronic system allows the OEM to manufacture devices in advance and stock the distributor without knowing who the actual end customer will be. The customer can then use the hardware device secret keys to register the devices with either their network root of trust or with a network provider's root of trust.</p><p id="p-0051" num="0055">Note that while the disclosed embodiment shows only a single distributor <b>130</b>, the system <b>13</b> may include multiple distinct distributors each communicating with the same database <b>140</b> or with different databases, but otherwise carrying out the similar operations for providing secure authentication.</p><p id="p-0052" num="0000">Using cUUID (<figref idref="DRAWINGS">FIG. <b>4</b></figref>)</p><p id="p-0053" num="0056"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram of a system <b>14</b> similar to <figref idref="DRAWINGS">FIG. <b>3</b></figref> where devices are sold through a distributor, but where a cryptographically secure unique claim UUID (cUUID) is used to retrieve the secret key, the cUUID corresponding to the relevant unique identifiers for the order. Specifically, the system generates cryptographically secure unique claim UUID (cUUID) (e.g., by accepted methods such as CSPRNG and/or Hash functions). In operation <b>148</b>, rather that the distributor <b>130</b> providing the database <b>141</b> with the customer order identifier (as in operation <b>138</b>), the distributor <b>130</b> provides that database <b>141</b> with the cUUID. Optional generation of cUUID with salt (from customer) and pepper Hash function may be used to further increase security. In operation <b>152</b>, unlike operation <b>142</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the customer enters the cUUID (or provides salt that generates cUUID). In the exemplified embodiment, the other components and operations remain largely similar to <figref idref="DRAWINGS">FIG. <b>3</b></figref> and therefore are not repeated here.</p><heading id="h-0008" level="2">Database Provides Keys to Customer Representative Network (FIG. <b>5</b>)</heading><p id="p-0054" num="0057"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of another system <b>15</b> where devices are sold through a distributor <b>130</b>, but where the secret keys are provided from the database <b>141</b> to a customer representative network <b>108</b>. The system is similar to that of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, but instead of operation <b>144</b> where the database <b>141</b> provides the secret keys to the customer <b>106</b>, in operation <b>154</b> the database <b>141</b> provides the secret keys to the customer representative network <b>108</b>. This network <b>108</b> may comprise a customer-controlled server or a third party server of a third party distinct from the customer (e.g., from a network as a service (NaaS) provider). For example, the customer could be a retail company that is using a third party company for installing temperature sensors or other hardware devices in the store. The customer could provide the cUUID and, in response, the database <b>141</b> can provide the third party's network the secret keys to enable authentication. Multiple integrations may be supported.</p><p id="p-0055" num="0058">This system shows how direct API integration may be supported, with the network <b>108</b> further enhancing overall security. The customer <b>106</b> may have the electronic system automatically register the secret keys with the network provider the customer chooses. This further enhances the security of the devices and network as the secret key is never exposed by the customer in the process of claiming it from the distributors system and registering it with the customer's network provider. It further reduces the logistical effort needed by the customer to manually claim the secret keys and then register them with the network provider. In the exemplified embodiment, the other operations and their components remain largely similar to <figref idref="DRAWINGS">FIG. <b>3</b></figref> and therefore are not further discussed here.</p><heading id="h-0009" level="2">Combining Databases (FIG. <b>6</b>)</heading><p id="p-0056" num="0059"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of another system <b>16</b> where devices are sold through a distributor, but where the distributor <b>130</b> utilizes the provider's database <b>143</b> for storing the unique identifiers and secret keys. The system is similar to that shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, but instead of using database <b>141</b>, the distributor utilizes provider database <b>143</b> (this provider database <b>143</b> being a type of database associated with the distributor). In operation <b>154</b> (similar to operation <b>148</b>), the distributor <b>130</b> provides that database <b>143</b> with the cUUID. In operation <b>156</b> (similar to operation <b>152</b>), the customer enters the cUUID (or provides salt that generates cUUID). In operation <b>158</b> (similar to operation <b>144</b>), the database <b>143</b> provides the customer server <b>107</b> the secret keys (e.g., in cleartext, un-encrypted) and the unique identifiers, which are then in operation <b>146</b> registered with the network <b>108</b>.</p><p id="p-0057" num="0060">This embodiment demonstrates how the invention can support direct API integration with a provider/OEM who chooses to keep secret keys in their own provider/OEM server. The distributor provides the critical function of connecting specific devices (DUIDs) to the customers' ID (optionally generating the cUUID). In this embodiment, the end customers purchasing hardware devices from a distributor or reseller can claim the secret keys for the purchased devices directly from the hardware device provider's/OEM's secure database of device-specific secure keys via the distributor providing, for example, a unique claim value (e.g., order number or token) or a unique Hash function derived for each device purchased.</p><heading id="h-0010" level="2">Providing Keys to Customer Representative Network (e.g., Third Party) (FIG. <b>7</b>)</heading><p id="p-0058" num="0061"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram of a system <b>17</b> similar to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, but where the secret keys are sent not to the customer <b>106</b>, but to a customer representative network <b>108</b> that may be a network of a third party. Thus, the main difference from <figref idref="DRAWINGS">FIG. <b>6</b></figref> is that in operation <b>158</b> the database <b>143</b> provides the secret keys to the customer representative network <b>108</b>. In this sense, the exemplified system <b>17</b> is similar to that of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and operation <b>158</b> is similar to <figref idref="DRAWINGS">FIG. <b>5</b></figref>'s operation <b>154</b>. As with <figref idref="DRAWINGS">FIG. <b>5</b></figref>, here the network <b>108</b> may comprise a customer-controlled server or a third party server of a third party distinct from the customer (e.g., from a network as a service (NaaS) provider). The benefits of providing the keys directly to the network <b>108</b> are discussed with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref> and would also apply here.</p><heading id="h-0011" level="2">Customer Leases Devices to End User (FIG. <b>8</b>)</heading><p id="p-0059" num="0062"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram of another system <b>18</b> where devices are sold through a distributor <b>130</b>, but where the customer <b>106</b> includes a leasing company <b>160</b> that leases the devices to an end user <b>162</b>. The end user does not receive the secret keys, and the customer has the ability to remotely shut down any one of the ordered portion of the hardware devices. The exemplified system <b>18</b> is similar to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, but for the customer leasing company <b>160</b> and the end user <b>162</b>.</p><p id="p-0060" num="0063">The exemplified system <b>18</b> shows how a lessor of hardware devices can maintain the privacy of the secret keys for the devices while enabling a lessee to register the hardware device with a network root of trust <b>108</b> and access the data and functionality of the device for term of the lease. Further, the lessor has the ability to revoke the privileges of the lessee by disabling the access of secret keys to the root of trust network <b>108</b>, by de-registering the device from the root of trust or by deleting the secret keys from the root of trust. This innovation is critical to the ability of networks based on shared secret key security schemes to maintain integrity by protecting the hardware device secret keys and not exposing them to lessees. Without such a system the lessor would have to provide the hardware device's secret keys to the lessee to enable them to use the device. Once the secret keys are exposed to the first lessee, it permanently compromises the integrity of the device, and potentially the networks they are used on, if the device is re-leased to another lessee in the future. There is no way to guarantee that a prior lessee properly protected the secret keys of the device they lease. The proposed process protects the hardware devices secret keys across multiple lessees.</p><p id="p-0061" num="0064">An alternative approach to the proposed process would be to reprogram the hardware devices with new secret keys after they are reclaimed at the end of a lease. Although possible, this approach is not practical due to the lack of a standard reprogramming interface on hardware devices, costs associated with reprogramming, and the security risk enabling device reprograming (re-keying) inherently exposes.</p><p id="p-0062" num="0065">It is noted that the lessor does not need to buy devices through a distributor or reseller for this model to work. The lessor may buy devices directly from the provider/OEM. The lessor may operate its own secret key database. Alternatively, the distributor/reseller may operate the secret key database as a service.</p><heading id="h-0012" level="2">Multiple Lessees (FIG. <b>9</b>)</heading><p id="p-0063" num="0066"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram of a system <b>19</b> enabling multiple lessees <b>176</b>, <b>178</b> of a single hardware device <b>172</b>. In this embodiment, the hardware device <b>172</b> is a PR sensor in a retail store, though the invention is not limited to a particular type or hardware device or location. The sensor <b>172</b> has multiple unique secure key sets <b>174</b>. The sensor <b>172</b> is configured to programmatically sequence through its different personalities based on the terms of the lease agreements.</p><p id="p-0064" num="0067">In the exemplified embodiment, the device <b>172</b> deliver secret keys to the customer/lessor <b>180</b> (operation <b>182</b>). The device <b>172</b> also delivers data to the relevant networks <b>182</b>, <b>184</b> (operations <b>186</b>, <b>188</b>), which in turn provide data to the relevant lessees <b>176</b>, <b>178</b> (operations <b>192</b>, <b>193</b>). Lessee <b>176</b> is assigned the first secret key set <b>174</b>, and lessee <b>178</b> is assigned the second secret key set <b>175</b>. The lessor <b>180</b> provides the databases <b>183</b>, <b>185</b> of the respective networks <b>182</b>, <b>184</b> the secret keys and a control and lease profile for the lessees. In operations <b>194</b>, <b>195</b>, the lessees <b>176</b>, <b>178</b> claims the device from the lessor <b>180</b>.</p><p id="p-0065" num="0068">For example, the PIR sensor <b>172</b> may be a motion detector in a commercial retail store and be leased to a company (lessee <b>176</b>) providing a people counting data analytics service during the hours the store is open. The motion detector <b>172</b> may also be leased to a company (lessee <b>178</b>) providing a security monitoring service during the hours the building is closed.</p><p id="p-0066" num="0069">Alternatively, a temperature sensor in a freezer for food storage could be leased to the HVAC servicing company and to a company using the temperature data for FDA compliance logs. Since each lessee has their own unique key set, the hardware device may be concurrently authenticated on multiple networks corresponding to each lessee's preference.</p><p id="p-0067" num="0070">The temperature sensor could perform two completely independent temperature measurements and data transmissions per specific lease terms that was based on 100% ownership of the sensors resources based on a time division multiplex approach. Alternatively, the lease may provide the lessee shared access to the sensor data and only a unique transmission of the data. For example, a temperature sensor may perform one temperature measurement per hour that is sent via multiple transmissions to each lessee using their unique secret key sets and sending data to each lessees preferred network.</p><p id="p-0068" num="0071">While the inventions have been described with respect to specific examples including presently preferred modes of carrying out the inventions, those skilled in the art will appreciate that there are numerous variations and permutations of the above described systems and techniques. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope of the present inventions. Thus, the spirit and scope of the inventions should be construed broadly as set forth in the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for secure distribution of secret keys for hardware devices, the method comprising:<claim-text>a) a distributor server of a distributor transmitting to a provider server of a provider an order for hardware devices, wherein the hardware devices have unique identifiers, and wherein each respective hardware device has (i) a corresponding unique identifier of the unique identifiers and (ii) at least one secret key enabling authentication of the respective hardware device;</claim-text><claim-text>b) receiving at a database associated with the distributor the unique identifiers and unencrypted keys, wherein for each of the respective hardware devices, the database receives the corresponding unique identifier and an unencrypted key of the unencrypted keys, the unencrypted key being an unencrypted version of the at least one secret key for the respective hardware device;</claim-text><claim-text>c) in response to an order received by the distributor from a customer for a portion of the hardware devices:<claim-text>i) the distributor server providing the database (1) the unique identifiers corresponding to the hardware devices of the ordered portion, and (2) an associated customer order identifier for the order; and</claim-text><claim-text>ii) the distributor server providing a customer server the unique identifiers corresponding to the hardware devices of the ordered portion; and</claim-text></claim-text><claim-text>d) in response to a representative of the customer providing order information for the ordered portion of the hardware devices, the database providing the customer server or a customer representative network the unencrypted keys for the hardware devices of the ordered portion to enable authentication of the hardware devices of the ordered portion.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein, in step d), the database provides the customer server the unencrypted keys for the hardware devices of the ordered portion, which are subsequently provided to the customer representative network.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein, in step d), the database provides the customer representative network the unencrypted keys for the hardware device of the ordered portion.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the order information is at least one of:<claim-text>each unique identifier for the hardware devices of the ordered portion;</claim-text><claim-text>the customer order identifier; or</claim-text><claim-text>a cryptographically secure unique claim UUID (cUUID).</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein the customer order identifier is a customer order number or a Hash function.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the customer representative network is a network of a third party separate and distinct from the customer.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein steps a) to d) are carried out for each of multiple distinct distributors each transmitting distinct orders to the provider.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the customer leases the ordered portion of the hardware devices to an end user that does not receive the unencrypted keys, the customer having the ability to remotely shut down any one of the ordered portion of the hardware devices.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein only one user associated with the distributor has administrative access to the database to access the unencrypted keys for the hardware devices.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein at least one of the distributor server, the provider server, or the customer server comprises multiple processors.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the database associated with the distributor is a database operated by the provider.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. A system for secure distribution of secret keys for hardware devices, the system comprising:<claim-text>a provider server of a provider;</claim-text><claim-text>a distributor server of a distributor, the distributor server configured to transmit to the provider server an order for hardware devices,<claim-text>wherein the hardware devices have unique identifiers, and wherein each respective hardware device has (i) a corresponding unique identifier of the unique identifiers and (ii) at least one secret key enabling authentication of the respective hardware device; and</claim-text></claim-text><claim-text>a database associated with the distributor, the database configured to receive the unique identifiers and unencrypted keys, wherein for each of the respective hardware devices, the database receives the corresponding unique identifier and an unencrypted key of the unencrypted keys, the unencrypted key being an unencrypted version of the at least one secret key for the respective hardware device;</claim-text><claim-text>wherein the distributor server is further configured to, in response to an order received by the distributor from a customer for a portion of the hardware devices:<claim-text>provide the database (1) the unique identifiers corresponding to the hardware devices that of the ordered portion, and (2) an associated customer order identifier for the order; and</claim-text><claim-text>provide a customer server the unique identifiers corresponding to the hardware devices of the ordered portion;</claim-text></claim-text><claim-text>wherein in response to a representative of the customer providing order information for the ordered portion of the hardware devices, the database is configured to provide the customer server or a customer representative network the unencrypted keys for the hardware devices of the ordered portion to enable authentication of the hardware devices of the ordered portion.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the database is configured to provide the customer server the unencrypted keys for the hardware devices of the ordered portion, and the customer server is configured to subsequently provide the at least one secret key for each of the hardware devices of the ordered portion to the customer representative network.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the database provides the customer representative network the unencrypted keys for the hardware device of the ordered portion.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the order information is at least one of:<claim-text>each unique identifier for the hardware devices of the ordered portion;</claim-text><claim-text>the customer order identifier; or</claim-text><claim-text>a Hash function.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the customer order identifier is a customer order number or a Hash function.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the customer representative network is a network of a third party separate and distinct from the customer.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the distributor forms part of a plurality of distinct distributors, each having its one server for transmitting distinct orders to the provider server.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the customer leases the ordered portion of the hardware devices to an end user that does not receive the unencrypted keys, the customer having the ability to remotely shut down any one of the ordered portion of the hardware devices.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein only one user associated with the distributor has administrative access to the database to access the unencrypted keys for the hardware devices.</claim-text></claim></claims></us-patent-application>