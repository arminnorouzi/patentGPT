<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004412A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004412</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363634</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>455</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>1</main-group><subgroup>3203</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>45558</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>17</main-group><subgroup>18</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>1</main-group><subgroup>3203</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45595</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">QUANTIFYING SERVICE CHAIN FUNCTIONS OF VIRTUAL MACHINES FOR CROSS INTERFERENCES</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>International Business Machines Corporation</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Bharti</last-name><first-name>Harish</first-name><address><city>PUNE</city><country>IN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Saxena</last-name><first-name>Rajesh Kumar</first-name><address><city>Maharashtra</city><country>IN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Sukhija</last-name><first-name>Sandeep</first-name><address><city>Rajasthan</city><country>IN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Bajaj</last-name><first-name>Deepak</first-name><address><city>Leicester</city><country>GB</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system, method, and computer program product for determining &#x201c;impact quantify measure-based&#x201d; service chains cross interferences. The method includes quantifying the impact of one service chain on another service chain and to what extent so as facilitate making an informed decision whether to garner more resources and to fine tune the computational services for the service chain. There is further provided beforehand a certainty of required computational resources and the providing the impact or interferences details of one service chain on another helps in minimization of service quality degradation failures. The framework further runs a method step to apply a mutual convexity method on service chains to aid in forecasting cross interferences between chains and includes a step wherein, interferences between both dependent and independent service chain is calculated and provided. The provided interferences calculated result set will ensure while provisioning of virtual network functions doesn't consume energy excessively.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="204.55mm" wi="150.03mm" file="US20230004412A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="218.86mm" wi="152.06mm" file="US20230004412A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="105.41mm" wi="117.18mm" file="US20230004412A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="224.37mm" wi="159.77mm" orientation="landscape" file="US20230004412A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="198.29mm" wi="148.67mm" orientation="landscape" file="US20230004412A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="232.24mm" wi="154.18mm" file="US20230004412A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="133.18mm" wi="155.79mm" file="US20230004412A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="171.87mm" wi="157.99mm" orientation="landscape" file="US20230004412A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="204.47mm" wi="155.45mm" orientation="landscape" file="US20230004412A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Network function virtualization (NFV) is an evolving powerful technique which decouples network functions from the hardware. It allows virtualization of various network functions. Some of the connected network functions defines a service chain, which may be a sequence of network virtualized functions including, e.g., a firewall, an intrusion detection system (IDS), a load balancer, a network optimizer, an address translation component, a proxy, and many others.</p><p id="p-0003" num="0002">These virtual network functions are functions running as virtual machines on servers which are organised as a chain through service chain function. NFV concept has significantly improved the flexibility and agility. But the flexibility of deployment of service chain functions not only increases network configuration complexity but also leads to the uncertainty of allocation of network resources, i.e., optimization of resources needs to be taken care.</p><p id="p-0004" num="0003">During the build and deployment of a service chain, it is provisioned on the service platform (Service Servers). When service chains are developed on a virtualized network, e.g., a 5G Core (5GC), it is built and provisioned on the same service platform (service servers). These services may or may not be dependent on each other during an event. Now there is a high probability of uneven computational resource allocation to the service chain which will lead to the interferences between service chains. This interference may lead to more service quality degradation failures.</p><heading id="h-0002" level="1">BRIEF SUMMARY</heading><p id="p-0005" num="0004">A system, method, and computer program product described herein provide a framework to quantify the impact of a one provisioned service chain on another service chain in a virtualized network.</p><p id="p-0006" num="0005">The provided framework to quantify the impact of a provisioned service chain on another service chain is used to assist in making an informed decision whether to garner more resources and/or to fine tune the computational services for the service chain in the virtualized network in order to reduce performance degradation of the virtualized network.</p><p id="p-0007" num="0006">A system, method, and computer program product described herein provide a framework to quantify the impact of a service chain on another service chain by generating and applying a Mutual Convexity method on the service chain to assist in forecasting the cross interferences of the service chain.</p><p id="p-0008" num="0007">In an exemplary embodiment, the forecasting of the cross interferences of the service chain assists in determining whether to spin up more servers which will fine tune the computational requirements of service chain.</p><p id="p-0009" num="0008">In an aspect of the present disclosure, there is provided a computer-implemented method comprising: receiving, at one or more hardware processors, event data generated by at least two service chains provisioned to provide services on computing devices of a virtualized network; generating, at one or more hardware processors, a joint probability function based on co-occurring event data generated by the at least two service chains; determining, based on the generated joint probability function, a cross-interference impact of a first service chain upon a second service chain of the provisioned at least two service chains; and based on the determined cross-interference impact, modifying, using the one or more hardware processors, a provisioned resource on the computing devices to avoid a service quality degradation.</p><p id="p-0010" num="0009">In a further aspect, there is provided a system for managing resources of a service chain comprising: at least one processor comprising hardware, the at least one processor configured to: receive event data generated by at least two service chains provisioned to provide services on computing devices of a virtualized network; generate a joint probability function based on co-occurring event data generated by the at least two service chains; determine, based on the generated joint probability function, a cross-interference impact of a first service chain upon a second service chain of the provisioned at least two service chains; and based on the determined cross-interference impact, modify a provisioned resource on the computing devices to avoid a service quality degradation.</p><p id="p-0011" num="0010">In some aspects, a computer readable storage medium is disclosed that includes instructions that, when executed by at least one processor including hardware, configures the at least one processor to: receive event data generated by at least two service chains provisioned to provide services on computing devices of a virtualized network; generate a joint probability function based on co-occurring event data generated by the at least two service chains; determine, based on the generated joint probability function, a cross-interference impact of a first service chain upon a second service chain of the provisioned at least two service chains; and based on the determined cross-interference impact, modify a provisioned resource on the computing devices to avoid a service quality degradation.</p><p id="p-0012" num="0011">In aspects of the present disclosure, apparatus, systems, and computer program products in accordance with the above aspect may also be provided. Any of the above aspects may be combined without departing from the scope of the present disclosure.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0013" num="0012">The details of the present disclosure, both as to its structure and operation, can be understood by referring to the accompanying drawings, in which like reference numbers and designations refer to like elements.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a system diagram illustrating an example 5G core that provisions network slices to feature service chains initiated and managed through centralized hosts of Service Servers that forms a part of 5GC in accordance with a disclosed embodiment;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts a computing node running services on the 5G core to performs a Mutual Convexity method according to an embodiment herein;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an architectural framework to identify the service chain interferences on a 5G core;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a block diagram of an embodiment of a 5G core system architecture showing how various network functions interact with each other including an overlay of the MC method in an embodiment;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an exemplary method run at a computer system to determine the mutual convexity values according to embodiments herein;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example computing system in which processes involved in the system, method, and computer program product described herein may be implemented in accordance with the present invention;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a cloud computing environment according to an embodiment of the present invention; and</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts abstraction model layers according to an embodiment of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0021">The aspects disclosed herein provide solutions to minimize excessive computation resource utilization in provisioning of service chains in a network slice.</p><p id="p-0023" num="0022">Network service chains refers to a series (toolchains) of functions stung together to form a composite service that an entity can use. The service chain (SC) is a sequence of software-defined networking capabilities to create a chain of connected virtualized network services, e.g., such as the open system interconnect (OSI) L4-7 network functions including, but not limited to: load balancing, web application firewalls, service discovery, network address translation (NAT), intrusion protection, proxies, and monitoring for network layers within the OSI model.</p><p id="p-0024" num="0023">Typically, the service chain is a sequence of virtualized network functions (VNFs) through which end-to-end data streams pass and which are intended to replace a chain of premises equipment.</p><p id="p-0025" num="0024">Network operators use these service chains to set up suites or catalogs of pathways for traffic to travel through and automate the way virtual network connections can be set up to handle traffic flows for connected services. Any one path can consist of any combination of connected services depending on the traffic's requirements. Different traffic requirements might be more security, lower latency, or an overall high quality of service (QoS).</p><p id="p-0026" num="0025">As referred to herein, &#x201c;5G&#x201d; is the 5th generation of mobile networks and 5G Core (5GC) is the component of a 5G mobile network that functions to establish reliable, secure connectivity to the network for end users and provide access to services. Such 5GC is configured to handle a wide variety of essential functions in the mobile network, e.g., connectivity and mobility management, authentication and authorization, subscriber data management and policy management, etc.. Such 5G Core network functions are completely software-based and they are agnostic to any underlying cloud infrastructure, allowing higher deployment agility and flexibility.</p><p id="p-0027" num="0026">5G network slicing is the network architecture that enables the multiplexing of virtualized and independent logical networks on the same physical network infrastructure. Each network slice is an isolated end-to-end network between a source and a consumer tailored to fulfil diverse requirements requested by a particular application.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts an example 5G core <b>100</b> that enables the network slice to feature service chains, e.g., service chains SC<sub>1</sub>, SC<sub>2</sub>, . . . , SC<sub>8</sub>. These service chains are initiated and managed through a central host of service servers that form a part of 5GC. For example, a service server <b>102</b> hosts service chains SC<sub>1 </sub>and SC<sub>4</sub>, a service server <b>104</b> hosts SC<sub>3 </sub>and SC<sub>7</sub>, a service server <b>106</b> hosts SC<sub>6 </sub>and SC<sub>8</sub>, and a service server <b>108</b> hosts SC<sub>2 </sub>and SC<sub>5</sub>. All of these Service Chains (represented in <figref idref="DRAWINGS">FIG. <b>1</b></figref> as SC1 to SC8, but there can be many more provisioned), are an integral part of 5G Core (5GC). 5GC provisions these service chains internally through virtualized servers and each server could by design host more than one service chain(s), e.g., Server <b>102</b> hosting SC1, SC4, Server <b>104</b> hosting SC3, SC7, etc. The information technology (IT) processing is internal to the 5GC. Given the randomness of the bandwidth and computational demands in 5GC, the computational power is uneven across the core. For example, the implementation of a network function should not consume energy excessively. To address this, in an embodiment, the 5GC performs applying a Mutual Convexity method <b>150</b> on the service chains for use in forecasting cross interferences between two service chains including independent service chains <b>112</b> and dependent service chains <b>114</b>. A calculated interferences set <b>175</b> results that is used to help forecast interferences between service chains, ensures that while provisioning of virtual network functions on dependent service chains and independent service chains, excess energy is not consumed.</p><p id="p-0029" num="0028">More particularly, in an embodiment as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a computing node running services <b>110</b> on the 5G core <b>100</b> performs the Mutual Convexity method <b>150</b> which is a service configured to: monitor <b>125</b> the provisioned service chains <b>105</b>, identify any interferences, and responsively determine a value &#x201c;&#x3be;&#x201d; <b>155</b> quantifying an impact of one provisioned SC, e.g., SC<sub>1</sub>, upon another SC, e.g., SC<sub>2 </sub>and to what extent. The 5GC performs applying the Mutual Convexity value <b>155</b> on the service chain for use in forecasting cross interferences between two service chains. The calculated interferences result set is used to assist in forecasting interferences between service chains, e.g., ensure that while provisioning of virtual network functions on dependent service chains and independent service chains, excess energy is not consumed.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an example framework <b>300</b> to identify the service chain interferences on a 5G core. In the framework <b>300</b>, there is depicted example provisioned service chains, SC<sub>1 </sub><b>302</b>, SC<sub>2 </sub><b>304</b>, SC<sub>3 </sub><b>306</b> each implementing a sequence of virtual functions (VFs) intended to replace a chain of premises equipment. The service chains SC!-SC<sub>3 </sub>are each configured for network slice communications on the 5G core, e.g., for moving encrypted traffic between a source <b>301</b> and a consumer entity <b>321</b>. Source <b>301</b> refers to any entity that is requesting the specific service, e.g., an application that wants a specific service to complete its task, and a consumer <b>321</b> is necessarily a piece of software that provides the specific information or does a specific work of the requested services.</p><p id="p-0031" num="0030">In the example framework shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, virtualized function VF1 <b>311</b> represents a routing enabler providing a virtualized function for the service chains <b>302</b>, <b>304</b> to route packets so that the traffic moves to the right destination; VF2 <b>313</b> represents an encryption and security device that provides virtualized functions for multiple security-based utilities (features), e.g., encryption, redacting, key management, etc. for the service chain <b>302</b>; VF3 <b>315</b> represents a firewall and provides a virtualized function for the service chains <b>304</b>, <b>306</b> enabling a configuration of rules such as what traffic can be moved to which part of the network; and VF4 <b>317</b> represents a virtualized function for NAT (Network Address Translation) that allows the hiding of the source of the traffic so that it can be mobilized to parts of network without the destination being aware of the source(s) in the service chains <b>304</b>, <b>306</b>. Using these VFs, several services that use them in combinations comprise the illustrative service chains including: e.g., SC<sub>1</sub>&#x2014;a service chain configured for moving encrypted traffic from a source <b>301</b> to the consumer <b>321</b> of this traffic; SC<sub>2</sub>&#x2014;a service chain configured for moving specific traffic (one that is allowed by the firewall) without encryption to the consumer such that the source is anonymized; and SC<sub>3</sub>&#x2014;a service chain configured for moving specific traffic (one that is allowed by the firewall) without encryption to the consumer <b>321</b> such that the source is anonymized. This is thought to be done directly from a known node within the network (e.g., referred to as a bastion node) and thus does not need routing provided from VF1.</p><p id="p-0032" num="0031">As further shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the vertical lines <b>330</b> such as lines <b>332</b> between SC1 and SC3 and lines <b>335</b> between SC1 and SC2 represent the determined service chain &#x201c;interferences&#x201d;. These interferences <b>330</b> form the corresponding necessary constraint in evaluating the network. As an example, the 5GC configures the SC<sub>1 </sub>as a service that is providing a location data to the consuming application <b>321</b> and SC<sub>2 </sub>is requesting a (consumer) application to execute a code and provide update on certain data about the source <b>301</b>. In such a case, if there is a &#x201c;unsure&#x201d; data that lands on SC<sub>1</sub>, it might require more resources. If these resources are &#x201c;shared&#x201d; with another service chain (for this consideration, e.g., SC<sub>2</sub>) then SC<sub>2 </sub>will have to wait more than expected before it can see the execution through.</p><p id="p-0033" num="0032">As further shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a computing node <b>350</b> of the 5G core receives data associated with events generated by each service chain SC<sub>1</sub>, SC<sub>2</sub>, SC<sub>3</sub>. As an example, an &#x201c;event&#x201d; is a determination of an instance in time or as an eventuality when the interference is established. For example, when SC<sub>1 </sub>encounters &#x201c;unsure&#x201d; data that requires more resources to process and these resources allocated are shared with SC<sub>2</sub>&#x2014;this results in creating an event when the normal execution of SC<sub>2 </sub>can be hindered (represented by the probability).</p><p id="p-0034" num="0033">This received events data <b>125</b> is input to the Mutual Convexity method <b>150</b> where the data is processed to determine a value <b>155</b> quantifying a cross-interferences impact <b>175</b> of a provisioned (dependent or independent) service chain, e.g., between S<sub>1 </sub>and S<sub>2</sub>, S<sub>2 </sub>and S<sub>3 </sub>or S<sub>1 </sub>and S<sub>3</sub>. The quantified cross-interferences impact <b>175</b> is used to minimize service quality degradation failures or alternatively is used to optimize 5GC virtual network function(s) resources.</p><p id="p-0035" num="0034">In an embodiment, one more software program modules run code to configure an additional service employed (deployed) by the 5GC to run methods having access to the resource provisioning of the service chains SC<sub>1</sub>-SC<sub>3 </sub>of 5GC. That is, as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the mutual convexity algorithm <b>150</b> is run in a service that is a part of the 5GC and will reside as a code on the 5GC virtualized server. One module in executes code running the Mutual Convexity (MC) algorithm and is triggered to run responsive to a new resource being allocated to a particular service chain, as in the example, when SC1 encounters &#x201c;unsure&#x201d; data that requires more resources to process.</p><p id="p-0036" num="0035">With reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, there is depicted a block diagram of an embodiment of a 5G core system architecture <b>400</b> showing how various network functions interact with each other including an overlay of the MC method <b>150</b>. The 5G core system architecture supports data connectivity using network function virtualization and software defined networking.</p><p id="p-0037" num="0036">In the 5G architecture, procedures are defined as services, and <figref idref="DRAWINGS">FIG. <b>4</b></figref> shows the architecture using a service-based representation and a reference point representation. The service-based representations are shown by referencing applicable network functions (e.g., Nnssf, Nnef, Nnrf, etc.), whereas reference point representations are shown as point-to-point references (e.g., N1, N2, N4). The 5G System architecture <b>400</b> includes the following network functions (NF): Authentication Server Function (AUSF), Access and Mobility Management Function (AMF), Data Network (DN), Network Exposure Function (NEF), Network Repository Function (NRF), Network Slice Selection Function (NSSF), Policy Control Function (PCF), Session Management Function (SMF), Unified Data Management (UDM), User Plane Function (UPF) <b>475</b> (also referred to as user plane <b>475</b>), Application Function (AF), User Equipment (UE), and (Radio) Access Network ((R)AN), which are described, for example, in &#x201c;5G; System Architecture for the 5G System,&#x201d; ETSI TS 123 501 version 15.3.0, dated September 2018, and published by the European Telecommunications Standards Institute.</p><p id="p-0038" num="0037">The configuration shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a Control-/User Plane Separation (CUPS) architecture that has a control plane <b>455</b> that carries the signaling traffic and a user plane <b>475</b> that carries the network user traffic. The configuration shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> also includes an authentication server function (AUSF), a unified data management (UDM), an SMF, (e.g., in communication with a data network (DN)), policy control functions (PCFs), and authorization functions (AFs). In addition, the illustrated configuration includes other functions or entities not displayed within the figure, or may not include one or more of the functions or entities shown. Various interfaces may be established between the different entities in the illustrated embodiment. The interfaces may be denoted by N numbers, and sometimes may be called communication links. Such interfaces may refer to a communication link between network entities, a packet scheme, data permissions allowed between the entities, other features of the communication links, or combinations thereof.</p><p id="p-0039" num="0038">The AUSF provides authentication services for UEs. For example, AUSF initiate authentications of a UE and provides network attached storage (NAS) security functions for a UE based on a request from AMF over communication link N1. In some cases, the authentication and security function may be based on information stored in an entity (e.g., a UDM). The entity, (e.g., a UDM) may support an authentication credential repository and processing function (ARPF) that stores the long-term security credentials used in authentication. The AUSF retrieve information from the entity (e.g., UDM) over a communication link.</p><p id="p-0040" num="0039">The SMF provides session management services for UE. Specifically, SMF establishes, modifies, and releases sessions (or bearers) for communication between UE and DN. For example, SMF may maintain a tunnel for communication between UPF and an access network (AN) node. In addition, SMF allocates and manages IP addresses for the UE, select and control user plane functions, configure traffic steering at UPF to route traffic to proper destinations, terminate SM parts of NAS messages, provide roaming functionality, etc.</p><p id="p-0041" num="0040">The UPF include functionality for serving as the point of interconnect to DN for an external PDU session. The UPF routes and forwards packets to and from DN, inspect packets and enforce policy rules in the user plane <b>475</b>, report traffic usage, handle quality of service (QoS) for user plane packets, verify uplink traffic, etc. The PCF supports a unified policy framework to govern the behavior of the network. Specifically, the PCF provides policy rules to control plane <b>455</b> functions to enforce them. In some cases, the PCF retrieves subscription information from a subscription repository at a UDM. The AF supports services for authorizing a UE for access to a network.</p><p id="p-0042" num="0041">The PCF manages policies for the various UEs of the wireless communications system architecture. The core network communicates policies to UEs in the wireless communications system architecture to improve the quality of communication links and improve the quality of service. The PCF may interact with a number of other functions (e.g., AMF and SMF) in a wireless communications system architecture.</p><p id="p-0043" num="0042">The AMF is configured to provide policy information from the PCF to the UEs. The PCF includes such policy information stored on memory or the like. The policy information may be communicated between the PCF and the AMF via a network interface or a communication link. In some examples, the network interface is an Ni interface. The policy information includes access network discovery and selection policy, route selection policies, a Session and Service Continuity (SSC) mode selection policy, a network slice selection policy, a Data Network Name (DNN) selection policy, a non-seamless offload policy, other policies or combinations thereof. The access network discovery and selection policy is used by the UE for selecting non-3GPP accesses and for deciding how to route traffic between the selected 3rd Generation Partnership Project (3GPP) and non-3GPP accesses. The route selection policies are used by the UE to determine how to route outgoing traffic. Traffic can be routed to an established Protocol Data Unit (PDU) session, can be offloaded to non-3GPP access outside a PDU session, or can trigger the establishment of a new PDU session. In some examples, the route selection policies may include the SSC mode selection policy, the network slice selection policy, the DNN selection policy, and/or the non-seamless offload policy.</p><p id="p-0044" num="0043">The SSC Mode Selection Policy (SSCMSP) is used by the UE to associate UE applications with SSC modes and to determine the PDU session which this traffic should be routed to. It is also used to determine when a new PDU session should be requested with a new SSC mode. The network slice selection policy (NSSP) is used by the UE to associate UE applications with SM-NSSAIs and to determine the PDU session which this traffic should be routed to. It is also used to determine when a new PDU session should be requested with a new SM-NSSAI. The DNN Selection Policy is used by the UE to associate UE traffic with one or more DNNs and to determine the PDU session which this traffic should be routed to. It may also be used to determine when a PDU session should be requested to a new DNN. It may also indicate the access type (3GPP or non-3GPP) on which a PDU session to a certain DNN should be requested. The non-seamless offload policy may be used by the UE to determine which traffic should be non-seamlessly offloaded to non-3GPP access (e.g., outside of a PDU session).</p><p id="p-0045" num="0044">In some wireless systems (e.g., a 5G wireless system), a UE accesses a DN to exchange data packets using a PDU session. The PDU session provides a PDU connectivity service, which supports the transmission of one or more PDUs between UE and the DN. An association between UE and the DN in a PDU session uses internet protocol (IP) or Ethernet, or the association is unstructured. In some cases, DN is an example of a local DN, central DN, public land mobile networks (PLMNs), etc.</p><p id="p-0046" num="0045">As illustrated the different functions of the core network <b>400</b> is virtualized to support a more flexible architecture. That is, the different functions described above may be implemented in software. In such cases, a UE communicates with DN, SMF, PCF, etc. via the N3 communication link between RAN and UPF. The N3 communication link is a data connection for the UE.</p><p id="p-0047" num="0046">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the MC service running the MC algorithm <b>150</b> that is a part of the 5GC uses <b>450</b> the 5GC core components as follows: The NSSF (Network Slice Selection Function) is used to identify which network slice will be allocated to which virtualized server. This is also governed by the PCF&#x2014;Policy Control Function. The allocated resources will be updated in the NRF&#x2014;Network Repository Function. Once the resources are locked in, the sessions will be updated accordingly in the SMF&#x2014;Session Management Function. The Alerts that will be generated are created in the NEF&#x2014;Network Exposure function.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts a mutual convexity computation method <b>500</b> run at the 5GC MC service to identify the dependent and/or independent service chain interferences. At <b>502</b>, a first step is to receive data monitored from 5G core servers that provide network slice functions provisioning service chains, e.g., service chains SC<sub>1 </sub>and SC<sub>2</sub>.</p><p id="p-0049" num="0048">Based on the two service chains events received, there is obtained two discrete random variables (e.g., use of an SC resource). For two discrete random variables X and Yt the probability distribution functions are p(x) and p(y) respectively. At <b>506</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there is computed the joint probability of events x and y occurring at the same time is p(x, y), i.e., the joint event probability distribution, or the probability that the event will be fired that can cause the interference is represented by a form of Shannon's entropy formulation and is the entropy H(x) defined according to equation 1) as follows:</p><p id="p-0050" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>H</i>(<i>x</i>)=&#x2212;&#x3a3;<sub>x</sub><i>p</i>(<i>x</i>)log <i>p</i>(<i>x</i>) &#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0051" num="0000">wherein entropy H(x) is a measure of the information content of a random variable.</p><p id="p-0052" num="0049">The MC method is triggered at the receipt of a detected event, however, as there is information asymmetry (referred as entropy in equation 1), there is only probabilistic surety that this will cause interference. What remains unknown is how this will play out&#x2014;e.g., build a significant disruption of execution plan for SC<sub>1 </sub>or SC<sub>2</sub>. Thus, using the SMF (Session Management Function) MC will be able to update the joint probability value. This value is used to ascertain the convexity for individual chains as described herein with respect to equations 5) and 6).</p><p id="p-0053" num="0050">Supposing two service chains which generate events: then at <b>512</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there is generated a convexity rate that is defined as the amount of additional information required to represent the value of the next observation of one of the service chains, e.g., h<sub>1</sub>, h<sub>2 </sub>as follows:</p><p id="p-0054" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>h</i><sub>1</sub>=&#x2212;&#x3a3;<sub>x</sub><sub><sub2>n+1</sub2></sub><i>p</i>(<i>x</i><sub>n+1</sub><i>, x</i><sub>n</sub><i>, y</i><sub>n</sub>)log <i>p</i>(<i>x</i><sub>n+1</sub><i>|x</i><sub>n</sub><i>, y</i><sub>n</sub>) &#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0055" num="0051">And supposing that value of observation x<sub>n+1 </sub>was not dependent on the current observation y<sub>n</sub>, there is generated:</p><p id="p-0056" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>h</i><sub>2</sub>=&#x2212;&#x3a3;<sub>x</sub><sub><sub2>n+1</sub2></sub><i>p</i>(<i>x</i><sub>n+1</sub><i>, x</i><sub>n</sub><i>, y</i><sub>n</sub>)log <i>p</i>(<i>x</i><sub>n+1</sub><i>|x</i><sub>n</sub>) &#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0057" num="0052">In a non-limiting example of determining an amount of &#x2018;additional information&#x2019; required to represent the value of the next observation of one of the service chains, the following times are considered in an example:</p><p id="p-0058" num="0053">At t=0, A &#x201c;unusual&#x201d; data is encountered to SC<sub>1</sub>&#x2014;this will raise a request for additional resources requirement for SC<sub>1</sub>. The available resource is with SC<sub>2 </sub>and so resources is &#x201c;shared&#x201d; among SC<sub>1 </sub>and SC<sub>2</sub>.</p><p id="p-0059" num="0054">At t=1, SC<sub>1 </sub>will be provided with a resource required for the additional process. Thus, at time t=0, the event is fired which is dependent on a shared resource between SC<sub>1 </sub>and SC<sub>2</sub>. H<sub>1 </sub>will come into play but it is uncertain at this stage how much of this shared resource is going to impact the normal execution of the SC<sub>2 </sub>(represented as the information entropy). The more certain of the level of shared resource utilization by both SC<sub>1 </sub>and SC<sub>2</sub>, the more certain it can be of the (joint) probability that this conduct can be isolated as an interference. But, at the time t=0, the system is in dearth of this &#x201c;additional information&#x201d; and it ascertains this in a subsequent observation. Thus, the entropy value is updated at a next time epoch, e.g., periodically, such as every 10 ms, or updated according to an applied industry standard.</p><p id="p-0060" num="0055">To know whether a value of observation x<sub>n+1 </sub>is dependent or not on a current observation y<sub>n </sub>depends entirely if there is a resource which is additionally shared on a request of a service chain and this resource is currently serving another service chain.</p><p id="p-0061" num="0056">The quantity h<sub>1 </sub>represents the convexity rate for the two service chains, and h<sub>2 </sub>represents the convexity rate assuming that x<sub>n+1 </sub>is independent of y<sub>n</sub>. Then, at <b>516</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there is obtained mutual convexity &#x3be; from equations (2) and (3) according to:</p><p id="p-0062" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>&#x3be;</mi>      <mstyle><mtext>?</mtext></mstyle>      <mrow>       <mo>(</mo>       <mrow>        <msub>         <mi>h</mi>         <mn>2</mn>        </msub>        <mo>-</mo>        <msub>         <mi>h</mi>         <mn>1</mn>        </msub>       </mrow>       <mo>)</mo>      </mrow>     </mrow>     <mo>=</mo>     <mrow>      <mrow>       <mo>-</mo>       <mrow>        <msub>         <mo>&#x2211;</mo>         <msub>          <mi>x</mi>          <mrow>           <mi>n</mi>           <mo>+</mo>           <mn>1</mn>          </mrow>         </msub>        </msub>        <mrow>         <mrow>          <mi>p</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <msub>            <mi>x</mi>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>           </msub>           <mo>,</mo>           <msub>            <mi>x</mi>            <mi>n</mi>           </msub>           <mo>,</mo>           <msub>            <mi>y</mi>            <mi>n</mi>           </msub>          </mrow>          <mo>)</mo>         </mrow>         <mo>&#x2062;</mo>         <mi>log</mi>         <mo>&#x2062;</mo>         <mrow>          <mi>p</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <msub>            <mi>x</mi>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>           </msub>           <mo>&#x2062;</mo>           <mrow>            <semantics definitionURL="">             <mo>&#x2758;</mo>             <annotation encoding="Mathematica">"\[LeftBracketingBar]"</annotation>            </semantics>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>           </mrow>          </mrow>          <mo>)</mo>         </mrow>        </mrow>       </mrow>      </mrow>      <mo>+</mo>      <mrow>       <msub>        <mo>&#x2211;</mo>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>       </msub>       <mrow>        <mrow>         <mi>p</mi>         <mo>&#x2061;</mo>         <mo>(</mo>         <mrow>          <msub>           <mi>x</mi>           <mrow>            <mi>n</mi>            <mo>+</mo>            <mn>1</mn>           </mrow>          </msub>          <mo>,</mo>          <msub>           <mi>x</mi>           <mi>n</mi>          </msub>          <mo>,</mo>          <msub>           <mi>y</mi>           <mi>n</mi>          </msub>         </mrow>         <mo>)</mo>        </mrow>        <mo>&#x2062;</mo>        <mi>log</mi>        <mo>&#x2062;</mo>        <mrow>         <mi>p</mi>         <mo>&#x2061;</mo>         <mo>(</mo>         <mrow>          <msub>           <mi>x</mi>           <mrow>            <mi>n</mi>            <mo>+</mo>            <mn>1</mn>           </mrow>          </msub>          <mo>&#x2062;</mo>          <mrow>           <semantics definitionURL="">            <mo>&#x2758;</mo>            <annotation encoding="Mathematica">"\[LeftBracketingBar]"</annotation>           </semantics>           <mrow>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>            <mo>,</mo>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>          </mrow>         </mrow>         <mo>)</mo>        </mrow>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>4</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00001-2" num="00001.2"><math overflow="scroll"> <mrow>  <mstyle><mtext>?</mtext></mstyle>  <mtext mathsize="6pt">indicates text missing or illegible when filed</mtext> </mrow></math></maths></p><p id="p-0063" num="0057">Rearranging, using the joint probability value there is ascertained the convexity for individual chains&#x2014;according to equations 5), 6) as:</p><p id="p-0064" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>&#x3be;</mi>      <mn>1</mn>     </msub>     <mo>=</mo>     <mrow>      <msub>       <mo>&#x2211;</mo>       <mrow>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>        <mo>,</mo>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>        <mo>,</mo>        <msub>         <mi>y</mi>         <mi>n</mi>        </msub>       </mrow>      </msub>      <mrow>       <mrow>        <mi>p</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <msub>          <mi>x</mi>          <mrow>           <mi>n</mi>           <mo>+</mo>           <mn>1</mn>          </mrow>         </msub>         <mo>,</mo>         <msub>          <mi>x</mi>          <mi>n</mi>         </msub>         <mo>,</mo>         <msub>          <mi>y</mi>          <mi>n</mi>         </msub>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mtext>  </mtext>       <mi>log</mi>       <mo>&#x2062;</mo>       <mtext>   </mtext>       <mrow>        <mo>(</mo>        <mfrac>         <mrow>          <mi>p</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <msub>            <mi>x</mi>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>           </msub>           <mo>,</mo>           <msub>            <mi>x</mi>            <mi>n</mi>           </msub>           <mo>,</mo>           <msub>            <mi>y</mi>            <mi>n</mi>           </msub>          </mrow>          <mo>)</mo>         </mrow>         <mrow>          <mi>p</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <msub>            <mi>x</mi>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>           </msub>           <mo>&#x2062;</mo>           <mrow>            <semantics definitionURL="">             <mo>&#x2758;</mo>             <annotation encoding="Mathematica">"\[LeftBracketingBar]"</annotation>            </semantics>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>           </mrow>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>        <mo>)</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>5</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00002-2" num="00002.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>&#x3be;</mi>      <mn>2</mn>     </msub>     <mo>=</mo>     <mrow>      <msub>       <mo>&#x2211;</mo>       <mrow>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>        <mo>,</mo>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>        <mo>,</mo>        <msub>         <mi>y</mi>         <mi>n</mi>        </msub>       </mrow>      </msub>      <mrow>       <mrow>        <mi>p</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <msub>          <mi>y</mi>          <mrow>           <mi>n</mi>           <mo>+</mo>           <mn>1</mn>          </mrow>         </msub>         <mo>,</mo>         <msub>          <mi>x</mi>          <mi>n</mi>         </msub>         <mo>,</mo>         <msub>          <mi>y</mi>          <mi>n</mi>         </msub>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mtext>  </mtext>       <mi>log</mi>       <mo>&#x2062;</mo>       <mtext>   </mtext>       <mrow>        <mo>(</mo>        <mfrac>         <mrow>          <mi>p</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <msub>            <mi>y</mi>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>           </msub>           <mo>,</mo>           <msub>            <mi>x</mi>            <mi>n</mi>           </msub>           <mo>,</mo>           <msub>            <mi>y</mi>            <mi>n</mi>           </msub>          </mrow>          <mo>)</mo>         </mrow>         <mrow>          <mi>p</mi>          <mo>&#x2061;</mo>          <mo>(</mo>          <mrow>           <msub>            <mi>y</mi>            <mrow>             <mi>n</mi>             <mo>+</mo>             <mn>1</mn>            </mrow>           </msub>           <mo>&#x2062;</mo>           <mrow>            <semantics definitionURL="">             <mo>&#x2758;</mo>             <annotation encoding="Mathematica">"\[LeftBracketingBar]"</annotation>            </semantics>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>          </mrow>          <mo>)</mo>         </mrow>        </mfrac>        <mo>)</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>6</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0065" num="0058">The convolved probabilities can be resolved to conditional probabilities according to equations 7) and 8) as follows:</p><p id="p-0066" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>p</mi>      <mo>&#x2061;</mo>      <mo>(</mo>      <mrow>       <msub>        <mi>x</mi>        <mrow>         <mi>n</mi>         <mo>+</mo>         <mn>1</mn>        </mrow>       </msub>       <mo>,</mo>       <msub>        <mi>x</mi>        <mi>n</mi>       </msub>       <mo>,</mo>       <msub>        <mi>y</mi>        <mi>n</mi>       </msub>      </mrow>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mfrac>      <mrow>       <mi>p</mi>       <mo>&#x2061;</mo>       <mo>(</mo>       <mrow>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>        <mo>,</mo>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>        <mo>,</mo>        <msub>         <mi>y</mi>         <mi>n</mi>        </msub>       </mrow>       <mo>)</mo>      </mrow>      <mrow>       <mi>p</mi>       <mo>&#x2061;</mo>       <mo>(</mo>       <mrow>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>        <mo>,</mo>        <msub>         <mi>y</mi>         <mi>n</mi>        </msub>       </mrow>       <mo>)</mo>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>7</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00003-2" num="00003.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>p</mi>      <mo>&#x2061;</mo>      <mo>(</mo>      <mrow>       <msub>        <mi>x</mi>        <mrow>         <mi>n</mi>         <mo>+</mo>         <mn>1</mn>        </mrow>       </msub>       <mo>&#x2062;</mo>       <mrow>        <semantics definitionURL="">         <mo>&#x2758;</mo>         <annotation encoding="Mathematica">"\[LeftBracketingBar]"</annotation>        </semantics>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>       </mrow>      </mrow>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mfrac>      <mrow>       <mi>p</mi>       <mo>&#x2061;</mo>       <mo>(</mo>       <mrow>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>        <mo>,</mo>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>       </mrow>       <mo>)</mo>      </mrow>      <mrow>       <mi>p</mi>       <mo>&#x2061;</mo>       <mo>(</mo>       <msub>        <mi>x</mi>        <mi>n</mi>       </msub>       <mo>)</mo>      </mrow>     </mfrac>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>8</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0067" num="0059">At <b>520</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method performs a rewriting of equation 5 and 6 using equation 7 and 8 to obtain the &#x201c;mutual convexity&#x201d; values catering to the interferences according to equations 9) and 10) as follows:</p><p id="p-0068" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>&#x3be;</mi>      <mrow>       <mn>1</mn>       <mo>&#x2192;</mo>       <mn>2</mn>      </mrow>     </msub>     <mo>=</mo>     <mrow>      <msub>       <mo>&#x2211;</mo>       <mrow>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>        <mo>,</mo>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>        <mo>,</mo>        <msub>         <mi>y</mi>         <mi>n</mi>        </msub>       </mrow>      </msub>      <mrow>       <mrow>        <mi>p</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <msub>          <mi>x</mi>          <mrow>           <mi>n</mi>           <mo>+</mo>           <mn>1</mn>          </mrow>         </msub>         <mo>,</mo>         <msub>          <mi>x</mi>          <mi>n</mi>         </msub>         <mo>,</mo>         <msub>          <mi>y</mi>          <mi>n</mi>         </msub>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mtext>  </mtext>       <mi>log</mi>       <mo>&#x2062;</mo>       <mtext>   </mtext>       <mrow>        <mo>(</mo>        <mfrac>         <mrow>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <msub>             <mi>x</mi>             <mrow>              <mi>n</mi>              <mo>+</mo>              <mn>1</mn>             </mrow>            </msub>            <mo>,</mo>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>            <mo>,</mo>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>           <mo>)</mo>          </mrow>          <mo>&#xb7;</mo>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <msub>            <mi>x</mi>            <mi>n</mi>           </msub>           <mo>)</mo>          </mrow>         </mrow>         <mrow>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <msub>             <mi>x</mi>             <mrow>              <mi>n</mi>              <mo>+</mo>              <mn>1</mn>             </mrow>            </msub>            <mo>,</mo>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>           </mrow>           <mo>)</mo>          </mrow>          <mo>&#xb7;</mo>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>            <mo>,</mo>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>           <mo>)</mo>          </mrow>         </mrow>        </mfrac>        <mo>)</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>9</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths><maths id="MATH-US-00004-2" num="00004.2"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <msub>      <mi>&#x3be;</mi>      <mrow>       <mn>2</mn>       <mo>&#x2192;</mo>       <mn>1</mn>      </mrow>     </msub>     <mo>=</mo>     <mrow>      <msub>       <mo>&#x2211;</mo>       <mrow>        <msub>         <mi>x</mi>         <mrow>          <mi>n</mi>          <mo>+</mo>          <mn>1</mn>         </mrow>        </msub>        <mo>,</mo>        <msub>         <mi>x</mi>         <mi>n</mi>        </msub>        <mo>,</mo>        <msub>         <mi>y</mi>         <mi>n</mi>        </msub>       </mrow>      </msub>      <mrow>       <mrow>        <mi>p</mi>        <mo>&#x2061;</mo>        <mo>(</mo>        <mrow>         <msub>          <mi>x</mi>          <mrow>           <mi>n</mi>           <mo>+</mo>           <mn>1</mn>          </mrow>         </msub>         <mo>,</mo>         <msub>          <mi>x</mi>          <mi>n</mi>         </msub>         <mo>,</mo>         <msub>          <mi>y</mi>          <mi>n</mi>         </msub>        </mrow>        <mo>)</mo>       </mrow>       <mo>&#x2062;</mo>       <mtext>  </mtext>       <mi>log</mi>       <mo>&#x2062;</mo>       <mtext>   </mtext>       <mrow>        <mo>(</mo>        <mfrac>         <mrow>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <msub>             <mi>y</mi>             <mrow>              <mi>n</mi>              <mo>+</mo>              <mn>1</mn>             </mrow>            </msub>            <mo>,</mo>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>            <mo>,</mo>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>           <mo>)</mo>          </mrow>          <mo>&#xb7;</mo>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <msub>            <mi>y</mi>            <mi>n</mi>           </msub>           <mo>)</mo>          </mrow>         </mrow>         <mrow>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <msub>             <mi>y</mi>             <mrow>              <mi>n</mi>              <mo>+</mo>              <mn>1</mn>             </mrow>            </msub>            <mo>,</mo>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>           <mo>)</mo>          </mrow>          <mo>&#xb7;</mo>          <mrow>           <mi>p</mi>           <mo>&#x2061;</mo>           <mo>(</mo>           <mrow>            <msub>             <mi>x</mi>             <mi>n</mi>            </msub>            <mo>,</mo>            <msub>             <mi>y</mi>             <mi>n</mi>            </msub>           </mrow>           <mo>)</mo>          </mrow>         </mrow>        </mfrac>        <mo>)</mo>       </mrow>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>10</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0069" num="0000">where equation 9) depicts the dependency of service chain 1 on service chain 2 and equation 10) represents the dependency of service chain 2 on service chain 1.</p><p id="p-0070" num="0060">Here, the method resolves the mutual convexity factors &#x3be;<sub>1&#x2192;2 </sub>and &#x3be;<sub>2&#x2192;1 </sub>which can be used to quantify and assess if there are any significant cross interferences between the two service chains as indicated at <b>523</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0071" num="0061">That is, the &#x3be;<sub>1&#x2192;2 </sub>and &#x3be;<sub>2&#x2192;1 </sub>factors are available as metrics within the 5GC and they are constantly monitored so that the shared resources that are creating interferences are handled properly, e.g., provisioned with more compute power, cloned, time multiplexed, etc., or fine tune computational services of service chains, optimize resources, or take any other action capable of minimizing any potential service quality degradation/failure.</p><p id="p-0072" num="0062">Thus, the mutual convexity method is configured to identify what is the best next action for each service chain. As a shared resource has joint servicing by a common resource, it creates a level of dependency between the 2 service chains. Before the resources are jointly provisioned they are configured as having independent execution plans, but after the shared resource is provisioned, the execution plan for both the service chains will not intersect, but it will depend on this shared resource jointly. Thus, it is important to isolate the impact of this interference which are represented as conditional probabilities. Functionally, these are tracked by the mutual convexity algorithm as SC<sub>1 </sub>dependence on SC<sub>2 </sub>and SC<sub>2 </sub>dependence on SC<sub>1</sub>. They will be different values depending on the criticality of the service that is provided by this shared resource.</p><p id="p-0073" num="0063">Returning to <b>523</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the Mutual Convexity algorithm at this stage is made aware that SC<sub>1 </sub>and SC<sub>2 </sub>have a joint probability of interference. At <b>528</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a decision is made as to whether a &#x201c;significant&#x201d; cross-interference threshold has been reached. If a &#x201c;significant&#x201d; cross-interference threshold is determined as not being reached, the process continues to <b>530</b> to check at subsequent epochs (or periodically) whether the mutual convexity factors &#x201c;&#x3be;&#x201d; are updated, e.g., increased. The system returns to <b>528</b>, such that, with every execution epoch (e.g., periodically&#x2014;every 10 ms or via applied industry standard) this value will be updated until it reaches a significant threshold. These thresholds are maintained as industry standards for serviceability&#x2014;as advised by service providers for their specific configurations.</p><p id="p-0074" num="0064">As determined at <b>528</b>, upon reaching a threshold, the process proceeds to step <b>532</b>, where action is taken to optimize energy consumption of servers provisioning virtual functions that are being shared.</p><p id="p-0075" num="0065">In an embodiment, the &#x201c;significant&#x201d; threshold value is a policy decision that is maintained in the PCF&#x2014;Policy Control Function of the 5GC and is as advised by the service providers of the 5GC. The breach of the threshold is monitored by the SMF&#x2014;Session Management Function. Once the significant threshold is breached, the event is triggered by the NEF&#x2014;Network Exposure Function. Such events are &#x201c;subscribed&#x201d; by SSF&#x2014;Slice Selection Function. The SSF then can provision for additional corrective action properly (provided more compute power, cloned, time multiplexed, etc.). The updated corrective action is updated with the repository by NRF&#x2014;Network Repository Function. Accordingly, a new session is established by SMF&#x2014;Session Management Function of the 5GC.</p><p id="p-0076" num="0066">Thus, the event is handled and the state of operations are transitioned to a new state of normal. The process can then proceed to <b>536</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref> where a new pair of service chains are being monitored for received events, and the process proceeds to <b>502</b> to repeat the MC method and determine the state of these new service chains.</p><p id="p-0077" num="0067">Returning to <b>528</b>, if after waiting a pre-determined threshold of epochs or after waiting a pre-determined time period, the mutual convexity factors for the current service chains do not reach a significant threshold, the process can return to <b>536</b>, <figref idref="DRAWINGS">FIG. <b>5</b></figref> where a new pair of (independent and/or dependent) service chains are being monitored for received events to determine their impact of interferences of one service chain on the other, and the process proceeds to <b>502</b> to repeat the MC method and determine the state of these new service chains.</p><p id="p-0078" num="0068"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example computing system in accordance with the present invention. It is to be understood that the computer system depicted is only one example of a suitable processing system and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the present invention. For example, the system shown may be operational with numerous other general-purpose or special-purpose computing system environments or configurations. Examples of well-known computing systems, environments, and/or configurations that may be suitable for use with the system shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref> may include, but are not limited to, personal computer systems, server computer systems, thin clients, thick clients, handheld or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputer systems, mainframe computer systems, and distributed cloud computing environments that include any of the above systems or devices, and the like.</p><p id="p-0079" num="0069">In some embodiments, the computer system may be described in the general context of computer system executable instructions, embodied as program modules stored in memory <b>16</b>, being executed by the computer system. Generally, program modules may include routines, programs, objects, components, logic, data structures, and so on that perform particular tasks and/or implement particular input data and/or data types in accordance with the present invention (see e.g., <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0080" num="0070">The components of the computer system may include, but are not limited to, one or more processors or processing units <b>12</b>, a memory <b>16</b>, and a bus <b>14</b> that operably couples various system components, including memory <b>16</b> to processor <b>12</b>. In some embodiments, the processor <b>12</b> may execute one or more modules <b>10</b> that are loaded from memory <b>16</b>, where the program module(s) embody software (program instructions) that cause the processor to perform one or more method embodiments of the present invention. In some embodiments, module <b>10</b> may be programmed into the integrated circuits of the processor <b>12</b>, loaded from memory <b>16</b>, storage device <b>18</b>, network <b>24</b> and/or combinations thereof.</p><p id="p-0081" num="0071">Bus <b>14</b> may represent one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus.</p><p id="p-0082" num="0072">The computer system may include a variety of computer system readable media. Such media may be any available media that is accessible by computer system, and it may include both volatile and non-volatile media, removable and non-removable media.</p><p id="p-0083" num="0073">Memory <b>16</b> (sometimes referred to as system memory) can include computer readable media in the form of volatile memory, such as random access memory (RAM), cache memory an/or other forms. Computer system may further include other removable/non-removable, volatile/non-volatile computer system storage media. By way of example only, storage system <b>18</b> can be provided for reading from and writing to a non-removable, non-volatile magnetic media (e.g., a &#x201c;hard drive&#x201d;). Although not shown, a magnetic disk drive for reading from and writing to a removable, non-volatile magnetic disk (e.g., a &#x201c;floppy disk&#x201d;), and an optical disk drive for reading from or writing to a removable, non-volatile optical disk such as a CD-ROM, DVD-ROM or other optical media can be provided. In such instances, each can be connected to bus <b>14</b> by one or more data media interfaces.</p><p id="p-0084" num="0074">The computer system may also communicate with one or more external devices <b>26</b> such as a keyboard, a pointing device, a display <b>28</b>, etc.; one or more devices that enable a user to interact with the computer system; and/or any devices (e.g., network card, modem, etc.) that enable the computer system to communicate with one or more other computing devices. Such communication can occur via Input/Output (I/O) interfaces <b>20</b>.</p><p id="p-0085" num="0075">Still yet, the computer system can communicate with one or more networks <b>24</b> such as a local area network (LAN), a general wide area network (WAN), and/or a public network (e.g., the Internet) via network adapter <b>22</b>. As depicted, network adapter <b>22</b> communicates with the other components of computer system via bus <b>14</b>. It should be understood that although not shown, other hardware and/or software components could be used in conjunction with the computer system. Examples include, but are not limited to: microcode, device drivers, redundant processing units, external disk drive arrays, RAID systems, tape drives, and data archival storage systems, etc.</p><p id="p-0086" num="0076">The present invention may be a system, a method, and/or a computer program product at any possible technical detail level of integration. The computer program product may include a computer readable storage medium (or media) having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.</p><p id="p-0087" num="0077">The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. A non-exhaustive list of more specific examples of the computer readable storage medium includes the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disk (DVD), a memory stick, a floppy disk, a mechanically encoded device such as punch-cards or raised structures in a groove having instructions recorded thereon, and any suitable combination of the foregoing. A computer readable storage medium, as used herein, is not to be construed as being transitory signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through a waveguide or other transmission media (e.g., light pulses passing through a fiber-optic cable), or electrical signals transmitted through a wire.</p><p id="p-0088" num="0078">Computer readable program instructions described herein can be downloaded to respective computing/processing devices from a computer readable storage medium or to an external computer or external storage device via a network, for example, the Internet, a local area network, a wide area network and/or a wireless network. The network may comprise copper transmission cables, optical transmission fibers, wireless transmission, routers, firewalls, switches, gateway computers and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing/processing device.</p><p id="p-0089" num="0079">Computer readable program instructions for carrying out operations of the present invention may be assembler instructions, instruction-set-architecture (ISA) instructions, machine instructions, machine dependent instructions, microcode, firmware instructions, state-setting data, configuration data for integrated circuitry, or either source code or object code written in any combination of one or more programming languages, including an object oriented programming language such as Smalltalk, C++, or the like, and procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The computer readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). In some embodiments, electronic circuitry including, for example, programmable logic circuitry, field-programmable gate arrays (FPGA), or programmable logic arrays (PLA) may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry, in order to perform aspects of the present invention.</p><p id="p-0090" num="0080">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0091" num="0081">These computer readable program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function/act specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0092" num="0082">The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other device to cause a series of operational steps to be performed on the computer, other programmable apparatus or other device to produce a computer implemented process, such that the instructions which execute on the computer, other programmable apparatus, or other device implement the functions/acts specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0093" num="0083">The flowcharts and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the blocks may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0094" num="0084">The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising,&#x201d; when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof. The corresponding structures, materials, acts, and equivalents of all elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.</p><p id="p-0095" num="0085">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the blocks may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0096" num="0086">It is to be understood that although this disclosure includes a detailed description on cloud computing, implementation of the teachings recited herein are not limited to a cloud computing environment. Rather, embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.</p><p id="p-0097" num="0087">Cloud computing is a model of service delivery for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, network bandwidth, servers, processing, memory, storage, applications, virtual machines, and services) that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics, at least three service models, and at least four deployment models.</p><p id="p-0098" num="0088">Characteristics are as follows:</p><p id="p-0099" num="0089">On-demand self-service: a cloud consumer can unilaterally provision computing capabilities, such as server time and network storage, as needed automatically without requiring human interaction with the service's provider.</p><p id="p-0100" num="0090">Broad network access: capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, laptops, and PDAs).</p><p id="p-0101" num="0091">Resource pooling: the provider's computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction (e.g., country, state, or datacenter).</p><p id="p-0102" num="0092">Rapid elasticity: capabilities can be rapidly and elastically provisioned, in some cases automatically, to quickly scale out and rapidly released to quickly scale in. To the consumer, the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.</p><p id="p-0103" num="0093">Measured service: cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts). Resource usage can be monitored, controlled, and reported, providing transparency for both the provider and consumer of the utilized service.</p><p id="p-0104" num="0094">Service Models are as follows:</p><p id="p-0105" num="0095">Software as a Service (SaaS): the capability provided to the consumer is to use the provider's applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser (e.g., web-based e-mail). The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings.</p><p id="p-0106" num="0096">Platform as a Service (PaaS): the capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks, servers, operating systems, or storage, but has control over the deployed applications and possibly application hosting environment configurations.</p><p id="p-0107" num="0097">Infrastructure as a Service (IaaS): the capability provided to the consumer is to provision processing, storage, networks, and other fundamental computing resources where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, deployed applications, and possibly limited control of select networking components (e.g., host firewalls).</p><p id="p-0108" num="0098">Deployment Models are as follows:</p><p id="p-0109" num="0099">Private cloud: the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on-premises or off-premises.</p><p id="p-0110" num="0100">Community cloud: the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns (e.g., mission, security requirements, policy, and compliance considerations). It may be managed by the organizations or a third party and may exist on-premises or off-premises.</p><p id="p-0111" num="0101">Public cloud: the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.</p><p id="p-0112" num="0102">Hybrid cloud: the cloud infrastructure is a composition of two or more clouds (private, community, or public) that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability (e.g., cloud bursting for load-balancing between clouds).</p><p id="p-0113" num="0103">A cloud computing environment is service oriented with a focus on statelessness, low coupling, modularity, and semantic interoperability. At the heart of cloud computing is an infrastructure that includes a network of interconnected nodes.</p><p id="p-0114" num="0104">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrative cloud computing environment <b>50</b> is depicted. As shown, cloud computing environment <b>50</b> includes one or more cloud computing nodes <b>10</b> with which local computing devices used by cloud consumers, such as, for example, personal digital assistant (PDA) or cellular telephone <b>54</b>A, desktop computer <b>54</b>B, laptop computer <b>54</b>C, and/or automobile computer system <b>54</b>N may communicate. Nodes <b>10</b> may communicate with one another. They may be grouped (not shown) physically or virtually, in one or more networks, such as Private, Community, Public, or Hybrid clouds as described hereinabove, or a combination thereof. This allows cloud computing environment <b>50</b> to offer infrastructure, platforms and/or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices <b>54</b>A-N shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> are intended to be illustrative only and that computing nodes <b>10</b> and cloud computing environment <b>50</b> can communicate with any type of computerized device over any type of network and/or network addressable connection (e.g., using a web browser).</p><p id="p-0115" num="0105">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a set of functional abstraction layers provided by cloud computing environment <b>50</b> (<figref idref="DRAWINGS">FIG. <b>1</b></figref>) is shown. It should be understood in advance that the components, layers, and functions shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted, the following layers and corresponding functions are provided:</p><p id="p-0116" num="0106">Hardware and software layer <b>60</b> includes hardware and software components. Examples of hardware components include: mainframes <b>61</b>; RISC (Reduced Instruction Set Computer) architecture based servers <b>62</b>; servers <b>63</b>; blade servers <b>64</b>; storage devices <b>65</b>; and networks and networking components <b>66</b>. In some embodiments, software components include network application server software <b>67</b> and database software <b>68</b>.</p><p id="p-0117" num="0107">Virtualization layer <b>70</b> provides an abstraction layer from which the following examples of virtual entities may be provided: virtual servers <b>71</b>; virtual storage <b>72</b>; virtual networks <b>73</b>, including virtual private networks; virtual applications and operating systems <b>74</b>; and virtual clients <b>75</b>.</p><p id="p-0118" num="0108">In one example, management layer <b>80</b> may provide the functions described below. Resource provisioning <b>81</b> provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing <b>82</b> provide cost tracking as resources are utilized within the cloud computing environment, and billing or invoicing for consumption of these resources. In one example, these resources may include application software licenses. Security provides identity verification for cloud consumers and tasks, as well as protection for data and other resources. User portal <b>83</b> provides access to the cloud computing environment for consumers and system administrators. Service level management <b>84</b> provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement (SLA) planning and fulfillment <b>85</b> provide pre-arrangement for, and procurement of, cloud computing resources for which a future requirement is anticipated in accordance with an SLA.</p><p id="p-0119" num="0109">Workloads layer <b>90</b> provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include: mapping and navigation <b>91</b>; software development and lifecycle management <b>92</b>; virtual classroom education delivery <b>93</b>; data analytics processing <b>94</b>; transaction processing <b>95</b>; and the mutual convexity service processing <b>96</b>.</p><p id="p-0120" num="0110">Although specific embodiments of the present invention have been described, it will be understood by those of skill in the art that there are other embodiments that are equivalent to the described embodiments. Accordingly, it is to be understood that the invention is not to be limited by the specific illustrated embodiments, but only by the scope of the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001 MATH-US-00001-2" nb-file="US20230004412A1-20230105-M00001.NB"><img id="EMI-M00001" he="14.82mm" wi="76.20mm" file="US20230004412A1-20230105-M00001.TIF" alt="text missing or illegible when filed" img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002 MATH-US-00002-2" nb-file="US20230004412A1-20230105-M00002.NB"><img id="EMI-M00002" he="13.04mm" wi="76.20mm" file="US20230004412A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003 MATH-US-00003-2" nb-file="US20230004412A1-20230105-M00003.NB"><img id="EMI-M00003" he="13.04mm" wi="76.20mm" file="US20230004412A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004 MATH-US-00004-2" nb-file="US20230004412A1-20230105-M00004.NB"><img id="EMI-M00004" he="13.04mm" wi="76.20mm" file="US20230004412A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method comprising:<claim-text>receiving, at one or more hardware processors, event data generated by at least two service chains provisioned to provide services on computing devices of a virtualized network;</claim-text><claim-text>generating, at one or more hardware processors, a joint probability function based on co-occurring event data generated by said at least two service chains;</claim-text><claim-text>determining, based on said generated joint probability function, a cross-interference impact of a first service chain upon a second service chain of said provisioned at least two service chains; and</claim-text><claim-text>based on the determined cross-interference impact, modifying, using the one or more hardware processors, a provisioned resource on said computing devices to avoid a service quality degradation.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said determining a cross-interference impact comprises:<claim-text>representing corresponding events occurring at a common time as at least two discrete random variables associated with each said first and second service chains;</claim-text><claim-text>generating a joint probability distribution function of said at least two discrete random variables occurring at the common time;</claim-text><claim-text>determining, based on said joint probability distribution function, an amount of additional information required to represent a value of a next observation of one of the service chains; and</claim-text><claim-text>quantifying, based on said amount of additional information, said cross-interference impact.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said determining an amount of additional information comprises:<claim-text>determining a convexity rate for each first and second service chain, said convexity rate determined for one or more of:</claim-text><claim-text>an instance where a next event observation at the first service chain is dependent upon a current event occurring at said second service chain; and</claim-text><claim-text>an instance where a next event observation at the first service chain is independent of a current event occurring at said second service chain.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said quantifying a cross-interference impact comprises:<claim-text>determining, based on said convexity rate for each said first and second service chain, a mutual convexity factor quantifying a cross-interference impact between:</claim-text><claim-text>the first service chain dependent on the second service chain; and</claim-text><claim-text>the second service chain dependent on the first service chain.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>comparing, using said one or more hardware processors, said mutual convexity factor against a pre-deterrmined threshold; and</claim-text><claim-text>responsive to said comparing resulting in said mutual convexity factor exceeding said pre-deterrmined threshold, optimizing a use of virtualized network resources to avoid service failure or service degradation of said at least two service chains.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein responsive to said comparing resulting in said mutual convexity factor not exceeding said pre-deterrmined threshold, said method further comprising:<claim-text>updating periodically or via a set schedule, said mutual convexity factor until said mutual convexity factor exceeds said pre-deterrmined threshold.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said at least two service chains comprise a series of virtual network functions performed on said virtualized network resources, said optimizing a use of resources comprising:<claim-text>preventing said virtual network functions from consuming excessive power.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A system for managing resources of a service chain comprising:<claim-text>at least one processor comprising hardware, the at least one processor configured to:</claim-text><claim-text>receive event data generated by at least two service chains provisioned to provide services on computing devices of a virtualized network;</claim-text><claim-text>generate a joint probability function based on co-occurring event data generated by said at least two service chains;</claim-text><claim-text>determine, based on said generated joint probability function, a cross-interference impact of a first service chain upon a second service chain of said provisioned at least two service chains; and</claim-text><claim-text>based on the determined cross-interference impact, modify a provisioned resource on said computing devices to avoid a service quality degradation.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein to determine a cross-interference impact, the at least one processor is further configured to:<claim-text>represent corresponding events occurring at a common time as at least two discrete random variables associated with each said first and second service chains;</claim-text><claim-text>generate a joint probability distribution function of said at least two discrete random variables occurring at the common time;</claim-text><claim-text>determine, based on said joint probability distribution function, an amount of additional information required to represent a value of a next observation of one of the service chains; and</claim-text><claim-text>quantify, based on said amount of additional information, said cross-interference impact.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein to determine an amount of additional information, the at least one processor is further configured to:<claim-text>determine a convexity rate for each first and second service chain, said convexity rate determined for one or more of:</claim-text><claim-text>an instance where a next event observation at the first service chain is dependent upon a current event occurring at said second service chain; and</claim-text><claim-text>an instance where a next event observation at the first service chain is independent of a current event occurring at said second service chain.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein to quantify a cross-interference impact, the at least one processor is further configured to:<claim-text>determine, based on said convexity rate for each said first and second service chain, a mutual convexity factor quantifying a cross-interference impact between:</claim-text><claim-text>the first service chain dependent on the second service chain; and</claim-text><claim-text>the second service chain dependent on the first service chain.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the at least one processor configured to:<claim-text>compare said mutual convexity factor against a pre-deterrmined threshold; and</claim-text><claim-text>responsive to said comparing resulting in said mutual convexity factor exceeding said pre-determined threshold, optimize a use of virtualized network resources to avoid service failure or service degradation of said at least two service chains.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein responsive to said comparing resulting in said mutual convexity factor not exceeding said pre-deterrmined threshold, said at least one processor is further configured to:<claim-text>update periodically or via a set schedule, said mutual convexity factor until said mutual convexity factor exceeds said pre-deterrmined threshold.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein said at least two service chains comprise a series of virtual network functions performed on said virtualized network resources, wherein to optimize a use of resources, the at least one processor is further configured to:<claim-text>prevent said virtual network functions from consuming excessive energy.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A non-transitory computer readable storage medium comprising instructions that, when executed by at least one processor comprising hardware, configures the at least one hardware processor to:<claim-text>receive event data generated by at least two service chains provisioned to provide services on computing devices of a virtualized network;</claim-text><claim-text>generate a joint probability function based on co-occurring event data generated by said at least two service chains;</claim-text><claim-text>determine, based on said generated joint probability function, a cross-interference impact of a first service chain upon a second service chain of said provisioned at least two service chains; and</claim-text><claim-text>based on the determined cross-interference impact, modify a provisioned resource on said computing devices to avoid a service quality degradation.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein to determine a cross-interference impact, the instructions further configure the at least one hardware processor to:<claim-text>represent corresponding events occurring at a common time as at least two discrete random variables associated with each said first and second service chains;</claim-text><claim-text>generate a joint probability distribution function of said at least two discrete random variables occurring at the common time;</claim-text><claim-text>determine, based on said joint probability distribution function, an amount of additional information required to represent a value of a next observation of one of the service chains; and</claim-text><claim-text>quantify, based on said amount of additional information, said cross-interference impact.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein to determine an amount of additional information, the instructions further configure the at least one hardware processor to:<claim-text>determine a convexity rate for each first and second service chain, said convexity rate determined for one or more of:</claim-text><claim-text>an instance where a next event observation at the first service chain is dependent upon a current event occurring at said second service chain; and</claim-text><claim-text>an instance where a next event observation at the first service chain is independent of a current event occurring at said second service chain</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein to quantify a cross-interference impact, the instructions further configure the at least one hardware processor to:<claim-text>determine, based on said convexity rate for each said first and second service chain, a mutual convexity factor quantifying a cross-interference impact between:</claim-text><claim-text>the first service chain dependent on the second service chain; and the second service chain dependent on the first service chain.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the instructions further configure the at least one hardware processor to:<claim-text>compare said mutual convexity factor against a pre-deterrmined threshold; and</claim-text><claim-text>responsive to said comparing resulting in said mutual convexity factor exceeding said pre-deterrmined threshold, optimize a use of virtualized network resources to avoid service failure or service degradation of said at least two service chains; or</claim-text><claim-text>responsive to said comparing resulting in said mutual convexity factor not exceeding said pre-deterrmined threshold, said at least one processor is further configured to:</claim-text><claim-text>update periodically or via a set schedule, said mutual convexity factor until said mutual convexity factor exceeds said pre-determined threshold.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer readable storage medium according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein said at least two service chains comprise a series of virtual network functions performed on said virtualized network resources, wherein to optimize a use of resources, the instructions further configure at least one processor to:<claim-text>prevent said virtual network functions from consuming excessive energy.</claim-text></claim-text></claim></claims></us-patent-application>