<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230001872A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230001872</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17939622</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>B</section><class>60</class><subclass>R</subclass><main-group>21</main-group><subgroup>017</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>B</section><class>60</class><subclass>R</subclass><main-group>21</main-group><subgroup>013</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>B</section><class>60</class><subclass>W</subclass><main-group>60</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>B</section><class>60</class><subclass>W</subclass><main-group>50</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>60</class><subclass>R</subclass><main-group>21</main-group><subgroup>017</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>60</class><subclass>R</subclass><main-group>21</main-group><subgroup>013</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200201</date></cpc-version-indicator><section>B</section><class>60</class><subclass>W</subclass><main-group>60</main-group><subgroup>005</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>60</class><subclass>W</subclass><main-group>50</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>60</class><subclass>W</subclass><main-group>2050</main-group><subgroup>0062</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">IN-CABIN HAZARD PREVENTION AND SAFETY CONTROL SYSTEM FOR AUTONOMOUS MACHINE APPLICATIONS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16915577</doc-number><date>20200629</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11485308</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17939622</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>NVIDIA Corporation</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Torabi</last-name><first-name>Atousa</first-name><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Sivaraman</last-name><first-name>Sakthivel</first-name><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Avadhanam</last-name><first-name>Niranjan</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Sah</last-name><first-name>Shagan</first-name><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In various examples, systems and methods are disclosed that accurately identify driver and passenger in-cabin activities that may indicate a biomechanical distraction that prevents a driver from being fully engaged in driving a vehicle. In particular, image data representative of an image of an occupant of a vehicle may be applied to one or more deep neural networks (DNNs). Using the DNNs, data indicative of key point locations corresponding to the occupant may be computed, a shape and/or a volume corresponding to the occupant may be reconstructed, a position and size of the occupant may be estimated, hand gesture activities may be classified, and/or body postures or poses may be classified. These determinations may be used to determine operations or settings for the vehicle to increase not only the safety of the occupants, but also of surrounding motorists, bicyclists, and pedestrians.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="99.23mm" wi="158.75mm" file="US20230001872A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="245.28mm" wi="167.47mm" orientation="landscape" file="US20230001872A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="250.70mm" wi="172.30mm" orientation="landscape" file="US20230001872A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="209.04mm" wi="150.79mm" orientation="landscape" file="US20230001872A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="249.68mm" wi="149.94mm" orientation="landscape" file="US20230001872A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="258.06mm" wi="140.38mm" file="US20230001872A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="261.87mm" wi="139.87mm" file="US20230001872A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="258.32mm" wi="140.46mm" file="US20230001872A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="250.19mm" wi="156.38mm" file="US20230001872A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="223.01mm" wi="119.30mm" file="US20230001872A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="252.65mm" wi="120.06mm" file="US20230001872A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="243.50mm" wi="119.97mm" file="US20230001872A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="249.34mm" wi="154.86mm" orientation="landscape" file="US20230001872A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="238.68mm" wi="143.09mm" orientation="landscape" file="US20230001872A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="253.66mm" wi="170.52mm" file="US20230001872A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="219.29mm" wi="162.56mm" orientation="landscape" file="US20230001872A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="234.87mm" wi="133.01mm" file="US20230001872A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a Continuation of U.S. application Ser. No. 16/915,577, file Jun. 29, 2020, which is hereby incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">For autonomous vehicles to achieve driving level 2 or higher autonomous driving levels 3-5 (e.g., conditional automation (Level 3), high automation (Level 4), and full automation (Level 5), as defined by the Society of Automotive Engineers standard J3016), the autonomous vehicles must be capable of operating safely in all environments, and without the requirement for human intervention when potentially unsafe situations present themselves. In order to meet this standard, human-machine interactions may need to be adjusted and/or adapted based on how a driver and/or passenger is positioned or acting.</p><p id="p-0004" num="0003">In conventional systems, dedicated sensors have been used that may allow for monitoring a driver or passenger within a vehicle. For instance, sensors may be used to detect the presence of a person using a weight sensor or heat sensor and, based on this detected weight or heat, human-machine interactions&#x2014;such as airbag deployment&#x2014;may be adjusted. However, merely relying on a weight of or heat generated by a person does not provide comprehensive analysis of what is happening in a vehicle&#x2014;such as a posture or pose of individuals inside of the cabin. As such, some conventional systems have attempted to use raw images in an attempt to identify the presence of persons in a vehicle; however, such systems are often limited to a location of passengers in the vehicle and likewise fail at identifying actions, postures, or poses of a driver (e.g., hands on the wheel, hands off the wheel, preoccupied texting, reading, etc.) and/or passengers of the vehicle. As a result, the determinations of these systems may be limited, and may not result in determinations by the system that result in a safest or most comfortable action or outcome.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">Embodiments of the present disclosure relate to in-cabin hazard prevention and control for autonomous machine applications. Systems and methods are disclosed that accurately identify driver and passenger in-cabin activities (e.g., based on body position, size of person, classification of gestures, etc.) that may indicate a biomechanical distraction that prevents a driver from being fully engaged in driving a vehicle.</p><p id="p-0006" num="0005">In contrast to conventional systems, such as those described above, the system of the present disclosure may act accordingly by performing one or more actions (e.g., provide notifications, perform a safety maneuver, etc.) based on identified in-cabin activities. The system may adapt and/or respond to an identified in-cabin activities to address needs and/or requirements related to the driver or passengers based on the identified in-cabin activity. For instance, driver and/passenger in-cabin activities may be determined at a more granular level, such as identifying specific hand gestures, body poses, body postures, occupancy maps, etc. Based on these driver and/passenger in-cabin activities, human-machine interactions may be adjusted and adapted to a current state of the occupants.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006">The present systems and methods for in-cabin hazard prevention and control for autonomous machine applications are described in detail below with reference to the attached drawing figures, wherein:</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an example system for accurately identifying driver and passenger in-cabin activities that may indicate a biomechanical distraction that prevents a driver from being fully engaged in driving a vehicle, in accordance with some embodiments of the present disclosure;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts example process for identifying a body activity, in accordance with some embodiments of the present disclosure;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> depicts an illustration of a body-pose and shape reconstruction network, in accordance with some embodiments of the present disclosure;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a visual representation of determining activities performed by a driver that relate to the driver's hands, in accordance with some embodiments of the present disclosure;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>F</figref> depict visual representations of determining activities performed by a driver that relate to the driver's hands, in accordance with some embodiments of the present disclosure;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>B</figref> depict visual representations of determining activities performed by a driver that relate to the driver's body, in accordance with some embodiments of the present disclosure;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram showing a method for performing actions based on a position and size of an occupant within a vehicle, in accordance with some embodiments of the present disclosure;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow diagram showing a method for performing actions based on one or more activities that relate to a person's hands that are performed by the person inside a vehicle, in accordance with some embodiments of the present disclosure;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow diagram showing a method for performing actions based on an activity of an occupant within a vehicle, in accordance with some embodiments of the present disclosure;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> is an illustration of an example autonomous vehicle, in accordance with some embodiments of the present disclosure;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> is an example of camera locations and fields of view for the example autonomous vehicle of <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in accordance with some embodiments of the present disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>10</b>C</figref> is a block diagram of an example system architecture for the example autonomous vehicle of <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in accordance with some embodiments of the present disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>10</b>D</figref> is a system diagram for communication between cloud-based server(s) and the example autonomous vehicle of <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in accordance with some embodiments of the present disclosure; and</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example computing device suitable for use in implementing some embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0021">Systems and methods are disclosed related to in-cabin hazard prevention and control for autonomous machine applications. Although the present disclosure may be described with respect to an example autonomous vehicle <b>1000</b> (alternatively referred to herein as &#x201c;vehicle <b>1000</b>&#x201d; or &#x201c;ego-vehicle <b>1000</b>,&#x201d; an example of which is described with respect to <figref idref="DRAWINGS">FIGS. <b>10</b>A-<b>10</b>D</figref>), this is not intended to be limiting. For example, the systems and methods described herein may be used by, without limitation, non-autonomous vehicles, semi-autonomous vehicles, warehouse vehicles, off-road vehicles, flying vessels, boats, shuttles, emergency response vehicles, motorcycles, electric or motorized bicycles, aircraft, construction vehicles, underwater craft, and/or other vehicle types. In addition, although the present disclosure may be described with respect to in-cabin activities of passengers, this is not intended to be limiting, and the systems and methods described herein may be used in augmented reality, virtual reality, security and surveillance, autonomous or semi-autonomous machine applications, and/or any other technology spaces where monitoring of persons may be implemented.</p><p id="p-0023" num="0022">In particular, the current system is capable of accurately identifying driver and passenger in-cabin activities (e.g., based on body position, size of person, classification of gestures, etc.) that may indicate a biomechanical distraction that prevents a driver from being fully engaged in driving a vehicle. Based on identified in-cabin activities, the system may act accordingly by performing one or more actions (e.g., provide notifications, perform a safety maneuver, etc.). For instance, the system may adapt and/or respond to the identified in-cabin activities to address needs and/or requirements related to the driver or passengers based on an identified in-cabin activity. As an example, and based on the driver and/passenger in-cabin activities&#x2014;determined at a more granular level, such as identifying specific hand gestures, body poses, body postures, occupancy maps, etc.&#x2014;human-machine interactions may be adjusted and adapted to a current state of the occupants (e.g., by braking the vehicle, contacting emergency services, providing a visual, audible, and/or tactile warning notification, taking over control of the vehicle, surrendering control of the vehicle, etc.).</p><p id="p-0024" num="0023">In some embodiments, the system may be used to estimate the availability of a driver to take over control of a vehicle (e.g., switch from autonomous to manual modes of operation). For instance, this estimation may be based on posture, body position, hand position or configuration, and/or activity associated with the driver. Using this information, the system may estimate how prepared the driver is to take over the vehicle. For example, this estimation may take place when the system determines that the vehicle is going to enter an area where autonomous control is not currently possible or allowed (e.g., due to lack of map information, federal, state, or local laws or regulations, an accident, crowds, traffic light outages, etc.).</p><p id="p-0025" num="0024">In addition, the current system may leverage&#x2014;instead of or in addition to weight and/or heat sensor information&#x2014;a vision-based system to estimate body-size and position for air-bag control. In particular, information related to the body-size and/or position of a driver or passenger may be used to turn air-bag deployment on or off, and/or to adjust parameters of deployment of an air bag (e.g., with what force to deploy the air bag). For example, if a passenger is estimated to have a small body-size (e.g., a child), then air-bag deployment may be turned off. As another example, if the body position of the driver (e.g., position of driver's head) would be dangerous were an air-bag deployed from one or more positions, then air-bag deployment may be disabled temporarily at the corresponding positions.</p><p id="p-0026" num="0025">Further, the current system may be used to recognize various driver and/or passenger activities (e.g., texting, talking on a phone, eating, drinking, operating a radio, etc.). For example, the current system may recognize whether a driver's hands are on or off the steering wheel. Determining the position of the driver's hands may be performed based on visual data alone. In addition, the system may be used to recognize when a driver loses consciousness or has abnormal movement or behavior such as a sudden sickness (e.g., epileptic seizure, anxiety attack, fainting spell etc.). In such cases, emergency services may be contacted to provide location information (e.g., using global navigation satellite system (GNSS) coordinates) for the vehicle. Further, sudden sickness detection, fighting or arguing, and/or other abnormal behavior may trigger an emergency safety maneuver for the vehicle (e.g., braking, moving the vehicle to the side of the road, coming to a complete stop, etc.). As mentioned, the system may be used to recognize (e.g., detect and characterize) interactions between the driver and the passengers (e.g., fighting, arguing, violent behavior towards each other, etc.), and such recognition may be used, for example, as a safety monitor in taxi services. In some embodiments, the system may determine when a manual takeover is intentional or unintentional. For example, if a driver is reading a book during manual takeover of the vehicle, the activation of manual takeover may be suppressed as the driver may not actually be ready to safely take over control.</p><p id="p-0027" num="0026">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>1</b></figref> is an example system <b>100</b> for accurately identifying driver and passenger in-cabin activities (e.g., based on body position, size of person, classification of gestures, etc.) that may indicate a biomechanical distraction that prevents a driver from being fully engaged in driving a vehicle, in accordance with some embodiments of the present disclosure. It should be understood that this and other arrangements described herein are set forth only as examples. Other arrangements and elements (e.g., machines, interfaces, functions, orders, groupings of functions, etc.) may be used in addition to or instead of those shown, and some elements may be omitted altogether. Further, many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location. Various functions described herein as being performed by entities may be carried out by hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory.</p><p id="p-0028" num="0027">In particular, the systems of the present disclosure may monitor driver and passenger in-cabin activities in relation to in-cabin safety functions. For instance, the system may be used for in-cabin activity monitoring, such as, for example, phone usage, hands off-wheel, smoking, eating, drinking, etc. In addition, the system may be used for in-cabin health monitoring, such as, for example, sudden sickness. Further, the system may be used for in-cabin occupant monitoring, such as, for example, occupant detection and size estimation for air-bag deployment.</p><p id="p-0029" num="0028">In more detail, the system may include one or more machine learning models and/or deep neural networks (DNNs)&#x2014;such as convolutional neural networks (CNNs)&#x2014; for processing sensor data (e.g., image data from one or more in-cabin cameras) to determine a pose, shape, position, size, hand activity, body activity, and/or other physical characteristics of occupants of the vehicle, and to determine one or more actions or procedures as a result of the determinations.</p><p id="p-0030" num="0029">In some embodiments, operations executed by any of the various components of the system, such as determining at least one body pose and shape by a body pose estimator and shape reconstructor <b>102</b>, estimating at least one body position and size by a body position and size estimator <b>106</b>, determining seat occupancy by a seat occupancy determiner <b>108</b>, recognizing one or more activities related to an occupant's hands by a hand activity recognizer <b>110</b>, recognizing one or more activities related to pose variation of a body over time that are performed by an occupant by body activity recognizer <b>118</b>, and/or carrying out one or more actions based on an identified activity by safety actuator <b>126</b>, may be executed&#x2014;e.g., in parallel&#x2014;using one or more parallel processing units of the vehicle <b>1000</b>, another object or vehicle, and/or by another device&#x2014;such as a device including some or all of the components, features, and/or functionality of example computing device <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>).</p><p id="p-0031" num="0030">The system <b>100</b> may comprise a body-pose estimator and shape reconstructor <b>102</b>. The body-pose estimator and shape reconstructor <b>102</b> may use a body-pose and shape reconstruction network for processing sensor data to determine an estimated pose and shape of occupants of the vehicle. In some embodiments, the body-pose estimation and shape reconstruction network may include one or more DNN(s) with two or more branches or streams of layers&#x2014;e.g., a first branch related to body-pose estimation and a second branch related to shape reconstruction. The DNN(s) may receive an input of raw and/or pre-processed images (e.g., of drivers and/or passengers inside a vehicle). As such, the DNN(s) may include two separate networks that disentangle the processing task into a pose estimation task and a non-rigid surface deformation (e.g., body shape) task. For example, the DNN(s) may receive image data representative of an image (e.g., a full frame containing the driver and any passengers) and process the image data through feature extraction layers to compute one or more feature or pose maps. Once the features maps are computed, a first branch of layers may process the features to generate a first output corresponding to a body-pose (e.g., including locations of key points of one or more occupants) and a second branch of layers may process the features to generate a second output corresponding to a shape of one or more occupants for shape reconstruction&#x2014;e.g., to determine a volume of space, or a 4D capture in space-time, that the occupant(s) occupies within the cabin.</p><p id="p-0032" num="0031">In some embodiments, the body-pose estimation output may estimate locations and/or angles of body key points (e.g., joints and/or key features), such as, for non-limiting examples, locations of wrists, elbows, shoulders, hips, knees, feet, neck, eyes, ears, nose, etc. These body key points may also be tagged with a label (e.g., the elbow body key point may be tagged &#x201c;left elbow&#x201d;). The detection and classification of key points may be used&#x2014;e.g., by the DNN(s) and/or a post-processing algorithm&#x2014;to connect the points according to an anatomical structure of a body, and the anatomical structure may be processed&#x2014;e.g., by the DNN(s) and/or a post-processing algorithm&#x2014;to estimate a body pose of the occupant(s). The shape reconstruction output may correspond to a reconstruction of the body key points by shape and volume (e.g., an estimated shape of the occupant(s) including clothing and apparel, in embodiments). This reconstruction may correspond to a non-rigid deformation (e.g., a space-time coherent non-rigid deformation) of a surface corresponding to the occupant(s).</p><p id="p-0033" num="0032">In this way, the body-pose estimator and shape reconstructor <b>102</b> (e.g. using a body-pose estimation and shape reconstruction network) may simultaneously localize body key points for one or more occupants (e.g., driver and any passengers) in an in-cabin scene in an image space. In particular, the body-pose estimator and shape reconstructor <b>102</b> may generate 2D (e.g., (x,y)) or 3D (e.g., (x,y,z)) projections (e.g., estimated skeletal models or rigs) based on the estimated body key points. For instance, estimated skeletal models may be based on body-pose information (e.g. from the first branch of the network) and this information may be used to compute a shape&#x2014;or non-rigid deformations of a model surface&#x2014;such that current activities, postures, and/or gestures of occupants can be monitored and acted upon by the system.</p><p id="p-0034" num="0033">During training, the body-pose estimation and shape reconstruction network may undergo (in example, non-limiting embodiments) weakly supervised training based on multi-view supervision (e.g., images from two or more cameras within the vehicle)&#x2014;thereby removing a need for training data with 3D ground truth annotations (a compute and time intensive task). For example, the DNN(s) may be trained from multi-view video footage (e.g., multi-view input images <b>202</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) directly due to the differentiable representations of deforming human surfaces described herein. For example, during training, the body-pose estimation and shape reconstruction network may receive inputs of the multi-view images and may generate an output(s) <b>104</b>. The outputs <b>104</b> may correspond to estimated rigs (e.g., 3D pose based on the estimated body key points), and loss in the network can then be applied on each reconstructed pose based on the estimated rigs. For instance, each of the estimated rigs should align with each other even though they are from different views and perspectives and, in this way, alignment error may be used as a weight adjustment to correct for the loss in the network. This allows for training the network to generate&#x2014;in deployment&#x2014;one final 3D estimated rig from a monocular image.</p><p id="p-0035" num="0034">An example of such a body-pose and shape reconstruction network is illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in accordance with some embodiments of the present disclosure. For example, a segmented image <b>204</b> may be provided as input during deployment, and a first DNN, PoseNet <b>206</b>, may be trained to predict outputs <b>210</b> of joint angles and camera relative rotation using sparse multi-view 2D joint detections as weak supervision. A second DNN, DefNet <b>208</b>, may receive the segmented image <b>204</b> as input and regress on outputs <b>212</b> corresponding to embedded graph rotation and translation parameters to account for non-rigid deformations. To train DefNet <b>208</b>, multi-view 2d joint detections and silhouettes may be used for supervision.</p><p id="p-0036" num="0035">In some embodiments, with respect to PoseNet <b>206</b>, kinematic layer <b>214</b> may be implemented as a differentiable function that takes joint angles and the camera relative rotation and computes positions of the 3D landmarks (or key points) attached to a rig (e.g., 17 body joints and 4 face landmarks). A global alignment layer <b>216</b>, which may be attached to the kinematics layer <b>214</b>, may be used to obtain a global translation. For example, the global alignment layer <b>216</b> may localize the rig in world space, such that globally rotated landmarks project onto the corresponding detections in all camera views.</p><p id="p-0037" num="0036">Various types of loss functions may be used to train PoseNet <b>206</b>. For example, sparse keypoint loss <b>218</b> may be used for PoseNet <b>206</b> to ensure that each landmark or key point projects onto the corresponding 2D joint detections in all camera views. Pose prior loss <b>220</b> may be used to avoid unnatural poses on the joint angles such that each joint angle stays in a range depending on the anatomic constraints.</p><p id="p-0038" num="0037">With respect to DefNet <b>208</b> (e.g., deformation network), and because PoseNet <b>206</b> alone may not account for the non-rigid deformation of the skin and clothes, DefNet <b>208</b> may disentangle regress the non-rigid deformation parameterized with rotation angles and translation vectors of the nodes of the embedded deformation graph&#x2014;thereby disentangling the non-rigid deformations and the articulated skeletal motion from PoseNet <b>206</b>. DefNet <b>208</b> may implement a deformation layer <b>222</b> with differentiable rendering using multi-view silhouette-based weak supervision. For example, the deformation layer <b>222</b> may take the rotation angles and translation vectors as input to non-rigidly deform the surface. In some embodiments, the skeletal pose may applied on deformed mesh vertices to obtain vertex positions in input camera space. The outputs of the deformation layer <b>222</b> may be rotated relative to the camera and located around an origin and, to bring them to global space, an inverse camera rotation and global translation may be applied by the global alignment layer <b>216</b>.</p><p id="p-0039" num="0038">Various loss functions may be used to train DefNet <b>208</b>. For example, non-rigid silhouette loss <b>224</b> may be used to encourage that the non-rigidly deformed mesh matches the multi-view silhouettes in all camera views. In addition, this loss <b>224</b> may ensure that the boundary vertices project onto the zero-set of the distance transform&#x2014;e.g., the foreground silhouette. Only using the non-rigid silhouette loss <b>224</b> may lead to wrong mesh-to-image assignments, especially for highly articulated motions. As such, sparse key point graph loss <b>226</b> may be used to constrain the mesh deformation. In some embodiments, as-rigid-as-possible (ARAP) loss <b>228</b> may be used to enforce local smoothness of the surface. For example, weights may be applied such that the mesh can deform more or less depending on the surface material. As such, graph nodes that are mostly connected to vertices of a skirt may deform more freely than nodes that are mainly connected to vertices on skin.</p><p id="p-0040" num="0039">Referring again to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the system <b>100</b> may further include a body position and size estimator <b>106</b>. The body position and size estimator <b>106</b> may use information output by the body-pose estimator and shape reconstructor <b>102</b> (e.g., output <b>104</b>) to estimate a body size and/or position. This estimated body size and/or position may be used to make determinations such as whether a body pose is normal, whether a driver or passenger is in a position where airbags may safely be deployed, whether a driver or passenger is a size where airbags may safely be deployed (e.g., child vs. adult), seat occupancy in a vehicle, etc. For example, information related to the body-size and/or position of a driver or passenger may be used to turn air-bag deployment on or off.</p><p id="p-0041" num="0040">In embodiments, an estimated body pose can be analyzed to determine whether the body pose is normal. In embodiments, a body position network (e.g., a DNN(s)) may be used that is trained to identify when a body is in position or out of position. For instance, the body position network can learn various normal body poses (e.g., sitting, eating, looking around, etc.). As an example, an encoder of the network may learn representations of normal positions. Upon completion of training, the body position network can be used to analyze the position of drivers and/or passengers in a vehicle. The input into such a body position network may be the body pose from a body-pose estimation and shape reconstruction network of the body-pose estimator and shape reconstructor <b>102</b> (e.g., a rig based on body key points). From this input, the body position network can use reconstruction error to determine if the body position is abnormal. For example, when reconstruction error is very high, this indicates that the body position network has not seen the body position before. From this high reconstruction error, the body position may be classified as abnormal. In this way, reconstruction error may be used to determine whether a position of a driver or passenger is abnormal or normal.</p><p id="p-0042" num="0041">In addition, an estimated body pose can be analyzed to determine a body-size of a driver and/or passengers. For instance, to determine a body-size of the driver and/or passengers, a shape given a volume of the person may be used. Information related to the body-size of a driver or passenger may be used to turn air-bag deployment on or off. For example, if a passenger is estimated to have a small body-size (e.g., a child), then air-bag deployment may be temporarily disabled.</p><p id="p-0043" num="0042">Further, the system <b>100</b> may include a seat occupancy determiner <b>108</b>. The seat occupancy determiner <b>108</b> may use information output by the body-pose estimator and shape reconstructor <b>102</b> (e.g., output <b>104</b>) to estimate occupancy within a vehicle. For example, an estimated body pose can be analyzed to determine vehicle occupancy. In particular, estimated body pose(s) for drivers and/or passengers (e.g., a rig(s)) may be used to help estimate the occupancy within a vehicle. For instance, occupancy of each seat in the vehicle may be estimated based on a comparison between predetermined locations of seats within a vehicle (e.g., based on the image space) in relation to the estimated rig(s). Seat occupancy may be used, for example, to enable features within a vehicle (e.g., check seatbelts for occupied seats, activate interactive features for occupied seats, etc.).</p><p id="p-0044" num="0043">In addition, the system <b>100</b> may include a hand activity recognizer <b>110</b>. The hand activity recognizer <b>110</b> may use hand bounding boxes <b>112</b> to normalize the position of a hand in an image (e.g., by centering a bounding box on the hand). In some embodiments, the hand activity recognition network <b>114</b> and classifier <b>116</b> may use information output by the body-pose estimator and shape reconstructor <b>102</b> (e.g., output <b>104</b>) to determine a portion (e.g., within the bounding boxes <b>112</b>) of image data that corresponds to hands of an occupant. The hand activity recognizer <b>110</b> may also include a hand recognition network <b>114</b> and a classifier <b>116</b> (e.g., a DNN(s)). For instance, the hand activity recognition network <b>114</b> and classifier <b>116</b> may check whether a driver is engaged in one or more distracting activities. In particular, the hand activity recognition network <b>114</b> and classifier <b>116</b> may use body-pose and shape to determine activities performed by the driver that relate to the driver's hands (e.g., texting, hands on/off wheel, drinking or eating, etc.).</p><p id="p-0045" num="0044">The input into the hand activity recognition network <b>114</b> may be a cropped portion of an image (e.g., the image provided as input to the body-pose estimator and shape reconstructor <b>102</b>) that is within the hand bounding box <b>112</b>. The hand bounding box image may normalize the position of a hand by centering the bounding box on the hand. The crop of the image for the hand bounding box can be estimated based on a wrist position (e.g., from the body-pose estimation and shape reconstruction network). In particular, the direction of the elbow and/or wrist body key points may be used to estimate the placement of the bounding box. Using such information, the hand key point may be centered in the hand bounding box. In some embodiments, the hand bounding box <b>112</b> may also use body key point labels (e.g., center the left hand in a left hand bounding box when a right hand is also visible in the crop). Based on the limb line (e.g., between the elbow and wrist body key points, between the neck and torso, and/or between the shoulder and elbow), the bounding box may be scaled. As such, the hand bounding box(es) input into the hand activity recognition network may all be of the same dimensionality&#x2014;e.g., when a bounding box has a different size, the hand bounding box may be manipulated to this predefined size.</p><p id="p-0046" num="0045">The hand activity recognition network <b>114</b> may receive an input of a hand bounding box for each hand (e.g., right hand bounding box and left hand bounding box). The same network may be used for both the right and left hand bounding boxes. The hand activity recognition network <b>114</b> may be used to output confidences for various classes in relation to a hand. For instance, the confidence can indicate the likelihood that the hand is performing a particular activity. Such activities may include texting, answering the phone, drinking or eating, operating the radio, hands on the steering wheel, hands off the steering wheel, etc. To determine the confidences for the various classes, one or more classifiers (e.g. via classifier <b>116</b>) may be used. The classified activities for the right and left hand may undergo further analysis, such as, for example, a priority may be associated with different activities such that when the right and left hand are classified as performing two different activities, one activity may be prioritized when determining some action to perform. In one example, when the right hand is classified as &#x201c;on wheel&#x201d; and the left hand is classified as &#x201c;off wheel,&#x201d; the &#x201c;on wheel&#x201d; classification may be prioritized such that the system does not perform any action. In a different example, when the right hand is classified as &#x201c;on wheel&#x201d; and the left hand is classified as &#x201c;texting,&#x201d; the &#x201c;texting&#x201d; classification may be prioritized such that the system issues an alert that texting must cease before manual control of the vehicle can be initiated.</p><p id="p-0047" num="0046">As an example and with reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, <figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts a visual representation of determining activities performed by a driver that relate to the driver's hands (e.g., texting, hands on/off wheel, drinking or eating, etc.), in accordance with some embodiments of the present disclosure. In particular, <figref idref="DRAWINGS">FIG. <b>4</b></figref> depicts driver <b>402</b> with a corresponding rig <b>404</b>. Corresponding rig <b>404</b> may comprise information such as body-pose and shape (e.g., as output by the body-pose estimation and shape reconstruction network of the body-pose estimator and shape reconstructor <b>102</b>). In particular, information such as body-pose and shape may include locations and/or angles of body key points (e.g., joints and/or key features). From the information, hand bounding box images (e.g., left hand image <b>406</b><i>b </i>and right hand image <b>408</b><i>b</i>) may be determined. For instance, a hand bounding box image (e.g., left hand image <b>406</b><i>b </i>and right hand image <b>408</b><i>b</i>) may be a crop of an image <b>400</b> around the hands of a driver (e.g., left hand <b>406</b><i>a </i>and right hand <b>408</b><i>a</i>). The crop of the image <b>400</b> for a hand bounding box may be estimated based on a wrist position (e.g., from rig <b>404</b>). In particular, the direction of the elbow and wrist body key points from rig <b>404</b> may be used to estimate the placement of the bounding box (e.g., left hand <b>406</b><i>a </i>and right hand <b>408</b><i>a</i>). As depicted, such information may be used such that the hand key point may be centered in the hand bounding box. In some embodiments, body key point labels from rig <b>404</b> may also be used (e.g., center the left hand in left hand bounding box <b>406</b><i>b </i>when a right hand is also visible in the crop).</p><p id="p-0048" num="0047">Such generation of left hand image <b>406</b><i>b </i>and right hand image <b>408</b><i>b </i>may be performed using, for example, the hand activity recognizer <b>110</b>. In particular, the hand bounding box <b>112</b> may be used to generate left hand image <b>406</b><i>b </i>and right hand image <b>408</b><i>b </i>from image <b>400</b>. In addition, left hand image <b>406</b><i>b </i>and right hand image <b>408</b><i>b </i>may be provided as input to the hand activity recognition network (e.g., hand recognition network <b>114</b> and a classifier <b>116</b>). Based on an analysis of the left hand image <b>406</b><i>b </i>and the right hand image <b>408</b><i>b</i>, one or more activities may be determined (e.g., using the classifier <b>116</b>). For instance, as depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, left hand <b>406</b><i>b </i>may be classified as &#x201c;off wheel&#x201d; and right hand <b>406</b><i>b </i>may be classified as &#x201c;off wheel.&#x201d; In this way, final activity <b>410</b> may be determined as hands &#x201c;off wheel.&#x201d;</p><p id="p-0049" num="0048">Referring now to <figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>F</figref>, <figref idref="DRAWINGS">FIGS. <b>5</b>A-<b>5</b>F</figref> depict visual representations of determining activities performed by a driver that relate to the driver's hands (e.g., texting, hands on/off wheel, drinking or eating, etc.), in accordance with some embodiments of the present disclosure. In particular, <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> depicts driver <b>502</b><i>a </i>with a corresponding rig <b>504</b><i>a </i>overlaid on image <b>500</b><i>a</i>. Information related to rig <b>504</b><i>a </i>may be used to determine an activity associated with left hand <b>506</b><i>a </i>and right hand <b>508</b><i>a</i>. For instance, the hand activity recognizer <b>110</b> may be used to determine an activity associated with left hand <b>506</b><i>a </i>and right hand <b>508</b><i>a</i>. As depicted in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> the activity associated with left hand <b>506</b><i>a </i>is &#x201c;on wheel&#x201d; and the activity associated with right hand <b>508</b><i>a </i>is &#x201c;on wheel.&#x201d;</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> depicts driver <b>502</b><i>b </i>with a corresponding rig <b>504</b><i>b </i>overlaid on image <b>500</b><i>b</i>. Information related to rig <b>504</b><i>b </i>may be used to determine an activity associated with left hand <b>506</b><i>b </i>and right hand <b>508</b><i>b</i>. For instance, the hand activity recognizer <b>110</b> may be used to determine an activity associated with left hand <b>506</b><i>b </i>and right hand <b>508</b><i>b</i>. As depicted in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> the activity associated with left hand <b>506</b><i>b </i>is &#x201c;on phone&#x201d; and the activity associated with right hand <b>508</b><i>b </i>is &#x201c;on wheel.&#x201d; These activities for the left hand <b>506</b><i>b </i>and right hand <b>508</b><i>b </i>may undergo further analysis, such as, for example, a priority may be associated with different activities such that when the right and left hand are classified as performing two different activities, one activity may be prioritized when determining some action to perform. For instance, as depicted in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, when the left hand <b>506</b><i>b </i>is classified as &#x201c;on phone&#x201d; and the right hand is classified as &#x201c;on wheel,&#x201d; the &#x201c;on phone&#x201d; activity may be prioritized. Based on this activity, the system may issue an alert that talking on the phone must cease before manual control of the vehicle can be initiated.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> depicts driver <b>502</b><i>c </i>with a corresponding rig <b>504</b><i>c </i>overlaid on image <b>500</b><i>c</i>. Information related to rig <b>504</b><i>c </i>may be used to determine an activity associated with left hand <b>506</b><i>c </i>and right hand <b>508</b><i>c</i>. For instance, the hand activity recognizer <b>110</b> may be used to determine an activity associated with left hand <b>506</b><i>c </i>and right hand <b>508</b><i>c</i>. As depicted in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref> the activity associated with left hand <b>506</b><i>c </i>is &#x201c;on wheel&#x201d; and the activity associated with right hand <b>508</b><i>c </i>is &#x201c;texting.&#x201d; These activities for the left hand <b>506</b><i>c </i>and right hand <b>508</b><i>c </i>may undergo further analysis, such as, for example, when the left hand <b>506</b><i>c </i>is classified as &#x201c;on wheel&#x201d; and the right hand is classified as &#x201c;texting,&#x201d; the &#x201c;texting&#x201d; activity may be prioritized. Based on this activity, the system may issue an alert that texting must cease before manual control of the vehicle can be initiated.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>5</b>D</figref> depicts driver <b>502</b><i>d </i>with a corresponding rig <b>504</b><i>d </i>overlaid on image <b>500</b><i>d</i>. Information related to rig <b>504</b><i>d </i>may be used to determine an activity associated with left hand <b>506</b><i>d </i>and right hand <b>508</b><i>d</i>. For instance, the hand activity recognizer <b>110</b> may be used to determine an activity associated with left hand <b>506</b><i>d </i>and right hand <b>508</b><i>d</i>. As depicted in <figref idref="DRAWINGS">FIG. <b>5</b>D</figref> the activity associated with left hand <b>506</b><i>d </i>is &#x201c;drinking&#x201d; and the activity associated with right hand <b>508</b><i>d </i>is &#x201c;on wheel.&#x201d; These activities for the left hand <b>506</b><i>d </i>and right hand <b>508</b><i>d </i>may undergo further analysis, such as, for example, when the left hand <b>506</b><i>d </i>is classified as &#x201c;drinking&#x201d; and the right hand is classified as &#x201c;on wheel,&#x201d; the &#x201c;drinking&#x201d; activity may be prioritized. Based on this activity, the system may issue an alert that drinking must cease before manual control of the vehicle can be initiated.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>5</b>E</figref> depicts driver <b>502</b><i>e </i>with a corresponding rig <b>504</b><i>e </i>overlaid on image <b>500</b><i>e</i>. Information related to rig <b>504</b><i>e </i>may be used to determine an activity associated with left hand <b>506</b><i>e </i>and right hand <b>508</b><i>e</i>. For instance, the hand activity recognizer <b>110</b> may be used to determine an activity associated with left hand <b>506</b><i>e </i>and right hand <b>508</b><i>e</i>. As depicted in <figref idref="DRAWINGS">FIG. <b>5</b>E</figref> the activity associated with left hand <b>506</b><i>e </i>is &#x201c;off wheel&#x201d; and the activity associated with right hand <b>508</b><i>e </i>is &#x201c;off wheel.&#x201d; Based on both hands being &#x201c;off wheel,&#x201d; the system may issue an alert for driver <b>502</b><i>e </i>to place hands on the wheel before manual control of the vehicle can be initiated.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>5</b>F</figref> depicts driver <b>502</b><i>f </i>with a corresponding rig <b>504</b><i>f </i>overlaid on image <b>500</b><i>f</i>. Information related to rig <b>504</b><i>f </i>may be used to determine an activity associated with left hand <b>506</b><i>f </i>and right hand <b>508</b><i>f</i>. For instance, the hand activity recognizer <b>110</b> may be used to determine an activity associated with left hand <b>506</b><i>f </i>and right hand <b>508</b><i>f</i>. As depicted in <figref idref="DRAWINGS">FIG. <b>5</b>F</figref> the activity associated with left hand <b>506</b><i>f </i>is &#x201c;on wheel&#x201d; and the activity associated with right hand <b>508</b><i>f </i>is &#x201c;off wheel.&#x201d; These activities for the left hand <b>506</b><i>f </i>and right hand <b>508</b><i>f </i>may undergo further analysis, such as, for example, when the left hand <b>506</b><i>d </i>is classified as &#x201c;on wheel&#x201d; and the right hand is classified as &#x201c;off wheel,&#x201d; the &#x201c;on wheel&#x201d; activity may be prioritized&#x2014;and no action may be taken, or handing control back to a driver may be enabled so long as &#x201c;on wheel&#x201d; is the prioritized determination.</p><p id="p-0055" num="0054">With reference again to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the system <b>100</b> may further comprise a body activity recognizer <b>118</b>. The body activity recognizer <b>118</b> may include frames <b>120</b> that may be used to receive an input of a set of frames (e.g., representative of a video with both temporal and spatial information related to body key points). The body activity recognizer <b>118</b> may also include a body activity recognition network <b>122</b> and classifier <b>124</b> (e.g., a DNN(s)). In some embodiments, the body activity recognition network <b>122</b> and classifier <b>124</b> may use information output by the body-pose estimator and shape reconstructor <b>102</b> (e.g., output <b>104</b>). For instance, the body activity recognition network <b>122</b> and classifier <b>124</b> may check whether a driver and/or passenger is engaged in one or more distracting activities. In particular, the body activity recognition network <b>122</b> and classifier <b>124</b> may use body-pose and shape to determine activities that are related to pose variation of the body over time that are performed by the driver and/or passengers. For instance, such body activities may include sudden sickness or fainting, fighting or aggressive behavior, normal behavior, etc.</p><p id="p-0056" num="0055">The body activity recognition network <b>122</b> may receive an input of skeletal reconstructions or body pose features corresponding to a set of frames <b>120</b> (e.g., representative of a video with both temporal and spatial information related to body key points). In analyzing this data corresponding to a set of frames, the body activity recognition network <b>122</b> may analyze the body of a driver and/or passenger over time. For instance, the position of a driver's body bending over for multiple frames (e.g., over time) may indicate sudden sickness. In particular, the network may receive body key points for each occupant in a vehicle over a time-window comprising the set of frames (e.g., T frames). Based on the classification of body posture and motion patterns during the set of frames, the body activity recognition network <b>122</b> may classify one or more activities.</p><p id="p-0057" num="0056">The body activity recognition network <b>122</b> may be used to output confidences for various classes in relation to the one or more activities. For instance, the confidence can indicate the likelihood that a driver and/or passenger is performing a particular activity. Such activities may include sudden sickness or fainting, fighting or aggressive behavior, normal behavior, etc. To determine the confidences for the various activities, one or more classifiers may be used.</p><p id="p-0058" num="0057">An example process for identifying a body activity is illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, in accordance with some embodiments of the present disclosure. Body Network <b>122</b>A may correspond to one example architecture for body network <b>122</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For example, a sequence of poses <b>302</b> each having some number of key points may be converted into an image-like representation <b>304</b>. For instance, to determine pose information for use in identifying a body activity, a temporal dimension <b>306</b> may be encoded as a vertical axis while key body points (e.g., joints) <b>308</b> may be encoded as a horizontal axis. Using this information, coordinates of each point, for instance, (x,y) for 2D or (x,y,z) for 3D may be used as channels. 2D convolutions <b>310</b> may then be used to extract patterns from the temporal sequence of key body points (e.g., joints). In addition, localized visual information may be encoded as appearance features. These appearance features may be extracted by multiplying each channel from a tensor of multi-task features by each channel from probability maps <b>312</b> (e.g., learned as a byproduct of the pose estimation process). The spatial dimension may then be collapsed using a sum to result in an appearance feature for a time, and appearance features maps for a sequence of frames may be concatenated to generate a video clip of appearance features <b>314</b>.</p><p id="p-0059" num="0058">Referring now to <figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>B</figref>, <figref idref="DRAWINGS">FIGS. <b>6</b>A-<b>6</b>B</figref> depict visual representations of determining activities performed by a driver that relate to the driver's body (e.g., sudden sickness or fainting, fighting or aggressive behavior, normal behavior, etc.), in accordance with some embodiments of the present disclosure. In particular, <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> depicts driver <b>602</b><i>a </i>with a corresponding rig <b>604</b><i>a </i>overlaid on image <b>600</b><i>a</i>. Rig <b>604</b><i>a </i>may comprise information such as body-pose and shape (e.g., as output by the body-pose estimation and shape reconstruction network of the body-pose estimator and shape reconstructor <b>102</b>). In particular, information such as body-pose and shape may include locations and/or angles of body key points (e.g., joints and/or key features). In addition, image <b>600</b><i>a </i>may be representative of a frame in a set of frames (e.g., representative of a video with both temporal and spatial information related to body key points).</p><p id="p-0060" num="0059">In embodiments, to determine an activity performed by driver <b>602</b><i>a</i>, the body activity recognizer <b>118</b> may be used to analyze image <b>600</b><i>a</i>&#x2014; or a rig determined therefrom&#x2014;that may correspond to a frame from a set of frames. In particular, the body activity recognition network <b>122</b> and classifier <b>124</b> of the body activity recognizer <b>118</b> may use rig <b>604</b><i>a </i>to check whether driver <b>604</b><i>a </i>is engaged in one or more distracting activities. For instance, the body activity recognition network <b>122</b> and classifier <b>124</b> may use rig <b>604</b><i>a </i>to determine activities that are related to pose variation of the driver <b>604</b><i>a </i>over time. For instance, as depicted in image <b>600</b><i>a</i>, the driver <b>604</b><i>a </i>is performing the activity &#x201c;normal behavior.&#x201d;</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> depicts driver <b>602</b><i>b </i>with a corresponding rig <b>604</b><i>b </i>overlaid on image <b>600</b><i>b</i>. The body activity recognition network <b>122</b> and classifier <b>124</b> of the body activity recognizer <b>118</b> may use rig <b>604</b><i>b </i>(in addition to one or more rigs from other frames in a set of frames) to check whether driver <b>604</b><i>b </i>is engaged in one or more distracting activities. For instance, the body activity recognition network <b>122</b> and classifier <b>124</b> may use rig <b>604</b><i>b </i>to determine activities that are related to pose variation of the driver <b>604</b><i>b </i>over time. For instance, as depicted in image <b>600</b><i>b</i>, the driver <b>604</b><i>b </i>is performing an activity indicative of &#x201c;sudden sickness.&#x201d; Based on the determined &#x201c;sudden sickness&#x201d; activity, the system may issue an alert (e.g., call emergency services) and/trigger an emergency safety maneuver for the vehicle (e.g., braking, moving the vehicle to the side of the road, coming to a complete stop, etc.).</p><p id="p-0062" num="0061">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the system <b>100</b> may include a safety actuator <b>126</b> that may be used to send audio and/or visual notifications based on an identified activity in the vehicle (e.g., hands on wheel reminder), and/or to aid in control or actuation decisions (e.g., to activate or deactivate autonomous driving, to execute a safety procedure, etc.). In addition, the safety actuator <b>126</b> may carry out one or more actions <b>128</b> based on an identified activity in the vehicle (e.g., contacting emergency services when sudden sickness detected, deactivating air-bags based on body position or size, etc.). In some embodiments, audio notifications may be customized based on a level of driver disengagement related to a particular activity. For instance, such audio notifications may relate to activities such as distracted driver notifications for as texting, answering a phone, reading, etc.</p><p id="p-0063" num="0062">Although examples are described herein with respect to using DNNs, and specifically convolutional neural networks (CNNs), as the body-pose estimator and shape reconstructor <b>102</b>, the hand network <b>114</b>, and the body network <b>122</b>, this is not intended to be limiting. For example, and without limitation, the DNNs may include any type of machine learning model, such as a machine learning model(s) using linear regression, logistic regression, decision trees, support vector machines (SVM), Na&#xef;ve Bayes, k-nearest neighbor (Knn), K means clustering, random forest, dimensionality reduction algorithms, gradient boosting algorithms, neural networks (e.g., auto-encoders, convolutional, recurrent, perceptrons, long/short term memory/LSTM, Hopfield, Boltzmann, deep belief, deconvolutional, generative adversarial, liquid state machine, etc.), areas of interest detection algorithms, computer vision algorithms, and/or other types of machine learning models.</p><p id="p-0064" num="0063">As an example, such as where the DNNs include a CNN, the DNNs may include any number of layers. One or more of the layers may include an input layer. The input layer may hold values associated with the sensor data (e.g., before or after post-processing). For example, when the sensor data is an image, the input layer may hold values representative of the raw pixel values of the image(s) as a volume (e.g., a width, a height, and color channels (e.g., RGB), such as 32&#xd7;32&#xd7;3).</p><p id="p-0065" num="0064">One or more layers may include convolutional layers. The convolutional layers may compute the output of neurons that are connected to local regions in an input layer, each neuron computing a dot product between their weights and a small region they are connected to in the input volume. A result of the convolutional layers may be another volume, with one of the dimensions based on the number of filters applied (e.g., the width, the height, and the number of filters, such as 32&#xd7;32&#xd7;12, if 12 were the number of filters).</p><p id="p-0066" num="0065">One or more of the layers may include a rectified linear unit (ReLU) layer. The ReLU layer(s) may apply an elementwise activation function, such as the max (0, x), thresholding at zero, for example. The resulting volume of a ReLU layer may be the same as the volume of the input of the ReLU layer.</p><p id="p-0067" num="0066">One or more of the layers may include a pooling layer. The pooling layer may perform a down sampling operation along the spatial dimensions (e.g., the height and the width), which may result in a smaller volume than the input of the pooling layer (e.g., 16&#xd7;16&#xd7;12 from the 32&#xd7;32&#xd7;12 input volume).</p><p id="p-0068" num="0067">One or more of the layers may include one or more fully connected layer(s). Each neuron in the fully connected layer(s) may be connected to each of the neurons in the previous volume. The fully connected layer may compute class scores, and the resulting volume may be 1&#xd7;1&#xd7;number of classes. In some examples, the CNN may include a fully connected layer(s) such that the output of one or more of the layers of the CNN may be provided as input to a fully connected layer(s) of the CNN. In some examples, one or more convolutional streams may be implemented by the machine learning model(s) <b>104</b>, and some or all of the convolutional streams may include a respective fully connected layer(s).</p><p id="p-0069" num="0068">In some non-limiting embodiments, the DNNs may include a series of convolutional and max pooling layers to facilitate image feature extraction, followed by multi-scale dilated convolutional and up-sampling layers to facilitate global context feature extraction.</p><p id="p-0070" num="0069">Although input layers, convolutional layers, pooling layers, ReLU layers, and fully connected layers are discussed herein with respect to the DNNs, this is not intended to be limiting. For example, additional or alternative layers may be used in the DNNs, such as normalization layers, SoftMax layers, and/or other layer types.</p><p id="p-0071" num="0070">In embodiments where the DNNs includes a CNN, different orders and numbers of the layers of the CNN may be used depending on the embodiment. In other words, the order and number of layers of the DNNs is not limited to any one architecture.</p><p id="p-0072" num="0071">In addition, some of the layers may include parameters (e.g., weights and/or biases), such as the convolutional layers and the fully connected layers, while others may not, such as the ReLU layers and pooling layers. In some examples, the parameters may be learned by the DNNs during training. Further, some of the layers may include additional hyper-parameters (e.g., learning rate, stride, epochs, etc.), such as the convolutional layers, the fully connected layers, and the pooling layers, while other layers may not, such as the ReLU layers. The parameters and hyper-parameters are not to be limited and may differ depending on the embodiment.</p><p id="p-0073" num="0072">Now referring to <figref idref="DRAWINGS">FIGS. <b>7</b>, <b>8</b>, and <b>9</b></figref>, each block of methods <b>700</b>, <b>800</b>, and <b>900</b>, described herein, comprises a computing process that may be performed using any combination of hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory. The methods <b>700</b>, <b>800</b>, and <b>900</b> may also be embodied as computer-usable instructions stored on computer storage media. The methods <b>700</b>, <b>800</b>, and <b>900</b> may be provided by a standalone application, a service or hosted service (standalone or in combination with another hosted service), or a plug-in to another product, to name a few. In addition, methods <b>700</b>, <b>800</b>, and <b>900</b> is described, by way of example, with respect to the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the vehicle <b>1000</b> of <figref idref="DRAWINGS">FIGS. <b>10</b>A-<b>10</b>D</figref>. However, these methods <b>700</b>, <b>800</b>, and <b>900</b> may additionally or alternatively be executed by any one system, or any combination of systems, including, but not limited to, those described herein.</p><p id="p-0074" num="0073">With reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, <figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram showing a method <b>700</b> for performing actions based on a position and size of an occupant within a vehicle, in accordance with some embodiments of the present disclosure. The method <b>700</b>, at block B<b>702</b>, includes applying, to a DNN, image data representative of an image of an occupant of a vehicle. For example, the image data may be applied to the body-pose estimation and shape reconstruction network related to the body-pose estimator and shape reconstructor <b>102</b>. In particular, the body-pose estimator and shape reconstructor <b>102</b> may receive image data representative of an image of an occupant in a vehicle and apply the image data to the body-pose estimation and shape reconstruction network. Such image data may be raw and/or pre-processed images (e.g., of the occupant inside the vehicle). As an example, the image data representative of an image may be a full frame containing the occupant.</p><p id="p-0075" num="0074">The method <b>700</b>, at block B<b>704</b>, includes computing, using the DNN, data indicative of key point locations corresponding to an occupant. Such data indicative of key point locations may be estimated locations and/or angles of body key points (e.g., joints and/or key features), such as, for non-limiting examples, locations of wrists, elbows, shoulders, hips, knees, feet, neck, eyes, ears, nose, etc. In addition, such data may further comprise body key point tags and/or labels (e.g., the elbow body key point may be tagged &#x201c;left elbow&#x201d;). Such computing of the data indicative of key point locations may be performed using, for example, the body-pose estimator and shape reconstructor <b>102</b>.</p><p id="p-0076" num="0075">The method <b>700</b>, at block B<b>706</b>, includes reconstructing a shape and volume corresponding to the occupant. For example, the date indicative of key point locations corresponding to the occupant may be used to connect the key points according to an anatomical structure of a body, and the anatomical structure may be processed to reconstruct a shape and volume corresponding to the occupant (e.g., a body pose of the occupant). This shape reconstruction may correspond to a reconstruction of the body key points by shape and volume (e.g., an estimated shape of the occupant(s) including clothing and apparel, in embodiments). In addition, the reconstruction may correspond to a non-rigid deformation (e.g., a space-time coherent non-rigid deformation) of a surface corresponding to the occupant(s). Such reconstruction of a shape and volume of the occupant may be performed using, for example, the body-pose estimator and shape reconstructor <b>102</b>. For instance, a DNN(s) and/or a post-processing algorithm may be used.</p><p id="p-0077" num="0076">The method <b>700</b>, at block B<b>708</b>, includes estimating a position of the occupant and a size of the occupant. For instance, the reconstructed shape and volume of the occupant may be used to estimate a position and size of the occupant. To estimate the position and size of the occupant, the body position and size estimator <b>106</b> may be used. In embodiments, the body position and size estimator <b>106</b> may use a trained body position network (e.g., a DNN(s)). In particular, the body position network may be used to analyze the position of drivers and/or passengers in a vehicle to determine if the body position is abnormal.</p><p id="p-0078" num="0077">The method <b>700</b>, at block B<b>710</b>, includes performing action(s) based on the position and size of the occupant. For example, the estimated body size and/or position may be used to make determinations such as whether a body pose is normal, whether a driver or passenger is in a position where airbags may safely be deployed, whether a driver or passenger is a size where airbags may safely be deployed (e.g., child v. adult), seat occupancy in a vehicle, etc. Actions may be performed using, for example the safety actuator <b>126</b>. For instance, the safety actuator <b>126</b> may be used to send audio and/or visual notifications based on an identified activity in the vehicle (e.g., hands on wheel reminder), aid in control or actuation decisions (e.g., to activate or deactivate autonomous driving, to execute a safety procedure, etc.). In addition, the safety actuator <b>126</b> may carry out one or more actions based on the estimated position and size of the occupant (e.g., deactivating air-bags based on body position or size, etc.).</p><p id="p-0079" num="0078">With reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, <figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow diagram showing a method <b>800</b> for performing actions based on one or more activities that relate to a person's hands that are performed by the person inside a vehicle, in accordance with some embodiments of the present disclosure. The method <b>800</b>, at block B<b>802</b>, includes applying, to a first DNN, image data representative of an image of a field of view of an interior of a vehicle including a person. For example, image data may be applied to the body-pose estimation and shape reconstruction network related to the body-pose estimator and shape reconstructor <b>102</b>. In particular, the body-pose estimator and shape reconstructor <b>102</b> may receive image data representative of an image of a field of view of an interior of a vehicle including a person and apply the image data to the body-pose estimation and shape reconstruction network. Such image data may be raw and/or pre-processed images (e.g., of the person inside the vehicle). As an example, the image data representative of an image may be a full frame of the interior of the vehicle containing the person.</p><p id="p-0080" num="0079">The method <b>800</b>, at block B<b>804</b>, includes computing, using the first DNN, first data representative of a first location and a first angle associated with a left wrist of the person and a second location and a second angle associated with a right wrist of the person. The first data representative of the first location the first angle associated with the first point may relate to body key point locations and associated angles of body key points (e.g., related to the left wrist and/or the left elbow). The second data representative of the second location the second angle associated with the second point may relate to body key point locations and associated angles of body key points (e.g., related to the right wrist and/or the right elbow). For example, the left wrist key point and the left elbow key point may be connected to form a line, and the angle of the line may correspond to the first angle. Similarly, the right wrist and the right elbow key points may be used to determine the second angle. Such data may be computed using, for example, the body-pose estimator and shape reconstructor <b>102</b>.</p><p id="p-0081" num="0080">The method <b>800</b>, at block B<b>806</b>, includes generating a first cropped image from the image that corresponds to the left hand of the person. The first cropped image may be generated, for example, using hand bounding box <b>112</b> generated by the hand activity recognizer <b>110</b>. In particular, the first cropped image may normalize the position of the left hand by centering a bounding box on the left hand. For instance, the first cropped image may be estimated based on the first data representative of the first location and the first angle associated with the line between the left wrist and left elbow key points. In particular, the direction of the elbow and wrist body key points may be used to estimate the placement of the bounding box to generate the first cropped image. Using such information, the left hand of the person may be centered in the first cropped image.</p><p id="p-0082" num="0081">The method <b>800</b>, at block B<b>808</b>, includes generating a second cropped image from the image that corresponds to the right hand of the person. The second cropped image may normalize the position of the right hand by centering a bounding box on the right hand. For instance, the second cropped image may be estimated based on the second data representative of the second location and the second angle associated with a line between the right wrist and right elbow key points. In particular, the direction of the elbow and wrist body key points may be used to estimate the placement of the bounding box to generate the second cropped image. Using such information, the right hand of the person may be centered in the second cropped image.</p><p id="p-0083" num="0082">The method <b>800</b>, at block B<b>810</b>, includes applying, to a second DNN, second data representative of the first cropped image and the second cropped image. For example, the first cropped image and the second cropped image may be applied to the hand network <b>114</b>.</p><p id="p-0084" num="0083">The method <b>800</b>, at block B<b>812</b>, includes computing, using the second DNN, third data indicative of a first activity corresponding to the left hand and a second activity corresponding to the right hand. In particular, the hand activity recognition network <b>114</b> may output confidences for various classes in relation to each hand. For instance, the confidence can indicate the likelihood that each hand is performing a particular activity. Such activities may include texting, answering the phone, drinking or eating, operating the radio, hands on the steering wheel, hands off the steering wheel, etc. To determine the confidences for the various classes, one or more classifiers (e.g. the classifier <b>116</b>) may be used.</p><p id="p-0085" num="0084">The method <b>800</b>, at block B<b>814</b>, includes performing an action. In particular, the first activity corresponding to the left hand and the second activity corresponding to the right hand may be used to make determinations such as whether the person inside the vehicle is engaged in one or more distracting activities. Actions may be performed using, for example the safety actuator <b>126</b>. For instance, the safety actuator <b>126</b> may be used to send audio and/or visual notifications based on an identified activity in the vehicle (e.g., hands on wheel reminder), aid in control or actuation decisions (e.g., to activate or deactivate autonomous driving, to execute a safety procedure, etc.). In addition, the safety actuator <b>126</b> may carry out one or more actions based on the first and second activity.</p><p id="p-0086" num="0085">In embodiments, the first and second activities for the right and left hand may undergo further analysis prior to performing the action, such as, for example, a priority may be associated with different activities such that when the right and left hand are classified as performing two different activities, one activity may be prioritized when determining some action to perform. In one example, when the right hand is classified as &#x201c;on wheel&#x201d; and the left hand is classified as &#x201c;off wheel,&#x201d; the &#x201c;on wheel&#x201d; classification may be prioritized such that the system does not perform any action. In a different example, when the right hand is classified as &#x201c;on wheel&#x201d; and the left hand is classified as &#x201c;texting,&#x201d; the &#x201c;texting&#x201d; classification may be prioritized such that the system issues an alert that texting must cease before manual control of the vehicle can be initiated.</p><p id="p-0087" num="0086">Now referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, <figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow diagram showing a method <b>900</b> for performing actions based on an activity of an occupant within a vehicle, in accordance with some embodiments of the present disclosure. The method <b>900</b>, at block B<b>902</b>, includes applying, to a first DNN, image data representative of a temporal sequence of images over a time window captured using a camera having a field of view of an interior of a vehicle including an occupant. In particular, the image data may be applied to a DNN. In embodiments, the DDN may be a body-pose estimation and shape reconstruction network related to the body-pose estimator and shape reconstructor <b>102</b>. In particular, the body-pose estimator and shape reconstructor <b>102</b> may receive image data representative of an image of an occupant in a vehicle and apply the image data to the body-pose estimation and shape reconstruction network. Such image data may be raw and/or pre-processed images (e.g., of the occupant inside the vehicle). As an example, the image data representative of an image may be a full frame containing the occupant.</p><p id="p-0088" num="0087">The method <b>900</b>, at block B<b>904</b>, includes computing first data representative of key points corresponding to the occupant for each image of the temporal sequence of images. Such data indicative of key point locations may be estimated locations and/or angles of body key points (e.g., joints and/or key features), such as, for non-limiting examples, locations of wrists, elbows, shoulders, hips, knees, feet, neck, eyes, ears, nose, etc. In addition, such data may further comprise body key point tags and/or labels (e.g., the elbow body key point may be tagged &#x201c;left elbow&#x201d;). Such computing of the data indicative of key point locations may be performed using, for example, the body-pose estimator and shape reconstructor <b>102</b>.</p><p id="p-0089" num="0088">The method <b>900</b>, at block B<b>906</b>, includes generating skeletal reconstructions for each of the temporal sequence of images. For example, the date indicative of key point locations corresponding to the occupant may be used to connect the key points according to an anatomical structure of a body, and the anatomical structure may be processed to generate a skeletal reconstruction corresponding to the occupant (e.g. a body pose of the occupant). This skeletal reconstruction may correspond to a reconstruction of the body key points by shape and volume (e.g., an estimated shape of the occupant(s) including clothing and apparel, in embodiments). In addition, the reconstruction may correspond to a non-rigid deformation (e.g., a space-time coherent non-rigid deformation) of a surface corresponding to the occupant(s). Such reconstruction of a shape and volume of the occupant may be performed using, for example, the body-pose estimator and shape reconstructor <b>102</b>. For instance, a DNN(s) and/or a post-processing algorithm may be used.</p><p id="p-0090" num="0089">The method <b>900</b>, at block B<b>908</b>, includes applying second data representative of a tensor corresponding to each of the skeletal reconstructions for the temporal sequence of images. For example, data corresponding to a combination of the skeletal reconstructions of the sequence of images may be applied as a single input tensor to the body network <b>122</b>.</p><p id="p-0091" num="0090">The method <b>900</b>, at block B<b>910</b>, includes computing third data indicative of an activity of the occupant. In particular, an activity of the occupant may be computed. Such activities may relate to pose variation of the body of the occupant over time. Such activities may include sudden sickness or fainting, fighting or aggressive behavior, normal behavior, etc. In such embodiments, the body activity recognizer <b>118</b> may be used to compute the third data indicative of the activity of the occupant.</p><p id="p-0092" num="0091">The method <b>900</b>, at block B<b>912</b>, includes performing action(s) based on the activity. Actions may be performed using, for example, the safety actuator <b>126</b>. For instance, the safety actuator <b>126</b> may be used to send audio and/or visual notifications based on an identified activity in the vehicle (e.g., hands on wheel reminder), aid in control or actuation decisions (e.g., to activate or deactivate autonomous driving, to execute a safety procedure, etc.). In instances where the activities relate to the body of the occupant, the safety actuator <b>126</b> may perform the action(s) based on a body size and/or position.</p><heading id="h-0006" level="1">Example Autonomous Vehicle</heading><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> is an illustration of an example autonomous vehicle <b>1000</b>, in accordance with some embodiments of the present disclosure. The autonomous vehicle <b>1000</b> (alternatively referred to herein as the &#x201c;vehicle <b>1000</b>&#x201d;) may include, without limitation, a passenger vehicle, such as a car, a truck, a bus, a first responder vehicle, a shuttle, an electric or motorized bicycle, a motorcycle, a fire truck, a police vehicle, an ambulance, a boat, a construction vehicle, an underwater craft, a drone, and/or another type of vehicle (e.g., that is unmanned and/or that accommodates one or more passengers). Autonomous vehicles are generally described in terms of automation levels, defined by the National Highway Traffic Safety Administration (NHTSA), a division of the US Department of Transportation, and the Society of Automotive Engineers (SAE) &#x201c;Taxonomy and Definitions for Terms Related to Driving Automation Systems for On-Road Motor Vehicles&#x201d; (Standard No. J3016-201806, published on Jun. 15, 2018, Standard No. J3016-201609, published on Sep. 30, 2016, and previous and future versions of this standard). The vehicle <b>1000</b> may be capable of functionality in accordance with one or more of Level 3-Level 5 of the autonomous driving levels. For example, the vehicle <b>1000</b> may be capable of conditional automation (Level 3), high automation (Level 4), and/or full automation (Level 5), depending on the embodiment.</p><p id="p-0094" num="0093">The vehicle <b>1000</b> may include components such as a chassis, a vehicle body, wheels (e.g., 2, 4, 6, 8, 18, etc.), tires, axles, and other components of a vehicle. The vehicle <b>1000</b> may include a propulsion system <b>1050</b>, such as an internal combustion engine, hybrid electric power plant, an all-electric engine, and/or another propulsion system type. The propulsion system <b>1050</b> may be connected to a drive train of the vehicle <b>1000</b>, which may include a transmission, to enable the propulsion of the vehicle <b>1000</b>. The propulsion system <b>1050</b> may be controlled in response to receiving signals from the throttle/accelerator <b>1052</b>.</p><p id="p-0095" num="0094">A steering system <b>1054</b>, which may include a steering wheel, may be used to steer the vehicle <b>1000</b> (e.g., along a desired path or route) when the propulsion system <b>1050</b> is operating (e.g., when the vehicle is in motion). The steering system <b>1054</b> may receive signals from a steering actuator <b>1056</b>. The steering wheel may be optional for full automation (Level 5) functionality.</p><p id="p-0096" num="0095">The brake sensor system <b>1046</b> may be used to operate the vehicle brakes in response to receiving signals from the brake actuators <b>1048</b> and/or brake sensors.</p><p id="p-0097" num="0096">Controller(s) <b>1036</b>, which may include one or more system on chips (SoCs) <b>1004</b> (<figref idref="DRAWINGS">FIG. <b>10</b>C</figref>) and/or GPU(s), may provide signals (e.g., representative of commands) to one or more components and/or systems of the vehicle <b>1000</b>. For example, the controller(s) may send signals to operate the vehicle brakes via one or more brake actuators <b>1048</b>, to operate the steering system <b>1054</b> via one or more steering actuators <b>1056</b>, to operate the propulsion system <b>1050</b> via one or more throttle/accelerators <b>1052</b>. The controller(s) <b>1036</b> may include one or more onboard (e.g., integrated) computing devices (e.g., supercomputers) that process sensor signals, and output operation commands (e.g., signals representing commands) to enable autonomous driving and/or to assist a human driver in driving the vehicle <b>1000</b>. The controller(s) <b>1036</b> may include a first controller <b>1036</b> for autonomous driving functions, a second controller <b>1036</b> for functional safety functions, a third controller <b>1036</b> for artificial intelligence functionality (e.g., computer vision), a fourth controller <b>1036</b> for infotainment functionality, a fifth controller <b>1036</b> for redundancy in emergency conditions, and/or other controllers. In some examples, a single controller <b>1036</b> may handle two or more of the above functionalities, two or more controllers <b>1036</b> may handle a single functionality, and/or any combination thereof.</p><p id="p-0098" num="0097">The controller(s) <b>1036</b> may provide the signals for controlling one or more components and/or systems of the vehicle <b>1000</b> in response to sensor data received from one or more sensors (e.g., sensor inputs). The sensor data may be received from, for example and without limitation, global navigation satellite systems sensor(s) <b>1058</b> (e.g., Global Positioning System sensor(s)), RADAR sensor(s) <b>1060</b>, ultrasonic sensor(s) <b>1062</b>, LIDAR sensor(s) <b>1064</b>, inertial measurement unit (IMU) sensor(s) <b>1066</b> (e.g., accelerometer(s), gyroscope(s), magnetic compass(es), magnetometer(s), etc.), microphone(s) <b>1096</b>, stereo camera(s) <b>1068</b>, wide-view camera(s) <b>1070</b> (e.g., fisheye cameras), infrared camera(s) <b>1072</b>, surround camera(s) <b>1074</b> (e.g., 360 degree cameras), long-range and/or mid-range camera(s) <b>1098</b>, speed sensor(s) <b>1044</b> (e.g., for measuring the speed of the vehicle <b>1000</b>), vibration sensor(s) <b>1042</b>, steering sensor(s) <b>1040</b>, brake sensor(s) (e.g., as part of the brake sensor system <b>1046</b>), and/or other sensor types.</p><p id="p-0099" num="0098">One or more of the controller(s) <b>1036</b> may receive inputs (e.g., represented by input data) from an instrument cluster <b>1032</b> of the vehicle <b>1000</b> and provide outputs (e.g., represented by output data, display data, etc.) via a human-machine interface (HMI) display <b>1034</b>, an audible annunciator, a loudspeaker, and/or via other components of the vehicle <b>1000</b>. The outputs may include information such as vehicle velocity, speed, time, map data (e.g., the HD map <b>1022</b> of <figref idref="DRAWINGS">FIG. <b>10</b>C</figref>), location data (e.g., the vehicle's <b>1000</b> location, such as on a map), direction, location of other vehicles (e.g., an occupancy grid), information about objects and status of objects as perceived by the controller(s) <b>1036</b>, etc. For example, the HMI display <b>1034</b> may display information about the presence of one or more objects (e.g., a street sign, caution sign, traffic light changing, etc.), and/or information about driving maneuvers the vehicle has made, is making, or will make (e.g., changing lanes now, taking exit <b>34</b>B in two miles, etc.).</p><p id="p-0100" num="0099">The vehicle <b>1000</b> further includes a network interface <b>1024</b> which may use one or more wireless antenna(s) <b>1026</b> and/or modem(s) to communicate over one or more networks. For example, the network interface <b>1024</b> may be capable of communication over LTE, WCDMA, UMTS, GSM, CDMA2000, etc. The wireless antenna(s) <b>1026</b> may also enable communication between objects in the environment (e.g., vehicles, mobile devices, etc.), using local area network(s), such as Bluetooth, Bluetooth LE, Z-Wave, ZigBee, etc., and/or low power wide-area network(s) (LPWANs), such as LoRaWAN, SigFox, etc.</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> is an example of camera locations and fields of view for the example autonomous vehicle <b>1000</b> of <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in accordance with some embodiments of the present disclosure. The cameras and respective fields of view are one example embodiment and are not intended to be limiting. For example, additional and/or alternative cameras may be included and/or the cameras may be located at different locations on the vehicle <b>1000</b>.</p><p id="p-0102" num="0101">The camera types for the cameras may include, but are not limited to, digital cameras that may be adapted for use with the components and/or systems of the vehicle <b>1000</b>. The camera(s) may operate at automotive safety integrity level (ASIL) B and/or at another ASIL. The camera types may be capable of any image capture rate, such as 60 frames per second (fps), 1020 fps, 240 fps, etc., depending on the embodiment. The cameras may be capable of using rolling shutters, global shutters, another type of shutter, or a combination thereof. In some examples, the color filter array may include a red clear clear clear (RCCC) color filter array, a red clear clear blue (RCCB) color filter array, a red blue green clear (RBGC) color filter array, a Foveon X3 color filter array, a Bayer sensors (RGGB) color filter array, a monochrome sensor color filter array, and/or another type of color filter array. In some embodiments, clear pixel cameras, such as cameras with an RCCC, an RCCB, and/or an RBGC color filter array, may be used in an effort to increase light sensitivity.</p><p id="p-0103" num="0102">In some examples, one or more of the camera(s) may be used to perform advanced driver assistance systems (ADAS) functions (e.g., as part of a redundant or fail-safe design). For example, a Multi-Function Mono Camera may be installed to provide functions including lane departure warning, traffic sign assist and intelligent headlamp control. One or more of the camera(s) (e.g., all of the cameras) may record and provide image data (e.g., video) simultaneously.</p><p id="p-0104" num="0103">One or more of the cameras may be mounted in a mounting assembly, such as a custom designed (3-D printed) assembly, in order to cut out stray light and reflections from within the car (e.g., reflections from the dashboard reflected in the windshield mirrors) which may interfere with the camera's image data capture abilities. With reference to wing-mirror mounting assemblies, the wing-mirror assemblies may be custom 3-D printed so that the camera mounting plate matches the shape of the wing-mirror. In some examples, the camera(s) may be integrated into the wing-mirror. For side-view cameras, the camera(s) may also be integrated within the four pillars at each corner of the cabin.</p><p id="p-0105" num="0104">Cameras with a field of view that include portions of the environment in front of the vehicle <b>1000</b> (e.g., front-facing cameras) may be used for surround view, to help identify forward facing paths and obstacles, as well aid in, with the help of one or more controllers <b>1036</b> and/or control SoCs, providing information critical to generating an occupancy grid and/or determining the preferred vehicle paths. Front-facing cameras may be used to perform many of the same ADAS functions as LIDAR, including emergency braking, pedestrian detection, and collision avoidance. Front-facing cameras may also be used for ADAS functions and systems including Lane Departure Warnings (&#x201c;LDW&#x201d;), Autonomous Cruise Control (&#x201c;ACC&#x201d;), and/or other functions such as traffic sign recognition.</p><p id="p-0106" num="0105">A variety of cameras may be used in a front-facing configuration, including, for example, a monocular camera platform that includes a CMOS (complementary metal oxide semiconductor) color imager. Another example may be a wide-view camera(s) <b>1070</b> that may be used to perceive objects coming into view from the periphery (e.g., pedestrians, crossing traffic or bicycles). Although only one wide-view camera is illustrated in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>, there may any number of wide-view cameras <b>1070</b> on the vehicle <b>1000</b>. In addition, long-range camera(s) <b>1098</b> (e.g., a long-view stereo camera pair) may be used for depth-based object detection, especially for objects for which a neural network has not yet been trained. The long-range camera(s) <b>1098</b> may also be used for object detection and classification, as well as basic object tracking.</p><p id="p-0107" num="0106">One or more stereo cameras <b>1068</b> may also be included in a front-facing configuration. The stereo camera(s) <b>1068</b> may include an integrated control unit comprising a scalable processing unit, which may provide a programmable logic (FPGA) and a multi-core micro-processor with an integrated CAN or Ethernet interface on a single chip. Such a unit may be used to generate a 3-D map of the vehicle's environment, including a distance estimate for all the points in the image. An alternative stereo camera(s) <b>1068</b> may include a compact stereo vision sensor(s) that may include two camera lenses (one each on the left and right) and an image processing chip that may measure the distance from the vehicle to the target object and use the generated information (e.g., metadata) to activate the autonomous emergency braking and lane departure warning functions. Other types of stereo camera(s) <b>1068</b> may be used in addition to, or alternatively from, those described herein.</p><p id="p-0108" num="0107">Cameras with a field of view that include portions of the environment to the side of the vehicle <b>1000</b> (e.g., side-view cameras) may be used for surround view, providing information used to create and update the occupancy grid, as well as to generate side impact collision warnings. For example, surround camera(s) <b>1074</b> (e.g., four surround cameras <b>1074</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>) may be positioned to on the vehicle <b>1000</b>. The surround camera(s) <b>1074</b> may include wide-view camera(s) <b>1070</b>, fisheye camera(s), 360 degree camera(s), and/or the like. Four example, four fisheye cameras may be positioned on the vehicle's front, rear, and sides. In an alternative arrangement, the vehicle may use three surround camera(s) <b>1074</b> (e.g., left, right, and rear), and may leverage one or more other camera(s) (e.g., a forward-facing camera) as a fourth surround view camera.</p><p id="p-0109" num="0108">Cameras with a field of view that include portions of the environment to the rear of the vehicle <b>1000</b> (e.g., rear-view cameras) may be used for park assistance, surround view, rear collision warnings, and creating and updating the occupancy grid. A wide variety of cameras may be used including, but not limited to, cameras that are also suitable as a front-facing camera(s) (e.g., long-range and/or mid-range camera(s) <b>1098</b>, stereo camera(s) <b>1068</b>), infrared camera(s) <b>1072</b>, etc.), as described herein.</p><p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. <b>10</b>C</figref> is a block diagram of an example system architecture for the example autonomous vehicle <b>1000</b> of <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in accordance with some embodiments of the present disclosure. It should be understood that this and other arrangements described herein are set forth only as examples. Other arrangements and elements (e.g., machines, interfaces, functions, orders, groupings of functions, etc.) may be used in addition to or instead of those shown, and some elements may be omitted altogether. Further, many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, and in any suitable combination and location. Various functions described herein as being performed by entities may be carried out by hardware, firmware, and/or software. For instance, various functions may be carried out by a processor executing instructions stored in memory.</p><p id="p-0111" num="0110">Each of the components, features, and systems of the vehicle <b>1000</b> in <figref idref="DRAWINGS">FIG. <b>10</b>C</figref> are illustrated as being connected via bus <b>1002</b>. The bus <b>1002</b> may include a Controller Area Network (CAN) data interface (alternatively referred to herein as a &#x201c;CAN bus&#x201d;). A CAN may be a network inside the vehicle <b>1000</b> used to aid in control of various features and functionality of the vehicle <b>1000</b>, such as actuation of brakes, acceleration, braking, steering, windshield wipers, etc. A CAN bus may be configured to have dozens or even hundreds of nodes, each with its own unique identifier (e.g., a CAN ID). The CAN bus may be read to find steering wheel angle, ground speed, engine revolutions per minute (RPMs), button positions, and/or other vehicle status indicators. The CAN bus may be ASIL B compliant.</p><p id="p-0112" num="0111">Although the bus <b>1002</b> is described herein as being a CAN bus, this is not intended to be limiting. For example, in addition to, or alternatively from, the CAN bus, FlexRay and/or Ethernet may be used. Additionally, although a single line is used to represent the bus <b>1002</b>, this is not intended to be limiting. For example, there may be any number of busses <b>1002</b>, which may include one or more CAN busses, one or more FlexRay busses, one or more Ethernet busses, and/or one or more other types of busses using a different protocol. In some examples, two or more busses <b>1002</b> may be used to perform different functions, and/or may be used for redundancy. For example, a first bus <b>1002</b> may be used for collision avoidance functionality and a second bus <b>1002</b> may be used for actuation control. In any example, each bus <b>1002</b> may communicate with any of the components of the vehicle <b>1000</b>, and two or more busses <b>1002</b> may communicate with the same components. In some examples, each SoC <b>1004</b>, each controller <b>1036</b>, and/or each computer within the vehicle may have access to the same input data (e.g., inputs from sensors of the vehicle <b>1000</b>), and may be connected to a common bus, such the CAN bus.</p><p id="p-0113" num="0112">The vehicle <b>1000</b> may include one or more controller(s) <b>1036</b>, such as those described herein with respect to <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>. The controller(s) <b>1036</b> may be used for a variety of functions. The controller(s) <b>1036</b> may be coupled to any of the various other components and systems of the vehicle <b>1000</b>, and may be used for control of the vehicle <b>1000</b>, artificial intelligence of the vehicle <b>1000</b>, infotainment for the vehicle <b>1000</b>, and/or the like.</p><p id="p-0114" num="0113">The vehicle <b>1000</b> may include a system(s) on a chip (SoC) <b>1004</b>. The SoC <b>1004</b> may include CPU(s) <b>1006</b>, GPU(s) <b>1008</b>, processor(s) <b>1010</b>, cache(s) <b>1012</b>, accelerator(s) <b>1014</b>, data store(s) <b>1016</b>, and/or other components and features not illustrated. The SoC(s) <b>1004</b> may be used to control the vehicle <b>1000</b> in a variety of platforms and systems. For example, the SoC(s) <b>1004</b> may be combined in a system (e.g., the system of the vehicle <b>1000</b>) with an HD map <b>1022</b> which may obtain map refreshes and/or updates via a network interface <b>1024</b> from one or more servers (e.g., server(s) <b>1078</b> of <figref idref="DRAWINGS">FIG. <b>10</b>D</figref>).</p><p id="p-0115" num="0114">The CPU(s) <b>1006</b> may include a CPU cluster or CPU complex (alternatively referred to herein as a &#x201c;CCPLEX&#x201d;). The CPU(s) <b>1006</b> may include multiple cores and/or L2 caches. For example, in some embodiments, the CPU(s) <b>1006</b> may include eight cores in a coherent multi-processor configuration. In some embodiments, the CPU(s) <b>1006</b> may include four dual-core clusters where each cluster has a dedicated L2 cache (e.g., a 2 MB L2 cache). The CPU(s) <b>1006</b> (e.g., the CCPLEX) may be configured to support simultaneous cluster operation enabling any combination of the clusters of the CPU(s) <b>1006</b> to be active at any given time.</p><p id="p-0116" num="0115">The CPU(s) <b>1006</b> may implement power management capabilities that include one or more of the following features: individual hardware blocks may be clock-gated automatically when idle to save dynamic power; each core clock may be gated when the core is not actively executing instructions due to execution of WFI/WFE instructions; each core may be independently power-gated; each core cluster may be independently clock-gated when all cores are clock-gated or power-gated; and/or each core cluster may be independently power-gated when all cores are power-gated. The CPU(s) <b>1006</b> may further implement an enhanced algorithm for managing power states, where allowed power states and expected wakeup times are specified, and the hardware/microcode determines the best power state to enter for the core, cluster, and CCPLEX. The processing cores may support simplified power state entry sequences in software with the work offloaded to microcode.</p><p id="p-0117" num="0116">The GPU(s) <b>1008</b> may include an integrated GPU (alternatively referred to herein as an &#x201c;iGPU&#x201d;). The GPU(s) <b>1008</b> may be programmable and may be efficient for parallel workloads. The GPU(s) <b>1008</b>, in some examples, may use an enhanced tensor instruction set. The GPU(s) <b>1008</b> may include one or more streaming microprocessors, where each streaming microprocessor may include an L1 cache (e.g., an L1 cache with at least 96 KB storage capacity), and two or more of the streaming microprocessors may share an L2 cache (e.g., an L2 cache with a 512 KB storage capacity). In some embodiments, the GPU(s) <b>1008</b> may include at least eight streaming microprocessors. The GPU(s) <b>1008</b> may use compute application programming interface(s) (API(s)). In addition, the GPU(s) <b>1008</b> may use one or more parallel computing platforms and/or programming models (e.g., NVIDIA's CUDA).</p><p id="p-0118" num="0117">The GPU(s) <b>1008</b> may be power-optimized for best performance in automotive and embedded use cases. For example, the GPU(s) <b>1008</b> may be fabricated on a Fin field-effect transistor (FinFET). However, this is not intended to be limiting and the GPU(s) <b>1008</b> may be fabricated using other semiconductor manufacturing processes. Each streaming microprocessor may incorporate a number of mixed-precision processing cores partitioned into multiple blocks. For example, and without limitation, 64 PF32 cores and 32 PF64 cores may be partitioned into four processing blocks. In such an example, each processing block may be allocated 16 FP32 cores, 8 FP64 cores, 16 INT32 cores, two mixed-precision NVIDIA TENSOR COREs for deep learning matrix arithmetic, an L0 instruction cache, a warp scheduler, a dispatch unit, and/or a 64 KB register file. In addition, the streaming microprocessors may include independent parallel integer and floating-point data paths to provide for efficient execution of workloads with a mix of computation and addressing calculations. The streaming microprocessors may include independent thread scheduling capability to enable finer-grain synchronization and cooperation between parallel threads. The streaming microprocessors may include a combined L1 data cache and shared memory unit in order to improve performance while simplifying programming.</p><p id="p-0119" num="0118">The GPU(s) <b>1008</b> may include a high bandwidth memory (HBM) and/or a 16 GB HBM2 memory subsystem to provide, in some examples, about 900 GB/second peak memory bandwidth. In some examples, in addition to, or alternatively from, the HBM memory, a synchronous graphics random-access memory (SGRAM) may be used, such as a graphics double data rate type five synchronous random-access memory (GDDR5).</p><p id="p-0120" num="0119">The GPU(s) <b>1008</b> may include unified memory technology including access counters to allow for more accurate migration of memory pages to the processor that accesses them most frequently, thereby improving efficiency for memory ranges shared between processors. In some examples, address translation services (ATS) support may be used to allow the GPU(s) <b>1008</b> to access the CPU(s) <b>1006</b> page tables directly. In such examples, when the GPU(s) <b>1008</b> memory management unit (MMU) experiences a miss, an address translation request may be transmitted to the CPU(s) <b>1006</b>. In response, the CPU(s) <b>1006</b> may look in its page tables for the virtual-to-physical mapping for the address and transmits the translation back to the GPU(s) <b>1008</b>. As such, unified memory technology may allow a single unified virtual address space for memory of both the CPU(s) <b>1006</b> and the GPU(s) <b>1008</b>, thereby simplifying the GPU(s) <b>1008</b> programming and porting of applications to the GPU(s) <b>1008</b>.</p><p id="p-0121" num="0120">In addition, the GPU(s) <b>1008</b> may include an access counter that may keep track of the frequency of access of the GPU(s) <b>1008</b> to memory of other processors. The access counter may help ensure that memory pages are moved to the physical memory of the processor that is accessing the pages most frequently.</p><p id="p-0122" num="0121">The SoC(s) <b>1004</b> may include any number of cache(s) <b>1012</b>, including those described herein. For example, the cache(s) <b>1012</b> may include an L3 cache that is available to both the CPU(s) <b>1006</b> and the GPU(s) <b>1008</b> (e.g., that is connected both the CPU(s) <b>1006</b> and the GPU(s) <b>1008</b>). The cache(s) <b>1012</b> may include a write-back cache that may keep track of states of lines, such as by using a cache coherence protocol (e.g., MEI, MESI, MSI, etc.). The L3 cache may include 4 MB or more, depending on the embodiment, although smaller cache sizes may be used.</p><p id="p-0123" num="0122">The SoC(s) <b>1004</b> may include an arithmetic logic unit(s) (ALU(s)) which may be leveraged in performing processing with respect to any of the variety of tasks or operations of the vehicle <b>1000</b>&#x2014;such as processing DNNs. In addition, the SoC(s) <b>1004</b> may include a floating point unit(s) (FPU(s))&#x2014;or other math coprocessor or numeric coprocessor types&#x2014;for performing mathematical operations within the system. For example, the SoC(s) <b>104</b> may include one or more FPUs integrated as execution units within a CPU(s) <b>1006</b> and/or GPU(s) <b>1008</b>.</p><p id="p-0124" num="0123">The SoC(s) <b>1004</b> may include one or more accelerators <b>1014</b> (e.g., hardware accelerators, software accelerators, or a combination thereof). For example, the SoC(s) <b>1004</b> may include a hardware acceleration cluster that may include optimized hardware accelerators and/or large on-chip memory. The large on-chip memory (e.g., 4 MB of SRAM), may enable the hardware acceleration cluster to accelerate neural networks and other calculations. The hardware acceleration cluster may be used to complement the GPU(s) <b>1008</b> and to off-load some of the tasks of the GPU(s) <b>1008</b> (e.g., to free up more cycles of the GPU(s) <b>1008</b> for performing other tasks). As an example, the accelerator(s) <b>1014</b> may be used for targeted workloads (e.g., perception, convolutional neural networks (CNNs), etc.) that are stable enough to be amenable to acceleration. The term &#x201c;CNN,&#x201d; as used herein, may include all types of CNNs, including region-based or regional convolutional neural networks (RCNNs) and Fast RCNNs (e.g., as used for object detection).</p><p id="p-0125" num="0124">The accelerator(s) <b>1014</b> (e.g., the hardware acceleration cluster) may include a deep learning accelerator(s) (DLA). The DLA(s) may include one or more Tensor processing units (TPUs) that may be configured to provide an additional ten trillion operations per second for deep learning applications and inferencing. The TPUs may be accelerators configured to, and optimized for, performing image processing functions (e.g., for CNNs, RCNNs, etc.). The DLA(s) may further be optimized for a specific set of neural network types and floating point operations, as well as inferencing. The design of the DLA(s) may provide more performance per millimeter than a general-purpose GPU, and vastly exceeds the performance of a CPU. The TPU(s) may perform several functions, including a single-instance convolution function, supporting, for example, INT8, INT16, and FP16 data types for both features and weights, as well as post-processor functions.</p><p id="p-0126" num="0125">The DLA(s) may quickly and efficiently execute neural networks, especially CNNs, on processed or unprocessed data for any of a variety of functions, including, for example and without limitation: a CNN for object identification and detection using data from camera sensors; a CNN for distance estimation using data from camera sensors; a CNN for emergency vehicle detection and identification and detection using data from microphones; a CNN for facial recognition and vehicle owner identification using data from camera sensors; and/or a CNN for security and/or safety related events.</p><p id="p-0127" num="0126">The DLA(s) may perform any function of the GPU(s) <b>1008</b>, and by using an inference accelerator, for example, a designer may target either the DLA(s) or the GPU(s) <b>1008</b> for any function. For example, the designer may focus processing of CNNs and floating point operations on the DLA(s) and leave other functions to the GPU(s) <b>1008</b> and/or other accelerator(s) <b>1014</b>.</p><p id="p-0128" num="0127">The accelerator(s) <b>1014</b> (e.g., the hardware acceleration cluster) may include a programmable vision accelerator(s) (PVA), which may alternatively be referred to herein as a computer vision accelerator. The PVA(s) may be designed and configured to accelerate computer vision algorithms for the advanced driver assistance systems (ADAS), autonomous driving, and/or augmented reality (AR) and/or virtual reality (VR) applications. The PVA(s) may provide a balance between performance and flexibility. For example, each PVA(s) may include, for example and without limitation, any number of reduced instruction set computer (RISC) cores, direct memory access (DMA), and/or any number of vector processors.</p><p id="p-0129" num="0128">The RISC cores may interact with image sensors (e.g., the image sensors of any of the cameras described herein), image signal processor(s), and/or the like. Each of the RISC cores may include any amount of memory. The RISC cores may use any of a number of protocols, depending on the embodiment. In some examples, the RISC cores may execute a real-time operating system (RTOS). The RISC cores may be implemented using one or more integrated circuit devices, application specific integrated circuits (ASICs), and/or memory devices. For example, the RISC cores may include an instruction cache and/or a tightly coupled RAM.</p><p id="p-0130" num="0129">The DMA may enable components of the PVA(s) to access the system memory independently of the CPU(s) <b>1006</b>. The DMA may support any number of features used to provide optimization to the PVA including, but not limited to, supporting multi-dimensional addressing and/or circular addressing. In some examples, the DMA may support up to six or more dimensions of addressing, which may include block width, block height, block depth, horizontal block stepping, vertical block stepping, and/or depth stepping.</p><p id="p-0131" num="0130">The vector processors may be programmable processors that may be designed to efficiently and flexibly execute programming for computer vision algorithms and provide signal processing capabilities. In some examples, the PVA may include a PVA core and two vector processing subsystem partitions. The PVA core may include a processor subsystem, DMA engine(s) (e.g., two DMA engines), and/or other peripherals. The vector processing subsystem may operate as the primary processing engine of the PVA, and may include a vector processing unit (VPU), an instruction cache, and/or vector memory (e.g., VMEM). A VPU core may include a digital signal processor such as, for example, a single instruction, multiple data (SIMD), very long instruction word (VLIW) digital signal processor. The combination of the SIMD and VLIW may enhance throughput and speed.</p><p id="p-0132" num="0131">Each of the vector processors may include an instruction cache and may be coupled to dedicated memory. As a result, in some examples, each of the vector processors may be configured to execute independently of the other vector processors. In other examples, the vector processors that are included in a particular PVA may be configured to employ data parallelism. For example, in some embodiments, the plurality of vector processors included in a single PVA may execute the same computer vision algorithm, but on different regions of an image. In other examples, the vector processors included in a particular PVA may simultaneously execute different computer vision algorithms, on the same image, or even execute different algorithms on sequential images or portions of an image. Among other things, any number of PVAs may be included in the hardware acceleration cluster and any number of vector processors may be included in each of the PVAs. In addition, the PVA(s) may include additional error correcting code (ECC) memory, to enhance overall system safety.</p><p id="p-0133" num="0132">The accelerator(s) <b>1014</b> (e.g., the hardware acceleration cluster) may include a computer vision network on-chip and SRAM, for providing a high-bandwidth, low latency SRAM for the accelerator(s) <b>1014</b>. In some examples, the on-chip memory may include at least 4 MB SRAM, consisting of, for example and without limitation, eight field-configurable memory blocks, that may be accessible by both the PVA and the DLA. Each pair of memory blocks may include an advanced peripheral bus (APB) interface, configuration circuitry, a controller, and a multiplexer. Any type of memory may be used. The PVA and DLA may access the memory via a backbone that provides the PVA and DLA with high-speed access to memory. The backbone may include a computer vision network on-chip that interconnects the PVA and the DLA to the memory (e.g., using the APB).</p><p id="p-0134" num="0133">The computer vision network on-chip may include an interface that determines, before transmission of any control signal/address/data, that both the PVA and the DLA provide ready and valid signals. Such an interface may provide for separate phases and separate channels for transmitting control signals/addresses/data, as well as burst-type communications for continuous data transfer. This type of interface may comply with ISO 26262 or IEC 61508 standards, although other standards and protocols may be used.</p><p id="p-0135" num="0134">In some examples, the SoC(s) <b>1004</b> may include a real-time ray-tracing hardware accelerator, such as described in U.S. patent application Ser. No. 16/101,232, filed on Aug. 10, 2018. The real-time ray-tracing hardware accelerator may be used to quickly and efficiently determine the positions and extents of objects (e.g., within a world model), to generate real-time visualization simulations, for RADAR signal interpretation, for sound propagation synthesis and/or analysis, for simulation of SONAR systems, for general wave propagation simulation, for comparison to LIDAR data for purposes of localization and/or other functions, and/or for other uses. In some embodiments, one or more tree traversal units (TTUs) may be used for executing one or more ray-tracing related operations.</p><p id="p-0136" num="0135">The accelerator(s) <b>1014</b> (e.g., the hardware accelerator cluster) have a wide array of uses for autonomous driving. The PVA may be a programmable vision accelerator that may be used for key processing stages in ADAS and autonomous vehicles. The PVA's capabilities are a good match for algorithmic domains needing predictable processing, at low power and low latency. In other words, the PVA performs well on semi-dense or dense regular computation, even on small data sets, which need predictable run-times with low latency and low power. Thus, in the context of platforms for autonomous vehicles, the PVAs are designed to run classic computer vision algorithms, as they are efficient at object detection and operating on integer math.</p><p id="p-0137" num="0136">For example, according to one embodiment of the technology, the PVA is used to perform computer stereo vision. A semi-global matching-based algorithm may be used in some examples, although this is not intended to be limiting. Many applications for Level 3-5 autonomous driving require motion estimation/stereo matching on-the-fly (e.g., structure from motion, pedestrian recognition, lane detection, etc.). The PVA may perform computer stereo vision function on inputs from two monocular cameras.</p><p id="p-0138" num="0137">In some examples, the PVA may be used to perform dense optical flow. According to process raw RADAR data (e.g., using a 4D Fast Fourier Transform) to provide Processed RADAR. In other examples, the PVA is used for time of flight depth processing, by processing raw time of flight data to provide processed time of flight data, for example.</p><p id="p-0139" num="0138">The DLA may be used to run any type of network to enhance control and driving safety, including for example, a neural network that outputs a measure of confidence for each object detection. Such a confidence value may be interpreted as a probability, or as providing a relative &#x201c;weight&#x201d; of each detection compared to other detections. This confidence value enables the system to make further decisions regarding which detections should be considered as true positive detections rather than false positive detections. For example, the system may set a threshold value for the confidence and consider only the detections exceeding the threshold value as true positive detections. In an automatic emergency braking (AEB) system, false positive detections would cause the vehicle to automatically perform emergency braking, which is obviously undesirable. Therefore, only the most confident detections should be considered as triggers for AEB. The DLA may run a neural network for regressing the confidence value. The neural network may take as its input at least some subset of parameters, such as bounding box dimensions, ground plane estimate obtained (e.g. from another subsystem), inertial measurement unit (IMU) sensor <b>1066</b> output that correlates with the vehicle <b>1000</b> orientation, distance, 3D location estimates of the object obtained from the neural network and/or other sensors (e.g., LIDAR sensor(s) <b>1064</b> or RADAR sensor(s) <b>1060</b>), among others.</p><p id="p-0140" num="0139">The SoC(s) <b>1004</b> may include data store(s) <b>1016</b> (e.g., memory). The data store(s) <b>1016</b> may be on-chip memory of the SoC(s) <b>1004</b>, which may store neural networks to be executed on the GPU and/or the DLA. In some examples, the data store(s) <b>1016</b> may be large enough in capacity to store multiple instances of neural networks for redundancy and safety. The data store(s) <b>1012</b> may comprise L2 or L3 cache(s) <b>1012</b>. Reference to the data store(s) <b>1016</b> may include reference to the memory associated with the PVA, DLA, and/or other accelerator(s) <b>1014</b>, as described herein.</p><p id="p-0141" num="0140">The SoC(s) <b>1004</b> may include one or more processor(s) <b>1010</b> (e.g., embedded processors). The processor(s) <b>1010</b> may include a boot and power management processor that may be a dedicated processor and subsystem to handle boot power and management functions and related security enforcement. The boot and power management processor may be a part of the SoC(s) <b>1004</b> boot sequence and may provide runtime power management services. The boot power and management processor may provide clock and voltage programming, assistance in system low power state transitions, management of SoC(s) <b>1004</b> thermals and temperature sensors, and/or management of the SoC(s) <b>1004</b> power states. Each temperature sensor may be implemented as a ring-oscillator whose output frequency is proportional to temperature, and the SoC(s) <b>1004</b> may use the ring-oscillators to detect temperatures of the CPU(s) <b>1006</b>, GPU(s) <b>1008</b>, and/or accelerator(s) <b>1014</b>. If temperatures are determined to exceed a threshold, the boot and power management processor may enter a temperature fault routine and put the SoC(s) <b>1004</b> into a lower power state and/or put the vehicle <b>1000</b> into a chauffeur to safe stop mode (e.g., bring the vehicle <b>1000</b> to a safe stop).</p><p id="p-0142" num="0141">The processor(s) <b>1010</b> may further include a set of embedded processors that may serve as an audio processing engine. The audio processing engine may be an audio subsystem that enables full hardware support for multi-channel audio over multiple interfaces, and a broad and flexible range of audio I/O interfaces. In some examples, the audio processing engine is a dedicated processor core with a digital signal processor with dedicated RAM.</p><p id="p-0143" num="0142">The processor(s) <b>1010</b> may further include an always on processor engine that may provide necessary hardware features to support low power sensor management and wake use cases. The always on processor engine may include a processor core, a tightly coupled RAM, supporting peripherals (e.g., timers and interrupt controllers), various I/O controller peripherals, and routing logic.</p><p id="p-0144" num="0143">The processor(s) <b>1010</b> may further include a safety cluster engine that includes a dedicated processor subsystem to handle safety management for automotive applications. The safety cluster engine may include two or more processor cores, a tightly coupled RAM, support peripherals (e.g., timers, an interrupt controller, etc.), and/or routing logic. In a safety mode, the two or more cores may operate in a lockstep mode and function as a single core with comparison logic to detect any differences between their operations.</p><p id="p-0145" num="0144">The processor(s) <b>1010</b> may further include a real-time camera engine that may include a dedicated processor subsystem for handling real-time camera management.</p><p id="p-0146" num="0145">The processor(s) <b>1010</b> may further include a high-dynamic range signal processor that may include an image signal processor that is a hardware engine that is part of the camera processing pipeline.</p><p id="p-0147" num="0146">The processor(s) <b>1010</b> may include a video image compositor that may be a processing block (e.g., implemented on a microprocessor) that implements video post-processing functions needed by a video playback application to produce the final image for the player window. The video image compositor may perform lens distortion correction on wide-view camera(s) <b>1070</b>, surround camera(s) <b>1074</b>, and/or on in-cabin monitoring camera sensors. In-cabin monitoring camera sensor is preferably monitored by a neural network running on another instance of the Advanced SoC, configured to identify in cabin events and respond accordingly. An in-cabin system may perform lip reading to activate cellular service and place a phone call, dictate emails, change the vehicle's destination, activate or change the vehicle's infotainment system and settings, or provide voice-activated web surfing. Certain functions are available to the driver only when the vehicle is operating in an autonomous mode, and are disabled otherwise.</p><p id="p-0148" num="0147">The video image compositor may include enhanced temporal noise reduction for both spatial and temporal noise reduction. For example, where motion occurs in a video, the noise reduction weights spatial information appropriately, decreasing the weight of information provided by adjacent frames. Where an image or portion of an image does not include motion, the temporal noise reduction performed by the video image compositor may use information from the previous image to reduce noise in the current image.</p><p id="p-0149" num="0148">The video image compositor may also be configured to perform stereo rectification on input stereo lens frames. The video image compositor may further be used for user interface composition when the operating system desktop is in use, and the GPU(s) <b>1008</b> is not required to continuously render new surfaces. Even when the GPU(s) <b>1008</b> is powered on and active doing 3D rendering, the video image compositor may be used to offload the GPU(s) <b>1008</b> to improve performance and responsiveness.</p><p id="p-0150" num="0149">The SoC(s) <b>1004</b> may further include a mobile industry processor interface (MIPI) camera serial interface for receiving video and input from cameras, a high-speed interface, and/or a video input block that may be used for camera and related pixel input functions. The SoC(s) <b>1004</b> may further include an input/output controller(s) that may be controlled by software and may be used for receiving I/O signals that are uncommitted to a specific role.</p><p id="p-0151" num="0150">The SoC(s) <b>1004</b> may further include a broad range of peripheral interfaces to enable communication with peripherals, audio codecs, power management, and/or other devices. The SoC(s) <b>1004</b> may be used to process data from cameras (e.g., connected over Gigabit Multimedia Serial Link and Ethernet), sensors (e.g., LIDAR sensor(s) <b>1064</b>, RADAR sensor(s) <b>1060</b>, etc. that may be connected over Ethernet), data from bus <b>1002</b> (e.g., speed of vehicle <b>1000</b>, steering wheel position, etc.), data from GNSS sensor(s) <b>1058</b> (e.g., connected over Ethernet or CAN bus). The SoC(s) <b>1004</b> may further include dedicated high-performance mass storage controllers that may include their own DMA engines, and that may be used to free the CPU(s) <b>1006</b> from routine data management tasks.</p><p id="p-0152" num="0151">The SoC(s) <b>1004</b> may be an end-to-end platform with a flexible architecture that spans automation levels 3-5, thereby providing a comprehensive functional safety architecture that leverages and makes efficient use of computer vision and ADAS techniques for diversity and redundancy, provides a platform for a flexible, reliable driving software stack, along with deep learning tools. The SoC(s) <b>1004</b> may be faster, more reliable, and even more energy-efficient and space-efficient than conventional systems. For example, the accelerator(s) <b>1014</b>, when combined with the CPU(s) <b>1006</b>, the GPU(s) <b>1008</b>, and the data store(s) <b>1016</b>, may provide for a fast, efficient platform for level 3-5 autonomous vehicles.</p><p id="p-0153" num="0152">The technology thus provides capabilities and functionality that cannot be achieved by conventional systems. For example, computer vision algorithms may be executed on CPUs, which may be configured using high-level programming language, such as the C programming language, to execute a wide variety of processing algorithms across a wide variety of visual data. However, CPUs are oftentimes unable to meet the performance requirements of many computer vision applications, such as those related to execution time and power consumption, for example. In particular, many CPUs are unable to execute complex object detection algorithms in real-time, which is a requirement of in-vehicle ADAS applications, and a requirement for practical Level 3-5 autonomous vehicles.</p><p id="p-0154" num="0153">In contrast to conventional systems, by providing a CPU complex, GPU complex, and a hardware acceleration cluster, the technology described herein allows for multiple neural networks to be performed simultaneously and/or sequentially, and for the results to be combined together to enable Level 3-5 autonomous driving functionality. For example, a CNN executing on the DLA or dGPU (e.g., the GPU(s) <b>1020</b>) may include a text and word recognition, allowing the supercomputer to read and understand traffic signs, including signs for which the neural network has not been specifically trained. The DLA may further include a neural network that is able to identify, interpret, and provides semantic understanding of the sign, and to pass that semantic understanding to the path planning modules running on the CPU Complex.</p><p id="p-0155" num="0154">As another example, multiple neural networks may be run simultaneously, as is required for Level 3, 4, or 5 driving. For example, a warning sign consisting of &#x201c;Caution: flashing lights indicate icy conditions,&#x201d; along with an electric light, may be independently or collectively interpreted by several neural networks. The sign itself may be identified as a traffic sign by a first deployed neural network (e.g., a neural network that has been trained), the text &#x201c;Flashing lights indicate icy conditions&#x201d; may be interpreted by a second deployed neural network, which informs the vehicle's path planning software (preferably executing on the CPU Complex) that when flashing lights are detected, icy conditions exist. The flashing light may be identified by operating a third deployed neural network over multiple frames, informing the vehicle's path-planning software of the presence (or absence) of flashing lights. All three neural networks may run simultaneously, such as within the DLA and/or on the GPU(s) <b>1008</b>.</p><p id="p-0156" num="0155">In some examples, a CNN for facial recognition and vehicle owner identification may use data from camera sensors to identify the presence of an authorized driver and/or owner of the vehicle <b>1000</b>. The always on sensor processing engine may be used to unlock the vehicle when the owner approaches the driver door and turn on the lights, and, in security mode, to disable the vehicle when the owner leaves the vehicle. In this way, the SoC(s) <b>1004</b> provide for security against theft and/or carjacking.</p><p id="p-0157" num="0156">In another example, a CNN for emergency vehicle detection and identification may use data from microphones <b>1096</b> to detect and identify emergency vehicle sirens. In contrast to conventional systems, that use general classifiers to detect sirens and manually extract features, the SoC(s) <b>1004</b> use the CNN for classifying environmental and urban sounds, as well as classifying visual data. In a preferred embodiment, the CNN running on the DLA is trained to identify the relative closing speed of the emergency vehicle (e.g., by using the Doppler Effect). The CNN may also be trained to identify emergency vehicles specific to the local area in which the vehicle is operating, as identified by GNSS sensor(s) <b>1058</b>. Thus, for example, when operating in Europe the CNN will seek to detect European sirens, and when in the United States the CNN will seek to identify only North American sirens. Once an emergency vehicle is detected, a control program may be used to execute an emergency vehicle safety routine, slowing the vehicle, pulling over to the side of the road, parking the vehicle, and/or idling the vehicle, with the assistance of ultrasonic sensors <b>1062</b>, until the emergency vehicle(s) passes.</p><p id="p-0158" num="0157">The vehicle may include a CPU(s) <b>1018</b> (e.g., discrete CPU(s), or dCPU(s)), that may be coupled to the SoC(s) <b>1004</b> via a high-speed interconnect (e.g., PCIe). The CPU(s) <b>1018</b> may include an X86 processor, for example. The CPU(s) <b>1018</b> may be used to perform any of a variety of functions, including arbitrating potentially inconsistent results between ADAS sensors and the SoC(s) <b>1004</b>, and/or monitoring the status and health of the controller(s) <b>1036</b> and/or infotainment SoC <b>1030</b>, for example.</p><p id="p-0159" num="0158">The vehicle <b>1000</b> may include a GPU(s) <b>1020</b> (e.g., discrete GPU(s), or dGPU(s)), that may be coupled to the SoC(s) <b>1004</b> via a high-speed interconnect (e.g., NVIDIA's NVLINK). The GPU(s) <b>1020</b> may provide additional artificial intelligence functionality, such as by executing redundant and/or different neural networks, and may be used to train and/or update neural networks based on input (e.g., sensor data) from sensors of the vehicle <b>1000</b>.</p><p id="p-0160" num="0159">The vehicle <b>1000</b> may further include the network interface <b>1024</b> which may include one or more wireless antennas <b>1026</b> (e.g., one or more wireless antennas for different communication protocols, such as a cellular antenna, a Bluetooth antenna, etc.). The network interface <b>1024</b> may be used to enable wireless connectivity over the Internet with the cloud (e.g., with the server(s) <b>1078</b> and/or other network devices), with other vehicles, and/or with computing devices (e.g., client devices of passengers). To communicate with other vehicles, a direct link may be established between the two vehicles and/or an indirect link may be established (e.g., across networks and over the Internet). Direct links may be provided using a vehicle-to-vehicle communication link. The vehicle-to-vehicle communication link may provide the vehicle <b>1000</b> information about vehicles in proximity to the vehicle <b>1000</b> (e.g., vehicles in front of, on the side of, and/or behind the vehicle <b>1000</b>). This functionality may be part of a cooperative adaptive cruise control functionality of the vehicle <b>1000</b>.</p><p id="p-0161" num="0160">The network interface <b>1024</b> may include a SoC that provides modulation and demodulation functionality and enables the controller(s) <b>1036</b> to communicate over wireless networks. The network interface <b>1024</b> may include a radio frequency front-end for up-conversion from baseband to radio frequency, and down conversion from radio frequency to baseband. The frequency conversions may be performed through well-known processes, and/or may be performed using super-heterodyne processes. In some examples, the radio frequency front end functionality may be provided by a separate chip. The network interface may include wireless functionality for communicating over LTE, WCDMA, UMTS, GSM, CDMA2000, Bluetooth, Bluetooth LE, Wi-Fi, Z-Wave, ZigBee, LoRaWAN, and/or other wireless protocols.</p><p id="p-0162" num="0161">The vehicle <b>1000</b> may further include data store(s) <b>1028</b> which may include off-chip (e.g., off the SoC(s) <b>1004</b>) storage. The data store(s) <b>1028</b> may include one or more storage elements including RAM, SRAM, DRAM, VRAM, Flash, hard disks, and/or other components and/or devices that may store at least one bit of data.</p><p id="p-0163" num="0162">The vehicle <b>1000</b> may further include GNSS sensor(s) <b>1058</b>. The GNSS sensor(s) <b>1058</b> (e.g., GPS, assisted GPS sensors, differential GPS (DGPS) sensors, etc.), to assist in mapping, perception, occupancy grid generation, and/or path planning functions. Any number of GNSS sensor(s) <b>1058</b> may be used, including, for example and without limitation, a GPS using a USB connector with an Ethernet to Serial (RS-232) bridge.</p><p id="p-0164" num="0163">The vehicle <b>1000</b> may further include RADAR sensor(s) <b>1060</b>. The RADAR sensor(s) <b>1060</b> may be used by the vehicle <b>1000</b> for long-range vehicle detection, even in darkness and/or severe weather conditions. RADAR functional safety levels may be ASIL B. The RADAR sensor(s) <b>1060</b> may use the CAN and/or the bus <b>1002</b> (e.g., to transmit data generated by the RADAR sensor(s) <b>1060</b>) for control and to access object tracking data, with access to Ethernet to access raw data in some examples. A wide variety of RADAR sensor types may be used. For example, and without limitation, the RADAR sensor(s) <b>1060</b> may be suitable for front, rear, and side RADAR use. In some example, Pulse Doppler RADAR sensor(s) are used.</p><p id="p-0165" num="0164">The RADAR sensor(s) <b>1060</b> may include different configurations, such as long range with narrow field of view, short range with wide field of view, short range side coverage, etc. In some examples, long-range RADAR may be used for adaptive cruise control functionality. The long-range RADAR systems may provide a broad field of view realized by two or more independent scans, such as within a 250 m range. The RADAR sensor(s) <b>1060</b> may help in distinguishing between static and moving objects, and may be used by ADAS systems for emergency brake assist and forward collision warning. Long-range RADAR sensors may include monostatic multimodal RADAR with multiple (e.g., six or more) fixed RADAR antennae and a high-speed CAN and FlexRay interface. In an example with six antennae, the central four antennae may create a focused beam pattern, designed to record the vehicle's <b>1000</b> surroundings at higher speeds with minimal interference from traffic in adjacent lanes. The other two antennae may expand the field of view, making it possible to quickly detect vehicles entering or leaving the vehicle's <b>1000</b> lane.</p><p id="p-0166" num="0165">Mid-range RADAR systems may include, as an example, a range of up to 1060 m (front) or 80 m (rear), and a field of view of up to 42 degrees (front) or 1050 degrees (rear). Short-range RADAR systems may include, without limitation, RADAR sensors designed to be installed at both ends of the rear bumper. When installed at both ends of the rear bumper, such a RADAR sensor systems may create two beams that constantly monitor the blind spot in the rear and next to the vehicle.</p><p id="p-0167" num="0166">Short-range RADAR systems may be used in an ADAS system for blind spot detection and/or lane change assist.</p><p id="p-0168" num="0167">The vehicle <b>1000</b> may further include ultrasonic sensor(s) <b>1062</b>. The ultrasonic sensor(s) <b>1062</b>, which may be positioned at the front, back, and/or the sides of the vehicle <b>1000</b>, may be used for park assist and/or to create and update an occupancy grid. A wide variety of ultrasonic sensor(s) <b>1062</b> may be used, and different ultrasonic sensor(s) <b>1062</b> may be used for different ranges of detection (e.g., 2.5 m, 4 m). The ultrasonic sensor(s) <b>1062</b> may operate at functional safety levels of ASIL B.</p><p id="p-0169" num="0168">The vehicle <b>1000</b> may include LIDAR sensor(s) <b>1064</b>. The LIDAR sensor(s) <b>1064</b> may be used for object and pedestrian detection, emergency braking, collision avoidance, and/or other functions. The LIDAR sensor(s) <b>1064</b> may be functional safety level ASIL B. In some examples, the vehicle <b>1000</b> may include multiple LIDAR sensors <b>1064</b> (e.g., two, four, six, etc.) that may use Ethernet (e.g., to provide data to a Gigabit Ethernet switch).</p><p id="p-0170" num="0169">In some examples, the LIDAR sensor(s) <b>1064</b> may be capable of providing a list of objects and their distances for a 360-degree field of view. Commercially available LIDAR sensor(s) <b>1064</b> may have an advertised range of approximately 1000 m, with an accuracy of 2 cm-3 cm, and with support for a 1000 Mbps Ethernet connection, for example. In some examples, one or more non-protruding LIDAR sensors <b>1064</b> may be used. In such examples, the LIDAR sensor(s) <b>1064</b> may be implemented as a small device that may be embedded into the front, rear, sides, and/or corners of the vehicle <b>1000</b>. The LIDAR sensor(s) <b>1064</b>, in such examples, may provide up to a 1020-degree horizontal and 35-degree vertical field-of-view, with a 200 m range even for low-reflectivity objects. Front-mounted LIDAR sensor(s) <b>1064</b> may be configured for a horizontal field of view between 45 degrees and 135 degrees.</p><p id="p-0171" num="0170">In some examples, LIDAR technologies, such as 3D flash LIDAR, may also be used. 3D Flash LIDAR uses a flash of a laser as a transmission source, to illuminate vehicle surroundings up to approximately 200 m. A flash LIDAR unit includes a receptor, which records the laser pulse transit time and the reflected light on each pixel, which in turn corresponds to the range from the vehicle to the objects. Flash LIDAR may allow for highly accurate and distortion-free images of the surroundings to be generated with every laser flash. In some examples, four flash LIDAR sensors may be deployed, one at each side of the vehicle <b>1000</b>. Available 3D flash LIDAR systems include a solid-state 3D staring array LIDAR camera with no moving parts other than a fan (e.g., a non-scanning LIDAR device). The flash LIDAR device may use a 5 nanosecond class I (eye-safe) laser pulse per frame and may capture the reflected laser light in the form of 3D range point clouds and co-registered intensity data. By using flash LIDAR, and because flash LIDAR is a solid-state device with no moving parts, the LIDAR sensor(s) <b>1064</b> may be less susceptible to motion blur, vibration, and/or shock.</p><p id="p-0172" num="0171">The vehicle may further include IMU sensor(s) <b>1066</b>. The IMU sensor(s) <b>1066</b> may be located at a center of the rear axle of the vehicle <b>1000</b>, in some examples. The IMU sensor(s) <b>1066</b> may include, for example and without limitation, an accelerometer(s), a magnetometer(s), a gyroscope(s), a magnetic compass(es), and/or other sensor types. In some examples, such as in six-axis applications, the IMU sensor(s) <b>1066</b> may include accelerometers and gyroscopes, while in nine-axis applications, the IMU sensor(s) <b>1066</b> may include accelerometers, gyroscopes, and magnetometers.</p><p id="p-0173" num="0172">In some embodiments, the IMU sensor(s) <b>1066</b> may be implemented as a miniature, high performance GPS-Aided Inertial Navigation System (GPS/INS) that combines micro-electro-mechanical systems (MEMS) inertial sensors, a high-sensitivity GPS receiver, and advanced Kalman filtering algorithms to provide estimates of position, velocity, and attitude. As such, in some examples, the IMU sensor(s) <b>1066</b> may enable the vehicle <b>1000</b> to estimate heading without requiring input from a magnetic sensor by directly observing and correlating the changes in velocity from GPS to the IMU sensor(s) <b>1066</b>. In some examples, the IMU sensor(s) <b>1066</b> and the GNSS sensor(s) <b>1058</b> may be combined in a single integrated unit.</p><p id="p-0174" num="0173">The vehicle may include microphone(s) <b>1096</b> placed in and/or around the vehicle <b>1000</b>. The microphone(s) <b>1096</b> may be used for emergency vehicle detection and identification, among other things.</p><p id="p-0175" num="0174">The vehicle may further include any number of camera types, including stereo camera(s) <b>1068</b>, wide-view camera(s) <b>1070</b>, infrared camera(s) <b>1072</b>, surround camera(s) <b>1074</b>, long-range and/or mid-range camera(s) <b>1098</b>, and/or other camera types. The cameras may be used to capture image data around an entire periphery of the vehicle <b>1000</b>. The types of cameras used depends on the embodiments and requirements for the vehicle <b>1000</b>, and any combination of camera types may be used to provide the necessary coverage around the vehicle <b>1000</b>. In addition, the number of cameras may differ depending on the embodiment. For example, the vehicle may include six cameras, seven cameras, ten cameras, twelve cameras, and/or another number of cameras. The cameras may support, as an example and without limitation, Gigabit Multimedia Serial Link (GMSL) and/or Gigabit Ethernet. Each of the camera(s) is described with more detail herein with respect to <figref idref="DRAWINGS">FIG. <b>10</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>10</b>B</figref>.</p><p id="p-0176" num="0175">The vehicle <b>1000</b> may further include vibration sensor(s) <b>1042</b>. The vibration sensor(s) <b>1042</b> may measure vibrations of components of the vehicle, such as the axle(s). For example, changes in vibrations may indicate a change in road surfaces. In another example, when two or more vibration sensors <b>1042</b> are used, the differences between the vibrations may be used to determine friction or slippage of the road surface (e.g., when the difference in vibration is between a power-driven axle and a freely rotating axle).</p><p id="p-0177" num="0176">The vehicle <b>1000</b> may include an ADAS system <b>1038</b>. The ADAS system <b>1038</b> may include a SoC, in some examples. The ADAS system <b>1038</b> may include autonomous/adaptive/automatic cruise control (ACC), cooperative adaptive cruise control (CACC), forward crash warning (FCW), automatic emergency braking (AEB), lane departure warnings (LDW), lane keep assist (LKA), blind spot warning (BSW), rear cross-traffic warning (RCTW), collision warning systems (CWS), lane centering (LC), and/or other features and functionality.</p><p id="p-0178" num="0177">The ACC systems may use RADAR sensor(s) <b>1060</b>, LIDAR sensor(s) <b>1064</b>, and/or a camera(s). The ACC systems may include longitudinal ACC and/or lateral ACC. Longitudinal ACC monitors and controls the distance to the vehicle immediately ahead of the vehicle <b>1000</b> and automatically adjust the vehicle speed to maintain a safe distance from vehicles ahead. Lateral ACC performs distance keeping, and advises the vehicle <b>1000</b> to change lanes when necessary. Lateral ACC is related to other ADAS applications such as LCA and CWS.</p><p id="p-0179" num="0178">CACC uses information from other vehicles that may be received via the network interface <b>1024</b> and/or the wireless antenna(s) <b>1026</b> from other vehicles via a wireless link, or indirectly, over a network connection (e.g., over the Internet). Direct links may be provided by a vehicle-to-vehicle (V2V) communication link, while indirect links may be infrastructure-to-vehicle (I2V) communication link. In general, the V2V communication concept provides information about the immediately preceding vehicles (e.g., vehicles immediately ahead of and in the same lane as the vehicle <b>1000</b>), while the I2V communication concept provides information about traffic further ahead. CACC systems may include either or both I2V and V2V information sources. Given the information of the vehicles ahead of the vehicle <b>1000</b>, CACC may be more reliable and it has potential to improve traffic flow smoothness and reduce congestion on the road.</p><p id="p-0180" num="0179">FCW systems are designed to alert the driver to a hazard, so that the driver may take corrective action. FCW systems use a front-facing camera and/or RADAR sensor(s) <b>1060</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component. FCW systems may provide a warning, such as in the form of a sound, visual warning, vibration and/or a quick brake pulse.</p><p id="p-0181" num="0180">AEB systems detect an impending forward collision with another vehicle or other object, and may automatically apply the brakes if the driver does not take corrective action within a specified time or distance parameter. AEB systems may use front-facing camera(s) and/or RADAR sensor(s) <b>1060</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC. When the AEB system detects a hazard, it typically first alerts the driver to take corrective action to avoid the collision and, if the driver does not take corrective action, the AEB system may automatically apply the brakes in an effort to prevent, or at least mitigate, the impact of the predicted collision. AEB systems, may include techniques such as dynamic brake support and/or crash imminent braking.</p><p id="p-0182" num="0181">LDW systems provide visual, audible, and/or tactile warnings, such as steering wheel or seat vibrations, to alert the driver when the vehicle <b>1000</b> crosses lane markings. A LDW system does not activate when the driver indicates an intentional lane departure, by activating a turn signal. LDW systems may use front-side facing cameras, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component.</p><p id="p-0183" num="0182">LKA systems are a variation of LDW systems. LKA systems provide steering input or braking to correct the vehicle <b>1000</b> if the vehicle <b>1000</b> starts to exit the lane.</p><p id="p-0184" num="0183">BSW systems detects and warn the driver of vehicles in an automobile's blind spot. BSW systems may provide a visual, audible, and/or tactile alert to indicate that merging or changing lanes is unsafe. The system may provide an additional warning when the driver uses a turn signal. BSW systems may use rear-side facing camera(s) and/or RADAR sensor(s) <b>1060</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component.</p><p id="p-0185" num="0184">RCTW systems may provide visual, audible, and/or tactile notification when an object is detected outside the rear-camera range when the vehicle <b>1000</b> is backing up. Some RCTW systems include AEB to ensure that the vehicle brakes are applied to avoid a crash. RCTW systems may use one or more rear-facing RADAR sensor(s) <b>1060</b>, coupled to a dedicated processor, DSP, FPGA, and/or ASIC, that is electrically coupled to driver feedback, such as a display, speaker, and/or vibrating component.</p><p id="p-0186" num="0185">Conventional ADAS systems may be prone to false positive results which may be annoying and distracting to a driver, but typically are not catastrophic, because the ADAS systems alert the driver and allow the driver to decide whether a safety condition truly exists and act accordingly. However, in an autonomous vehicle <b>1000</b>, the vehicle <b>1000</b> itself must, in the case of conflicting results, decide whether to heed the result from a primary computer or a secondary computer (e.g., a first controller <b>1036</b> or a second controller <b>1036</b>). For example, in some embodiments, the ADAS system <b>1038</b> may be a backup and/or secondary computer for providing perception information to a backup computer rationality module. The backup computer rationality monitor may run a redundant diverse software on hardware components to detect faults in perception and dynamic driving tasks. Outputs from the ADAS system <b>1038</b> may be provided to a supervisory MCU. If outputs from the primary computer and the secondary computer conflict, the supervisory MCU must determine how to reconcile the conflict to ensure safe operation.</p><p id="p-0187" num="0186">In some examples, the primary computer may be configured to provide the supervisory MCU with a confidence score, indicating the primary computer's confidence in the chosen result. If the confidence score exceeds a threshold, the supervisory MCU may follow the primary computer's direction, regardless of whether the secondary computer provides a conflicting or inconsistent result. Where the confidence score does not meet the threshold, and where the primary and secondary computer indicate different results (e.g., the conflict), the supervisory MCU may arbitrate between the computers to determine the appropriate outcome.</p><p id="p-0188" num="0187">The supervisory MCU may be configured to run a neural network(s) that is trained and configured to determine, based on outputs from the primary computer and the secondary computer, conditions under which the secondary computer provides false alarms. Thus, the neural network(s) in the supervisory MCU may learn when the secondary computer's output may be trusted, and when it cannot. For example, when the secondary computer is a RADAR-based FCW system, a neural network(s) in the supervisory MCU may learn when the FCW system is identifying metallic objects that are not, in fact, hazards, such as a drainage grate or manhole cover that triggers an alarm. Similarly, when the secondary computer is a camera-based LDW system, a neural network in the supervisory MCU may learn to override the LDW when bicyclists or pedestrians are present and a lane departure is, in fact, the safest maneuver. In embodiments that include a neural network(s) running on the supervisory MCU, the supervisory MCU may include at least one of a DLA or GPU suitable for running the neural network(s) with associated memory. In preferred embodiments, the supervisory MCU may comprise and/or be included as a component of the SoC(s) <b>1004</b>.</p><p id="p-0189" num="0188">In other examples, ADAS system <b>1038</b> may include a secondary computer that performs ADAS functionality using traditional rules of computer vision. As such, the secondary computer may use classic computer vision rules (if-then), and the presence of a neural network(s) in the supervisory MCU may improve reliability, safety and performance. For example, the diverse implementation and intentional non-identity makes the overall system more fault-tolerant, especially to faults caused by software (or software-hardware interface) functionality. For example, if there is a software bug or error in the software running on the primary computer, and the non-identical software code running on the secondary computer provides the same overall result, the supervisory MCU may have greater confidence that the overall result is correct, and the bug in software or hardware on primary computer is not causing material error.</p><p id="p-0190" num="0189">In some examples, the output of the ADAS system <b>1038</b> may be fed into the primary computer's perception block and/or the primary computer's dynamic driving task block. For example, if the ADAS system <b>1038</b> indicates a forward crash warning due to an object immediately ahead, the perception block may use this information when identifying objects. In other examples, the secondary computer may have its own neural network which is trained and thus reduces the risk of false positives, as described herein.</p><p id="p-0191" num="0190">The vehicle <b>1000</b> may further include the infotainment SoC <b>1030</b> (e.g., an in-vehicle infotainment system (IVI)). Although illustrated and described as a SoC, the infotainment system may not be a SoC, and may include two or more discrete components. The infotainment SoC <b>1030</b> may include a combination of hardware and software that may be used to provide audio (e.g., music, a personal digital assistant, navigational instructions, news, radio, etc.), video (e.g., TV, movies, streaming, etc.), phone (e.g., hands-free calling), network connectivity (e.g., LTE, Wi-Fi, etc.), and/or information services (e.g., navigation systems, rear-parking assistance, a radio data system, vehicle related information such as fuel level, total distance covered, brake fuel level, oil level, door open/close, air filter information, etc.) to the vehicle <b>1000</b>. For example, the infotainment SoC <b>1030</b> may radios, disk players, navigation systems, video players, USB and Bluetooth connectivity, carputers, in-car entertainment, Wi-Fi, steering wheel audio controls, hands free voice control, a heads-up display (HUD), an HMI display <b>1034</b>, a telematics device, a control panel (e.g., for controlling and/or interacting with various components, features, and/or systems), and/or other components. The infotainment SoC <b>1030</b> may further be used to provide information (e.g., visual and/or audible) to a user(s) of the vehicle, such as information from the ADAS system <b>1038</b>, autonomous driving information such as planned vehicle maneuvers, trajectories, surrounding environment information (e.g., intersection information, vehicle information, road information, etc.), and/or other information.</p><p id="p-0192" num="0191">The infotainment SoC <b>1030</b> may include GPU functionality. The infotainment SoC <b>1030</b> may communicate over the bus <b>1002</b> (e.g., CAN bus, Ethernet, etc.) with other devices, systems, and/or components of the vehicle <b>1000</b>. In some examples, the infotainment SoC <b>1030</b> may be coupled to a supervisory MCU such that the GPU of the infotainment system may perform some self-driving functions in the event that the primary controller(s) <b>1036</b> (e.g., the primary and/or backup computers of the vehicle <b>1000</b>) fail. In such an example, the infotainment SoC <b>1030</b> may put the vehicle <b>1000</b> into a chauffeur to safe stop mode, as described herein.</p><p id="p-0193" num="0192">The vehicle <b>1000</b> may further include an instrument cluster <b>1032</b> (e.g., a digital dash, an electronic instrument cluster, a digital instrument panel, etc.). The instrument cluster <b>1032</b> may include a controller and/or supercomputer (e.g., a discrete controller or supercomputer). The instrument cluster <b>1032</b> may include a set of instrumentation such as a speedometer, fuel level, oil pressure, tachometer, odometer, turn indicators, gearshift position indicator, seat belt warning light(s), parking-brake warning light(s), engine-malfunction light(s), airbag (SRS) system information, lighting controls, safety system controls, navigation information, etc. In some examples, information may be displayed and/or shared among the infotainment SoC <b>1030</b> and the instrument cluster <b>1032</b>. In other words, the instrument cluster <b>1032</b> may be included as part of the infotainment SoC <b>1030</b>, or vice versa.</p><p id="p-0194" num="0193"><figref idref="DRAWINGS">FIG. <b>10</b>D</figref> is a system diagram for communication between cloud-based server(s) and the example autonomous vehicle <b>1000</b> of <figref idref="DRAWINGS">FIG. <b>10</b>A</figref>, in accordance with some embodiments of the present disclosure. The system <b>1076</b> may include server(s) <b>1078</b>, network(s) <b>1090</b>, and vehicles, including the vehicle <b>1000</b>. The server(s) <b>1078</b> may include a plurality of GPUs <b>1084</b>(A)-<b>1084</b>(H) (collectively referred to herein as GPUs <b>1084</b>), PCIe switches <b>1082</b>(A)-<b>1082</b>(H) (collectively referred to herein as PCIe switches <b>1082</b>), and/or CPUs <b>1080</b>(A)-<b>1080</b>(B) (collectively referred to herein as CPUs <b>1080</b>). The GPUs <b>1084</b>, the CPUs <b>1080</b>, and the PCIe switches may be interconnected with high-speed interconnects such as, for example and without limitation, NVLink interfaces <b>1088</b> developed by NVIDIA and/or PCIe connections <b>1086</b>. In some examples, the GPUs <b>1084</b> are connected via NVLink and/or NVSwitch SoC and the GPUs <b>1084</b> and the PCIe switches <b>1082</b> are connected via PCIe interconnects. Although eight GPUs <b>1084</b>, two CPUs <b>1080</b>, and two PCIe switches are illustrated, this is not intended to be limiting. Depending on the embodiment, each of the server(s) <b>1078</b> may include any number of GPUs <b>1084</b>, CPUs <b>1080</b>, and/or PCIe switches. For example, the server(s) <b>1078</b> may each include eight, sixteen, thirty-two, and/or more GPUs <b>1084</b>.</p><p id="p-0195" num="0194">The server(s) <b>1078</b> may receive, over the network(s) <b>1090</b> and from the vehicles, image data representative of images showing unexpected or changed road conditions, such as recently commenced road-work. The server(s) <b>1078</b> may transmit, over the network(s) <b>1090</b> and to the vehicles, neural networks <b>1092</b>, updated neural networks <b>1092</b>, and/or map information <b>1094</b>, including information regarding traffic and road conditions. The updates to the map information <b>1094</b> may include updates for the HD map <b>1022</b>, such as information regarding construction sites, potholes, detours, flooding, and/or other obstructions. In some examples, the neural networks <b>1092</b>, the updated neural networks <b>1092</b>, and/or the map information <b>1094</b> may have resulted from new training and/or experiences represented in data received from any number of vehicles in the environment, and/or based on training performed at a datacenter (e.g., using the server(s) <b>1078</b> and/or other servers).</p><p id="p-0196" num="0195">The server(s) <b>1078</b> may be used to train machine learning models (e.g., neural networks) based on training data. The training data may be generated by the vehicles, and/or may be generated in a simulation (e.g., using a game engine). In some examples, the training data is tagged (e.g., where the neural network benefits from supervised learning) and/or undergoes other pre-processing, while in other examples the training data is not tagged and/or pre-processed (e.g., where the neural network does not require supervised learning). Training may be executed according to any one or more classes of machine learning techniques, including, without limitation, classes such as: supervised training, semi-supervised training, unsupervised training, self learning, reinforcement learning, federated learning, transfer learning, feature learning (including principal component and cluster analyses), multi-linear subspace learning, manifold learning, representation learning (including spare dictionary learning), rule-based machine learning, anomaly detection, and any variants or combinations therefor. Once the machine learning models are trained, the machine learning models may be used by the vehicles (e.g., transmitted to the vehicles over the network(s) <b>1090</b>, and/or the machine learning models may be used by the server(s) <b>1078</b> to remotely monitor the vehicles.</p><p id="p-0197" num="0196">In some examples, the server(s) <b>1078</b> may receive data from the vehicles and apply the data to up-to-date real-time neural networks for real-time intelligent inferencing. The server(s) <b>1078</b> may include deep-learning supercomputers and/or dedicated AI computers powered by GPU(s) <b>1084</b>, such as a DGX and DGX Station machines developed by NVIDIA. However, in some examples, the server(s) <b>1078</b> may include deep learning infrastructure that use only CPU-powered datacenters.</p><p id="p-0198" num="0197">The deep-learning infrastructure of the server(s) <b>1078</b> may be capable of fast, real-time inferencing, and may use that capability to evaluate and verify the health of the processors, software, and/or associated hardware in the vehicle <b>1000</b>. For example, the deep-learning infrastructure may receive periodic updates from the vehicle <b>1000</b>, such as a sequence of images and/or objects that the vehicle <b>1000</b> has located in that sequence of images (e.g., via computer vision and/or other machine learning object classification techniques). The deep-learning infrastructure may run its own neural network to identify the objects and compare them with the objects identified by the vehicle <b>1000</b> and, if the results do not match and the infrastructure concludes that the AI in the vehicle <b>1000</b> is malfunctioning, the server(s) <b>1078</b> may transmit a signal to the vehicle <b>1000</b> instructing a fail-safe computer of the vehicle <b>1000</b> to assume control, notify the passengers, and complete a safe parking maneuver.</p><p id="p-0199" num="0198">For inferencing, the server(s) <b>1078</b> may include the GPU(s) <b>1084</b> and one or more programmable inference accelerators (e.g., NVIDIA's TensorRT). The combination of GPU-powered servers and inference acceleration may make real-time responsiveness possible. In other examples, such as where performance is less critical, servers powered by CPUs, FPGAs, and other processors may be used for inferencing.</p><heading id="h-0007" level="1">Example Computing Device</heading><p id="p-0200" num="0199"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example computing device(s) <b>1100</b> suitable for use in implementing some embodiments of the present disclosure. Computing device <b>1100</b> may include an interconnect system <b>1102</b> that directly or indirectly couples the following devices: memory <b>1104</b>, one or more central processing units (CPUs) <b>1106</b>, one or more graphics processing units (GPUs) <b>1108</b>, a communication interface <b>1110</b>, input/output (I/O) ports <b>1112</b>, input/output components <b>1114</b>, a power supply <b>1116</b>, one or more presentation components <b>1118</b> (e.g., display(s)), and one or more logic units <b>1120</b>.</p><p id="p-0201" num="0200">Although the various blocks of <figref idref="DRAWINGS">FIG. <b>11</b></figref> are shown as connected via the interconnect system <b>1102</b> with lines, this is not intended to be limiting and is for clarity only. For example, in some embodiments, a presentation component <b>1118</b>, such as a display device, may be considered an I/O component <b>1114</b> (e.g., if the display is a touch screen). As another example, the CPUs <b>1106</b> and/or GPUs <b>1108</b> may include memory (e.g., the memory <b>1104</b> may be representative of a storage device in addition to the memory of the GPUs <b>1108</b>, the CPUs <b>1106</b>, and/or other components). In other words, the computing device of <figref idref="DRAWINGS">FIG. <b>11</b></figref> is merely illustrative. Distinction is not made between such categories as &#x201c;workstation,&#x201d; &#x201c;server,&#x201d; &#x201c;laptop,&#x201d; &#x201c;desktop,&#x201d; &#x201c;tablet,&#x201d; &#x201c;client device,&#x201d; &#x201c;mobile device,&#x201d; &#x201c;hand-held device,&#x201d; &#x201c;game console,&#x201d; &#x201c;electronic control unit (ECU),&#x201d; &#x201c;virtual reality system,&#x201d; and/or other device or system types, as all are contemplated within the scope of the computing device of <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0202" num="0201">The interconnect system <b>1102</b> may represent one or more links or busses, such as an address bus, a data bus, a control bus, or a combination thereof. The interconnect system <b>1102</b> may include one or more bus or link types, such as an industry standard architecture (ISA) bus, an extended industry standard architecture (EISA) bus, a video electronics standards association (VESA) bus, a peripheral component interconnect (PCI) bus, a peripheral component interconnect express (PCIe) bus, and/or another type of bus or link. In some embodiments, there are direct connections between components. As an example, the CPU <b>1106</b> may be directly connected to the memory <b>1104</b>. Further, the CPU <b>1106</b> may be directly connected to the GPU <b>1108</b>. Where there is direct, or point-to-point connection between components, the interconnect system <b>1102</b> may include a PCIe link to carry out the connection. In these examples, a PCI bus need not be included in the computing device <b>1100</b>.</p><p id="p-0203" num="0202">The memory <b>1104</b> may include any of a variety of computer-readable media. The computer-readable media may be any available media that may be accessed by the computing device <b>1100</b>. The computer-readable media may include both volatile and nonvolatile media, and removable and non-removable media. By way of example, and not limitation, the computer-readable media may comprise computer-storage media and communication media.</p><p id="p-0204" num="0203">The computer-storage media may include both volatile and nonvolatile media and/or removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, and/or other data types. For example, the memory <b>1104</b> may store computer-readable instructions (e.g., that represent a program(s) and/or a program element(s), such as an operating system. Computer-storage media may include, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which may be used to store the desired information and which may be accessed by computing device <b>1100</b>. As used herein, computer storage media does not comprise signals per se.</p><p id="p-0205" num="0204">The computer storage media may embody computer-readable instructions, data structures, program modules, and/or other data types in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; may refer to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, the computer storage media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.</p><p id="p-0206" num="0205">The CPU(s) <b>1106</b> may be configured to execute at least some of the computer-readable instructions to control one or more components of the computing device <b>1100</b> to perform one or more of the methods and/or processes described herein. The CPU(s) <b>1106</b> may each include one or more cores (e.g., one, two, four, eight, twenty-eight, seventy-two, etc.) that are capable of handling a multitude of software threads simultaneously. The CPU(s) <b>1106</b> may include any type of processor, and may include different types of processors depending on the type of computing device <b>1100</b> implemented (e.g., processors with fewer cores for mobile devices and processors with more cores for servers). For example, depending on the type of computing device <b>1100</b>, the processor may be an Advanced RISC Machines (ARM) processor implemented using Reduced Instruction Set Computing (RISC) or an x86 processor implemented using Complex Instruction Set Computing (CISC). The computing device <b>1100</b> may include one or more CPUs <b>1106</b> in addition to one or more microprocessors or supplementary co-processors, such as math co-processors.</p><p id="p-0207" num="0206">In addition to or alternatively from the CPU(s) <b>1106</b>, the GPU(s) <b>1108</b> may be configured to execute at least some of the computer-readable instructions to control one or more components of the computing device <b>1100</b> to perform one or more of the methods and/or processes described herein. One or more of the GPU(s) <b>1108</b> may be an integrated GPU (e.g., with one or more of the CPU(s) <b>1106</b> and/or one or more of the GPU(s) <b>1108</b> may be a discrete GPU. In embodiments, one or more of the GPU(s) <b>1108</b> may be a coprocessor of one or more of the CPU(s) <b>1106</b>. The GPU(s) <b>1108</b> may be used by the computing device <b>1100</b> to render graphics (e.g., 3D graphics) or perform general purpose computations. For example, the GPU(s) <b>1108</b> may be used for General-Purpose computing on GPUs (GPGPU). The GPU(s) <b>1108</b> may include hundreds or thousands of cores that are capable of handling hundreds or thousands of software threads simultaneously. The GPU(s) <b>1108</b> may generate pixel data for output images in response to rendering commands (e.g., rendering commands from the CPU(s) <b>1106</b> received via a host interface). The GPU(s) <b>1108</b> may include graphics memory, such as display memory, for storing pixel data or any other suitable data, such as GPGPU data. The display memory may be included as part of the memory <b>1104</b>. The GPU(s) <b>1108</b> may include two or more GPUs operating in parallel (e.g., via a link). The link may directly connect the GPUs (e.g., using NVLINK) or may connect the GPUs through a switch (e.g., using NVSwitch). When combined together, each GPU <b>1108</b> may generate pixel data or GPGPU data for different portions of an output or for different outputs (e.g., a first GPU for a first image and a second GPU for a second image). Each GPU may include its own memory, or may share memory with other GPUs.</p><p id="p-0208" num="0207">In addition to or alternatively from the CPU(s) <b>1106</b> and/or the GPU(s) <b>1108</b>, the logic unit(s) <b>1120</b> may be configured to execute at least some of the computer-readable instructions to control one or more components of the computing device <b>1100</b> to perform one or more of the methods and/or processes described herein. In embodiments, the CPU(s) <b>1106</b>, the GPU(s) <b>1108</b>, and/or the logic unit(s) <b>1120</b> may discretely or jointly perform any combination of the methods, processes and/or portions thereof. One or more of the logic units <b>1120</b> may be part of and/or integrated in one or more of the CPU(s) <b>1106</b> and/or the GPU(s) <b>1108</b> and/or one or more of the logic units <b>1120</b> may be discrete components or otherwise external to the CPU(s) <b>1106</b> and/or the GPU(s) <b>1108</b>. In embodiments, one or more of the logic units <b>1120</b> may be a coprocessor of one or more of the CPU(s) <b>1106</b> and/or one or more of the GPU(s) <b>1108</b>.</p><p id="p-0209" num="0208">Examples of the logic unit(s) <b>1120</b> include one or more processing cores and/or components thereof, such as Tensor Cores (TCs), Tensor Processing Units (TPUs), Pixel Visual Cores (PVCs), Vision Processing Units (VPUs), Graphics Processing Clusters (GPCs), Texture Processing Clusters (TPCs), Streaming Multiprocessors (SMs), Tree Traversal Units (TTUs), Artificial Intelligence Accelerators (AIAs), Deep Learning Accelerators (DLAs), Arithmetic-Logic Units (ALUs), Application-Specific Integrated Circuits (ASICs), Floating Point Units (FPUs), input/output (I/O) elements, peripheral component interconnect (PCI) or peripheral component interconnect express (PCIe) elements, and/or the like.</p><p id="p-0210" num="0209">The communication interface <b>1110</b> may include one or more receivers, transmitters, and/or transceivers that enable the computing device <b>1100</b> to communicate with other computing devices via an electronic communication network, included wired and/or wireless communications. The communication interface <b>1110</b> may include components and functionality to enable communication over any of a number of different networks, such as wireless networks (e.g., Wi-Fi, Z-Wave, Bluetooth, Bluetooth LE, ZigBee, etc.), wired networks (e.g., communicating over Ethernet or InfiniBand), low-power wide-area networks (e.g., LoRaWAN, SigFox, etc.), and/or the Internet.</p><p id="p-0211" num="0210">The I/O ports <b>1112</b> may enable the computing device <b>1100</b> to be logically coupled to other devices including the I/O components <b>1114</b>, the presentation component(s) <b>1118</b>, and/or other components, some of which may be built in to (e.g., integrated in) the computing device <b>1100</b>. Illustrative I/O components <b>1114</b> include a microphone, mouse, keyboard, joystick, game pad, game controller, satellite dish, scanner, printer, wireless device, etc. The I/O components <b>1114</b> may provide a natural user interface (NUI) that processes air gestures, voice, or other physiological inputs generated by a user. In some instances, inputs may be transmitted to an appropriate network element for further processing. An NUI may implement any combination of speech recognition, stylus recognition, facial recognition, biometric recognition, gesture recognition both on screen and adjacent to the screen, air gestures, head and eye tracking, and touch recognition (as described in more detail below) associated with a display of the computing device <b>1100</b>. The computing device <b>1100</b> may be include depth cameras, such as stereoscopic camera systems, infrared camera systems, RGB camera systems, touchscreen technology, and combinations of these, for gesture detection and recognition. Additionally, the computing device <b>1100</b> may include accelerometers or gyroscopes (e.g., as part of an inertia measurement unit (IMU)) that enable detection of motion. In some examples, the output of the accelerometers or gyroscopes may be used by the computing device <b>1100</b> to render immersive augmented reality or virtual reality.</p><p id="p-0212" num="0211">The power supply <b>1116</b> may include a hard-wired power supply, a battery power supply, or a combination thereof. The power supply <b>1116</b> may provide power to the computing device <b>1100</b> to enable the components of the computing device <b>1100</b> to operate.</p><p id="p-0213" num="0212">The presentation component(s) <b>1118</b> may include a display (e.g., a monitor, a touch screen, a television screen, a heads-up-display (HUD), other display types, or a combination thereof), speakers, and/or other presentation components. The presentation component(s) <b>1118</b> may receive data from other components (e.g., the GPU(s) <b>1108</b>, the CPU(s) <b>1106</b>, etc.), and output the data (e.g., as an image, video, sound, etc.).</p><heading id="h-0008" level="1">Examples Network Environments</heading><p id="p-0214" num="0213">Network environments suitable for use in implementing embodiments of the disclosure may include one or more client devices, servers, network attached storage (NAS), other backend devices, and/or other device types. The client devices, servers, and/or other device types (e.g., each device) may be implemented on one or more instances of the computing device(s) <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>&#x2014;e.g., each device may include similar components, features, and/or functionality of the computing device(s) <b>1100</b>.</p><p id="p-0215" num="0214">Components of a network environment may communicate with each other via a network(s), which may be wired, wireless, or both. The network may include multiple networks, or a network of networks. By way of example, the network may include one or more Wide Area Networks (WANs), one or more Local Area Networks (LANs), one or more public networks such as the Internet and/or a public switched telephone network (PSTN), and/or one or more private networks. Where the network includes a wireless telecommunications network, components such as a base station, a communications tower, or even access points (as well as other components) may provide wireless connectivity.</p><p id="p-0216" num="0215">Compatible network environments may include one or more peer-to-peer network environments&#x2014;in which case a server may not be included in a network environment&#x2014;and one or more client-server network environments&#x2014;in which case one or more servers may be included in a network environment. In peer-to-peer network environments, functionality described herein with respect to a server(s) may be implemented on any number of client devices.</p><p id="p-0217" num="0216">In at least one embodiment, a network environment may include one or more cloud-based network environments, a distributed computing environment, a combination thereof, etc. A cloud-based network environment may include a framework layer, a job scheduler, a resource manager, and a distributed file system implemented on one or more of servers, which may include one or more core network servers and/or edge servers. A framework layer may include a framework to support software of a software layer and/or one or more application(s) of an application layer. The software or application(s) may respectively include web-based service software or applications. In embodiments, one or more of the client devices may use the web-based service software or applications (e.g., by accessing the service software and/or applications via one or more application programming interfaces (APIs)). The framework layer may be, but is not limited to, a type of free and open-source software web application framework such as that may use a distributed file system for large-scale data processing (e.g., &#x201c;big data&#x201d;).</p><p id="p-0218" num="0217">A cloud-based network environment may provide cloud computing and/or cloud storage that carries out any combination of computing and/or data storage functions described herein (or one or more portions thereof). Any of these various functions may be distributed over multiple locations from central or core servers (e.g., of one or more data centers that may be distributed across a state, a region, a country, the globe, etc.). If a connection to a user (e.g., a client device) is relatively close to an edge server(s), a core server(s) may designate at least a portion of the functionality to the edge server(s). A cloud-based network environment may be private (e.g., limited to a single organization), may be public (e.g., available to many organizations), and/or a combination thereof (e.g., a hybrid cloud environment).</p><p id="p-0219" num="0218">The client device(s) may include at least some of the components, features, and functionality of the example computing device(s) <b>1100</b> described herein with respect to <figref idref="DRAWINGS">FIG. <b>11</b></figref>. By way of example and not limitation, a client device may be embodied as a Personal Computer (PC), a laptop computer, a mobile device, a smartphone, a tablet computer, a smart watch, a wearable computer, a Personal Digital Assistant (PDA), an MP3 player, a virtual reality headset, a Global Positioning System (GPS) or device, a video player, a video camera, a surveillance device or system, a vehicle, a boat, a flying vessel, a virtual machine, a drone, a robot, a handheld communications device, a hospital device, a gaming device or system, an entertainment system, a vehicle computer system, an embedded system controller, a remote control, an appliance, a consumer electronic device, a workstation, an edge device, any combination of these delineated devices, or any other suitable device.</p><p id="p-0220" num="0219">The disclosure may be described in the general context of computer code or machine-useable instructions, including computer-executable instructions such as program modules, being executed by a computer or other machine, such as a personal data assistant or other handheld device. Generally, program modules including routines, programs, objects, components, data structures, etc., refer to code that perform particular tasks or implement particular abstract data types. The disclosure may be practiced in a variety of system configurations, including hand-held devices, consumer electronics, general-purpose computers, more specialty computing devices, etc. The disclosure may also be practiced in distributed computing environments where tasks are performed by remote-processing devices that are linked through a communications network.</p><p id="p-0221" num="0220">As used herein, a recitation of &#x201c;and/or&#x201d; with respect to two or more elements should be interpreted to mean only one element, or a combination of elements. For example, &#x201c;element A, element B, and/or element C&#x201d; may include only element A, only element B, only element C, element A and element B, element A and element C, element B and element C, or elements A, B, and C. In addition, &#x201c;at least one of element A or element B&#x201d; may include at least one of element A, at least one of element B, or at least one of element A and at least one of element B. Further, &#x201c;at least one of element A and element B&#x201d; may include at least one of element A, at least one of element B, or at least one of element A and at least one of element B.</p><p id="p-0222" num="0221">The subject matter of the present disclosure is described with specificity herein to meet statutory requirements. However, the description itself is not intended to limit the scope of this disclosure. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different steps or combinations of steps similar to the ones described in this document, in conjunction with other present or future technologies. Moreover, although the terms &#x201c;step&#x201d; and/or &#x201c;block&#x201d; may be used herein to connote different elements of methods employed, the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>determining, using one or more neural networks and based at least on image data representative of an image depicting an occupant of an autonomous or semi-autonomous machine, one or more key point locations associated with the occupant;</claim-text><claim-text>determining, based at least on the one or more key point locations, an activity associated with the occupant; and</claim-text><claim-text>performing, based at least on the activity associated with the occupant, one or more operations associated with the autonomous or semi-autonomous machine.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, using the one or more neural networks and based at least on second image data representative of a second image depicting the occupant of the autonomous or semi-autonomous machine, one or more second key point locations associated with the occupant,</claim-text><claim-text>wherein the determining the activity associated with the occupant is further based at least on the one or more second key point locations.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, based at least on the one or more key point locations, a model associated with at least one of the image or the occupant,</claim-text><claim-text>wherein the determining the activity associated with the occupant is based at least on the model.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the one or more neural networks comprise a first neural network and a second neural network;</claim-text><claim-text>the determining of the one or more key point locations associated with the occupant is performed using the first neural network; and</claim-text><claim-text>the determining the activity associated with the occupant is performed using the second neural network.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, based at least on the one or more key point locations, a confidence associated with the activity,</claim-text><claim-text>wherein the determining the activity associated with the occupant is based at least on the confidence.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, based at least on the one or more key point locations, at least one of a first activity associated with a first hand of the occupant or a second activity associated with a second hand of the occupant,</claim-text><claim-text>wherein the determining the activity associated with the occupant is based at least on the at least one of the first activity associated with the first hand of the occupant or the second activity associated with the second hand of the occupant.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, using the one or more neural networks and based at least on the image data, one or more angles associated with one or more appendages of the occupant,</claim-text><claim-text>wherein the determining the activity associated with the occupant is further based at least on the one or more angles associated with the one or more appendages.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more key point locations is a plurality of key point locations, and wherein the method further comprises:<claim-text>determining a connection between at least a first key point location of the plurality of key point locations and a second key point location of the plurality of key point locations,</claim-text><claim-text>wherein the determining the activity associated with the occupant is based at least on the connection between the first key point location and the second key point location.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining, using the one or more neural networks and based at least on one or more of the image data or second image data representative of a second image depicting a second occupant of the autonomous or semi-autonomous machine, one or more second key point locations associated with the second occupant; and</claim-text><claim-text>determining, based at least on the one or more second key point locations, a second activity associated with the second occupant,</claim-text><claim-text>wherein the performing the one or more operations associated with the autonomous or semi-autonomous machine is further based at least on the second activity associated with the second occupant.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein an individual key point location of the one or more key point locations includes one or more of a two-dimensional location associated with the image or a three-dimensional location within the autonomous or semi-autonomous machine.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system comprising:<claim-text>one or more processing units to:<claim-text>determine, using one or more neural networks and based at least on image data representative of an image depicting an occupant of an autonomous or semi-autonomous machine, one or more key point locations associated with the occupant;</claim-text><claim-text>determine, based at least on the one or more key point locations, an activity associated with the occupant; and</claim-text><claim-text>performing, based at least on the activity associated with the occupant, one or more operations associated with the autonomous or semi-autonomous machine.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more processing units are further to:<claim-text>determine, using the one or more neural networks and based at least on second image data representative of a second image depicting the occupant of the autonomous or semi-autonomous machine, one or more second key point locations associated with the occupant,</claim-text><claim-text>wherein the determination of the activity associated with the occupant is further based at least on the one or more second key point locations.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more processing units are further to:<claim-text>determine, based at least on the one or more key point locations, a model associated with at least one of the occupant or the image,</claim-text><claim-text>wherein the determination of the activity associated with the occupant is based at least on the model.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>the one or more neural networks comprise a first neural network and a second neural network;</claim-text><claim-text>the determination of the one or more key point locations associated with the occupant is performed using the first neural network; and</claim-text><claim-text>the determination of the activity associated with the occupant is performed using the second neural network.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more processing units are further:<claim-text>determine, based at least on the one or more key point locations, a confidence associated with the activity,</claim-text><claim-text>wherein the determination of the activity associated with the occupant is based at least on the confidence.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more processing units are further to:<claim-text>determine, based at least on the one or more key point locations, at least one of a first activity associated with a first hand of the occupant or a second activity associated with a second hand of the occupant,</claim-text><claim-text>wherein the determination of the activity associated with the occupant is based at least on the at least one of the first activity associated with the first hand of the occupant or the second activity associated with the second hand of the occupant.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more key point locations is a plurality of key point locations, and wherein the one or more processing units are further to:<claim-text>determine a connection between at least a first key point location of the plurality of key point locations and a second key point location of the plurality of key point locations,</claim-text><claim-text>wherein the determination of the activity associated with the occupant is based at least on the connection between the first key point location and the second key point location.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the system is comprised in at least one of:<claim-text>a control system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a perception system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a system for performing simulation operations;</claim-text><claim-text>a system for performing digital twin operations;</claim-text><claim-text>a system for performing real-time streaming;</claim-text><claim-text>a system for generating or presenting virtual reality (VR) content;</claim-text><claim-text>a system for generating or presenting augmented reality (AR) content;</claim-text><claim-text>a system for generating or presenting mixed reality (MR) content;</claim-text><claim-text>a system for performing light transport simulation;</claim-text><claim-text>a system for performing collaborative content creation for 3D assets;</claim-text><claim-text>a system for performing deep learning operations;</claim-text><claim-text>a system implemented using an edge device;</claim-text><claim-text>a system implemented using a robot;</claim-text><claim-text>a system for performing conversational AI operations;</claim-text><claim-text>a system for generating synthetic data;</claim-text><claim-text>a system incorporating one or more virtual machines (VMs);</claim-text><claim-text>a system implemented at least partially in a data center; or</claim-text><claim-text>a system implemented at least partially using cloud computing resources.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A processor comprising:<claim-text>one or more processing units to perform one or more operations associated with an autonomous or semi-autonomous machine based at least on an activity associated with an occupant of the autonomous or semi-autonomous machine, wherein the activity associated with the occupant is determined using one or more neural networks and based at least on image data representative of an image depicting the occupant of the autonomous or semi-autonomous machine.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The processor of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the processor is comprised in at least one of:<claim-text>a control system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a perception system for the autonomous or semi-autonomous machine;</claim-text><claim-text>a system for performing simulation operations;</claim-text><claim-text>a system for performing digital twin operations;</claim-text><claim-text>a system for performing real-time streaming;</claim-text><claim-text>a system for generating or presenting virtual reality (VR) content;</claim-text><claim-text>a system for generating or presenting augmented reality (AR) content;</claim-text><claim-text>a system for generating or presenting mixed reality (MR) content;</claim-text><claim-text>a system for performing light transport simulation;</claim-text><claim-text>a system for performing collaborative content creation for 3D assets;</claim-text><claim-text>a system for performing deep learning operations;</claim-text><claim-text>a system implemented using an edge device;</claim-text><claim-text>a system implemented using a robot;</claim-text><claim-text>a system for performing conversational AI operations;</claim-text><claim-text>a system for generating synthetic data;</claim-text><claim-text>a system incorporating one or more virtual machines (VMs);</claim-text><claim-text>a system implemented at least partially in a data center; or</claim-text><claim-text>a system implemented at least partially using cloud computing resources.</claim-text></claim-text></claim></claims></us-patent-application>