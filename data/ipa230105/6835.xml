<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006836A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006836</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17778214</doc-number><date>20201123</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3247</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3265</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">MULTI-PARTY AND MULTI-USE QUANTUM RESISTANT SIGNATURES AND KEY ESTABLISHMENT</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>62938992</doc-number><date>20191122</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><last-name>CHAUM</last-name><first-name>David</first-name><address><city>Shernan Oaks</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only"><addressbook><last-name>WENGER</last-name><first-name>Benjamin M.</first-name><address><city>Tarzana</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant><us-applicant sequence="02" app-type="applicant" designation="us-only"><addressbook><orgname>XX LABS SEZC</orgname><address><city>George Town, Grand Cayman</city><country>KY</country></address></addressbook><residence><country>KY</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>CARTER</last-name><first-name>William</first-name><address><city>George Town, Grand Cayman</city><country>KY</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>CHAUM</last-name><first-name>David</first-name><address><city>Sherman Oaks</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>YAKSETIG</last-name><first-name>Mario</first-name><address><city>George Town, Grand Cayman</city><country>KY</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>WENGER</last-name><first-name>Benjamin M.</first-name><address><city>Tarzana</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>CARDOSO</last-name><first-name>Barnardo</first-name><address><city>George Town, Grand Cayman</city><country>KY</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>AROSO</last-name><first-name>Baltasar</first-name><address><city>George Town, Grand Cayman</city><country>KY</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/US20/61891</doc-number><date>20201123</date></document-id><us-371c12-date><date>20220519</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system for making digital signatures includes plural signers determining cleartext bits to sign in response to a hash of a pre-image known to the respective signer and message. Another system uses one-way functions and a plurality of authentication paths per signature. A key information distribution system uses physical media, physical media revealing means, and changing the configuration of the physical media revealing means to reveal secret indicia to observers.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="89.49mm" wi="79.33mm" file="US20230006836A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="101.18mm" wi="115.74mm" file="US20230006836A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="241.72mm" wi="176.28mm" file="US20230006836A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="227.58mm" wi="168.74mm" file="US20230006836A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="229.70mm" wi="179.92mm" file="US20230006836A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="253.66mm" wi="159.09mm" file="US20230006836A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="246.21mm" wi="96.60mm" orientation="landscape" file="US20230006836A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="253.32mm" wi="122.26mm" file="US20230006836A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="236.73mm" wi="123.02mm" file="US20230006836A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="232.92mm" wi="158.24mm" file="US20230006836A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="229.02mm" wi="144.61mm" file="US20230006836A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="204.47mm" wi="163.15mm" file="US20230006836A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="202.01mm" wi="156.89mm" file="US20230006836A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="207.43mm" wi="156.38mm" file="US20230006836A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD OF THE INVENTION</heading><p id="p-0002" num="0001">The present invention relates to improvements in making digital signatures, including plural signers determining cleartext bits, and using one-way functions and a plurality of authentication paths per signature, and a key information distribution system that uses physical media, physical media revealing means, and changing the configuration of the physical media revealing means to reveal secret indicia to observers.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">Digital communication is at the heart of almost every aspect of modern life. Throughout the expansive growth of digital communication channels and especially the Internet, the continued development of cryptographic digital signatures and encryption systems has enabled societies and economies to efficiently interact with confidence that communicated data is secure against adversaries and forgeries. Traditionally, these standardized cryptographic protocols have kept pace with the increasing capabilities of potential adversaries. Recently it is becoming more and more likely that quantum computers capable of breaking the majority of currently used cryptographic protocols will be developed.</p><p id="p-0004" num="0003">So-called hash-based signatures are among the only known cryptographic signature schemes that are believed to be able to withstand quantum computing attacks. The known hash-based signature schemes such as WOTS+ are one time use forcing additional data structures layers to map multiple one time use public keys to a single reusable public key such as in XMSS. Because of this, public keys can only be used a finite number of times forcing signers to maintain state on used keying material, and the signatures generated generally orders of magnitude larger and slower than the signature schemes widely used today.</p><p id="p-0005" num="0004">The potential overhead of eventually moving to secure digital communication via quantum-resistant cryptography is exacerbated in the environment of heterogeneous and untrusted decentralized networks which is growing to secure hundreds of billions of dollars in value as of 2020. In many of these networks, where nodes are owned and operated by thousands of unknown individuals across the globe, infrastructure hardware is not comparable in computing performance or communication speed and reliability to the centralized infrastructure that has supported much of the growth of the Internet. Decentralized infrastructure currently struggles to handle even the more efficient cryptographic protocols used today at scale.</p><p id="p-0006" num="0005">A further hurdle to adopting quantum-resistant cryptography is in the establishment of quantum-resistant authentication mechanisms. Modem certificate authorities and means for establishing trusted knowledge of public keys are based on cryptography which is vulnerable to quantum computing. These typical authentication mechanisms may not be capable of bridging the gap between compromised cryptographic protocols and new, stronger standards.</p><heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0007" num="0006">The invention provides a number of improvements in the field of digital signatures for a message, plural digital signatures using a one-way function, and systems for distribution of key information.</p><p id="p-0008" num="0007">In one aspect, the invention is an improvement in a system for making a digital signature for a message where pre-defined subsets of a set of signers is sufficient and where each potential signer has pre-images that hash to a public key. In this improvement, each of the signers determines cleartext bits to sign in response to a hash of a pre-image known to the respective signer and the message. Preferably, the total number of cleartext bits, summed over all signers, can range from about 100 to about 1000. The size of the subsets and the length of the plaintext bit strings signed can be such that the number of exhaustive search attempts would be more the 2<sup>80</sup>. In another embodiment, the number of bits is at least 16 and the number of signers is a majority of at least 100 parties.</p><p id="p-0009" num="0008">A second aspect of the invention is an improvement in a system for forming plural digital signatures using one-way functions on respective plural messages, with a common public key and a common secret seed value. In this aspect, two or more authentication paths per signature are employed. In a further mode, at least one of the paths can be a series authentication path or a tree authentication path or a combination of both.</p><p id="p-0010" num="0009">A third aspect of the invention relates to improvements in key information distribution systems. This improvement provides a system that produces, for each of plural parties, respective physical media that includes respective secret key information formed as indicia. The respective physical media for each party is provided with physical revealing means, the physical revealing means in a first physical state, so that the secret indicia is not substantially revealed to plural observers. The system then allows for changing the physical configuration of the physical revealing means, after the media is received, from the first physical state to a second physical state. With this change, the secret indicia of substantially all the plural parties becomes known to the plural observers by the change of state.</p><p id="p-0011" num="0010">In certain cases, some subset of the observers can include the parties. The indicia can be images under substantially one-way functions and corresponding respective substantial pre-images can be shown after the images are revealed by the second physical state.</p><p id="p-0012" num="0011">The images revealed in the second physical state can be combined by a pre-arranged algorithm to form a value that is at least substantially infeasible for proper subsets of the parties to either manipulate or learn in advance.</p><p id="p-0013" num="0012">The indicia can be formed on the media by the respective party. Also, the party forming the indicia on the media can hide the indicia in a respective physical carrier. The party forming the indicia on media can provide the respective physical carrier to the physical revealing means under observation of the observers. The party forming the indicia on media can also provide the respective physical carrier to the physical revealing means in a particular location within a framework under observation of the observers. The carrier combined with the indicia combined with the placement in the framework can reveal an identity of the party to the observers.</p><p id="p-0014" num="0013">The indicia can be printed on cards and the cards can be protected by substantially opaque cards layered on the card at least until they are transferred to the physical revealing means. The cards and the opaque cards can be held together by a physical carrier means, the physical revealing means comprising a framework for holding carriers without the hiding means.</p><p id="p-0015" num="0014">Another improvement in key distribution systems relates to a system that includes a first step of forming secret keys for respective plural parties as indicia hidden from observers by respective carriers. A container is provided to accept plural contributions of carriers from each of the plural parties, with the container configured to be at least partly rearranged. After the at least partial rearrangement, the parties each receive plural carriers from the container. The system provides for provision of authentication by the respective parties of fingerprints of the keys that were contained in the carriers contributed by the respective parties.</p><p id="p-0016" num="0015">The system can also provide cryptographic authentication by keys revealed by each party that are associated with that respective party and this authentication can include authentication by keys revealed by each party in person to other parties while observed by observers.</p><p id="p-0017" num="0016">The content of the container can be at least partly rearranged by physically changing an orientation of the container under observation of observers</p><p id="p-0018" num="0017">At least some of the observers can be the parties.</p><p id="p-0019" num="0018">The system also allows substantially hiding from at least some observers correspondence between the party corresponding to at least a carrier contributed and the party receiving that carrier during the at least partly rearranging.</p><p id="p-0020" num="0019">Another feature of the system includes a set of parties allowing a pair of parties that did not receive a common key to develop a common key by each of the set of parties providing the same secret to both members of the pair of parties. With this, at least some of the allowing set of parties can provide to the pair of parties authentication of fingerprints of the key provided that pair.</p><p id="p-0021" num="0020">The system also includes forming of the carriers by the respective parties forming the indicia on a media layer and including additionally a substantial hiding layer. The carrier forming can include at least one party applying a scratch-off layer to the respective indicia bearing portion of the media as at least part of the hiding layer.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block flow chart showing according to one embodiment showing phases for generating a multiparty signature.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIGS. <b>2</b>A-<b>2</b>D</figref> are block diagrams of exemplary ways to coordinate generating keying material for a multiparty signature.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is a block flow chart of keying material according to one embodiment of an endorsement of a hash-based multiparty signature algorithm.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a block flow chart according to one embodiment of steps that a party member takes to generate a hash-based multiparty signature public key.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a block flow chart according to one embodiment showing steps that a signing party in a multiparty signature scheme may use to generate an endorsement on a message.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a block flow chart according to one embodiment showing steps that a party in a multiparty signature scheme may use to verify a multiparty signature.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block flow chart according to one embodiment of keying material for a multi-use public key signature scheme with at least two authentication paths.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a tree flow chart according to one embodiment of a multi-use public key signature scheme with at least three authentication paths.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block flow chart according to one embodiment for generating a multi-use public key.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block flow chart according to one embodiment for generating signatures from a multi-use public key.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>9</b>A</figref> is a block flow chart according to one embodiment for generating signature material for a second authentication path in a multi-use public key signature scheme with at least two authentication paths.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>9</b>B</figref> is a block flow chart according to one embodiment for generating signature material for a third authentication path in a multi-use public key signature scheme with at least three authentication paths.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block flow chart according to one embodiment for verifying signatures in a multi-use public key signature scheme with at least three authentication paths.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIGS. <b>11</b>A-J</figref> are exemplary detailed combination plan and section views of schematic and block diagrams for key establishment.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. <b>12</b>A-B</figref> are exemplary detailed combination flowchart and block diagrams for key establishment.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. <b>13</b>A-D</figref> are exemplary detailed combination flowchart and block diagrams for key distribution.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><p id="p-0038" num="0037">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, shown is an exemplary flow chart of phases for generating a multiparty signature. A multiparty signature as referred to here, may be any digital signature algorithm in which some plurality of signers in a group of predetermined potential signers, may each submit individual digital signatures or perform some calculation using private keying material, these individual signatures or calculations referred to here as endorsements, which may be insufficient on their own but which, when combined with some plurality of other endorsements through some algorithm, become a valid multiparty signature. Keying material as referred to here includes any data that is generated as a result of performing calculations or manipulations on a set of inputs or random seeds, which may be used to generate a public key and digital signature. Some examples of commonly used multiparty signature algorithms include ECDSA threshold signatures, ring signatures, block certification in blockchains, and multisig wallets in cryptocurrencies.</p><p id="p-0039" num="0038">At step <b>100</b> all of the parties who may potentially participate in a multiparty signature, referred to here as party members, coordinate to generate keying material based on the desired security level of the signature. The keying material generated, and the parameters used are dependent on the multiparty signature algorithm chosen.</p><p id="p-0040" num="0039">At step <b>105</b> the keying material generated in step <b>100</b> is used to generate and publish a public key. A public key as referred to here is one or more public values which may be necessary to generate a digital signature or verify the validity of a digital signature. In addition to the public key, the parameters and rules for the signature may be published. For example, in a blockchain environment, the subset of party members who may submit valid endorsements for any specific block may depend on some rules and values published on the blockchain.</p><p id="p-0041" num="0040">Publishing as described here may include any way that a party who is verifying the signature can access the required data with confidence that it has not been unduly manipulated or corrupted. This may be from a trusted or provable source, for example, through a blockchain, through a certificate authority, on a website, requested on-demand, or provided with the group signature itself. A provable source may be any trusted or untrusted source in which the public key can be proven, preferably cryptographically and potentially probabilistically, to be accurate.</p><p id="p-0042" num="0041">At step <b>110</b>, a cleartext message is proposed to party members for a multiparty signature on the message. This cleartext message may be proposed by anyone: for example, a party member, an external party, or an algorithmically generated message such as the output of a blockchain smart contract. From the cleartext message, a message digest may be generated, typically by applying a one-way function on the cleartext message. Typically, in a multiparty signature, all participating party members generate the same message digest.</p><p id="p-0043" num="0042">It is believed in the present invention that improvements in security and efficiency are achieved if each participating party member generates a unique message digest by salting the message with an extra value, as will be understood.</p><p id="p-0044" num="0043">At step <b>115</b>, any party members who decide to endorse the message may generate an endorsement on the generated message digest. A party member who submits an endorsement will be referred to as an endorser. The method by which an endorsement is generated will vary according to the multiparty signature algorithm. In some cases, one endorser's endorsement may take as input, data from another endorser's endorsement.</p><p id="p-0045" num="0044">At step <b>120</b>, the endorsements that are generated may be aggregated and/or made available to any party. As in step <b>115</b>, the aggregation of endorsements may be different depending on the multiparty signature algorithm used. The aggregated collection of endorsements will be referred to as the multiparty signature. The multiparty signature may be published as described in step <b>105</b> or delivered directly to a requesting party.</p><p id="p-0046" num="0045">At step <b>125</b>, a party may attempt to verify the validity of a multiparty signature using the public key and additional published information about the multiparty signature algorithm as described in step <b>105</b>.</p><p id="p-0047" num="0046">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, shown is a block diagram of an exemplary way in which party members may coordinate to generate keying material for a multiparty signature as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>100</b>. The fact that three party members are used is not meant to limit the scope of how many party members may coordinate but is used for clarity. It will be understood by those skilled in the art that the coordination shown is done over a communication medium consisting of a fully connected graph between all party members. Party members may coordinate in many ways rather than through direct synchronous channels between each other party member such as: through a gossip protocol over a fully connected or partially connected graph, through a ring topology, or any other means where a sufficient number of party members are able to communicate.</p><p id="p-0048" num="0047">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, shown is a block diagram of an exemplary way in which party members may publish public key information for a multiparty signature as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>105</b>. In the present embodiment, each party member publishes the generated public key and associated information with the cloud <b>200</b> representing any of a variety of publication means as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>105</b>. While all party members are shown as publishing the public key and associated information, this may be performed by any subset of the party members or even by a third party. Alternatively, the information may not be published initially but provided as needed with substantial proof that it is valid.</p><p id="p-0049" num="0048">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b>C</figref>, shown is a block diagram of an exemplary way in which a cleartext message is proposed to party members to generate endorsements as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>110</b>. The proposer is shown submitting a cleartext message to all party members via a direct channel. The proposer may not submit the cleartext message directly to all party members for any number of reasons so long as a sufficient subset of party members directly or indirectly receives the message in a timely manner to generate a valid multiparty signature. For example, if only two party members are required to endorse a message for a multiparty signature to be generated then the proposer may only send to two party members, one party member who can relay it to another party member, or even publish the message as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>105</b>. Additionally, the proposer may be a party member or an algorithm running on any machine as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>110</b>.</p><p id="p-0050" num="0049">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b>D</figref>, shown is a block diagram of an exemplary way in which endorsements may be generated and aggregated as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>110</b>, step <b>115</b>, and step <b>120</b>. Two party members are shown submitting endorsements that they respectively generated on uniquely generated hash digests in an environment where two out of three party members are required to submit endorsements in order to create a multiparty signature. Uniquely generated hash digests in this context does not necessarily imply that the hash digests themselves are unique as the digest size may be of a small enough size that collisions are possible, as will be understood.</p><p id="p-0051" num="0050">It is believed that by using uniquely generated hash digests, the security level of each endorsement may be aggregated such that the signature sizes for an endorsement for a multiparty signature with sufficient endorsement requirements may be reduced as compared to the size of a larger single signature for an endorsement with the same security level, as will be understood.</p><p id="p-0052" num="0051">For example, in the context of a traditional hash-based one-time-use signature, the signed message digest generally should be around 32 bytes to be secure against a 2nd preimage attack on the message digest, generating a signature of about 1,000 bytes. Instead, by aggregating many smaller one-time-use signatures on uniquely generated, smaller message digests, the combined security may remain the same but each endorsement may be less than 100 bytes. While the aggregated smaller endorsements may be larger than the single larger signature in an environment where only a few signatures are required, in a multiparty signature environment where a significant number of endorsement signatures are required from a plurality of endorsers, a significant improvement is realized by using the smaller endorsements as described. An exemplary embodiment of a smaller endorsement that is insecure on its own but becomes secure in a multiparty signature environment with sufficient endorsements is described in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>.</p><p id="p-0053" num="0052">While each endorser sends their endorsement to the original proposer, this is only meant for clarity. Alternatively, each endorser can send their endorsement to any party or any number of different parties or publish the endorsements such that, eventually, enough endorsements may be aggregated by a party to verify if a valid multiparty signature was generated.</p><p id="p-0054" num="0053">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b>E</figref>, shown is a block diagram of an exemplary way in which an aggregated multiparty signature may be published or shared as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>105</b> and step <b>125</b>. A proposer is shown communicating a cleartext message and two endorsements generated on the message to a validator. This scenario is not limiting but will be appreciated for clarity. A validator may be any party or algorithm which verifies a multiparty signature. A proposer may be any party, algorithm, or published source from which a validator may receive sufficient endorsements and associated data to verify a multiparty signature.</p><p id="p-0055" num="0054">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, shown is a block diagram of keying material for an exemplary embodiment of keying material for an endorsement of a novel hash-based multiparty signature algorithm per the teachings of the present invention and as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>2</b>D</figref>, and <figref idref="DRAWINGS">FIG. <b>2</b>E</figref>.</p><p id="p-0056" num="0055">The exemplary endorsement shown is a variation of so-called hash-based one-time-signatures as introduced by Leslie Lamport and improved upon in the contemporary Wintemitz-One-Time-Signature+(WOTS+). Hash-based signatures are a group of signatures believed to be secure against quantum computing attacks as they are generated almost entirely through the use of cryptographically secure hash functions. Some examples of cryptographically-secure hash functions include SHA3 and BLAKE2. While the present embodiment is based on cryptographically secure hash functions, it is believed that any one-way function which is sufficiently difficult to invert may be used.</p><p id="p-0057" num="0056">As in WOTS+, multiple series of values referred to here as hash ladders, are generated from a private seed. Each hash ladder is a series of rungs which are the images generated by a hash function whose preimage is the image of the rung before it. In the present embodiment, the first rung <b>302</b> in the first hash ladder is the image of a hash function with a private seed <b>300</b> as the preimage. The second rung <b>304</b> of the first hash ladder is the image after applying a hash function to the first rung <b>302</b>. This process continues to the top rung <b>306</b> of the ladder.</p><p id="p-0058" num="0057">It may be considered advantageous in certain circumstances to add additional inputs to the preimage of a rung or perform additional calculations between rungs. For example, in the present embodiment, the first rungs of the second and third hash-ladders are the images of a one-way function applied to the private seed and a cryptographic pepper P<b>1</b> <b>308</b> and P<b>2</b> <b>310</b> respectively. The cryptographic peppers shown in the embodiment may be a variety of values such as a publicly indexed salt or a randomly generated private seed so long as the generated hash-ladders are practically unique and at least one of the inputs is kept private.</p><p id="p-0059" num="0058">As is described in the WOTS+ protocol, the number of rungs, referred to here as the height, of each hash ladder determines the size of a message digest segment each ladder can sign. The number of bits each ladder can sign is known as the Winternitz parameter and is the log<sub>2</sub>(ladder_height). A Winternitz parameter of 8 for the first two ladders and 9 for the last ladder is shown as an example in the present embodiment equating to 2&#x2227;8=256 and 2&#x2227;9=512 rungs respectively per hash-ladder. Generally, a Winternitz value between 4 and 16 is chosen as an optimal tradeoff between signature verification time and signature size.</p><p id="p-0060" num="0059">Once all of the hash-ladders are generated for the endorsement keying material, the top rung of each ladder is combined, for example via XOR or concatenation, and used as a pre-image in a hash function. The resulting image <b>312</b> may be used as a public key for the endorsement. It may be desired to hash this value again to generate a preimage to the public key which could be used as a hidden salt for the message digest to further increase the security of each endorsement as described in <figref idref="DRAWINGS">FIG. <b>2</b>D</figref>.</p><p id="p-0061" num="0060">Two types of hash ladders are shown in the present embodiment. The first two hash ladders are used to sign message digests and will be referred to as message ladders. The last hash ladder is used to sign a checksum of the message ladders. As described in the WOTS+ protocol, checksum ladders prevent an adversary from forging a published signature by hashing up one or more of the message hash ladders of a revealed signature. While the WOTS+ protocol calls for all hash ladders to have the same Winternitz parameter, it is believed to be advantageous in computing environments where communication bandwidth is particularly limited to have one or more hash ladders with a different Winternitz parameter.</p><p id="p-0062" num="0061">As is described in the WOTS+ protocol, the number of message ladders determines how many w-bit digest segments can be signed by the signature and likewise specifies the security of the signature against second preimage attacks against the message digest. Generally, the preferred security level for hash functions is 32 bytes. A WOTS+ signature on a 32 byte digest is relatively massive, about 1,000 bytes, compared to a traditional modular exponentiation or ECC signature, generally 32 bytes of signature. In a multiparty signature setting where many endorsements are communicated in order to form a multiparty signature, these sizes may become prohibitive.</p><p id="p-0063" num="0062">The present exemplary embodiment keying material for an endorsement of a novel hash-based multiparty signature algorithm uses a significantly smaller message digest depending on the parameters selected during setup. As shown, a two byte hash digest would be signed along with a single checksum ladder and the resulting endorsement would be 96 bytes. This endorsement is clearly insecure on its own, as it is trivial to find a second preimage on a two byte hash. However, using the teachings of the present invention as described in <figref idref="DRAWINGS">FIG. <b>2</b>D</figref>, if one hundred endorsers, which will be understood to be a non-limiting quantity, each generate a unique digest for the same message, it is believed to be computationally infeasible for an adversary to calculate a second clear text message that would match all one hundred digests.</p><p id="p-0064" num="0063">It is believed that an approximation of the security of an aggregated collection of endorsements against a 2nd preimage attack on the digest may be calculated with the following formula:</p><p id="p-0065" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>security_level=digest_bits&#xd7;num_endorsements.<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0066" num="0064">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, shown is a flow chart describing the steps each party member may execute in order to generate an exemplary embodiment of a public key for a novel hash-based multiparty signature algorithm.</p><p id="p-0067" num="0065">At step <b>330</b> the party members may coordinate amongst themselves to calculate or determine a set of parameters for the multiparty signature based on at least the level of security desired as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, and <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>. Alternatively these parameters may be predetermined by a previous coordination between the potential signers or provided by another party or gathered from a published source. In the present embodiment, a novel hash-based multiparty signature algorithm is selected whose endorsement keying material was described in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>.</p><p id="p-0068" num="0066">At step <b>335</b> each party member may select one or more random seeds that they may use according to the established multiparty signature parameters to generate the keying material necessary to form an endorsement. Random seeds may be selected from a set of previously gathered data or generated in many ways, for example through cryptographically-secure pseudorandom number generators on a personal computer, observing random or pseudorandom phenomena, or polling published random data. Many of these random seeds may be stored in a private and secure manner such as on physical medium or on an encrypted storage device on a computer or server.</p><p id="p-0069" num="0067">At step <b>340</b> each party member may generate keying material for the multiparty signature or an endorsement according to the parameters and protocol of the multiparty signature algorithm that has been chosen as described in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>. The keying material may make use of any random seeds that may have been selected by the party member. The keying material may be stored in a private and secure manner or may be reconstructed as needed. An exemplary embodiment of endorsement keying material was described in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>.</p><p id="p-0070" num="0068">At step <b>345</b> each party member may calculate a public key for the multiparty signature. Alternatively, the construction of a public key from the generated keying material may be done by a subset of party members, or by a third party or algorithm running on a computing machine. A public key is as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref> step <b>105</b>. The present exemplary embodiment of a public key of a novel hash-based multiparty signature may be a list of all party members' endorsement public keys along with any rules such as how many endorsements are necessary for the multiparty signature to be valid.</p><p id="p-0071" num="0069">At step <b>350</b> a subset of party members or a third party or an algorithm running on a computing machine may publish any information or data that may be used to verify the validity of a multiparty signature generated by the party members as described in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. This may include, for example, an endorsement public key from each party member, the selected parameters of the group signature, or an aggregated public key from calculations performed by each signatory. In the present exemplary embodiment, the public key and the public security parameters used to generate the keying material may be published to a blockchain.</p><p id="p-0072" num="0070">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, shown is a flow chart describing a series of steps that may be used by a party member to generate an exemplary embodiment of an endorsement on a message in a novel hash-based multiparty signature algorithm.</p><p id="p-0073" num="0071">At step <b>400</b> a cleartext message that the endorser would like to generate a group signature on is selected. The endorser may generate or receive the message in any way as described in <figref idref="DRAWINGS">FIG. <b>2</b>C</figref>.</p><p id="p-0074" num="0072">At step <b>405</b> a digest is generated for the message, typically in prior art by applying a hash function to the message. As described in <figref idref="DRAWINGS">FIG. <b>2</b>D</figref>, more efficient endorsements may be achieved by including another value as an input salt to the message digest, resulting in uniquely generated digests per endorser. In the present exemplary embodiment, the endorser may combine their endorsement public key with the cleartext message via, for example, XOR or concatenation, and hash the combination to form a uniquely generated message digest. Alternatively, a secret or random value may be used instead of the endorsement public key and provided along with the endorsement. For clarity, in the present exemplary embodiment, 16 bits is the length of the message digest though it will be understood that this is an example and not a limitation.</p><p id="p-0075" num="0073">At step <b>410</b> an endorsement is calculated on the message digest that was calculated in step <b>405</b> as described in <figref idref="DRAWINGS">FIG. <b>2</b>D</figref>. In the present exemplary embodiment, the keying material used is as described in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, the peppers for the second and third hash ladders are secret random values, and the message digest is 16 bits as described in step <b>405</b>. The first 8 bits of the message digest is signed by the first message hash ladder by revealing the rung at the height equal to the integer value of the 8 bit segment plus 1. For example, if the first 8 bit binary segment is 10000010 which is 130 in decimal, the endorser would reveal rung <b>131</b> in the first hash ladder. Similarly, the second hash ladder signs the second 8 bit binary segment of the hash digest. For example, if the second 8 bit binary segment is 10101010 which is 170 in decimal, the endorser would reveal rung <b>171</b> in the first second ladder. Finally, the endorser may calculate a checksum for the first two ladders by summing the revealed height of each message ladder and revealing the rung in the third hash ladder which is at:</p><p id="p-0076" num="0000">position&#x2212; checksum_ladder_height&#x2212;(revealed_rung_height_1+ revealed_rung_height_2). In the present example, the revealed checksum rung would be 512-(131+171)=210. In the present example, the endorser's public key was used as a salt in the generation of the message digest as described in step <b>405</b>. The structure of the endorsement in this example may be the message, the three revealed rungs, and the public key of the endorser.</p><p id="p-0077" num="0074">At step <b>415</b> the endorsement is published in any way as described in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>. In the present exemplary embodiment, for clarity, the endorsers may all send their endorsement as described in step <b>410</b> to a third party for verification. In the present exemplary embodiment any aggregated group of a sufficient number of valid endorsements from valid endorsers on message digests for the same cleartext message constitutes a valid multiparty signature on that cleartext message. For clarity, in the present embodiment, a sufficient number of valid endorsements may be 50 though it will be understood that this is an example and not a limitation.</p><p id="p-0078" num="0075">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, shown is a flow chart describing a series of steps that may be used by any party to validate an exemplary embodiment of a novel hash-based multiparty signature.</p><p id="p-0079" num="0076">At step <b>420</b>, the verifying party receives a message and endorsement. In the present exemplary embodiment, the structure of the endorsement is as described in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, step <b>415</b>.</p><p id="p-0080" num="0077">At step <b>425</b>, the verifying party determines whether it has already received and verified the most recently received endorsement. If the verifying party has already received and verified the most recent endorsement then it throws away the endorsement and returns to step <b>420</b>. If the verifying party has not yet received and verified the most recent endorsement then it moves to step <b>430</b>.</p><p id="p-0081" num="0078">At step <b>430</b>, the verifying party calculates the endorsement public key from the endorsement and the message. In the present exemplary embodiment, the public key of the endorsement is included in the endorsement. The verifying party may use the included public key along with the cleartext message to regenerate the message digest for the endorsement. As described in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> step <b>410</b>, the message digest tells the verifying party what the height of each of the revealed rungs in the endorsement is. Using this information, the verifying party can hash the remaining height of each hash ladder and recreate the public key of the hash ladder from the revealed rungs. The verifying party uses this calculated public key in step <b>435</b>.</p><p id="p-0082" num="0079">At step <b>435</b>, the verifying party determines if the calculated public key is valid according to the rules of the multiparty signature. In the present exemplary embodiment, if the endorsement public key that is recalculated is equal to the provided endorsement public key and it is found in the public key of the multiparty signature, then the endorsement is considered valid for that cleartext message and the verifying party moves to step <b>440</b>. If the calculated endorsement public key does not match the provided endorsement public key or the public key is not in the multisig public key, then the endorsement is invalid and may be thrown away and the verifying party waits for another endorsement at step <b>420</b>.</p><p id="p-0083" num="0080">At step <b>440</b>, the verifying party stores a valid endorsement and associates it with a cleartext message. Endorsements may be stored in any retrievable way until a valid threshold of endorsements is received to make a valid multiparty signature or the verifying party gives up on receiving the multiparty signature. In the present exemplary embodiment, the endorsements may be stored in a key-value database with the key being a hash of the cleartext message and the value being the list of valid endorsements received for that cleartext message. The verifying party then moves to step <b>445</b>.</p><p id="p-0084" num="0081">At step <b>445</b>, the verifying party checks to see if it has enough endorsements for the cleartext message of the last verified endorsement to form a valid multiparty signature as per the rules of the multiparty signature algorithm used. In the present exemplary embodiment, as described in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> step <b>415</b>, a sufficient threshold of endorsements may be 50. If the verifying party has a list of at least 50 endorsements for a given cleartext message then the verifying party may move to step <b>450</b>. Otherwise the verifying party may return to step <b>420</b> and wait for more endorsements.</p><p id="p-0085" num="0082">At step <b>450</b>, the verifying party has received enough endorsements for a valid multiparty signature on a given cleartext message. The stored endorsements may be provided to any other party along with the cleartext message to allow for further verification.</p><p id="p-0086" num="0083">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, shown is a block diagram of an exemplary novel construction of a multi-use public key for a hash-based signature with multiple authentication paths. Shown is signature keying material <b>500</b> as described in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> with an additional intermediate hash <b>505</b> called a validate salt whose preimages are the top rungs of all but the first hash ladder per keying material. Additionally, while only four hash ladders are shown for clarity, the keying material may be extended to any number of hash ladders as required and as described in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>. While VS<sub>8 </sub><b>505</b> is shown as an example to enable a second authentication path, it is not a limiting requirement to having multiple authentication paths for each signature as an additional authentication path will be described in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0087" num="0084">Shown at <b>510</b>, what was described as an endorsement public key in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref> is now referred to as a validate key. A validate key may be described as a public key for a single hash-based signature which may be one of many validate keys all of which correspond to a single multi-use public key. In this way a validate key is able to validate a signature made using the corresponding keying material. For example, a signature using keying material <b>8</b> <b>500</b> can be verified against validate key <b>8</b> <b>510</b>. It is believed that the preferred achievable embodiment of a multi-use public key for hash-based signatures is for a constant length public key to be capable of validating an arbitrary but predetermined number of signatures. In hash-based signatures where a public key can generally only be used once, a secondary data structure is believed to be needed to attribute multiple one-time use hash-based signature validate keys to a single, constant length multi-use public key.</p><p id="p-0088" num="0085">In the prior art, the only known mechanism for a multi-use public key for hash-based signatures is through the use of tree structures as described in the XMSS signature protocol. In the tree-based approach, a single seed is used to generate a series of traditional hash-based signatures and the public key of each signature becomes a leaf in a tree with provable membership, like a merkle tree. The root of the tree is considered the public key and each leaf is a validate key as described. When signing a message, a single leaf of the tree-based multi-use public key is generally used to generate a traditional hash-based signature on the message. This hash-based signature can then be verified against the validate key as described in the WOTS+ protocol or in the exemplary embodiment described in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>. An additional verification step is then required to verify the validate key corresponds with the multi-use public key. In the tree-based approach this is generally accomplished by providing a merkle proof of inclusion for the validate key in the merkle tree. This merkle proof is traditionally required along with the traditional hash-based signature to validate the signature. For a multi-use public-key with about four billion validate keys, this extra merkle proof may end up doubling the size of a traditional WOTS+ signature by adding an additional <b>32</b> hash digests to the signature size, generally resulting in an additional 1,000 bytes of data.</p><p id="p-0089" num="0086">Shown in the present embodiment is a novel approach to generating a multi-use public key for hash-based signatures which, in some computing environments, adds only a single hash digest to the signature size and which can provide multiple authentication paths to provide the most efficient proof based on the state of the signature verifier.</p><p id="p-0090" num="0087">It will be noticed that keying material <b>7</b> <b>515</b> and validate key <b>7</b> <b>535</b> are generated using validate key <b>8</b> <b>510</b> and the same peppers <b>520</b>, <b>525</b>, and <b>530</b> rather than using a private seed. It is believed that the peppers in this embodiment should remain private and may be unique per validate key though it is believed to be more efficient from a private key storage perspective to reuse the peppers for each validate key.</p><p id="p-0091" num="0088">By using validate key <b>8</b> as input to keying material <b>7</b>, in the same way as the private seed is used to generate keying material <b>8</b>, it becomes possible for another party to verify a signature using keying material <b>8</b> to validate key <b>7</b> if the party has access to the validate salt for keying material <b>7</b>. It will be apparent that this is because validate key <b>7</b> uses the top rung of the first hash ladder from keying material <b>7</b> and the validate salt for keying material <b>7</b> as inputs to a hash function. The party who receives a signature using keying material <b>8</b> can trivially calculate the entire first hash ladder of keying material <b>7</b> as the only input to that hash ladder is validate key <b>8</b> which they can calculate from the signature made using keying material <b>8</b>. More generally, as each validate key is used as the input for another set of keying material in this same manner, a chain may be formed of an arbitrary number of validate keys and keying materials, the last validate key being used as a public key <b>540</b>. Any party who receives a signature from a validate key in the chain can authenticate it to the public key of the chain if the party has the validation salts for all validate keys between the signature it received and the public key.</p><p id="p-0092" num="0089">It is believed that the ideal way to use this chain of validation keys is to use the last keying material in the chain, whose validation key <b>540</b> is the public key of the chain, for the first signature, with each subsequent signature using the keying material whose validation key is used as the input to the previous signature's keying material. A cryptographer skilled in the art will notice that because the first hash ladder of each prior signature is completely revealed whenever a signature is verified. Using the checksum protocol described in WOTS+ or in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, it is trivial to forge any previous signature upon receiving a later signature. There are at least two ways to address this issue. One exemplary method is to add another checksum hash ladder which locks the first hash ladder. This is accomplished by revealing the same height rung on the checksum ladder that is revealed in the first ladder. This of course adds an additional message digest to the size of the signature. A second exemplary method relies on an environment in which previous signatures, once verified by the environment, will no longer accept modified versions of the signature. An example of such an environment is in a distributed blockchain network where, once a signature is verified by the network and some state corresponding to that signature is committed to the blockchain, no modified version of that signature will ever be considered valid.</p><p id="p-0093" num="0090">This chain of validation keys represents a novel multi-use public key for hash-based signatures which is believed to be particularly advantageous in environments where verifying parties reliably receive uninterrupted sequential signatures generated from the chain and where communication bandwidth is limited or a significant plurality of these signatures are being communicated, limiting the use of the tree-based approach. One such environment may be in blockchain consensus protocols where a plurality of distributed nodes is incentivized to be reliably online and frequently sending and receiving signatures confirming the state of transactions. It is believed that in such an environment, the vast majority of the time a party receives a signature, it will have already validated the previous signature to the multi-use public key, and will have the validate salt for the previous signature. In this situation, the party can quickly verify the signature against the public key by verifying it against the previous validate key without any additional information. This may be achieved by calculating the validate key for the recently received signature, calculating the top rung of the first hash ladder for the previously received signature from the calculated validate key, and hash it with the stored validate salt of the previously received signature.</p><p id="p-0094" num="0091">Even in an environment where nodes receive most sequentially generated signatures from a multi-use public key, there may be situations where a party misses one or a couple signatures. In this situation, the party may use an alternate authentication path by requesting all validation salts between the recently received signature and the last signature verified by the public key. Alternatively, these validation salts may be published anytime a signature is generated so that they can be freely retrieved if needed. In situations where a party has missed a significant number of signatures for a multi-use public key, such as a party connecting to a network for the first time or a party going offline for an extended period of time, it may be inefficient to use the second authentication path of requesting missing validation salts. A third authentication path is presented in <figref idref="DRAWINGS">FIG. <b>6</b></figref> that builds on the prior art tree approach to handle this condition.</p><p id="p-0095" num="0092">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, shown is a block diagram for an exemplary embodiment of a novel multi-use public key for hash-based signatures which combines the novel signature chain approach described in <figref idref="DRAWINGS">FIG. <b>5</b></figref> with the prior art tree approach as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0096" num="0093">Shown is an exemplary chain of <b>8</b> validate keys generated from a single private seed <b>600</b> corresponding to a single public key <b>605</b> as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. The peppers described in <figref idref="DRAWINGS">FIG. <b>5</b></figref> have been omitted from the figure for clarity but may be used in the same way in the present embodiment. Once a multi-use public key chain has been generated as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, each validate key is made into a leaf of a provable tree such as a merkle tree. The root of this tree is calculated according to the provable tree structure used and this root becomes a second public key for the multi-use signature.</p><p id="p-0097" num="0094">By adding the tree to the chain-based approach, there are now at least three authentication paths for any node to use to verify a signature depending on their state. The first two authentication paths are as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and are most efficient when a node is substantially receiving sequential signatures from a multi-use public key and uses the first public key segment of the multi-use public key which is the last rung in the signature chain <b>605</b>. The third authentication path can be provided to parties who have missed a significant number of sequential signatures, such as a party connecting to a network for the first time or a party going offline for an extended period of time, in which case a merkle proof may be provided from the validate key of the oldest received unverified signature to the second public key segment of the multi-use public key which is the root of the validate key tree <b>610</b>. Once a party has used the tree-based authentication path to validate a recent signature, it may begin using the more efficient chain authentication paths for subsequent signatures.</p><p id="p-0098" num="0095">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, shown is a flowchart for generating an exemplary embodiment of a novel multi-use public key for hash-based signatures as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, which will be appreciated for clarity.</p><p id="p-0099" num="0096">At step <b>700</b>, the party generating the public key selects the parameters for the signatures corresponding to each validation key as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. These parameters generally determine the security level and size of each signature.</p><p id="p-0100" num="0097">At step <b>705</b>, the party generating the public key selects the number of signatures that can be generated from the keying material corresponding to the public key as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0101" num="0098">At step <b>710</b>, the party generating the public key selects suitably random seeds as described in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref> step <b>335</b>.</p><p id="p-0102" num="0099">At steps <b>715</b>, <b>720</b>, <b>725</b>, <b>730</b>, and <b>735</b>, the party generating the public key uses the signature parameters and random seeds to iteratively generate validation keys until the selected number of validation keys is generated resulting in a signature chain as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0103" num="0100">At step <b>740</b>, the last generated validation key is used as the first segment of the public key as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. It will be noted that additional computations or operations may be applied between the final validation key and the public key if desired.</p><p id="p-0104" num="0101">At step <b>745</b>, the generated validation keys are used to generate a merkle tree of validate keys as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. It will be noted that a merkle tree is used as a non-limiting example and that any tree, graph, or other data structure in which inclusion in a membership may be proven may be used.</p><p id="p-0105" num="0102">At step <b>750</b>, the second public key segment is calculated from the tree or other data structure used in step <b>745</b>. In the case of a merkle tree, the second segment of the public key may be the root of the merkle tree.</p><p id="p-0106" num="0103">At step <b>755</b>, the party generating the public key will publish the public key segments and any additionally required information in any manner as described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, step <b>105</b>.</p><p id="p-0107" num="0104">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, shown is a flowchart for generating a series of signatures from an exemplary embodiment of a novel multi-use public key for hash-based signatures as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and <figref idref="DRAWINGS">FIG. <b>5</b></figref>, which will be appreciated for clarity.</p><p id="p-0108" num="0105">At step <b>800</b>, the public key owner may initialize their state. In most hash-based signature protocols which have multi-use public keys, it is believed to be important to maintain state to prevent keying material from being reused to generate a different signature as is described in prior art. In this exemplary embodiment, the keying material is used sequentially and so it is believed to be sufficient to store the index of the last used keying material and to never reuse a used index.</p><p id="p-0109" num="0106">At step <b>805</b>, the public key owner may select a cleartext message to sign. This message may be selected in any way including as described in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, step <b>400</b>.</p><p id="p-0110" num="0107">At step <b>810</b>, the public key owner may restore the next unused keying material in order to sign the message. Keying material may either be stored on creation or regenerated from the random seeds on-demand.</p><p id="p-0111" num="0108">At step <b>815</b>, a digest is created from the cleartext message selected in step <b>805</b>. The digest may simply be generated in many ways such as a hash of the message as described in prior art or generated as described in <b>4</b>A, step <b>405</b>.</p><p id="p-0112" num="0109">At step <b>820</b>, a signature on the digest calculated in step <b>815</b> is calculated as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0113" num="0110">At step <b>825</b>, the generated signature is published as needed. This may be accomplished in many ways such as those described in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> and <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> step <b>415</b>.</p><p id="p-0114" num="0111">At step <b>830</b>, the used keying material state initialized in step <b>800</b> is updated to reflect that another keying material has been used and may not be used to generate further signatures.</p><p id="p-0115" num="0112">At step <b>835</b>, the public key owner checks the used keying material state that was updated in step <b>830</b> to determine if any unused keying material remains. If no keying material remains, then the public key material is spent <b>840</b> and can no longer be used to generate signatures. If additional keying material is available, then the public key owner can return to step <b>805</b> and select additional messages to sign.</p><p id="p-0116" num="0113">Referring now to <figref idref="DRAWINGS">FIG. <b>9</b>A</figref>, shown is a flowchart for publishing validate salts for validate keys in an exemplary embodiment of a novel multi-use public key for hash-based signatures as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and <figref idref="DRAWINGS">FIG. <b>5</b></figref>, which will be appreciated for clarity. These validate salts may be requested from or needed by parties who are trying to authenticate a signature to the first public key segment but which have not received one or more published signatures between the last verified signature and signature they are trying to verify as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0117" num="0114">At step <b>900</b>, the public key owner selects the validate key for which a validate salt is needed. At step <b>905</b>, the public key owner may regenerate the keying material for the validate key selected in step <b>900</b> as described in <figref idref="DRAWINGS">FIG. <b>8</b></figref> step <b>810</b>.</p><p id="p-0118" num="0115">At step <b>910</b>, the public key owner calculates the salt from the keying material regenerated in step <b>905</b>. Alternatively, if the keying material or the validation salt was kept in memory or storage, it may be simply retrieved.</p><p id="p-0119" num="0116">At step <b>915</b>, the validate salt may be published as described in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> or shared with a requesting party.</p><p id="p-0120" num="0117">Referring now to <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>, shown is a flowchart for generating merkle proofs for validate keys in an exemplary embodiment of a novel multi-use public key for hash-based signatures as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and <figref idref="DRAWINGS">FIG. <b>5</b></figref>, which will be appreciated for clarity. These merkle proofs may be requested from or needed by parties who are trying to authenticate a signature to the second public key segment but which have not received one or more published signatures between the last verified signature and signature they are trying to verify as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0121" num="0118">At step <b>920</b>, the public key owner selects the validate key for which a merkle proof is needed. At step <b>925</b>, a proof is generated on the validate key selected at step <b>920</b> which verifies the key to the second public key segment as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. This may require regenerating the selected validate key and other validate keys in order to form a proof.</p><p id="p-0122" num="0119">At step <b>915</b>, the proof on the validate key may be published as described in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref> or shared with a requesting party.</p><p id="p-0123" num="0120">Referring now to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, shown is a flowchart for verifying signatures in an exemplary embodiment of a novel multi-use public key for hash-based signatures as described in <figref idref="DRAWINGS">FIG. <b>6</b></figref> and <figref idref="DRAWINGS">FIG. <b>5</b></figref>, which will be appreciated for clarity.</p><p id="p-0124" num="0121">At step <b>1000</b>, a party is trying to verify a message and a signature as described in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref>. For the party to verify the signature they should have access to published public key information as described in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0125" num="0122">At step <b>1005</b>, the party calculates a digest from the message using the same algorithm that the signer used as in step <figref idref="DRAWINGS">FIG. <b>8</b></figref>, step <b>815</b>.</p><p id="p-0126" num="0123">At step <b>1010</b>, a validate key is calculated from the signature and calculated digest from step <b>1005</b>, as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0127" num="0124">At step <b>1015</b>, the party checks any state that it is maintaining to determine the index of the last signature it validated from the public key it is verifying the signature against. If the party validated the previously generated signature from that public key and stored the validate salt from that previous signature, then it may move to step <b>1025</b>. If it did not verify the last generated signature or it does not have the validate salt from that signature then it moves to step <b>1020</b> to get additional proof.</p><p id="p-0128" num="0125">At step <b>1020</b>, additional proof is gathered to follow an alternate authentication path as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref> and <figref idref="DRAWINGS">FIG. <b>6</b></figref>. This may be in the form of validate salts for authenticating against the first segment of the public key or in the form of inclusion proofs for authenticating against the second segment of the public key.</p><p id="p-0129" num="0126">At step <b>1025</b>, if the party is using authentication path <b>2</b>, then it attempts to recreate the validate key for signature it is trying to verify. If the party is using authentication path <b>1</b>, then it attempts to recalculate the validate key of the previous signature from the information it restored in step <b>1015</b> or gathered in step <b>1020</b> and the signature it is trying to validate.</p><p id="p-0130" num="0127">At step <b>1030</b>, if the party is using authentication path <b>2</b>, then it compares the validate key calculated in step <b>1025</b> against the validate key it received an inclusion proof for. If the party is using authentication path <b>1</b>, then it compares the calculated validate key from step <b>1025</b> with the validate key it either recovered in step <b>1015</b> or calculated in step <b>1025</b>. In either case, if the validation keys being compared are the same, the signature is considered valid, otherwise it is considered invalid.</p><p id="p-0131" num="0128">Turning now to <figref idref="DRAWINGS">FIG. <b>11</b>A-J</figref>, exemplary detailed combination plan and section views of schematic and block diagrams for key establishment are presented in accordance with aspects of the teachings of the invention. <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> shows a substrate with indicia magnified; <b>11</b>B is the hiding process; <b>11</b>C is the carrier formation; <b>11</b>D is the setup for the transfer from carrier to platform in of an example substrate; <figref idref="DRAWINGS">FIG. <b>11</b>E</figref> is the ongoing transfer; <figref idref="DRAWINGS">FIG. <b>11</b>F</figref> is the completion of the transfer; <figref idref="DRAWINGS">FIG. <b>11</b>G</figref> is a plan view (the other figures on this sheet are sections) with plural transferred substrates; <b>11</b>H is multiple substrates that have been transferred onto a single platform; <figref idref="DRAWINGS">FIG. <b>11</b>I</figref> is the ongoing configuration change of the platform from first to second configuration; and <figref idref="DRAWINGS">FIG. <b>11</b>J</figref> is the platform in the second configuration.</p><p id="p-0132" num="0129">Referring now more specifically first to <figref idref="DRAWINGS">FIG. <b>11</b>A</figref>, a substrate <b>1110</b> is shown containing multiple indicia features, such as for instance barcode printing or the like, indicated as raised portion <b>1115</b> for clarity, but without limitation. The pattern of the indicia encodes at least key information and optionally additional index and/or position and/or party identification information, as will be appreciated. In some examples carriers can be placed in predefined positions, such as corresponding to party, and/or in other examples positions can be labeled and/or mainly randomly assigned. With non-assigned placement the party may or may not be determined by the indicia, as mentioned.</p><p id="p-0133" num="0130">Referring next to <figref idref="DRAWINGS">FIG. <b>118</b></figref>, substrate <b>1110</b> is shown in a process of relative movement with respect to an example hiding layer <b>1120</b>.</p><p id="p-0134" num="0131"><figref idref="DRAWINGS">FIG. <b>11</b>C</figref> shows substrate <b>1110</b> hidden by hiding layer <b>1120</b> and the two brought into close proximity and/or contact, for instance, so that they together form what can here be called a &#x201c;carrier&#x201d; <b>1125</b>. In some examples, a carrier can include other means, such as molded polymer housing as are known to keep two cards together or, as just another example, a box that holds the media, and/or scratch-off adhered to the media where the combination can be said here to be the carrier.</p><p id="p-0135" num="0132"><figref idref="DRAWINGS">FIG. <b>11</b>D</figref> shows the carrier brought into a preparatory orientation relative to what can here be called a &#x201c;platform&#x201d; portion <b>1130</b>, the zig-zag edge of which indicating that only a portion is being shown, as will be understood.</p><p id="p-0136" num="0133"><figref idref="DRAWINGS">FIG. <b>11</b>E</figref> shows substrate <b>1110</b> in the ongoing process of motion relative to platform <b>1130</b>, where the indicia ideally can remain verifiably hidden at least to one of an acceptably practical level or degree during this process.</p><p id="p-0137" num="0134"><figref idref="DRAWINGS">FIG. <b>11</b>F</figref> shows substrate <b>1110</b> positioned relative to platform <b>1130</b> so that the indicia remains hidden.</p><p id="p-0138" num="0135">Referring now more specifically first to <figref idref="DRAWINGS">FIG. <b>11</b>G</figref>, a larger portion of platform <b>1130</b> is shown here in plan (not section as elsewhere in this figure) view as mentioned, with plural substrates <b>1110</b> arrayed.</p><p id="p-0139" num="0136">Referring to <figref idref="DRAWINGS">FIG. <b>11</b>H</figref> (back now) in section view, two example substrates <b>1110</b><i>a </i>and <b>1110</b><i>b </i>are shown with indicia hidden by the exemplary portion of the platform, as indicated and will be understood.</p><p id="p-0140" num="0137"><figref idref="DRAWINGS">FIG. <b>11</b>I</figref> shows the ongoing motion from what may be called the &#x201c;first platform configuration&#x201d; to what may here be called the &#x201c;second platform configuration,&#x201d; with the respective indicia transitioning from being what can here be called &#x201c;hidden&#x201d; to what can here be called &#x201c;revealed.&#x201d;</p><p id="p-0141" num="0138"><figref idref="DRAWINGS">FIG. <b>11</b>J</figref> shows substrate <b>1110</b><i>a </i>and <b>1110</b><i>b </i>in the second platform configuration, with their respective indicia revealed to observer persons and/or apparatus, indicated without loss of generality by sensor systems <b>1190</b><i>a</i>, <b>1190</b><i>b </i>and <b>1190</b><i>c. </i></p><p id="p-0142" num="0139">Turning now to <figref idref="DRAWINGS">FIG. <b>12</b>AB</figref>, exemplary detailed combination flowchart and block diagrams for key establishment are presented in accordance with aspects of the teachings of the invention. <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> shows the system for creating the key indicia and <b>12</b>B is the system for establishing a first and a second configuration state for a platform.</p><p id="p-0143" num="0140">Referring now more specifically first to <figref idref="DRAWINGS">FIG. <b>12</b>A</figref>, box <b>1210</b> is where each of plural parties forms cryptographic key information, as is known in the art. In some examples, the information can be &#x201c;whitened&#x201d; and/or &#x201c;hashed&#x201d; to produce what is used in subsequent steps, although it will be understood that after a physical reveal step additional pre-images (combined in whatever hashing or other structure) of revealed images may be released by the parties for additional hiding of the ideally but perhaps imperfectly hidden images.</p><p id="p-0144" num="0141">Box <b>1220</b> is each party forming what can here be called a &#x201c;physical instantiation&#x201d; of the key information, which is any way that the key is encoded in and/or represented by physical matter or the state of such matter, including for instance electronic and/or quantum and/or printed storage technologies of whatever kind and in whatever combination, whether human and/or machine readable.</p><p id="p-0145" num="0142">Box <b>1230</b> is where each party takes the physical instantiation from step <b>1220</b> and transforms it, by whatever means and/or method, into a form that now hides and/or mainly or is believed to strongly and/or significant and/or practically hide, the key information from observers, based on reasonable assumptions about what kinds of technology and/or sensor means the observers are able to bring to bear at what distance and for what length of capture time and length of analysis time, as will be understood.</p><p id="p-0146" num="0143">Box <b>1240</b> is where the parties contribute their respective carrier assemblies to what will be called here the configuration of a platform in a first state. In some examples the parties each position their respective carrier relative to the platform, ideally in what may here be called a &#x201c;security ceremony.&#x201d; However, in some examples the platform configuration may take the carriers from the parties and/or other parties may be involved in the transfer to the platform, as will be understood.</p><p id="p-0147" num="0144">Referring next now more specifically first to <figref idref="DRAWINGS">FIG. <b>12</b>B</figref>, box <b>1260</b> is where the assembly of plural carriers, from box <b>1240</b> already described, are included into a platform in a first configuration, such that the key information is believed mainly and/or largely and/or securely under relevant security assumptions hidden from observers.</p><p id="p-0148" num="0145">Step <b>1270</b> is the changing of the configuration of the platform from the first configuration state just described to the second configuration state that mainly and/or easily and/or directly reveals at least most of the key information to observers. Here the term &#x201c;observers&#x201d; can be used to mean any combination of people and instruments, whatever their proximity and interconnection, with purpose of obtaining the indicia and/or other information encoded in platform placement.</p><p id="p-0149" num="0146">Turning now to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, an exemplary detailed combination flowchart and block diagram for key distribution in accordance with aspects of the teachings of the invention is shown.</p><p id="p-0150" num="0147">Box <b>1310</b> is the plural contributions of carriers, such as for instance as already described with reference to <figref idref="DRAWINGS">FIGS. <b>11</b> and <b>12</b></figref>, from each of plural parties. This allows each party, such as &#x201c;A&#x201d; and &#x201c;B&#x201d; shown as just two examples of potentially many, to each supply a number or otherwise measured quantity of keys that are hidden physically.</p><p id="p-0151" num="0148">Box <b>1320</b> is the content of the container at least being partly at least what may be referred to as rearranged and/or randomized and/or tumbled and/or tossed around. A bingo hopper or a hat are common examples. This ideally hides which party will receive which carriers in <b>1330</b>; however, a known and/or partly secret re-ordering is also believed to offer at least some advantages in getting carriers to different parties than those that have submitted them. For instance, an adversary may be disadvantaged by not knowing which pairs of parties did not receive keys directly and rather relied on other techniques, mentioned below, to fill those in.</p><p id="p-0152" num="0149">Box <b>1330</b> is the distribution to the parties so that they each receive plural carriers from the container. In some examples, the number and/or other measure (for instance by volume or weight or color distribution) of how many they receive can be constrained or even held constant. It is believed, however, that when the total number is larger the differences between the number each party obtains becomes less significant.</p><p id="p-0153" num="0150">Box <b>1340</b> is at least cryptographic fingerprints of the keys in the carriers being authenticated by the parties to the parties. Each party authenticates plural fingerprints and each such fingerprint is received as authenticated by plural parties. Typically, all parties might authenticate all the fingerprints for their respective keys in the carriers to all the other participants, such as by posting signatures on the respective fingerprints, either separately or, for instance, as a list or tree. One example way to achieve this uses the authentication keys revealed during <figref idref="DRAWINGS">FIG. <b>11</b></figref> and <figref idref="DRAWINGS">FIG. <b>12</b></figref> to digitally sign so-called &#x201c;key fingerprints&#x201d; of the keys included by the respective party in the carriers. In other examples, as will be understood, the fingerprints to be authenticated and/or images of the keys under one-way functions can be included directly in the information revealed in <figref idref="DRAWINGS">FIG. <b>11</b></figref> and <figref idref="DRAWINGS">FIG. <b>12</b></figref>. Other means and/or methods to authenticate the keys in the carriers, in terms of from which party they originate, are known in the art and include all manner of digital authentication techniques and/or physical authentication techniques, such as for instance public key digital signatures, scratch-off, document security techniques, publishing prefixes or other portions of the keys, and so forth.</p><p id="p-0154" num="0151">It is believed that with sufficiently many carriers contributed by each party that every party will, with an acceptably high probability, get keys for almost all the parties. These keys can be used to protect communication confidentiality and/or authenticity, as well as for the dining cryptographers protocols, among other things. There are many ways to fill in the keys for a pair of parties that wished to get a key but did not, including repeating the protocol with different parameters and/or using other key distribution techniques, such as public key and/or quantum. Another example way includes schemes where other of the parties can a pair that did not get a direct key between the pair in either direction. Each assisting party sends to the two parties of the pair parts of a replacement key. The assisting parties each send the same new part, each under cryptographic cover of the key they have with the respective one of the two parties. This lets each of the two receiving parties of the pair obtain the same secret key, by combining the parts received such as by x&#x2014;or, that is then known to the two parties and only also to the set of assisting parties jointly.</p><p id="p-0155" num="0152">What can here be called a &#x201c;fingerprint&#x201d; of a key is any hash and/or one-way function and/or selection of portions and/or other mathematical restriction and/or encoding of key that is believed to not mainly or wholly reveal the key or make it too easy to compute but on the other hand also serves to identify the key and, at least in some examples, for which it is believed difficult to arrive a second key for a given fingerprint and/or to arrive at two keys with a common fingerprint.</p><p id="p-0156" num="0153">The assisting parties can provide authentication of the parts they provide to the pair, such as by signing fingerprints of the parts. The signed fingerprints can also for instance be posted.</p><p id="p-0157" num="0154">What can hear be called a &#x201c;hiding layer&#x201d; can be metal (stainless steel business cards, for instance, are readily available) and/or other material. It will be understood that combining the same types of material used as the media and used to form the indicia as hiding sub-layers formed in the media and/or formed in the hiding layer may provide protection against a range of reading attacks.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. In a system for making a digital signature for a message where pre-defined subsets of a set of signers is sufficient and where each potential signer has pre-images that hash to a public key, the improvement comprising: each of the signers determines cleartext bits to sign in response to a hash of a pre-image known to the respective signer and the message.</claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the total number of cleartext bits, summed over all signers, is chosen from the range of 100 to 1000.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the size of the subsets and the length of the plaintext bit strings signed is such that the number of exhaustive search attempts would be more the 2<sup>80</sup>.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the number of bits is at least 16 and the number of signers is a majority of at least 100 parties.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. In a system for forming plural digital signatures using one-way functions on respective plural messages, with a common public key and a common secret seed value, the improvement comprising:<claim-text>two or more authentication paths per signature.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein at least one of the paths is a series authentication path.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The digital signature system according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein at least one of the paths is a tree authentication path.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. In a key information distribution system, the improvement comprising:<claim-text>producing, for each of plural parties, respective physical media that includes respective secret key information formed as indicia; providing the respective media for each party with physical revealing means, the physical revealing means in a first physical state, so that the secret indicia is not substantially revealed to plural observers;</claim-text><claim-text>changing the physical configuration of the physical revealing means, after the media is received, from the first physical state to a second physical state, such that the secret indicia of substantially all the plural parties becomes known to the plural observers by the change of state.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The information distribution system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, some subset of the observers including parties.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The information distribution system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, including that the indicia are images under substantially one-way functions and corresponding respective substantial pre-images being shown after the images are revealed by the second physical state.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the images revealed in the second physical state are combined by a pre-arranged algorithm to form a value that is at least substantially infeasible for proper subsets of the parties to manipulate.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the images revealed in the second physical state are combined by a pre-arranged algorithm to form a value that is at least substantially infeasible for proper subsets of the parties to determine in advance.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the pre-images revealed in the second physical state are combined by a pre-arranged algorithm to form a value that is at least substantially infeasible for proper subsets of the parties to manipulate.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the pre-images revealed in the second physical state are combined by a pre-arranged algorithm to form a value that is at least substantially infeasible for proper subsets of the parties to determine in advance.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The information distribution system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the indicia is formed on media by the respective party.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The information distribution system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the party forming the indicia on the media hiding the indicia in a respective physical carrier.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The information distribution system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, the party forming the indicia on media providing the respective physical carrier to the physical revealing means under observation of the observers.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The information distribution system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, the party forming the indicia on media providing the respective physical carrier to the physical revealing means in a particular location within a framework under observation of the observers.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The information distribution system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the carrier combined with the indicia combined with the placement in the framework reveals to observers an identity of the party.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The information distribution system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the indicia are printed on cards and the cards are protected by substantially opaque cards layered on the card at least until they are transferred to the physical revealing means and the cards and the opaque cards are held together by a physical carrier means and the physical revealing means comprising a framework for holding carriers without the hiding means.</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. In a key distribution system, the improvement comprising:<claim-text>forming secret keys for respective plural parties as indicia hidden from observers by respective carriers;</claim-text><claim-text>plural contributions of carriers for each of the plural parties contributed to a container;</claim-text><claim-text>the content of the container at least partly rearranged;</claim-text><claim-text>parties each receiving plural carriers from the container after the at least partial rearrangement; and</claim-text><claim-text>provision of authentication by the respective parties of fingerprints of the keys that were contained in the carriers contributed by the respective parties.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The key distribution system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, further comprising cryptographic authentication by keys revealed by each party that are associated with that respective party.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The key distribution system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, including authentication by keys revealed by each party in person to other parties while observed by observers.</claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The key distribution system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, the content of the container at least partly rearranged by physically changing an orientation of the container under observation of observers</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The key distribution system according to <claim-ref idref="CLM-00023">claim 23</claim-ref>, including the parties as at least some of the observers.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The key distribution system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, including the at least partly rearranging substantially hiding from at least some observers correspondence between the party corresponding to at least a carrier contributed and the party receiving that carrier.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The key distribution system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, including a set of parties allowing a pair of parties that did not receive a common key to develop a common key by each of the set of parties providing the same secret to both members of the pair of parties.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The key distribution system of <claim-ref idref="CLM-00027">claim 27</claim-ref>, at least some of the allowing set of parties providing to the pair of parties authentication of fingerprints of the key provided that pair.</claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The key distribution system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, including forming of the carriers by the respective parties forming the indicia on a media layer and including additionally a substantially hiding layer.</claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The key distribution system of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein the carrier forming includes at least one party applying a scratch-off layer to the respective indicia bearing portion of the media as at least part of the hiding layer.</claim-text></claim></claims></us-patent-application>