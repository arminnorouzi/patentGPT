<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004966A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004966</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930615</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>38</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>34</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>20</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>3829</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>34</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>209</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>3823</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20200501</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>20</main-group><subgroup>047</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>2220</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR BLOCKCHAIN BASED PROOF AND PAYMENT</invention-title><us-related-documents><division><relation><parent-doc><document-id><country>US</country><doc-number>15405123</doc-number><date>20170112</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11468439</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930615</doc-number></document-id></child-doc></relation></division></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>American Express Travel Related Services Company, Inc.</orgname><address><city>New York</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Durvasula</last-name><first-name>Sastry</first-name><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Ferenczi</last-name><first-name>Andras</first-name><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Muthukrishnan</last-name><first-name>Sathish</first-name><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Subrahmanyam</last-name><first-name>Vishnuvajhala V.</first-name><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A proof-of-payment system that allows smart connected devices to confirm a payment information. In one example, a smart connected device that comprises a computing device and program instructions. The program instructions, when executed by the processor, cause the computing device to at least retrieve an encrypted proof-of-payment (PoP) payload from a blockchain and decrypt the encrypted PoP payload to retrieve a first identifier from the encrypted PoP payload. The first identifier from the decrypted PoP payload is matched to a second identifier presented at the smart connected device. An action is triggered in response to the first identifier from the encrypted PoP payload matching the second identifier presented at the smart connected device.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="98.72mm" wi="158.75mm" file="US20230004966A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="229.53mm" wi="165.10mm" orientation="landscape" file="US20230004966A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="229.02mm" wi="165.86mm" file="US20230004966A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="228.85mm" wi="167.72mm" file="US20230004966A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="229.62mm" wi="164.76mm" orientation="landscape" file="US20230004966A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="230.72mm" wi="163.91mm" orientation="landscape" file="US20230004966A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.60mm" wi="166.62mm" file="US20230004966A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="228.52mm" wi="165.10mm" file="US20230004966A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">This disclosure relates to proof of payment using a distributed database.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Payment networks typically utilize various systems for processing transactions between merchants and customers. Customers have a transaction account with the payment network. Merchants are members of the payment network and the merchants are authorized to charge to customer accounts. To complete a transaction, a merchant typically transmits a payment request to the payment network with transaction details and the card member's account information.</p><p id="p-0004" num="0003">Payment for goods and services typically occurs at a point of sale or over the Internet. In some instances, such as airline travel and concerts, for example, tickets may issue after confirmation of the payment. In the case of a home rental over the internet, the service provider may email a receipt or confirmation of payment to the housing provider. However, beyond a receipt or a ticket, there are limited options to prove payment. Continuing the above housing example, the housing provider would typically give a key to the renter either in person, through the mail, or by hiding the key on the premises. A period of several days may pass between the renter submitting payment, to the housing provider receiving confirmation, and finally the renter receiving the key.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">A system, method, and computer readable medium (collectively, the &#x201c;system&#x201d;) is disclosed for verifying an earlier payment using a blockchain-based system. The system may receive a payment confirmation including a transaction amount and a merchant identifier. A record may be selected from a registration repository by matching the merchant identifier to the record. The record may have a public key associated with the merchant identifier via a registration process, for example. The system may generate a payment payload comprising an identifier and a payment amount, and encrypt the payment payload using the public key. The system may also write the encrypted payment payload to a blockchain maintained on a first blockchain node.</p><p id="p-0006" num="0005">In various embodiments, the system may propagate the encrypted payment payload to a second blockchain node that maintains a copy of the blockchain. A smart connected device may fetch the encrypted payment payload from the second blockchain node. The smart connected device may further decrypt the encrypted payment payload, match the identifier from the payment payload to a second identifier presented at the smart connected device, and trigger an action in response to the identifier from the payment payload matching the second identifier presented at the smart connected device. The smart connected device may also reduce the payment amount of the payment payload in response to the triggering the action. The action may include, for example, actuating at least one of an electromechanical actuator or a solenoid, illuminating a light, or changing the state on a graphical display. The system may register the smart connected device to a merchant, for example, using a registration portal.</p><p id="p-0007" num="0006">The forgoing features and elements may be combined in various combinations without exclusivity, unless expressly indicated herein otherwise. These features and elements as well as the operation of the disclosed embodiments will become more apparent in light of the following description and accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION</heading><p id="p-0008" num="0007">The subject matter of the present disclosure is particularly pointed out and distinctly claimed in the concluding portion of the specification. A more complete understanding of the present disclosure, however, may be obtained by referring to the detailed description and claims when considered in connection with the drawing figures, wherein like numerals denote like elements.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a proof of payment system using a blockchain to propagate proof of payment to various devices, in accordance with various embodiments;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b>A</figref> illustrates an exemplary process for registering smart devices with a proof of payment system, in accordance with various embodiments;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b>B</figref> illustrates an exemplary form for use in registering smart devices with a proof of payment system, in accordance with various embodiments;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> illustrates an exemplary process for writing a proof of payment to a blockchain and propagating the proof of payment to various blockchain nodes, in accordance with various embodiments;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> illustrates a flow chart for generating a proof of payment for writing to a blockchain, in accordance with various embodiments;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an exemplary process for confirming proof of payment and/or adjusting a balance on a blockchain in response to a card swipe, in accordance with various embodiments; and</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an exemplary process for confirming proof of payment and/or adjusting a balance on a blockchain in response to a payment voucher, in accordance with various embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0016" num="0015">The detailed description of various embodiments refers to the accompanying drawings, which show various embodiments by way of illustration. While these various embodiments are described in sufficient detail to enable those skilled in the art to practice the disclosure, it should be understood that other embodiments may be realized and that logical and mechanical changes may be made without departing from the spirit and scope of the disclosure. Thus, the detailed description is presented for purposes of illustration only and not of limitation. For example, the steps recited in any of the method or process descriptions may be executed in any order and are not limited to the order presented. Moreover, any of the functions or steps may be outsourced to or performed by one or more third parties. Furthermore, any reference to singular includes plural embodiments, and any reference to more than one component may include a singular embodiment.</p><p id="p-0017" num="0016">Systems and methods of the present disclosure enable smart connected devices to initiate actions to service paying customers. A payment processing entity (e.g., a credit card network, bank, debit, bitcoin, rewards points, or ACH) provides evidence of a payment in a tamper-proof manner by writing the proof of payment to a blockchain. A smart device connected to the blockchain may detect the proof of payment, and can extract relevant information. The information may be encrypted on the blockchain such that access is restricted to entities having the correct cryptographic keys. The information may be verified in presence of a customer as desired.</p><p id="p-0018" num="0017">For example, the system may be used to unlock a hotel, rental, or shared economy property door using the card (e.g., that was used for the payment) to look up proof of payment on a blockchain. Similarly, a paying customer may gain access using a smartphone app that communicates using Bluetooth with the smart device by transmitting an identifier, which may be used to look up proof of payment on a blockchain.</p><p id="p-0019" num="0018">In another example, the system may be used to provide ticketless access to venues (e.g., movie theater, sports event, concert, etc.) to a customer, in response to swiping the card (e.g., that was used for event payment), or launching a smartphone application with an identification, which may be used to look up proof of payment on a blockchain. In still another example, the system may enable access control to rental vehicles (e.g., bike, boat, or car) to a customer in response to swiping the card (e.g., that was used for the payment), or launching a smartphone application with an identification, which may be used to look up proof of payment on a blockchain.</p><p id="p-0020" num="0019">With reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a proof-of-payment (PoP) system <b>100</b> is shown, according to various embodiments. PoP system <b>100</b> may be implemented using smart contracts maintained on blockchain <b>109</b>. A blockchain is a distributed database that maintains records in a readable manner and is also resistant to tampering. In the context of PoP system <b>100</b>, a blockchain may serve as a digital record containing proof of payment for payments successfully completed (or for any portion of the process).</p><p id="p-0021" num="0020">The blockchain may comprise a system of interconnected blocks containing data. The blocks can hold transaction data, contract data, proof-of-payment data, identification data, and/or other information as desired. Each block may link to the previous block and may include a timestamp. When implemented in support of a payment network, the blockchain may serve as a record for proof-of-payment payloads, balances associated with the proof-of-payment payloads, and/or other suitable data retained in the blockchain. The blockchain may be a peer-to-peer network that is private, consortium and/or public in nature (e.g., Ethereum, Bitcoin, etc.). Consortium and private networks may offer improved control over the content of the blockchain. Public networks may leverage the cumulative computing power of the network to improve security.</p><p id="p-0022" num="0021">PoP system <b>100</b> may include various computing devices configured to communicate via a network. For example, a merchant device <b>102</b>, payment processing entity <b>104</b>, PoP provider <b>108</b>, registration portal <b>112</b>, smart connected devices <b>116</b>, and/or PoP network <b>106</b> may each include computing devices configured to perform processes described herein and communicate over a network. The computing devices may include any device capable of transmitting, receiving, and/or displaying an electronic message via a network and communicating with a blockchain <b>109</b>.</p><p id="p-0023" num="0022">For example, the computing devices may take the form of a computer or processor, or a set of computers/processors, although other types of computing units or systems may be used. Exemplary computing devices include servers, pooled servers, laptops, notebooks, hand held computers, personal digital assistants, cellular phones, smart phones (e.g., iPhone&#xae;, Android&#xae;, etc.) tablets, smart wearables, Internet of things (IOT) devices or any other device capable of receiving data over network. Each computing device may run applications to interact with blockchain <b>109</b>, communicate with other devices, perform crypto operations, and otherwise operate within PoP system <b>100</b>.</p><p id="p-0024" num="0023">As used herein, the term &#x201c;network&#x201d; includes any cloud, cloud computing system or electronic communications system or method that incorporates hardware and/or software components. Communication among the parties may be accomplished through any suitable communication channels, such as, for example, a telephone network, an extranet, an intranet, Internet, point of interaction device (point of sale device, personal digital assistant, cellular phone, kiosk, tablet, etc.), online communications, satellite communications, off-line communications, wireless communications, transponder communications, local area network (LAN), wide area network (WAN), virtual private network (VPN), networked or linked devices, keyboard, mouse and/or any suitable communication or data input modality. Moreover, although the system is frequently described herein as being implemented with TCP/IP communications protocols, the system may also be implemented using IPX, Appletalk, IP-<b>6</b>, NetBIOS, OSI, any tunneling protocol (e.g. IPsec, SSH), or any number of existing or future protocols. If the network is in the nature of a public network, such as the Internet, it may be advantageous to presume the network to be insecure and open to eavesdroppers. Specific information related to the protocols, standards, and application software utilized in connection with the Internet is generally known to those skilled in the art and, as such, need not be detailed herein. See, for example, DILIP NAIK, INTERNET STANDARDS AND PROTOCOLS (1998); JAVA 2 COMPLETE, various authors, (Sybex 1999); DEBORAH RAY AND ERIC RAY, MASTERING HTML 4.0 (1997); and LOSHIN, TCP/IP CLEARLY EXPLAINED (1997) and DAVID GOURLEY AND BRIAN TOTTY, HTTP, THE DEFINITIVE GUIDE (2002), the contents of which are hereby incorporated by reference.</p><p id="p-0025" num="0024">A network may be unsecure. Thus, communication over the network, and data written to blockchain <b>109</b>, may utilize data encryption. Encryption may be performed by way of any of the techniques now available in the art or which may become available&#x2014;e.g., Twofish, RSA, El Gamal, Schorr signature, DSA, PGP, PKI, GPG (GnuPG), and symmetric and asymmetric cryptosystems. Asymmetric encryption in particular may be of use in signing and verifying signatures for blockchain crypto operations.</p><p id="p-0026" num="0025">Merchant device <b>102</b> may include one or more of an e-commerce server, a point-of-sale (POS) device, a tablet, a computer, or any other computing device described herein. Merchant device <b>102</b> may be in communication over a network with servers of payment processing entity <b>104</b>. Merchant device <b>102</b> may request authorization for a payment transaction by transmitting to the servers of payment processing entity <b>104</b> transaction details such as account number, amount, merchant identifier, customer identifier, date, time, currency identifier, country identifier, or other suitable data as documented in the ISO 8583 standard for financial transaction card originated messages, for example. Payment processing entity <b>104</b> may process the payment and forward to PoP network <b>106</b> the transaction details as well as confirmation that the requested payment was successful.</p><p id="p-0027" num="0026">The transaction details and confirmation may be received by PoP provider <b>108</b>. The PoP provider may retrieve merchant details associated with the transaction from the registration repository <b>110</b>. Registration repository <b>110</b> may include records including merchant identifiers, merchant public keys, payment network merchant identifiers, and device registrations for smart connected devices <b>116</b> registered to the merchant. Smart connected devices <b>116</b> may include devices such as smart locks, smart lights, or other smart devices configured to perform an action in response to a PoP payload on blockchain <b>109</b>. Registration repository <b>110</b> may be configured in any data storage format. For example, registration repository <b>110</b> may be a relational database, a big data store, a distributed file system, a noDB or noSQL database, a document-based database, or any other suitable data storage system.</p><p id="p-0028" num="0027">Using the merchant's public key (e.g., of an asymmetric cryptographic key pair), PoP provider may perform crypto operations to encrypt a proof-of-payment payload and write the encrypted payload to the blockchain. Although encryption may be used to enhance security and restrict access to PoP payloads, the system may also be configured to operate in clear text without performing cryptographic operations on the PoP payloads. A device registration portal accessible by merchants may add smart connected devices <b>116</b> to the registration repository.</p><p id="p-0029" num="0028">In various embodiments, devices of PoP system <b>100</b> (e.g., smart connected devices <b>116</b> and servers of PoP provider <b>108</b>) may interface with blockchain <b>109</b> using a client library or process implemented using technologies such as, for example, Ethereum GETH, eth-lightwallet, or other suitable blockchain interface technologies. The devices may run a client application that can be a thin client (web) based, hybrid (i.e. web and native, such as iOS and Android), or native application. Smart connected devices <b>116</b> and PoP provider may also be configured to communicate with blockchain <b>109</b> and may maintain a blockchain node <b>114</b>. Each blockchain node <b>114</b> may maintain a full or partial copy of blockchain <b>109</b>. Servers of PoP provider <b>108</b> and/or smart connected devices <b>116</b> may thus be programmed to read blockchain <b>109</b>, identify a PoP payload, ready the PoP payload, and adjust the balance of the PoP payload and/or mark the PoP payload as redeemed, as described in detail below.</p><p id="p-0030" num="0029">In various embodiments, blockchain <b>109</b> may thus host the PoP system <b>100</b> supporting execution and/or recording of various actions (e.g., account registration, proof of payment, balances on proof of payment, or other related actions). Blockchain <b>109</b> may be based on blockchain technologies (e.g., Ethereum, Open Chain, Chain Open Standard, etc). Blockchain <b>109</b> may include a program written in a programming language such as, for example, Solidity, or any other suitable programming language for performing operations on blockchain nodes <b>114</b>.</p><p id="p-0031" num="0030">Referring to <figref idref="DRAWINGS">FIGS. <b>2</b>A and <b>2</b>B</figref>, an exemplary registration process <b>200</b> using registration interface <b>250</b> is shown, in accordance with various embodiments. A merchant device <b>202</b> may interact with registration portal <b>112</b> running on PoP network <b>106</b> to enter and/or read information. Registration process <b>200</b> may be completed using merchant device <b>202</b> to communicate over a WAN such as the internet, a smaller LAN, or one of the suitable network types described above. The steps of registration process <b>200</b> may be executed using PoP system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> in a possible order of operation with the top arrows indicating earlier execution than the bottom arrows.</p><p id="p-0032" num="0031">Registration process <b>200</b> may begin with merchant device <b>202</b> opening the registration interface <b>250</b> (Step <b>204</b>). Registration interface <b>250</b> may be used to communicate with registration portal <b>112</b> to register a merchant with PoP provider <b>108</b>. Registration interface <b>250</b> may take the form of a client application such as a thin-client (web) based, hybrid (i.e. web and native, such as iOS and Android), or native application. The registration portal <b>112</b> may store the merchant details in registration repository <b>110</b> (Step <b>206</b>). Registration interface <b>250</b> may include fields for merchant device <b>202</b> and/or a related merchant account. The fields may include, for example, merchant name <b>252</b>, public key <b>254</b>, merchant identifiers for various payment networks associated with a bank, financial institution, debit network (e.g., AMEX id, <b>256</b>, VISA id <b>258</b>, MasterCard id <b>260</b>, etc.).</p><p id="p-0033" num="0032">Various smart connected devices <b>116</b> may also be registered with the merchant account. Merchant device <b>202</b> may commit merchant device addresses using registration interface <b>250</b> to communicate with registration portal <b>112</b>. The registration process may be repeatable to add and/or remove smart connected devices <b>116</b> associated with the merchant account. Blockchain addresses for various devices registered to the merchant account (e.g., first device address <b>262</b>, second device address <b>264</b>, third device address <b>266</b>, fourth device address <b>268</b>, etc.) may be displayed, entered, and/or detected at registration portal <b>112</b>. A merchant may enter the appropriate registration information into registration interface <b>250</b>, or information may be auto populated in registration interface <b>250</b>, for submission to registration portal <b>112</b>. Device registration may enable individual smart connected devices <b>116</b> to identify the PoP payloads on the blockchain associated with the merchant.</p><p id="p-0034" num="0033">Referring now to <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref>, an exemplary process <b>300</b> for writing a PoP payload to blockchain <b>109</b> using PoP system <b>100</b> is shown, in accordance with various embodiments. Process <b>300</b> may function with the exemplary flow chart <b>350</b> depicting data flow between components of PoP system <b>100</b>.</p><p id="p-0035" num="0034">A customer may visit a brick-and-mortar store, visit an e-commerce website, launch native application, or otherwise initiate a payment transaction using a payment device <b>302</b> to interact with merchant device <b>102</b> (Step <b>304</b>). Payment device <b>302</b> may include an account code, a computing device, a smart phone, a smart wearable (e.g., a smart watch or smart ring), token, a fob, a transaction card, or any other device suitable for completing a payment transaction. Merchant device <b>102</b> may transmit payment details, such as amount of payment, PAN, card expiration month and year, or other transaction details as described herein to servers of payment processing entity <b>104</b> (Step <b>306</b>). Exemplary payment details are illustrated in authorization request <b>352</b> of <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>. The payment details of authorization request <b>352</b> may be available in typical account-based transactions, but other authorizations systems may provide varying data.</p><p id="p-0036" num="0035">In various embodiments, servers of payment processing entity <b>104</b> may forward selected transaction details and/or authorization data to the PoP provider <b>108</b> (Step <b>308</b>). PoP provider <b>108</b> may, in response to receiving the authorization data, extract network specific merchant id (e.g., AMEX id <b>256</b> in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>) from the authorization request and use the merchant id to select merchant information from registration repository <b>110</b> (Step <b>310</b>). Registration repository <b>110</b> may return merchant and/or device info corresponding to the network merchant id. An example data set <b>356</b> returned from registration repository <b>110</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>.</p><p id="p-0037" num="0036">In various embodiments, servers of PoP provider <b>108</b> may prepare a PoP payload for writing to blockchain <b>109</b> by assembling the data for the PoP payload and/or applying a cryptographic function (Step <b>312</b>). An exemplary PoP payload <b>354</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref> in clear text. PoP payload <b>354</b> may use protocol buffers prior to being encrypted and/or Base<b>64</b> encoded for writing to blockchain <b>109</b>. The structure may contain non-sensitive data suitable for storage on a publicly viewable Blockchain to discourage brute force attacks. A PoP payload <b>354</b> may include an expiry date, a PAN, a portion of a PAN, a tokenized PAN, a token, a currency code, a country code, a transaction amount, a voucher identifier, or other data extracted from the authorization request <b>352</b>, retrieved from the registration repository <b>110</b>, or generated by PoP provider <b>108</b>. For example, the voucher identifier may be a unique identifier generated by PoP provider <b>108</b> in response to receiving an authorization request and retrieving the associated merchant data from registration repository <b>110</b>. The PoP payload may be signed and/or encrypted using the merchant public key and/or a private key of PoP provider <b>108</b> (Block <b>360</b> of <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>). The PoP payload may also be encoded in Base <b>64</b> (Block <b>362</b> of <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>).</p><p id="p-0038" num="0037">In various embodiments, PoP provider <b>108</b> may write PoP payload to its blockchain node <b>114</b>C running a blockchain client process (Step <b>314</b>). Exemplary blockchain client processes may include GETH provided by Ethereum for example.</p><p id="p-0039" num="0038">The internal state variables for a sample Smart Contract supported Blockchain functionality may include a mapping of merchant public addresses used as keys, and a list of associated PoP structures, that may be added as PoP provider <b>108</b> receives transaction authorization information. Merchant public keys may also be mapped to a list of registered smart connected devices <b>116</b> associated with the merchant. The map may be used to validate a device in response to a device attempting to change the available balance of a PoP payload and/or mark the PoP payload as redeemed. Devices attached to the particular merchant may be permitted to invoke any Smart Contract functions that modify PoP payloads owned by the respective merchant. However, other devices that are not registered to the merchant may not be authorized to modify the PoP payloads owned by the merchant. In various embodiments, PoP payload <b>354</b> may propagate to other blockchain nodes <b>114</b>A and <b>114</b>B in the normal course of operation of blockchain <b>109</b> (Step <b>316</b>).</p><p id="p-0040" num="0039">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an exemplary process <b>400</b> for verifying a PoP payload is shown according to various embodiments. The payment device <b>302</b> (e.g., a payment card) associated with the account used to make a payment (e.g., in process <b>300</b>) may be presented at smart connected device <b>116</b>A by swiping the card (Step <b>402</b>). A magnetic stripe reader in electronic communication with smart connected device <b>116</b>A may read the payment card info, for example, in response to swiping the card.</p><p id="p-0041" num="0040">Smart connected device <b>116</b>A may invoke a smart contract to fetch all PoP data for the merchant from its blockchain node <b>114</b>A (Step <b>404</b>). A smart contract is a protocol or functionality used to verify activity on blockchain <b>109</b>. Smart connected device <b>116</b>A may pass the merchant public key (used as a blockchain address) to the smart contract to retrieve associated PoP payloads. As the device belongs to the merchant, the device may have both the merchant's public key and private key available. The smart contract may return the PoP payloads associated with the merchant public key. The smart connected device <b>116</b>A may also decode and/or decrypt the PoP payloads to access the data retained within the PoP payloads (Step <b>406</b>).</p><p id="p-0042" num="0041">In various embodiments, smart connected device <b>116</b>A may iterate through the list of PoP payloads and identify the desired PoP payload by matching credit card info read at the magnetic stripe reader to the credit card info embedded in the PoP payload. In response to a match being found, smart connected device <b>116</b>A may trigger an action (Step <b>408</b>). For example, an electromechanical actuator or a solenoid door lock may be triggered to move in response to the identifying the correct PoP payload. Smart connected device <b>116</b>A may adjust the PoP payload balance and/or mark the PoP payload as redeemed by writing a new entry to the blockchain using a process similar to process <b>300</b> (Step <b>410</b>).</p><p id="p-0043" num="0042">With reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a buyer may provide a proximity trigger using a wireless communication channel (e.g., Bluetooth, near field communication (NFC), an 802.11 wireless standard) for communication between native mobile app running on a payment device <b>302</b> and connected smart device <b>116</b>B. The application may transmit a voucher id to smart connected device <b>116</b>B for use in identifying the correct PoP payload from a list of PoP payloads retrievable from blockchain <b>109</b>. Smart connected device <b>116</b>B may invoke a smart contract to fetch all PoP payloads associated with the merchant from its blockchain node <b>114</b>B by passing the merchant public key (used as a blockchain address) to the smart contract (Step <b>504</b>). As the device belongs to the merchant, the device may have both the merchant's public key and private key available. The smart contract may return the PoP payloads associated with the merchant public key. The smart connected device <b>116</b>B may also decode and/or decrypt the PoP payloads to access the data retained within the PoP payloads (Step <b>506</b>).</p><p id="p-0044" num="0043">In various embodiments, smart connected device <b>116</b>B may iterate through the list of PoP payloads and identify the desired PoP payload by the voucher id received from the payment device <b>302</b> to the voucher id embedded in the PoP payloads. In response to a match being found, smart connected device <b>116</b>B may trigger an action (Step <b>508</b>). For example, an electromechanical actuator or a solenoid door lock may be triggered to move in response to the identifying the correct PoP payload. Smart connected device <b>116</b>A may adjust the PoP payload balance and/or mark the PoP payload as redeemed by writing a new entry to the blockchain using a process similar to process <b>300</b> (Step <b>510</b>).</p><p id="p-0045" num="0044">Using the systems and methods described herein, the proof-of-payment process for payees may be near-instant. For example, a buyer might identify a rental house on a web site, pay via the web site, and have the house unlocked automatically upon receiving the PoP in a matter of seconds. The solution may be easily integrated into ecommerce platforms or other points of sale by forwarding payment details from a payment authorization entity to the PoP provider.</p><p id="p-0046" num="0045">In various embodiments, the system and method may include alerting a subscriber when their computer is offline. The system may include generating customized information and alerting a remote subscriber that the information can be accessed from their computer. The alerts are generated by filtering received information, building information alerts and formatting the alerts into data blocks based upon subscriber preference information. The data blocks are transmitted to the subscriber's wireless device which, when connected to the computer, causes the computer to auto-launch an application to display the information alert and provide access to more detailed information about the information alert. More particularly, the method may comprise providing a viewer application to a subscriber for installation on the remote subscriber computer; receiving information at a transmission server sent from a data source over the Internet, the transmission server comprising a microprocessor and a memory that stores the remote subscriber's preferences for information format, destination address, specified information, and transmission schedule, wherein the microprocessor filters the received information by comparing the received information to the specified information; generates an information alert from the filtered information that contains a name, a price and a universal resource locator (URL), which specifies the location of the data source; formats the information alert into data blocks according to said information format; and transmits the formatted information alert over a wireless communication channel to a wireless device associated with a subscriber based upon the destination address and transmission schedule, wherein the alert activates the application to cause the information alert to display on the remote subscriber computer and to enable connection via the URL to the data source over the Internet when the wireless device is locally connected to the remote subscriber computer and the remote subscriber computer comes online.</p><p id="p-0047" num="0046">In various embodiments, the system and method may include a graphical user interface for dynamically relocating/rescaling obscured textual information of an underlying window to become automatically viewable to the user. By permitting textual information to be dynamically relocated based on an overlap condition, the computer's ability to display information is improved. More particularly, the method for dynamically relocating textual information within an underlying window displayed in a graphical user interface may comprise displaying a first window containing textual information in a first format within a graphical user interface on a computer screen; displaying a second window within the graphical user interface; constantly monitoring the boundaries of the first window and the second window to detect an overlap condition where the second window overlaps the first window such that the textual information in the first window is obscured from a user's view; determining the textual information would not be completely viewable if relocated to an unobstructed portion of the first window; calculating a first measure of the area of the first window and a second measure of the area of the unobstructed portion of the first window; calculating a scaling factor which is proportional to the difference between the first measure and the second measure; scaling the textual information based upon the scaling factor; automatically relocating the scaled textual information, by a processor, to the unobscured portion of the first window in a second format during an overlap condition so that the entire scaled textual information is viewable on the computer screen by the user; and automatically returning the relocated scaled textual information, by the processor, to the first format within the first window when the overlap condition no longer exists.</p><p id="p-0048" num="0047">In various embodiments, the system may also include isolating and removing malicious code from electronic messages (e.g., email) to prevent a computer from being compromised, for example by being infected with a computer virus. The system may scan electronic communications for malicious computer code and clean the electronic communication before it may initiate malicious acts. The system operates by physically isolating a received electronic communication in a &#x201c;quarantine&#x201d; sector of the computer memory. A quarantine sector is a memory sector created by the computer's operating system such that files stored in that sector are not permitted to act on files outside that sector. When a communication containing malicious code is stored in the quarantine sector, the data contained within the communication is compared to malicious code-indicative patterns stored within a signature database. The presence of a particular malicious code-indicative pattern indicates the nature of the malicious code. The signature database further includes code markers that represent the beginning and end points of the malicious code. The malicious code is then extracted from malicious code-containing communication. An extraction routine is run by a file parsing component of the processing unit. The file parsing routine performs the following operations: scan the communication for the identified beginning malicious code marker; flag each scanned byte between the beginning marker and the successive end malicious code marker; continue scanning until no further beginning malicious code marker is found; and create a new data file by sequentially copying all non-flagged data bytes into the new file, which thus forms a sanitized communication file. The new, sanitized communication is transferred to a non-quarantine sector of the computer memory. Subsequently, all data on the quarantine sector is erased. More particularly, the system includes a method for protecting a computer from an electronic communication containing malicious code by receiving an electronic communication containing malicious code in a computer with a memory having a boot sector, a quarantine sector and a non-quarantine sector; storing the communication in the quarantine sector of the memory of the computer, wherein the quarantine sector is isolated from the boot and the non-quarantine sector in the computer memory, where code in the quarantine sector is prevented from performing write actions on other memory sectors; extracting, via file parsing, the malicious code from the electronic communication to create a sanitized electronic communication, wherein the extracting comprises scanning the communication for an identified beginning malicious code marker, flagging each scanned byte between the beginning marker and a successive end malicious code marker, continuing scanning until no further beginning malicious code marker is found, and creating a new data file by sequentially copying all non-flagged data bytes into a new file that forms a sanitized communication file; transferring the sanitized electronic communication to the non-quarantine sector of the memory; and deleting all data remaining in the quarantine sector.</p><p id="p-0049" num="0048">In various embodiments, the system may also address the problem of retaining control over customers during affiliate purchase transactions, using a system for co-marketing the &#x201c;look and feel&#x201d; of the host web page with the product-related content information of the advertising merchant's web page. The system can be operated by a third-party outsource provider, who acts as a broker between multiple hosts and merchants. Prior to implementation, a host places links to a merchant's webpage on the host's web page. The links are associated with product-related content on the merchant's web page. Additionally, the outsource provider system stores the &#x201c;look and feel&#x201d; information from each host's web pages in a computer data store, which is coupled to a computer server. The &#x201c;look and feel&#x201d; information includes visually perceptible elements such as logos, colors, page layout, navigation system, frames, mouse-over effects or other elements that are consistent through some or all of each host's respective web pages. A customer who clicks on an advertising link is not transported from the host web page to the merchant's web page, but instead is re-directed to a composite web page that combines product information associated with the selected item and visually perceptible elements of the host web page. The outsource provider's server responds by first identifying the host web page where the link has been selected and retrieving the corresponding stored &#x201c;look and feel&#x201d; information. The server constructs a composite web page using the retrieved &#x201c;look and feel&#x201d; information of the host web page, with the product-related content embedded within it, so that the composite web page is visually perceived by the customer as associated with the host web page. The server then transmits and presents this composite web page to the customer so that she effectively remains on the host web page to purchase the item without being redirected to the third party merchant affiliate. Because such composite pages are visually perceived by the customer as associated with the host web page, they give the customer the impression that she is viewing pages served by the host. Further, the customer is able to purchase the item without being redirected to the third party merchant affiliate, thus allowing the host to retain control over the customer. This system enables the host to receive the same advertising revenue streams as before but without the loss of visitor traffic and potential customers. More particularly, the system may be useful in an outsource provider serving web pages offering commercial opportunities. The computer store containing data, for each of a plurality of first web pages, defining a plurality of visually perceptible elements, which visually perceptible elements correspond to the plurality of first web pages; wherein each of the first web pages belongs to one of a plurality of web page owners; wherein each of the first web pages displays at least one active link associated with a commerce object associated with a buying opportunity of a selected one of a plurality of merchants; and wherein the selected merchant, the outsource provider, and the owner of the first web page displaying the associated link are each third parties with respect to one other; a computer server at the outsource provider, which computer server is coupled to the computer store and programmed to: receive from the web browser of a computer user a signal indicating activation of one of the links displayed by one of the first web pages; automatically identify as the source page the one of the first web pages on which the link has been activated; in response to identification of the source page, automatically retrieve the stored data corresponding to the source page; and using the data retrieved, automatically generate and transmit to the web browser a second web page that displays: information associated with the commerce object associated with the link that has been activated, and the plurality of visually perceptible elements visually corresponding to the source page.</p><p id="p-0050" num="0049">Systems, methods and computer program products are provided. In the detailed description herein, references to &#x201c;various embodiments&#x201d;, &#x201c;one embodiment&#x201d;, &#x201c;an embodiment&#x201d;, &#x201c;an example embodiment&#x201d;, etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to affect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described. After reading the description, it will be apparent to one skilled in the relevant art(s) how to implement the disclosure in alternative embodiments.</p><p id="p-0051" num="0050">In various embodiments, the methods described herein are implemented using the various particular machines described herein. The methods described herein may be implemented using the below particular machines, and those hereinafter developed, in any suitable combination, as would be appreciated immediately by one skilled in the art. Further, as is unambiguous from this disclosure, the methods described herein may result in various transformations of certain articles.</p><p id="p-0052" num="0051">For the sake of brevity, conventional data networking, application development and other functional aspects of the systems (and components of the individual operating components of the systems) may not be described in detail herein. Furthermore, the connecting lines shown in the various figures contained herein are intended to represent exemplary functional relationships and/or physical couplings between the various elements. It should be noted that many alternative or additional functional relationships or physical connections may be present in a practical system.</p><p id="p-0053" num="0052">The various system components discussed herein may include one or more of the following: a host server or other computing systems including a processor for processing digital data; a memory coupled to the processor for storing digital data; an input digitizer coupled to the processor for inputting digital data; an application program stored in the memory and accessible by the processor for directing processing of digital data by the processor; a display device coupled to the processor and memory for displaying information derived from digital data processed by the processor; and a plurality of databases. Various databases used herein may include: client data; merchant data; financial institution data; and/or like data useful in the operation of the system. As those skilled in the art will appreciate, user computer may include an operating system (e.g., WINDOWS&#xae;, <b>0</b>S<b>2</b>, UNIX&#xae;, LINUX&#xae;, SOLARIS&#xae;, MacOS, etc.) as well as various conventional support software and drivers typically associated with computers.</p><p id="p-0054" num="0053">The present system or any part(s) or function(s) thereof may be implemented using hardware, software or a combination thereof and may be implemented in one or more computer systems or other processing systems. However, the manipulations performed by embodiments were often referred to in terms, such as matching or selecting, which are commonly associated with mental operations performed by a human operator. No such capability of a human operator is necessary, or desirable in most cases, in any of the operations described herein. Rather, the operations may be machine operations. Useful machines for performing the various embodiments include general purpose digital computers or similar devices.</p><p id="p-0055" num="0054">In fact, in various embodiments, the embodiments are directed toward one or more computer systems capable of carrying out the functionality described herein. The computer system includes one or more processors, such as processor. The processor is connected to a communication infrastructure (e.g., a communications bus, cross over bar, or network). Various software embodiments are described in terms of this exemplary computer system. After reading this description, it will become apparent to a person skilled in the relevant art(s) how to implement various embodiments using other computer systems and/or architectures. Computer system can include a display interface that forwards graphics, text, and other data from the communication infrastructure (or from a frame buffer not shown) for display on a display unit.</p><p id="p-0056" num="0055">The computer system also includes a main memory, such as for example random access memory (RAM), and may include a secondary memory. The secondary memory may include, for example, a hard disk drive and/or a removable storage drive, representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive reads from and/or writes to a removable storage unit in a well-known manner. Removable storage unit represents a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive. As will be appreciated, the removable storage unit includes a computer usable storage medium having stored therein computer software and/or data.</p><p id="p-0057" num="0056">In various embodiments, secondary memory may include other similar devices for allowing computer programs or other instructions to be loaded into computer system. Such devices may include, for example, a removable storage unit and an interface. Examples of such may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an erasable programmable read only memory (EPROM), or programmable read only memory (PROM)) and associated socket, and other removable storage units and interfaces, which allow software and data to be transferred from the removable storage unit to computer system.</p><p id="p-0058" num="0057">The computer system may also include a communications interface. Communications interface allows software and data to be transferred between computer system and external devices. Examples of communications interface may include a modem, a network interface (such as an Ethernet card), a communications port, a Personal Computer Memory Card International Association (PCMCIA) slot and card, etc. Software and data transferred via communications interface are in the form of signals which may be electronic, electromagnetic, optical or other signals capable of being received by communications interface. These signals are provided to communications interface via a communications path (e.g., channel). This channel carries signals and may be implemented using wire, cable, fiber optics, a telephone line, a cellular link, a radio frequency (RF) link, wireless and other communications channels.</p><p id="p-0059" num="0058">The terms &#x201c;computer program medium&#x201d; and &#x201c;computer usable medium&#x201d; and &#x201c;computer readable medium&#x201d; are used to generally refer to media such as removable storage drive and a hard disk installed in hard disk drive. These computer program products provide software to computer system.</p><p id="p-0060" num="0059">Computer programs (also referred to as computer control logic) are stored in main memory and/or secondary memory. Computer programs may also be received via communications interface. Such computer programs, when executed, enable the computer system to perform the features as discussed herein. In particular, the computer programs, when executed, enable the processor to perform the features of various embodiments. Accordingly, such computer programs represent controllers of the computer system.</p><p id="p-0061" num="0060">In various embodiments, software may be stored in a computer program product and loaded into computer system using removable storage drive, hard disk drive or communications interface. The control logic (software), when executed by the processor, causes the processor to perform the functions of various embodiments as described herein. In various embodiments, hardware components such as application specific integrated circuits (ASICs). Implementation of the hardware state machine so as to perform the functions described herein will be apparent to persons skilled in the relevant art(s).</p><p id="p-0062" num="0061">In various embodiments, the server may include application servers (e.g. WEB SPHERE, WEB LOGIC, JBOSS). In various embodiments, the server may include web servers (e.g. APACHE, IIS, GWS, SUN JAVA&#xae; SYSTEM WEB SERVER).</p><p id="p-0063" num="0062">A web client includes any device (e.g., personal computer) which communicates via any network, for example such as those discussed herein. Such browser applications comprise Internet browsing software installed within a computing unit or a system to conduct online transactions and/or communications. These computing units or systems may take the form of a computer or set of computers, although other types of computing units or systems may be used, including laptops, notebooks, tablets, hand held computers, personal digital assistants, set-top boxes, workstations, computer-servers, main frame computers, mini-computers, PC servers, pervasive computers, network sets of computers, personal computers, such as IPADS&#xae;, IMACS&#xae;, and MACBOOKS&#xae;, kiosks, terminals, point of sale (POS) devices and/or terminals, televisions, or any other device capable of receiving data over a network. A web-client may run MICROSOFT&#xae; INTERNET EXPLORER&#xae;, MOZILLA&#xae; FIREFOX&#xae;, GOOGLE&#xae; CHROME&#xae;, APPLE&#xae; Safari, or any other of the myriad software packages available for browsing the internet.</p><p id="p-0064" num="0063">Practitioners will appreciate that a web client may or may not be in direct contact with an application server such as a digital wallet hub. For example, a web client may access the services of an application server through another server and/or hardware component, which may have a direct or indirect connection to an Internet server. For example, a web client may communicate with an application server via a load balancer. In various embodiments, access is through a network or the Internet through a commercially available web-browser software package.</p><p id="p-0065" num="0064">As those skilled in the art will appreciate, a web client includes an operating system (e.g., WINDOWS&#xae; /CE/Mobile, OS2, UNIX&#xae;, LINUX&#xae;, SOLARIS&#xae; , MacOS, etc.) as well as various conventional support software and drivers typically associated with computers. A web client may include any suitable personal computer, network computer, workstation, personal digital assistant, cellular phone, smart phone, minicomputer, mainframe or the like. A web client can be in a home or business environment with access to a network. In various embodiments, access is through a network or the Internet through a commercially available web-browser software package. A web client may implement security protocols such as Secure Sockets Layer (SSL) and Transport Layer Security (TLS). A web client may implement several application layer protocols including http, https, ftp, and sftp.</p><p id="p-0066" num="0065">In various embodiments, components, modules, applications, and/or engines of PoP system <b>100</b> may be implemented as micro-applications or micro-apps. Micro-apps are typically deployed in the context of a mobile operating system, including for example, a WINDOWS&#xae; mobile operating system, an ANDROID&#xae; Operating System, APPLE&#xae; IOS&#xae;), a BLACKBERRY&#xae; operating system and the like. The micro-app may be configured to leverage the resources of the larger operating system and associated hardware via a set of predetermined rules, which govern the operations of various operating systems and hardware resources. For example, where a micro-app desires to communicate with a device or network other than the mobile device or mobile operating system, the micro-app may leverage the communication protocol of the operating system and associated device hardware under the predetermined rules of the mobile operating system. Moreover, where the micro-app desires an input from a user, the micro-app may be configured to request a response from the operating system, which monitors various hardware components and then communicates a detected input from the hardware to the micro-app.</p><p id="p-0067" num="0066">&#x201c;Cloud&#x201d; or &#x201c;Cloud computing&#x201d; includes a model for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction. Cloud computing may include location-independent computing, whereby shared servers provide resources, software, and data to computers and other devices on demand. For more information regarding cloud computing, see the NIST's (National Institute of Standards and Technology) definition of cloud computing at http://csrc.nist.gov/publications/nistpubs/800-145/SP800-145.pdf (last visited June 2012), which is hereby incorporated by reference in its entirety.</p><p id="p-0068" num="0067">As used herein, &#x201c;transmit&#x201d; may include sending electronic data from one system component to another over a network connection. Additionally, as used herein, &#x201c;data&#x201d; may include encompassing information such as commands, queries, files, data for storage, and the like in digital or any other form.</p><p id="p-0069" num="0068">Any databases discussed herein may include relational, hierarchical, graphical, or object-oriented structure and/or any other database configurations. Common database products that may be used to implement the databases include DB2 by IBM&#xae; (Armonk, N.Y.), various database products available from ORACLE&#xae; Corporation (Redwood Shores, Calif.), MICROSOFT&#xae; Access&#xae; or MICROSOFT&#xae; SQL Server&#xae; by MICROSOFT&#xae; Corporation (Redmond, Wash.), MySQL by MySQL AB (Uppsala, Sweden), or any other suitable database product. Moreover, the databases may be organized in any suitable manner, for example, as data tables or lookup tables. Each record may be a single file, a series of files, a linked series of data fields or any other data structure. Association of certain data may be accomplished through any desired data association technique such as those known or practiced in the art. For example, the association may be accomplished either manually or automatically. Automatic association techniques may include, for example, a database search, a database merge, GREP, AGREP, SQL, using a key field in the tables to speed searches, sequential searches through all the tables and files, sorting records in the file according to a known order to simplify lookup, and/or the like. The association step may be accomplished by a database merge function, for example, using a &#x201c;key field&#x201d; in pre-selected databases or data sectors. Various database-tuning steps are contemplated to optimize database performance. For example, frequently used files such as indexes may be placed on separate file systems to reduce In/Out (&#x201c;I/O&#x201d;) bottlenecks.</p><p id="p-0070" num="0069">More particularly, a &#x201c;key field&#x201d; partitions the database according to the high-level class of objects defined by the key field. For example, certain types of data may be designated as a key field in a plurality of related data tables and the data tables may then be linked based on the type of data in the key field. The data corresponding to the key field in each of the linked data tables is preferably the same or of the same type. However, data tables having similar, though not identical, data in the key fields may also be linked by using AGREP, for example. In accordance with one embodiment, any suitable data storage technique may be utilized to store data without a standard format. Data sets may be stored using any suitable technique, including, for example, storing individual files using an ISO/IEC 7816-4 file structure; implementing a domain whereby a dedicated file is selected that exposes one or more elementary files containing one or more data sets; using data sets stored in individual files using a hierarchical filing system; data sets stored as records in a single file (including compression, SQL accessible, hashed via one or more keys, numeric, alphabetical by first tuple, etc.); Binary Large Object (BLOB); stored as ungrouped data elements encoded using ISO/IEC 7816-6 data elements; stored as ungrouped data elements encoded using ISO/IEC Abstract Syntax Notation (ASN.1) as in ISO/IEC 8824 and 8825; and/or other proprietary techniques that may include fractal compression methods, image compression methods, etc.</p><p id="p-0071" num="0070">One skilled in the art will also appreciate that, for security reasons, any databases, systems, devices, servers or other components of the system may consist of any combination thereof at a single location or at multiple locations, wherein each database or system includes any of various suitable security features, such as firewalls, access codes, encryption, decryption, compression, decompression, and/or the like.</p><p id="p-0072" num="0071">Any of the communications, inputs, storage, databases or displays discussed herein may be facilitated through a website having web pages. The term &#x201c;web page&#x201d; as it is used herein is not meant to limit the type of documents and applications that might be used to interact with the user. For example, a typical website might include, in addition to standard HTML documents, various forms, JAVA&#xae; APPLE&#xae; ts, JAVASCRIPT, active server pages (ASP), common gateway interface scripts (CGI), extensible markup language (XML), dynamic HTML, cascading style sheets (CSS), AJAX (Asynchronous JAVASCRIPT And XML), helper applications, plug-ins, and the like. A server may include a web service that receives a request from a web server, the request including a URL and an IP address (123.56.192.234). The web server retrieves the appropriate web pages and sends the data or applications for the web pages to the IP address. Web services are applications that are capable of interacting with other applications over a communications means, such as the internet. Web services are typically based on standards or protocols such as XML, SOAP, AJAX, WSDL and UDDI. Web services methods are well known in the art, and are covered in many standard texts. See, e.g., Alex Nghiem, IT Web Services: A Roadmap for the Enterprise (2003), hereby incorporated by reference.</p><p id="p-0073" num="0072">Practitioners will also appreciate that there are a number of methods for displaying data within a browser-based document. Data may be represented as standard text or within a fixed list, scrollable list, drop-down list, editable text field, fixed text field, pop-up window, and the like. Likewise, there are a number of methods available for modifying data in a web page such as, for example, free text entry using a keyboard, selection of menu items, check boxes, option boxes, and the like.</p><p id="p-0074" num="0073">The system and method may be described herein in terms of functional block components, screen shots, optional selections and various processing steps. It should be appreciated that such functional blocks may be realized by any number of hardware and/or software components configured to perform the specified functions. For example, the system may employ various integrated circuit components, e.g., memory elements, processing elements, logic elements, look-up tables, and the like, which may carry out a variety of functions under the control of one or more microprocessors or other control devices. Similarly, the software elements of the system may be implemented with any programming or scripting language such as C, C++, C#, JAVA&#xae;, JAVASCRIPT, VBScript, Macromedia Cold Fusion, COBOL, MICROSOFT&#xae; Active Server Pages, assembly, PERL, PHP, awk, Python, Visual Basic, SQL Stored Procedures, PL/SQL, any UNIX shell script, and extensible markup language (XML) with the various algorithms being implemented with any combination of data structures, objects, processes, routines or other programming elements. Further, it should be noted that the system may employ any number of conventional techniques for data transmission, signaling, data processing, network control, and the like. Still further, the system could be used to detect or prevent security issues with a client-side scripting language, such as JAVASCRIPT, VBScript or the like. For a basic introduction of cryptography and network security, see any of the following references: (1) &#x201c;Applied Cryptography: Protocols, Algorithms, And Source Code In C,&#x201d; by Bruce Schneier, published by John Wiley &#x26; Sons (second edition, 1995); (2) &#x201c;JAVA&#xae; Cryptography&#x201d; by Jonathan Knudson, published by O'Reilly &#x26; Associates (1998); (3) &#x201c;Cryptography &#x26; Network Security: Principles &#x26; Practice&#x201d; by William Stallings, published by Prentice Hall; all of which are hereby incorporated by reference.</p><p id="p-0075" num="0074">The merchant computer and the bank computer may be interconnected via a second network, referred to as a payment network. The payment network, which may be part of certain transactions, represents existing proprietary networks that presently accommodate transactions for credit cards, debit cards, and other types of financial/banking cards. The payment network is a closed network that is assumed to be secure from eavesdroppers. Exemplary transaction networks may include the American Express&#xae;, VisaNet&#xae;, Veriphone&#xae;, Discover Card&#xae;, PayPal&#xae;, ApplePay&#xae;, GooglePay&#xae;, private networks (e.g., department store networks), and/or any other payment networks.</p><p id="p-0076" num="0075">These computer program instructions may be loaded onto a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions that execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means, which implement the function, specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.</p><p id="p-0077" num="0076">Accordingly, functional blocks of the block diagrams and flowchart illustrations support combinations of means for performing the specified functions, combinations of steps for performing the specified functions, and program instruction means for performing the specified functions. It will also be understood that each functional block of the block diagrams and flowchart illustrations, and combinations of functional blocks in the block diagrams and flowchart illustrations, can be implemented by either special purpose hardware-based computer systems which perform the specified functions or steps, or suitable combinations of special purpose hardware and computer instructions. Further, illustrations of the process flows and the descriptions thereof may refer to user WINDOWS&#xae;, webpages, websites, web forms, prompts, etc. Practitioners will appreciate that the illustrated steps described herein may comprise in any number of configurations including the use of WINDOWS&#xae;, webpages, web forms, popup WINDOWS&#xae;, prompts and the like. It should be further appreciated that the multiple steps as illustrated and described may be combined into single webpages and/or WINDOWS&#xae; but have been expanded for the sake of simplicity. In other cases, steps illustrated and described as single process steps may be separated into multiple webpages and/or WINDOWS&#xae; but have been combined for simplicity.</p><p id="p-0078" num="0077">Phrases and terms similar to &#x201c;transaction account&#x201d; may include any account that may be used to facilitate a financial transaction. Phrases and terms similar to &#x201c;financial institution&#x201d; or &#x201c;account issuer&#x201d; may include any entity that offers transaction account services. Although often referred to as a &#x201c;financial institution,&#x201d; the financial institution may represent any type of bank, lender or other type of account issuing institution, such as credit card companies, card sponsoring companies, or third party issuers under contract with financial institutions. It is further noted that other participants may be involved in some phases of the transaction, such as an intermediary settlement institution.</p><p id="p-0079" num="0078">The term &#x201c;non-transitory&#x201d; is to be understood to remove only propagating transitory signals per se from the claim scope and does not relinquish rights to all standard computer-readable media that are not only propagating transitory signals per se. Stated another way, the meaning of the term &#x201c;non-transitory computer-readable medium&#x201d; and &#x201c;non-transitory computer-readable storage medium&#x201d; should be construed to exclude only those types of transitory computer-readable media which were found in In Re Nuijten to fall outside the scope of patentable subject matter under 35 U.S.C. &#xa7; 101.</p><p id="p-0080" num="0079">Benefits, other advantages, and solutions to problems have been described herein with regard to specific embodiments. However, the benefits, advantages, solutions to problems, and any elements that may cause any benefit, advantage, or solution to occur or become more pronounced are not to be construed as critical, required, or essential features or elements of the disclosure. The scope of the disclosure is accordingly to be limited by nothing other than the appended claims, in which reference to an element in the singular is not intended to mean &#x201c;one and only one&#x201d; unless explicitly so stated, but rather &#x201c;one or more.&#x201d; Moreover, where a phrase similar to &#x2018;at least one of A, B, and C&#x2019; or &#x2018;at least one of A, B, or C&#x2019; is used in the claims or specification, it is intended that the phrase be interpreted to mean that A alone may be present in an embodiment, B alone may be present in an embodiment, C alone may be present in an embodiment, or that any combination of the elements A, B and C may be present in a single embodiment; for example, A and B, A and C, B and C, or A and B and C.</p><p id="p-0081" num="0080">Although the disclosure includes a method, it is contemplated that it may be embodied as computer program instructions on a tangible computer-readable carrier, such as a magnetic or optical memory or a magnetic or optical disk. All structural, chemical, and functional equivalents to the elements of the above described various embodiments that are known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the present claims. Moreover, it is not necessary for a device or method to address each and every problem sought to be solved by the present disclosure, for it to be encompassed by the present claims. Furthermore, no element, component, or method step in the present disclosure is intended to be dedicated to the public regardless of whether the element, component, or method step is explicitly recited in the claims. No claim element is intended to invoke 35 U.S.C. 112(f) unless the element is expressly recited using the phrase &#x201c;means for.&#x201d; As used herein, the terms &#x201c;comprises&#x201d;, &#x201c;comprising&#x201d;, or any other variation thereof, are intended to cover a non-exclusive inclusion, such that a process, method, article, or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>The following is claimed:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>retrieving, by a smart connected device, an encrypted proof-of-payment (PoP) payload from a first blockchain node of a blockchain;</claim-text><claim-text>decrypting, by the smart connected device, the encrypted PoP payload to retrieve a first identifier from the encrypted PoP payload;</claim-text><claim-text>matching, by the smart connected device, the first identifier from the encrypted PoP payload to a second identifier presented at the smart connected device; and</claim-text><claim-text>triggering, by the smart connected device, an action in response to the first identifier from the encrypted PoP payload matching the second identifier presented at the smart connected device.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>adjusting, by the smart connected device, a payment amount of the encrypted PoP payload in response to the triggering the action.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein retrieving the encrypted proof-of-payment (PoP) payload from the blockchain further comprises transmitting a merchant public key to a smart contract executed on the blockchain.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the encrypted PoP payload comprises a list of PoP payloads that are associated with the merchant public key.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising receiving, by the smart connected device, the second identifier in response to a card swipe at a magnetic stripe reader, wherein the magnetic stripe reader is in communication with the smart connected device.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising receiving, by the smart connected device, the second identifier over a wireless communication channel.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the smart connected device comprises at least one of an electromechanical actuator or a solenoid door lock.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A smart connected device, comprising:<claim-text>a computing device comprising a processor and memory;</claim-text><claim-text>program instructions stored in the memory, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>retrieving an encrypted proof-of-payment (PoP) payload from a first blockchain node of a blockchain;</claim-text><claim-text>decrypting the encrypted PoP payload to retrieve a first identifier from the encrypted PoP payload;</claim-text><claim-text>matching the first identifier from the decrypted PoP payload to a second identifier presented at the smart connected device; and</claim-text><claim-text>triggering an action in response to the first identifier from the encrypted PoP payload matching the second identifier presented at the smart connected device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The smart connected device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>adjusting a payment amount of the encrypted PoP payload in response to the triggering the action.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The smart connected device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein retrieving the encrypted proof-of-payment (PoP) payload from the blockchain further comprises transmitting a merchant public key to a smart contract executed on the blockchain.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The smart connected device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the encrypted PoP payload comprises a list of PoP payloads that are associated with the merchant public key.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The smart connected device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>receiving the second identifier over a wireless communication channel.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The smart connected device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>receiving the second identifier in response to a card swipe</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The smart connected device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>receiving the second identifier over a wireless communication channel.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. An electronic lock, comprising:<claim-text>a computing device comprising a processor and memory;</claim-text><claim-text>program instructions stored in the memory, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>retrieving an encrypted proof-of-payment (PoP) payload from a blockchain;</claim-text><claim-text>extracting a first identifier from the encrypted PoP payload;</claim-text><claim-text>matching the first identifier from the encrypted PoP payload to a second identifier presented at the electronic lock; and</claim-text><claim-text>unlocking a door lock in response to the first identifier from the encrypted PoP payload matching the second identifier presented at the electronic lock.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The electronic lock of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein retrieving the encrypted proof-of-payment (PoP) payload from the blockchain further comprises transmitting a merchant public key to a smart contract executed on the blockchain.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The electronic lock of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>adjusting a payment amount of the encrypted PoP payload in response to triggering the action.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The electronic lock of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>receiving, by the smart connected device, the second identifier in response to a card swipe for the electronic lock.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The electronic lock of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the program instructions, in response to execution by the processor, cause the computing device to perform operations comprising:<claim-text>receiving, by the smart connected device, the second identifier over a wireless communication channel.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The electronic lock of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the encrypted PoP payload comprises a list of PoP payloads that are associated with a merchant public key.</claim-text></claim></claims></us-patent-application>