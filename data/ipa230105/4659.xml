<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004660A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004660</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940214</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>KR</country><doc-number>10-2020-0186491</doc-number><date>20201229</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>60</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>31</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>604</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>31</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>62</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3213</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD OF PROCESSING SECURE DATA AND ELECTRONIC DEVICE SUPPORTING THE SAME</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/KR2021/020162</doc-number><date>20211229</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17940214</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Samsung Electronics Co., Ltd.</orgname><address><city>Gyeonggi-do</city><country>KR</country></address></addressbook><residence><country>KR</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Jinhyoung</first-name><address><city>Gyeonggi-do</city><country>KR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>KONG</last-name><first-name>Sunjune</first-name><address><city>Gyeonggi-do</city><country>KR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Bumhan</first-name><address><city>Gyeonggi-do</city><country>KR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>KIM</last-name><first-name>Taehoon</first-name><address><city>Gyeonggi-do</city><country>KR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">According to certain embodiments, an electronic device comprises: a memory storing an interface and an application; a processor; and a secure module physically separated from the processor and including a secure processor and a secure memory, wherein the processor is configured to: obtain user authentication information, through the interface; attempt user authentication, based on the user authentication information; obtain data stored in the secure memory when the user authentication succeeds; store a first token including a first valid duration for an access to the secure memory, the obtained data, and a first key value for decoding the obtained data in a buffer; and delete the first token and the first key value from the buffer when the first valid duration expires.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="158.50mm" wi="137.33mm" file="US20230004660A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="221.91mm" wi="156.38mm" file="US20230004660A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="221.66mm" wi="95.00mm" file="US20230004660A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="213.78mm" wi="126.07mm" file="US20230004660A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="213.36mm" wi="139.36mm" file="US20230004660A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="213.28mm" wi="126.66mm" file="US20230004660A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="213.87mm" wi="138.77mm" file="US20230004660A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="218.02mm" wi="126.41mm" file="US20230004660A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="217.17mm" wi="141.31mm" file="US20230004660A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="218.61mm" wi="84.16mm" file="US20230004660A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="219.20mm" wi="83.57mm" file="US20230004660A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading><p id="p-0002" num="0001">This application is a continuation of International Application No. PCT/KR2021/020162, filed on Dec. 29, 2021, which claims priority to Korean Patent Application No. 10-2020-0186491, filed on Dec. 29, 2020 in the Korean Intellectual Property Office, the disclosures of which are herein incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Certain embodiments of the disclosure relate to a method of processing secure data, and an electronic device supporting the method.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">An electronic device may provide various functions. For example, the electronic device may provide telephony, camera capture, web search, biometric authentication, block chain, or payment functions. Among the aforementioned functions, there are functions requiring a high level of security. These functions can include, such as biometric authentication, block chain, or payment, the electronic device may control an access to secure data such as exemplars for biometric authentication, passwords, account information. For example, the electronic device may be equipped with a secure hardware (or a secure module) physically separated and store the secure data in a secure memory (e.g., a secure non-volatile memory (NVM)).</p><p id="p-0005" num="0004">However, the legacy secure hardware may only perform an operation according to a service request. Legacy hardware might not provide an access control with user authentication. Accordingly, the legacy electronic device may optionally permit an access to secure data stored in a secure memory. The access might be permitted without a separate access control through a Trusted Application (TA) operating in a secure environment (e.g., a Trusted Execution Environment (TEE)) of a processor such as a trust zone. User information may be leaked even in a state where a user does not use an electronic device (e.g., a lock state) since the access to the secure data may also be permitted.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">According to certain embodiments, an electronic device comprises: a memory storing an interface and an application; a processor; and a secure module physically separated from the processor and including a secure processor and a secure memory, wherein the processor is configured to: obtain user authentication information, through the interface; attempt user authentication, based on the user authentication information; obtain data stored in the secure memory when the user authentication succeeds; store a first token including a first valid duration for an access to the secure memory, the obtained data, and a first key value for decoding the obtained data in a buffer; and delete the first token and the first key value from the buffer when the first valid duration expires.</p><p id="p-0007" num="0006">According to certain embodiments, an electronic device comprises: a memory storing an application; a processor; and a secure module physically separated from the processor and including a secure memory and a secure processor, wherein the secure processor is configured to: receive a signal requesting data stored in the secure memory from the processor; attempt user authentication, in response to receiving of the signal; verify a valid duration for an access to the secure memory when the user authentication succeeds; send a signal declining a request for the data to the processor when the valid duration is not verified; and transfer the data stored in the secure memory to the processor when the valid duration is verified.</p><p id="p-0008" num="0007">According to certain embodiments, a method of processing secure data of an electronic device, comprises: obtaining user authentication information; attempting the user authentication, based on the user authentication information; obtaining the secure data from a secure memory included in a secure module physically separated from a processor of the electronic device, when the user authentication succeeds; storing a first token including a first valid duration for an access to the secure memory, the obtained secure data, and a first key value for decoding the obtained secure data in a buffer; and deleting the first token and the first key value from the buffer when the first valid duration expires.</p><p id="p-0009" num="0008">Certain embodiments of the disclosure may provide a method of processing secure data which controls an access to a secure memory through an access control function associated with user authentication, and an electronic device supporting the method.</p><p id="p-0010" num="0009">According to certain embodiments of the disclosure, an access to a secure memory may be controlled to increase security of secure data.</p><p id="p-0011" num="0010">In addition thereto, various effects which are directly or indirectly understood through the disclosure may be provided.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an electronic device in a network environment according to certain embodiments;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a drawing illustrating a structure of an electronic device related to processing of secure data according to an embodiment of the disclosure;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a drawing illustrating a method of processing secure data through a Secure Application (SA) before user authentication according to an embodiment of the disclosure;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a drawing illustrating a method of user authentication through an SA according to an embodiment of the disclosure;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a drawing illustrating a method of processing secure data through an SA after user authentication according to an embodiment of the disclosure;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a drawing illustrating a method of user authentication through a Trusted Application (TA) according to an embodiment of the disclosure;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a drawing illustrating a method of processing secure data through a TA after user authentication according to an embodiment of the disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a drawing illustrating a method of processing secure data through a TA after user authentication according to an embodiment of the disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a drawing illustrating a method of operating an electronic device related to processing of secure data through an SA according to an embodiment of the disclosure; and</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a drawing illustrating a method of operating an electronic device related to processing of secure data through a TA according to an embodiment of the disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0022" num="0021">With regard to the description of the drawings, similar reference numerals may be used to refer to similar or related elements.</p><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022">Hereinafter, certain embodiments of the disclosure will be described in detail with reference to the accompanying drawings. Components shown in the drawings may be exaggerated or reduced in size for convenience of explanation, and the disclosure is not necessarily limited thereto.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an electronic device <b>101</b> where certain embodiments of the disclosure can be practiced. The electronic device <b>101</b> may include memory <b>130</b> that stores sensitive information. The sensitive information, may include, but is not limited to, passwords, financial accounts, biometric information, and medical information.</p><p id="p-0025" num="0024">Electronic Device</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an electronic device <b>101</b> in a network environment <b>100</b> according to certain embodiments. Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the electronic device <b>101</b> in the network environment <b>100</b> may communicate with an electronic device <b>102</b> via a first network <b>198</b> (e.g., a short-range wireless communication network), or at least one of an electronic device <b>104</b> or a server <b>108</b> via a second network <b>199</b> (e.g., a long-range wireless communication network). According to an embodiment, the electronic device <b>101</b> may communicate with the electronic device <b>104</b> via the server <b>108</b>. According to an embodiment, the electronic device <b>101</b> may include a processor <b>120</b>, memory <b>130</b>, an input module <b>150</b>, a sound output module <b>155</b>, a display module <b>160</b>, an audio module <b>170</b>, a sensor module <b>176</b>, an interface <b>177</b>, a connecting terminal <b>178</b>, a haptic module <b>179</b>, a camera module <b>180</b>, a power management module <b>188</b>, a battery <b>189</b>, a communication module <b>190</b>, a subscriber identification module (SIM) <b>196</b>, or an antenna module <b>197</b>. In some embodiments, at least one of the components (e.g., the connecting terminal <b>178</b>) may be omitted from the electronic device <b>101</b>, or one or more other components may be added in the electronic device <b>101</b>. In some embodiments, some of the components (e.g., the sensor module <b>176</b>, the camera module <b>180</b>, or the antenna module <b>197</b>) may be implemented as a single component (e.g., the display module <b>160</b>).</p><p id="p-0027" num="0026">The processor <b>120</b> may execute, for example, software (e.g., a program <b>140</b>) to control at least one other component (e.g., a hardware or software component) of the electronic device <b>101</b> coupled with the processor <b>120</b>, and may perform various data processing or computation. According to one embodiment, as at least part of the data processing or computation, the processor <b>120</b> may store a command or data received from another component (e.g., the sensor module <b>176</b> or the communication module <b>190</b>) in volatile memory <b>132</b>, process the command or the data stored in the volatile memory <b>132</b>, and store resulting data in non-volatile memory <b>134</b>. According to an embodiment, the processor <b>120</b> may include a main processor <b>121</b> (e.g., a central processing unit (CPU) or an application processor (AP)), or an auxiliary processor <b>123</b> (e.g., a graphics processing unit (GPU), a neural processing unit (NPU), an image signal processor (ISP), a sensor hub processor, or a communication processor (CP)) that is operable independently from, or in conjunction with, the main processor <b>121</b>. For example, when the electronic device <b>101</b> includes the main processor <b>121</b> and the auxiliary processor <b>123</b>, the auxiliary processor <b>123</b> may be adapted to consume less power than the main processor <b>121</b>, or to be specific to a specified function. The auxiliary processor <b>123</b> may be implemented as separate from, or as part of the main processor <b>121</b>.</p><p id="p-0028" num="0027">The term &#x201c;processor&#x201d; shall be understood to refer to both the singular and plural context in this document.</p><p id="p-0029" num="0028">The auxiliary processor <b>123</b> may control at least some of functions or states related to at least one component (e.g., the display module <b>160</b>, the sensor module <b>176</b>, or the communication module <b>190</b>) among the components of the electronic device <b>101</b>, instead of the main processor <b>121</b> while the main processor <b>121</b> is in an inactive (e.g., sleep) state, or together with the main processor <b>121</b> while the main processor <b>121</b> is in an active state (e.g., executing an application). According to an embodiment, the auxiliary processor <b>123</b> (e.g., an image signal processor or a communication processor) may be implemented as part of another component (e.g., the camera module <b>180</b> or the communication module <b>190</b>) functionally related to the auxiliary processor <b>123</b>. According to an embodiment, the auxiliary processor <b>123</b> (e.g., the neural processing unit) may include a hardware structure specified for artificial intelligence model processing. An artificial intelligence model may be generated by machine learning. Such learning may be performed, e.g., by the electronic device <b>101</b> where the artificial intelligence is performed or via a separate server (e.g., the server <b>108</b>). Learning algorithms may include, but are not limited to, e.g., supervised learning, unsupervised learning, semi-supervised learning, or reinforcement learning. The artificial intelligence model may include a plurality of artificial neural network layers. The artificial neural network may be a deep neural network (DNN), a convolutional neural network (CNN), a recurrent neural network (RNN), a restricted boltzmann machine (RBM), a deep belief network (DBN), a bidirectional recurrent deep neural network (BRDNN), deep Q-network or a combination of two or more thereof but is not limited thereto. The artificial intelligence model may, additionally or alternatively, include a software structure other than the hardware structure.</p><p id="p-0030" num="0029">The memory <b>130</b> may store various data used by at least one component (e.g., the processor <b>120</b> or the sensor module <b>176</b>) of the electronic device <b>101</b>. The various data may include, for example, software (e.g., the program <b>140</b>) and input data or output data for a command related thereto. The memory <b>130</b> may include the volatile memory <b>132</b> or the non-volatile memory <b>134</b>. The non-volatile memory includes internal memory <b>136</b> and external memory <b>138</b>. The external memory <b>138</b> can be, for example, a memory card with Flash ROM.</p><p id="p-0031" num="0030">The program <b>140</b> may be stored in the memory <b>130</b> as software, and may include, for example, an operating system (OS) <b>142</b>, middleware <b>144</b>, or an application <b>146</b>.</p><p id="p-0032" num="0031">The input module <b>150</b> may receive a command or data to be used by another component (e.g., the processor <b>120</b>) of the electronic device <b>101</b>, from the outside (e.g., a user) of the electronic device <b>101</b>. The input module <b>150</b> may include, for example, a microphone, a mouse, a keyboard, a key (e.g., a button), or a digital pen (e.g., a stylus pen).</p><p id="p-0033" num="0032">The sound output module <b>155</b> may output sound signals to the outside of the electronic device <b>101</b>. The sound output module <b>155</b> may include, for example, a speaker or a receiver. The speaker may be used for general purposes, such as playing multimedia or playing record. The receiver may be used for receiving incoming calls. According to an embodiment, the receiver may be implemented as separate from, or as part of the speaker.</p><p id="p-0034" num="0033">The display module <b>160</b> may visually provide information to the outside (e.g., a user) of the electronic device <b>101</b>. The display module <b>160</b> may include, for example, a display, a hologram device, or a projector and control circuitry to control a corresponding one of the display, hologram device, and projector. According to an embodiment, the display module <b>160</b> may include a touch sensor adapted to detect a touch, or a pressure sensor adapted to measure the intensity of force incurred by the touch.</p><p id="p-0035" num="0034">The audio module <b>170</b> may convert a sound into an electrical signal and vice versa. According to an embodiment, the audio module <b>170</b> may obtain the sound via the input module <b>150</b>, or output the sound via the sound output module <b>155</b> or a headphone of an external electronic device (e.g., an electronic device <b>102</b>) directly (e.g., wiredly) or wirelessly coupled with the electronic device <b>101</b>.</p><p id="p-0036" num="0035">The sensor module <b>176</b> may detect an operational state (e.g., power or temperature) of the electronic device <b>101</b> or an environmental state (e.g., a state of a user) external to the electronic device <b>101</b>, and then generate an electrical signal or data value corresponding to the detected state. According to an embodiment, the sensor module <b>176</b> may include, for example, a gesture sensor, a gyro sensor, an atmospheric pressure sensor, a magnetic sensor, an acceleration sensor, a grip sensor, a proximity sensor, a color sensor, an infrared (IR) sensor, a biometric sensor, a temperature sensor, a humidity sensor, or an illuminance sensor.</p><p id="p-0037" num="0036">The interface <b>177</b> may support one or more specified protocols to be used for the electronic device <b>101</b> to be coupled with the external electronic device (e.g., the electronic device <b>102</b>) directly (e.g., wiredly) or wirelessly. According to an embodiment, the interface <b>177</b> may include, for example, a high definition multimedia interface (HDMI), a universal serial bus (USB) interface, a secure digital (SD) card interface, or an audio interface.</p><p id="p-0038" num="0037">A connecting terminal <b>178</b> may include a connector via which the electronic device <b>101</b> may be physically connected with the external electronic device (e.g., the electronic device <b>102</b>). According to an embodiment, the connecting terminal <b>178</b> may include, for example, a HDMI connector, a USB connector, a SD card connector, or an audio connector (e.g., a headphone connector).</p><p id="p-0039" num="0038">The haptic module <b>179</b> may convert an electrical signal into a mechanical stimulus (e.g., a vibration or a movement) or electrical stimulus which may be recognized by a user via his tactile sensation or kinesthetic sensation. According to an embodiment, the haptic module <b>179</b> may include, for example, a motor, a piezoelectric element, or an electric stimulator.</p><p id="p-0040" num="0039">The camera module <b>180</b> may capture a still image or moving images. According to an embodiment, the camera module <b>180</b> may include one or more lenses, image sensors, image signal processors, or flashes.</p><p id="p-0041" num="0040">The power management module <b>188</b> may manage power supplied to the electronic device <b>101</b>. According to one embodiment, the power management module <b>188</b> may be implemented as at least part of, for example, a power management integrated circuit (PMIC).</p><p id="p-0042" num="0041">The battery <b>189</b> may supply power to at least one component of the electronic device <b>101</b>. According to an embodiment, the battery <b>189</b> may include, for example, a primary cell which is not rechargeable, a secondary cell which is rechargeable, or a fuel cell.</p><p id="p-0043" num="0042">The communication module <b>190</b> may support establishing a direct (e.g., wired) communication channel or a wireless communication channel between the electronic device <b>101</b> and the external electronic device (e.g., the electronic device <b>102</b>, the electronic device <b>104</b>, or the server <b>108</b>) and performing communication via the established communication channel. The communication module <b>190</b> may include one or more communication processors that are operable independently from the processor <b>120</b> (e.g., the application processor (AP)) and supports a direct (e.g., wired) communication or a wireless communication. According to an embodiment, the communication module <b>190</b> may include a wireless communication module <b>192</b> (e.g., a cellular communication module, a short-range wireless communication module, or a global navigation satellite system (GNSS) communication module) or a wired communication module <b>194</b> (e.g., a local area network (LAN) communication module or a power line communication (PLC) module). A corresponding one of these communication modules may communicate with the external electronic device via the first network <b>198</b> (e.g., a short-range communication network, such as Bluetooth&#x2122;, wireless-fidelity (Wi-Fi) direct, or infrared data association (IrDA)) or the second network <b>199</b> (e.g., a long-range communication network, such as a legacy cellular network, a 5G network, a next-generation communication network, the Internet, or a computer network (e.g., LAN or wide area network (WAN)). These various types of communication modules may be implemented as a single component (e.g., a single chip), or may be implemented as multi components (e.g., multi chips) separate from each other. The wireless communication module <b>192</b> may identify and authenticate the electronic device <b>101</b> in a communication network, such as the first network <b>198</b> or the second network <b>199</b>, using subscriber information (e.g., international mobile subscriber identity (IMSI)) stored in the subscriber identification module <b>196</b>.</p><p id="p-0044" num="0043">The wireless communication module <b>192</b> may support a 5G network, after a 4G network, and next-generation communication technology, e.g., new radio (NR) access technology. The NR access technology may support enhanced mobile broadband (eMBB), massive machine type communications (mMTC), or ultra-reliable and low-latency communications (URLLC). The wireless communication module <b>192</b> may support a high-frequency band (e.g., the mmWave band) to achieve, e.g., a high data transmission rate. The wireless communication module <b>192</b> may support various technologies for securing performance on a high-frequency band, such as, e.g., beamforming, massive multiple-input and multiple-output (massive MIMO), full dimensional MIMO (FD-MIMO), array antenna, analog beam-forming, or large scale antenna. The wireless communication module <b>192</b> may support various requirements specified in the electronic device <b>101</b>, an external electronic device (e.g., the electronic device <b>104</b>), or a network system (e.g., the second network <b>199</b>). According to an embodiment, the wireless communication module <b>192</b> may support a peak data rate (e.g., 20 Gbps or more) for implementing eMBB, loss coverage (e.g., 164 dB or less) for implementing mMTC, or U-plane latency (e.g., 0.5 ms or less for each of downlink (DL) and uplink (UL), or a round trip of 1 ms or less) for implementing URLLC.</p><p id="p-0045" num="0044">The antenna module <b>197</b> may transmit or receive a signal or power to or from the outside (e.g., the external electronic device) of the electronic device <b>101</b>. According to an embodiment, the antenna module <b>197</b> may include an antenna including a radiating element composed of a conductive material or a conductive pattern formed in or on a substrate (e.g., a printed circuit board (PCB)). According to an embodiment, the antenna module <b>197</b> may include a plurality of antennas (e.g., array antennas). In such a case, at least one antenna appropriate for a communication scheme used in the communication network, such as the first network <b>198</b> or the second network <b>199</b>, may be selected, for example, by the communication module <b>190</b> (e.g., the wireless communication module <b>192</b>) from the plurality of antennas. The signal or the power may then be transmitted or received between the communication module <b>190</b> and the external electronic device via the selected at least one antenna. According to an embodiment, another component (e.g., a radio frequency integrated circuit (RFIC)) other than the radiating element may be additionally formed as part of the antenna module <b>197</b>.</p><p id="p-0046" num="0045">The antenna module <b>197</b> may form a mmWave antenna module. According to an embodiment, the mmWave antenna module may include a printed circuit board, a RFIC disposed on a first surface (e.g., the bottom surface) of the printed circuit board, or adjacent to the first surface and capable of supporting a designated high-frequency band (e.g., the mmWave band), and a plurality of antennas (e.g., array antennas) disposed on a second surface (e.g., the top or a side surface) of the printed circuit board, or adjacent to the second surface and capable of transmitting or receiving signals of the designated high-frequency band.</p><p id="p-0047" num="0046">At least some of the above-described components may be coupled mutually and communicate signals (e.g., commands or data) therebetween via an inter-peripheral communication scheme (e.g., a bus, general purpose input and output (GPIO), serial peripheral interface (SPI), or mobile industry processor interface (MIPI)).</p><p id="p-0048" num="0047">According to an embodiment, commands or data may be transmitted or received between the electronic device <b>101</b> and the external electronic device <b>104</b> via the server <b>108</b> coupled with the second network <b>199</b>. Each of the electronic devices <b>102</b> or <b>104</b> may be a device of a same type as, or a different type, from the electronic device <b>101</b>. According to an embodiment, all or some of operations to be executed at the electronic device <b>101</b> may be executed at one or more of the external electronic devices <b>102</b>, <b>104</b>, or <b>108</b>. For example, if the electronic device <b>101</b> should perform a function or a service automatically, or in response to a request from a user or another device, the electronic device <b>101</b>, instead of, or in addition to, executing the function or the service, may request the one or more external electronic devices to perform at least part of the function or the service. The one or more external electronic devices receiving the request may perform the at least part of the function or the service requested, or an additional function or an additional service related to the request, and transfer an outcome of the performing to the electronic device <b>101</b>. The electronic device <b>101</b> may provide the outcome, with or without further processing of the outcome, as at least part of a reply to the request. To that end, a cloud computing, distributed computing, mobile edge computing (MEC), or client-server computing technology may be used, for example. The electronic device <b>101</b> may provide ultra low-latency services using, e.g., distributed computing or mobile edge computing. In another embodiment, the external electronic device <b>104</b> may include an internet-of-things (IoT) device. The server <b>108</b> may be an intelligent server using machine learning and/or a neural network. According to an embodiment, the external electronic device <b>104</b> or the server <b>108</b> may be included in the second network <b>199</b>. The electronic device <b>101</b> may be applied to intelligent services (e.g., smart home, smart city, smart car, or healthcare) based on 5G communication technology or IoT-related technology.</p><p id="p-0049" num="0048">The electronic device <b>101</b> can also include a secure module <b>199</b>. The secure module <b>199</b> can be physically separated from processor <b>120</b> and can include a secure processor and a secure memory.</p><p id="p-0050" num="0049">As noted, the memory <b>130</b> can store sensitive information. As will be described below, the electronic device <b>101</b> may restrict access to the sensitive information.</p><p id="p-0051" num="0050">Secure Access</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a drawing illustrating a structure of an electronic device related to processing of secure data according to an embodiment of the disclosure. The electronic device includes processor <b>230</b>, memory <b>210</b>, and a secure module <b>250</b>. The secure module <b>250</b> includes a secure processor <b>251</b> and a secure memory <b>253</b>.</p><p id="p-0053" num="0052">When using sensitive data, such as biometric authentication, block chain, or payment, an electronic device <b>200</b> (e.g., the electronic device <b>101</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) may store the sensitive data as secure data <b>253</b><i>a </i>in the secure memory <b>253</b> and control access to the secure memory <b>253</b>. For example, the electronic device <b>200</b> may include a physically separated secure module (or secure hardware) <b>250</b>, and that stores the secure data <b>253</b><i>a </i>in the secure memory <b>253</b> included in the secure module <b>250</b>, thereby improving security of the secure data <b>253</b><i>a. </i></p><p id="p-0054" num="0053">In addition, in order to prevent a Trusted Application (TA) <b>230</b><i>a </i>operating in a secure environment (or secure area) (e.g., Trusted Execution Environment (TEE)) from using the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> without a separate access control, the electronic device <b>200</b> restrict access to the secure data <b>253</b><i>a </i>with requiring user authentication. For example, the electronic device <b>200</b> may restrict an access to the secure data <b>253</b><i>a </i>in a locked state or after a specified amount of time elapses after the user authentication (e.g., a state where a valid duration for the access to the secure memory <b>253</b> expires).</p><p id="p-0055" num="0054">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the electronic device <b>200</b> for supporting the aforementioned function may include a memory <b>210</b> (e.g., the memory <b>130</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), a processor <b>230</b> (e.g., the processor <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), and the secure module <b>250</b>. However, the structure of the electronic device <b>200</b> is not limited thereto. According to certain embodiments, the electronic device <b>200</b> may include at least one different component other than the aforementioned components. For example, the electronic device <b>200</b> may further include a display (e.g., the display module <b>160</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>) for displaying a visual object. For example, the display may display a variety of content (e.g., a text, an image, a video, an icon, a symbol, etc.) to the user. The display may include a touch screen, and may receive, for example, a touch, gesture, proximity, or hovering input using an electronic pen or a user's body part. According to an embodiment, the display may output a user interface for the secure data <b>253</b><i>a. </i></p><p id="p-0056" num="0055">The memory <b>210</b> may store a variety of data used by at least one component of the electronic device <b>200</b>. The memory <b>210</b> may store instructions and data related to processing of the secure data <b>253</b><i>a</i>. In this case, the instruction may be executed by the processor <b>230</b>. The memory <b>210</b> may store a program or interface. The program may be capable of performing at least one function. For example, the memory <b>210</b> may store a user authentication framework <b>211</b> that includes and provide an user authentication interface and an application. The application may include a secure service application <b>212</b>. The secure service application <b>212</b> may provide a service through a secure function. For example, the user authentication framework <b>211</b> may include an interface for switching the electronic device <b>200</b> from a lock state to an unlock state. The interface for switching to the unlock state may include, for example, an object which allows the user to input a pin number, a pattern, or a password. The secure service application <b>212</b> may include an application (e.g., a bank application or a payment application) providing a service by using the secure data <b>253</b><i>a </i>requiring processing with a high level security, such as biometric authentication, block chain, or payment.</p><p id="p-0057" num="0056">The processor <b>230</b> may control at least one component of the electronic device <b>200</b>, and may perform a variety of data processing or computation. The processor <b>230</b> may execute instructions stored in the memory <b>210</b> to perform a function related to processing or access of the secure data <b>253</b><i>a</i>. The processor <b>230</b> may perform a function related to processing of the secure data <b>253</b><i>a </i>through communication with a secure processor <b>251</b> included in the secure module <b>250</b>.</p><p id="p-0058" num="0057">The processor <b>230</b> may process normal data or may process data requiring secure access. A security level of data processed in the processor <b>230</b> may be lower than the security level of data processed in the secure module <b>250</b>. The processor <b>230</b> may provide a first execution environment <b>201</b> (or, a normal area or a normal world, e.g., a Rich Execution Environment (REE)) for processing normal data and a second execution environment <b>202</b> (or, a secure area or a secure world, e.g., a Trusted Execution Environment (TEE)) for processing data with a lower security level than the security level of data processed in the secure module <b>250</b> and higher than a normal security level. For example, the user authentication framework <b>211</b> and the secure service application <b>212</b> may operate in the first execution environment <b>201</b>, and the TA <b>230</b><i>a </i>may operate in the second execution environment <b>202</b>. The TA <b>230</b><i>a </i>may include at least one of a user authentication processing application <b>231</b>, secure processing application <b>232</b>, and access processing application <b>233</b> disclosed in <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>. Functions and operations of the user authentication processing application <b>231</b>, the secure processing application <b>232</b>, and the access processing application <b>233</b> will be described in detail with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0059" num="0058">The processor <b>230</b> may obtain user authentication information through the interface included in the user authentication framework <b>211</b>. The processor <b>230</b> may attempt the user authentication, based on the obtained user authentication information. For example, when the user inputs a pin number, a pattern, or a password through the interface, the processor <b>230</b> may obtain the foregoing information (e.g., the pin number, the pattern, or the password) and use it to verify whether the user is an authorized user (a user who is allowed to use the electronic device <b>200</b>) (i.e., user authentication). For example, the user authentication may be attempted through the user authentication processing application <b>231</b>.</p><p id="p-0060" num="0059">When the user authentication fails, the processor <b>230</b> may output information for notifying that the user authentication has failed, through an interface provided by the user authentication framework <b>211</b>. For example, the processor <b>230</b> may display an object indicating the failure of the user authentication on the display.</p><p id="p-0061" num="0060">When the user authentication succeeds, the processor <b>230</b> may obtain the secure data <b>253</b><i>a </i>from the secure memory <b>253</b> included in the secure module <b>250</b>. In addition, the processor <b>230</b> may store a token including a valid duration for an access to the secure memory <b>253</b>, the secure data <b>253</b><i>a </i>obtained from the secure memory <b>253</b>, and a key value for decoding the obtained secure data <b>253</b><i>a </i>in a buffer. Herein, the buffer may be included in the second execution environment <b>202</b>. For example, the token may include at least one of a User Identifier (UID), an authentication time, a valid duration, and signature information. The processor <b>230</b> may store at least one of the token, the obtained secure data <b>253</b><i>a</i>, and the key value through the TA <b>230</b><i>a </i>(e.g., the access processing application <b>233</b>) operating in the second execution environment <b>202</b>.</p><p id="p-0062" num="0061">In certain embodiments, the secure data <b>253</b><i>a </i>stored in the buffer may be encoded (or encrypted) according to the key value, wherein the key value is needed for decoding (or decryption).</p><p id="p-0063" num="0062">When at least one of the token, the obtained secure data <b>253</b><i>a</i>, and the key value is stored in the buffer and the time is within the valid duration in the token, when the secure service application <b>212</b> requests the secure data <b>253</b><i>a</i>, the processor <b>230</b> may transfer the secure data <b>253</b><i>a </i>from the buffer to the secure service application <b>212</b>, instead of obtaining the secure data <b>253</b><i>a </i>from the secure memory <b>253</b>.</p><p id="p-0064" num="0063">Accordingly, the electronic device <b>200</b> restricts access as well as provides a fast response time, even in an environment of a low data transfer rate. This would occur without being limited to a hardware specification of the secure memory <b>253</b>. In addition, since the electronic device <b>200</b> stores the secure data <b>253</b><i>a </i>in the buffer, advantageously, an access to the secure data <b>253</b><i>a </i>may be controlled at a security level higher than that of the first execution environment <b>201</b>.</p><p id="p-0065" num="0064">When the valid duration included in the token expires (when the time of attempted access is more than the valid duration after the time of last user authentication), the processor <b>230</b> may delete (or initialize) the token and key value from the buffer. For example, the processor <b>230</b> may control the access to the secure data <b>253</b><i>a </i>through the valid duration included in the token. In this case, when the valid duration expires, the token may be deleted (or initialized), so that validity for the access to the secure data <b>253</b> is determined rapidly by verifying only whether the token is present (or whether it is initialized). That is, in a state where the user does not use the electronic device <b>200</b> before the user authentication (e.g., a lock state) or a state where a specified time elapses after the user authentication (e.g., a state where the valid duration expires), the processor <b>230</b> may not transfer the secure data <b>253</b><i>a </i>stored in the buffer to the secure service application <b>212</b>.</p><p id="p-0066" num="0065">The term &#x201c;deleted&#x201d; may be understood to include both the circumstance where the deleted item is actually overwritten in memory as well as when the memory locations storing the item are deemed available for writing, even though they may still store the item. In certain embodiments, when the valid duration expires, the token and key value may be overwritten.</p><p id="p-0067" num="0066">When a signal requesting the secure data <b>253</b><i>a </i>is obtained by the execution of the secure service application <b>212</b>, the processor <b>230</b> may verify whether the token stored in the buffer is present. When there is no token stored in the buffer, the processor <b>230</b> may send a signal declining the request for the secure data to the secure service application <b>212</b>. Alternatively, the processor <b>230</b> may verify that the valid duration included in the token when the first token is present in the buffer. When the valid duration has not expired, the processor <b>230</b> may decode the secure data <b>253</b><i>a </i>stored in the buffer using the key value, and transfer the decoded secure data <b>253</b><i>a </i>to the secure service application <b>212</b>.</p><p id="p-0068" num="0067">After the token and the key value are deleted from the buffer, the processor <b>230</b> may obtain user authentication information (e.g., a pin number, a pattern, or a password) through the interface. The processor <b>230</b> may attempt user authentication, based on the obtained user authentication information. In addition, when the user authentication succeeds, another token including another valid duration reconfigured for an access to the secure memory <b>253</b> and a key value for decoding the secure data <b>253</b><i>a </i>stored in the buffer may be stored in the buffer.</p><p id="p-0069" num="0068">For example, after the secure data <b>253</b><i>a </i>is obtained from the secure memory <b>253</b> and is stored in the buffer, when the token and the key value are deleted at the expiry of the valid duration the processor <b>230</b>, the processor <b>230</b> may store the token including the key value again in the buffer. The token may include a reconfigured valid duration. In this case, the processor <b>230</b> may skip the operation of obtaining the secure data <b>253</b><i>a </i>from the secure memory <b>253</b>.</p><p id="p-0070" num="0069">When a signal requesting to write data (e.g., the secure data <b>253</b><i>a</i>) in the secure memory <b>253</b> is obtained by the execution of the secure service application <b>212</b>, the processor <b>230</b> may verify whether the token stored in the buffer is present. When the buffer does not store the token, the processor <b>230</b> may send a signal declining to write the data to the secure service application <b>212</b>. Alternatively, the processor <b>230</b> may verify the valid duration included in the token when the first token is present in the buffer, write the data in the buffer when the valid duration is verified. The valid duration can be verified by verifying that the current time is within the valid duration from the most recent user authentication. In addition, the processor <b>230</b> may transfer the data stored in the buffer to the secure data <b>253</b><i>a </i>so that the data is stored in the secure memory <b>253</b>.</p><p id="p-0071" num="0070">The secure module <b>250</b> may include the secure processor <b>251</b> and the secure memory <b>253</b> which stores the secure data <b>253</b><i>a</i>, as secure hardware physically separated from the processor <b>230</b>. The secure processor <b>251</b> may perform a function related to processing of the secure data <b>253</b><i>a </i>requiring a high level of security. The secure processor <b>251</b> may perform a function related to processing of the secure data <b>253</b><i>a </i>through communication with the processor <b>230</b>.</p><p id="p-0072" num="0071">The secure processor <b>251</b> may provide a third execution environment <b>203</b> (e.g., a Secure Execution Environment (SEE)) for processing the secure data <b>253</b><i>a</i>. Since the third execution environment <b>203</b> is provided from the secure processor <b>251</b> that is physically separated from the processor <b>230</b>, it is possible to provide a a higher security level than the second execution environment <b>202</b>. The secure memory <b>253</b> may be included in the third execution environment <b>203</b>. In addition, at least part of the function for processing the secure data <b>253</b><i>a </i>may be performed through a Secure Application (SA) <b>250</b><i>a </i>which operates in the third execution environment <b>203</b>. The SA <b>250</b><i>a </i>may include at least one of a user authentication application <b>255</b> and access control application <b>257</b> disclosed in <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>. Functions and operations of the user authentication application <b>255</b> and access control application <b>257</b> will be described in detail with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0073" num="0072">When information (e.g., a pin number, a pattern, or a password) for the user authentication is obtained through an interface provided by the user authentication framework <b>211</b>, the processor <b>230</b> may transfer the obtained information to the secure processor <b>251</b>. The secure processor <b>251</b> which has received the information transferred from the processor <b>230</b> may perform user authentication by comparing user authentication information pre-stored in the secure memory <b>253</b> and the transferred information. When the user authentication succeeds (e.g., when a value indicating similarity between the user authentication information pre-stored in the secure memory <b>253</b> and the transferred information is greater than or equal to a specified level), the secure processor <b>251</b> may switch the state of the electronic device <b>200</b> to the unlock state. Alternatively, when the user authentication fails (e.g., when the value indicating the similarity between the user authentication information pre-stored in the memory <b>253</b> and the transferred information is less than the specified level), the state of the electronic device <b>200</b> may be maintained to the lock state.</p><p id="p-0074" num="0073">The secure processor <b>251</b> may apply the state (e.g., the lock state or the unlock state) of the electronic device <b>200</b> to information (e.g., the state information <b>259</b><i>a </i>of <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>) indicating the state of the electronic device <b>200</b>, stored in the third execution environment <b>203</b>. For example, the secure processor <b>251</b> may also store the information indicating the state of the electronic device <b>200</b> as information indicating the lock state when the state of the electronic device <b>200</b> is the lock state, and may also store the information indicating the state of the electronic device <b>200</b> as information indicating the unlock state when the state of the electronic device <b>200</b> is the unlock state.</p><p id="p-0075" num="0074">The secure processor <b>251</b> may receive from the processor <b>230</b> a signal requesting the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b>. In addition, the secure processor <b>251</b> may attempt user authentication, in response to the signal received from the processor <b>230</b>. The secure processor <b>251</b> may perform the user authentication, based on the information (e.g., the state information <b>259</b><i>a </i>of <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>) indicating the state of the electronic device <b>200</b>, stored in the third execution environment <b>203</b>. When the electronic device <b>200</b> is the lock state, the secure processor <b>251</b> may process the user authentication as a failure, based on the information. Alternatively, when the state of the electronic device <b>200</b> is the unlock state, the secure processor <b>251</b> may process the user authentication as a success, based on the information.</p><p id="p-0076" num="0075">The secure processor <b>251</b> may send a signal indicating a failure of the user authentication to the processor <b>230</b> when the user authentication fails, and may send a signal indicating a success of the user authentication to the processor <b>230</b> when the user authentication succeeds.</p><p id="p-0077" num="0076">When the user authentication succeeds, the secure processor <b>251</b> may configure information (e.g., the valid duration <b>259</b><i>b </i>of <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>) indicating a valid duration for an access to the secure memory <b>253</b>, stored in the third execution environment <b>203</b>. The information indicating the valid duration for the access to the secure memory <b>253</b> may include information on a time (e.g., a start time and an end (expiry) time) for which the access to the secure memory <b>253</b> is allowed. A secure timer for verifying the expiration of the valid duration for the access to the secure memory <b>253</b> may be included in the third execution environment <b>203</b>. For example, as a timer which is set from the start time to the end (expiry) time, the secure timer may notify the expiration of the valid duration to the secure processor <b>251</b> when it is the end (expiry) time.</p><p id="p-0078" num="0077">Information (e.g., the state information <b>259</b><i>a </i>oaf <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>) indicating the state of the electronic device <b>200</b> and information (e.g., the valid duration <b>259</b><i>b </i>of <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>) indicating the valid duration for the access to the secure memory <b>253</b> may be stored in a form of a slot in the third execution environment <b>203</b>. For example, the secure memory <b>253</b> may distinguish a slot accessible by each SA <b>250</b><i>a </i>by dividing a storage area on a slot basis. In addition, the secure data <b>253</b><i>a </i>may also be stored in the form of the slot. For example, the secure memory <b>253</b> may be divided into a slot for storing information (e.g., a pin number, a pattern, or a password) related to user authentication and a slot for storing data used by the secure service application <b>121</b>, and the secure data <b>253</b><i>a </i>may be stored in the divided slot according to a type of the secure data <b>253</b><i>a. </i></p><p id="p-0079" num="0078">According to an embodiment, in response to the signal requesting the secure data <b>253</b><i>a </i>from the processor <b>230</b>, when the user authentication succeeds as a result of performing user authentication, the secure processor <b>251</b> may verify the valid duration (e.g., the valid duration <b>259</b><i>b </i>of <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref>) for the access to the secure memory <b>253</b>. In addition, when the access to the secure memory <b>2553</b> is not valid as the result of verifying the valid duration, the processor <b>251</b> may send a signal declining the request for the secure data <b>253</b><i>a </i>to the processor <b>230</b>. Alternatively, when the access to the secure memory <b>253</b> is valid as the result of verifying the valid duration, the secure processor <b>251</b> may send the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> to the processor <b>230</b>. The secure processor <b>251</b> may perform an operation of performing the user authentication and an operation of verifying the valid duration, through the SA <b>250</b><i>a </i>(e.g., the user authentication application <b>255</b> and the access control application <b>257</b>) which operates in the third execution environment <b>203</b>.</p><p id="p-0080" num="0079">As described above, according to certain embodiments, an electronic device (e.g., the electronic device <b>200</b>) may include a memory (e.g., the memory <b>210</b>) which stores a framework (e.g., the user authentication framework <b>211</b>) providing an interface for user authentication and an application (e.g., the secure service application <b>212</b>) providing a service through a secure function, a processor (e.g., the processor <b>230</b>), and a secure module (e.g., the secure module <b>250</b>) physically separated from the processor and including a secure memory (e.g., the secure memory <b>253</b>) storing secure data and a secure processor (e.g., the secure processor <b>251</b>). The processor may be configured to obtain information for the user authentication, through the interface, perform the user authentication, based on the obtained information, obtain the secure data from the secure memory when the user authentication succeeds, store a first token including a first valid duration for an access to the secure memory, the obtained secure data, and a first key value for decoding the obtained secure data in a buffer, and delete the first token and the first key value from the buffer when the first valid duration expires.</p><p id="p-0081" num="0080">The processor may be configured to verify whether the first token is present in the buffer, upon receiving from the application a signal requesting the secure data, and send a signal declining the request for the secure data to the application when the first token is absent in the buffer.</p><p id="p-0082" num="0081">The processor may be configured to verify the first valid duration included in the first token when the first token is present in the buffer, decode the secure data stored in the buffer using the first key value, when the first valid duration is verified, and send the decoded secure data to the application.</p><p id="p-0083" num="0082">The processor may be configured to, after the first token and the first key value are deleted from the buffer, obtain user authentication information through the interface. The processor may be configured to perform user authentication, based on the obtained user authentication information, and store a second token including a second valid duration for an access to the secure memory and a second key value for decoding the secure data in the buffer, when the user authentication succeeds.</p><p id="p-0084" num="0083">The processor may be configured to verify whether the first token is present in the buffer upon receiving from the application a signal requesting to store data in the secure memory, and send to the application a signal declining to store the data, when the first token is absent in the buffer.</p><p id="p-0085" num="0084">The processor may be configured to verify the first valid duration included in the first token, when the first token is present in the buffer, write the data in the buffer, when the first valid duration is verified, and write the data stored in the buffer to the secure memory.</p><p id="p-0086" num="0085">The buffer may be included in a Trusted Execution Environment (TEE) (e.g., the second execution environment <b>202</b>) of a first security level provided by the processor. The secure memory may be included in a Secure Execution Environment (SEE) (e.g., the third execution environment <b>203</b>) of a second security level higher than the first security level provided by the secure processor.</p><p id="p-0087" num="0086">The first token, the obtained secure data, and the first key value may be stored in the buffer through a Trusted Application (TA) (e.g., the TA <b>230</b><i>a</i>) operating in the TEE.</p><p id="p-0088" num="0087">An electronic device (e.g., the electronic device <b>200</b>) may include a memory (e.g., the memory <b>210</b>) stores an application (e.g., the secure service application <b>212</b>), a processor (e.g., the processor <b>230</b>), and a secure module (e.g., the secure module <b>250</b>) physically separated from the processor. The secure module includes a secure memory (e.g., the secure memory <b>253</b>) and a secure processor (e.g., the secure processor <b>251</b>). The secure processor may be configured to receive a signal requesting data stored in the secure memory from the processor, attempt user authentication, in response to the receiving of the signal, verify a valid duration for an access to the secure memory when the user authentication succeeds, send a signal declining a request for the data to the processor when the valid duration is verified, and send the data stored in the secure memory to the processor when the valid duration is verified.</p><p id="p-0089" num="0088">The processor may provide a TEE (e.g., the second execution environment <b>202</b>) of a first security level. The secure memory may be included in an SEE (e.g., the third execution environment <b>203</b>) of a second security level higher than the first security level provided by the secure processor.</p><p id="p-0090" num="0089">The secure processor may be configured to perform the user authentication, based on information indicating a state of the electronic device, stored in the SEE.</p><p id="p-0091" num="0090">The performing of the user authentication and the verifying of the valid duration may be performed through a Secure Application (SA) (e.g., the SA <b>250</b><i>a</i>) operating in the SEE.</p><p id="p-0092" num="0091">As described above, the electronic device <b>200</b> including the secure module <b>250</b> physically separated from the processor <b>230</b> may provide a method of processing the secure data <b>253</b><i>a </i>through an SA (e.g., the SA <b>250</b><i>a </i>of <figref idref="DRAWINGS">FIG. <b>2</b></figref> (operating in the third execution environment (e.g., the SEE) provided by the secure processor <b>251</b> included in the secure module <b>250</b> and a method of processing the secure data <b>253</b><i>a </i>through a TA (e.g., the TA <b>230</b><i>a </i>of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) operating in the second execution environment (e.g., the TEE) provided by the processor <b>230</b>. The method of processing the secure data <b>253</b><i>a </i>through the SA has an advantage in that secure processing of a high level is possible, compared to the method of processing the secure data <b>253</b><i>a </i>through the TA. The method of processing the secure data <b>253</b><i>a </i>through the TA has an advantage in that a service requirement in which a fast response time is desired even in an environment of a low data transfer rate is satisfied, without being limited to a hardware specification of the secure memory <b>253</b>, compared to the method of processing the secure data <b>253</b><i>a </i>through the SA. The method of processing the secure data <b>253</b><i>a </i>through the SA is described below with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref> to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, and the method of processing the secure data <b>253</b><i>a </i>through the TA is described below with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref> to <figref idref="DRAWINGS">FIG. <b>8</b></figref> and <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a drawing illustrating a method of processing secure data through an SA before user authentication according to an embodiment of the disclosure.</p><p id="p-0094" num="0093">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, as shown in operation <b>310</b>, in a state <b>301</b> before user authentication (e.g., a lock state), the electronic device <b>200</b> may execute the secure service application <b>212</b> which operates in the first execution environment <b>201</b>. The execution of the secure service application <b>212</b> in the state <b>301</b> before user authentication may cause leakage of user's critical information due illegal use such as hacking without user's recognition. Accordingly, the electronic device <b>200</b> may increase security of the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> through an access control function associated with the user authentication.</p><p id="p-0095" num="0094">In operation <b>320</b>, the secure service application <b>212</b> may send a first signal requesting the secure data <b>253</b><i>a </i>to the secure processing application <b>232</b> which operates in the second execution environment <b>202</b>. Operations of the secure service application <b>212</b> and secure processing application <b>232</b> may be controlled by the processor <b>230</b>.</p><p id="p-0096" num="0095">The secure processing application <b>232</b> may transmit to the secure processor <b>251</b> which provides the third execution environment <b>203</b> a second signal (or request message) including at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, a random number, and credential information. The type of the request may include read, write, or delete of data. The read of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is requested. The write of the data may indicate that data is stored in the secure memory <b>253</b>. The delete of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is delete. The service identifier may include information capable of identifying an owner of the requested secure data <b>253</b><i>a</i>. The slot information may include information indicating a location at which the secure data <b>253</b><i>a </i>is stored in the secure memory <b>253</b>. The timestamp of the request may indicate a time at which the secure data <b>253</b><i>a </i>is requested. The random number may be associated with information for avoiding retransmission of the same second signal (or request message). For example, the random number may be used to avoid retransmission of the second signal (or request message). The credential information may include data (e.g., the secure data <b>253</b><i>a</i>) to be stored in the secure memory <b>253</b> when the type of the request is the write of the data. The secure processor <b>251</b> which has received the second signal (or request message) may transfer signature information for the second signal (or request message) to the secure processing application <b>232</b>.</p><p id="p-0097" num="0096">In operation <b>330</b>, the secure processing application <b>232</b> which has received the signature information may send the second signal (or request message) and the signature information to the access control application <b>257</b> which operates in the third execution environment <b>203</b>. Operations of the access control application <b>257</b> may be controlled by the secure processor <b>251</b>.</p><p id="p-0098" num="0097">In operation <b>340</b>, the access control application <b>257</b> which has received the second signal (or request message) may perform user authentication, based on the state information <b>259</b><i>a </i>stored in the third execution environment <b>203</b>. For example, the access control application <b>257</b> may verify the state of the electronic device <b>200</b>, based on the state information <b>259</b><i>a</i>, and may determine whether the user authentication succeeds or fails according to the state of the electronic device <b>200</b>. For example, when the state of the electronic device <b>200</b> is the lock state, the access control application <b>257</b> may process the user authentication as a failure. As another example, when the state of the electronic device <b>200</b> is the unlock state, the access control application <b>257</b> may process the user authentication as a success. Since the secure service application <b>212</b> is executed in the state <b>301</b> before user authentication in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the state of the electronic device <b>200</b> is the lock state. Therefore, the access control application <b>257</b> may process the user authentication as a failure.</p><p id="p-0099" num="0098">The secure processor <b>251</b> and the secure memory <b>253</b> may share an authentication key for message authentication. The authentication key may be used for the purpose of verifying that the message is transmitted.</p><p id="p-0100" num="0099">When the user authentication fails, as shown in operation <b>350</b>, the access control application <b>257</b> may send a third signal (or decline message) indicating the failure of the user authentication to the secure processing application <b>232</b>. In this case, the access control application <b>257</b> may not verify the valid duration <b>259</b><i>b </i>for the access to the secure memory <b>253</b>.</p><p id="p-0101" num="0100">In operation <b>360</b>, the secure processing application <b>232</b> which has received the third signal (or decline message) indicating the failure of the user authentication may send to the secure service application <b>212</b> a fourth signal which notifies that the request for the secure data <b>253</b><i>a </i>is declined (or the user authentication fails). The secure service application <b>212</b> may output information indicating that the request for the secure data <b>253</b><i>a </i>is declined (or the user authentication fails) through an interface, in response to the fourth signal. For example, the secure service application <b>212</b> may display a visual object indicating that the request for the secure data <b>253</b><i>a </i>is declined (or the user authentication fails) on a display. As another example, the secure service application <b>212</b> may output a voice indicating that the request for the secure data <b>253</b><i>a </i>is declined (or the user authentication fails) through a speaker.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a drawing illustrating a method of user authentication through an SA according to an embodiment of the disclosure.</p><p id="p-0103" num="0102">Referring to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, as shown in operation <b>410</b>, the electronic device <b>200</b> may provide an interface <b>401</b> so that user authentication information (e.g., a pin number, a pattern, or a password) is input through the first execution environment <b>201</b>. In addition, the user authentication framework <b>211</b> may obtain information for the user authentication through the interface <b>401</b>. For example, the interface <b>401</b> may be displayed on a display when the electronic device <b>200</b> is booted or in a state where a specified time elapses after user authentication (e.g., a state where a valid duration for an access to the secure memory <b>253</b> expires).</p><p id="p-0104" num="0103">When the information for the user authentication is obtained, in operation <b>420</b>, the user authentication framework <b>211</b> may send a first signal including the obtained information to the user authentication processing application <b>231</b> which operates in the second execution environment <b>202</b>. The information for the user authentication may be transferred to the user authentication processing application <b>231</b> by being converted (e.g., encrypted) to a secure format. Operations of the user authentication framework <b>211</b> and user authentication processing application <b>231</b> may be controlled by the processor <b>230</b>.</p><p id="p-0105" num="0104">The user authentication processing application <b>231</b> may transmit to the secure processor <b>251</b> which provides the third execution environment <b>203</b> a second signal (or request message) requesting verification of information obtained for the user authentication. The second signal (or request message) may include at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, a random number, and encrypted user authentication information (e.g., information obtained by encrypting a pin number, a pattern, or a password). The type of the request may include information which requests verification of the user authentication information. The type of the request may include information indicating a type of the user authentication information. The service identifier may include information capable of identifying an owner of the user authentication information which requests the verification. The slot information may include information indicating a location at which pre-stored user authentication information is stored in the secure memory <b>253</b>. The timestamp of the request may indicate a time at which verification of the user authentication information is requested. The random number may be associated with information for avoiding retransmission of the same second signal (or request message). For example, the random number may be used to avoid retransmission of the second signal (or request message). The secure processor <b>251</b> which has received the second signal (or request message) may transfer signature information for the second signal (or request message) to the user authentication processing application <b>231</b>.</p><p id="p-0106" num="0105">In operation <b>430</b>, the user authentication processing application <b>231</b> which has received the signature information may send the second signal (or request message) and the signature information to the user authentication application <b>255</b> which operates in the third execution environment <b>203</b>. Operations of the user authentication application <b>255</b> may be controlled by the secure processor <b>251</b>.</p><p id="p-0107" num="0106">In operation <b>440</b>, the user authentication application <b>255</b> which has received the second signal (or request message) may attempt user authentication by comparing user authentication information (including the secure data <b>253</b><i>a</i>) pre-stored in the secure memory <b>253</b> and user authentication information received from the user authentication application <b>231</b>.</p><p id="p-0108" num="0107">When the user authentication succeeds (e.g., when a value indicating similarity between the user authentication information pre-stored in the secure memory <b>253</b> and the transferred information is greater than or equal to a specified level), the user authentication application <b>255</b> may switch the state of the electronic device <b>200</b> to the unlock state. Alternatively, when the user authentication fails (e.g., when the value indicating the similarity between the user authentication information pre-stored in the memory <b>253</b> and the transferred information is less than the specified level), the user authentication application <b>255</b> may maintain the state of the electronic device <b>200</b> to the lock state.</p><p id="p-0109" num="0108">In operation <b>450</b>, the user authentication application <b>255</b> may apply the state (e.g., the lock state or the unlock state) of the electronic device <b>200</b> to the state information <b>259</b><i>a </i>stored in the third execution environment <b>203</b>. For example, the user authentication application <b>255</b> may also store the state information <b>259</b><i>a </i>as information indicating the lock state when the state of the electronic device <b>200</b> is the lock state, and may also the state information <b>259</b><i>a </i>as information indicating the unlock state when the state of the electronic device <b>200</b> is the unlock state. In addition, when the user authentication succeeds, in operation <b>450</b>, the user authentication application <b>255</b> may configure a valid duration <b>259</b><i>b </i>for an access to the secure memory <b>253</b>. For example, the user authentication application <b>255</b> may store a current time or a time at which verification of the user authentication information is requested in the valid duration <b>259</b><i>b</i>. As another example, the user authentication application <b>255</b> may set a start time in the valid duration <b>259</b><i>b </i>for the access to the secure memory <b>253</b> to the current time or the time at which verification of the user authentication information is requested, and may set an end (expiry) time in the valid duration <b>259</b><i>b </i>to a time which exceeds by a specified time from the start time. According to an embodiment, a secure timer for verifying the expiration of the valid duration <b>259</b><i>b </i>for the access to the secure memory <b>253</b> may be included in the third execution environment <b>203</b>. For example, as a timer which is set from the start time to the end (expiry) time included in the valid duration <b>259</b><i>b</i>, the secure timer may notify the expiration of the valid duration <b>259</b><i>b </i>to the secure processor <b>251</b> when it is the end (expiry) time.</p><p id="p-0110" num="0109">The secure processor <b>251</b> and the secure memory <b>253</b> may share an authentication key for message authentication. The authentication key may be used for the purpose of verifying that the message is transmitted.</p><p id="p-0111" num="0110">In operation <b>460</b>, the user authentication application <b>255</b> may send a third signal (or decline message) indicating a result of processing the user authentication to the user authentication processing application <b>231</b>. In addition, in operation <b>470</b>, the user authentication processing application <b>231</b> which has received the third signal (or result message) indicating the result of processing the user authentication may send a fourth signal including the result of processing the user authentication to the user authentication framework <b>211</b>. The user authentication framework <b>211</b> may output information indicating the result of processing the user authentication through an interface, in response to the fourth signal. For example, the user authentication framework <b>211</b> may display a visual object indicating the result of processing the user authentication on the display. As another example, the user authentication framework <b>211</b> may output a voice indicating the result of processing the user authentication through a speaker.</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a drawing illustrating a method of processing secure data through an SA after user authentication according to an embodiment of the disclosure. Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, as shown in operation <b>510</b>, in a state <b>501</b> after user authentication (e.g., an unlock state), the electronic device <b>200</b> may execute the secure service application <b>212</b> which operates in the first execution environment <b>201</b>.</p><p id="p-0113" num="0112">In operation <b>520</b>, the secure service application <b>212</b> may send a first signal requesting the secure data <b>253</b><i>a </i>to the secure processing application <b>232</b> which operates in the second execution environment <b>202</b>. Operations of the secure service application <b>212</b> and secure processing application <b>232</b> may be controlled by the processor <b>230</b>.</p><p id="p-0114" num="0113">The secure processing application <b>232</b> may transmit to the secure processor <b>251</b> which provides the third execution environment <b>203</b> a second signal (or request message) including at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, a random number, and credential information. The type of the request may include read, write, or delete of data. The read of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is requested. The write of the data may indicate that data is stored in the secure memory <b>253</b>. The delete of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is delete. The service identifier may include information capable of identifying an owner of the requested secure data <b>253</b><i>a</i>. The slot information may include information indicating a location at which the secure data <b>253</b><i>a </i>is stored in the secure memory <b>253</b>. The timestamp of the request may indicate a time at which the secure data <b>253</b><i>a </i>is requested. The random number may be associated with information for avoiding retransmission of the same second signal (or request message). For example, the random number may be used to avoid retransmission of the second signal (or request message). The credential information may include data (e.g., the secure data <b>253</b><i>a</i>) to be stored in the secure memory <b>253</b> when the type of the request is the write of the data. The secure processor <b>251</b> which has received the second signal (or request message) may transfer signature information for the second signal (or request message) to the secure processing application <b>232</b>.</p><p id="p-0115" num="0114">In operation <b>530</b>, the secure processing application <b>232</b> which has received the signature information may send the second signal (or request message) and the signature information to the access control application <b>257</b> which operates in the third execution environment <b>203</b>. Operations of the access control application <b>257</b> may be controlled by the secure processor <b>251</b>.</p><p id="p-0116" num="0115">In operation <b>540</b>, the access control application <b>257</b> which has received the second signal (or request message) may attempt user authentication, based on the state information <b>259</b><i>a </i>stored in the third execution environment <b>203</b>. For example, the access control application <b>257</b> may verify the state of the electronic device <b>200</b>, based on the state information <b>259</b><i>a</i>, and may determine whether the user authentication succeeds or fails according to the state of the electronic device <b>200</b>. For example, when the state of the electronic device <b>200</b> is the lock state, the access control application <b>257</b> may process the user authentication as a failure. As another example, when the state of the electronic device <b>200</b> is the unlock state, the access control application <b>257</b> may process the user authentication as a success. Since the secure service application <b>212</b> is executed in the state <b>501</b> after user authentication in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the state of the electronic device <b>200</b> is the unlock state. Therefore, the access control application <b>257</b> may process the user authentication as a success.</p><p id="p-0117" num="0116">The secure processor <b>251</b> and the secure memory <b>253</b> may share an authentication key for message authentication. The authentication key may be used for the purpose of verifying that the message is transmitted.</p><p id="p-0118" num="0117">When the user authentication succeeds, in operation <b>540</b>, the access control application <b>257</b> may verify the valid duration <b>259</b><i>b </i>for the access to the secure memory <b>253</b>.</p><p id="p-0119" num="0118">When the valid duration <b>259</b><i>b </i>is not verified, in operation <b>560</b>, the access control application <b>257</b> may send to the secure processing application <b>232</b> a third signal (or decline message) which declines the request of the secure data <b>253</b><i>a</i>. In operation <b>570</b>, the secure processing application <b>232</b> which has received the third signal (or decline message) declining the request of the secure data <b>253</b><i>a </i>may send to the secure service application <b>212</b> a fourth signal which notifies that the request for the secure data <b>253</b><i>a </i>is declined. The secure service application <b>212</b> may output information indicating that the request for the secure data <b>253</b><i>a </i>is declined through an interface, in response to the fourth signal. For example, the secure service application <b>212</b> may display a visual object indicating that the request for the secure data <b>253</b><i>a </i>is declined on a display. As another example, the secure service application <b>212</b> may output a voice indicating that the request for the secure data <b>253</b><i>a </i>is declined through a speaker.</p><p id="p-0120" num="0119">When the access to the secure memory <b>253</b> is valid as the result of verifying the valid duration <b>259</b><i>b</i>, in operation <b>505</b>, the access control application <b>257</b> may obtain the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b>. In addition, in operation <b>560</b>, the access control application <b>257</b> may send to the secure processing application <b>232</b> a fifth signal (or response message) including the obtained secure data <b>253</b><i>a</i>. In operation <b>570</b>, the secure processing application <b>232</b> which has received the fifth signal (or response message) including the secure data <b>253</b><i>a </i>may send the secure data <b>253</b><i>a </i>to the secure service application <b>212</b>. Thereafter, the secure service application <b>212</b> may provide a service by using the secure data <b>253</b><i>a. </i></p><p id="p-0121" num="0120"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a drawing illustrating a method of user authentication through a TA according to an embodiment of the disclosure.</p><p id="p-0122" num="0121">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, as shown in operation <b>610</b>, the electronic device <b>200</b> may provide an interface <b>601</b> so that information (e.g., a pin number, a pattern, or a password) for user authentication is input through the first execution environment <b>201</b>. In addition, the user authentication framework <b>211</b> may obtain information for the user authentication through the interface <b>601</b>. For example, the interface <b>601</b> may be displayed on a display when the electronic device <b>200</b> is booted or in a state where a specified time elapses after user authentication (e.g., a state where a valid duration for an access to the secure memory <b>253</b> expires).</p><p id="p-0123" num="0122">When the information for the user authentication is obtained, in operation <b>620</b>, the user authentication framework <b>211</b> may send a first signal including the obtained information to the user authentication processing application <b>231</b> which operates in the second execution environment <b>202</b>. The information for the user authentication may be transferred to the user authentication processing application <b>231</b> by being converted (e.g., encrypted) to a secure format. Operations of the user authentication framework <b>211</b>, user authentication processing application <b>231</b>, and access processing application <b>233</b> may be controlled by the processor <b>230</b>.</p><p id="p-0124" num="0123">The user authentication processing application <b>231</b> may transmit to the secure processor <b>251</b> which provides the third execution environment <b>203</b> a second signal (or request message) requesting verification of information obtained for the user authentication. The second signal (or request message) may include at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, a random number, and encrypted user authentication information (e.g., information obtained by encrypting a pin number, a pattern, or a password). The type of the request may include information which requests verification of the user authentication information. The type of the request may include information indicating a type of the user authentication information. The service identifier may include information capable of identifying an owner of the user authentication information which requests the verification. The slot information may include information indicating a location at which pre-stored user authentication information is stored in the secure memory <b>253</b>. The timestamp of the request may indicate a time at which verification of the user authentication information is requested. The random number may be associated with information for avoiding retransmission of the same second signal (or request message). For example, the random number may be used to avoid retransmission of the second signal (or request message). The secure processor <b>251</b> which has received the second signal (or request message) may transfer signature information for the second signal (or request message) to the user authentication processing application <b>231</b>.</p><p id="p-0125" num="0124">In operation <b>630</b>, the user authentication processing application <b>231</b> which has received the signature information may send the second signal (or request message) and the signature information to the user authentication application <b>255</b> which operates in the third execution environment <b>203</b>. Operations of the user authentication application <b>255</b> and access control application <b>257</b> may be controlled by the secure processor <b>251</b>.</p><p id="p-0126" num="0125">In operation <b>640</b>, the user authentication application <b>255</b> which has received the second signal (or request message) may attempt user authentication by comparing user authentication information (including the secure data <b>253</b><i>a</i>) pre-stored in the secure memory <b>253</b> and user authentication information received from the user authentication application <b>231</b>.</p><p id="p-0127" num="0126">When the user authentication succeeds (e.g., when a value indicating similarity between the user authentication information pre-stored in the secure memory <b>253</b> and the transferred information is greater than or equal to a specified level), the user authentication application <b>255</b> may switch the state of the electronic device <b>200</b> to the unlock state. Alternatively, when the user authentication fails (e.g., when the value indicating the similarity between the user authentication information pre-stored in the memory <b>253</b> and the transferred information is less than the specified level), the user authentication application <b>255</b> may maintain the state of the electronic device <b>200</b> to the lock state.</p><p id="p-0128" num="0127">According to an embodiment, as shown in operation <b>651</b>, the user authentication application <b>255</b> may apply the state (e.g., the lock state or the unlock state) of the electronic device <b>200</b> to the state information <b>259</b><i>a </i>stored in the third execution environment <b>203</b>. For example, the user authentication application <b>255</b> may also store the state information <b>259</b><i>a </i>as information indicating the lock state when the state of the electronic device <b>200</b> is the lock state, and may also the state information <b>259</b><i>a </i>as information indicating the unlock state when the state of the electronic device <b>200</b> is the unlock state. In addition, when the user authentication succeeds, the user authentication application <b>255</b> may configure the valid duration <b>259</b><i>b </i>for an access to the secure memory <b>253</b>. For example, the user authentication application <b>255</b> may store a current time or a time at which verification of the user authentication information is requested in the valid duration <b>259</b><i>b</i>. As another example, the user authentication application <b>255</b> may set a start time in the valid duration <b>259</b><i>b </i>for the access to the secure memory <b>253</b> to the current time or the time at which verification of the user authentication information is requested, and may set an end (expiry) time in the valid duration <b>259</b><i>b </i>to a time which exceeds by a specified time from the start time.</p><p id="p-0129" num="0128">In operation <b>650</b>, the user authentication application <b>255</b> may send a third signal (or decline message) indicating a result of processing the user authentication to the user authentication processing application <b>231</b>. In addition, in operation <b>660</b>, the user authentication processing application <b>231</b> which has received the third signal (or result message) indicating the result of processing the user authentication may send a fourth signal including the result of processing the user authentication to the user authentication framework <b>211</b>. The user authentication framework <b>211</b> may output information indicating the result of processing the user authentication through an interface, in response to the fourth signal. For example, the user authentication framework <b>211</b> may display a visual object indicating the result of processing the user authentication on the display. As another example, the user authentication framework <b>211</b> may output a voice indicating the result of processing the user authentication through a speaker.</p><p id="p-0130" num="0129">In operation <b>670</b>, the user authentication processing application <b>231</b> may send a fifth signal (or authentication result message) including a result of processing the user authentication to the access processing application <b>233</b>. According to an embodiment, when the user authentication succeeds, the fifth signal may include a token including a valid duration (corresponding to the valid duration <b>259</b><i>b </i>stored in the third execution environment <b>203</b>) for the access to the secure memory <b>253</b> and a key value for decoding the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b>. The access processing application <b>233</b> may store the token and the key value in a buffer. Herein, the buffer may be included in the second execution environment <b>202</b>. The token may include, for example, at least one of a User ID (ID), an authentication time, a valid duration, and signature information.</p><p id="p-0131" num="0130">In operation <b>671</b>, the access processing application <b>233</b> which has received the fifth signal (or authentication result message) including the result of processing the user authentication may send a sixth signal requesting the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> to the access control application <b>257</b> which operates in the third execution environment <b>203</b>. In operation <b>672</b>, the access control application <b>257</b> which has received the sixth signal requesting the secure data <b>253</b><i>a </i>may obtain the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b>. In addition, in operation <b>673</b>, the access control application <b>257</b> may transfer the secure data <b>253</b><i>a </i>to the access control application <b>233</b>. The access processing application <b>233</b> which has received the secure data <b>253</b><i>a </i>may store the secure data <b>253</b><i>a </i>in the buffer. In some embodiments, when the secure data <b>253</b><i>a </i>is stored in the buffer, the access processing application <b>233</b> may skip the performing of the aforementioned operations <b>671</b>, <b>672</b>, and <b>673</b>.</p><p id="p-0132" num="0131">According to an embodiment, when the valid duration included in the token expires, the access processing application <b>233</b> may delete (or initialize) the token and key value stored in the buffer. For example, the access processing application <b>233</b> may control the access to the secure data <b>253</b><i>a </i>through the valid duration included in the token, and when the valid duration expires, the token is deleted (or initialized) to verify whether the token is present (or whether the token is initialized), thereby rapidly determining validity for the access to the secure data <b>253</b><i>a</i>. That is, in a state where the user does not use the electronic device <b>200</b> before the user authentication (e.g., a lock state) or a state where a specified time elapses after the user authentication (e.g., a state where the valid duration expires), the access processing application <b>233</b> may not send the secure data <b>253</b><i>a </i>stored in the buffer to the secure service application <b>212</b>.</p><p id="p-0133" num="0132">According to an embodiment, after the token and the key value are deleted from the buffer, when information (e.g., a pin number, a pattern, or a password) for the user authentication is obtained through an interface provided by the user authentication framework <b>211</b>, the access processing application <b>233</b> may attempt the user authentication, based on the obtained information. In addition, when the user authentication succeeds, the access processing application <b>233</b> may store in the buffer a token including a valid duration reconfigured for the access to the secure memory <b>253</b> and a key value for decoding the secure data <b>253</b><i>a </i>stored in the buffer. For example, after the secure data <b>253</b><i>a </i>is obtained from the secure memory <b>253</b> and stored in the buffer, when the token and the key value are deleted due to the expiration of the valid duration, the access processing application <b>233</b> may store the key value and the token including the reconfigured valid duration again in the buffer through the user authentication operation. In this case, the access processing application <b>233</b> may skip the operation of obtaining the secure data <b>253</b><i>a </i>from the secure memory <b>253</b>.</p><p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a drawing illustrating a method of processing secure data through a TA after user authentication according to an embodiment of the disclosure.</p><p id="p-0135" num="0134">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, as shown in operation <b>710</b>, in a state <b>701</b> after user authentication (e.g., an unlock state), the electronic device <b>200</b> may execute the secure service application <b>212</b> operating in the first execution environment <b>201</b>.</p><p id="p-0136" num="0135">In operation <b>720</b>, the secure service application <b>212</b> may send a first signal requesting the secure data <b>243</b><i>a </i>to the secure processing application <b>232</b> operating in the second execution environment <b>202</b>. Operations of the secure service application <b>212</b>, secure processing application <b>232</b>, and access processing application <b>233</b> may be controlled by the processor <b>230</b>.</p><p id="p-0137" num="0136">In operation <b>730</b>, the secure processing application <b>232</b> may send to the access processing application <b>233</b> operating in the second execution environment <b>202</b> a second signal (or request message) including at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, and credential information. The type of the request may include read, write, or delete of data. The read of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is requested. The write of the data may indicate that data is stored in the secure memory <b>253</b>. The delete of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is delete. The service identifier may include information capable of identifying an owner of the requested secure data <b>253</b><i>a</i>. The slot information may include information indicating a location at which the secure data <b>253</b><i>a </i>is stored in the secure memory <b>253</b> (or a location at which the data is stored in the buffer included in the second execution environment <b>202</b>). The timestamp of the request may indicate a time at which the secure data <b>253</b><i>a </i>is requested. The credential information may include data (e.g., the secure data <b>253</b><i>a</i>) to be stored in the secure memory <b>253</b> when the type of the request is the write of the data.</p><p id="p-0138" num="0137">The access processing application <b>233</b> which has received the second signal (or request message) may verify whether the token stored in the buffer is present. In the absence of the token stored in the buffer, in operation <b>740</b>, the access processing application <b>233</b> may send the third signal (or decline message) declining the request of the secure data <b>253</b><i>a </i>to the secure service application <b>212</b>. Alternatively, in the presence of the token in the buffer, the access processing application <b>233</b> may verify a valid duration included in the token. When the valid duration is verified, the access processing application <b>233</b> may decode the secure data <b>253</b><i>a </i>stored in the buffer by using a key value stored in the buffer. In addition, in operation <b>740</b>, the access processing application <b>233</b> may send the decoded secure data <b>253</b><i>a </i>to the secure service application <b>212</b>.</p><p id="p-0139" num="0138">In a case where at least one of the token, the secure data <b>253</b><i>a</i>, and the key value is stored in the buffer included in the second execution environment <b>202</b>, when the secure service application <b>212</b> requests the secure data <b>253</b><i>a</i>, the access processing application <b>233</b> may send the secure data <b>253</b><i>a </i>stored in the buffer to the secure service application <b>212</b>, based on the valid duration included in the token stored in the buffer, instead of obtaining the secure data <b>253</b><i>a </i>from the secure memory <b>253</b>. Accordingly, advantageously, the electronic device <b>200</b> may satisfy a service requirement in which a fast response time is desired even in an environment of a low data transfer rate, without being limited to a hardware specification of the secure memory <b>253</b>. In addition, since the electronic device <b>200</b> stores the secure data <b>253</b><i>a </i>in the buffer included in the second execution environment <b>202</b>, advantageously, an access to the secure data <b>253</b><i>a </i>may be controlled at a security level higher than that of the first execution environment <b>201</b>.</p><p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a drawing illustrating a method of processing secure data through a TA after user authentication according to an embodiment of the disclosure.</p><p id="p-0141" num="0140">Referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, as shown in operation <b>810</b>, in a state <b>801</b> after user authentication (e.g., an unlock state), the electronic device <b>200</b> may execute the secure service application <b>212</b> operating in the first execution environment <b>201</b>.</p><p id="p-0142" num="0141">In operation <b>820</b>, the secure service application <b>212</b> may send a first signal requesting to store data (e.g., the secure data <b>253</b><i>a</i>) in the secure memory <b>253</b> to the secure processing application <b>232</b> operating in the second execution environment <b>202</b>. Operations of the secure service application <b>212</b>, secure processing application <b>232</b>, and access processing application <b>233</b> may be controlled by the processor <b>230</b>.</p><p id="p-0143" num="0142">In operation <b>830</b>, the secure processing application <b>232</b> may send to the access processing application <b>233</b> operating in the second execution environment <b>202</b> a second signal (or request message) including at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, and credential information. The type of the request may include read, write, or delete of data. The read of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is requested. The write of the data may indicate that data is stored in the secure memory <b>253</b>. The delete of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is delete. The service identifier may include information capable of identifying an owner of the requested secure data <b>253</b><i>a</i>. The slot information may include information indicating a location at which the secure data <b>253</b><i>a </i>is stored in the secure memory <b>253</b> (or a location at which the data is stored in the buffer included in the second execution environment <b>202</b>). The timestamp of the request may indicate a time at which the secure data <b>253</b><i>a </i>is requested. The credential information may include data (e.g., the secure data <b>253</b><i>a</i>) to be stored in the secure memory <b>253</b> when the type of the request is the write of the data.</p><p id="p-0144" num="0143">The access processing application <b>233</b> which has received the second signal (or request message) may verify whether the token stored in the buffer is present. In the absence of the token stored in the buffer, in operation <b>740</b>, the access processing application <b>233</b> may send the third signal (or decline message) declining the request for writing the data to the secure processing application <b>232</b>. In operation <b>870</b>, the secure processing application <b>232</b> which has received the third signal (or decline message) declining the request for writing the data may send to the secure service application <b>212</b> a fourth signal which notifies that the request for writing the data is declined. The secure service application <b>212</b> may output information indicating that the request for writing the data is declined through an interface, in response to the fourth signal. For example, the secure service application <b>212</b> may display a visual object indicating that the request for writing the data is declined on a display. As another example, the secure service application <b>212</b> may output a voice indicating that the request for writing the data is declined through a speaker. In the presence of the token in the buffer, the access processing application <b>233</b> may verify a valid duration (corresponding to the valid duration <b>259</b><i>b </i>stored in the third execution environment <b>203</b>) included in the token. When the valid duration is verified, the access processing application <b>233</b> may store the data in the buffer.</p><p id="p-0145" num="0144">In operation <b>840</b>, the access processing application <b>233</b> may send to the access control application <b>257</b> operating in the third execution environment <b>203</b> a fifth signal requesting to store the data, stored in the buffer, in the secure memory <b>253</b>. In operation <b>850</b>, the access control application <b>257</b> which has received the fifth signal requesting to store the data may store the data in the secure memory <b>253</b>. In addition, in operation <b>860</b>, the access control application <b>257</b> may send to the access processing application <b>233</b> a sixth signal (or result message) indicating a result of processing the storing of the data. The access processing application <b>233</b> which has received the sixth signal (or result message) indicating the result of processing the storing of the data may send the result of processing the storing of the data to the secure processing application <b>232</b>. Thereafter, in operation <b>870</b>, the secure processing application <b>232</b> may send a seventh signal which notifies the result of processing the storing of the data to the secure service application <b>212</b>. The secure service application <b>212</b> may output information including the result of processing the storing of the data through an interface, in response to the seventh signal. For example, the secure service application <b>212</b> may display a visual object including the result of processing the storing of the data on a display. As another example, the secure service application <b>212</b> may output a voice including the result of processing the storing of the data through a speaker.</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a drawing illustrating a method of operating an electronic device related to processing of secure data through an SA according to an embodiment of the disclosure.</p><p id="p-0147" num="0146">Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, in operation <b>910</b>, the secure processor <b>251</b> of the electronic device <b>200</b> may receive a signal (or request message) for requesting the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> from the processor <b>230</b> physically separated from the secure processor <b>251</b>. The signal may include at least one of a type of the request, a service identifier (e.g., a service name), slot information, a timestamp of the request, a random number, and credential information. The type of the request may include read, write, or delete of data. The read of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is requested. The write of the data may indicate that data is stored in the secure memory <b>253</b>. The delete of the data may indicate that the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> is delete. The service identifier may include information capable of identifying an owner of the requested secure data <b>253</b><i>a</i>. The slot information may include information indicating a location at which the secure data <b>253</b><i>a </i>is stored in the secure memory <b>253</b>. The timestamp of the request may indicate a time at which the secure data <b>253</b><i>a </i>is requested. The random number may be associated with information for avoiding retransmission of the same second signal (or request message). For example, the random number may be used to avoid retransmission of the second signal (or request message). The credential information may include data (e.g., the secure data <b>253</b><i>a</i>) to be stored in the secure memory <b>253</b> when the type of the request is the write of the data.</p><p id="p-0148" num="0147">In operation <b>920</b>, the secure processor <b>251</b> may attempt user authentication, in response to reception of the signal. The secure processor <b>251</b> may attempt the user authentication, based on the state information <b>259</b><i>a </i>of the electronic device <b>200</b>, stored in the third execution environment <b>203</b> provided by the secure processor <b>251</b>. When the state of the electronic device <b>200</b> is the lock state, the secure processor <b>251</b> may process the user authentication as a failure, based on the state information <b>259</b><i>a</i>. Alternatively, when the state of the electronic device <b>200</b> is the unlock state, the secure processor <b>251</b> may process the user authentication as a success, based on the state information <b>259</b><i>a</i>. According to an embodiment, when the user authentication fails, the secure processor <b>251</b> may send a signal indicating a failure of the user authentication to the processor <b>230</b>,</p><p id="p-0149" num="0148">When the user authentication succeeds, in operation <b>930</b>, the secure processor <b>251</b> may verify a valid duration for an access to the secure memory <b>253</b>. The secure processor <b>251</b> may verify the valid duration <b>259</b><i>b </i>for the access to the secure memory <b>253</b> stored in the third execution environment <b>203</b>. The valid duration <b>259</b><i>b </i>may include information on a time (e.g., a start time and an end (expiry) time) for which the access to the secure memory <b>253</b> is allowed. According to an embodiment, a secure timer for verifying the expiration of the valid duration for the access to the secure memory <b>253</b> may be included in the third execution environment <b>203</b>. For example, as a timer which is set from the start time to the end (expiry) time, the secure timer may notify the expiration of the valid duration to the secure processor <b>251</b> when it is the end (expiry) time.</p><p id="p-0150" num="0149">In operation <b>940</b>, the secure processor <b>251</b> may determine whether the access to the secure memory <b>253</b> is valid, based on the verified valid duration <b>259</b><i>b</i>. When the access to the secure memory <b>253</b> is not valid as the result of verifying the valid duration, the secure processor <b>251</b> may send a signal declining the request of the secure data <b>253</b><i>a </i>to the processor <b>230</b>. When the access to the secure memory <b>253</b> is valid as the result of verifying the valid duration, in operation <b>950</b>, the secure processor <b>251</b> may transfer the secure data <b>253</b><i>a </i>stored in the secure memory <b>253</b> to the processor <b>230</b>.</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a drawing illustrating a method of operating an electronic device related to processing of secure data through a TA according to an embodiment of the disclosure.</p><p id="p-0152" num="0151">Referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, in operation <b>1010</b>, the processor <b>230</b> of the electronic device <b>200</b> may obtain user authentication information through an interface provided by the user authentication framework <b>211</b>. For example, when the user inputs a pin number, a pattern, or a password through the interface, the processor <b>230</b> may obtain information (e.g., the pin number, the pattern, or the password) input from the user authentication framework <b>211</b>. In addition, in operation <b>1020</b>, the processor <b>230</b> may attempt the user authentication, based on the obtained information (e.g., the pin number, the pattern, or the password).</p><p id="p-0153" num="0152">According to an embodiment, when the user authentication fails, the processor <b>230</b> may output information for notifying that the user authentication has failed, through an interface provided by the user authentication framework <b>211</b>. For example, the processor <b>230</b> may display an object indicating the failure of the user authentication on the display.</p><p id="p-0154" num="0153">When the user authentication succeeds, in operation <b>1030</b>, the processor <b>230</b> may obtain the secure data <b>253</b><i>a </i>from the secure memory <b>253</b> included in the secure module <b>250</b> physically separated from the processor <b>230</b>. In addition, when the user authentication succeeds, the processor <b>230</b> may obtain a token including a valid duration for an access to the secure memory <b>253</b> and a key value for decoding the secure data <b>253</b><i>a</i>. For example, the token may include at least one of a User Identifier (UID), an authentication time, a valid duration, and signature information.</p><p id="p-0155" num="0154">In operation <b>1040</b>, the processor <b>230</b> may store the token and the key value in the buffer. In addition, the processor <b>230</b> may store the obtained secure data <b>253</b><i>a </i>in the buffer. For example, the processor <b>230</b> may store at least one of the token, the key value, and the obtained secure data <b>253</b><i>a </i>in the buffer. Herein, the buffer may be included in the second execution environment <b>202</b> provided by the processor <b>230</b>. The processor <b>230</b> may store at least one of the token, the obtained secure data <b>253</b><i>a</i>, and the key value through the TA <b>230</b><i>a </i>(e.g., the access processing application <b>233</b>) operating in the second execution environment <b>202</b>.</p><p id="p-0156" num="0155">In operation <b>1050</b>, the processor <b>230</b> may determine whether the valid duration included in the token expires. When the valid duration does not expire, the processor <b>230</b> may not delete (or initialize) the token and key value stored in the buffer. When the valid duration expires, in operation <b>1060</b>, the processor <b>230</b> may delete (or initialize) the token and key value stored in the buffer. For example, the processor <b>230</b> may control the access to the secure data <b>253</b><i>a </i>through the valid duration included in the token. In this case, when the valid duration expires, the token may be deleted (or initialized), so that validity for the access to the secure data <b>253</b> is determined rapidly by verifying only whether the token is present (or whether it is initialized). That is, in a state where the user does not use the electronic device <b>200</b> before the user authentication (e.g., a lock state) or a state where a specified time elapses after the user authentication (e.g., a state where the valid duration expires), the processor <b>230</b> may not transfer the secure data <b>253</b><i>a </i>stored in the buffer to the secure service application <b>212</b>.</p><p id="p-0157" num="0156">In a case where at least one of the token, the secure data <b>253</b><i>a</i>, and the key value is stored in the buffer included in the second execution environment <b>202</b>, when the secure service application <b>212</b> requests the secure data <b>253</b><i>a</i>, the processor <b>230</b> may transfer the secure data <b>253</b><i>a </i>stored in the buffer to the secure service application <b>212</b>, based on the valid duration included in the token stored in the buffer, instead of obtaining the secure data <b>253</b><i>a </i>from the secure memory <b>253</b>. Accordingly, advantageously, the electronic device <b>200</b> may satisfy a service requirement in which a fast response time is desired even in an environment of a low data transfer rate, without being limited to a hardware specification of the secure memory <b>253</b>. In addition, since the electronic device <b>200</b> stores the secure data <b>253</b><i>a </i>in the buffer included in the second execution environment <b>202</b>, advantageously, an access to the secure data <b>253</b><i>a </i>may be controlled at a security level higher than that of the first execution environment <b>201</b>.</p><p id="p-0158" num="0157">According to an embodiment, after the token and the key value are deleted from the buffer, the processor <b>230</b> may attempt the user authentication, based on the obtained information, when information (e.g., a pin number, a pattern, or a password) for the user authentication is obtained through the interface. In addition, when the user authentication succeeds, a token including a valid duration reconfigured for an access to the secure memory <b>253</b> and a key value for decoding the secure data <b>253</b><i>a </i>stored in the buffer may be stored in the buffer. For example, after the secure data <b>253</b><i>a </i>is obtained from the secure memory <b>253</b> and is stored in the buffer, when the token and the key value are deleted at the expiry of the valid duration the processor <b>230</b>, the processor <b>230</b> may store the token including the key value and the reconfigured valid duration again in the buffer. In this case, the processor <b>230</b> may skip the operation of obtaining the secure data <b>253</b><i>a </i>from the secure memory <b>253</b>.</p><p id="p-0159" num="0158">As described above, according to an embodiment, a method of processing secure data of an electronic device (e.g., the electronic device <b>200</b>) may include an operation (e.g., the operation <b>1010</b>) of obtaining user authentication information, an operation (e.g., the operation <b>1020</b>) of attempting the user authentication, based on the user authentication information, an operation (e.g., the operation <b>1030</b>) of obtaining the secure data (e.g., the secure data <b>253</b><i>a</i>) from a secure memory (e.g., the secure memory <b>253</b>) included in a secure module (e.g., the secure module <b>250</b>) physically separated from a processor (e.g., the processor <b>230</b>) of the electronic device, when the user authentication succeeds, an operation (e.g., the operation <b>1040</b>) of storing a first token including a first valid duration for an access to the secure memory, the obtained secure data, and a first key value for decoding the obtained secure data in a buffer, and an operation (e.g., the operation <b>1060</b>) of deleting the first token and the first key value from the buffer when the first valid duration expires.</p><p id="p-0160" num="0159">According to certain embodiments, the method of processing the secure data may further include verifying whether the first token is present in the buffer, upon receiving a signal requesting the secure data, and sending a signal declining the request for the secure data to the application when the first token is absent in the buffer.</p><p id="p-0161" num="0160">According to certain embodiments, the method of processing the secure data may further include verifying the first valid duration included in the first token when the first token is present in the buffer, decoding the secure data stored in the buffer by using the first key value, when the first valid duration is verified, and transferring the decoded secure data to the application.</p><p id="p-0162" num="0161">According to certain embodiments, the method of processing the secure data may further include, after the first token and the first key value are deleted from the buffer, obtaining user authentication information, attempting user authentication, based on the obtained user authentication information, and storing a second token including a second valid duration for an access to the secure memory and a second key value for decoding the secure data in the buffer, when the user authentication succeeds.</p><p id="p-0163" num="0162">According to certain embodiments, the method of processing the secure data may further include verifying whether the first token is present in the buffer upon receiving from the application a signal requesting to write data in the secure memory, and sending to the application a signal declining to store the data, when the first token is absent in the buffer.</p><p id="p-0164" num="0163">According to certain embodiments, the method of processing the secure data may further include verifying the first valid duration included in the first token, when the first token is present in the buffer, writing the data in the buffer, when the first valid duration is verified, and writing in the secure memory the data stored in the buffer.</p><p id="p-0165" num="0164">According to certain embodiments, the buffer may be included in a Trusted Execution Environment (TEE) (e.g., the second execution environment <b>202</b>) of a first security level provided by the processor. The secure memory may be included in a Secure Execution Environment (SEE) (e.g., the third execution environment <b>203</b>) of a second security level higher than the first security level provided by the secure processor.</p><p id="p-0166" num="0165">According to certain embodiments, the storing of the first token, the obtained secure data, and the first key value in the buffer may be performed through a Trusted Application (TA) (e.g., the TA <b>230</b><i>a</i>) operating in the TEE.</p><p id="p-0167" num="0166">The electronic device according to certain embodiments may be one of various types of electronic devices. The electronic devices may include, for example, a portable communication device (e.g., a smartphone), a computer device, a portable multimedia device, a portable medical device, a camera, a wearable device, or a home appliance. According to an embodiment of the disclosure, the electronic devices are not limited to those described above.</p><p id="p-0168" num="0167">It should be appreciated that certain embodiments of the present disclosure and the terms used therein are not intended to limit the technological features set forth herein to particular embodiments and include various changes, equivalents, or replacements for a corresponding embodiment. With regard to the description of the drawings, similar reference numerals may be used to refer to similar or related elements. It is to be understood that a singular form of a noun corresponding to an item may include one or more of the things, unless the relevant context clearly indicates otherwise. As used herein, each of such phrases as &#x201c;A or B,&#x201d; &#x201c;at least one of A and B,&#x201d; &#x201c;at least one of A or B,&#x201d; &#x201c;A, B, or C,&#x201d; &#x201c;at least one of A, B, and C,&#x201d; and &#x201c;at least one of A, B, or C,&#x201d; may include any one of, or all possible combinations of the items enumerated together in a corresponding one of the phrases. As used herein, such terms as &#x201c;1st&#x201d; and &#x201c;2nd,&#x201d; or &#x201c;first&#x201d; and &#x201c;second&#x201d; may be used to simply distinguish a corresponding component from another, and does not limit the components in other aspect (e.g., importance or order). It is to be understood that if an element (e.g., a first element) is referred to, with or without the term &#x201c;operatively&#x201d; or &#x201c;communicatively&#x201d;, as &#x201c;coupled with,&#x201d; &#x201c;coupled to,&#x201d; &#x201c;connected with,&#x201d; or &#x201c;connected to&#x201d; another element (e.g., a second element), it means that the element may be coupled with the other element directly (e.g., wiredly), wirelessly, or via a third element.</p><p id="p-0169" num="0168">As used in connection with certain embodiments of the disclosure, the term &#x201c;module&#x201d; may include a unit implemented in hardware, software, or firmware, and may interchangeably be used with other terms, for example, &#x201c;logic,&#x201d; &#x201c;logic block,&#x201d; &#x201c;part,&#x201d; or &#x201c;circuitry&#x201d;. A module may be a single integral component, or a minimum unit or part thereof, adapted to perform one or more functions. For example, The module may be implemented in a form of an application-specific integrated circuit (ASIC).</p><p id="p-0170" num="0169">Certain embodiments as set forth herein may be implemented as software (e.g., the program <b>140</b>) including one or more instructions that are stored in a storage medium (e.g., internal memory <b>136</b> or external memory <b>138</b>) that is readable by a machine (e.g., the electronic device <b>101</b>). For example, a processor (e.g., the processor <b>120</b>) of the machine (e.g., the electronic device <b>101</b>) may invoke at least one of the one or more instructions stored in the storage medium, and execute it, with or without using one or more other components under the control of the processor. This allows the machine to be operated to perform at least one function according to the at least one instruction invoked. The one or more instructions may include a code generated by a complier or a code executable by an interpreter. The machine-readable storage medium may be provided in the form of a non-transitory storage medium. Wherein, the term &#x201c;non-transitory&#x201d; simply means that the storage medium is a tangible device, and does not include a signal (e.g., an electromagnetic wave), but this term does not differentiate between where data is semi-permanently stored in the storage medium and where the data is temporarily stored in the storage medium.</p><p id="p-0171" num="0170">According to an embodiment, a method according to certain embodiments of the disclosure may be included and provided in a computer program product. The computer program product may be traded as a product between a seller and a buyer. The computer program product may be distributed in the form of a machine-readable storage medium (e.g., compact disc read only memory (CD-ROM)), or be distributed (e.g., downloaded or uploaded) online via an application store (e.g., PlayStore&#x2122;), or between two user devices (e.g., smart phones) directly. If distributed online, at least part of the computer program product may be temporarily generated or at least temporarily stored in the machine-readable storage medium, such as memory of the manufacturer's server, a server of the application store, or a relay server.</p><p id="p-0172" num="0171">According to certain embodiments, each component (e.g., a module or a program) of the above-described components may include a single entity or multiple entities, and some of the multiple entities may be separately disposed in different components. According to certain embodiments, one or more of the above-described components may be omitted, or one or more other components may be added. Alternatively or additionally, a plurality of components (e.g., modules or programs) may be integrated into a single component. In such a case, according to certain embodiments, the integrated component may still perform one or more functions of each of the plurality of components in the same or similar manner as they are performed by a corresponding one of the plurality of components before the integration. According to certain embodiments, operations performed by the module, the program, or another component may be carried out sequentially, in parallel, repeatedly, or heuristically, or one or more of the operations may be executed in a different order or omitted, or one or more other operations may be added.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An electronic device comprising:<claim-text>a memory storing an interface and an application;</claim-text><claim-text>a processor; and</claim-text><claim-text>a secure module physically separated from the processor and including a secure processor and a secure memory,</claim-text><claim-text>wherein the processor is configured to:</claim-text><claim-text>obtain user authentication information, through the interface;</claim-text><claim-text>attempt user authentication, based on the user authentication information;</claim-text><claim-text>obtain data stored in the secure memory when the user authentication succeeds;</claim-text><claim-text>store a first token including a first valid duration for an access to the secure memory, the obtained data, and a first key value for decoding the obtained data in a buffer; and</claim-text><claim-text>delete the first token and the first key value from the buffer when the first valid duration expires.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The electronic device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is configured to:<claim-text>verify whether the first token is present in the buffer, upon receiving a signal requesting the data stored in the secure memory from the application; and</claim-text><claim-text>send a signal declining the request for the data to the application when the buffer does not store the first token.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The electronic device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the processor is configured to:<claim-text>verify the first valid duration included in the first token when the first token is present in the buffer;</claim-text><claim-text>decode the data stored in the buffer by using the first key value, when the first valid duration is verified; and</claim-text><claim-text>transfer the decoded data to the application.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The electronic device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is configured to:<claim-text>after the first token and the first key value are deleted from the buffer, obtain user authentication information through the interface;</claim-text><claim-text>attempt user authentication, based on the obtained user authentication information; and</claim-text><claim-text>store a second token including a second valid duration for an access to the secure memory and a second key value for decoding the data in the buffer, when the attempted user authentication succeeds.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The electronic device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor is configured to:<claim-text>verify whether the first token is present in the buffer upon receiving a signal requesting to write data to the secure memory from the application; and</claim-text><claim-text>send a signal declining writing the data to the application, when the first token is absent in the buffer.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The electronic device of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the processor is configured to:<claim-text>verify the first valid duration included in the first token, when the first token is present in the buffer;</claim-text><claim-text>store the data in the buffer, when the first valid duration is verified; and</claim-text><claim-text>write the data stored in the buffer to the secure memory.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The electronic device of <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the buffer is included in a Trusted Execution Environment (TEE) of a first security level provided by the processor, and</claim-text><claim-text>wherein the secure memory is included in a Secure Execution Environment (SEE) of a second security level higher than the first security level provided by the secure processor.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The electronic device of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the first token, the obtained data, and the first key value are stored in the buffer through a Trusted Application (TA) operating in the TEE.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. An electronic device comprising:<claim-text>a memory storing an application;</claim-text><claim-text>a processor; and</claim-text><claim-text>a secure module physically separated from the processor and including a secure memory and a secure processor,</claim-text><claim-text>wherein the secure processor is configured to:</claim-text><claim-text>receive a signal requesting data stored in the secure memory from the processor;</claim-text><claim-text>attempt user authentication, in response to receiving of the signal;</claim-text><claim-text>verify a valid duration for an access to the secure memory when the user authentication succeeds;</claim-text><claim-text>send a signal declining a request for the data to the processor when the valid duration is not verified; and</claim-text><claim-text>send the data stored in the secure memory to the processor when the valid duration is verified.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The electronic device of <claim-ref idref="CLM-00009">claim 9</claim-ref>,<claim-text>wherein the processor provides a Trusted Execution Environment (TEE) of a first security level, and</claim-text><claim-text>wherein the secure memory is included in a Secure Execution Environment (SEE) of a second security level higher than the first security level.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The electronic device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the secure processor is configured to attempt the user authentication, based on information indicating a state of the electronic device, stored in the SEE.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The electronic device of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the attempting the user authentication and the verifying of the valid duration are performed through a Secure Application (SA) operating in the SEE.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A method of processing secure data of an electronic device, the method comprising:<claim-text>obtaining user authentication information;</claim-text><claim-text>attempting the user authentication, based on the user authentication information;</claim-text><claim-text>obtaining the secure data from a secure memory included in a secure module physically separated from a processor of the electronic device, when the user authentication succeeds;</claim-text><claim-text>storing a first token including a first valid duration for an access to the secure memory, the obtained secure data, and a first key value for decoding the obtained secure data in a buffer; and</claim-text><claim-text>deleting the first token and the first key value from the buffer when the first valid duration expires.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>verifying whether the first token is present in the buffer, upon receiving a signal requesting the secure data from an application; and</claim-text><claim-text>sending a signal declining the request for the secure data to the application when the first token is absent in the buffer.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:<claim-text>verifying the first valid duration included in the first token when the first token is present in the buffer;</claim-text><claim-text>decoding the secure data stored in the buffer by using the first key value, when the first valid duration is verified; and</claim-text><claim-text>transferring the decoded secure data to the application.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>after the first token and the first key value are deleted from the buffer, obtaining user authentication information;</claim-text><claim-text>attempting user authentication, based on the obtained user authentication information; and</claim-text><claim-text>storing a second token including a second valid duration for an access to the secure memory and a second key value for decoding the secure data in the buffer, when the user authentication succeeds.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>verifying whether the first token is present in the buffer upon receiving from an application a signal requesting to write data in the secure memory; and</claim-text><claim-text>sending to the application a signal declining to write the data, when the first token is absent in the buffer.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>verifying the first valid duration included in the first token, when the first token is present in the buffer;</claim-text><claim-text>writing the data in the buffer, when the first valid duration is verified; and</claim-text><claim-text>writing the data stored in the buffer to the secure memory.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>,<claim-text>wherein the buffer is included in a Trusted Execution Environment (TEE) of a first security level provided by the processor, and</claim-text><claim-text>wherein the secure memory is included in a Secure Execution Environment (SEE) of a second security level higher than the first security level provided by a secure processor.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the storing of the first token, the obtained secure data, and the first key value in the buffer is performed through a Trusted Application (TA) operating in the TEE.</claim-text></claim></claims></us-patent-application>