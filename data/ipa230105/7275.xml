<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007276A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007276</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17902938</doc-number><date>20220905</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>V</subclass><main-group>10</main-group><subgroup>25</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>167</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20220101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>V</subclass><main-group>10</main-group><subgroup>25</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Encoding Device and Method for Video Analysis and Composition</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/US2021/020848</doc-number><date>20210304</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17902938</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62985294</doc-number><date>20200304</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Videopura, LLC</orgname><address><city>Delray Beach</city><state>FL</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Adzic</last-name><first-name>Velibor</first-name><address><city>Canton</city><state>GA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><orgname>Videopura, LLC</orgname><role>02</role></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An encoding device for video analysis and composition includes circuitry configured to receive an input video having a first data volume, determine at least a region of interest of the input video, and encode at least an output video as a function of the input video and the at least a region of interest, wherein the at least an output video has at least a second data volume, and the at least a second data volume is less than the first data volume.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="64.18mm" wi="158.75mm" file="US20230007276A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="220.47mm" wi="106.34mm" orientation="landscape" file="US20230007276A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="214.46mm" wi="173.91mm" orientation="landscape" file="US20230007276A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="225.38mm" wi="168.99mm" orientation="landscape" file="US20230007276A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="217.17mm" wi="143.51mm" orientation="landscape" file="US20230007276A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="220.13mm" wi="126.75mm" orientation="landscape" file="US20230007276A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="102.19mm" wi="129.20mm" orientation="landscape" file="US20230007276A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="252.05mm" wi="180.85mm" orientation="landscape" file="US20230007276A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="240.28mm" wi="178.65mm" orientation="landscape" file="US20230007276A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="179.07mm" wi="162.98mm" orientation="landscape" file="US20230007276A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="223.10mm" wi="152.32mm" orientation="landscape" file="US20230007276A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="126.32mm" wi="164.51mm" orientation="landscape" file="US20230007276A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="200.83mm" wi="187.11mm" orientation="landscape" file="US20230007276A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of priority of U.S. Provisional Application Ser. No. 62/985,294, filed on Mar. 4, 2020, and entitled &#x201c;System for video analysis with a compositional encoder,&#x201d; which is incorporated by reference herein in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE INVENTION</heading><p id="p-0003" num="0002">The present invention generally relates to the field of video compression. In particular, the present invention is directed to encoding device and method for video analysis and composition.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Video capture and processing, particularly of large and complex phenomena such as sporting events, public speeches and ceremonies, or the like, suffers from a surfeit of information, forcing compromises between focus on key aspects of scenes to be captured at the expense of overall information content, or breadth at the expense of focus.</p><heading id="h-0004" level="1">SUMMARY OF THE DISCLOSURE</heading><p id="p-0005" num="0004">In an aspect, an encoding device for video analysis and composition includes circuitry configured to receive an input video having a first data volume, determine at least a region of interest of the input video, encode at least an output video as a function of the input video and the at least a region of interest, wherein the at least an output video has at least a second data volume and the at least a second data volume is less than the first data volume.</p><p id="p-0006" num="0005">In another aspect, a method of video analysis and composition includes receiving, by an encoding device, an input video having a first data volume, determining, by the encoding device, at least a region of interest of the input video and encoding, by the encoding device, at least an output video as a function of the input video and the at least a region of interest, wherein the at least an output video has at least a second data volume and the at least a second data volume is less than the first data volume.</p><p id="p-0007" num="0006">The details of one or more variations of the subject matter described herein are set forth in the accompanying drawings and the description below. Other features and advantages of the subject matter described herein will be apparent from the description and drawings, and from the claims.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">DESCRIPTION OF DRAWINGS</heading><p id="p-0008" num="0007">For the purpose of illustrating the invention, the drawings show aspects of one or more embodiments of the invention. However, it should be understood that the present invention is not limited to the precise arrangements and instrumentalities shown in the drawings, wherein:</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an exemplary embodiment of an encoding device for video analysis and composition;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating an exemplary embodiment of a system for video analysis and composition;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an exemplary embodiment of a system for video analysis and composition;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram illustrating a process of video analysis and composition;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram illustrating a process of video analysis and composition;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic diagram illustrating a process of video analysis and composition;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating an exemplary embodiment of a video;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a block diagram illustrating an exemplary embodiment of an encoder;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a block diagram illustrating an exemplary embodiment of a decoder;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating an exemplary embodiment of a machine-learning module;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a schematic diagram illustrating an exemplary embodiment of a neural network;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a schematic diagram illustrating an exemplary embodiment of a neural network node;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a flow diagram illustrating an exemplary method of and</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram of a computing system that can be used to implement any one or more of the methodologies disclosed herein and any one or more portions thereof.</p><p id="p-0023" num="0022">The drawings are not necessarily to scale and may be illustrated by phantom lines, diagrammatic representations, and fragmentary views. In certain instances, details that are not necessary for an understanding of the embodiments or that render other details difficult to perceive may have been omitted. Like reference symbols in the various drawings indicate like elements.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0024" num="0023">Presented in this disclosure is an encoding device for video processing that analyzes and encodes video to serve needs of distinct end users. System may include an input video analyzer and/or a video encoder that compose parts of analyzed input video into output videos <b>128</b> intended for end users. Regions of interest may be selected based on user or recipient device indications of needs, using intelligent programming, and/or through motion detection.</p><p id="p-0025" num="0024">Referring now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an exemplary embodiment of an encoding device <b>104</b> for video analysis and composition is illustrated. Encoding device <b>104</b> may be implemented using any digital electronic circuitry as described in this disclosure. Encoding device <b>104</b> may include any computing device as described in this disclosure, including without limitation a microcontroller, microprocessor, digital signal processor (DSP) and/or system on a chip (SoC) as described in this disclosure. Encoding device <b>104</b>, and/or any module and/or component thereof as described in further detail in this disclosure, may be configured by any form of hardware, software, or firmware configuration and/or manufacture, or any combination thereof. Encoding device <b>104</b> may include, be included in, and/or communicate with a mobile device such as a mobile telephone or smartphone. Encoding device <b>104</b> may include a single computing device operating independently, or may include two or more computing device operating in concert, in parallel, sequentially or the like; two or more computing devices may be included together in a single computing device or in two or more computing devices. Encoding device <b>104</b> may interface or communicate with one or more additional devices as described below in further detail via a network interface device. Network interface device may be utilized for connecting encoding device <b>104</b> to one or more of a variety of networks, and one or more devices. Examples of a network interface device include, but are not limited to, a network interface card (e.g., a mobile network interface card, a LAN card), a modem, and any combination thereof. Examples of a network include, but are not limited to, a wide area network (e.g., the Internet, an enterprise network), a local area network (e.g., a network associated with an office, a building, a campus or other relatively small geographic space), a telephone network, a data network associated with a telephone/voice provider (e.g., a mobile communications provider data and/or voice network), a direct connection between two computing devices, and any combinations thereof. A network may employ a wired and/or a wireless mode of communication. In general, any network topology may be used. Information (e.g., data, software etc.) may be communicated to and/or from a computer and/or a computing device. For example, encoding device <b>104</b> may include, without limitation, a computing device or cluster of computing devices in a first location and a second computing device or cluster of computing devices in a second location. Encoding device <b>104</b> may include one or more computing devices dedicated to data storage, security, distribution of traffic for load balancing, and the like. Encoding device <b>104</b> may distribute one or more computing tasks as described below across a plurality of computing devices of computing device, which may operate in parallel, in series, redundantly, or in any other manner used for distribution of tasks or memory between computing devices. Encoding device <b>104</b> may be implemented using a &#x201c;shared nothing&#x201d; architecture in which data is cached at the worker, in an embodiment, this may enable scalability of system <b>100</b> and/or computing device.</p><p id="p-0026" num="0025">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may be designed and/or configured to perform any method, method step, or sequence of method steps in any embodiment described in this disclosure, in any order and with any degree of repetition. For instance, encoding device <b>104</b> may be configured to perform a single step or sequence repeatedly until a desired or commanded outcome is achieved; repetition of a step or a sequence of steps may be performed iteratively and/or recursively using outputs of previous repetitions as inputs to subsequent repetitions, aggregating inputs and/or outputs of repetitions to produce an aggregate result, reduction or decrement of one or more variables such as global variables, and/or division of a larger processing task into a set of iteratively addressed smaller processing tasks. Encoding device <b>104</b> may perform any step or sequence of steps as described in this disclosure in parallel, such as simultaneously and/or substantially simultaneously performing a step two or more times using two or more parallel threads, processor cores, or the like; division of tasks between parallel threads and/or processes may be performed according to any protocol suitable for division of tasks between iterations. Persons skilled in the art, upon reviewing the entirety of this disclosure, will be aware of various ways in which steps, sequences of steps, processing tasks, and/or data may be subdivided, shared, or otherwise dealt with using iteration, recursion, and/or parallel processing.</p><p id="p-0027" num="0026">As a non-limiting example, and with further reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> and/or one or more modules and/or components thereof may be configured to accept input video <b>108</b>. This may be performed, without limitation, by an analyzer <b>112</b>, which may be implemented in any manner suitable for implementation of any computing device, module, and/or component of encoding device <b>104</b> as described above. Modules and/or components described as included in analyzer <b>112</b> are presented for exemplary purposes only; functions and/or structure pertaining to each such module and/or component may be implemented in any alternative or additional manner in encoding device <b>104</b> and/or any component, module, and/or device incorporated in or communicatively connected to encoding device <b>104</b>, in any manner that may occur to persons skilled in the art, upon reviewing the entirety of this disclosure.</p><p id="p-0028" num="0027">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, input video <b>108</b> may have any original source, including without limitation computer-generated video, animated video, and/or video captured by a recording device such as without limitation a video camera. Alternatively or additionally analyzer <b>112</b> and/or encoding device <b>104</b> may receive input video <b>108</b> as a stream and/or bitstream and decode the stream and/or bitstream into a video, for instance by parsing out video, audio and/or metadata sub-streams of the stream and/or bitstream. Decoding may be performed, without limitation, as described in further detail below.</p><p id="p-0029" num="0028">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, analyzer <b>112</b> and/or encoding device <b>104</b> may analyze components of the input stream, such as one or more video frames, audio tracks, subtitles, and/or any additional metadata that is present in the input stream and/or input video or obtained from an outside source of metadata information and/or feedback <b>116</b>; outside source may include an end user <b>120</b> and/or an end user device. One example of metadata may include without limitation an output of a day light sensor that can detect low light conditions. A non-limiting example of analysis may be a computer vision algorithm for object detection in received video frames that locates and identifies objects of interest and/or persons, for instance and without limitation using at least a neural network and/or machine learning model as described in further detail below. Another non-limiting example of analysis may include a computer vision algorithm that recognizes motion and can identify action that is conducted across the video frames, such as walking, running, explosions, or the like; identification may be performed by a neural network and/or machine-learning model as described below. Yet another non-limiting example of analysis may include a spectral analysis algorithm that analyzes audio track and identifies voice and conversation, for instance using a neural network and/or machine-learning model as described below. Yet another example of analysis may include a natural language processing algorithm that extracts portions of an input video associated with certain words and word constructions in a subtitle track.</p><p id="p-0030" num="0029">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, natural language analysis may be performed, without limitation, using a language processing module, which may be implemented on encoding device <b>104</b> and/or on another device in communication with encoding device <b>104</b>. Modules and/or components described as included in a language processing module are presented for exemplary purposes only; functions and/or structure pertaining to each such module and/or component may be implemented in any alternative or additional manner in encoding device <b>104</b> and/or any component, module, and/or device incorporated in or communicatively connected to encoding device <b>104</b>, in any manner that may occur to persons skilled in the art, upon reviewing the entirety of this disclosure. Language processing module may include any hardware and/or software module. Language processing module may be configured to extract, from the one or more documents, one or more words. One or more words may include, without limitation, strings of one or more characters, including without limitation any sequence or sequences of letters, numbers, punctuation, diacritic marks, engineering symbols, geometric dimensioning and tolerancing (GD&#x26;T) symbols, chemical symbols and formulas, spaces, whitespace, and other symbols, including any symbols usable as textual data as described above. Textual data may be parsed into tokens, which may include a simple word (sequence of letters separated by whitespace) or more generally a sequence of characters as described previously. The term &#x201c;token,&#x201d; as used herein, refers to any smaller, individual groupings of text from a larger source of text; tokens may be broken up by word, pair of words, sentence, or other delimitation. These tokens may in turn be parsed in various ways. Textual data may be parsed into words or sequences of words, which may be considered words as well. Textual data may be parsed into &#x201c;n-grams&#x201d;, where all sequences of n consecutive characters are considered. Any or all possible sequences of tokens or words may be stored as &#x201c;chains&#x201d;, for example for use as a Markov chain or Hidden Markov Model.</p><p id="p-0031" num="0030">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, language processing module may operate to produce a language processing model. Language processing model may include a program automatically generated by computing device and/or language processing module to produce associations between one or more words extracted from at least a document and detect associations, including without limitation mathematical associations, between such words. Associations between language elements, where language elements include for purposes herein extracted words, relationships of such categories to other such term may include, without limitation, mathematical associations, including without limitation statistical correlations between any language element and any other language element and/or language elements. Statistical correlations and/or mathematical associations may include probabilistic formulas or relationships indicating, for instance, a likelihood that a given extracted word indicates a given category of semantic meaning. As a further example, statistical correlations and/or mathematical associations may include probabilistic formulas or relationships indicating a positive and/or negative association between at least an extracted word and/or a given semantic meaning; positive or negative indication may include an indication that a given document is or is not indicating a category semantic meaning. Whether a phrase, sentence, word, or other textual element in a document or corpus of documents constitutes a positive or negative indicator may be determined, in an embodiment, by mathematical associations between detected words, comparisons to phrases and/or words indicating positive and/or negative indicators that are stored in memory at computing device, or the like.</p><p id="p-0032" num="0031">Still referring to <b>1</b>, language processing module and/or diagnostic engine may generate the language processing model by any suitable method, including without limitation a natural language processing classification algorithm; language processing model may include a natural language process classification model that enumerates and/or derives statistical relationships between input terms and output terms. Algorithm to generate language processing model may include a stochastic gradient descent algorithm, which may include a method that iteratively optimizes an objective function, such as an objective function representing a statistical estimation of relationships between terms, including relationships between input terms and output terms, in the form of a sum of relationships to be estimated. In an alternative or additional approach, sequential tokens may be modeled as chains, serving as the observations in a Hidden Markov Model (HMM). HMMs as used herein are statistical models with inference algorithms that that may be applied to the models. In such models, a hidden state to be estimated may include an association between an extracted words; phrases; and/or other semantic units. There may be a finite number of categories to which an extracted word may pertain; an HMM inference algorithm, such as the forward-backward algorithm or the Viterbi algorithm, may be used to estimate the most likely discrete state given a word or sequence of words, Language processing module may combine two or more approaches. For instance, and without limitation, machine-learning program may use a combination of Naive-Bayes (NB), Stochastic Gradient Descent (SGD), and parameter grid-searching classification techniques; the result may include a classification algorithm that returns ranked associations.</p><p id="p-0033" num="0032">Continuing to refer to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, generating language processing model may include generating a vector space, which may be a collection of vectors, defined as a set of mathematical objects that can be added together under an operation of addition following properties of associativity, commutativity, existence of an identity element, and existence of an inverse element for each vector, and can be multiplied by scalar values under an operation of scalar multiplication compatible with field multiplication, and that has an identity element is distributive with respect to vector addition, and is distributive with respect to field addition. Each vector in an n-dimensional vector space may be represented by an n-tuple of numerical values. Each unique extracted word and/or language element as described above may be represented by a vector of the vector space. In an embodiment, each unique extracted and/or other language element may be represented by a dimension of vector space; as a non-limiting example, each element of a vector may include a number representing an enumeration of co-occurrences of the word and/or language element represented by the vector with another word and/or language element. Vectors may be normalized, scaled according to relative frequencies of appearance and/or file sizes. In an embodiment associating language elements to one another as described above may include computing a degree of vector similarity between a vector representing each language element and a vector representing another language element; vector similarity may be measured according to any norm for proximity and/or similarity of two vectors, including without limitation cosine similarity, which measures the similarity of two vectors by evaluating the cosine of the angle between the vectors, which can be computed using a dot product of the two vectors divided by the lengths of the two vectors. Degree of similarity may include any other geometric measure of distance between vectors.</p><p id="p-0034" num="0033">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, language processing module may use a corpus of documents to generate associations between language elements in a language processing module, and diagnostic engine may then use such associations to analyze words extracted from one or more documents and determine that the one or more documents indicate significance of a category. In an embodiment, language module and/or encoding device may perform this analysis using a selected set of significant documents, such as documents identified by one or more experts as representing good information; experts may identify or enter such documents via graphical user interface, or may communicate identities of significant documents according to any other suitable method of electronic communication, or by providing such identity to other persons who may enter such identifications into encoding device <b>104</b>. Documents may be entered into a computing device by being uploaded by an expert or other persons using, without limitation, file transfer protocol (FTP) or other suitable methods for transmission and/or upload of documents; alternatively or additionally, where a document is identified by a citation, a uniform resource identifier (URI), uniform resource locator (URL) or other datum permitting unambiguous identification of the document, diagnostic engine may automatically obtain the document using such an identifier, for instance by submitting a request to a database or compendium of documents such as JSTOR as provided by Ithaka Harbors, Inc. of New York.</p><p id="p-0035" num="0034">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, yet another example of analysis may include a parsing algorithm that receives metadata from an end user and manipulates video according to desired effects, such as resizing, cropping, and/or change of encoding parameters according to the network conditions. A further non-limiting example of analysis may include a binning algorithm that bins adjacent pixels to improve the quality of image under lowlight conditions. Such lowlight conditions may be measured using a light and/or daylight sensor that can detect low light conditions. Depending on light conditions the system automatically adjusts the resolution of output video <b>128</b>. Under lowlight conditions, video resolution may be reduced by pixel binning to improve image and video quality. The amount of resolution reduction may be driven by a light level detected, with lower light levels producing a lower resolution output.</p><p id="p-0036" num="0035">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in a non-limiting a user may be watching video on his or her mobile phone or similar device. As user walks out of a low-light room into daylight resolution and dynamic range of video may change to keep the video watchable. Data describing exterior light levels may be sent automatically from the phone's light sensor in a process analogous to a process used when phones change brightness automatically. Inversely, when user transitions into a lower light environment a video may be modified to a lower resolution and dynamic range.</p><p id="p-0037" num="0036">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may adjust allocation of resources for a first type of services based on detection of a second type of services. For instance, where a user of a network including encoding device <b>104</b> and/or of encoding device <b>104</b> is using conversational services such as ZOOM conferencing as provided by Zoom Video Communications, Inc. of San Jose, Calif., which may be sensitive to bandwidth, encoder may provide to live streaming applications parameters to reduce bandwidth usage, for instance and without limitation by decreasing resolution, introducing buffering delays, or the like. As a further non-limiting example, encoding device <b>104</b> may modify resolution and/or otherwise adjust streaming settings based on signal strength of a device transmitting a video stream; signal strength of a user device may be detected by, e.g., encoding device <b>104</b>, a device incorporating or incorporated in encoding device <b>104</b>, a node connecting to user device, and/or user device itself, and a value representing signal strength may be recorded by and/or transmitted to encoding device <b>104</b>, which may vary one or more parameters of a video stream accordingly. Variation in signal strength or signal strength may be an indicator of network conditions, some of which may be predictive of loss rate in the network. Presence of other users sharing a network and/or services used by other users sharing the network may affect network conditions and may be used to adapt encoding parameters.</p><p id="p-0038" num="0037">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may adapt any encoding parameters described herein, including contrast, brightness, resolution, frame rate, or the like. Adjustment of coding parameters may further include cropping or otherwise limiting an output video to a region of interest; for instance, where encoding device <b>104</b> determines a region or regions of interest as described in this disclosure, encoding device may output a video containing just the determined region or regions of interest and excluding other portions to save bandwidth or otherwise mitigate effects of detected circumstances. Where network capacity and/or other parameters as described in this disclosure improve, encoding device <b>104</b> may reverse mitigating actions, such as by transmitting output video with a larger region of interest and/or not limited to a region of interest, increasing contrast, frame rate, and/or resolution, or the like.</p><p id="p-0039" num="0038">In an embodiment, and still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may be configured to accept an input video <b>108</b> having a first data volume and identify at least a region of interest in the input video <b>108</b>, where region of interest. A &#x201c;region of interest.&#x201d; as used in this disclosure, is a region of video having information relevant to a desired output video <b>128</b>. Region of interest may include a region having a high degree of motion. In other words, determining at least a region of interest may include detecting an area of motion in the input video and determining the at least a region of interest based on the area of motion. An area of motion may be detected by analysis of motion vectors, for instance and without limitation as determined in any encoding and/or encoder-related process as described in this disclosure. Encoding device <b>104</b> may compare a rate of motion indicated by motion vectors to a predefined threshold, where exceeding the predefined threshold may indicate that an area having a motion vector exceeding the predefined threshold is an area of motion. Predetermined threshold may be a constant defined and/or stored on or at encoding device <b>104</b>. Alternatively or additionally, encoding device may calculate predetermined threshold. Calculation of predetermined threshold may be performed by detecting an average, median, or other statistical or aggregate representation of a typical amount of motion in video frame, and then selecting a threshold that is some percentage and/or amount in excess thereof. Predetermined threshold may be case-specific; for instance, predetermined threshold may be set a first way for a first type of video, subject of video, and/or category of user instruction. As a non-limiting example, a threshold identifying an area of motion may be higher for an athletic event than for a seminar or conference. Degree, type, variation, or other attributes of motion may alternatively or additionally be parameters used for classification and/or other neural network and/or machine-learning processes and/or models for determination of regions of interest as described in further detail below.</p><p id="p-0040" num="0039">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, determining the at least a region of interest may include identifying at least a feature of interest in the input video and determining the at least a region of interest based on the at least a feature of interest. A &#x201c;feature of interest&#x201d; as used herein is a visual, audio, or other feature to be included in an output video <b>128</b>. At least a feature of interest may include at least an audio feature. At least a feature of interest may include at least visual feature, which may include any feature of displayed and/or picture data as described above. At least a feature of interest may include at least an element of metadata.</p><p id="p-0041" num="0040">Continuing to refer to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may be configured to identify the at least a feature of interest using at least a recipient input. For instance and without limitation, encoding device <b>104</b> may identify the at least a feature of interest by receiving at least a supervised annotation indicating the at least a feature of interest identifying the at least a feature of interest using the at least a supervised annotation. At least a recipient input may be received in the form of feedback</p><p id="p-0042" num="0041">Alternatively or additionally, and still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may identify the at least a feature of interest using a neural network. For example, and without limitation, a first neural network configuration may be used to detect faces in video, a second neural network configuration may be used to detect license plates in a video, a third neural network configuration may be used to produce a set of features used by other neural networks or applications, and a fourth neural network configuration may be used to detect backpacks and coats. A neural network configuration may fully specify a neural network. A neural network configuration may include all information necessary to process input data with that neural network.</p><p id="p-0043" num="0042">Encoding device <b>104</b> may use a machine-learning model, machine-learning process, and/or neural network, as described in further detail below, to perform above-described tasks and/or analysis. Machine-learning model parameters, machine-learning process parameters, neural network parameters, and/or neural network configuration may be received, as described above, as supplemental data; alternatively, encoding device <b>104</b> may train a machine-learning model, machine-learning process, and/or neural network using training data and/or algorithms, for instance and without limitation as described below.</p><p id="p-0044" num="0043">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, neural networks may be executed on hardware acceleration designed for neural networks. Encoding device <b>104</b> may have one or more hardware acceleration units to speed up execution of a neural network. In an embodiment, where a device has one hardware acceleration unit and selects one or more neural networks and/or neural network configurations to be executed on a single frame, video, element or collection of audio data, and/or element or collection of metadata, encoding device <b>104</b> may load and execute one neural network at a time. As a further non-limiting example, where encoding device <b>104</b> includes and/or has access to multiple hardware acceleration units, encoding device <b>104</b> may execute two or more neural networks concurrently through parallel processing. Encoding device <b>104</b> may assign a neural network to a hardware acceleration unit that may execute that neural network, where assignment may depend, without limitation, on a size of the neural network and/or a capacity of the hardware acceleration unit.</p><p id="p-0045" num="0044">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may be configured to receive an output bitstream recipient characteristic and select the neural network from a plurality of neural networks as a function of the output bitstream recipient characteristic. An &#x201c;output bitstream recipient characteristic,&#x201d; as used in this disclosure, is any information concerning features a recipient and/or recipient device may require, an application for which recipient device will use a bitstream and/or sub-stream, and/or any data from which encoding device <b>104</b> may determine such features and/or applications. Neural network may be selected, without limitation, by classification, retrieval from a database, or the like.</p><p id="p-0046" num="0045">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a spatial region label may be added for each region signaled in a bitstream. A &#x201c;spatial region label,&#x201d; as used in this disclosure, is a text descriptor such as without limitation &#x201c;face,&#x201d; &#x201c;car,&#x201d; &#x201c;foreground,&#x201d; &#x201c;background,&#x201d; or the like. A spatial region label may be signaled once in picture header or a header common for a group of frames such as a sequence header or sequence parameter set. Encoding device <b>104</b> may alternatively or additionally signal at block and/or spatial region level to indicate one or more labels contained in such blocks and/or spatial regions. Encoding device <b>104</b> may signal if a given frame includes a feature of interest; for instance, encoding device <b>104</b> may signal if a frame includes a face, skin, a vehicle, or the like. Encoding device <b>104</b> may signal and/or indicate semantics information in a frame, where semantics information may describe objects and/or relationships among objects. For instance, and without limitation, a scene may have objects such as a sofa, a television, a desk, or the like, and may be semantically described as a living room and/or an indoor scene. Different levels of semantics may be used to describe different aspects of a scene and/or picture; for example, one level of semantics may describe an overall scene, while another may describe a region and/or detail of the scene, and the like. Content analysis that is performed ahead of or as a part of video compression may identify spatial region labels as described above. Division into sub-streams may include detection of signals of regions and/or temporal regions of interest or the like by encoding device <b>104</b> as described above, and/or by a receiving device based on signaling from encoding device <b>104</b>, and identifying sub-stream as containing a required and/or otherwise specified feature and/or set of features. Encoding device may alternatively identify a region of exclusion, identified as a region containing a feature to be excluded from a bitstream and/or sub-stream to be transmitted, for instance for reasons of privacy and/or security.</p><p id="p-0047" num="0046">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may be configured to signal regions and/or blocks of interest and/or exclusion by signaling features in video blocks. For instance, and without limitation, encoding device <b>104</b> may include a datum in a bitstream and/or sub-stream indicating a block start code, an offset to a block position as identified by pixels from a corner and/or other reference point and/or origin of a frame, or the like. This may allow for quick access to block leveldata without decoding prior blocks. Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each non-overlapping block of a video frame may be divided into sub-blocks using a known method such as quad tree block partitioning. Blocks and/or sub-blocks may be sub-divided until sub-blocks have similar spatial characteristics. Traditional video encoding such as H.264 and H.265 uses block-based coding where blocks are typically coded in a raster scan order (leftto right and top-to-bottom). During decoding blocks may be decoded in order. This means decodingblock N of a video slice may require decoding all blocks before block N. Extracting data that corresponds to block N may thus require parsing all prior blocks and decoding block N may not be possible without decoding blocks 1 to N-1. For example, an application that requires only block N still may have to process all the blocks before N. A flexible bitstream that allows access to blocks, using block signaling, may be advantageous.</p><p id="p-0048" num="0047">Start code such as 32-bit start codes as used in MPEG-2video may be used. Block header may include without limitation the following elements: (1) block type; (2) region identifier, (3) privacy flag; (4) coding type; (5) motion data; (6) texture data; and/or (7) color data.</p><p id="p-0049" num="0048">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, block type may signal a type of information in an instant block. A fixed character number block type field, such as a four-character block type field, may be used to signal different types of blocks. This field may be used to signal semantics of block contents. For example, block type may signal that the block is part of a face by setting a block type value to FACE. A set of pre-defined block types may be defined to capture a set of commonly found objects. Table 1, below, lists exemplary block types that may be employed in a non-limiting, exemplary embodiment:</p><p id="p-0050" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="98pt" align="left"/><colspec colname="2" colwidth="91pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>Object</entry><entry>Block type code</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>Human face</entry><entry>FACE</entry></row><row><entry/><entry>Fruit</entry><entry>FRUT</entry></row><row><entry/><entry>Motor vehicle</entry><entry>AUTO</entry></row><row><entry/><entry>User defined object</entry><entry>UDEF</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0051" num="0049">When object type is user defined type (UDEF), it may be followed by a unique 128-bit object type. A value such as the Globally Unique Identifier (GUID) may be used to avoid name conflicts across services.</p><p id="p-0052" num="0050">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in videos where a frame is partitioned into multiple spatial regions, a region identifier included in a block header may a spatial region a corresponding block belongs to. Region identifier may not be used in videos where spatial regions are not used.</p><p id="p-0053" num="0051">With further reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, block coding type may signal information needed and/or useful for decoding a block. Block coding type may include without limitation inter, intra, and/or independent. Inter blocks may information from previously decoded frames to more efficiently represent information in a current block. Intra blocks may use information from previously decoded blocks in the current frame to more efficiently represent information in the current block. A block type of &#x2018;independent&#x2019; signals that a corresponding block does not use information from other blocks and is to be independently decoded.</p><p id="p-0054" num="0052">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, motion data of a block may include motion information such as motion vectors, optical flow, or the like. Local and/or global motion may be included in motion vector data. Motion data may include translational motion or affine motion data.</p><p id="p-0055" num="0053">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, Texture Data may represent a texture of a block. A transform such as the DCT may be used to represent texture. In such cases, texture may be compressed more efficiently using compression techniques such as intra block prediction.</p><p id="p-0056" num="0054">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, color data may represent a color of a block. A method such as a color histogram may be used to represent color of a block. In some cases, where a block has single color, a more efficient way may be to signal the color components of that specific color. For example, RGB color representation may be used to represent color. Other color formats are possible, as may occur to persons skilled in the art upon reviewing the entirety of this disclosure.</p><p id="p-0057" num="0055">Continuing to refer to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, identification of a region, block, and/or set of blocks of interest may include identification of a region having a given type of motion data. For instance, and without limitation, a region, block, and/or set of blocks having a given type or element motion data may be signaled in a bitstream, enabling decoding of just those regions, blocks, and/or sets of blocks. Including a way to separate motion data without decoding the bitstream allows for fast extraction of sub-bitstreams. Specifying motion data size, in blocks, pixels, or other measurements, allows extracting only motion data in block and discarding texture data for specific applications. Similarly, texture data size may allow fast extraction of texture data bitstream. Alternatively, unique start codes for block motion data and block texture data may be used.</p><p id="p-0058" num="0056">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a block may have user defined features; such features may be signaled using a header that identifies user defined features, feature size, and feature data. Block level identification of such data may allow easy extraction of specific feature data as a sub bitstream. User defined features may include features that are input to neural networks at a receiver. Multiple neural networks may be trained with each network producing decisions that the network is trained on. Neural networks may use all or a subset of features computed from an edge device. Examples of neural networks include any neural networks as described in this disclosure, including without limitation convolutional neural networks, auto encoders, adversarial GNN, and multi-layer neural networks.</p><p id="p-0059" num="0057">With further reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device and/or analyzer may be configured to determine at least a scaling parameter for the spatial region. As used in this disclosure, a &#x201c;scaling parameter&#x201d; is a parameter dictating a change in height, width, and/or overall area of a frame or set of frames in a video. Scaling parameter may, for instance, include a number of pixels of height and/or width, a factor with which a current height and/or width is to be multiplied to obtain a new height and/or width, or the like. In an embodiment, a scaling parameter may be received from end user and/or a device operated thereby. Alternatively or additionally, end user <b>120</b> and/or end user device may transmit a screen size and/or picture size of a video to be viewed, which encoding device may use to determine scaling parameter. Alternatively or additionally, rescaling may be triggered by video content; for instance video may be rescaled to show a larger view and/or more details of a smaller or cropped area &#x201c;zoom in&#x201d; on a detected face, localized area of motion, and/or smaller region of interest as determined in any manner described in this disclosure, or may rescale to show a larger area to &#x201c;zoom out&#x201d; when a fast motion is detected and/or when detected region and/or regions of interest cover a larger portion of video area. Rescaling may be performed with or without resolution change.</p><p id="p-0060" num="0058">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in an embodiment, encoding device <b>104</b> may be configured to identify one or more temporal regions, such as without limitation one or more temporal regions of interest, in a video. A &#x201c;temporal region,&#x201d; as used in this disclosure, is a regions spanning time; a temporal region may include one or more frames and/or groups of pictures. Example of temporal regions may include without limitation scenes. Temporal regions may describe actions in a video over a period of time. For example, and without limitation, a temporal region may include a scene where a dog is chasing a ball; subsequent scene, which may be a different temporal region, may cut away from the dog and show the dog owner calling the dog.</p><p id="p-0061" num="0059">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, each temporal region may have different content and/or compression characteristics from each other temporal region. Content within a temporal region may not change much. There may be cases such as a scene where camera panning over a crowd at a stadium where boundaries of temporal regions are not clear and/or scene contents change within a temporal region. In an embodiment, encoding device <b>104</b> may identify temporal regions and/or boundaries therebetween by identifying temporal regions, such as sequences of frames, groups of pictures, or the like, containing one or more features of interest. For instance, and without limitation, where encoding device <b>104</b> has received an indication that human faces are features of interest, a sequence of frames containing human faces and/or a sequence of frames containing a specific human face of interest may be identified as a temporal region, and boundaries thereof may be frames that do not contain human faces and/or a specific human face of interest. Any feature of interest as described above, including audio features, motion, types of motion, or the like may be used to identify a temporal region of interest. A group of frames may be considered a temporal region when the frames have same contextual content. Temporal region may be defined by a single action, such as without limitation a person speaking, a person standing up, a person throwing a punch, or the like.</p><p id="p-0062" num="0060">In an embodiment, and still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may be configured to signal a temporal region change. Some applications as described above may need only a sub-stream that has one key frame from a temporal region; for instance, an application counting temporal regions and/or features that temporal regions contain may only need one representative picture per temporal region. Alternatively or additionally, boundaries of temporal regions, such as temporal regions of videos without natural temporal region boundaries, such as surveillance video, live camera monitoring traffic, or the like, may be created at fixed intervals for instance and without limitation every 2 seconds, every 10 seconds, or the like. Temporal region duration selected for an application may take into account how content changes in video and select a time that is expected to keep region contents largely the same. Temporal region duration may, for instance, be set to a period within video in which motion, semantics information, regions of interest, metadata, and/or other detected and/or classified attributes remain within a threshold degree of similarity. Encoding device <b>104</b> may adaptively increase and decrease length of temporal regions based on activity measures, for instance by decreasing an interval whenever a change is detected and then slowly increasing the interval over time until a subsequent detection of change, for instance and without limitation as determined by detection of a change in video attributes exceeding some threshold.</p><p id="p-0063" num="0061">Alternatively or additionally, and with further reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may identify and/or signal temporal regions and/or boundaries thereof with absolute and/or real time; for instance, user instruction and/or instruction from a remote device may identify time period of interest, such as from 11 AM to 11:15 AM on Nov. 27, 2019. As a non-limiting example, in applications such as video surveillance, event time may have significance. Embedding real world time at temporal region boundaries, as identified for instance as described above, may allow applications to process regions relative to real world time.</p><p id="p-0064" num="0062">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a temporal region label may be added for each region signaled in a bitstream and/or sub-stream. Label may include a text descriptor, such as &#x201c;running,&#x201d; &#x201c;interview,&#x201d; or the like. A temporal region label may be signaled once in group of pictures header or a header common for a group of frames such as a sequence header or sequence parameter set. Alternatively or additionally, encoding device <b>104</b> may signal temporal regions at a block and/or spatial region level. Encoding device <b>104</b> may signal if a frame and/or temporal region contains a feature of interest such as without limitation a face, a skin, a vehicle, or the like. Content analysis that is performed ahead of or as a part of video compression may identify temporal region labels.</p><p id="p-0065" num="0063">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the encoding device <b>104</b> may be configured to determine at least a speed parameter of the temporal region. A speed parameter may indicate a playback speed of a temporal region. As a non-limiting example, temporal regions without activity may be sped up, permitting efficient video summarization. More generally, a speed parameter may be specified as a playback coefficient ranging from 0 to N, where values from 0 to 1 would slow down playback and values from 1 to N would speed it up, for instance by multiplying input framerate by the playback coefficient. In an embodiment, encoding device may &#x201c;speed up&#x201d; a temporal region by dropping frames and/or slow down a temporal region by reintroducing and/or not dropping frames; additional frames may be introduced for a slower speed by, for instance, interpolation and/or upsampling to generate luma and/or chroma values for newly introduced intervening frames. Speed parameter may permit video summarization, whereby temporal regions of interest may be played more slowly while temporal regions that are not of interest may be &#x201c;fast forwarded&#x201d; or otherwise more rapidly traversed.</p><p id="p-0066" num="0064">Continuing to refer to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> and/or analyzer <b>112</b> may select a plurality of regions of interest. For instance, and without limitation, at least a region of interest may include a first region of interest and a second region of interest.</p><p id="p-0067" num="0065">Still referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoding device <b>104</b> may include an encoder <b>124</b>, which may be implemented in any manner suitable for implementation of any computing device, module, and/or component of encoding device <b>104</b> as described above. Modules and/or components described as included in encoder <b>124</b> are presented for exemplary purposes only; functions and/or structure pertaining to each such module and/or component may be implemented in any alternative or additional manner in encoding device <b>104</b> and/or any component, module, and/or device incorporated in or communicatively connected to encoding device <b>104</b>, in any manner that may occur to persons skilled in the art, upon reviewing the entirety of this disclosure.</p><p id="p-0068" num="0066">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoder <b>124</b> may include a component that receives, from analyzer, annotations of input video along with encoding parameters. Annotations may be related to the spatial and/or the temporal domain. Examples of annotations in the spatial domain are coordinates of the region of interest of input video to be encoded; scaling parameters for video resizing; areas of input video that need to be obfuscated. Examples of annotations in the temporal domain are timestamps of portions of the input video that need to be encoded; timestamps of actions within the video that need to be encoded with the specified speed parameters; timestamps of the audio streams that need to be encoded. Once portions of input video that to be encoded are identified the encoder <b>124</b> may encoding parameters for each of the portions. Examples of encoder <b>124</b> parameters may include quantization levels for the portion of video; scaling parameters for frame resizing; framerates for temporal video portions.</p><p id="p-0069" num="0067">Further referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, encoder <b>124</b> is configured to encode at least an output video <b>128</b> as a function of the input video and the at least a region of interest. At least an output video <b>128</b> may have at least a second data volume, and the at least a second data volume is less than the first data volume; in other words at least an output video <b>128</b> may contain a strict subset of data from the at least an input video encoding the at least an output video <b>128</b> may include encoding a first output video <b>128</b> based on a first region of interest and encoding a second output video <b>128</b> based on a second region of interest. Alternatively, a first region of interest may be combined with a second region of interest; for instance, a first region of interest may be displayed simultaneously with a second region of interest in a single frame or may share frames for a series of frames. Alternatively or additionally, where a first region of interest is temporal and a second region of interest is temporal, the regions may be combined in series. Where a regions are both temporal and spatial, they may be combined spatially in some frames and not in others; a video may, for instance, combine two regions together at some moments, alternate between them at other moments, and/or show one or the other exclusively. Persons skilled in the art, upon reviewing the entirety of this disclosure, will be aware of various ways in which different regions of interest may be combined in a single video. Once output video <b>128</b> is encoded, it may be transmitted to one or more end users.</p><p id="p-0070" num="0068">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, an exemplary process flow using encoding device <b>104</b> is illustrated. In an embodiment, encoding device receives input video, which may be received in any manner described above. For instance, and without limitation, encoding device may be, be included in, and/or include a video source, where a &#x201c;video source&#x201d; is a device that captures and/or produces input video <b>108</b>. One or more different variants <b>204</b><i>a</i>-<i>b </i>of the video may then distributed to end users over a network <b>208</b>, which may include without limitation the Internet. In an embodiment, one video output may be distributed to one or multiple users. Each output video <b>128</b> need not be similar to any other output video <b>128</b>. Input video may be analyzed based on end user information that is either stored or received end user in real time. Each end user may receive a most suitable output video <b>128</b> as a result of identification of features as described above.</p><p id="p-0071" num="0069">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, in an exemplary embodiment, encoding device <b>104</b> may be implemented at an arbitrary network node between an origin as described above and an end user. One or many of such nodes including an encoding device <b>104</b> as described in this disclosure may be distributed in the network. Each such node may receive input video from origin and process, generate output video <b>128</b>, encode output video <b>128</b>, and/or send output video <b>128</b> to one or more end users.</p><p id="p-0072" num="0070">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an exemplary embodiment of a process of compositional encoding is illustrated. In an embodiment, input video <b>108</b> may include a very high-resolution stream that shows an entire field at a sports event, such as a baseball game. Encoding device <b>104</b> and/or analyzer <b>112</b> may detect action and identify region of interest (ROI) <b>404</b> where the most intense action is happening. This region may alternatively be identified by end user feedback in the form of a metadata, or in any other manner described above. Once coordinates of the region are annotated, this information may be forwarded to encoder <b>124</b>; encoder <b>124</b> and/or encoding device <b>104</b> may encode just ROI portion for output, reducing input resolution (W&#xd7;H) to a reduced resolution such as quarter resolution (W/4&#xd7;H/4). One example is an input video <b>108</b> of &#x201c;8K&#x201d; resolution (7680&#xd7;4320 pixels), with the output video <b>128</b> of the &#x201c;HD&#x201d; resolution (1920&#xd7;1080 pixels). There may be multiple ROI, which may be transformed to multiple output videos <b>128</b> as illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0073" num="0071">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a further non-limiting example of an embodiment of video composition is provided. Input video <b>108</b> may include a stream showing a lecture hall, conference room, or the like with a presenter and a presentation. Encoding device <b>104</b> and/or analyzer may detect a person, such as without limitation a lecturer or presenter, and an area that changes in time, such as a presentation, slideshow and/or projector screen or the like, hence identifying two regions of interest ROI <b>1</b> and ROI. Alternatively or additionally, information may be obtained from end user feedback in the form of a metadata, or otherwise determined as described above. Analyzer may pass to encoder <b>124</b> coordinates of ROI <b>1</b> and ROI <b>2</b> together with spatial layout information. Encoder <b>124</b> and/or encoding device <b>104</b> may produce output video <b>128</b> by composing and/or combining two ROIs. Note that one or more ROIs that may be used to compose output video <b>128</b> might not fit exactly a rectangle of specified resolution. In such cases, areas outside of ROIs may be filled with pixel values that optimize encoding performance. For example, an area around an ROI may be filled with pixels with same values as ROI background or filled with pixel values that produce best compression on their own.</p><p id="p-0074" num="0072">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, an additional exemplary embodiment of video composition is illustrated. Input video <b>108</b> may include a stream presenting two separate scenes. For example, on a left side may be field reporter for a TV station, while on the left may be a studio feed with anchors. Analyzer may detect different scenes and/or receive such information via metadata or otherwise determine scenes as ROI as described above. Analyzer may detect voices based on input audio streams and assign voice identifiers to left and right portions of video. Based on when reporter or anchors are speaking, output video <b>128</b> may be composed of either left or right region of input video <b>108</b>. For example, in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, output stream may be composed and encoded as a right region at time T<sub>1</sub>, while it may be composed and encoded as left region starting at time T<sub>2</sub>. There may be other examples that represent combination of previous examples and obvious extensions of previous examples. Any combination of one or more spatial and temporal regions and timestamps may be viewed as within the scope of this disclosure.</p><p id="p-0075" num="0073">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, embodiments described in this disclosure may involve implementation and/or performance of one or more processes of video compression. As used in this disclosure, video compression is a process for removing redundancy and compressing a video <b>704</b>. Video compression methods may use motion compensation to reduce temporal redundancy, transform coding to reduce spatial redundancy, and entropy coding methods such as variable length coding and/or binary arithmetic coding to reduce statistical redundancies in symbols/parameters produced by motion compensation and/or transform coding. In a typical video compression system, a frame <b>708</b> of a video may be divided into non-overlapping blocks and each block may undergo motion compensation and/or transform coding followed by entropy coding. A transform coding stage may reduce spatial redundancies and may essentially be characterized as encoding texture in video. A quantization stage may follow transform coding where transform coefficients may be quantized into fewer levels. A quantization stage may add loss and/or distortion to transform coefficients. A similar quantization process may also be used to quantize motion information (e.g., motion vectors) and include information at various levels of accuracy. Motion vectors and transform coefficients may be coded with different levels of quantization.</p><p id="p-0076" num="0074">Still referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a video <b>704</b> may be made up of a plurality of frames <b>708</b>. Each frame may be encoded as an optional set of spatial regions <b>712</b>. A spatial region <b>712</b> may be an entire frame. When a frame is divided into more than one spatial region, region identifiers may be used at block level to signal spatial regions to which a block <b>716</b> belongs. Each block <b>716</b> may be a non-overlapping set of pixels; that is, pixels of one block may not overlap with other blocks in a given characterization and/or division of a video. Blocks may have any shape including without limitation a rectangular shape. A block <b>716</b> may be sub-divided into smaller sub-blocks. Each of sub-blocks may be further sub-divided into smaller sub-blocks. One reason for such sub-division may be to identify blocks that belong to a single spatial region or identify blocks where all pixels of a block <b>716</b> have the same or similar feature such as motion, luminance, or color. Another reason for such partition may be to achieve a more efficient representation that reduces bits required for the representation. Outputs of neural networks, machine-learning models, and/or machine-learning processes may identify blocks, sub-blocks, and/or other units of video data corresponding to and/or containing features.</p><p id="p-0077" num="0075"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a system block diagram illustrating an exemplary embodiment of a video encoder <b>800</b>, which may include and/or be included in encoder <b>124</b>, capable of constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list. Example video encoder <b>800</b> may receive an input video <b>804</b>, which may be initially segmented or dividing according to a processing scheme, such as a tree-structured macro block partitioning scheme (e.g., quad-tree plus binary tree). An example of a tree-structured macro block partitioning scheme may include partitioning a picture frame into large block elements called coding tree units (CTU). In some implementations, each CTU may be further partitioned one or more times into a number of sub-blocks called coding units (CU). A final result of this portioning may include a group of sub-blocks that may be called predictive units (PU). Transform units (TU) may also be utilized.</p><p id="p-0078" num="0076">Still referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, example video encoder <b>800</b> may include an intra prediction processor <b>808</b>, a motion estimation/compensation processor <b>812</b>, which may also be referred to as an inter prediction processor, capable of constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list, a transform/quantization processor <b>816</b>, an inverse quantization/inverse transform processor <b>820</b>, an in-loop filter <b>824</b>, a decoded picture buffer <b>828</b>, and/or an entropy coding processor <b>832</b>. Bit stream parameters may be input to the entropy coding processor <b>832</b> for inclusion in the output bit stream <b>836</b>.</p><p id="p-0079" num="0077">In operation, and with continued reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, for each block of a frame of input video <b>804</b>, whether to process block via intra picture prediction or using motion estimation/compensation may be determined. Block may be provided to intra prediction processor <b>808</b> or motion estimation/compensation processor <b>812</b>. If block is to be processed via intra prediction, intra prediction processor <b>808</b> may perform processing to output a predictor. If block is to be processed via motion estimation/compensation, motion estimation/compensation processor <b>812</b> may perform processing including constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list, if applicable.</p><p id="p-0080" num="0078">Further referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a residual may be formed by subtracting a predictor from input video <b>108</b>. Residual may be received by transform/quantization processor <b>816</b>, which may perform transformation processing (e.g., discrete cosine transform (DCT)) to produce coefficients, which may be quantized. Quantized coefficients and any associated signaling information may be provided to entropy coding processor <b>832</b> for entropy encoding and inclusion in output bit stream <b>836</b>. Entropy encoding processor <b>832</b> may support encoding of signaling information related to encoding a current block. In addition, quantized coefficients may be provided to inverse quantization/inverse transformation processor <b>820</b>, which may reproduce pixels, which may be combined with a predictor and processed by in loop filter <b>824</b>, an output of which may be stored in decoded picture buffer <b>828</b> for use by motion estimation/compensation processor <b>812</b> that is capable of constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list.</p><p id="p-0081" num="0079">With continued reference to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, although a few variations have been described in detail above, other modifications or additions are possible. For example, in some implementations, current blocks may include any symmetric blocks (8&#xd7;8, 16&#xd7;16, 32&#xd7;32, 64&#xd7;64, 128&#xd7;128, and the like) as well as any asymmetric block (8&#xd7;4, 16&#xd7;8, and the like).</p><p id="p-0082" num="0080">In some implementations, and still referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a quadtree plus binary decision tree (QTBT) may be implemented. In QTBT, at a Coding Tree Unit level, partition parameters of QTBT may be dynamically derived to adapt to local characteristics without transmitting any overhead. Subsequently, at a Coding unit level, a joint-classifier decision tree structure may eliminate unnecessary iterations and control the risk of false prediction. In some implementations, LTR frame block update mode may be available as an additional option available at every leaf node of QTBT.</p><p id="p-0083" num="0081">In some implementations, and still referring to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, additional syntax elements may be signaled at different hierarchy levels of bitstream. For example, a flag may be enabled for an entire sequence by including an enable flag coded in a Sequence Parameter Set (SPS). Further, a CTU flag may be coded at a coding tree unit (CTU) level.</p><p id="p-0084" num="0082"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a system block diagram illustrating an example decoder <b>900</b> capable of decoding a bitstream <b>928</b> by at least constructing a motion vector candidate list including adding a global motion vector candidate to the motion vector candidate list. Decoder <b>900</b> may include an entropy decoder processor <b>904</b>, an inverse quantization and inverse transformation processor <b>908</b>, a deblocking filter <b>912</b>, a frame buffer <b>916</b>, a motion compensation processor <b>920</b> and/or an intra prediction processor <b>924</b>.</p><p id="p-0085" num="0083">In operation, and still referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, bit stream <b>928</b> may be received by decoder <b>900</b> and input to entropy decoder processor <b>904</b>, which may entropy decode portions of bit stream into quantized coefficients. Quantized coefficients may be provided to inverse quantization and inverse transformation processor <b>908</b>, which may perform inverse quantization and inverse transformation to create a residual signal, which may be added to an output of motion compensation processor <b>920</b> or intra prediction processor <b>924</b> according to a processing mode. An output of the motion compensation processor <b>920</b> and intra prediction processor <b>924</b> may include a block prediction based on a previously decoded block. A sum of prediction and residual may be processed by deblocking filter <b>912</b> and stored in a frame buffer <b>916</b>.</p><p id="p-0086" num="0084">Referring now to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, an exemplary embodiment of a machine-learning module <b>1000</b> that may perform one or more machine-learning processes as described in this disclosure is illustrated. Machine-learning module may perform determinations, classification, and/or analysis steps, methods, processes, or the like as described in this disclosure using machine learning processes. A &#x201c;machine learning process,&#x201d; as used in this disclosure, is a process that automatedly uses training data <b>1004</b> to generate an algorithm that will be performed by a computing device/module to produce outputs <b>1008</b> given data provided as inputs <b>1012</b>; this is in contrast to a non-machine learning software program where the commands to be executed are determined in advance by a user and written in a programming language.</p><p id="p-0087" num="0085">Still referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, &#x201c;training data,&#x201d; as used herein, is data containing correlations that a machine-learning process may use to model relationships between two or more categories of data elements. For instance, and without limitation, training data <b>1004</b> may include a plurality of data entries, each entry representing a set of data elements that were recorded, received, and/or generated together; data elements may be correlated by shared existence in a given data entry, by proximity in a given data entry, or the like. Multiple data entries in training data <b>1004</b> may evince one or more trends in correlations between categories of data elements; for instance, and without limitation, a higher value of a first data element belonging to a first category of data element may tend to correlate to a higher value of a second data element belonging to a second category of data element, indicating a possible proportional or other mathematical relationship linking values belonging to the two categories. Multiple categories of data elements may be related in training data <b>1004</b> according to various correlations; correlations may indicate causative and/or predictive links between categories of data elements, which may be modeled as relationships such as mathematical relationships by machine-learning processes as described in further detail below. Training data <b>1004</b> may be formatted and/or organized by categories of data elements, for instance by associating data elements with one or more descriptors corresponding to categories of data elements. As a non-limiting example, training data <b>1004</b> may include data entered in standardized forms by persons or processes, such that entry of a given data element in a given field in a form may be mapped to one or more descriptors of categories. Elements in training data <b>1004</b> may be linked to descriptors of categories by tags, tokens, or other data elements; for instance, and without limitation, training data <b>1004</b> may be provided in fixed-length formats, formats linking positions of data to categories such as comma-separated value (CSV) formats and/or self-describing formats such as extensible markup language (XML), JavaScript Object Notation (JSON), or the like, enabling processes or devices to detect categories of data.</p><p id="p-0088" num="0086">Alternatively or additionally, and continuing to refer to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, training data <b>1004</b> may include one or more elements that are not categorized; that is, training data <b>1004</b> may not be formatted or contain descriptors for some elements of data. Machine-learning algorithms and/or other processes may sort training data <b>1004</b> according to one or more categorizations using, for instance, natural language processing algorithms, tokenization, detection of correlated values in raw data and the like; categories may be generated using correlation and/or other processing algorithms. As a non-limiting example, in a corpus of text, phrases making up a number &#x201c;n&#x201d; of compound words, such as nouns modified by other nouns, may be identified according to a statistically significant prevalence of n-grams containing such words in a particular order; such an n-gram may be categorized as an element of language such as a &#x201c;word&#x201d; to be tracked similarly to single words, generating a new category as a result of statistical analysis. Similarly, in a data entry including some textual data, a person's name may be identified by reference to a list, dictionary, or other compendium of terms, permitting ad-hoc categorization by machine-learning algorithms, and/or automated association of data in the data entry with descriptors or into a given format. The ability to categorize data entries automatedly may enable the same training data <b>1004</b> to be made applicable for two or more distinct machine-learning algorithms as described in further detail below. Training data <b>1004</b> used by machine-learning module <b>1000</b> may correlate any input data as described in this disclosure to any output data as described in this disclosure.</p><p id="p-0089" num="0087">Further referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, training data may be filtered, sorted, and/or selected using one or more supervised and/or unsupervised machine-learning processes and/or models as described in further detail below; such models may include without limitation a training data classifier <b>1016</b>. Training data classifier <b>1016</b> may include a &#x201c;classifier,&#x201d; which as used in this disclosure is a machine-learning model as defined below, such as a mathematical model, neural net, or program generated by a machine learning algorithm known as a &#x201c;classification algorithm,&#x201d; as described in further detail below, that sorts inputs into categories or bins of data, outputting the categories or bins of data and/or labels associated therewith. A classifier may be configured to output at least a datum that labels or otherwise identifies a set of data that are clustered together, found to be close under a distance metric as described below, or the like. Machine-learning module <b>1000</b> may generate a classifier using a classification algorithm, defined as a processes whereby a computing device and/or any module and/or component operating thereon derives a classifier from training data <b>1004</b>. Classification may be performed using, without limitation, linear classifiers such as without limitation logistic regression and/or naive Bayes classifiers, nearest neighbor classifiers such as k-nearest neighbors classifiers, support vector machines, least squares support vector machines, fisher's linear discriminant, quadratic classifiers, decision trees, boosted trees, random forest classifiers, learning vector quantization, and/or neural network-based classifiers.</p><p id="p-0090" num="0088">Still referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, machine-learning module <b>1000</b> may be configured to perform a lazy-learning process <b>1020</b> and/or protocol, which may alternatively be referred to as a &#x201c;lazy loading&#x201d; or &#x201c;call-when-needed&#x201d; process and/or protocol, may be a process whereby machine learning is conducted upon receipt of an input to be converted to an output, by combining the input and training set to derive the algorithm to be used to produce the output on demand. For instance, an initial set of simulations may be performed to cover an initial heuristic and/or &#x201c;first guess&#x201d; at an output and/or relationship. As a non-limiting example, an initial heuristic may include a ranking of associations between inputs and elements of training data <b>1004</b>. Heuristic may include selecting some number of highest-ranking associations and/or training data <b>1004</b> elements. Lazy learning may implement any suitable lazy learning algorithm, including without limitation a K-nearest neighbors algorithm, a lazy na&#xef;ve Bayes algorithm, or the like; persons skilled in the art, upon reviewing the entirety of this disclosure, will be aware of various lazy-learning algorithms that may be applied to generate outputs as described in this disclosure, including without limitation lazy learning applications of machine-learning algorithms as described in further detail below.</p><p id="p-0091" num="0089">Alternatively or additionally, and with continued reference to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, machine-learning processes as described in this disclosure may be used to generate machine-learning models <b>1024</b>. A &#x201c;machine-learning model,&#x201d; as used in this disclosure, is a mathematical and/or algorithmic representation of a relationship between inputs and outputs, as generated using any machine-learning process including without limitation any process as described above and stored in memory; an input is submitted to a machine-learning model <b>1024</b> once created, which generates an output based on the relationship that was derived. For instance, and without limitation, a linear regression model, generated using a linear regression algorithm, may compute a linear combination of input data using coefficients derived during machine-learning processes to calculate an output datum. As a further non-limiting example, a machine-learning model <b>1024</b> may be generated by creating an artificial neural network, such as a convolutional neural network comprising an input layer of nodes, one or more intermediate layers, and an output layer of nodes. Connections between nodes may be created via the process of &#x201c;training&#x201d; the network, in which elements from a training data <b>1004</b> set are applied to the input nodes, a suitable training algorithm (such as Levenberg-Marquardt, conjugate gradient, simulated annealing, or other algorithms) is then used to adjust the connections and weights between nodes in adjacent layers of the neural network to produce the desired values at the output nodes. This process is sometimes referred to as deep learning.</p><p id="p-0092" num="0090">Still referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, machine-learning algorithms may include at least a supervised machine-learning process <b>1028</b>. At least a supervised machine-learning process <b>1028</b>, as defined herein, include algorithms that receive a training set relating a number of inputs to a number of outputs, and seek to find one or more mathematical relations relating inputs to outputs, where each of the one or more mathematical relations is optimal according to some criterion specified to the algorithm using some scoring function. For instance, a supervised learning algorithm may include inputs as described in this disclosure as inputs, outputs as described in this disclosure as outputs, and a scoring function representing a desired form of relationship to be detected between inputs and outputs; scoring function may, for instance, seek to maximize the probability that a given input and/or combination of elements inputs is associated with a given output to minimize the probability that a given input is not associated with a given output. Scoring function may be expressed as a risk function representing an &#x201c;expected loss&#x201d; of an algorithm relating inputs to outputs, where loss is computed as an error function representing a degree to which a prediction generated by the relation is incorrect when compared to a given input-output pair provided in training data <b>1004</b>. Persons skilled in the art, upon reviewing the entirety of this disclosure, will be aware of various possible variations of at least a supervised machine-learning process <b>1028</b> that may be used to determine relation between inputs and outputs. Supervised machine-learning processes may include classification algorithms as defined above.</p><p id="p-0093" num="0091">Further referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, machine learning processes may include at least an unsupervised machine-learning processes <b>1032</b>. An unsupervised machine-learning process, as used herein, is a process that derives inferences in datasets without regard to labels; as a result, an unsupervised machine-learning process may be free to discover any structure, relationship, and/or correlation provided in the data. Unsupervised processes may not require a response variable; unsupervised processes may be used to find interesting patterns and/or inferences between variables, to determine a degree of correlation between two or more variables, or the like.</p><p id="p-0094" num="0092">Still referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, machine-learning module <b>1000</b> may be designed and configured to create a machine-learning model <b>1024</b> using techniques for development of linear regression models. Linear regression models may include ordinary least squares regression, which aims to minimize the square of the difference between predicted outcomes and actual outcomes according to an appropriate norm for measuring such a difference (e.g. a vector-space distance norm); coefficients of the resulting linear equation may be modified to improve minimization. Linear regression models may include ridge regression methods, where the function to be minimized includes the least-squares function plus term multiplying the square of each coefficient by a scalar amount to penalize large coefficients. Linear regression models may include least absolute shrinkage and selection operator (LASSO) models, in which ridge regression is combined with multiplying the least-squares term by a factor of 1 divided by double the number of samples. Linear regression models may include a multi-task lasso model wherein the norm applied in the least-squares term of the lasso model is the Frobenius norm amounting to the square root of the sum of squares of all terms. Linear regression models may include the elastic net model, a multi-task elastic net model, a least angle regression model, a LARS lasso model, an orthogonal matching pursuit model, a Bayesian regression model, a logistic regression model, a stochastic gradient descent model, a perceptron model, a passive aggressive algorithm, a robustness regression model, a Huber regression model, or any other suitable model that may occur to persons skilled in the art upon reviewing the entirety of this disclosure. Linear regression models may be generalized in an embodiment to polynomial regression models, whereby a polynomial equation (e.g. a quadratic, cubic or higher-order equation) providing a best predicted output/actual output fit is sought; similar methods to those described above may be applied to minimize error functions, as will be apparent to persons skilled in the art upon reviewing the entirety of this disclosure.</p><p id="p-0095" num="0093">Continuing to refer to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, machine-learning algorithms may include, without limitation, linear discriminant analysis. Machine-learning algorithm may include quadratic discriminate analysis. Machine-learning algorithms may include kernel ridge regression. Machine-learning algorithms may include support vector machines, including without limitation support vector classification-based regression processes. Machine-learning algorithms may include stochastic gradient descent algorithms, including classification and regression algorithms based on stochastic gradient descent. Machine-learning algorithms may include nearest neighbors algorithms. Machine-learning algorithms may include Gaussian processes such as Gaussian Process Regression. Machine-learning algorithms may include cross-decomposition algorithms, including partial least squares and/or canonical correlation analysis. Machine-learning algorithms may include na&#xef;ve Bayes methods. Machine-learning algorithms may include algorithms based on decision trees, such as decision tree classification or regression algorithms. Machine-learning algorithms may include ensemble methods such as bagging meta-estimator, forest of randomized tress, AdaBoost, gradient tree boosting, and/or voting classifier methods. Machine-learning algorithms may include neural net algorithms, including convolutional neural net processes.</p><p id="p-0096" num="0094">Referring now to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, an exemplary embodiment of neural network <b>1100</b> is illustrated. Neural network <b>1100</b>, also known as an artificial neural network, is a network of &#x201c;nodes,&#x201d; or data structures having one or more inputs, one or more outputs, and a function determining outputs based on inputs. Such nodes may be organized in a network, such as without limitation a convolutional neural network, including an input layer <b>1104</b> of nodes, one or more intermediate <b>1108</b> layers, and an output layer <b>1112</b> of nodes. Connections between nodes may be created via the process of &#x201c;training&#x201d; the network, in which elements from a training dataset are applied to the input nodes, a suitable training algorithm (such as Levenberg-Marquardt, conjugate gradient, simulated annealing, or other algorithms) is then used to adjust the connections and weights between nodes in adjacent layers of the neural network to produce the desired values at the output nodes. This process is sometimes referred to as deep learning.</p><p id="p-0097" num="0095">Referring now to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, an exemplary embodiment <b>1600</b> of a node of a neural network is illustrated. A node may include, without limitation a plurality of inputs x<sub>i </sub>that may receive numerical values from inputs to a neural network containing the node and/or from other nodes. Node may perform a weighted sum of inputs using weights w<sub>i </sub>that are multiplied by respective inputs x<sub>i</sub>. Additionally or alternatively, a bias b may be added to the weighted sum of the inputs such that an offset is added to each unit in the neural network layer that is independent of the input to the layer. The weighted sum may then be input into a function &#x3c6;, which may generate one or more outputs y. Weight w<sub>i </sub>applied to an input x<sub>i </sub>may indicate whether the input is &#x201c;excitatory,&#x201d; indicating that it has strong influence on the one or more outputs y, for instance by the corresponding weight having a large numerical value, and/or a &#x201c;inhibitory,&#x201d; indicating it has a weak effect influence on the one more inputs y, for instance by the corresponding weight having a small numerical value. The values of weights w<sub>i </sub>may be determined by training a neural network using training data, which may be performed using any suitable process as described above.</p><p id="p-0098" num="0096">Still referring to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, a neural network may receive semantic units as inputs and output vectors representing such semantic units according to weights w<sub>i </sub>that are derived using machine-learning processes as described in this disclosure.</p><p id="p-0099" num="0097">Referring now to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, an exemplary embodiment of a method <b>1305</b> of video analysis and composition is illustrated. At step <b>1305</b>, an encoding device receives an input video having a first data volume; this may be implemented, without limitation as described above in reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>12</b></figref>.</p><p id="p-0100" num="0098">At step <b>1310</b>, and still referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, encoding device determines at least a region of interest of input video; this may be implemented, without limitation, as described above in reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>12</b></figref>. In an embodiment, determining at least a region of interest may include detecting an area of motion in the input video and determining the at least a region of interest based on the area of motion. Determining at least a region of interest may include identifying at least a feature of interest in the input video and determining the at least a region of interest based on the at least a feature of interest. Identifying at least a feature of interest may include identifying the at least a feature of interest using a neural network. Identifying at least a feature of interest may include identifying the at least a feature of interest using at least a recipient input. At least a region of interest may include a spatial region of input video. Encoding device may determine at least a scaling parameter for the spatial region. At least a region of interest may include a temporal region of the input video. Encoding device may determine at least a speed parameter of the temporal region.</p><p id="p-0101" num="0099">At step <b>1315</b>, and continuing to refer to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, encoding device encodes at least an output video <b>128</b> as a function of the input video and the at least a region of interest; this may be implemented, without limitation, as described above in reference to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>12</b></figref>. At least an output video US may have at least a second data volume. At least a second data volume may be less than the first data volume. Encoding at least an output video <b>128</b> may include encoding a first output video <b>128</b> based on first region of interest and encoding a second output video <b>128</b> based on second region of interest.</p><p id="p-0102" num="0100">It is to be noted that any one or more of the aspects and embodiments described herein may be conveniently implemented using digital electronic circuitry, integrated circuitry, specially designed application specific integrated circuits (ASICs), field programmable gate arrays (FPGAs) computer hardware, firmware, software, and/or combinations thereof, as realized and/or implemented in one or more machines (e.g., one or more computing devices that are utilized as a user computing device for an electronic document, one or more server devices, such as a document server, etc.) programmed according to the teachings of the present specification, as will be apparent to those of ordinary skill in the computer art. These various aspects or features may include implementation in one or more computer programs and/or software that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device. Appropriate software coding may readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those of ordinary skill in the software art. Aspects and implementations discussed above employing software and/or software modules may also include appropriate hardware for assisting in the implementation of the machine executable instructions of the software and/or software module.</p><p id="p-0103" num="0101">Such software may be a computer program product that employs a machine-readable storage medium. A machine-readable storage medium may be any medium that is capable of storing and/or encoding a sequence of instructions for execution by a machine (e.g., a computing device) and that causes the machine to perform any one of the methodologies and/or embodiments described herein. Examples of a machine-readable storage medium include, but are not limited to, a magnetic disk, an optical disc (e.g., CD, CD-R, DVD, DVD-R, etc.), a magneto-optical disk, a read-only memory &#x201c;ROM&#x201d; device, a random-access memory &#x201c;RAM&#x201d; device, a magnetic card, an optical card, a solid-state memory device, an EPROM, an EEPROM, Programmable Logic Devices (PLDs), and/or any combinations thereof. A machine-readable medium, as used herein, is intended to include a single medium as well as a collection of physically separate media, such as, for example, a collection of compact discs or one or more hard disk drives in combination with a computer memory. As used herein, a machine-readable storage medium does not include transitory forms of signal transmission.</p><p id="p-0104" num="0102">Such software may also include information (e.g., data) carried as a data signal on a data carrier, such as a carrier wave. For example, machine-executable information may be included as a data-carrying signal embodied in a data carrier in which the signal encodes a sequence of instruction, or portion thereof, for execution by a machine (e.g., a computing device) and any related information (e.g., data structures and data) that causes the machine to perform any one of the methodologies and/or embodiments described herein.</p><p id="p-0105" num="0103">Examples of a computing device include, but are not limited to, an electronic book reading device, a computer workstation, a terminal computer, a server computer, a handheld device (e.g., a tablet computer, a smartphone, etc.), a web appliance, a network router, a network switch, a network bridge, any machine capable of executing a sequence of instructions that specify an action to be taken by that machine, and any combinations thereof. In one example, a computing device may include and/or be included in a kiosk.</p><p id="p-0106" num="0104"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows a diagrammatic representation of one embodiment of a computing device in the exemplary form of a computer system <b>1400</b> within which a set of instructions for causing a control system to perform any one or more of the aspects and/or methodologies of the present disclosure may be executed. It is also contemplated that multiple computing devices may be utilized to implement a specially configured set of instructions for causing one or more of the devices to perform any one or more of the aspects and/or methodologies of the present disclosure. Computer system <b>1400</b> includes a processor <b>1404</b> and a memory <b>1408</b> that communicate with each other, and with other components, via a bus <b>1412</b>. Bus <b>1412</b> may include any of several types of bus structures including, but not limited to, a memory bus, a memory controller, a peripheral bus, a local bus, and any combinations thereof, using any of a variety of bus architectures.</p><p id="p-0107" num="0105">Memory <b>1408</b> may include various components (e.g., machine-readable media) including, but not limited to, a random-access memory component, a read only component, and any combinations thereof. In one example, a basic input/output system <b>1416</b> (BIOS), including basic routines that help to transfer information between elements within computer system <b>1400</b>, such as during start-up, may be stored in memory <b>1408</b>. Memory <b>1408</b> may also include (e.g., stored on one or more machine-readable media) instructions (e.g., software) <b>1420</b> embodying any one or more of the aspects and/or methodologies of the present disclosure. In another example, memory <b>1408</b> may further include any number of program modules including, but not limited to, an operating system, one or more application programs, other program modules, program data, and any combinations thereof.</p><p id="p-0108" num="0106">Computer system <b>1400</b> may also include a storage device <b>1424</b>. Examples of a storage device (e.g., storage device <b>1424</b>) include, but are not limited to, a hard disk drive, a magnetic disk drive, an optical disc drive in combination with an optical medium, a solid-state memory device, and any combinations thereof. Storage device <b>1424</b> may be connected to bus <b>1412</b> by an appropriate interface (not shown). Example interfaces include, but are not limited to, SCSI, advanced technology attachment (ATA), serial ATA, universal serial bus (USB), IEEE <b>1394</b> (FIREWIRE), and any combinations thereof. In one example, storage device <b>1424</b> (or one or more components thereof) may be removably interfaced with computer system <b>1400</b> (e.g., via an external port connector (not shown)). Particularly, storage device <b>1424</b> and an associated machine-readable medium <b>1428</b> may provide nonvolatile and/or volatile storage of machine-readable instructions, data structures, program modules, and/or other data for computer system <b>1400</b>. In one example, software <b>1420</b> may reside, completely or partially, within machine-readable medium <b>1428</b>. In another example, software <b>1420</b> may reside, completely or partially, within processor <b>1404</b>.</p><p id="p-0109" num="0107">Computer system <b>1400</b> may also include an input device <b>1432</b>. In one example, a user of computer system <b>1400</b> may enter commands and/or other information into computer system <b>1400</b> via input device <b>1432</b>. Examples of an input device <b>1432</b> include, but are not limited to, an alpha-numeric input device (e.g., a keyboard), a pointing device, a joystick, a gamepad, an audio input device (e.g., a microphone, a voice response system, etc.), a cursor control device (e.g., a mouse), a touchpad, an optical scanner, a video capture device (e.g., a still camera, a video camera), a touchscreen, and any combinations thereof. Input device <b>1432</b> may be interfaced to bus <b>1412</b> via any of a variety of interfaces (not shown) including, but not limited to, a serial interface, a parallel interface, a game port, a USB interface, a FIREWIRE interface, a direct interface to bus <b>1412</b>, and any combinations thereof. Input device <b>1432</b> may include a touch screen interface that may be a part of or separate from display <b>1436</b>, discussed further below. Input device <b>1432</b> may be utilized as a user selection device for selecting one or more graphical representations in a graphical interface as described above.</p><p id="p-0110" num="0108">A user may also input commands and/or other information to computer system <b>1400</b> via storage device <b>1424</b> (e.g., a removable disk drive, a flash drive, etc.) and/or network interface device <b>1440</b>. A network interface device, such as network interface device <b>1440</b>, may be utilized for connecting computer system <b>1400</b> to one or more of a variety of networks, such as network <b>1444</b>, and one or more remote devices <b>1448</b> connected thereto. Examples of a network interface device include, but are not limited to, a network interface card (e.g., a mobile network interface card, a LAN card), a modem, and any combination thereof. Examples of a network include, but are not limited to, a wide area network (e.g., the Internet, an enterprise network), a local area network (e.g., a network associated with an office, a building, a campus or other relatively small geographic space), a telephone network, a data network associated with a telephone/voice provider (e.g., a mobile communications provider data and/or voice network), a direct connection between two computing devices, and any combinations thereof. A network, such as network <b>1444</b>, may employ a wired and/or a wireless mode of communication. In general, any network topology may be used. Information (e.g., data, software <b>1420</b>, etc.) may be communicated to and/or from computer system <b>1400</b> via network interface device <b>1440</b>.</p><p id="p-0111" num="0109">Computer system <b>1400</b> may further include a video display adapter <b>1452</b> for communicating a displayable image to a display device, such as display device <b>1436</b>. Examples of a display device include, but are not limited to, a liquid crystal display (LCD), a cathode ray tube (CRT), a plasma display, a light emitting diode (LED) display, and any combinations thereof. Display adapter <b>1452</b> and display device <b>1436</b> may be utilized in combination with processor <b>1404</b> to provide graphical representations of aspects of the present disclosure. In addition to a display device, computer system <b>1400</b> may include one or more other peripheral output devices including, but not limited to, an audio speaker, a printer, and any combinations thereof. Such peripheral output devices may be connected to bus <b>1412</b> via a peripheral interface <b>1456</b>. Examples of a peripheral interface include, but are not limited to, a serial port, a USB connection, a FIREWIRE connection, a parallel connection, and any combinations thereof.</p><p id="p-0112" num="0110">The foregoing has been a detailed description of illustrative embodiments of the invention. Various modifications and additions can be made without departing from the spirit and scope of this invention. Features of each of the various embodiments described above may be combined with features of other described embodiments as appropriate in order to provide a multiplicity of feature combinations in associated new embodiments. Furthermore, while the foregoing describes a number of separate embodiments, what has been described herein is merely illustrative of the application of the principles of the present invention. Additionally, although particular methods herein may be illustrated and/or described as being performed in a specific order, the ordering is highly variable within ordinary skill to achieve embodiments as disclosed herein. Accordingly, this description is meant to be taken only by way of example, and not to otherwise limit the scope of this invention.</p><p id="p-0113" num="0111">In the descriptions above and in the claims, phrases such as &#x201c;at least one of&#x201d; or &#x201c;one or more of&#x201d; may occur followed by a conjunctive list of elements or features. The term &#x201c;and/or&#x201d; may also occur in a list of two or more elements or features. Unless otherwise implicitly or explicitly contradicted by the context in which it is used, such a phrase is intended to mean any of the listed elements or features individually or any of the recited elements or features in combination with any of the other recited elements or features. For example, the phrases &#x201c;at least one of A and B;&#x201d; &#x201c;one or more of A and B;&#x201d; and &#x201c;A and/or B&#x201d; are each intended to mean &#x201c;A alone, B alone, or A and B together.&#x201d; A similar interpretation is also intended for lists including three or more items. For example, the phrases &#x201c;at least one of A, B, and C;&#x201d; &#x201c;one or more of A, B, and C;&#x201d; and &#x201c;A, B, and/or C&#x201d; are each intended to mean &#x201c;A alone, B alone, C alone, A and B together, A and C together, B and C together, or A and B and C together.&#x201d; In addition, use of the term &#x201c;based on,&#x201d; above and in the claims is intended to mean, &#x201c;based at least in part on,&#x201d; such that an unrecited feature or element is also permissible.</p><p id="p-0114" num="0112">The subject matter described herein can be embodied in systems, apparatus, methods, and/or articles depending on the desired configuration. The implementations set forth in the foregoing description do not represent all implementations consistent with the subject matter described herein. Instead, they are merely some examples consistent with aspects related to the described subject matter. Although a few variations have been described in detail above, other modifications or additions are possible. In particular, further features and/or variations can be provided in addition to those set forth herein. For example, the implementations described above can be directed to various combinations and sub-combinations of the disclosed features and/or combinations and sub-combinations of several further features disclosed above. In addition, the logic flows depicted in the accompanying figures and/or described herein do not necessarily require the particular order shown, or sequential order, to achieve desirable results. Other implementations may be within the scope of the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An encoding device for video analysis and composition, the encoding device comprising circuitry configured to:<claim-text>receive an input video having a first data volume;</claim-text><claim-text>determine at least a region of interest of the input video; and</claim-text><claim-text>encode at least an output video as a function of the input video and t at least a region of<claim-text>interest, wherein:</claim-text><claim-text>the at least an output video has at least a second data volume; and</claim-text><claim-text>the at least a second data volume is less than the first data volume.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The encoding device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the at least a region of interest further comprises:<claim-text>detecting an area of motion in the input video; and</claim-text><claim-text>determining the at least a region of interest based on the area of motion.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The encoding device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the at least a region of interest further comprises:<claim-text>identifying at least a feature of interest in the input video; and</claim-text><claim-text>determining the at least a region of interest based on the at least a feature of interest.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The encoding device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further configured to identify the at least a feature of interest using a neural network.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The encoding device of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further configured to identify the at least a feature of interest using at least a recipient input.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The encoding device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least a region of interest further comprises a spatial region of the input video.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The encoding device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further configured to determine at least a scaling parameter for the spatial region.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The encoding device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least a region of interest further comprises a temporal region of the input video.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The encoding device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further configured to determine at least a speed parameter of the temporal region.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The encoding device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the at least a region of interest further comprises a first region of interest and a second region of interest; and</claim-text><claim-text>encoding the at least an output video further comprises:<claim-text>encoding a first output video based on the first region of interest; and</claim-text><claim-text>encoding a second output video based on the second region of interest.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method of video analysis and composition, the method comprising:<claim-text>receiving, by an encoding device, an input video having a first data volume;</claim-text><claim-text>determining, by the encoding device, at least a region of interest of the input video; and</claim-text><claim-text>encoding, by the encoding device, at least an output video as a function of the input video<claim-text>and the at least a region of interest, wherein:</claim-text><claim-text>the at least an output video has at least a second data volume; and</claim-text><claim-text>the at least a second data volume is less than the first data volume.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the at least a region of interest further comprises:<claim-text>detecting an area of motion in the input video; and</claim-text><claim-text>determining the at least a region of interest based on the area of motion.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the at least a region of interest further comprises:<claim-text>identifying at least a feature of interest in the input video; and</claim-text><claim-text>determining the at least a region of interest based on the at least a feature of interest.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising identifying the at least a feature of interest using a neural network.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising identifying the at least a feature of interest using at least a recipient input.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the at least a region of interest further comprises a spatial region of the input video.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising determining at least a scaling parameter for the spatial region.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the at least a region of interest further comprises a temporal region of the input video.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, further comprising determining at least a speed parameter of the temporal region.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>the at least a region of interest further comprises a first region of interest and a second region of interest; and</claim-text><claim-text>encoding the at least an output video further comprises:<claim-text>encoding a first output video based on the first region of interest; and</claim-text><claim-text>encoding a second output video based on the second region of interest.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>