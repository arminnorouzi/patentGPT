<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004870A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004870</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941033</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>20</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e43">MACHINE LEARNING MODEL DETERMINATION SYSTEM AND MACHINE LEARNING MODEL DETERMINATION METHOD</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/JP2020/010804</doc-number><date>20200312</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17941033</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Kabushiki Kaisha Yaskawa Denki</orgname><address><city>Kitakyushu-shi</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>ADACHI</last-name><first-name>Masaru</first-name><address><city>Kitakyushu-shi</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>YOKOYA</last-name><first-name>Tsuyoshi</first-name><address><city>Kitakyushu-shi</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>MASUMURA</last-name><first-name>Ryo</first-name><address><city>Kitakyushu-shi</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Provided is a machine learning model determination system including: at least one server and at least one client terminal; an evaluation information database which stores evaluation information being information on an evaluation of machine learning; an evaluation information update module which updates the evaluation information based on a specific value of a parameter and an evaluation of the machine learning through use of specific teaching data; a teaching data input module; a verification data input module; a parameter determination module which determines the specific value of the parameter based on the evaluation information; and a machine learning engine which includes a learning module which executes learning for a machine learning model through use of the specific teaching data, and an evaluation module which evaluates a result of the machine learning through use of the specific verification data.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="211.24mm" wi="150.03mm" file="US20230004870A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="225.47mm" wi="152.06mm" file="US20230004870A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="128.61mm" wi="166.29mm" file="US20230004870A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="217.76mm" wi="157.65mm" file="US20230004870A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="202.44mm" wi="141.31mm" file="US20230004870A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="190.67mm" wi="163.91mm" file="US20230004870A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="210.82mm" wi="166.12mm" file="US20230004870A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="210.99mm" wi="88.73mm" file="US20230004870A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="239.44mm" wi="98.81mm" file="US20230004870A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="173.91mm" wi="88.73mm" file="US20230004870A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="239.10mm" wi="138.60mm" file="US20230004870A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="210.23mm" wi="88.73mm" file="US20230004870A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="207.77mm" wi="157.65mm" file="US20230004870A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">The present disclosure contains subject matter related to that disclosed in International Patent Application PCT/JP2020/010804 filed in the Japan Patent Office on Mar. 12, 2020, the entire contents of which are hereby incorporated by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading><heading id="h-0003" level="1">1. Field of the Invention</heading><p id="p-0003" num="0002">The embodiments disclosed herein relates to a machine learning model determination method and a machine learning model determination system.</p><heading id="h-0004" level="1">2. Description of the Related Art</heading><p id="p-0004" num="0003">In JP 2019-79214 A, there is described a search apparatus which searches for hyperparameter values for machine learning. In the search apparatus as described in JP 2019-79214, new hyperparameter values can be selected by various methods, such as a method of randomly selecting new hyperparameter values from a hyperparameter space, a method of selecting new hyperparameter values so that the new hyperparameter values selected from the hyperparameter space are arranged in a grid form, and a method of narrowing down hyperparameter values to be selected through use of a property that models having prediction performances close to one another are generated from continuous hyperparameter predicted values close to one another (paragraph 0104).</p><heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0005" num="0004">According to one aspect of the present invention, there is provided a machine learning model determination system including: at least one server and at least one client terminal which are connected to an information communication network, and are enabled to perform mutual information communication; an evaluation information database which is included in the at least one server, and is configured to store evaluation information being information on an evaluation of a learning result of machine learning for a value of the parameter, the parameter influencing the learning result of the machine learning; an evaluation information update module which is included in the at least one server, and is configured to update the evaluation information based on a specific value of the parameter and an evaluation of a learning result of the machine learning through use of specific teaching data; a teaching data input module which is included in the at least one client terminal, and is configured to input the specific teaching data; a verification data input module which is included in the at least one client terminal, and is configured to input specific verification data; a parameter determination module configured to determine the specific value of the parameter based on the evaluation information on the machine learning to be executed; and a machine learning engine which includes a learning module configured to execute learning for a machine learning model formed based on the specific value of the parameter through use of the specific teaching data, and an evaluation module configured to evaluate, through use of the specific verification data, a learning result of the machine learning of the learned machine learning model.</p><p id="p-0006" num="0005">Further, according to one aspect of the present invention, there is provided a machine learning model determination method to be performed through an information communication network, the machine learning model determination method including: determining a specific value of a parameter based on evaluation information which is evaluation information on machine learning which is to be executed, and is information on an evaluation of a learning result of machine learning for a value of the parameter, the parameter influencing the learning result of the machine learning; forming a machine learning model based on the specific value of the parameter; executing learning of the machine learning model through use of specific teaching data; evaluating a learning result of the machine learning of the learned machine learning model through use of specific verification data; and updating the evaluation information based on the specific value of the parameter and the evaluation of the learning result of the machine learning.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0007" num="0006">It is generally difficult to appropriately design various parameters in machine learning including so-called hyperparameters. Even when parameters are searched for in a parameter space in order to eliminate uncertainly caused by dependency on intuition and experience of experts, the parameter space to be searched is vast, and hence an enormous amount of computing resources are required in order to search the entire parameter space, which is not realistic.</p><p id="p-0008" num="0007">A preferred embodiment of the present invention described below will show how to appropriately determine machine learning parameters by efficiently using computing resources.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram for illustrating an overall configuration of a machine learning model determination system according to the preferred embodiment of the present invention.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram for illustrating an example of a hardware configuration of each of a server and a client terminal.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram for illustrating principal components of a machine learning model determination system according to the preferred embodiment of the present invention.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram for illustrating a flow of a schematic operation of the machine learning model determination system according to the preferred embodiment of the present invention.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a table for showing an example of conditions input to a condition input module by a user and templates defined in accordance with the conditions.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic diagram for illustrating processing executed in Step S<b>107</b> to Step S<b>111</b> of the flow of <figref idref="DRAWINGS">FIG. <b>4</b></figref> in line with machine learning models to be built.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> are graphs for showing a specific implementation example of determination of a specific value of a parameter.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> are schematic graphs for showing an example of an update of a probability density function.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> are schematic graphs for showing an example of an update of evaluation information for a parameter having a discrete property.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b></figref> are graphs for showing a determination method for specific values of a parameter.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> are graphs for showing a method of determining specific values of a parameter which have not been used for the machine learning, or have been used relatively less frequently for the machine learning.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a functional block diagram for illustrating a schematic configuration of the server having a configuration for solely updating the evaluation information.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DESCRIPTION OF THE EMBODIMENTS</heading><p id="p-0021" num="0020">Description is now given of a machine learning model determination method and a machine learning model determination system according to a preferred embodiment of the present invention with reference to the drawings.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram for illustrating an overall configuration of a machine learning model determination system <b>1</b> according to the preferred embodiment of the present invention. In the machine learning model determination system <b>1</b>, a server <b>2</b> and client terminals <b>3</b> (three client terminals <b>3</b> are illustrated in the figure, and suffixes &#x201c;a,&#x201d; &#x201c;b,&#x201d; and &#x201c;c&#x201d; are added when those client terminals <b>3</b> are distinguished from one another) being computers are connected to one another for information communication through a telecommunication network N.</p><p id="p-0023" num="0022">The telecommunication network N is not particularly limited as long as a plurality of computers can communicate to/from one another through the telecommunication network N, and may be an open network such as the so-called Internet, or a closed network such as an enterprise network. Whether the telecommunication network N is wireless or wired or what communication protocol is used are not limited.</p><p id="p-0024" num="0023">The server <b>2</b> executes management of various databases and the like as described later. The client terminals <b>3</b> in this example are computers scheduled to execute calculation through machine learning based on a method such as so-called deep learning. As each client terminal <b>3</b>, a computer having a sufficient calculation performance for a target application is prepared.</p><p id="p-0025" num="0024">Moreover, in each client terminal <b>3</b>, information processing through machine learning is scheduled to be independently executed. In this case, there is assumed such a situation that users <b>4</b> (three users <b>4</b> are illustrated in the figure, and suffixes &#x201c;a,&#x201d; &#x201c;b,&#x201d; and &#x201c;c&#x201d; are added when those users <b>4</b> are distinguished from one another) who require the information processing through machine learning each install the client terminal <b>3</b> that suits this information processing, prepare teaching data required for the machine learning, and execute the machine learning to build information processing models.</p><p id="p-0026" num="0025">Moreover, in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the client terminal <b>3</b><i>a </i>is installed and operated by the user <b>4</b><i>a</i>. Similarly, the client terminals <b>3</b><i>b </i>and <b>3</b><i>c </i>are installed and operated by the users <b>4</b><i>b </i>and <b>4</b><i>c</i>, respectively. In this embodiment, the client terminals <b>3</b><i>a </i>to <b>3</b><i>c </i>and the users <b>4</b><i>a </i>to <b>4</b><i>c </i>are not different from one another in a technical sense, but the client terminal <b>3</b><i>a </i>and the user <b>4</b><i>a </i>are described as representatives in the following. Thus, when it is not required to distinguish the client terminals <b>3</b> and the users <b>4</b> from one another, the client terminal <b>3</b><i>a </i>is simply referred to as &#x201c;client terminal <b>3</b>,&#x201d; and the user <b>4</b><i>a </i>is simply referred to as &#x201c;user <b>4</b>.&#x201d;</p><p id="p-0027" num="0026">In the schematic diagram of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, only a representative configuration of the present invention is exemplified for the convenience of description. It is not always required that the overall configuration of the machine learning model determination system <b>1</b> be completely the same as the illustrated configuration. For example, the number of the client terminals <b>3</b> and the number of the users <b>4</b> can be freely selected, and are variable. Moreover, it is not always required that the number of the client terminals <b>3</b> and the number of the users <b>4</b> match each other. One user <b>4</b> may operate a plurality of client terminals <b>3</b>. Further, it is not always required that the client terminals <b>3</b> be devices physically independent of one another, and may be virtual machines which use a so-called cloud computing service or the like. In this case, a plurality of client terminals <b>3</b> can be built on physically the same device. Moreover, the same applies to the server <b>2</b>. It is not always required that the server <b>2</b> be an independent device, and may be built as a virtual machine. Thus, physical locations of the server <b>2</b> and the client terminals <b>3</b> are not limited, and may be distributed to a plurality of devices, and a part or the whole thereof may be installed on the same device in an overlapping manner.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram for illustrating an example of a hardware configuration of each of the server <b>2</b> and the client terminal <b>3</b>. <figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a general computer <b>5</b>, in which a central processing unit (CPU) <b>501</b>, which is a processor, a random access memory (RAM) <b>502</b>, which is a memory, an external storage device <b>503</b>, a graphics controller (GC) <b>504</b>, an input device <b>505</b>, and input/output (I/O) <b>506</b> are connected by a data bus <b>507</b> so that electric signals can be exchanged thereamong. In the computer <b>5</b>, a parallel calculator <b>509</b> may further be connected to the data bus <b>507</b> as required. The hardware configuration of the computer <b>5</b> described above is merely an example, and another configuration may be employed.</p><p id="p-0029" num="0028">The external storage device <b>503</b> is a device in which information can be recorded statically, such as a hard disk drive (HDD) or a solid state drive (SSD). Further, a signal from the GC <b>504</b> is output to a monitor <b>508</b>, such as a cathode ray tube (CRT) or a so-called flat panel display, on which a user visually recognizes an image, and the signal is displayed as an image. The input device <b>505</b> is one or a plurality of devices, such as a keyboard, a mouse, and a touch panel, to be used by the user to input information, and the I/O <b>506</b> is one or a plurality of interfaces to be used by the computer <b>5</b> to exchange information with external devices. The I/O <b>506</b> may include various ports for wired connection, and a controller for wireless connection.</p><p id="p-0030" num="0029">The parallel calculator <b>509</b> is an integrated circuit provided with a large number of parallel calculation circuits so that large-scale parallel calculation frequently appearing in the machine learning can be executed at high speed. As the parallel calculator <b>509</b>, it is preferred that a processor for three-dimensional graphics generally known as a graphics processing unit (GPU) be used. Moreover, for example, an integrated circuit designed to be particularly appropriate for the machine learning may be used. Further, when the GC <b>504</b> includes a GPU, and this GPU has a calculation performance sufficient for the information processing that uses the machine learning intended to be executed by the user <b>4</b>, the GPU provided to the GC <b>504</b> may be used as the parallel calculator <b>509</b> or in addition to the parallel calculator <b>509</b>.</p><p id="p-0031" num="0030">Computer programs for causing the computer <b>5</b> to function as the server <b>2</b> or the client terminal <b>3</b> are stored in the external storage device <b>503</b>, and are read out by the RAM <b>502</b> and executed by the CPU <b>501</b> as required. That is, in the RAM <b>502</b>, a code which is executed by the CPU <b>501</b> to cause the computer <b>5</b> to function as the server computer <b>2</b> or the client terminal <b>3</b> is stored. Such computer programs may be provided by being recorded on an appropriate computer-readable information recording medium such as an appropriate optical disc, magneto-optical disk, or flash memory, or may be provided via the I/O <b>506</b> through an external information communication line such as the Internet.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a functional block diagram for illustrating a principal configuration of the machine learning model determination system <b>1</b> according to this embodiment. A reason for the specific statement of &#x201c;principal&#x201d; is that the machine learning model determination system <b>1</b> may include an additional configuration other than the configuration of FIG. <b>3</b>. This additional configuration is not shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> in order to avoid complicated illustration. This additional configuration is described later.</p><p id="p-0033" num="0032">As illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the machine learning model determination system <b>1</b> includes the plurality of client terminals <b>3</b> to be used by the plurality of users, but the representative one of the plurality of client terminals <b>3</b> (that is, the client terminal <b>3</b><i>a</i>) is illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Thus, when the plurality of client terminals <b>3</b> are connected for communication to the server <b>2</b>, a plurality of client terminals <b>3</b> (not shown) each having a configuration equivalent to that of the client terminal <b>3</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> exist. Meanwhile, the server <b>2</b> is common to the plurality of client terminals <b>3</b>.</p><p id="p-0034" num="0033">A template database <b>201</b> and an evaluation information database <b>202</b> are included in the server <b>2</b>, and store one or a plurality of templates and one or a plurality of pieces of evaluation information corresponding to respective templates, respectively. The template as used herein is information which defines at least a type and forms of input and output of a machine learning model to be used for the machine learning. Moreover, the evaluation information is information on a parameter influencing a learning result of the machine learning and on an evaluation of the learning result of the machine learning for a value of this parameter. A more specific description of the template and the evaluation information is given later. Moreover, an evaluation information update module <b>203</b> is included in the server <b>2</b>, and can update the evaluation information stored in the evaluation information database <b>202</b>.</p><p id="p-0035" num="0034">A machine learning engine <b>303</b> including a learning module <b>301</b> and an evaluation module <b>302</b>, a teaching data input module <b>304</b>, and a verification data input module <b>305</b> are included in the client terminal <b>3</b>. The teaching data input module <b>304</b> inputs specific teaching data which is prepared by the user <b>4</b>, and is used for a machine learning model to learn for a specific application. The verification data input module <b>305</b> similarly inputs specific verification data which is prepared by the user <b>4</b>, and is used for verification of the machine learning model for which the learning for the specific application has been finished. The teaching data input module <b>304</b> and the verification data input module <b>305</b> include an appropriate graphical user interfaces (GUIs) and the like, and deliver the specific teaching data and the specific verification data prepared by the user <b>4</b> to the machine learning engine <b>303</b>.</p><p id="p-0036" num="0035">The learning module <b>301</b> included in the machine learning engine <b>303</b> builds the machine learning model and uses the specific teaching data to execute the learning. In this embodiment, the machine learning model to be used in the learning module <b>301</b> is automatically built by the machine learning model determination system <b>1</b> itself based on conditions such as an application for which the user <b>4</b> uses the machine learning. A mechanism for automatically building the machine learning model by the machine learning model determination system <b>1</b> is described later.</p><p id="p-0037" num="0036">Moreover, the evaluation module <b>302</b> included in the machine learning engine <b>303</b> uses the specific verification data for the machine learning model, which has been built and has been caused to learn in the learning module <b>301</b>, to evaluate the learning result of the machine learning. This evaluation of the learning result may be executed by inputting a question included in the specific verification data, and comparing an output result thereof with an answer included in the specific verification data. In this embodiment, the evaluation by the evaluation module <b>302</b> is based on a correct answer rate (a rate of the output results of the machine learning model matching the answers) in the specific verification data, but this index of the evaluation may be any index that suits a property and the application of the machine learning model to be built. Evaluation indices other than the simple correct answer rate described in this embodiment are independently described later.</p><p id="p-0038" num="0037">As a configuration for building the machine learning model to be used in the learning module <b>301</b>, the client terminal <b>3</b> includes a condition input module <b>306</b> and a parameter determination module <b>307</b>.</p><p id="p-0039" num="0038">First, the condition input module <b>306</b> is a portion for the user <b>4</b> to input conditions for selecting a template, and may include an appropriate GUI and the like. The conditions for selecting the template are information on the application for which the information processing through machine learning is used, and is information sufficient to specify at least the type and the forms of the input and the output of this machine learning model. More specifically, the conditions include a target of use of the application and formats of input data and output data.</p><p id="p-0040" num="0039">The conditions for selecting the template are transmitted to a template/evaluation information selection module <b>204</b> of the server <b>2</b>. The template/evaluation information selection module <b>204</b> selects one or a plurality of templates matching the conditions from the template database <b>201</b>. Further, the template/evaluation information selection module <b>204</b> selects one or a plurality of pieces of evaluation information associated with the selected template from the evaluation information database <b>202</b>. The selected template is transmitted to the learning module <b>301</b> of the client terminal <b>3</b>, and is used to build machine learning models. The selected evaluation information is transmitted to the parameter determination module <b>307</b> of the client terminal, and is used to determine specific values of a parameter.</p><p id="p-0041" num="0040">The parameter determination module <b>307</b> determines the specific values of the parameter based on the evaluation information transmitted from the template/evaluation information selection module <b>204</b>. In this case, the evaluation information transmitted from the template/evaluation information selection module <b>204</b> is the evaluation information associated with the selected template so that the template matches the conditions input for the machine learning to be executed and used by the user, and can thus be considered as evaluation information on the machine learning to be executed.</p><p id="p-0042" num="0041">Moreover, the parameter as used herein is various setting values and the like which influence the learning result through the machine learning as described above, and brings about different results depending on specific definition of the parameter even when completely the same teaching data is used for the learning, and completely the same verification data is used to evaluate the learning result. This parameter can be a numerical parameter or can be a selection parameter for selecting one or a plurality of a finite number of options. A plurality of types of parameters usually exist. A representative example of this parameter is a so-called hyperparameter in the machine learning. As parameters other than the hyperparameter, parameters in preprocessing and postprocessing of the machine learning (for example, a type and weight values of a filter for edge extraction processing in image processing) are given.</p><p id="p-0043" num="0042">When the template is used, the machine learning models in the learning module <b>301</b> are built by combining the template selected by the template/evaluation information selection module <b>204</b> with the specific values of the parameter determined by the parameter determination module <b>307</b>. Thus, when the template/evaluation information selection module <b>204</b> selects &#x201c;n&#x201d; templates, and the parameter determination module <b>307</b> determines m<sub>k </sub>specific values of the parameter for a selected k-th template, the number of machine learning models to be built is give as below.</p><p id="p-0044" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mrow>  <mtext>	</mtext>  <mrow>   <msubsup>    <mo>&#x2211;</mo>    <mrow>     <mi>k</mi>     <mo>=</mo>     <mn>1</mn>    </mrow>    <mstyle><mtext>?</mtext></mstyle>   </msubsup>   <msub>    <mi>m</mi>    <mi>k</mi>   </msub>  </mrow> </mrow></math></maths><maths id="MATH-US-00001-2" num="00001.2"><math overflow="scroll"> <mrow>  <mstyle><mtext>?</mtext></mstyle>  <mtext mathsize="6pt">indicates text missing or illegible when filed</mtext> </mrow></math></maths></p><p id="p-0045" num="0043">It is considered that a case in which the type and the application of the machine learning model to be determined by this machine learning model determination system <b>1</b> are limited to a specific type and a specific application corresponds to a case in which the number of prepared templates is one. In this case, it is not required to select the template and the evaluation information, and hence the template/evaluation information selection module <b>204</b> of the server <b>2</b> and the condition input module <b>306</b> of the client terminal <b>3</b> may be omitted.</p><p id="p-0046" num="0044">The evaluation information update module <b>203</b> updates, based on the evaluation of the learning result of the machine learning model obtained in the evaluation module <b>302</b> of the machine learning engine <b>303</b>, the evaluation information which has been used to determine the specific value of the parameter to build this machine learning model. Moreover, this machine learning model has been caused to learn through use of the specific teaching data input from the teaching data input module <b>304</b>, and hence it is considered that the evaluation information update module <b>203</b> updates the evaluation information based on the evaluation of the learning result of the machine learning which has used the specific value of the parameter and the specific teaching data.</p><p id="p-0047" num="0045">The evaluations of the learning results of the machine learning models obtained in the evaluation module <b>302</b> may be used to update a part of the templates stored in the template database <b>201</b>. The update of the templates based on the evaluation of the learning result is described later.</p><p id="p-0048" num="0046">Moreover, in the machine learning model determination system <b>1</b> according to this embodiment, the client terminal <b>3</b> further includes a parameter specification module <b>308</b> and a ratio setting module <b>309</b>. The parameter specification module <b>308</b> is used by the user to explicitly specify specific values of the parameter independently of the specific values of the parameter determined by the parameter determination module <b>307</b>, and may include an appropriate GUI. In the learning module <b>301</b> of the machine learning engine <b>303</b>, in addition to the machine learning models through the specific values of the parameter determined by the parameter determination module <b>307</b>, machine learning models through the specific values of the parameter specified by the user using the parameter specification module <b>308</b> are built. The ratio setting module <b>309</b> sets a ratio of preferential selection of, as the plurality of specific values of the parameter determined by the parameter determination module <b>307</b>, values which have not been used for the machine learning or have been used relatively less frequently for the machine learning, and may include an appropriate GUI. This predetermined ratio is described in detail later.</p><p id="p-0049" num="0047">Further, a model determination module <b>310</b> included in the client terminal <b>3</b> determines at least one machine learning model from the plurality of machine learning models built in the learning module <b>301</b> of the machine learning engine <b>303</b> based on the evaluations of the machine learning obtained by the evaluation module <b>302</b>. As a result, for the application for which the user intends to use the information processing through the machine learning, the plurality of machine learning models are built as the candidates thereof, and the learning through use of the specific teaching data is executed for each candidate. Then, each candidate is verified through use of the specific verification data to obtain the evaluation of each candidate. Consequently, a machine learning model which can obtain the most or more appropriate output for the desired application can be determined.</p><p id="p-0050" num="0048">In the above-mentioned machine learning model determination system <b>1</b>, description is given while assuming that the parameter determination module <b>307</b>, the machine learning engine <b>303</b>, and the model determination module <b>310</b> are built on the client terminal <b>3</b>, but all or a part thereof may be built on the server <b>2</b>, and the client terminal <b>3</b> may receive only the results thereof from the server <b>2</b>. Moreover, a part of the plurality of client terminals <b>3</b> connected to the server <b>2</b> may build the parameter determination module <b>307</b>, the machine learning engine <b>303</b>, and the model determination module <b>310</b> on the client terminal <b>3</b>. Another part of the plurality of client terminals <b>3</b> may build the parameter determination module <b>307</b>, the machine learning engine <b>303</b>, and the model determination module <b>310</b> on the server <b>2</b>. The user <b>4</b> who can prepare the client terminal <b>3</b> having sufficient information processing performance can use the own client terminal <b>3</b> to quickly determine the machine learning model, while the user <b>4</b> who cannot prepare such a powerful client terminal <b>3</b> can cause the server <b>2</b> to take over a load of the information processing to determine the machine learning model.</p><p id="p-0051" num="0049">The schematic configuration of the machine learning model determination system <b>1</b> according to this embodiment has been described. With reference to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, description is now given of a flow of an overall operation of the machine learning model determination system <b>1</b> having this configuration and technical significance achieved thereby.</p><p id="p-0052" num="0050"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram for illustrating a flow of a schematic operation of the machine learning model determination system <b>1</b> according to this embodiment. In the figure, the flow is illustrated while the flow is divided into a flow of the client terminal <b>3</b><i>a </i>used by the specific user <b>4</b><i>a </i>of interest, a flow the server <b>2</b>, and a flow of one or a plurality of client terminals <b>3</b><i>b</i>, <b>3</b><i>c</i>, . . . , used by one or a plurality of users <b>4</b><i>b</i>, <b>4</b><i>c</i>, . . . other than the specific user <b>4</b><i>a </i>for the sake of convenience. For description of this flow, <figref idref="DRAWINGS">FIG. <b>3</b></figref> is appropriately referred to. When the function blocks of the machine learning model determination system <b>1</b> are referred to, the reference symbols of <figref idref="DRAWINGS">FIG. <b>3</b></figref> are added.</p><p id="p-0053" num="0051">First, it is assumed that, in each of other client terminals <b>3</b><i>b</i>, <b>3</b><i>c</i>, . . . , a machine learning model suited to a specific application has already been built and has been caused to learn in the learning module <b>301</b> by the machine learning engine <b>303</b>, and the learning result thereof has been evaluated by the evaluation module <b>302</b> (Step S<b>101</b>) (however, as described later, it is not required that this evaluation have been made).</p><p id="p-0054" num="0052">The learning results are transmitted to the evaluation information update module <b>203</b> of the server <b>2</b>, and are acquired (Step S<b>102</b>). The evaluation information update module <b>203</b> updates the evaluation information stored in the evaluation information DB based on the evaluations (Step S<b>103</b>).</p><p id="p-0055" num="0053">This update of the evaluation information is executed each time the users <b>4</b><i>b</i>, <b>4</b><i>c</i>, . . . use respective client terminals <b>3</b><i>b</i>, <b>3</b><i>c</i>, . . . to execute the machine learning, and results thereof are accumulated in the evaluation information DB. The evaluation information is, as described above, information on a parameter influencing the learning result of the machine learning and on the evaluation of the learning result of the machine learning for the value of this parameter. Although not very precise, a brief description is now given of technical significance of this evaluation information in order to facilitate understanding. That is, the evaluation information is information which reflects learning results of past machine learning, to thereby facilitate selection of a value of the parameter used for the machine learning which has obtained a good achievement and a specific value of the parameter close to this value when the parameter determination module <b>307</b> determines the specific value of the parameter.</p><p id="p-0056" num="0054">That is, when a certain user <b>4</b> uses the client terminal <b>3</b> to obtain a good achievement as the machine learning result for a specific value of the parameter, this result is reflected in the evaluation information. After that, when another user <b>4</b> uses the client terminal <b>3</b> to execute the machine learning through use of the updated evaluation information, the value of the parameter used by the previous user or a value of the parameter close to that value is more likely to be selected.</p><p id="p-0057" num="0055">That is, in the machine learning model determination system <b>1</b> according to this embodiment, each user <b>4</b> cannot directly know the machine learning models built by other users <b>4</b> and the learning result thereof, but can indirectly use whether the learning result is good or bad via the evaluation information, and can efficiently search for and find a machine learning model having a higher accuracy. It is expected that efficiency and an accuracy of this search for the machine learning model increase as more results of the machine learning are obtained by more users <b>4</b>, and the results are accumulated in the evaluation information. That is, the evaluation information stored in the evaluation information database <b>202</b> included in the server <b>2</b> has the configuration to be used in common by the plurality of users <b>4</b>, with the result that quality of the evaluation information is more efficiently increased.</p><p id="p-0058" num="0056">The existence of a plurality of users <b>4</b> is not necessarily a prerequisite for this increase in quality of the evaluation information. This increase in quality is an effect achieved by the configuration in which a plurality of machine learning models are constructed and the results of the evaluations are accumulated in the evaluation information. However, the quality of the evaluation information increases more quickly as more results of the machine learning are reflected in the evaluation information, and hence it is effective to adopt the configuration in which the evaluation information is used in common by a plurality of users <b>4</b> so that more results of the machine learning are reflected in the evaluation information. Various types of implementation are conceivable for the evaluation information and the update thereof, and a specific example is described in detail later.</p><p id="p-0059" num="0057">In this case, there is required such assumption that, in order to efficiently search for and find a machine learning model having a higher accuracy through the above-mentioned increase in quality of the evaluation, when a value of a parameter employed in a machine learning model which was built by a certain user <b>4</b> based on a circumstance specific to this user <b>4</b> and has obtained a good achievement is employed in a machine learning model to be built by another user <b>4</b> based on another circumstance, the machine learning model to be built is also likely to obtain a good achievement. This assumption is not correct in a strict sense. That is, not only in a case in which an application and a purpose of the machine learning are different among the machine learning models as a matter of course, but also in a case in which the application and the purpose of the machine learning are equivalent, it is not generally guaranteed that, when machine learning models built by employing the same value of the parameter learn based on pieces of teaching data different from one another, and learning results thereof are evaluated based on pieces of verification data different from one another, the evaluations of learning result thereof are equivalent to one another.</p><p id="p-0060" num="0058">However, it has empirically been observed that, in machine learning in which machine learning models and the forms of the input and the output of the machine learning are the same, and the application and the purpose thereof are equivalent, machine learning models built by employing the same parameter or close parameters obtain excellent achievements in many cases even when different pieces of teaching data and verification data are used. Thus, in practice, it is very meaningful to facilitate employment of a value of a parameter which was employed to build a machine learning model having obtained a good achievement in a past case when a machine learning model is built in another new case.</p><p id="p-0061" num="0059">In particular, in the machine learning, an enormous amount of calculation is generally required to build a machine learning model, to execute learning, and to further evaluate a learning result thereof, and hence it is unrealistic to thoroughly search for all possibilities in a vast parameter space. The search by preferentially employing values of a parameter used to build machine learning models having obtained good achievements or values close to the values based on past similar cases is an efficient and practical approach when a machine learning model obtaining a good achievement is to be built in a shorter time and with a smaller amount of calculation.</p><p id="p-0062" num="0060">The above-mentioned similarity of the value of the parameter in the machine learning is observed in a group of machine learning models among which commonality is seen in an application or a purpose, and is not observed or is limited if any in a group of machine learning models without commonality. For example, in a machine learning model which detects a failure of a device based on a current waveform in a positioning mechanism which uses a one-axis servo ball screw system, even when devices are more or less different in manufacturer, model, and load or different in teaching data and verification data, similarity is observed in values of a parameter employed for machine learning models obtaining good achievements. In contrast, even in the case in which a machine learning model detects a failure of the device based on the current waveform in the same one-axis servo ball screw system, when torque control is executed as in a one-axis servo ball screw system used for a press mechanism, it is observed that a value of the parameter appropriate for the machine learning model is different.</p><p id="p-0063" num="0061">As a matter of course, it should be understood that when the type and the forms of the input and the output of a machine learning model to be built are different, a parameter itself required to build the machine learning model is different, and hence the parameter cannot be mutually used. That is, in the machine learning in which the similarity of the value of the parameter in the machine learning can be used, there is a range of the similarity.</p><p id="p-0064" num="0062">As used herein, the template is the information which defines at least the type and the forms of the input and the output of the machine learning model to be used for the machine learning as described above. Although not very precise, a brief description is also now given of technical significance of this template in order to facilitate understanding. That is, the template defines a range of the similarity of the machine learning to be built by the user <b>4</b>. That is, it is estimated that there is correlation between the achievement and the value of the parameter among machine learning models built based on the common template. Thus, the template is set so that similarity is observed in the value of the parameter among machine learning models built based on this template.</p><p id="p-0065" num="0063">More specifically, the template first defines the type and the forms of the input and the output of the machine learning model to be used for the machine learning. This is because it is considered that a machine learning model different in the type and the forms has a different parameter to be selected in the first place, and hence the template is not common. Further, the template may define the application and the purpose of the machine learning. In the above-mentioned example of the positioning mechanism which uses the one-axis servo ball screw system, a template defining &#x201c;long short-term memory (LSTM)&#x201d; as the type of the machine learning model, one-dimensional time series data as the form of the input, an n-dimensional vector as the form of the output, and &#x201c;position control&#x201d; and &#x201c;failure detection&#x201d; as the application and the purpose is prepared.</p><p id="p-0066" num="0064">The evaluation information is prepared in association with each template. Thus, a machine learning model built by selecting the same template uses the common evaluation information, and hence it is understood that a parameter reflecting past learning results is appropriately selected. In the above-mentioned example of the template, parameters to be determined are roughly as described below.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0065">Parameter (such as time constant) of a filter applied to the input data</li>        <li id="ul0002-0002" num="0066">The number of hidden layers of the LSTM, and the number of nodes of each layer</li>        <li id="ul0002-0003" num="0067">Learning rate</li>        <li id="ul0002-0004" num="0068">Momentum</li>        <li id="ul0002-0005" num="0069">Number of truncation steps of the backpropagation through time (BPTT)</li>        <li id="ul0002-0006" num="0070">Gradient clipping value</li>    </ul>    </li></ul></p><p id="p-0067" num="0071">That is, it is considered that the machine learning model determination system <b>1</b> is a system which efficiently and practically obtains, through use of a rational method, practical preferred values of a parameter to be used for a machine learning model built based on a specific template. With reference again to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, description is given of a flow until the values of the parameter are obtained and the machine learning model is determined.</p><p id="p-0068" num="0072">When the user <b>4</b><i>a </i>newly builds a machine learning model for specific application and purpose, the user <b>4</b><i>a </i>inputs conditions relating to this purpose into the condition input module <b>306</b> of the client terminal <b>3</b> (Step S<b>104</b>). The conditions are transmitted to the server <b>2</b>, and are used to select a template in the template/evaluation information selection module <b>204</b> (Step S<b>105</b>). The conditions input to the condition input module <b>306</b> by the user <b>4</b><i>a </i>are not always required to be conditions that directly specify the type and the forms of the input data and the output data of the machine learning model defined by the template.</p><p id="p-0069" num="0073"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a table for showing an example of conditions input to the condition input module <b>306</b> by the user <b>4</b><i>a </i>and templates defined in accordance with the conditions. In the table of the figure, a form condition for defining the template, that is, a condition for defining the type and the forms of the input data and the output data of the machine learning model is shown in the horizontal direction, and a purpose condition for defining the template, that is, a condition relating to the application and the purpose of the machine learning is shown in the vertical direction so as to distinguish the conditions from each other. However, when the user <b>4</b><i>a </i>inputs the conditions, those conditions are not always required to be clarified. A GUI for inputting required conditions in, for example, a so-called wizard form may be employed.</p><p id="p-0070" num="0074">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, when the form condition and the purpose condition are determined, one template is consequently determined. In the table shown in the figure, all templates assigned to respective squares defined by selecting the form condition and the purpose condition are different from one another. When conditions can be treated as similar conditions, a common template may be used. For example, in a case in which such a condition that a one-axis servomotor is used and one-dimensional time series data is input is selected as the form condition, when failure detection in positioning of a rotational drive system (shown as &#x201c;rotational positioning&#x201d; in the table) is selected as the purpose condition, a template A1 of the table is determined. When failure detection in positioning of a linear motor drive system (shown as &#x201c;linear positioning&#x201d; in the table) is selected as the purpose condition, a template A3 of the table is determined. However, when both of the purpose conditions can be similarly treated, the templates may be a common template.</p><p id="p-0071" num="0075">Moreover, the evaluation information is associated with each template. Thus, the selection of the template by the template/evaluation information selection module <b>204</b> based on the input conditions is also considered as selection of the evaluation information.</p><p id="p-0072" num="0076">Moreover, the template/evaluation information selection module <b>204</b> may select a plurality of templates depending on the conditions input by the user <b>4</b><i>a</i>. For example, when the user <b>4</b><i>a </i>inputs the condition that the one-axis servomotor is used and the one-dimensional time-series data is input, and further inputs failure detection in positioning as the condition of the application and the purpose, but does not specify whether the positioning is the rotational positioning, positioning in a ball screw drive system (shown as &#x201c;ball screw positioning&#x201d; in the table), or the linear positioning, all of the template A1, a template A2, and the template A3 being possible candidates may be selected. Moreover, there may be provided such a definition that, under a specific condition, a plurality of templates associated with other conditions are selected.</p><p id="p-0073" num="0077">As described above, when the conditions provided to the template/evaluation information selection module <b>204</b> by the user <b>4</b><i>a </i>are the information on the machine to which the user <b>4</b><i>a </i>intends to apply the machine learning and the purpose and the application thereof, even when the user <b>4</b><i>a </i>does not have sufficient knowledge on a large number of machine learning models, a template for building an appropriate machine learning model is automatically selected based on the input conditions. It is considered that there is a case in which a plurality of candidates of the machine learning models exist depending on the conditions. In this case, it is only required to select a plurality of templates for building the machine learning models. Each template includes definitions of known machine learning models, and the definitions may indicate architectures of existing machine learning models. For example, the architectures may be AlexNet, ZFNet, ResNET, and the like when the architectures are convolutional neural networks (CNNs), and may be simple RNN, LSTM, Pointer Networks, and the like when the architectures are recurrent neural networks (RNNs). In addition, a convolutional recurrent neural network (CRNN), a support vector machine, and the like are prepared in advance in accordance with a property of the machine learning to be provided to the user <b>4</b>.</p><p id="p-0074" num="0078">The template selected in the template/evaluation information selection module <b>204</b> is read out from the template database <b>201</b>, and is transmitted to the client terminal <b>3</b><i>a. </i></p><p id="p-0075" num="0079">Moreover, the evaluation information corresponding to the selected template is also read out from the evaluation information database <b>202</b>, and is transmitted to the client terminal <b>3</b><i>a</i>. With reference again to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, in the next Step S<b>106</b>, values of the parameter to be used to build the machine learning models are determined by the parameter determination module <b>307</b> of the client terminal <b>3</b><i>a</i>. Herein, the values of the parameter to be used to build the machine learning models are referred to as &#x201c;specific values of the parameter.&#x201d;</p><p id="p-0076" num="0080">Even when only one specific value of the parameter is determined, the machine learning model determination system <b>1</b> theoretically functions. However, the parameter determination module <b>307</b> determines a large number of specific values, which is usually two or more specific values, of the parameter. One machine learning model is built by applying a specific value of the parameter to a definition of a machine learning model included in a template, and hence the number of determined specific values of the parameter indicates the number of machine learning models to be afterward built by the learning module <b>301</b>.</p><p id="p-0077" num="0081">This is understood as described below. That is, the parameter is one of various types of setting values and the like which influence the learning result of the machine learning. Thus, even when the learning is executed for the specific values of the parameter through the same teaching data, and learning results thereof are evaluated through the same verification data, the evaluations thereof are different from one another, and superior and inferior results exist. It is generally difficult to accurately predict the superiority and inferiority in advance from the values themselves of the parameter. Thus, a large number of specific values of the parameter are determined. A large number of machine learning models are built based on the specific values of the parameter. Learning results of the large number of machine learning models are evaluated. A finally employed specific value of the parameter, that is, a specific machine learning model is consequently determined.</p><p id="p-0078" num="0082">The number of determined specific values of the parameter depends on computing resources of the client terminal <b>3</b><i>a </i>which the user <b>4</b><i>a </i>can allow. When a sufficient time and a sufficient calculation performance of the client terminal <b>3</b><i>a </i>can be secured, an increase in the number of specific values of the parameter can be allowed. The number is determined in consideration of the allowable time and cost otherwise. This number may suitably be set by the user <b>4</b><i>a</i>, and it is considered that the number is several tens to several tens of thousands. However, the number is not particularly limited.</p><p id="p-0079" num="0083">Subsequently, the learning module <b>301</b> of the machine learning engine <b>303</b> of the client terminal <b>3</b><i>a </i>applies the determined specific values of the parameter to the selected template, to thereby build machine learning models. When a plurality of machine learning models are built, specific teaching data input from the teaching data input module <b>304</b> is applied to each machine learning model, to thereby execute the machine learning (Step S<b>107</b>).</p><p id="p-0080" num="0084">Specific verification data input from the verification data input module <b>305</b> is applied by the evaluation module <b>302</b> of the machine learning engine <b>303</b> to each machine learning model after the machine learning, to thereby evaluate a result of the machine learning (Step S<b>108</b>). This evaluation may be executed by, as an example, calculating the correct answer rate of the output from the machine learning model with respect to the correct answer prepared in the verification data. Thus, when a plurality of built and learned machine learning models exist, a plurality of evaluations also exist.</p><p id="p-0081" num="0085">The evaluations of the machine learning models are used for the determination of the machine learning model in the model determination module <b>310</b> of the client terminal <b>3</b><i>a </i>(Step S<b>109</b>). In the model determination module <b>310</b>, a machine learning model having the highest evaluation, that is, having obtained the highest achievement is simply determined as a model to be employed. Other implementations can be conceived, for example, such implementation that a plurality of machine learning models having higher evaluations are presented as candidates to the user <b>4</b><i>a </i>for selection.</p><p id="p-0082" num="0086">Simultaneously, the evaluations of the machine learning are transmitted to the server <b>2</b> together with the specific values of the parameter used to build respective machine learning models, and the evaluations are then acquired by the server <b>2</b> (Step S<b>110</b>). The transmitted evaluations are used to update the evaluation information on the machine learning models in the evaluation information update module <b>203</b> of the server <b>2</b> (Step S<b>111</b>). The evaluations transmitted to the server <b>2</b> at this time may further be used to update the template stored in the template database <b>201</b> as indicated by the arrow of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. A relationship between the evaluations of the machine learning and the template is described later.</p><p id="p-0083" num="0087"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic diagram for illustrating the processing executed in Step S<b>107</b> to Step S<b>111</b> of the flow of <figref idref="DRAWINGS">FIG. <b>4</b></figref> in line with the machine learning models to be built. In <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a state in which the machine learning models are built and a model finally employed is determined in a sequence of part (a) to part (e) of <figref idref="DRAWINGS">FIG. <b>6</b></figref> is schematically illustrated.</p><p id="p-0084" num="0088">Processing steps of part (a) and part (b) of <figref idref="DRAWINGS">FIG. <b>6</b></figref> are processing steps of building the machine learning models in the learning module <b>301</b> of the machine learning engine <b>303</b> of the client terminal <b>3</b><i>a </i>in Step S<b>107</b>. First, in the processing step of part (a) of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, one or a plurality of specific values of the parameter, which are &#x201c;n&#x201d; parameters of a parameter <b>1</b> to a parameter &#x201c;n&#x201d; of part (a) of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, determined by the parameter determination module <b>307</b> are applied to the template selected in the template/evaluation information selection module <b>204</b>.</p><p id="p-0085" num="0089">This application of the parameter <b>1</b> to the parameter &#x201c;n&#x201d; to the template is now described as a specific example of the information processing. An object which defines a method for operating data formats and data of the machine learning model is defined in the template. The learning module <b>301</b> applies the specific value of the parameter to this object to generate an instance being a dataset of this object on a memory of the client terminal <b>3</b>.</p><p id="p-0086" num="0090">As a result, a model <b>1</b> to a model &#x201c;n&#x201d; being &#x201c;n&#x201d; machine learning models are generated on the memory of the client terminal <b>3</b> as illustrated in part (b) of <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0087" num="0091">Further, as illustrated in part (c) of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the learning module <b>301</b> applies the specific teaching data prepared by the user <b>4</b><i>a </i>to each of the generated model <b>1</b> to model &#x201c;n,&#x201d; to thereby execute the machine learning. A specific method of the machine learning depends on the type of the used machine learning model. As the method of the information processing, when a method for the machine learning is defined in the object being an origin of the model <b>1</b> to the model &#x201c;n,&#x201d; and the learning module <b>301</b> executes this method in the machine learning, it is not required to describe a program for the machine learning for each type of the machine learning model in the learning module <b>301</b>. Further, such excellent extension capability that a template including a type of a new machine learning model can be suitably added and changed, for example, is provided.</p><p id="p-0088" num="0092">After that, in Step S<b>108</b>, as illustrated in part (d) of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the specific verification data prepared by the user <b>4</b><i>a </i>is applied by the evaluation module <b>302</b> to each of the learned model <b>1</b> to the learned model &#x201c;n,&#x201d; and the learning results thereof are then evaluated. Each evaluation is quantitatively executed, and &#x201c;n&#x201d; evaluations of an evaluation <b>1</b> to an evaluation &#x201c;n&#x201d; corresponding to the model <b>1</b> to the model &#x201c;n&#x201d; are obtained.</p><p id="p-0089" num="0093">The evaluation <b>1</b> to the evaluation &#x201c;n&#x201d; obtained in the processing step of part (d) of <figref idref="DRAWINGS">FIG. <b>6</b></figref> are transmitted to the server <b>2</b> in Step S<b>110</b>, and are used for the update of the evaluation information in Step S<b>111</b> as already described above. Meanwhile, in Step S<b>109</b>, the model determination module <b>310</b> of the client terminal refers to the evaluation <b>1</b> to the evaluation &#x201c;n&#x201d; to determine a model &#x201c;p&#x201d; being a machine learning model having obtained the best achievement as illustrated in part (e) of <figref idref="DRAWINGS">FIG. <b>6</b></figref>. The user <b>4</b><i>a </i>can set the model &#x201c;p&#x201d; determined as described above as the model to be employed, to thereby use the machine learning for the desired application.</p><p id="p-0090" num="0094">As described above, in the machine learning model determination system <b>1</b>, the user <b>4</b><i>a </i>specifies the application for which the user <b>4</b><i>a </i>intends to use the machine learning and other conditions, to thereby automatically generate a plurality of candidates of the machine learning model considered as appropriate. The user <b>4</b><i>a </i>then automatically executes the learning and the evaluation, and can identify and use the machine learning model having obtained a good achievement. Thus, a skilled engineer familiar with the technology of the machine learning is not required, and the user <b>4</b><i>a </i>can build and use an excellent machine learning model. Moreover, the results of the learning and the evaluation are used for the update of the evaluation information. As more machine learning models are built, a probability that an excellent machine learning model is generated increases. Thus, as the use of the machine learning model determination system <b>1</b> progresses, a machine learning model which exhibits a good achievement can be obtained in a shorter time and at lower load.</p><p id="p-0091" num="0095">With reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref> to <figref idref="DRAWINGS">FIGS. <b>11</b></figref>, description is now given of a specific implementation example of the determination of the specific values of the parameter in the parameter determination module <b>307</b>. <figref idref="DRAWINGS">FIG. <b>7</b>(<i>a</i>)</figref> is a conceptual diagram of selection probability information included in the evaluation information associated with the template selected by the template/evaluation information selection module <b>204</b>.</p><p id="p-0092" num="0096">The selection probability information in this example is a probability density function. That is, &#x201c;x&#x201d; assigned to the horizontal axis of <figref idref="DRAWINGS">FIG. <b>7</b>(<i>a</i>)</figref> is a parameter to be determined. Further, P(x) assigned to the vertical axis is a value of the probability density function of the value of this parameter. A section [a, b] is given as a significant range of the parameter, and hence P(x) is defined in this section. For the convenience of description, the parameter &#x201c;x&#x201d; is illustrated as one dimensional in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. However, a plurality of parameters may be determined, and hence the parameter &#x201c;x&#x201d; may be a vector quantity. The horizontal axis of <figref idref="DRAWINGS">FIG. <b>7</b></figref> indicates a parameter space of any dimension, and the section [a, b] indicates a region in this parameter space.</p><p id="p-0093" num="0097">An integral of the probability density function P(x) is generally <b>1</b> in its domain [a, b] as given by the following expression (this state is referred to as the probability density function P(x) being normalized).</p><p id="p-0094" num="0098">However, as described later, the probability density function P(x) included in the evaluation information in this embodiment is not necessarily stored in the normalized form, and is not always required to be normalized.</p><p id="p-0095" num="0099">Incidentally, the parameter determination module <b>307</b> determines a specific value X of the parameter included in the section [a, b] in accordance with the probability density function included in the evaluation information. This determination is probabilistically made. When &#x201c;n&#x201d; specific values of the parameter are determined as X<sub>1</sub>, X<sub>2</sub>, X<sub>3</sub>, . . . , X<sub>n</sub>, the specific values of the parameter are different from one another unless accidental coincidence occurs. The distribution of the specific values of the parameter follows the probability density function P(x). As described above, the parameter determination module <b>307</b> probabilistically determines the specific values of the parameter based on the evaluation information. Thus, the evaluation information includes the selection probability information indicating the probability that the specific value of the parameter is selected. The probability density function described here is an example of the selection probability information.</p><p id="p-0096" num="0100">A specific method of defining the specific value of the parameter from the selection probability information may be any method. As an example thereof, a method of using a cumulative distribution function is described. <figref idref="DRAWINGS">FIG. <b>7</b>(<i>b</i>)</figref> is a graph for showing a cumulative distribution function F(x) of the probability density function P(x) of <figref idref="DRAWINGS">FIG. <b>7</b>(<i>a</i>)</figref>. The cumulative distribution function F(x) is also defined in the section [a, b], and is given as follows.</p><p id="p-0097" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mrow>  <mtext>	</mtext>  <mrow>   <mrow>    <mi>F</mi>    <mo>&#x2061;</mo>    <mo>(</mo>    <mi>x</mi>    <mo>)</mo>   </mrow>   <mo>=</mo>   <mrow>    <msubsup>     <mo>&#x222b;</mo>     <mstyle><mtext>?</mtext></mstyle>     <mstyle><mtext>?</mtext></mstyle>    </msubsup>    <mrow>     <mrow>      <mi>P</mi>      <mtext>&#x2009;</mtext>      <mo>(</mo>      <mstyle><mtext>?</mtext></mstyle>      <mo>)</mo>     </mrow>     <mo>&#x2062;</mo>     <mi>d</mi>     <mstyle><mtext>?</mtext></mstyle>    </mrow>   </mrow>  </mrow> </mrow></math></maths><maths id="MATH-US-00002-2" num="00002.2"><math overflow="scroll"> <mrow>  <mstyle><mtext>?</mtext></mstyle>  <mtext mathsize="6pt">indicates text missing or illegible when filed</mtext> </mrow></math></maths></p><p id="p-0098" num="0000">A range thereof is [0, S] when S is given as follows.</p><p id="p-0099" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mrow>  <mtext>	</mtext>  <mrow>   <mi>S</mi>   <mo>=</mo>   <mrow>    <msubsup>     <mo>&#x222b;</mo>     <mstyle><mtext>?</mtext></mstyle>     <mstyle><mtext>?</mtext></mstyle>    </msubsup>    <mrow>     <mrow>      <mi>P</mi>      <mo>&#x2061;</mo>      <mo>(</mo>      <mi>x</mi>      <mo>)</mo>     </mrow>     <mo>&#x2062;</mo>     <mi>dx</mi>     <mtext>&#x2009;</mtext>    </mrow>   </mrow>  </mrow> </mrow></math></maths><maths id="MATH-US-00003-2" num="00003.2"><math overflow="scroll"> <mrow>  <mstyle><mtext>?</mtext></mstyle>  <mtext mathsize="6pt">indicates text missing or illegible when filed</mtext> </mrow></math></maths></p><p id="p-0100" num="0000">When P(x) is normalized, S is 1.</p><p id="p-0101" num="0101">In this case, when a random number &#x201c;p&#x201d; is generated between 0 to S, and the specific value X of the parameter is determined as a value of &#x201c;x&#x201d; at the time when the random number &#x201c;p&#x201d; crosses F(x), X follows the probability distribution defined by the probability density function P(x).</p><p id="p-0102" num="0102">When the specific value X of the parameter is determined as described above, a value X corresponding to a large value of the probability density function P(X) is more likely to be selected. A value X corresponding to a small value of the probability density function P(X) is less likely to be selected. Thus, a machine learning model exhibiting a good achievement in a shorter time at lower load is obtained by defining the probability density function P(x) such that a specific value of the parameter having a high likelihood of obtaining a high evaluation as a result of the machine learning is more likely to be selected, and a specific value of the parameter having a high likelihood of not obtaining a high evaluation as a result of the machine learning is less likely to be selected.</p><p id="p-0103" num="0103">However, it is difficult to provide, in advance, a shape of an ideal probability density function P(x). Thus, in the machine learning model determination system <b>1</b> according to this embodiment, the probability density function P(x) is caused to approach an ideal shape by using the evaluation of the learning result of the machine learning by the user <b>4</b> to successively update the probability density function P(x). That is, as a larger number of learning results of the machine learning by the user <b>4</b> are obtained, the probability density function P(x) is updated to such a shape that a specific value of the parameter having a high likelihood of obtaining a high evaluation as a result of the machine learning is more likely to be selected.</p><p id="p-0104" num="0104"><figref idref="DRAWINGS">FIG. <b>8</b></figref> are schematic graphs for showing an example of the update of the probability density function P(x). <figref idref="DRAWINGS">FIG. <b>8</b>(<i>a</i>)</figref> shows the probability density function P(x) before the update as the solid line. In this case, it is assumed that a learning result corresponding to a specific value &#x201c;c&#x201d; of the parameter determined by using this probability density function P(x) obtains high evaluation. In <figref idref="DRAWINGS">FIG. <b>8</b>(<i>a</i>)</figref>, the fact that the specific value &#x201c;c&#x201d; of the parameter obtains the high evaluation is indicated as the black solid vertical bar in order to facilitate understanding. The vertical axis for the probability density function P(x) and the vertical axis for the specific value &#x201c;c&#x201d; of the parameter are not necessarily to the same scale.</p><p id="p-0105" num="0105">The evaluation information update module <b>203</b> generates an update curve of the probability density function P(x) as indicated as the broken line of <figref idref="DRAWINGS">FIG. <b>8</b>(<i>b</i>)</figref> based on the evaluation obtained by the specific value &#x201c;c&#x201d; of the parameter. In this case, the update curve is a normal distribution centered around &#x201c;c.&#x201d; At this time, it is preferred that a value of a variance &#x3c3;<sup>2 </sup>be appropriately defined in accordance with a magnitude of the section [a, b] of the parameter. Moreover, it is preferred that a weight, that is, a magnitude in a vertical-axis direction of the update curve be adjusted by multiplying an appropriate coefficient &#x201c;k&#x201d; corresponding to the evaluation obtained by the specific value &#x201c;c&#x201d; of the parameter. That is, it is preferred that, as the evaluation of the result of the machine learning is higher, the probability density function P(x) be changed more.</p><p id="p-0106" num="0106">For example, when the evaluation of the machine learning is based on a correct answer rate &#x201c;a&#x201d; for the specific verification data, and a machine learning model having a correct answer rate of 70% or more is affirmatively evaluated, the update curve is given by the following expression.</p><p id="p-0107" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>kN</i>(<i>c,&#x3c3;</i><sup>2</sup>);<i>k=a&#x2212;</i>0.7<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0108" num="0107">After that, as shown in <figref idref="DRAWINGS">FIG. <b>8</b>(<i>c</i>)</figref>, the probability density function P(x) before the update and the update curve are added to each other in the section [a, b], to thereby obtain a new probability density function P(x) after the update indicated as the thick line. In <figref idref="DRAWINGS">FIG. <b>8</b>(<i>c</i>)</figref>, the probability density function P(x) after the update is normalized, and hence the value of the probability density function P(x) increases near the specific value &#x201c;c&#x201d; of the parameter which obtains the high evaluation, and the value of the probability density function P(x) decreases in portions apart from &#x201c;c.&#x201d;</p><p id="p-0109" num="0108">In the example of the update curve exemplified above, when the correct answer rate &#x201c;a&#x201d; is just 70%, the probability density function P(x) is not updated. When the correct answer rate &#x201c;a&#x201d; exceeds 70%, the value of the probability density function P(x) is changed toward a direction of increase for the specific value &#x201c;c&#x201d; of the parameter and values in the vicinity thereof. Meanwhile, when the correct answer rate &#x201c;a&#x201d; falls below 70%, the value of the probability density function P(x) is changed toward a direction of decrease for the specific value &#x201c;c&#x201d; of the parameter and the values in the vicinity thereof (due to a downward convex shape of the update curve). That is, the value of the probability density function P(x) included in the selection probability information is changed toward the same direction for this specific value &#x201c;c&#x201d; of the parameter and the values in the vicinity thereof based on the result of the machine learning for the specific value &#x201c;c&#x201d; of the parameter.</p><p id="p-0110" num="0109">The reason is for this as follows. When the parameter has a continuous property, it is predicted that influence on the machine learning at the certain specific value &#x201c;c&#x201d; of the parameter and influence on the machine learning at values in the vicinity of this specific value &#x201c;c&#x201d; have similar properties. As a result, it is predicted that, when a good achievement is obtained for the specific value &#x201c;c,&#x201d; a good achievement is also obtained for the values in the vicinity thereof. Conversely, it is predicted that, when a bad achievement is obtained for the specific value &#x201c;c,&#x201d; a bad achievement is also obtained for the values in the vicinity thereof.</p><p id="p-0111" num="0110">Thus, the normal distribution is used as the update curve in the description given above, but it is not always required to use the normal distribution. As long as a curve can have influence on the probability density function P(x) after the update in the same direction for the specific value &#x201c;c&#x201d; of the parameter and the values in the vicinity thereof, any curve can be selected. Moreover, &#x201c;curve&#x201d; herein is a usage in the general sense, and includes a &#x201c;curve&#x201d; formed of a straight line. Such a &#x201c;curve&#x201d; may be, for example, a curve having a triangular waveform or a curve having a shape of stairs.</p><p id="p-0112" num="0111">The fact that the parameter has the continuous property herein means that different values of the parameter of the same type present a quantitative difference, and it is not required the parameter itself be treated as continuous. As an actual problem, the values of the parameter are treated as a set of discrete values in digital processing performed in a computer. This treatment itself does not have influence on the continuous property of this parameter.</p><p id="p-0113" num="0112">Meanwhile, depending on the parameter, there is considered a case in which a parameter does not have the continuous property, but has the discrete property. The state in which the parameter has the discrete property is considered as a state in which different values of the parameter of the same type present a qualitative difference. A direct relationship is not observed among different values of this parameter. As an example of the discrete parameter, for example, a parameter which specifies a type of calculation processing in the machine learning can be given. Specifically, types of optimizer (types in method, such as momentum, AdaGrad, AdaDelta, and Adam) and types of learning (types in method, such as batch learning, mini-batch learning, and online learning) are representative.</p><p id="p-0114" num="0113">When a parameter has the above-mentioned discrete property, it is considered that correlation does not exist between the specific value &#x201c;c&#x201d; of the parameter and another value adjacent to the value &#x201c;c&#x201d; (for example, in a case in which the parameter is the above-mentioned parameter which specifies the type of optimizer, when the momentum is assigned to the specific value &#x201c;c&#x201d; of the parameter, an optimizer assigned to another value in the vicinity of adjacent to the value &#x201c;c&#x201d; can suitably be defined, and it is apparent that correlation does not exist therebetween). For such a parameter, there is no significance for the configuration of changing, based on the evaluation of the machine learning obtained for the specific value &#x201c;c&#x201d; of the parameter, the evaluation information on the values of the parameter in the vicinity of the value &#x201c;c&#x201d; toward the same direction, and hence this configuration is not considered as appropriate.</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>9</b></figref> are schematic graphs for showing an example of the update of the evaluation information for a parameter having the discrete property. It is assumed that the parameter takes, as the value &#x201c;x&#x201d; thereof, any one of five values of &#x201c;a&#x201d; to &#x201c;e.&#x201d; The vertical axis represents a selection probability P&#x2032;(x) for the value &#x201c;x,&#x201d; and is not a continuous function.</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>9</b>(<i>a</i>)</figref> shows selection probabilities for the values of &#x201c;a&#x201d; to &#x201c;e&#x201d; of the parameter as a graph of outlined vertical bars. When P&#x2032;(x) is normalized, a total sum of P&#x2032;(a) to P&#x2032;(e) is 1. It is assumed that the machine learning is executed at the specific value &#x201c;d&#x201d; of the parameter, and a high evaluation is obtained. This high evaluation is indicated as the black solid vertical bar of <figref idref="DRAWINGS">FIG. <b>9</b>(<i>a</i>)</figref> as in the above-mentioned example.</p><p id="p-0117" num="0116">In this case, as shown in <figref idref="DRAWINGS">FIG. <b>9</b>(<i>b</i>)</figref>, the evaluation information update module <b>203</b> increases the selection probability P&#x2032;(x) for the value &#x201c;d&#x201d; of the parameter in accordance with the evaluation of the result of the machine learning thereof, and equally decreases the selection probability for each of the other values &#x201c;a,&#x201d; &#x201c;b,&#x201d; &#x201c;c,&#x201d; and &#x201c;e&#x201d; of the parameter. <figref idref="DRAWINGS">FIG. <b>9</b>(<i>b</i>)</figref> shows change amounts of the selection probability P&#x2032;(x) as broken lines, and shows directions of the changes as the arrows. An example of this update may be given as below through use of the correct answer rate &#x201c;a&#x201d; obtained as a result of the machine learning and any coefficient &#x201c;l&#x201d; when a change amount of the selection probability P&#x2032;(x) is &#x394;P&#x2032;(x), the total number of parameters is &#x201c;n,&#x201d; the parameter used for the machine learning is X<sub>specific</sub>, and other parameters are x<sub>other</sub>.</p><p id="p-0118" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mrow>  <mrow>   <mi>&#x394;</mi>   <mo>&#x2062;</mo>   <mrow>    <msup>     <mi>P</mi>     <mo>&#x2032;</mo>    </msup>    <mo>(</mo>    <msub>     <mi>x</mi>     <mi>specific</mi>    </msub>    <mo>)</mo>   </mrow>  </mrow>  <mo>=</mo>  <mrow>   <mi>l</mi>   <mo>&#x2061;</mo>   <mo>(</mo>   <mrow>    <mi>a</mi>    <mo>-</mo>    <mn>0.7</mn>   </mrow>   <mo>)</mo>  </mrow> </mrow></math></maths><maths id="MATH-US-00004-2" num="00004.2"><math overflow="scroll"> <mrow>  <mrow>   <mi>&#x394;</mi>   <mo>&#x2062;</mo>   <mrow>    <msup>     <mi>P</mi>     <mo>&#x2032;</mo>    </msup>    <mo>(</mo>    <msub>     <mi>x</mi>     <mi>other</mi>    </msub>    <mo>)</mo>   </mrow>  </mrow>  <mo>=</mo>  <mrow>   <mfrac>    <mn>1</mn>    <mrow>     <mi>n</mi>     <mo>-</mo>     <mn>1</mn>    </mrow>   </mfrac>   <mo>&#x2062;</mo>   <mi>&#x394;</mi>   <mo>&#x2062;</mo>   <mrow>    <msup>     <mi>P</mi>     <mo>&#x2032;</mo>    </msup>    <mo>(</mo>    <msub>     <mi>x</mi>     <mrow>      <mi>specific</mi>      <mo>)</mo>     </mrow>    </msub>   </mrow>  </mrow> </mrow></math></maths></p><p id="p-0119" num="0117">In the above-mentioned method, it is only required to appropriately correct the selection probability P&#x2032;(x) when the selection probability P&#x2032;(x) for the specific value &#x201c;x&#x201d; of the parameter exceeds 1 or falls below 0. Moreover, an upper limit value and a lower limit value may be provided to the value of P&#x2032;(x). As another example, in place of the method of adding &#x394;P&#x2032;(x) to update P&#x2032;(x), P&#x2032;(x) may be changed based on a rate corresponding to the evaluation of the learning result or other methods may be used.</p><p id="p-0120" num="0118">The update of the evaluation information by the evaluation information update module <b>203</b> in this embodiment is executed independently of the evaluation of the learning result, and hence the update is executed not only when a positive evaluation is obtained, but also when a negative evaluation is obtained. In place of this update, the evaluation information may be updated only when a specific evaluation is obtained. For example, the evaluation information may be updated only when a good achievement is obtained (as an example, when the correct answer rate is 80% or more) as the evaluation of the learning result. In any case, the evaluation information is quickly updated by updating the evaluation information based on each of or a plurality of obtained machine learning results.</p><p id="p-0121" num="0119">As already described above, the shapes of the probability density function P(x) and the selection probability P&#x2032;(x) included in the evaluation information come to be determined as the evaluation of the result of the machine learning is repeatedly obtained. Thus, at an initial time point when the operation of the machine learning model determination system <b>1</b> is started, the shapes of the probability density function P(x) and the selection probability P&#x2032;(x) are unknown, and any initial shapes may be given to the probability density function P(x) and the selection probability P&#x2032;(x). As an example of the initial shape, a shape having an equivalent probability over an entire section of the parameter is given.</p><p id="p-0122" num="0120">The above description is given of the case in which only one template is selected by the template/evaluation information selection module <b>204</b>, and only one piece of the evaluation information is thus selected. However, depending on the machine learning model determination system <b>1</b>, a plurality of templates and a plurality of pieces of evaluation information corresponding to the templates may be selected. It is possible to search a wider range for machine learning models providing high evaluations of results of the machine learning by allowing the selection of a plurality of templates. Description is now given of a determination method for templates and specific values of parameters to be used to build machine learning models when a plurality of templates and a plurality of pieces of evaluation information are selected by the template/evaluation information selection module <b>204</b>.</p><p id="p-0123" num="0121">The template/evaluation information selection module <b>204</b> selects one or a plurality of templates based on the conditions specified by the user and acquired from the condition input module <b>306</b>. At this time, as the plurality of templates, when &#x201c;n&#x201d; templates of a template 1, a template 2, . . . , and a template &#x201c;n&#x201d; are selected as the plurality of templates, in order to build one machine learning model in the learning module <b>301</b> of the machine learning engine <b>303</b>, it is required to determine a template and specific values of the parameter to be used for the building. Various methods are conceivable as the determination method, and examples of the method are now described.</p><p id="p-0124" num="0122">A method described first is a method of selecting one template of the plurality of templates, and then using the evaluation information on this template to determine specific values of a parameter. When this method is employed, it is desired that a score indicating an evaluation of a template itself be assigned to each template.</p><p id="p-0125" num="0123">The score of the template is defined based on an evaluation of a result of the machine learning executed by a machine learning model built by using this template. As a specific example, the highest evaluation of evaluations of results of the machine learning using this template may be employed as the score. When the evaluation is the correct answer rate, the maximum value of the correct answer rates is employed as the score.</p><p id="p-0126" num="0124">Another value may be employed as the score. For example, an average value of a predetermined number of last evaluations of the learning results or an average value of a predetermined number of highest evaluations may be employed as the score. In any case, the score is an index defined based on such a criterion that a higher score is assigned as a high evaluation is more likely to be obtained when this template is used to build a machine learning model based on a past achievement and the machine learning is executed.</p><p id="p-0127" num="0125">This score is linked to each template, and is stored in the template database <b>201</b>. As an example, the scores are defined as follows.</p><p id="p-0128" num="0126">Template 1: 65</p><p id="p-0129" num="0127">Template 2: 80</p><p id="p-0130" num="0128">. . .</p><p id="p-0131" num="0129">Template &#x201c;n&#x201d;: 75</p><p id="p-0132" num="0130">As the method of determining a template to be used, the following methods are conceivable, and any one of the methods may be employed.</p><p id="p-0133" num="0131">(1) Selecting a template having the highest score (highest evaluation)</p><p id="p-0134" num="0132">(2) Probabilistically selecting a template based on the score</p><p id="p-0135" num="0000">In the case of the method (2), it is only required to set a probability that a certain template is selected as follows.</p><p id="p-0136" num="0000"><maths id="MATH-US-00005" num="00005"><math overflow="scroll"> <mfrac>  <mrow>   <mi>Score</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>of</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>specific</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>template</mi>  </mrow>  <mrow>   <mi>Sum</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>of</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>scores</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>of</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>plurality</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>of</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>selected</mi>   <mo>&#x2062;</mo>   <mtext>   </mtext>   <mi>templates</mi>  </mrow> </mfrac></math></maths></p><p id="p-0137" num="0133">Moreover, it is desired that the score be updated to the newest score reflecting a result of the machine learning each time the result is obtained. Thus, as illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the evaluation of the result of the machine learning obtained by the evaluation module <b>302</b> of the machine learning engine <b>303</b> is transmitted to the template database <b>201</b>, and is used to update the score of the template which has been used to build the machine learning model.</p><p id="p-0138" num="0134">A method described now is a method of assigning a ratio of using each template of a plurality of templates. As described above, the parameter determination module <b>307</b> usually determines a plurality of specific values of a parameter in order to build a large number of machine learning models. The number of specific values of the parameter to be determined is defined in accordance with computing resources prepared by the user <b>4</b>. For example, a number such as 100 or 1,000 is selected.</p><p id="p-0139" num="0135">This number is distributed to the number of machine learning models to be built through use of a certain template in accordance with the score of the selected template. When the distribution is proportional to the scores in this method, a ratio of the numbers of the machine learning models built by using the respective templates in the case of the above-mentioned example of scores is given as &#x201c;template 1:template 2: . . . :template n=65:85: . . . :n.&#x201d;</p><p id="p-0140" num="0136">After that, when a certain template is used to build machine learning models, a selection criterion corresponding to this template is used to determine specific values of a parameter, and hence the specific value of the parameter is determined the number of times proportional to the ratio corresponding to the score of each template by using the selection criterion corresponding to this template.</p><p id="p-0141" num="0137">When the score is not assigned to each template, it is only required to equally assign the number of times of determining the specific value of the parameter to each selected template.</p><p id="p-0142" num="0138">A method described lastly is a method of directly determining specific values of a parameter and a template to be used based on a plurality of selection criteria corresponding to a plurality of selected templates. In this method, a plurality of probability density functions P(x) included in the above-mentioned selection criteria are used to probabilistically determine the specific values of the parameter, and templates to be used are accordingly determined.</p><p id="p-0143" num="0139">For the convenience of description, it is assumed that a template 1 and a template 2 are selected. <figref idref="DRAWINGS">FIG. <b>10</b></figref> are graphs for showing a determination method for the specific values of the parameter through this method. <figref idref="DRAWINGS">FIG. <b>10</b>(<i>a</i>)</figref> shows an example of a cumulative distribution function F(x) in the evaluation information on the template 1. <figref idref="DRAWINGS">FIG. <b>10</b>(<i>b</i>)</figref> shows an example of a cumulative distribution function F&#x2032;(x) in the evaluation information on the template 2. The cumulative distribution function F(x) is defined in a section [a, b]. The cumulative distribution function F&#x2032;(x) is defined in a section [a&#x2032;, b&#x2032;]. The section [a, b] and the section [a&#x2032;, b&#x2032;] may match each other, but are not always required to match each other. Moreover, a terminal value F(b) of the cumulative distribution function F(x) is represented by S. A terminal value F&#x2032;(b&#x2032;) of the cumulative distribution function F&#x2032;(x) is represented by S&#x2032;. The values S and S&#x2032; are not always required to match each other. However, when probability density functions P(x) and P&#x2032;(x), which are origins of the cumulative distribution functions F(x) and F&#x2032;(x), respectively, are normalized, S=S&#x2032;=1.</p><p id="p-0144" num="0140">As shown in <figref idref="DRAWINGS">FIG. <b>10</b>(<i>c</i>)</figref>, the two cumulative distribution functions F(x) and F&#x2032;(x) are connected so that F(x) and F&#x2032;(x) are continuous for the parameter &#x201c;x,&#x201d; to thereby obtain a connected cumulative distribution function F&#x2033; (x). The connected cumulative distribution function F&#x2033;(x) is a monotonically increasing function defined in a section [a, b&#x2032;] obtained by connecting the section [a, b] and the section [a&#x2032;, b&#x2032;] of the cumulative distribution functions F(x) and F&#x2032;(x), and a terminal value F&#x2033;(b&#x2032;) is represented by S&#x2033;.</p><p id="p-0145" num="0141">In this case, S&#x2033; may simply be set to S+S&#x2032;. However, when the score is assigned to each of the selected templates, it is preferred that widths of ranges corresponding to the original cumulative distribution functions F(x) and F&#x2032;(x) in the connected cumulative distribution function F&#x2033;(x) correspond to the scores. For example, it is only required to set a ratio between a width (i) of the range of the cumulative distribution function F(x) in the connected cumulative distribution function F&#x2033;(x) of <figref idref="DRAWINGS">FIG. <b>10</b>(<i>c</i>)</figref> and a width (ii) of the range of the cumulative distribution function F&#x2032;(x) in the connected cumulative distribution function F&#x2033;(x) to a ratio between the scores of the respective corresponding templates.</p><p id="p-0146" num="0142">Specifically, when the score of the template 1 is 80 and the score of the template 2 is 60, the ranges are adjusted so that &#x201c;(i):(ii)=80:60&#x201d; is achieved. The cumulative distribution functions F(x) and F&#x2032;(x) are then connected to obtain the connected cumulative distribution function F&#x2033;(x).</p><p id="p-0147" num="0143">After that, it is only required that, in the parameter determination module <b>307</b>, a random number be generated in the range of from 0 to S&#x2033;, an intersection with the connected cumulative distribution function F&#x2033;(x) be obtained, to thereby determine a specific value of the parameter, and a template to be used be simultaneously selected in accordance with the original cumulative distribution function F(x) or F&#x2032;(x) to which this specific value of the parameter belongs.</p><p id="p-0148" num="0144">With this method, a specific value of a parameter is probabilistically determined across a plurality of templates. Moreover, a probability that each template and a specific value of a parameter belonging to this template are determined corresponds to the score assigned to this template. When a score is not assigned to a template, it is only required that the widths of the ranges of the respective cumulative distribution functions F(x) forming the connected cumulative distribution function F&#x2033;(x) be equal to one another.</p><p id="p-0149" num="0145">The machine learning model determination system <b>1</b> can use the above-mentioned various methods to select the template stored in the template database <b>201</b>, can determine a specific value of a parameter based on the evaluation information associated with the selected template, can build a machine learning model, and can evaluate a learning result thereof. After that, the evaluation information is repeatedly updated based on the evaluation of this learning result, and it is expected that the accuracy of the determination of the value of the parameter continuously increase.</p><p id="p-0150" num="0146">Incidentally, as described above, it is difficult to predict the evaluation of the learning result directly from the value of the parameter in many cases. The reason for this is as follows. It is considered that, for a specific value of the parameter which has been used frequently to repeatedly build machine learning models by the machine learning model determination system <b>1</b> and values in the vicinity thereof, evaluations of the results of the machine learning are rationally predicted at a certain degree. However, it is considered that other values, that is, a value which has not been used or has less frequently been used as a specific value of the parameter and values in the vicinity thereof often mean that the evaluations of the results of the machine learning cannot be predicted.</p><p id="p-0151" num="0147">Moreover, as described above, the machine learning model determination system <b>1</b> updates the evaluation information so that the specific value of the parameter and the values in the vicinity thereof are more likely to be selected based on the results of the machine learning which have already been obtained. For a specific value of the parameter which has not been used or has less frequently been used and values in the vicinity thereof, the probability of the determination for building machine learning models decreases. As a result, when a specific value of the parameter which obtains a high evaluation higher than a certain level is once found, it is predicted that a value of the parameter different from this value comes to be less likely to be selected.</p><p id="p-0152" num="0148">However, it is difficult to predict the relationship between the value of the parameter and the evaluation of the result of the machine learning, and hence there still exists a possibility that, for a specific value of the parameter which has not been used or has less frequently been used and values in the vicinity thereof, a high evaluation is obtained as a result of the machine learning. Thus, it is desired that the machine learning model determination system <b>1</b> have a configuration capable of generating a machine learning model in even such a region of the parameter, and evaluating a result thereof.</p><p id="p-0153" num="0149">Thus, as illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the machine learning model determination system <b>1</b> according to this embodiment includes the ratio setting module <b>309</b>. The ratio setting module <b>309</b> defines a predetermined ratio. The parameter determination module <b>307</b> preferentially selects, at this predetermined ratio, values which have not been used for the machine learning or have been used relatively less frequently for the machine learning out of a plurality of specific values of a parameter determined by the parameter determination module <b>307</b>.</p><p id="p-0154" num="0150">Various methods can be conceived for the parameter determination module <b>307</b> to determine specific values of a parameter which have not been used for the machine learning or have been used relatively less frequently for the machine learning. Such a method may be a method exemplified in <figref idref="DRAWINGS">FIG. <b>11</b></figref>. <figref idref="DRAWINGS">FIG. <b>11</b> (<i>a</i>)</figref> is a graph for showing an example of this method. In this method, the probability density function P(x) included in the evaluation information associated with the template selected by the template/evaluation information selection module <b>204</b> is not directly used, but is inverted.</p><p id="p-0155" num="0151">In <figref idref="DRAWINGS">FIG. <b>11</b>(<i>a</i>)</figref>, the original probability density function P(x) included in the evaluation information is indicated as the dotted line. When the original probability density function P(x) is inverted about any value of the probability density indicated as the broken line, a new probability density function indicated as the solid line is obtained. When this new probability density function is used in place of the original probability density function P(x), a value of the parameter having a low probability of the selection in the original probability density function P(x) is more likely to be selected, while a value of the parameter having a high probability of the selection in the original probability density function P(x) is less likely to be selected. Moreover, a value of the parameter having a low probability of the selection in the original probability density function P(x) is considered as a value which has not been used or has less frequently been used as a specific value of the parameter or a value in the vicinity thereof. Thus, it is possible to preferentially select the value which has not been used or has been used relatively less frequently as a specific value of the parameter in the machine learning by using this new probability density function to determine a specific value of the parameter.</p><p id="p-0156" num="0152">Any value of the probability density indicated as the broken line of <figref idref="DRAWINGS">FIG. <b>11</b>(<i>a</i>)</figref> may be set as a fixed value, an average value of the original probability density function P(x), or a value obtained by multiplying the maximum value by a predetermined coefficient (for example, 0.5).</p><p id="p-0157" num="0153">As another example, a method of <figref idref="DRAWINGS">FIG. <b>11</b>(<i>b</i>)</figref> may be used. In this method, the selection probability is equally assigned to sections of the parameter &#x201c;x&#x201d; in which the value of the original probability density function P(x) is lower than any value of the probability density indicated by a broken line of <figref idref="DRAWINGS">FIG. <b>11</b> (<i>b</i>)</figref>. In <figref idref="DRAWINGS">FIG. <b>11</b> (<i>b</i>)</figref>, the selection probability after the assignment is indicated as the solid lines. Also with this method, it is possible to preferentially select a value which has not been used or has been used relatively less frequently as a specific value of the parameter in the machine learning for the same reason as that in the case described with reference to <figref idref="DRAWINGS">FIG. <b>11</b>(<i>a</i>)</figref>. Moreover, also in this method, any value of the probability density indicated as the broken line may be set as a fixed value, the average value of the original probability density function P(x), or a value obtained by multiplying the maximum value by a predetermined coefficient (for example, 0.3).</p><p id="p-0158" num="0154">The ratio setting module <b>309</b> sets the ratio of the use of the above-mentioned method of preferentially selecting a value which has not been used or has been used relatively less frequently for the machine learning for the determination of specific values of the parameter. In this case, it is considered that a value of the parameter which has not been used or has been used relatively less frequently for the machine learning may obtain a high evaluation of the result of the learning thereof, but this is not often the case. Meanwhile, it is considered that the value of the parameter which has already been used for the machine learning, and has obtained a high evaluation and values in the vicinity thereof are highly likely to obtain a high evaluation as in the past example. Thus, it is generally considered that specific values of the parameter are mostly determined by the general method, that is, the method of not using the method of preferentially selecting a value which has not been used or has been used relatively less frequently for the machine learning, and are partially determined by the method of preferentially selecting a value which has not been used or has been used relatively less frequently for the machine learning.</p><p id="p-0159" num="0155">This ratio is determined depending on an amount of computing resources which can be used for the method of preferentially selecting a value which does not necessarily highly possibly obtain a high evaluation as a result of the machine learning, and has not been used or has been used relatively less frequently for the machine learning. As one method, this ratio may be artificially defined by the user <b>4</b>. In this case, the user <b>4</b> uses an appropriate GUI of the ratio setting module <b>309</b> to specify this ratio as, for example, 5%.</p><p id="p-0160" num="0156">As another method, this ratio may be set in accordance with the number of specific values of the parameter determined by the parameter determination module <b>307</b>. It is preferred that this ratio become larger as the number of specific values of the parameter to be determined becomes larger. As a specific example, when the number of specific values of the parameter to be determined is 100, the ratio is 5%, when the number is 1,000, the ratio is 10%, and when the number is 10,000, the ratio is 20%.</p><p id="p-0161" num="0157">The reason for this is as follows. It is considered that even in a case in which the usual method is used to determine the specific values of the parameter, when a certain number of specific values of the parameter used for the machine learning do not exist, a probability that a machine learning model obtaining a sufficiently high evaluation is acquired is low. Thus, when the number of specific values of the parameter to be determined is small, it is required to secure a sufficient number of specific values of the parameter determined by the usual method. Meanwhile, when the number of specific values of the parameter to be determined is large, it is considered that the probability that a machine learning model obtaining a sufficiently high evaluation is acquired by the usual method is high. Thus, there exists room for using the method of preferentially selecting a value which has not been used or has been used relatively less frequently for the machine learning, and the number of specific values of the parameter determined by this method can be increased.</p><p id="p-0162" num="0158">Moreover, the ratio setting module <b>309</b> may allow the user <b>4</b> to select any one of the above-mentioned two methods. That is, the user <b>4</b> may freely select the method of artificially setting the above-mentioned ratio or the method of setting the ratio in accordance with the number of specific values of the parameter to be determined.</p><p id="p-0163" num="0159">With the above-mentioned configuration, the machine learning model determination system <b>1</b> comes to more efficiently and more precisely determine a machine learning model obtaining a good achievement as the plurality of users <b>4</b> more use the client terminals <b>3</b> to build machine learning models to be used for respective applications.</p><p id="p-0164" num="0160">However, from a converse point of view, when the users <b>4</b> do not build and verify machine learning models, the evaluation information stored in the evaluation information database <b>202</b> of the server <b>2</b> is not updated, and hence the efficiency and the accuracy of building machine learning models by the machine learning model determination system <b>1</b> do not change. In this case, the communication between the client terminals <b>3</b> and the server <b>2</b> is not executed, and the server <b>2</b> does not particularly have information processing to be executed relating to at least the machine learning model determination system <b>1</b>.</p><p id="p-0165" num="0161">Thus, when a load of processing executed by the server <b>2</b> is low, that is, the computing resources are surplus, the server <b>2</b> may have a configuration of updating the evaluation information through use of the computing resources by only the server <b>2</b> without intermediation of the users <b>4</b> and the client terminals <b>3</b>.</p><p id="p-0166" num="0162"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a functional block diagram for illustrating a schematic configuration of the server <b>2</b> having the configuration of solely updating the evaluation information.</p><p id="p-0167" num="0163">In this configuration, the template database <b>201</b>, the evaluation information database <b>202</b>, and the evaluation information update module <b>203</b> are the same as the components of the server <b>2</b> in the machine learning model determination system <b>1</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, and are as already described above.</p><p id="p-0168" num="0164">The server <b>2</b> further includes a resource detection module <b>205</b>. This resource detection module <b>205</b> detects the surplus computing resources of the server <b>2</b>, and detects a state in which the load on the server <b>2</b> is less than a threshold value set in advance, and the server <b>2</b> has room of the calculation processing sufficient for updating the evaluation information solely.</p><p id="p-0169" num="0165">When the resource detection module <b>205</b> detects that the server <b>2</b> has sufficient computing resources, a server-side template/evaluation information determination module <b>206</b> determines any one of the templates stored in the template database <b>201</b> and simultaneously determines evaluation information corresponding to the determined template. The template selected in this determination is a template for which common teaching data and common verification data described later are prepared. When a plurality of applicable templates exist, the templates may be selected probabilistically or in a sequence.</p><p id="p-0170" num="0166">The server-side parameter determination module <b>212</b> determines specific values of a parameter based on the selected evaluation information. This server-side parameter determination module <b>212</b> has a function equivalent to that of the parameter determination module <b>307</b> of the client terminal <b>3</b> described above. The server-side parameter determination module <b>212</b> executes the same operation.</p><p id="p-0171" num="0167">Machine learning models are built in a learning module <b>208</b> of a server-side machine learning engine <b>207</b> based on the selected template and the determined specific values of the parameter. After that, machine learning is executed through use of the common teaching data prepared and stored in advance in a common teaching data storage module <b>210</b> of the server <b>2</b>.</p><p id="p-0172" num="0168">The common teaching data is not always required to be a single piece of data for learning, and may be a plurality of pieces thereof. Common teaching data appropriate for the machine learning models built through use of the selected template is selected. When a plurality of pieces of appropriate learning data exist, it is only required to suitably select one set thereof.</p><p id="p-0173" num="0169">A result of the machine learning is evaluated in an evaluation module <b>209</b> of the server-side machine learning engine <b>207</b> through use of the common verification data prepared and stored in advance in a common verification data storage module <b>211</b> of the server <b>2</b>. Also in the case of the common verification data, the common verification data is not always required to be a single piece of data for verification, and may be a plurality of pieces thereof. Common verification data appropriate for the machine learning models built through use of the selected template is selected.</p><p id="p-0174" num="0170">The server-side machine learning engine <b>207</b>, the learning module <b>208</b>, and the evaluation module <b>209</b> described above have functions equivalent to the functions of the machine learning engine <b>303</b>, the learning module <b>301</b>, and the evaluation module <b>302</b> of the client terminal <b>3</b>, and execute the same operations as those thereof. Moreover, the common teaching data and the common verification data may be prepared by an administrator of the server <b>2</b>, or specific teaching data and specific verification data used to obtain machine learning models appropriate for a specific application of the user <b>4</b> who uses the machine learning model determination system <b>1</b> may be used as the common teaching data and the common verification data after permission from the user <b>4</b> is obtained. In this case, the machine learning model determination system <b>1</b> according to this embodiment is configured such that the user <b>4</b> cannot access the common teaching data and the common verification data stored in the common teaching data storage module <b>210</b> and the common verification data storage module <b>211</b>, respectively, and the common teaching data and the common verification data provided by a certain user <b>4</b> cannot be acquired by other users <b>4</b>.</p><p id="p-0175" num="0171">The evaluation of the result of the machine learning obtained by the evaluation module <b>209</b> is used by the evaluation information update module <b>203</b>, and is used to update the evaluation information stored in the evaluation information database <b>202</b>.</p><p id="p-0176" num="0172">As apparent from the description given above, in the server <b>2</b> of <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the series of processing steps including the selection of a template and evaluation information, the determination of specific values of a parameter, the building and the learning of machine learning models, the evaluation of learning results, and the update of the evaluation information based on the evaluation of the learning results, which are performed through the mutual communication between the server <b>2</b> and the client terminal <b>3</b> in the configuration of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, can be executed solely by the server <b>2</b>. When a surplus exists in the computing resources of the server <b>2</b>, this series of processing steps is executed by using the surplus.</p><p id="p-0177" num="0173">With the server <b>2</b> having the configuration as described above, the surplus computing resources are effectively used to update the evaluation information, thereby being capable of more efficiently and more precisely building and selecting machine learning models without an additional cost such as preparation of a computer having a high computing performance for the update of the evaluation information and without influence on the usual information processing by the server <b>2</b>.</p><p id="p-0178" num="0174">Incidentally, in the description given above, as an example of the evaluation in the evaluation module <b>302</b> of the machine learning engine <b>303</b> of the client terminal <b>3</b> and the evaluation module <b>209</b> of the server-side machine learning engine <b>207</b> of the server <b>2</b>, the correct answer rate for the verification data (common verification data in the case of the evaluation module <b>209</b> of the server-side machine learning engine <b>207</b>) is directly used.</p><p id="p-0179" num="0175">Meanwhile, as the evaluation of the result of the machine learning in the evaluation module <b>302</b> and the evaluation module <b>209</b>, an index that takes a load of the calculation and the inference by the built machine learning model into consideration may be used.</p><p id="p-0180" num="0176">A reason for the consideration of the load of the calculation and the inference for the evaluation of the result of the machine learning is as follows. That is, when the user <b>4</b> uses a machine learning model for a specific application, and can prepare a computer having a sufficient calculation performance, it is considered that a higher accuracy of the result of this machine learning model is simply better. In this case, it is not so required to consider the load of the calculation and the inference for the evaluation of the result of the machine learning.</p><p id="p-0181" num="0177">However, it is often the case that there is a trade-off relationship between the calculation performance of the computer and the cost and various conditions such as an installation condition of the computer. Thus, a computer having a sufficient calculation performance cannot always be used for an intended application of the user <b>4</b>.</p><p id="p-0182" num="0178">Moreover, of parameters influencing the result of the machine learning, there exist parameters which influence the load of the calculation and the inference of the finally obtained machine learning model, such as the number of hidden layers and the number of nodes of each layer of a neural network. As a result, there is assumed a case in which the machine learning models built and caused to learn by the machine learning model determination system <b>1</b> include both of a machine learning model which attains the highest accuracy of the result but has a high load of the calculation and the inference and a machine learning model which attains a slightly inferior accuracy of the result but has a low load of the calculation and the inference.</p><p id="p-0183" num="0179">In this case, when a difference in accuracy of the result is not practically different for the application intended by the user <b>4</b> between the two models, the machine learning model having the low load of the calculation and the inference is sometimes determined as being better as a whole. In this case, it is considered that use of an index that takes the load of the calculation and the inference into consideration for the evaluation of the result of the machine learning is appropriate.</p><p id="p-0184" num="0180">An example of such an index I may be defined, for example, as given below, where &#x201c;a&#x201d; is an index (for example, the correct answer rate for the verification data) relating to the accuracy of the result of the machine learning, L is the load of the calculation and the inference of a built machine learning model, and &#x201c;m&#x201d; and &#x201c;n&#x201d; are weighting coefficients.</p><p id="p-0185" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>I=ma&#x2212;nL </i><?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0186" num="0181">Moreover, the method of the evaluation of the result of the machine learning may vary depending on the application for which the machine learning model is to be used. Thus, as the index of the evaluation of the result of the machine learning in the evaluation module <b>302</b> and the evaluation module <b>209</b>, instead of a single index, indices of the evaluation different for each template may be used.</p><p id="p-0187" num="0182">It should be understood by those skilled in the art that various modifications, combinations, sub-combinations and alterations may occur depending on design requirements and other factors insofar as they are within the scope of the appended claims or the equivalents thereof.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001 MATH-US-00001-2" nb-file="US20230004870A1-20230105-M00001.NB"><img id="EMI-M00001" he="9.14mm" wi="76.20mm" file="US20230004870A1-20230105-M00001.TIF" alt="text missing or illegible when filed" img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002 MATH-US-00002-2" nb-file="US20230004870A1-20230105-M00002.NB"><img id="EMI-M00002" he="11.60mm" wi="76.20mm" file="US20230004870A1-20230105-M00002.TIF" alt="text missing or illegible when filed" img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003 MATH-US-00003-2" nb-file="US20230004870A1-20230105-M00003.NB"><img id="EMI-M00003" he="11.60mm" wi="76.20mm" file="US20230004870A1-20230105-M00003.TIF" alt="text missing or illegible when filed" img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004 MATH-US-00004-2" nb-file="US20230004870A1-20230105-M00004.NB"><img id="EMI-M00004" he="9.91mm" wi="76.20mm" file="US20230004870A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00005" nb-file="US20230004870A1-20230105-M00005.NB"><img id="EMI-M00005" he="6.01mm" wi="76.20mm" file="US20230004870A1-20230105-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A machine learning model determination system, comprising at least one server and at least one client terminal which are connected to an information communication network, and are enabled to communicate with each other,<claim-text>the at least one server comprising a central processing unit and a memory which are configured to:</claim-text><claim-text>store evaluation information which is information regarding an evaluation of a learning result of machine learning for a value of a parameter, the parameter influencing the learning result of the machine learning; and</claim-text><claim-text>update the evaluation information based on a specific value of the parameter and an evaluation of a learning result of the machine learning through a use of specific teaching data,</claim-text><claim-text>the at least one client terminal comprising a central processing unit and a memory which are configured to:</claim-text><claim-text>input the specific teaching data; and</claim-text><claim-text>input specific verification data,</claim-text><claim-text>wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to:</claim-text><claim-text>determine the specific value of the parameter based on the evaluation information on the machine learning to be executed;</claim-text><claim-text>execute learning for a machine learning model formed based on the specific value of the parameter through use of the specific teaching data; and</claim-text><claim-text>evaluate, through use of the specific verification data, a learning result of the machine learning of the learned machine learning model.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The machine learning model determination system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to:</claim-text><claim-text>determine a plurality of specific values of the parameter;</claim-text><claim-text>build the machine learning model for each of the plurality of specific values of the parameter;</claim-text><claim-text>evaluate the learning result of the machine learning for each of a plurality of the built machine learning models; and</claim-text><claim-text>determine at least one machine learning model from the plurality of the machine learning models based on the evaluations of the learning results of the machine learning.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The machine learning model determination system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the central processing unit and the memory of the at least one server are further configured to update the evaluation information based on each of the learning results of the machine learning acquired for the plurality of the machine learning models.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The machine learning model determination system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,<claim-text>wherein the evaluation information includes selection probability information indicating a probability of selection of the specific value of the parameter, and</claim-text><claim-text>wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to probabilistically determine the specific value of the parameter based on the selection probability information.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The machine learning model determination system according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the central processing unit and the memory of the at least one server are further configured to change a value of the selection probability information on the specific value and a value of the selection probability information on a value in a vicinity of the specific value in the selection probability information toward a same direction based on a result of the machine learning for the specific value of the parameter.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The machine learning model determination system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to preferentially select, as a predetermined ratio of the specific values, values which have not been used for the machine learning or have been used relatively less frequently for the machine learning out of the plurality of specific values of the parameter.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The machine learning model determination system according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the central processing unit and the memory of the at least one client terminal are further configured to artificially set the predetermined ratio.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The machine learning model determination system according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the central processing unit and the memory of the at least one server are further configured to set the predetermined ratio in accordance with a number of specific values of the parameter determined.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The machine learning model determination system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the central processing unit and the memory of the at least one server are further configured to:</claim-text><claim-text>store common teaching data;</claim-text><claim-text>store common verification data;</claim-text><claim-text>determine the specific value of the parameter based on the evaluation information on the machine learning to be executed in accordance with a load on the at least one server;</claim-text><claim-text>execute learning for a machine learning model formed based on the specific value of the parameter through use of the common teaching data;</claim-text><claim-text>evaluate, through use of the common verification data, a learning result of the machine learning of the learned machine learning model; and</claim-text><claim-text>update the evaluation information based on the specific value of the parameter and the learning result of the machine learning through use of the common teaching data.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The machine learning model determination system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,<claim-text>wherein the central processing unit and the memory of the at least one server are further configured to store a template for defining at least a type and form of input and output of the machine learning model to be used for the machine learning,</claim-text><claim-text>wherein the central processing unit and the memory of the at least one client terminal are further configured to input a condition for selecting the template,</claim-text><claim-text>wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to select one or a plurality of templates from a template database based on the condition, and to select one or a plurality of pieces of evaluation information on the selected one or plurality of templates from the evaluation information database,</claim-text><claim-text>wherein the central processing unit and the memory of the at least one server are further configured to store the evaluation information for each template,</claim-text><claim-text>wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to form the machine learning model based on the specific value of the parameter and the selected one or plurality of templates, and</claim-text><claim-text>wherein the central processing unit and the memory of the at least one server are further configured to update the evaluation information on the selected one or plurality of templates.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The machine learning model determination system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>,<claim-text>wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to:</claim-text><claim-text>select the one or the plurality of templates based on the condition; and</claim-text><claim-text>determine the template to be used and the specific value of the parameter based on the plurality of pieces of evaluation information on the selected plurality of templates.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The machine learning model determination system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the central processing unit and the memory of the at least one server and/or the at least one client terminal are further configured to evaluate the learning result of the machine learning based on an index that takes a calculation load on the built machine learning model into consideration.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A machine learning model determination method to be performed through an information communication network, the machine learning model determination method comprising:<claim-text>determining a specific value of a parameter based on evaluation information on machine learning which is to be executed, and is information on an evaluation of a learning result of machine learning for a value of the parameter, the parameter influencing the learning result of the machine learning;</claim-text><claim-text>forming a machine learning model based on the specific value of the parameter;</claim-text><claim-text>executing learning of the machine learning model through use of specific teaching data;</claim-text><claim-text>evaluating a learning result of the machine learning of the learned machine learning model through use of specific verification data; and</claim-text><claim-text>updating the evaluation information based on the specific value of the parameter and the evaluation of the learning result of the machine learning.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The machine learning model determination method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>,<claim-text>wherein a plurality of specific values of the parameter are determined,</claim-text><claim-text>wherein the machine learning model is built for each of the plurality of specific values of the parameter, and</claim-text><claim-text>wherein the machine learning model determination method further comprises:<claim-text>evaluating the learning result of the machine learning for each of a plurality of the built machine learning models; and</claim-text><claim-text>determining at least one machine learning model from the plurality of the machine learning models based on the evaluations of the learning results of the machine learning.</claim-text></claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A machine learning model determination system, comprising:<claim-text>at least one server and at least one client terminal which are connected to an information communication network, and are enabled to communicate with each other;</claim-text><claim-text>an evaluation information database which is included in the at least one server, and is configured to store evaluation information which is information regarding an evaluation of a learning result of machine learning for a value of a parameter, the parameter influencing the learning result of the machine learning;</claim-text><claim-text>an evaluation information update means which is included in the at least one server, and is configured to update the evaluation information based on a specific value of the parameter and an evaluation of a learning result of the machine learning through a use of specific teaching data;</claim-text><claim-text>a teaching data input means which is included in the at least one client terminal, and is configured to input the specific teaching data;</claim-text><claim-text>a verification data input means which is included in the at least one client terminal, and is configured to input specific verification data;</claim-text><claim-text>a parameter determination means configured to determine the specific value of the parameter based on the evaluation information on the machine learning to be executed; and</claim-text><claim-text>a machine learning engine which includes a learning module configured to execute learning for a machine learning model formed based on the specific value of the parameter through use of the specific teaching data, and an evaluation means configured to evaluate, through use of the specific verification data, a learning result of the machine learning of the learned machine learning model.</claim-text></claim-text></claim></claims></us-patent-application>