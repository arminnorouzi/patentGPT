<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004513A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004513</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17364219</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>38</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>382</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>4282</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2213</main-group><subgroup>0042</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">APPARATUS TO MONITOR WHETHER ANOTHER DEVICE HAS BEEN COMPROMISED</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Lenovo (Singapore) Pte. Ltd.</orgname><address><city>Singapore</city><country>SG</country></address></addressbook><residence><country>SG</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Norton, JR.</last-name><first-name>Robert James</first-name><address><city>Raleigh</city><state>NC</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Li</last-name><first-name>Scott Wentao</first-name><address><city>Cary</city><state>NC</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Kapinos</last-name><first-name>Robert J.</first-name><address><city>Durham</city><state>NC</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>VanBlon</last-name><first-name>Russell Speight</first-name><address><city>Raleigh</city><state>NC</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In one aspect, an apparatus may include a processor and a communication interface accessible to the processor. The communication interface may be configured to communicate with a computing device. The apparatus may also include storage that is accessible to the processor and that includes instructions executable by the processor to monitor a circuit within the computing device to detect a break in the circuit. The circuit itself may be completed based on the apparatus being engaged with the computing device. Responsive to detecting a break in the circuit, the instructions may then be executable to write first data to at least one log stored on the apparatus. The instructions may also be executable to monitor the computing device to detect the computing device being powered on and, responsive to detecting the computing device being powered on, write second data to the at least one log stored on the apparatus.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="228.09mm" wi="150.79mm" file="US20230004513A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="244.09mm" wi="161.88mm" file="US20230004513A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="170.69mm" wi="96.44mm" orientation="landscape" file="US20230004513A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="217.51mm" wi="140.38mm" file="US20230004513A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="249.60mm" wi="160.95mm" file="US20230004513A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="227.58mm" wi="143.59mm" file="US20230004513A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="126.07mm" wi="147.83mm" file="US20230004513A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The disclosure below relates to technically inventive, non-routine solutions that are necessarily rooted in computer technology and that produce concrete technical improvements. In particular, the disclosure below relates to apparatuses to monitor whether other devices have been compromised.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">As recognized herein, electronic device manufacturers often store encryption keys and other sensitive technological items on devices prior to those devices reaching end-users. This is done because providing the keys/other items at a later time through different means like Internet communication can lead to those keys/other items being intercepted by hackers in electronic transit. Then once the keys and other items are compromised, many of the device's other secure technological functions are themselves compromised with potentially disastrous effects.</p><p id="p-0004" num="0003">However, owing to an increased desire to gain access to such items and to circumvent existing security measures, hackers have now taken to physically accessing the devices at shipping containers and shipping docks while the devices are still in transit from the manufacturer to get access to the keys/other sensitive technological items directly at the devices themselves before the devices reach the end-users. When hackers and other nefarious people do so, the manufacturer may not even know that this has happened, which is sometimes worse than the hacking itself since lack of knowledge that hacking has occurred can lead to a failure take remedial action to address it. This in turn allows the hackers run rampant.</p><p id="p-0005" num="0004">There are currently no adequate solutions to the foregoing computer-related, technological problems.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0006" num="0005">Accordingly, in one aspect an apparatus includes at least one processor and a communication interface accessible to the at least one processor. The communication interface is configured to communicate with a computing device. The apparatus also includes storage accessible to the at least one processor, with the storage including instructions executable by the at least one processor to monitor a circuit to detect a break in the circuit. The circuit is completed based on the apparatus being engaged with the computing device. The instructions are also executable to, responsive to detecting a break in the circuit, write first data to at least one log stored on the apparatus. The instructions are further executable to monitor the computing device to detect the computing device being powered on and, responsive to detecting the computing device being powered on, write second data to the at least one log stored on the apparatus.</p><p id="p-0007" num="0006">In some examples, the first data and the second data may include the same data. In other examples, the first data and the second data may include different data. The first data may indicate the break in the circuit and the second data may indicate the computing device being powered on.</p><p id="p-0008" num="0007">If desired, the communication interface may include a universal serial bus (USB) connector, such as a micro-USB connector.</p><p id="p-0009" num="0008">Additionally, in some example implementations the communication interface may be configured to engage with a port on the computing device, and the apparatus may be configured to extend into the port and sit flush with a portion of a housing of the computing device that surrounds at least part of the port.</p><p id="p-0010" num="0009">Also in some example implementations, the storage may be first storage. The instructions may then be executable to, responsive to second storage on the computing device being accessed, write third data to the at least one log stored on the apparatus. Additionally or alternatively, the instructions may be executable to, responsive to fourth data being written to second storage on the computing device, write fifth data to the at least one log stored on the apparatus.</p><p id="p-0011" num="0010">Still further, if desired the instructions may be executable to, responsive to detecting a first break in the circuit due to the apparatus being removed from the computing device, write the first data to the at least one log stored on the apparatus. The instructions may also be executable to, responsive to detecting a second break in the circuit due to a tamper switch within the computing device being triggered, write third data to the at least one log stored on the apparatus. At least part of the tamper switch may form at least part of the circuit. In some examples, the first data may be different from the third data. Additionally, in some examples the apparatus may include the computing device and the tamper switch may be triggered based on a first portion of the computing device being mechanically disengaged from a second portion of the computing device.</p><p id="p-0012" num="0011">Still further, in various example embodiments the computing device may be a first computing device and the instructions may be executable to, while the apparatus is engaged with a second computing device different from the first computing device, upload the first data and/or the second data to the second computing device. If desired, in these embodiments the instructions may be executable to authenticate the second computing device prior to uploading the first data and/or the second data, and then upload the first data and/or the second data responsive to authentication of the second computing device. The second computing device may be authenticated based on a digital signature received from the second computing device while the apparatus is engaged with the computing device.</p><p id="p-0013" num="0012">Still further, in some examples the instructions may be executable to, responsive to detecting the break in the circuit, encrypt the first data and write the encrypted first data to the at least one log stored on the apparatus. In these examples, the instructions may also be executable to, responsive to detecting the computing device being powered on, encrypt the second data and write the encrypted second data to the at least one log stored on the apparatus.</p><p id="p-0014" num="0013">In another aspect, a method includes monitoring, at an apparatus insertable into a computing device and while the apparatus is inserted into the computing device, a circuit to detect a break in the circuit. The method also includes writing first data to at least one log stored in local storage of the apparatus responsive to detecting a break in the circuit. The method further includes monitoring the computing device to detect the computing device being powered on and, responsive to detecting the computing device being powered on, writing second data to the at least one log stored in the local storage.</p><p id="p-0015" num="0014">In various examples, the first data may indicate a first date and first time associated with the break in the circuit, and the second data may indicate a second date and a second time associated with the computing device being powered on.</p><p id="p-0016" num="0015">In still another aspect, a device includes at least one processor, storage accessible to the at least one processor, a display accessible to the at least one processor, and a port accessible to the at least one processor. The port is configured to receive an insert that completes a circuit in the device while the insert is engaged with the port. The device also includes circuitry that triggers data being written to the insert responsive to the device being powered on and/or responsive to the circuit being broken.</p><p id="p-0017" num="0016">The details of present principles, both as to their structure and operation, can best be understood in reference to the accompanying drawings, in which like reference numerals refer to like parts, and in which:</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example system consistent with present principles;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of an example network of devices consistent with present principles;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref> are schematic diagrams of an insertable apparatus and a computing device into which the apparatus may be inserted consistent with present principles;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates example logic in example flow chart format that may be executed by an insertable apparatus consistent with present principles;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIGS. <b>6</b> and <b>7</b></figref> shows example graphical user interfaces (GUIs) presenting log data from an insertable apparatus consistent with present principles; and</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an example settings GUI that may be presented on a display to configure one or more settings of an insertable apparatus consistent with present principles.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0024" num="0023">Among other things, the description below relates to ways to provide verification of the chain of custody of a computing device, while also providing warnings/red flags as well as potential remedial actions that device manufacturers and system administrators might take in the event of unauthorized activity.</p><p id="p-0025" num="0024">Accordingly, a small USB insert or dongle may be attached to a computing device prior to transit to an end-user. The insert may keep track of whether the computer is turned on, accessed, and if the insert is removed from the port of the computing device into which it has been inserted. Then upon delivery of the computing device at a secure location, the insert can be removed by an authorized individual and inserted into another device to download the logs and verify an unbroken chain of custody and/or that no other concerning events occurred in transit between secure locations. As long as the device arrives at its next secure location with an unbroken chain/no questionable events indicated in the logs, then all logistics and users involved would have assurance there was no tampering owing to this auditable proof of chain of custody. Should something out of norm occur, the logs may serve as a red flag to investigate more and system admins/users may even be provided with other options to take remedial measures.</p><p id="p-0026" num="0025">The insert itself may be a low-power device that uses minimal power so it can go on long journeys with the computing device itself. Circuits/sensors may thus be used that allow for low power drain.</p><p id="p-0027" num="0026">Additionally, note that in some examples the insert may monitor a tamper switch located in the monitored device itself to identify physical machine intrusion.</p><p id="p-0028" num="0027">Prior to delving further into the details of the instant techniques, note with respect to any computer systems discussed herein that a system may include server and client components, connected over a network such that data may be exchanged between the client and server components. The client components may include one or more computing devices including televisions (e.g., smart TVs, Internet-enabled TVs), computers such as desktops, laptops and tablet computers, so-called convertible devices (e.g., having a tablet configuration and laptop configuration), and other mobile devices including smart phones. These client devices may employ, as non-limiting examples, operating systems from Apple Inc. of Cupertino Calif., Google Inc. of Mountain View, Calif., or Microsoft Corp. of Redmond, Wash. A Unix&#xae; or similar such as Linux&#xae; operating system may be used. These operating systems can execute one or more browsers such as a browser made by Microsoft or Google or Mozilla or another browser program that can access web pages and applications hosted by Internet servers over a network such as the Internet, a local intranet, or a virtual private network.</p><p id="p-0029" num="0028">As used herein, instructions refer to computer-implemented steps for processing information in the system. Instructions can be implemented in software, firmware or hardware, or combinations thereof and include any type of programmed step undertaken by components of the system; hence, illustrative components, blocks, modules, circuits, and steps are sometimes set forth in terms of their functionality.</p><p id="p-0030" num="0029">A processor may be any general purpose single- or multi-chip processor that can execute logic by means of various lines such as address lines, data lines, and control lines and registers and shift registers. Moreover, any logical blocks, modules, and circuits described herein can be implemented or performed with a general purpose processor, a digital signal processor (DSP), a field programmable gate array (FPGA) or other programmable logic device such as an application specific integrated circuit (ASIC), discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A processor can also be implemented by a controller or state machine or a combination of computing devices. Thus, the methods herein may be implemented as software instructions executed by a processor, suitably configured application specific integrated circuits (ASIC) or field programmable gate array (FPGA) modules, or any other convenient manner as would be appreciated by those skilled in those art. Where employed, the software instructions may also be embodied in a non-transitory device that is being vended and/or provided that is not a transitory, propagating signal and/or a signal per se (such as a hard disk drive, CD ROM or Flash drive). The software code instructions may also be downloaded over the Internet. Accordingly, it is to be understood that although a software application for undertaking present principles may be vended with a device such as the system <b>100</b> described below, such an application may also be downloaded from a server to a device over a network such as the Internet.</p><p id="p-0031" num="0030">Software modules and/or applications described by way of flow charts and/or user interfaces herein can include various sub-routines, procedures, etc. Without limiting the disclosure, logic stated to be executed by a particular module can be redistributed to other software modules and/or combined together in a single module and/or made available in a shareable library.</p><p id="p-0032" num="0031">Logic when implemented in software, can be written in an appropriate language such as but not limited to hypertext markup language (HTML)-5, Java&#xae;/JavaScript, C# or C++, and can be stored on or transmitted from a computer-readable storage medium such as a random access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), a hard disk drive or solid state drive, compact disk read-only memory (CD-ROM) or other optical disk storage such as digital versatile disc (DVD), magnetic disk storage or other magnetic storage devices including removable thumb drives, etc.</p><p id="p-0033" num="0032">In an example, a processor can access information over its input lines from data storage, such as the computer readable storage medium, and/or the processor can access information wirelessly from an Internet server by activating a wireless transceiver to send and receive data. Data typically is converted from analog signals to digital by circuitry between the antenna and the registers of the processor when being received and from digital to analog when being transmitted. The processor then processes the data through its shift registers to output calculated data on output lines, for presentation of the calculated data on the device.</p><p id="p-0034" num="0033">Components included in one embodiment can be used in other embodiments in any appropriate combination. For example, any of the various components described herein and/or depicted in the Figures may be combined, interchanged or excluded from other embodiments.</p><p id="p-0035" num="0034">&#x201c;A system having at least one of A, B, and C&#x201d; (likewise &#x201c;a system having at least one of A, B, or C&#x201d; and &#x201c;a system having at least one of A, B, C&#x201d;) includes systems that have A alone, B alone, C alone, A and B together, A and C together, B and C together, and/or A, B, and C together, etc.</p><p id="p-0036" num="0035">The term &#x201c;circuit&#x201d; or &#x201c;circuitry&#x201d; may be used in the summary, description, and/or claims. As is well known in the art, the term &#x201c;circuitry&#x201d; includes all levels of available integration, e.g., from discrete logic circuits to the highest level of circuit integration such as VLSI, and includes programmable logic components programmed to perform the functions of an embodiment as well as general-purpose or special-purpose processors programmed with instructions to perform those functions.</p><p id="p-0037" num="0036">Now specifically in reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an example block diagram of an information handling system and/or computer system <b>100</b> is shown that is understood to have a housing for the components described below. Note that in some embodiments the system <b>100</b> may be a desktop computer system, such as one of the ThinkCentre&#xae; or ThinkPad&#xae; series of personal computers sold by Lenovo (US) Inc. of Morrisville, N.C., or a workstation computer, such as the ThinkStation&#xae;, which are sold by Lenovo (US) Inc. of Morrisville, N.C.; however, as apparent from the description herein, a client device, a server or other machine in accordance with present principles may include other features or only some of the features of the system <b>100</b>. Also, the system <b>100</b> may be, e.g., a game console such as XBOX&#xae;, and/or the system <b>100</b> may include a mobile communication device such as a mobile telephone, notebook computer, and/or other portable computerized device.</p><p id="p-0038" num="0037">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the system <b>100</b> may include a so-called chipset <b>110</b>. A chipset refers to a group of integrated circuits, or chips, that are designed to work together. Chipsets are usually marketed as a single product (e.g., consider chipsets marketed under the brands INTEL&#xae;, AMD&#xae;, etc.).</p><p id="p-0039" num="0038">In the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the chipset <b>110</b> has a particular architecture, which may vary to some extent depending on brand or manufacturer. The architecture of the chipset <b>110</b> includes a core and memory control group <b>120</b> and an I/O controller hub <b>150</b> that exchange information (e.g., data, signals, commands, etc.) via, for example, a direct management interface or direct media interface (DMI) <b>142</b> or a link controller <b>144</b>. In the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the DMI <b>142</b> is a chip-to-chip interface (sometimes referred to as being a link between a &#x201c;northbridge&#x201d; and a &#x201c;southbridge&#x201d;).</p><p id="p-0040" num="0039">The core and memory control group <b>120</b> include one or more processors <b>122</b> (e.g., single core or multi-core, etc.) and a memory controller hub <b>126</b> that exchange information via a front side bus (FSB) <b>124</b>. As described herein, various components of the core and memory control group <b>120</b> may be integrated onto a single processor die, for example, to make a chip that supplants the &#x201c;northbridge&#x201d; style architecture.</p><p id="p-0041" num="0040">The memory controller hub <b>126</b> interfaces with memory <b>140</b>. For example, the memory controller hub <b>126</b> may provide support for DDR SDRAM memory (e.g., DDR, DDR2, DDR3, etc.). In general, the memory <b>140</b> is a type of random-access memory (RAM). It is often referred to as &#x201c;system memory.&#x201d;</p><p id="p-0042" num="0041">The memory controller hub <b>126</b> can further include a low-voltage differential signaling interface (LVDS) <b>132</b>. The LVDS <b>132</b> may be a so-called LVDS Display Interface (LDI) for support of a display device <b>192</b> (e.g., a CRT, a flat panel, a projector, a touch-enabled light emitting diode display or other video display, etc.). A block <b>138</b> includes some examples of technologies that may be supported via the LVDS interface <b>132</b> (e.g., serial digital video, HDMI/DVI, display port). The memory controller hub <b>126</b> also includes one or more PCI-express interfaces (PCI-E) <b>134</b>, for example, for support of discrete graphics <b>136</b>. Discrete graphics using a PCI-E interface has become an alternative approach to an accelerated graphics port (AGP). For example, the memory controller hub <b>126</b> may include a 16-lane (x16) PCI-E port for an external PCI-E-based graphics card (including, e.g., one of more GPUs). An example system may include AGP or PCI-E for support of graphics.</p><p id="p-0043" num="0042">In examples in which it is used, the I/O hub controller <b>150</b> can include a variety of interfaces. The example of <figref idref="DRAWINGS">FIG. <b>1</b></figref> includes a SATA interface <b>151</b>, one or more PCI-E interfaces <b>152</b> (optionally one or more legacy PCI interfaces), one or more USB interfaces <b>153</b>, a LAN interface <b>154</b> (more generally a network interface for communication over at least one network such as the Internet, a WAN, a LAN, a Bluetooth network using Bluetooth 5.0 communication, etc. under direction of the processor(s) <b>122</b>), a general purpose I/O interface (GPIO) <b>155</b>, a low-pin count (LPC) interface <b>170</b>, a power management interface <b>161</b>, a clock generator interface <b>162</b>, an audio interface <b>163</b> (e.g., for speakers <b>194</b> to output audio), a total cost of operation (TCO) interface <b>164</b>, a system management bus interface (e.g., a multi-master serial computer bus interface) <b>165</b>, and a serial peripheral flash memory/controller interface (SPI Flash) <b>166</b>, which, in the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, includes basic input/output system (BIOS) <b>168</b> and boot code <b>190</b>. With respect to network connections, the I/O hub controller <b>150</b> may include integrated gigabit Ethernet controller lines multiplexed with a PCI-E interface port. Other network features may operate independent of a PCI-E interface.</p><p id="p-0044" num="0043">The interfaces of the I/O hub controller <b>150</b> may provide for communication with various devices, networks, etc. For example, where used, the SATA interface <b>151</b> provides for reading, writing or reading and writing information on one or more drives <b>180</b> such as HDDs, SDDs or a combination thereof, but in any case the drives <b>180</b> are understood to be, e.g., tangible computer readable storage mediums that are not transitory, propagating signals. The I/O hub controller <b>150</b> may also include an advanced host controller interface (AHCI) to support one or more drives <b>180</b>. The PCI-E interface <b>152</b> allows for wireless connections <b>182</b> to devices, networks, etc. The USB interface <b>153</b> provides for input devices <b>184</b> such as keyboards (KB), mice and various other devices (e.g., cameras, phones, storage, media players, etc.).</p><p id="p-0045" num="0044">In the example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the LPC interface <b>170</b> provides for use of one or more ASICs <b>171</b>, a trusted platform module (TPM) <b>172</b>, a super I/O <b>173</b>, a firmware hub <b>174</b>, BIOS support <b>175</b> as well as various types of memory <b>176</b> such as ROM <b>177</b>, Flash <b>178</b>, and non-volatile RAM (NVRAM) <b>179</b>. With respect to the TPM <b>172</b>, this module may be in the form of a chip that can be used to authenticate software and hardware devices. For example, a TPM may be capable of performing platform authentication and may be used to verify that a system seeking access is the expected system.</p><p id="p-0046" num="0045">The system <b>100</b>, upon power on, may be configured to execute boot code <b>190</b> for the BIOS <b>168</b>, as stored within the SPI Flash <b>166</b>, and thereafter processes data under the control of one or more operating systems and application software (e.g., stored in system memory <b>140</b>). An operating system may be stored in any of a variety of locations and accessed, for example, according to instructions of the BIOS <b>168</b>.</p><p id="p-0047" num="0046">Additionally, though not shown for simplicity, in some embodiments the system <b>100</b> may include a gyroscope that senses and/or measures the orientation of the system <b>100</b> and provides related input to the processor <b>122</b>, as well as an accelerometer that senses acceleration and/or movement of the system <b>100</b> and provides related input to the processor <b>122</b>. Still further, the system <b>100</b> may include an audio receiver/microphone that provides input from the microphone to the processor <b>122</b> based on audio that is detected, such as via a user providing audible input to the microphone. The system <b>100</b> may also include a camera that gathers one or more images and provides the images and related input to the processor <b>122</b>. The camera may be a thermal imaging camera, an infrared (IR) camera, a digital camera such as a webcam, a three-dimensional (3D) camera, and/or a camera otherwise integrated into the system <b>100</b> and controllable by the processor <b>122</b> to gather still images and/or video. Also, the system <b>100</b> may include a global positioning system (GPS) transceiver that is configured to communicate with at least one satellite to receive/identify geographic position information and provide the geographic position information to the processor <b>122</b>. However, it is to be understood that another suitable position receiver other than a GPS receiver may be used in accordance with present principles to determine the location of the system <b>100</b>.</p><p id="p-0048" num="0047">It is to be understood that an example client device or other machine/computer may include fewer or more features than shown on the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In any case, it is to be understood at least based on the foregoing that the system <b>100</b> is configured to undertake present principles.</p><p id="p-0049" num="0048">Turning now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, example devices are shown communicating over a network <b>200</b> such as the Internet in accordance with present principles. It is to be understood that each of the devices described in reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref> may include at least some of the features, components, and/or elements of the system <b>100</b> described above. Indeed, any of the devices disclosed herein may include at least some of the features, components, and/or elements of the system <b>100</b> described above.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a notebook computer and/or convertible computer <b>202</b>, a desktop computer <b>204</b>, a wearable device <b>206</b> such as a smart watch, a smart television (TV) <b>208</b>, a smart phone <b>210</b>, a tablet computer <b>212</b>, and a server <b>214</b> such as an Internet server that may provide cloud storage accessible to the devices <b>202</b>-<b>212</b>. It is to be understood that the devices <b>202</b>-<b>214</b> may be configured to communicate with each other over the network <b>200</b> to undertake present principles.</p><p id="p-0051" num="0050">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, it shows an example schematic diagram of a computing device <b>300</b> such as a desktop computer, a laptop computer, a tablet computer, a smartphone, an augmented reality (AR) or virtual reality (VR) headset, smart glasses, etc. Thus, it is to be understood that the computing device <b>300</b> may include some or all of the components discussed above with respect to the system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0052" num="0051">The diagram also shows an example insert <b>302</b> that may be similar to a thumb drive, flash drive, dongle, etc. and include at least one processor <b>304</b> such as a low-power microprocessor. The insert <b>302</b> may also include memory <b>306</b> such as RAM, persistent storage <b>308</b> such as a hard disk drive or solid state drive or flash drive, and a communication interface <b>310</b> that physically/mechanically engages with a port <b>314</b> on the device <b>300</b>. Though not shown for simplicity, it is to be further understood that the insert <b>302</b> may also include a rechargeable battery for powering other components within the insert <b>302</b>. Additional insert components also not shown for simplicity may include a Bluetooth transceiver or radio frequency transmitter (e.g., an RFID tag), though in certain examples no wireless transceivers at all may be included on the insert <b>302</b> to increase device security by decreasing the number of ways in which the insert <b>302</b> might be externally detected and/or hacked.</p><p id="p-0053" num="0052">As also shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the computing device <b>300</b> may include an incomplete electrical circuit <b>312</b> that is completed once the insert <b>302</b> is inserted into the port <b>314</b> on the computing device <b>300</b> so that the circuit <b>312</b> runs through the insert <b>302</b> while completed. Power from the rechargeable battery in the insert <b>302</b> may then be used to establish a current in the circuit <b>312</b> so that the insert <b>302</b> may monitor the circuit <b>312</b> to determine the circuit <b>312</b> as being broken based on the insert <b>302</b> identifying a drop in current that would result from the circuit <b>312</b> being broken. Thus, the circuit <b>312</b> may in some examples be a dedicated circuit used for tamper detection by the insert <b>302</b> and may not be used by any processor in the computing device <b>300</b> itself to execute other functions. Also note that the current itself may be sensed by a current sensor and/or voltage sensor in the insert <b>302</b> (also not shown for simplicity). The sensors might also be located elsewhere on the circuit <b>312</b> but inside the device <b>300</b> itself to detect breaks at various points in the circuit <b>312</b> and may be configured to report to the insert <b>302</b> while the insert <b>302</b> is inserted into the device <b>300</b>.</p><p id="p-0054" num="0053">The port <b>314</b> itself may be a universal serial bus (USB) port such as a micro-USB port of type A or B, mini-USB port of type A or B, standard type-A USB port, standard type-B USB port, a type-C USB port, etc. In some example embodiments, a micro-USB port may specifically be used to reduce visibility of the port <b>314</b> and insert <b>302</b> as an added security measure to avoid visually alerting a nefarious third party seeking unauthorized access to the device <b>300</b>. In any case, in certain examples the port <b>314</b> itself may be a female USB port to receive a corresponding male USB connector of the same type that may at least in part establish the communication interface <b>310</b> on the insert <b>302</b>.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>3</b></figref> also shows that the circuit <b>312</b> may include a tamper switch <b>316</b> that is configured to break the circuit <b>312</b>, e.g., at the location of the tamper switch <b>316</b> or at another location on the circuit <b>312</b> if the tamper switch itself is not directly in the primary circuit path. The tamper switch <b>316</b> may be engaged with or coupled to both a first portion <b>318</b> of the housing of the computing device <b>300</b> and a second portion <b>320</b> of the housing of the computing device <b>300</b> so that the switch <b>316</b> triggers a break in the circuit <b>312</b> based on the first and second portions <b>318</b>, <b>320</b> being mechanically disengaged with each other. Mechanical disengagement might occur when, for example, an unauthorized person attempts to break into and physically access internal components of the device <b>300</b> by prying different parts of the housing apart or otherwise disengaging different parts of the housing from each other.</p><p id="p-0056" num="0055">Referring now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, once the insert <b>302</b> is inserted into/engaged with the port <b>314</b> in the device <b>300</b> but prior to the device <b>300</b> being shipped out of a manufacturing facility, the insert <b>302</b> may extend into the port <b>314</b> and, in certain examples, may sit flush with some or all portions of the external surface of the housing of the computing device <b>300</b> that surround the port <b>314</b>. Again note that the insert <b>302</b> may be configured to sit flush with the housing of the computing device <b>300</b> to reduce visibility of the insert <b>302</b> for added security to make it less visually obvious to a nefarious third party seeking unauthorized access to the device <b>300</b> that the insert <b>302</b> has been engaged with the device <b>300</b>.</p><p id="p-0057" num="0056">Still further, note that while the insert <b>302</b> is engaged with the device <b>300</b> and the device <b>300</b> is on, the insert <b>302</b> may also communicate with one or more processors within the device <b>300</b> as well as RAM and persistent storage in the device <b>300</b> to monitor for instances of the device being powered on, instances of data being read from the device <b>300</b>, and instances of data being written to the device <b>300</b>. The insert <b>302</b> may also communicate with the tamper switch <b>316</b> under its own power even if the device <b>300</b> is off to distinguish a circuit break reported by the tamper switch <b>316</b> from a circuit break due to the insert <b>302</b> being removed from the device <b>300</b>.</p><p id="p-0058" num="0057">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, it shows example logic that may be executed by a microprocessor within the insert <b>302</b>. The logic may be executed while the insert <b>302</b> is engaged with a computing device (such as the device <b>300</b>) for securely tracking the device during shipment to a destination to address device tampering consistent with present principles. Note that while the logic of <figref idref="DRAWINGS">FIG. <b>5</b></figref> is shown in flow chart format, state logic or other suitable logic may also be used.</p><p id="p-0059" num="0058">Beginning at block <b>500</b>, the insert may detect insertion into a port on the computing device as detected based on its communication interface being engaged with a reciprocal interface in the port. In response, the insert may send current through a circuit in the computing device and begin monitoring the circuit to detect a break in the circuit. The circuit may be similar to the example circuit <b>312</b> discussed above.</p><p id="p-0060" num="0059">From block <b>500</b> the logic may then proceed to decision diamond <b>502</b>. At diamond <b>502</b> the insert may use input from a current or voltage sensor in the insert (and/or in the computing device itself) that monitors current in the circuit to determine whether a break in the circuit has occurred. The break may be a break triggered by a tamper switch as set forth above and/or a break resulting from the insert being removed from circuit. A negative determination at diamond <b>502</b> may cause the logic to proceed directly to decision diamond <b>506</b>, while an affirmative determination may instead cause the logic to first move to block <b>504</b>.</p><p id="p-0061" num="0060">At block <b>504</b> the insert may write first data to a log or other data structure in its own local persistent storage. The first data may indicate the break in the circuit so that an authorized user can later access the log and determine that sensitive information like encryption keys and trusted platform module (TPM) data on the computing device might have been accessed by an unauthorized party who tried to circumvent device security by taking the device apart to access internal components manually, or by removing the insert itself to prevent the insert from monitoring other actions that might be taken at the computing device. In some examples, different data may establish the first data depending on whether the break was triggered by the tamper switch or by removal of the insert so that the data explicitly indicates which type of circuit break event occurred. In other examples, the same data may establish the first data to simply indicate that a circuit break occurred.</p><p id="p-0062" num="0061">Also note that in some examples, the first data may be encrypted using an encryption key securely stored on the insert so that the log cannot be read without the appropriate decryption key for added security and/or to help prevent an unauthorized user from tampering with the log itself to erase data indicating a circuit break occurred.</p><p id="p-0063" num="0062">From block <b>504</b> the logic may proceed to decision diamond <b>506</b>. At diamond <b>506</b> the insert may monitor the computing device to detect the computing device as being powered on. To do so, the insert may monitor one or more buses in the computing device to identify a power on command along the bus. Additionally or alternatively, the insert may begin communicating with a central processing unit (CPU) or other processor within the computing device upon power on of the computing device, implicating that the computing device itself has been powered on.</p><p id="p-0064" num="0063">Responsive to a determination at diamond <b>506</b> that the device has not been powered on, the logic may proceed directly to decision diamond <b>510</b>. However, responsive to detecting the computing device as being powered on at diamond <b>506</b>, the logic may first proceed to block <b>508</b>.</p><p id="p-0065" num="0064">At block <b>508</b> the insert may write second data to the log or other data structure in the insert's local persistent storage. The second data may be the same as the first data or may different from the first data, but in either case the second data may indicate the computing device as being powered on (e.g., either generally by way of data that an unspecified problem occurred or by explicitly indicating in the log that the computing device has been powered on) so that an authorized user can later access the log and determine that sensitive information like encryption keys and TPM data on the computing device might have been accessed by an unauthorized party owing to the device being powered on during times it was not expected to be powered on (e.g., during transit or shipping of the computing device from the manufacturer). Here too note that the second data may be encrypted using the encryption key securely stored on the insert so that the log cannot be read without the appropriate decryption key for added security and/or to help prevent an unauthorized user from tampering with the log to erase data indicating the computing device was powered on.</p><p id="p-0066" num="0065">From block <b>508</b> the logic may then proceed to decision diamond <b>510</b>. At diamond <b>510</b> the insert's processor may maintain a communication link with the computing device's memory (e.g., RAM) and persistent storage (e.g., hard disk drive, solid state drive, etc.) under power from the insert's battery to determine whether the memory or storage on the computing device has been accessed. A negative determination at diamond <b>510</b> may cause the logic to proceed directly to decision diamond <b>514</b>, while an affirmative determination at diamond <b>510</b> may first cause the logic to proceed to block <b>512</b>.</p><p id="p-0067" num="0066">At block <b>512</b> the insert may write third data to the log or other data structure in the insert's local persistent storage. The third data may be the same as the first and second data, or may be different from the first and second data, but in either case might indicate the computing device's memory and/or storage being accessed so that an authorized user can later access the log and determine that sensitive information like encryption keys and TPM data on the computing device might have been accessed from memory/storage by an unauthorized party during times the computing device's memory and storage were not expected to be accessed. Thus, the third data might generally indicate that an unspecified problem occurred that might implicate the computing device's storage being accessed or read, or by explicitly indicating as much. And as with the first and second data, the third data may also be encrypted using the encryption key securely stored on the insert so that the log cannot be read without the appropriate decryption key for added security and/or to help prevent an unauthorized user from tampering with the log to erase data indicating the computing device's storage was accessed.</p><p id="p-0068" num="0067">From block <b>512</b> the logic may then proceed to decision diamond <b>514</b>. At diamond <b>514</b> the insert's processor may maintain a communication link with the computing device's memory and persistent storage under power from the insert's battery to determine whether the memory or storage on the computing device has had fourth data written thereto. A negative determination at diamond <b>514</b> may cause the logic to proceed directly to block <b>518</b>, while an affirmative determination at diamond <b>514</b> may first cause the logic to proceed to block <b>516</b>.</p><p id="p-0069" num="0068">At block <b>516</b> the insert may write fifth data to the log or other data structure in the insert's local persistent storage. The fifth data may be the same as the first, second, and third data or may be different, but in either case might indicate that the computing device's memory and/or storage has had data written to it so that an authorized user can later access the log and determine that malware, virus software, or other harmful code might have been stored on and/or installed on the computing device by an unauthorized party during a time when no data was expected to be written to the computing device. Thus, the fifth data might generally indicate an unspecified problem occurred that might implicate the computing device's storage as having a write operation performed or by explicitly indicating as much. As with the first, second, and third data, the fifth data may also be encrypted using the encryption key securely stored on the insert so that the log cannot be read without the appropriate decryption key for added security and/or to help prevent an unauthorized user from tampering with the log to erase data indicating the computing device's storage has had a write operation performed.</p><p id="p-0070" num="0069">From block <b>516</b> the logic may then proceed to block <b>518</b>. At block <b>518</b> the insert may repeat the foregoing process by reverting to block <b>500</b> and proceeding again from that point until the insert is removed from the computing device and/or engaged with another computing device (referred to below as a &#x201c;second computing device&#x201d;). Then once the insert is physically engaged with/inserted into a second computing device as determined based on communication with the second computing device, the logic may proceed to block <b>520</b>. Note that in some examples, physical engagement with the second computing device may be required and no wireless signals may be transmitted by the insert to the second computing device since those wireless signals might be detectable by a nefarious actor (e.g., the insert may not even include a wireless transmitter to accomplish this purpose).</p><p id="p-0071" num="0070">At block <b>520</b> the insert may authenticate the second computing device using, for example, the second computing device's public key (as may already be stored in the insert in a relational database of authorized computing devices and corresponding keys) to validate a digital signature provided by the second computing device upon engagement with the insert. Authentication at block <b>520</b> can add yet another layer of security to protect the log(s) in the insert from being tampered with via the insert only allowing authenticated devices to have read/write access to the insert to access the log and/or make changes to it.</p><p id="p-0072" num="0071">Then once the second computing device has been authenticated, the logic may move to block <b>522</b> where the insert may upload the log data (e.g., first, second, third, and fifth data from above) responsive to authentication of the second computing device. In some examples, responsive to the log data being uploaded, the insert may also autonomously delete the log data in its storage/memory so that the insert can be used again with a fresh/blank log to monitor yet another computing device.</p><p id="p-0073" num="0072">Now describing <figref idref="DRAWINGS">FIG. <b>6</b></figref>, it shows an example log of events noted by an insert while monitoring a first computing device into which the insert has been inserted consistent with present principles. The log may have been uploaded to a different computing device at block <b>522</b> per the description above and then a visual representation of the log may be presented on a display of the different computing device as part of a graphical user interface (GUI) <b>600</b>.</p><p id="p-0074" num="0073">Accordingly, as shown the GUI <b>600</b> may include a text indication <b>602</b> of a device identification number associated with the computing device that was monitored for an authorized person to easily identify to which computing device the log data pertains. The GUI <b>600</b> may also include a list different log entries corresponding to different events identified by the insert. As shown, a first entry <b>604</b> in the list explicitly indicates via text that a circuit break due to the insert itself being removed from the computing device was detected at a particular time and date. A second entry <b>606</b> in the list explicitly indicates via text that a circuit break due to a tamper switch in the monitored computing device being triggered was detected at another particular time/date. A third entry <b>608</b> explicitly indicates via text that the monitored computing device was powered on at still another date/time. A fourth entry <b>610</b> explicitly indicates via text that a read operation was performed to retrieve data from memory or storage on the monitored computing device at yet another date/time, while a fifth entry <b>612</b> explicitly indicates via text that a write operation was performed to write data to memory or storage on the monitored computing device at still another date/time. Thus, the system administrator may be informed of precisely what may have happened to the computing device in transit to tailor an ensuing security action that might be taken.</p><p id="p-0075" num="0074">Additionally, if desired, in some examples the GUI <b>600</b> may include a selector <b>614</b>. Upon viewing the log data, a system administrator or other person tasked with ensuring security of the monitored device may decide that the owner or other person physically controlling the computing device (e.g., after it is ultimately vended to an end-user) should be warned about the potential security failure relating to the computing device due to it apparently being accessed by an unauthorized person in transmit to the device's eventual owner. Thus, selection of the selector <b>614</b> may initiate an email draft to a predetermined email address associated with the owner, where the email address has been auto-filled into the email address field and a predetermined phrase like &#x201c;Your device might be compromised&#x201d; has been auto-filled into the subject field so that the system administrator can then type other information into the body of the email and send it to the monitored computing device's owner so that the owner can take other action. Thus, the system administrator might indicate in the body of the email that the device should be returned to the seller or manufacturer of the device, that the owner should either exercise caution when performing sensitive operations on the computing device or stop using it altogether, etc.</p><p id="p-0076" num="0075">Also note here that the message being sent based on selection of the selector <b>614</b> need not necessarily be an email and that a text message, social media message, or other message type may also be auto-generated. Additionally or alternatively, selection of the selector <b>614</b> may also initiate a telephone call to a predetermined phone number associated with the owner of the computing device so the system administrator can speak directly with the owner.</p><p id="p-0077" num="0076">Moving on to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, it shows another example log of events noted by an insert while monitoring a first computing device into which the insert has been inserted consistent with present principles. This log may have also been uploaded to a different computing device at block <b>522</b> per the description above and then a visual representation of the log may be presented on a display of the different computing device as part of a graphical user interface (GUI) <b>700</b>. However, note that the log shown in the GUI <b>700</b> is in a different format than the log shown on the GUI <b>600</b>.</p><p id="p-0078" num="0077">Specifically, the GUI <b>700</b> includes a list <b>702</b> with an entry for each minute that the respective computing device was monitored, though in other embodiments the GUI may only list entries for respective events that were actually detected like a circuit break, device power on, read operation, or write operation. As shown, entries not associated with a particular event occurring may be indicated via the same respective data&#x2014;a single-digit zero in this example&#x2014;while entries associated with a particular event that occurred may also be indicated via the same respective data&#x2014;a single-digit one in this example. By using zeros and ones (or other short identifiers), a system administrator may not know precisely what the event was that occurred but may still know that the device's security has been compromised, thus notifying the administrator while still minimizing storage space on the insert that may be needed for the log (and hence potentially minimizing the physical size of the insert itself by using a relatively small storage area to reduce overall visibility of the insert). But simply knowing the device's security has been compromised may still be very useful to the administrator since not knowing at all about a potential security breach may be worse since the system administrator would not even know that remedial action should be taken (and hence the security breach can go undetected and lead to further problems).</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>7</b></figref> also shows that the GUI <b>700</b> may include a text indication <b>704</b> of a device identification number associated with the computing device that was monitored, which may be similar to the indication <b>602</b> described above. The GUI <b>700</b> may further include a selector <b>706</b> that may be similar to the selector <b>614</b> in that it may be selectable to initiate one or more actions described above with respect to the selector <b>614</b>.</p><p id="p-0080" num="0079">Additionally, the GUI <b>700</b> may include a selector <b>708</b> that may be selectable to flag the computing device as being compromised in the seller or manufacturer's database. Additionally or alternatively, the selector <b>708</b> may be selectable to deactivate the device itself.</p><p id="p-0081" num="0080">As far as deactivating goes, selection of the selector <b>708</b> may result in a command being sent from the system administrator's device to the computing device itself that the computing device should not connect to or continue connecting to any Wi-Fi/Internet or other networks like Bluetooth networks that might be used to leak personal information of the device's end-user. Deactivating may also include providing a command to the compromised device's BIOS that it no longer boot any guest operating system like Windows, OS X or Linux upon power on. Deactivating may also include configuring the potentially compromised device's central processing unit (CPU) and/or other processors to deactivate and hence not execute any functions themselves even upon a power on command. And if the potentially compromised device is not yet online, these commands may reside on a network server and be sent responsive to the server detecting the potentially compromised device as coming online (e.g., after the end-user powers it up for the first time himself/herself).</p><p id="p-0082" num="0081">Still further, as another measure the system administrator may select the selector <b>710</b> from the GUI to invalidate any encryption keys and other sensitive data that might have been compromised. For example, a public key for the computing device that resides on a server and is publicly available to others for secure encryption operations and communications with the computing device (e.g., using asymmetrical public/private key encryption) may be flagged, invalidated, or deleted from its public repository since the corresponding private key might have been compromised and hence any ensuing communications using those keys might not be authentic. Other data besides encryption keys can also be flagged as being potentially invalid or fraudulent at a lookup server to put others on notice as well.</p><p id="p-0083" num="0082">Last, note before moving on to <figref idref="DRAWINGS">FIG. <b>8</b></figref> that even though not shown for clarity, the GUI <b>600</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref> may also include selectors similar to the selectors <b>708</b> and <b>710</b>.</p><p id="p-0084" num="0083">Now describing <figref idref="DRAWINGS">FIG. <b>8</b></figref>, it shows another example GUI <b>800</b> that may be presented on the display of a system administrator's device while an insert is inserted into that device's port so that the system administrator can configure settings for the insert before the insert is inserted into another device for monitoring of the other device consistent with present principles. Note that in the example below, each option on the GUI <b>800</b> may be selectable by directing touch or cursor input to the respective check box adjacent to the respective option.</p><p id="p-0085" num="0084">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the GUI <b>800</b> may include a first option <b>802</b> that may be selectable to set or enable the insert to, in the future, monitor another device upon insertion into the other device (e.g., may be selectable to subsequently execute the logic of <figref idref="DRAWINGS">FIG. <b>5</b></figref>). The GUI <b>800</b> may also include respective options <b>804</b>-<b>812</b> that may be selectable to set or enable the insert to monitor for specific types of events such as insert removal from the computing device being monitored (option <b>804</b>), a tamper switch being triggered/breaking a circuit (option <b>806</b>), the monitored device being powered on (option <b>808</b>), one or more read operations occurring at the monitored device (option <b>810</b>), and one or more write operations occurring at the monitored device (option <b>812</b>).</p><p id="p-0086" num="0085">Additionally, if desired the GUI <b>800</b> may include an option <b>814</b> that may be selectable to set or enable the insert to encrypt log data it stores locally for added security. Also for added security, an option <b>816</b> may be selected to set or enable the insert to authenticate another device into which it is inserted prior to uploading or otherwise providing access to the log data. Still further, the GUI <b>800</b> may include an indicator <b>818</b> of a current charge level of a rechargeable battery within the insert along with a recommendation <b>820</b> of a predicted duration of battery charge remaining so that the system administrator can determine based on the expected length of transit whether the insert's battery should be charged before it begins monitoring the computing device during transit to its ultimate destination.</p><p id="p-0087" num="0086">It may now be appreciated that present principles provide for an improved computer-based interface that increases the functionality and security of the devices disclosed herein. The disclosed concepts are rooted in computer technology for computers to carry out their functions.</p><p id="p-0088" num="0087">It is to be understood that whilst present principals have been described with reference to some example embodiments, these are not intended to be limiting, and that various alternative arrangements may be used to implement the subject matter claimed herein. Components included in one embodiment can be used in other embodiments in any appropriate combination. For example, any of the various components described herein and/or depicted in the Figures may be combined, interchanged or excluded from other embodiments.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus, comprising:<claim-text>at least one processor;</claim-text><claim-text>a communication interface accessible to the at least one processor, the communication interface configured to communicate with a computing device; and</claim-text><claim-text>storage accessible to the at least one processor and comprising instructions executable by the at least one processor to:</claim-text><claim-text>monitor a circuit within the computing device to detect a break in the circuit, the circuit completed based on the apparatus being engaged with the computing device;</claim-text><claim-text>responsive to detecting a break in the circuit, write first data to at least one log stored on the apparatus;</claim-text><claim-text>monitor the computing device to detect the computing device being powered on; and</claim-text><claim-text>responsive to detecting the computing device being powered on, write second data to the at least one log stored on the apparatus.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first data and the second data comprise the same data.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first data and the second data comprise different data.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first data indicates the break in the circuit, and wherein the second data indicates the computing device being powered on.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. (canceled)</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the communication interface comprises a micro-universal serial bus (USB) connector.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the communication interface is configured to engage with a port on the computing device, and wherein the apparatus is configured to extend into the port and sit flush with a portion of a housing of the computing device that surrounds at least part of the port.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage is first storage, and wherein the instructions are executable to:<claim-text>responsive to second storage on the computing device being accessed, write third data to the at least one log stored on the apparatus.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage is first storage, and wherein the instructions are executable to:<claim-text>responsive to third data being written to second storage on the computing device, write fourth data to the at least one log stored on the apparatus.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions are executable to:<claim-text>responsive to detecting a first break in the circuit due to the apparatus being removed from the computing device, write the first data to the at least one log stored on the apparatus; and</claim-text><claim-text>responsive to detecting a second break in the circuit due to a tamper switch within the computing device being triggered, write third data to the at least one log stored on the apparatus, at least part of the tamper switch forming at least part of the circuit.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the first data is different from the third data.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, comprising the computing device, wherein the tamper switch is triggered based on a first portion of the computing device being mechanically disengaged from a second portion of the computing device.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computing device is a first computing device, and wherein the instructions are executable to:<claim-text>while the apparatus is engaged with a second computing device different from the first computing device, upload, to the second computing device, the first data and/or the second data.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the instructions are executable to:<claim-text>authenticate the second computing device prior to uploading the first data and/or the second data; and</claim-text><claim-text>upload the first data and/or the second data responsive to authentication of the second computing device.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the instructions are executable to:<claim-text>authenticate the second computing device based on a digital signature received from the second computing device while the apparatus is engaged with the second computing device.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions are executable to:<claim-text>responsive to detecting the break in the circuit, encrypt the first data and write the encrypted first data to the at least one log stored on the apparatus; and</claim-text><claim-text>responsive to detecting the computing device being powered on, encrypt the second data and write the encrypted second data to the at least one log stored on the apparatus.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. (canceled)</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. A method, comprising:<claim-text>monitoring, at an apparatus insertable into a computing device and while the apparatus is inserted into the computing device, a circuit to detect a break in the circuit;</claim-text><claim-text>responsive to detecting a break in the circuit, writing first data to at least one log stored in local storage of the apparatus;</claim-text><claim-text>monitoring the computing device to detect the computing device being powered on; and</claim-text><claim-text>responsive to detecting the computing device being powered on, writing second data to the at least one log stored in the local storage.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the first data indicates a first date and first time associated with the break in the circuit, and wherein the second data indicates a second date and a second time associated with the computing device being powered on.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A device, comprising:<claim-text>at least one processor;</claim-text><claim-text>storage accessible to the at least one processor;</claim-text><claim-text>a display accessible to the at least one processor;</claim-text><claim-text>a port accessible to the at least one processor, the port configured to receive an insert that completes a circuit in the device while the insert is engaged with the port; and</claim-text><claim-text>circuitry that triggers data being written to the insert responsive to the device being powered on and/or responsive to the circuit being broken.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The device of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the circuitry triggers data being written to the insert responsive to the circuit being broken due to the insert being removed from the port.</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, comprising:<claim-text>responsive to detecting the break in the circuit, encrypting the first data and writing the encrypted first data to the at least one log stored in the local storage; and</claim-text><claim-text>responsive to detecting the computing device being powered on, encrypting the second data and writing the encrypted second data to the at least one log stored in the local storage.</claim-text></claim-text></claim></claims></us-patent-application>