<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004439A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004439</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17782110</doc-number><date>20200924</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201911232841.4</doc-number><date>20191205</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5055</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc></classifications-cpc><invention-title id="d2e61">CONTROL METHOD AND APPARATUS OF CLUSTER RESOURCE, AND CLOUD COMPUTING SYSTEM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>BEIJING JINGDONG SHANGKE INFORMATION TECHNOLOGY CO., LTD.</orgname><address><city>BEIJING</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>BEIJING JINGDONG CENTURY TRADING CO., LTD.</orgname><address><city>BEIJING</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>SHEN</last-name><first-name>Bowei</first-name><address><city>BEIJING</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>DU</last-name><first-name>Haifeng</first-name><address><city>BEIJING</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Wenqiao</first-name><address><city>BEIJING</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Jun</first-name><address><city>BEIJING</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>BAI</last-name><first-name>Shi</first-name><address><city>BEIJING</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>HAN</last-name><first-name>Chuyi</first-name><address><city>BEIJING</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2020/117413</doc-number><date>20200924</date></document-id><us-371c12-date><date>20220602</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">This disclosure relates to a control method and apparatus of cluster resources, and a cloud computing system, and relates to the field of computer technologies. The method includes: in the case where a to-be-controlled resource is a to-be-expanded resource, determining a binding relationship between the to-be-expanded resource and an application; adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource; generating a to-be-executed data packet of a to-be-processed application according to a deployment type of the to-be-processed application; and deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="109.39mm" wi="158.75mm" file="US20230004439A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="184.23mm" wi="83.65mm" file="US20230004439A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="145.29mm" wi="183.39mm" file="US20230004439A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="149.10mm" wi="167.39mm" file="US20230004439A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="225.13mm" wi="172.13mm" file="US20230004439A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="205.66mm" wi="167.13mm" file="US20230004439A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="188.55mm" wi="150.62mm" file="US20230004439A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="213.36mm" wi="152.65mm" file="US20230004439A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="53.93mm" wi="64.35mm" file="US20230004439A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is based on and claims the priority to the Chinese patent application No. 201911232841.4 filed on Dec. 5, 2019, the disclosure of which is hereby incorporated as a whole into the present application.</p><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">This disclosure relates to the field of computer technologies, and particularly, to a control method of cluster resources, and a control apparatus of the cluster resources, a cloud computing system, and a non-volatile computer-readable storage medium.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">With the continuous consumption of resources in the use of a cloud system, resource control (such as capacity expansion and contraction) needs to be performed on various products in a cluster. Such resource control becomes an operation that operation and maintenance personnel need to perform regularly.</p><p id="p-0005" num="0004">In the related art, an expansion method is developed for an application of a certain service of a cluster in a certain specific scene.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">According to some embodiments of the present disclosure, there is provided a control method of cluster resources, comprising: in the case where a to-be-controlled resource is a to-be-expanded resource, determining a binding relationship between the to-be-expanded resource and an application; adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource; generating a to-be-executed data packet of a to-be-processed application according to a deployment type of the to-be-processed application; and deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution.</p><p id="p-0007" num="0006">In some embodiments, the adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource comprises: transferring related information of the to-be-expanded resource to a pre-script of the corresponding application; and executing the pre-script to complete the initialization of the to-be-expanded resource.</p><p id="p-0008" num="0007">In some embodiments, the generating a to-be-executed data packet of a to-be-processed application comprises: in the case where the deployment type is package deployment, determining that the to-be-expanded resource is a physical machine, and generating a program package of the to-be-processed application as the to-be-executed data packet; and in the case where the deployment type is image deployment, determining that the to-be-expanded resource is a container image, generating a program package of the to-be-processed application, and generating the to-be-executed data packet according to the program package and a running image of the to-be-processed application.</p><p id="p-0009" num="0008">In some embodiments, the deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution comprises: in the case where the to-be-expanded resource is the physical machine, sending the to-be-executed data packet to the physical machine for execution; and in the case where the to-be-expanded resource is the container image, sending the to-be-executed data packet to an idle physical machine in a resource pool having the binding relationship with the to-be-processed application for execution.</p><p id="p-0010" num="0009">In some embodiments, the deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution comprises: acquiring related information of the to-be-expanded resource in the resource pool; and sending the related information of the to-be-expanded resource to a third-party program of the to-be-processed application through a deployment interface configured for the to-be-processed application, so that the third-party program deploys the to-be-executed data packet on the to-be-expanded resource for execution according to a deployment mode of the third-party program.</p><p id="p-0011" num="0010">In some embodiments, the method further comprises executing a post script of the to-be-processed application, the post script being used for at least one of: returning an expansion result to a management node of a cluster; creating a volume for an expansion resource in the resource pool; or cleaning garbage generated by the expansion.</p><p id="p-0012" num="0011">In some embodiments, the method further comprises: establishing an Secure Shell (SSH) connection with the to-be-expanded resource, for executing a related script of the corresponding application, only one SSH connection being established with the to-be-expanded resource at a time.</p><p id="p-0013" num="0012">In some embodiments, the method further comprises: after the execution of the to-be-executed data packet of the corresponding application is finished, reserving the SSH connection within a preset time period.</p><p id="p-0014" num="0013">In some embodiments, the method further comprises: in the case where the to-be-controlled resource is a to-be-contracted resource, determining whether there is important data in the to-be-contracted resource and whether there is a service dependent on the to-be-contracted resource; and in the case where there is no important data and there is no service dependent on the to-be-contracted resource, removing the to-be-contracted resource from the cluster.</p><p id="p-0015" num="0014">In some embodiments, acquired related information of the to-be-contracted resource is transferred through a configured contraction interface, the acquired related information being used in the removal of the to-be-contracted resource from the cluster.</p><p id="p-0016" num="0015">In some embodiments, the control method further comprises: acquiring a contraction result by polling a configured query interface.</p><p id="p-0017" num="0016">In some embodiments, the method further comprises: after the to-be-contracted resource is removed from the cluster, in the case where the to-be-contracted resource is a physical machine, adding the to-be-contracted resource into the resource pool; and in the case where the to-be-contracted resource is a container image, destroying the container image and adding the to-be-contracted resource into the resource pool.</p><p id="p-0018" num="0017">In some embodiments, the method further comprises: in the case where the to-be-contracted resource is the physical machine, executing a post script of the contraction, the post script being used for starting an installation process to perform operating system reinstallation on the to-be-contracted resource.</p><p id="p-0019" num="0018">According to other embodiments of the present disclosure, there is provided a control apparatus of cluster resources, comprising: a determination unit configured to determine, in the case where a to-be-controlled resource is a to-be-expanded resource, a binding relationship between the to-be-expanded resource and an application; an addition unit configured to add the to-be-expanded resource that is initialized into a resource pool of the application having the binding relationship with the to-be-expanded resource; a generation unit configured to generate, according to a deployment type of a to-be-processed application, a to-be-executed data packet of the to-be-processed application; and an execution unit configured to deploy the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution.</p><p id="p-0020" num="0019">In some embodiments, the addition unit transfers related information of the to-be-expanded resource to a pre-script of the corresponding application, and executes the pre-script to complete the initialization of the to-be-expanded resource.</p><p id="p-0021" num="0020">In some embodiments, in the case where the deployment type is package deployment, it is determined that the to-be-expanded resource is a physical machine, and the generation unit generates a program package of the to-be-processed application as a to-be-executed data packet; and in the case where the deployment type is image deployment, it is determined that the to-be-expanded resource is a container image, the generation unit generates a program package of the to-be-processed application, and generates the to-be-executed data packet according to the program package and a running image of the to-be-processed application.</p><p id="p-0022" num="0021">In some embodiments, the execution unit sends, in the case where the to-be-expanded resource is the physical machine, the to-be-executed data packet to the physical machine for execution; and the execution unit sends, in the case where the to-be-expanded resource is the container image, the to-be-executed data packet to an idle physical machine in a resource pool having the binding relationship with the to-be-processed application for execution.</p><p id="p-0023" num="0022">In some embodiments, the execution unit acquires related information of the to-be-expanded resource in the resource pool, and sends the related information of the to-be-expanded resource to a third-party program of the to-be-processed application through a deployment interface configured for the to-be-processed application, the related information being used in the deployment of the to-be-executed data packet on the to-be-expanded resource for execution by the third-party program according to a deployment mode of the third-party program.</p><p id="p-0024" num="0023">In some embodiments, the execution unit executes a post script of the to-be-processed application, the post script being used for at least one of: returning an expansion result to a management node of a cluster; creating a volume for an expansion resource in the resource pool; or cleaning garbage generated by the expansion.</p><p id="p-0025" num="0024">In some embodiments, the apparatus further comprises an establishment unit configured to establish an SSH connection with the to-be-expanded resource, the SSH connection being used for executing a related script of the corresponding application, only one SSH connection being established with the to-be-expanded resource at a time.</p><p id="p-0026" num="0025">In some embodiments, the establishment unit reserves the SSH connection within a preset time period after the execution of the to-be-executed data packet of the corresponding application is finished.</p><p id="p-0027" num="0026">In some embodiments, the apparatus further comprises a contraction unit configured to determine, in the case where the to-be-controlled resource is a to-be-contracted resource, whether there is important data in the to-be-controlled resource and whether there is a service dependent on the to-be-contracted resource; and the contraction unit removes the to-be-contracted resource from the cluster in the case where there is no important data and there is no service dependent on the to-be-contracted resource.</p><p id="p-0028" num="0027">In some embodiments, the contraction unit transfers acquired related information of the to-be-contracted resource through a configured contraction interface, the acquired related information being used in the removal of the to-be-contracted resource from the cluster.</p><p id="p-0029" num="0028">In some embodiments, the contraction unit acquires a contraction result by polling a configured query interface.</p><p id="p-0030" num="0029">In some embodiments, after the contraction unit removes the to-be-contracted resource from the cluster, in the case where the to-be-contracted resource is a physical machine, the addition unit adds the to-be-contracted resource into the resource pool; and in the case where the to-be-contracted resource is a container image, the contraction unit destroys the container image, and the addition unit adds the to-be-contracted resource into the resource pool.</p><p id="p-0031" num="0030">In some embodiments, in the case where the to-be-contracted resource is the physical machine, the execution unit executes a post script of the contraction, the post script being used for starting an installation process to perform operating system reinstallation on the to-be-contracted resource.</p><p id="p-0032" num="0031">According to still other embodiments of the present disclosure, there is provided a control apparatus of cluster resources, comprising: a memory; and a processor coupled to the memory, the processor being configured to perform, based on instructions stored in the memory, the control method of cluster resources in any of the above embodiments.</p><p id="p-0033" num="0032">According to further embodiments of the present disclosure, there is provided a non-volatile computer-readable storage medium having thereon stored a computer program which, when executed by a processor, implements the control method of cluster resources in any of the above embodiments.</p><p id="p-0034" num="0033">According to still further embodiments of the present disclosure, there is provided a cloud computing system, comprising: a control apparatus of cluster resources, which is configured to perform the control method of cluster resources in any of the above embodiments.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0035" num="0034">The accompanying drawings described herein are used for providing a further understanding of the present disclosure and constitute a part of this application, and illustrative embodiments of the present disclosure and their description are used for explaining the present disclosure and do not constitute an improper limitation on the present disclosure. In the drawings:</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a flow diagram of some embodiments of a control method of cluster resources according to the present disclosure;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a flow diagram of other embodiments of a control method of cluster resources according to the present disclosure;</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a schematic diagram of some embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a flow diagram of still other embodiments of a control method of cluster resources according to the present disclosure;</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a schematic diagram of other embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a schematic diagram of still other embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a schematic diagram of some embodiments of a control method of cluster resources according to the present disclosure;</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a schematic diagram of further embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a schematic diagram of further embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a block diagram of some embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a block diagram of other embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a block diagram of still other embodiments of a control apparatus of cluster resources according to the present disclosure;</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a block diagram of some embodiments of a control system of cluster resources according to the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0049" num="0048">The technical solutions in the embodiments of the present disclosure will be clearly and completely described below in conjunction with the accompanying drawings in the embodiments of the present disclosure, and it is obvious that the embodiments described are only some of the embodiments of the present disclosure, rather than all of them. The following description of at least one exemplary embodiment is merely illustrative in nature and in no way serves as any limitation on this disclosure and its application or use. All other embodiments, which can be derived by one of ordinary skill in the art from the embodiments in the present disclosure without making creative labor, fall within the protection scope of the present disclosure.</p><p id="p-0050" num="0049">The relative arrangements, numerical expressions and numerical values of components and steps set forth in these embodiments do not limit the scope of the present disclosure unless otherwise specified. Meanwhile, it should be understood that sizes of various portions shown in the drawings are not drawn to actual scales for ease of description. A technique, method, and device known to one of ordinary skill in the related art may not be discussed in detail but should be regarded as part of the granted specification where appropriate. In all examples shown and discussed herein, any specific value should be construed as exemplary only and not as limiting. Therefore, other examples of the exemplary embodiments can have different values. It should be noted that: similar reference numbers and letters refer to similar items in the following drawings, and therefore, once a certain item is defined in one drawing, it need not be discussed further in subsequent drawings.</p><p id="p-0051" num="0050">The inventors of the present disclosure have found that, the related art described above has the following problem: the resource expansion cannot be applied to different business applications, thereby resulting in poor applicability.</p><p id="p-0052" num="0051">In view of this, the present disclosure provides a technical solution for controlling cluster resources, capable of improving the applicability of the resource expansion.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a flow diagram of some embodiments of a control method of cluster resources according to the present disclosure.</p><p id="p-0054" num="0053">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the method comprises: step S<b>11</b>, determining a binding relationship; step S<b>12</b>, adding a to-be-expanded resource; step S<b>13</b>, generating a to-be-executed data packet; and step S<b>14</b>, deploying the to-be-executed data packet.</p><p id="p-0055" num="0054">In the step S<b>11</b>, in the case where a to-be-controlled resource is the to-be-expanded resource, the binding relationship between the to-be-expanded resource and a corresponding application is determined. For example, the to-be-expanded resource can be a physical machine or a container image.</p><p id="p-0056" num="0055">In the step S<b>12</b>, the to-be-expanded resource that is initialized is added into a resource pool of the corresponding application according to the binding relationship.</p><p id="p-0057" num="0056">In some embodiments, related information of the to-be-expanded resource is transferred to a pre-script of the corresponding application; and the pre-script is executed to complete the initialization of the to-be-expanded resource.</p><p id="p-0058" num="0057">In the step S<b>13</b>, according to a deployment (provisioning) type of a to-be-processed application, the to-be-executed data packet of the to-be-processed application is generated.</p><p id="p-0059" num="0058">In some embodiments, in the case where the deployment type is package deployment, a program package of the to-be-processed application is generated as the to-be-executed data packet. In this case, the to-be-expanded resource is a physical machine.</p><p id="p-0060" num="0059">In some embodiments, in the case where the deployment type is image deployment, a program package of the to-be-processed application is generated, and the to-be-executed data packet is generated according to the program package and a running image of the to-be-processed application. In this case, the to-be-expanded resource is a container image.</p><p id="p-0061" num="0060">In the step S<b>14</b>, the to-be-executed data packet is deployed on the corresponding to-be-expanded resource in the resource pool of the to-be-processed application for execution.</p><p id="p-0062" num="0061">In some embodiments, in the case where the to-be-expanded resource is the physical machine, the to-be-executed data packet is sent to the physical machine for execution; and in the case where the to-be-expanded resource is the container image, the to-be-executed data packet is sent to an idle physical machine in a corresponding resource pool (standby pool) for execution. For example, a standby pool is a standby physical machine resource pool in a cloud computing system.</p><p id="p-0063" num="0062">In some embodiments, related information of the to-be-expanded resource is acquired; the related information of the to-be-expanded resource is sent to a third-party program of the to-be-processed application through a deployment interface configured for the to-be-processed application; and the third-party program deploys the to-be-executed data packet on the to-be-expanded resource for execution according to a deployment mode of the third-party program.</p><p id="p-0064" num="0063">In some embodiments, a post script of the to-be-processed application is executed, the post script being used for at least one of: returning an expansion result to a management node of a cluster; creating a corresponding volume for a corresponding expansion resource; and cleaning garbage generated by the expansion.</p><p id="p-0065" num="0064">In some embodiments, an SSH connection with each to-be-expanded resource is established, for executing each related script of the corresponding application, only one SSH connection being established with each to-be-expanded resource at a time.</p><p id="p-0066" num="0065">In some embodiments, after the execution of the to-be-executed data packet of the corresponding application is finished, the SSH connection is reserved within a preset time period, so that the SSH connection will be reused when the to-be-executed data packet of the corresponding application is executed next time.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a flow diagram of other embodiments of a control method of cluster resources according to the present disclosure.</p><p id="p-0068" num="0067">As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the method further comprises: step S<b>21</b>, determining important data and a dependent service; and step S<b>22</b>, removing a to-be-contracted resource.</p><p id="p-0069" num="0068">In the step S<b>21</b>, in the case where the to-be-controlled resource is the to-be-contracted resource, it is determined whether there is important data in the to-be-contracted resource and whether there is a service dependent on the to-be-contracted resource.</p><p id="p-0070" num="0069">In the step S<b>22</b>, in the case where there is no important data and there is no service dependent on the to-be-contracted resource, the to-be-contracted resource is removed from the cluster.</p><p id="p-0071" num="0070">In some embodiments, acquired related information of the to-be-contracted resource can be transferred in the system through a configured contraction interface, so that the to-be-contracted resource is removed from the cluster; and a contraction result is acquired by polling a configured query interface.</p><p id="p-0072" num="0071">In some embodiments, in the case where the to-be-contracted resource is a physical machine, the to-be-contracted resource is added into the resource pool (standby pool); and in the case where the to-be-contracted resource is a container image, the container image is destroyed and the to-be-contracted resource is added into the resource pool.</p><p id="p-0073" num="0072">In some embodiments, in the case where the to-be-contracted resource is the physical machine, a post script of the contraction is executed. The post script is used for starting an installation process to perform operating system reinstallation on the to-be-contracted resource. For example, reinstallation can be implemented by PXE (Preboot eXecution Environment).</p><p id="p-0074" num="0073">In the above embodiment, the data packet of the application is deployed on the corresponding to-be-expanded resource for execution according to the binding relationship between the to-be-expanded resource and the application. In this way, the method can be applied to the resource expansion of different business applications, so that the applicability of the resource expansion is improved.</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a schematic diagram of some embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0076" num="0075">As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a user can, through a front-end web page, interact with a back-end expansion (or contraction) controller (i.e., the control apparatus). For example, the front-end Web page can be implemented by a Nginx (engine x) server; and the control apparatus can be implemented in a Golang programming language.</p><p id="p-0077" num="0076">An internal structure of the control apparatus can be a unified resource control system directed to a complex proprietary cloud cluster and supporting multi-component concurrent expansion and contraction. Each business line script can be connected with the control apparatus.</p><p id="p-0078" num="0077">For example, the control apparatus can comprise a plurality of modules such as a multi-component expansion and contraction controller, a heterogeneous component resource management module, a concurrent expansion and contraction executor, a unified component construction system, a multi-component deployment system, and a component contraction recovery system.</p><p id="p-0079" num="0078">In some embodiments, the multi-component expansion and contraction controller (for example, comprising a determination unit, an addition unit, etc.) is responsible for controlling overall expansion and contraction processes. For example, the multi-component expansion and contraction controller can coordinate the work of other modules; control and call each module used in the expansion and contraction; and provide necessary data parameters.</p><p id="p-0080" num="0079">In some embodiments, the heterogeneous component resource management module is responsible for managing all metadata required in the expansion and contraction processes. For example, metadata comprises a server (physical machine resource) management IP (Internet Protocol), a server specification parameter, expansion and contraction application data, and the like.</p><p id="p-0081" num="0080">For example, the heterogeneous component resource management module can persistently store data using a relational database MySQL (My Structured Query Language).</p><p id="p-0082" num="0081">For example, the heterogeneous component resource management module can be deployed independently, and provide an OpenAPI (Open Application Programming Interface) call interface to the outside.</p><p id="p-0083" num="0082">In some embodiments, the concurrent expansion and contraction executor (which can comprise, for example, an execution unit, an establishment unit, and the like) is responsible for executing scripts that need to be run by various resource servers at different stages.</p><p id="p-0084" num="0083">For example, a bottom layer of the concurrent expansion and contraction executor can be a connection pool implemented based on an SSH protocol. The concurrent expansion and contraction executor can be implemented by a Golang programming language to guarantee high concurrency. The concurrent expansion and contraction executor can establish an SSH connection between the control apparatus and the to-be-expanded resource.</p><p id="p-0085" num="0084">For example, the concurrent expansion and contraction executor can execute customized expansion and contraction processes. For example, for related applications of IaaS (Infrastructure as a Service), the customized expansion and contraction processes can be executed.</p><p id="p-0086" num="0085">For example, the concurrent expansion and contraction executor can execute normalized expansion and contraction processes. For example, for related applications of other services than big data, cloud storage, and IaaS, the customized expansion and contraction processes can be executed.</p><p id="p-0087" num="0086">For example, the concurrent expansion and contraction executor can trigger the unified component construction system, the multi-component deployment system, and the component contraction recovery system. The unified component construction system, the multi-component deployment system and the component contraction recovery system perform related expansion and contraction processes on a cluster of the cloud computing system.</p><p id="p-0088" num="0087">In some embodiments, the unified component construction system (which can comprise, for example, a generation unit) is responsible for compiling source code online-deployed by each resource server; and preparing, based on a Docker container, different compilation environments for different resource servers. The unified component construction system can implement the isolation of the compilation environment, so that dependent services required by the compilation are not interfered with each other, and therefore, the smoothness of the compilation is ensured.</p><p id="p-0089" num="0088">In some embodiments, the multi-component deployment system (which can comprise, for example, an execution unit) is responsible for online-deploying a compiled program to a specified physical server or container.</p><p id="p-0090" num="0089">For example, the multi-component deployment system can comprise package deployment and image deployment. The package deployment can online-deploy a compiled program to a specified physical machine; and the image deployment can deploy and start a container, according to a running image packed during the compilation and according to the required resource (comprising the number of CPU cores, a memory size, a hard disk size and the like, which are required by the running).</p><p id="p-0091" num="0090">In some embodiments, the component contraction recovery system (which can comprise, for example, a contraction unit, an addition unit) is responsible for recovering a contracted resource.</p><p id="p-0092" num="0091">For example, a recovered container resource will be put into the resource pool again, and a recovered physical machine will be put into a standby pool. The component contraction recovery system will destroy the container resource, and reinstall the recovered physical machine and format its data disk.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a flow diagram of still other embodiments of a control method of cluster resources according to the present disclosure.</p><p id="p-0094" num="0093">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the method can comprise an expansion flow (the left flow in the figure) and a contraction flow (the right flow in the figure). The expansion flow can comprise a normalized expansion flow and a customized expansion flow; the contraction flow can comprise a normalized contraction flow and a customized contraction flow.</p><p id="p-0095" num="0094">For example, expansion and contraction processes of various resource nodes (such as MySQL resource nodes, mass storage resource nodes, and the like) related to IaaS and a cloud database product all belong to customized expansion and contraction flows; and expansion and contraction processes of various resource nodes (such as resource node ds2-datanode and big data resource node datanode) related to cloud storage and data cloud all belong to normalized expansion and contraction flows.</p><p id="p-0096" num="0095">The expansion and contraction flows of the above products need to pass through the following three common flows: allocating usage (namely, binding to-be-expanded and to-be-contracted resources to corresponding product applications), executing a pre-script and executing a post script. These common flows can be extracted to establish a resource control method with high applicability.</p><p id="p-0097" num="0096">In some embodiments, the normalized expansion flow mainly comprises: mounting a to-be-expanded standby machine (resource) into a standby pool of a specified product application; compiling and constructing a program package or running image of the application; deploying the program package or the image to a server in the standby pool; and polling a deployment result. For example, an expansion flow for a data cloud product is mainly for a big data resource node datanode, and the normalized expansion flow can comprise the following steps.</p><p id="p-0098" num="0097">In step 1, a usage is allocated for a to-be-expanded host. For example, a tag of a big data resource node datanode is allocated for a to-be-expanded server (resource), so that the binding between the to-be-expanded resource and an application is realized.</p><p id="p-0099" num="0098">In step 2, a pre-script is executed. For example, the multi-component expansion and contraction controller can, by calling a preset script (pre-script) of a data cloud in a FTP (File Transfer Protocol) directory of a control machine, transfer an IP list of a to-be-expanded server to the preset script as a command line parameter. For example, the control machine can be a computer running the control method of the present disclosure in a cluster.</p><p id="p-0100" num="0099">By executing the expansion script, the initialization of the to-be-expanded server can be completed. The preset script is mainly responsible for initializing the expanded physical machine, for example, installing some basic software packages.</p><p id="p-0101" num="0100">In step 3, a to-be-expanded host is mounted. For example, a to-be-expanded physical machine is mounted into a standby pool of a corresponding product line in a product service tree, to facilitate unified allocation of resources. For example, according to related information of a to-be-deployed product in a cloud computing system, a to-be-expanded resource can be added into a resource pool of a product line to which a bound application belongs.</p><p id="p-0102" num="0101">In some embodiments, related information of a to-be-deployed product in the cloud computing system can be stored in a tree structure. It can be stored, for example, according to a five-level tree structure of department, product line, product, system, application.</p><p id="p-0103" num="0102">In step 4, a data packet is compiled and constructed. For example, according to a deployment type of an application, a program package of the application is compiled and constructed. If it is packet deployment that is used by a big data resource node datanode, a corresponding program packet is compiled as a to-be-processed data packet; and for image deployment, the program package and a running image are packaged together to generate a to-be-processed data packet. The compiled and constructed program package is transferred onto a bound to-be-expanded machine in a standby pool, and a starting script is executed.</p><p id="p-0104" num="0103">In step 5, an expansion result is polled. For example, the deployment can be regularly polled, and a deployment result can be recorded in a deployment unit of CMDB (Configuration Management Database) of an information management module. A Web front-end can inquire the deployment result through an API interface and present the deployment result to the user.</p><p id="p-0105" num="0104">In step 6, a post script is executed to process post-expansion affairs. For example, the post script can notify a management node in a cluster of an expanded resource node, so that the expansion of the cluster is completed.</p><p id="p-0106" num="0105">In some embodiments, for a cloud storage expansion flow, the expansion of a resource node ds2-datanode is mainly completed, and its flow steps are similar to those of the above data cloud. However, the post script of the cloud storage expansion flow can perform a process of creating a volume.</p><p id="p-0107" num="0106">In some embodiments, the normalized contraction flow can comprise business data check, dependent service check, removal out of cluster, resource recovery, polling result, executing post script. For example, the normalized contraction flow can comprise the following steps.</p><p id="p-0108" num="0107">In step 1, the business data check is performed on the to-be-contracted resource to determine whether there is important data in the to-be-contracted resource. If there is important data, the to-be-contracted resource does not support the contraction.</p><p id="p-0109" num="0108">In step 2, the dependent service check is performed on the to-be-contracted resource to determine whether there is a service that depends on the to-be-contracted resource for running. If there is dependent service, the to-be-contracted resource does not support the contraction.</p><p id="p-0110" num="0109">In step 3, the management node of the cluster is notified of removing the to-be-contracted resource out of the cluster.</p><p id="p-0111" num="0110">In step 4, the component contraction recovery system is called to recover the contracted resource.</p><p id="p-0112" num="0111">In step 5, a contraction result is polled.</p><p id="p-0113" num="0112">In step 6, a post script is executed to process post-contraction affairs. For example, a PXE installation operation for resource recovery can be triggered.</p><p id="p-0114" num="0113">In some embodiments, the customized expansion flow can comprise: mounting a to-be-expanded standby machine into a standby pool of a specified product application; providing, by a third party, its own expansion program (third-party program), wherein the expansion program provides two normalized expansion interfaces, namely a triggering-expansion interface (deployment interface) and a querying-expansion-result interface (query interface); the multi-component expansion and contraction controller calls the triggering-expansion interface to transfer information of the to-be-expanded standby machine in a form of parameters; polling the expansion result through the querying-expansion-result interface.</p><p id="p-0115" num="0114">For example, for an application of an IaaS product, a customized expansion flow can be realized by the following steps.</p><p id="p-0116" num="0115">In step 1, a usage is allocated to a to-be-expanded host. For example, a tag of a resource node of an IaaS product application is allocated for a to-be-expanded server.</p><p id="p-0117" num="0116">In step 2, a pre-script is executed. For example, the multi-component expansion and contraction controller calls a preset script of a data cloud in a FTP directory of a control machine, and transfers an IP list of an expansion machine as a command line parameter to the preset script; and executes an expansion script to complete the initialization of the machine. The preset script is mainly responsible for initializing the expanded physical machine, for example, installing some basic software packages.</p><p id="p-0118" num="0117">In step 3, the to-be-expanded host is mounted. For example, a to-be-expanded physical machine is mounted into a standby pool of a corresponding product line in a service tree of a product, for unified acquisition by a third-party program.</p><p id="p-0119" num="0118">In step 4, the to-be-expanded host is transferred. For example, the multi-component expansion and contraction controller triggers a deployment interface of IaaS, and acquires related information of a to-be-expanded server from CMDB of an information management module; the related information is transferred to the IaaS product in a form of parameters; an IaaS product deployment program acquires the to-be-expanded server deployed from the standby pool; and an IaaS deployment service deploys IaaS product online according to self-owned business.</p><p id="p-0120" num="0119">In step 5, a polling interface is called. For example, the multi-component expansion and contraction controller regularly polls an expansion result of IaaS; the deployment result is recorded into a deployment unit of CMDB of an information management module; and a Web front-end can query the deployment result through an API interface and present the deployment result to a user.</p><p id="p-0121" num="0120">In step 6, a post script is executed. This step can be empty if the product does not have the post script.</p><p id="p-0122" num="0121">In some embodiments, the customized contraction flow can comprise business data check, dependent service check, calling customized contraction interface, polling contraction result, recovering resource to resource pool or standby pool, and executing post script. For example, the customized contraction flow can be realized by the following steps.</p><p id="p-0123" num="0122">In step 1, business data check is performed on the to-be-contracted resource to determine whether there is important data in the to-be-contracted resource. If there is important data, the to-be-contracted resource does not support the contraction.</p><p id="p-0124" num="0123">In step 2, dependent service check is performed on the to-be-contracted resource to determine whether there is a service that depends on the to-be-contracted resource for running. If there is dependent service, the to-be-contracted resource does not support the contraction.</p><p id="p-0125" num="0124">In step 3, the customized contraction interface is called to transfer related information of the to-be-contracted resource.</p><p id="p-0126" num="0125">In step 4, the customized contraction result interface (query interface) is polled to acquire a contraction result.</p><p id="p-0127" num="0126">In step 5, the recovered resource is put into the resource pool or the standby pool.</p><p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a schematic diagram of other embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0129" num="0128">As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the heterogeneous component resource management module is mainly composed of a service layer and a data layer, and provides metadata to other service modules and a Web front-end UI (User Interface) through an Http (HyperText Transfer Protocol) API. A supervisor can perform service supervision on the heterogeneous component resource management module.</p><p id="p-0130" num="0129">In some embodiments, the service layer can comprise an API server, a server information management unit, a container information management unit, a product information management unit, a compilation information management unit, and a deployment information management unit.</p><p id="p-0131" num="0130">For example, the API Server can be a Http Server developed based on Golang. The API server provides a Restful (Representational State Transfer) style interface to the outside, and is responsible for providing internally managed data to a user safely and legally.</p><p id="p-0132" num="0131">For example, the server information management unit is mainly responsible for managing all physical machine information in a cluster. The physical machine information can comprise a management node server, a used resource node server and a standby machine of a to-be-expanded/contracted resource. The server information management unit can manage full server information, and can provide necessary information for subsequent deployment, configuration and recovery of the servers.</p><p id="p-0133" num="0132">For example, the container information management unit is responsible for managing information of all container within a cluster. The container information can comprise the number of CPU cores, a memory size, a hard disk size, which are used when a container runs, and a physical machine to which the container belongs, a product application, and the like.</p><p id="p-0134" num="0133">For example, the product information management unit is responsible for managing information of products deployed within a proprietary cloud. The product information can adopt a tree structure. The tree structure can be divided according to a five-level structure of department, product line, product, system and application. Before expansion and contraction, it is needed to allocate a to-be-expanded/contracted physical machine to a specific system application, to facilitate centralized management of the expansion and contraction flows.</p><p id="p-0135" num="0134">For example, the compilation information management unit is responsible for managing a compilation program of each product application. The compilation information management unit can be developed based on Jenkins, and support automatically pulling code from a source code repository (gitlab). The compilation information management unit can, according to configuration information, compile and construct a binary program or image (comprising a running image and a program package) of an application.</p><p id="p-0136" num="0135">For example, a deployment information management unit is responsible for deploying a compiled program package or a packaged image to a specified physical machine or container, and recording all deployment records.</p><p id="p-0137" num="0136">The data layer can comprise a master storage node, a slave storage node, and a memory. The master storage node stores various information sent by the service layer and synchronously backs up the information to the slave storage node. For example, data in the master storage node can be regularly backed up into a memory, so that backup data is acquired in the case where both the master storage node and the slave storage node are polluted.</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a schematic diagram of still other embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0139" num="0138">As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the multi-component expansion and contraction controller can be a SSH controller constructed by Golang. Each business line script can be connected with the internal structure of the multi-component expansion and contraction controller.</p><p id="p-0140" num="0139">In some embodiments, the multi-component expansion and contraction controller, when executing the pre-script and the post script, needs the help of the concurrent expansion and contraction executor. For example, a bottom layer of the concurrent expansion and contraction executor is a Golang-based high-performance SSH concurrent connection pool, in which SSH connections with various to-be-expanded resources are included.</p><p id="p-0141" num="0140">For example, on the basis of the connection pool, a series of operation interfaces for connecting physical machines, executing script commands, and the like can be encapsulated. Due to the high concurrency characteristic of the Golang language, combined with the above connection pool, large-scale concurrent operations on the server and the container can be ensured, so that the efficiency of the execution of expansion and contraction is improved.</p><p id="p-0142" num="0141">For example, in order to ensure operation safety, the connection pool only establishes one SSH connection for each to-be-expanded or to-be-contracted resource (physical machine, container image), and regularly cleans an expired SSH connection.</p><p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a schematic diagram of some embodiments of a control method of cluster resources according to the present disclosure.</p><p id="p-0144" num="0143">As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the method comprises: submitting, by a user, related code to a git distributed version control system; triggering, by the git, the Jenkins to automate the compilation, construction and online deployment flows of the server. For example, the triggering of the compilation and construction flow can comprise manual triggering, and automatic triggering after a user submits code.</p><p id="p-0145" num="0144">Jenkins performs compilation construction and compilation image through Docker, and performs online deployment. For example, a program package or program image can be produced based on a type of the application. If it is packet deployment that is used by a big data resource node datanode, only a program package is produced by compilation construction, and a running image is not included; and if it is a image deployment type, the program package and the running image can be packaged together into the program image.</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a schematic diagram of further embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0147" num="0146">As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, after an application program is compiled and constructed, the multi-component expansion and contraction controller transfers, through the concurrent expansion and contraction executor, the data packet compiled and constructed by the unified component construction system to the to-be-expanded physical machine or the idle machine in the resource pool, according to the type of the expansion application.</p><p id="p-0148" num="0147">In the case of performing expansion on a physical machine program package, the multi-component deployment system executes a starting script, deploys the program package on a physical machine of the proprietary cloud cluster for running, and checks an execution state; and in the case of program image deployment, the multi-component deployment system starts a image and checks a running state of a container of the proprietary cloud cluster.</p><p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates a schematic diagram of further embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0150" num="0149">As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the component contraction recovery system performs container resource recovery and physical machine resource recovery according to the type of the application deployment. In the case where the recovered application is a physical machine of the proprietary cloud cluster, the component contraction recovery system adds the physical machine into the standby pool and calls PXE to reinstall the system; and in the case where the recovered application is a program image (container) of the proprietary cloud cluster, the component contraction recovery system will destroy the container and recover the resource to the resource pool.</p><p id="p-0151" num="0150">In some embodiments, before the contraction, the component contraction recovery system needs to check whether there already has business data in the contraction server or the container; moreover, the component contraction recovery system needs to check whether the contraction server or the container has deployed a service on which another application is dependent. In the case where there is the business data or dependent service, the component contraction recovery system exits the contraction process.</p><p id="p-0152" num="0151">In some embodiments, in order to clean the deployed service on the physical machine, the component recovery system can start a PXE installation process, and after operating system reinstallation is performed on the contraction physical machine and its data disk is formatted, the contraction resource is put into the standby pool; or after the container is destroyed, the contraction resource is put into the resource pool.</p><p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a block diagram of some embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0154" num="0153">As shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the control apparatus <b>10</b> of cluster resources comprises a determination unit <b>101</b>, an addition unit <b>102</b>, a generation unit <b>103</b>, and an execution unit <b>104</b>.</p><p id="p-0155" num="0154">The determination unit <b>101</b> determines, in the case where a to-be-controlled resource is a to-be-expanded resource, a binding relationship between the to-be-expanded resource and a corresponding application.</p><p id="p-0156" num="0155">The addition unit <b>102</b> adds the to-be-expanded resource that is initialized into a resource pool of the corresponding application according to the binding relationship.</p><p id="p-0157" num="0156">In some embodiments, the addition unit <b>102</b> transfers related information of the to-be-expanded resource to a pre-script of the corresponding application, and executes the pre-script to complete the initialization of the to-be-expanded resource.</p><p id="p-0158" num="0157">The generation unit <b>103</b> generates, according to a deployment type of a to-be-processed application, a to-be-executed data packet of the to-be-processed application.</p><p id="p-0159" num="0158">In some embodiments, in the case where the deployment type is package deployment, the to-be-expanded resource is a physical machine, and the generation unit <b>103</b> generates a program package of the to-be-processed application as the to-be-executed data packet; in the case where the deployment type is image deployment, the to-be-expanded resource is a container image, the generation unit <b>103</b> generates a program package of the to-be-processed application, and generates the to-be-executed data packet according to the program package and a running image of the to-be-processed application.</p><p id="p-0160" num="0159">The execution unit <b>104</b> deploys the to-be-executed data packet on the corresponding to-be-expanded resource in the resource pool of the to-be-processed application for execution.</p><p id="p-0161" num="0160">In some embodiments, the execution unit <b>104</b>, in the case where the to-be-expanded resource is the physical machine, sends the to-be-executed data packet to the physical machine for execution; the execution unit <b>104</b>, in the case where the to-be-expanded resource is the container image, sends the to-be-executed data packet to an idle physical machine in a corresponding resource pool for execution.</p><p id="p-0162" num="0161">In some embodiments, the execution unit <b>104</b> acquires the related information of the to-be-expanded resource, and sends the related information of the to-be-expanded resource to a third-party program of the to-be-processed application through a deployment interface configured for the to-be-processed application, so that the third-party program deploys the to-be-executed data packet on the to-be-expanded resource for execution according to a deployment mode of the third-party program.</p><p id="p-0163" num="0162">In some embodiments, the execution unit <b>104</b> executes a post script of the to-be-processed application, the post script being used for at least one of: returning an expansion result to a management node of a cluster; creating a corresponding volume for the corresponding expansion resource; or cleaning garbage generated by the expansion.</p><p id="p-0164" num="0163">In some embodiments, the control apparatus <b>10</b> of the cluster resources further comprises an establishment unit <b>105</b> configured to establish an SSH connection with the to-be-expanded resource. The SSH connection is used for executing related script of the corresponding application. The establishment unit <b>105</b> can establish only one SSH connection with the to-be-expanded resource at a time.</p><p id="p-0165" num="0164">In some embodiments, the establishment unit <b>105</b> reserves the SSH connection within a preset time period after the execution of the to-be-executed data packet of the corresponding application is finished.</p><p id="p-0166" num="0165">In some embodiments, the control apparatus <b>10</b> of cluster resources further comprises a contraction unit <b>106</b> configured to determine, in the case where the to-be-controlled resource is a to-be-contracted resource, whether there is important data in the to-be-contracted resource and whether there is a service dependent on the to-be-contracted resource; and the contraction unit <b>106</b> removes, in the case where there is no important data and there is no service dependent on the to-be-contracted resource, the to-be-contracted resource from the cluster.</p><p id="p-0167" num="0166">In some embodiments, the contraction unit transfers acquired related information of the to-be-contracted resource through a configured contraction interface, so that the to-be-contracted resource is removed from the cluster.</p><p id="p-0168" num="0167">In some embodiments, the contraction unit <b>106</b> acquires a contraction result by polling a configured query interface.</p><p id="p-0169" num="0168">In some embodiments, after the contraction unit <b>106</b> removes the to-be-contracted resource from the cluster, in the case where the to-be-contracted resource is a physical machine, the addition unit <b>102</b> adds the to-be-contracted resource into the resource pool; in the case where the to-be-contracted resource is a container image, the contraction unit <b>106</b> destroys the container image, and the addition unit adds the to-be-contracted resource into the resource pool.</p><p id="p-0170" num="0169">In some embodiments, in a case where the to-be-contracted resource is the physical machine, the execution unit <b>104</b> executes a post script of the contraction, the post script being used to start an installation process to perform operating system reinstallation on the to-be-contracted resource.</p><p id="p-0171" num="0170">In the above embodiments, the data packet of the application is deployed on the to-be-expanded resource for execution according to the binding relationship between the to-be-expanded resource and the application. In this way, the apparatus can be applied to the resource expansion of different business applications, so that the applicability of the resource expansion is improved.</p><p id="p-0172" num="0171"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates a block diagram of other embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0173" num="0172">As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the control apparatus <b>11</b> of cluster resources of this embodiment comprises: a memory <b>111</b> and a processor <b>112</b> coupled to the memory <b>111</b>, the processor <b>112</b> being configured to perform, based on instructions stored in the memory <b>111</b>, the control method of cluster resources in any of the embodiments of the present disclosure.</p><p id="p-0174" num="0173">The memory <b>111</b> can comprise, for example, a system memory, a fixed non-volatile storage medium, and the like. The system memory has thereon stored, for example, an operating system, application, boot loader, database, other programs, and the like.</p><p id="p-0175" num="0174"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates a block diagram of still other embodiments of a control apparatus of cluster resources according to the present disclosure.</p><p id="p-0176" num="0175">As shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the control apparatus <b>12</b> of cluster resources of this embodiment comprises: a memory <b>1210</b> and a processor <b>1220</b> coupled to the memory <b>1210</b>, the processor <b>1220</b> being configured to perform, based on instructions stored in the memory <b>1210</b>, the control method of cluster resources in any of the above embodiments.</p><p id="p-0177" num="0176">The memory <b>1210</b> can comprise, for example, a system memory, fixed non-volatile storage medium, and the like. The system memory has thereon stored, for example, an operating system, application, boot loader, other programs, and the like.</p><p id="p-0178" num="0177">The control apparatus <b>12</b> of cluster resources can further comprise an input/output interface <b>1230</b>, a network interface <b>1240</b>, a storage interface <b>1250</b>, and the like. These interfaces <b>1230</b>, <b>1240</b>, <b>1250</b>, as well as the memory <b>1210</b> and the processor <b>1220</b>, can be connected, for example, through a bus <b>1260</b>. The input/output interface <b>1230</b> provides a connection interface for input/output devices such as a display, a mouse, a keyboard, and a touch screen. The network interface <b>1240</b> provides a connection interface for a variety of networking devices. The storage interface <b>1250</b> provides a connection interface for external storage devices such as an SD card and a USB flash disk.</p><p id="p-0179" num="0178">It should be appreciated by those skilled in the art that, the embodiments of the present disclosure can be provided as a method, system, or computer program product. Accordingly, the present disclosure can take a form of an entire hardware embodiment, an entire software embodiment or an embodiment combining software and hardware aspects. Furthermore, the present disclosure can take a form of a computer program product implemented on one or more computer-available non-transitory storage media having computer-available program code embodied therein.</p><p id="p-0180" num="0179"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates a block diagram of some embodiments of a control system of cluster resources according to the present disclosure.</p><p id="p-0181" num="0180">As shown in <figref idref="DRAWINGS">FIG. <b>13</b></figref>, a cloud computing system <b>13</b> comprises a control apparatus <b>131</b> of cluster resources, which is configured to perform the control method of cluster resources in any of the above embodiments.</p><p id="p-0182" num="0181">It should be appreciated by those skilled in the art that, the embodiments of the present disclosure can be provided as a method, system, or computer program product. Accordingly, the present disclosure can take a form of an entire hardware embodiment, an entire software embodiment or an embodiment combining software and hardware aspects. Furthermore, the present disclosure can take a form of a computer program product implemented on one or more computer-available non-transitory storage media (including, but not limited to, a disk memory, CD-ROM, optical memory, and the like) having computer-available program code embodied therein.</p><p id="p-0183" num="0182">So far, the description has been made in detail according to the present disclosure. Some details well known in the art have not been described in order to avoid obscuring the concepts of the present disclosure. Those skilled in the art can now fully appreciate how to implement the technical solutions disclosed herein, in view of the foregoing description.</p><p id="p-0184" num="0183">The method and system of the present disclosure may be implemented in a number of ways. The method and system of the present disclosure can be implemented, for example, in software, hardware, firmware, or any combination of software, hardware, and firmware. The above order for the steps of the method is for illustration only, and the steps of the method of the present disclosure are not limited to the order specifically described above unless specifically stated otherwise. Furthermore, in some embodiments, the present disclosure can also be implemented as programs recorded in a recording medium, the programs comprising machine-readable instructions for implementing the method according to the present disclosure. Therefore, the present disclosure also covers the recording medium having thereon stored the program for executing the method according to the present disclosure.</p><p id="p-0185" num="0184">Although some specific embodiments of the present disclosure have been described in detail by way of examples, it should be understood by those skilled in the art that the above examples are for illustration only and are not intended to limit the scope of the present disclosure. It should be appreciated by those skilled in the art that modifications can be made to the above embodiments without departing from the scope and spirit of the present disclosure. The scope of the present disclosure is defined by the attached claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A control method of cluster resources, comprising:<claim-text>in the case where a to-be-controlled resource is a to-be-expanded resource, determining a binding relationship between the to-be-expanded resource and an application;</claim-text><claim-text>adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource;</claim-text><claim-text>generating a to-be-executed data packet of a to-be-processed application according to a deployment type of the application; and</claim-text><claim-text>deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the application for execution.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The control method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource comprises:<claim-text>transferring related information of the to-be-expanded resource to a pre-script of the corresponding application; and</claim-text><claim-text>executing the pre-script to complete the initialization of the to-be-expanded resource.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The control method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the generating a to-be-executed data packet of a to-be-processed application comprises:<claim-text>in the case where the deployment type is package deployment, determining that the to-be-expanded resource is a physical machine, and generating a program package of the to-be-processed application as the to-be-executed data packet; and</claim-text><claim-text>in the case where the deployment type is image deployment, determining that the to-be-expanded resource is a container image, generating a program package of the to-be-processed application, and generating the to-be-executed data packet according to the program package and a running image of the to-be-processed application.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The control method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution comprises:<claim-text>in the case where the to-be-expanded resource is the physical machine, sending the to-be-executed data packet to the physical machine for execution; and</claim-text><claim-text>in the case where the to-be-expanded resource is the container image, sending the to-be-executed data packet to an idle physical machine in a resource pool having the binding relationship with the to-be-processed application for execution.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The control method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the application for execution comprises:<claim-text>acquiring related information of the to-be-expanded resource in the resource pool; and</claim-text><claim-text>sending the related information of the to-be-expanded resource to a third-party program of the to-be-processed application through a deployment interface configured for the to-be-processed application, the related information being used in the deployment of the to-be-executed data packet on the to-be-expanded resource for execution by the third-party program according to a deployment mode of the third-party program.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The control method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising executing a post script of the to-be-processed application, the post script being used for at least one of:<claim-text>returning an expansion result to a management node of a cluster;</claim-text><claim-text>creating a volume for an expansion resource in the resource pool; or</claim-text><claim-text>cleaning garbage generated by the expansion.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The control method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>establishing an Secure Shell (SSH) connection with the to-be-expanded resource, for executing a related script of the corresponding application, only one SSH connection being established with the to-be-expanded resource at a time.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The control method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:<claim-text>after the execution of the to-be-executed data packet of the corresponding application is finished, reserving the SSH connection within a preset time period.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The control method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>in the case where the to-be-controlled resource is a to-be-contracted resource, determining whether there is important data in the to-be-contracted resource and whether there is a service dependent on the to-be-contracted resource; and</claim-text><claim-text>in the case where there is no important data and there is no service dependent on the to-be-contracted resource, removing the to-be-contracted resource from the cluster.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The control method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the removing the to-be-contracted resource from the cluster comprises:<claim-text>transferring acquired related information of the to-be-contracted resource through a configured contraction interface, the acquired related information being used in the removal of the to-be-contracted resource from the cluster; and</claim-text><claim-text>the control method further comprises acquiring a contraction result by polling a configured query interface.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The control method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>after the to-be-contracted resource is removed from the cluster, in the case where the to-be-contracted resource is a physical machine, adding the to-be-contracted resource into the resource pool; and</claim-text><claim-text>in the case where the to-be-contracted resource is a container image, destroying the container image and adding the to-be-contracted resource into the resource pool.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The control method according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>in the case where the to-be-contracted resource is the physical machine, executing a post script of contraction, the post script being used for starting an installation process to perform operating system reinstallation on the to-be-contracted resource.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. (canceled)</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A control apparatus of cluster resources, comprising:<claim-text>a memory; and</claim-text><claim-text>a processor coupled to the memory, the processor being configured to perform, based on instructions stored in the memory, the control method of cluster resources comprising:</claim-text><claim-text>in the case where a to-be-controlled resource is a to-be-expanded resource, determining a binding relationship between the to-be-expanded resource and an application;</claim-text><claim-text>adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource;</claim-text><claim-text>generating a to-be-executed data packet of a to-be-processed application according to a deployment type of the application; and</claim-text><claim-text>deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the application for execution.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A cloud computing system, comprising:<claim-text>the control apparatus of cluster resources according to <claim-ref idref="CLM-00014">claim 14</claim-ref>.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A non-volatile computer-readable storage medium having thereon stored a computer program which, when executed by a processor, implements a control method of cluster resources comprising:<claim-text>in the case where a to-be-controlled resource is a to-be-expanded resource, determining a binding relationship between the to-be-expanded resource and an application;</claim-text><claim-text>adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource;</claim-text><claim-text>generating a to-be-executed data packet of a to-be-processed application according to a deployment type of the application; and</claim-text><claim-text>deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the application for execution.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The control apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the adding the to-be-expanded resource that is initialized into a resource pool of a corresponding application having the binding relationship with the to-be-expanded resource comprises:<claim-text>transferring related information of the to-be-expanded resource to a pre-script of the corresponding application; and</claim-text><claim-text>executing the pre-script to complete the initialization of the to-be-expanded resource.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The control apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the generating a to-be-executed data packet of a to-be-processed application comprises:<claim-text>in the case where the deployment type is package deployment, determining that the to-be-expanded resource is a physical machine, and generating a program package of the to-be-processed application as the to-be-executed data packet; and</claim-text><claim-text>in the case where the deployment type is image deployment, determining that the to-be-expanded resource is a container image, generating a program package of the to-be-processed application, and generating the to-be-executed data packet according to the program package and a running image of the to-be-processed application.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The control apparatus according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the to-be-processed application for execution comprises:<claim-text>in the case where the to-be-expanded resource is the physical machine, sending the to-be-executed data packet to the physical machine for execution; and</claim-text><claim-text>in the case where the to-be-expanded resource is the container image, sending the to-be-executed data packet to an idle physical machine in a resource pool having the binding relationship with the to-be-processed application for execution.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The control apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the deploying the to-be-executed data packet on the to-be-expanded resource in the resource pool of the application for execution comprises:<claim-text>acquiring related information of the to-be-expanded resource in the resource pool; and</claim-text><claim-text>sending the related information of the to-be-expanded resource to a third-party program of the to-be-processed application through a deployment interface configured for the to-be-processed application, the related information being used in the deployment of the to-be-executed data packet on the to-be-expanded resource for execution by the third-party program according to a deployment mode of the third-party program.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The control apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to executing a post script of the to-be-processed application, the post script being used for at least one of:<claim-text>returning an expansion result to a management node of a cluster;</claim-text><claim-text>creating a volume for an expansion resource in the resource pool; or</claim-text><claim-text>cleaning garbage generated by the expansion.</claim-text></claim-text></claim></claims></us-patent-application>